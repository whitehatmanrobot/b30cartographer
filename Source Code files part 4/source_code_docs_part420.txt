 TPS' median='yes' />
		<s:counter category='Xbox Live Storage Service' name='EnumerateFiles Total Failed Requests' instance='_total_' graph='TotalandFailed request' median='no' />
		<s:counter category='Xbox Live Storage Service' name='EnumerateFiles Total Requests' instance='_total_' graph='TotalandFailed request' median='no' />
		<s:counter category='Xbox Live Storage Service' name='EnumerateFiles Total Failed Requests' instance='_total_' graph='TotalandFailed request' median='no' />
		<s:counter category='Xbox Live Storage Service' name='EnumerateFiles Average SQL Time' instance='_total_' graph='TotalEnumAvg SQLTime' median='no' />
		<s:counter category='Xbox Live Storage Service' name='EnumerateFiles Failed Requests Per Second' instance='_total_' graph='Failed Request per sec' median='yes' />
		<s:counter category='Xbox Live Storage Service' name='ReadFile Average Bytes Per Request' instance='_total_' graph='Average Bytes' median='no' />
		<s:counter category='Xbox Live Storage Service' name='ReadFile Cache Hits' instance='_total_' graph='readFile Cache' median='no' />
		<s:counter category='Xbox Live Storage Service' name='ReadFile Cache Misses' instance='_total_' graph='readFile Cache' median='no' />
		<s:counter category='Webstore Servers' name='Requests Timeout' instance='StoreDb:xont2storsqlw01' graph='webstore sql timeout' median='no' />
		<s:counter category='Webstore Servers' name='Requests Timeout' instance='StoreDb:xont2storsqlw02' graph='webstore sql timeout' median='no' />
	</s:group>
	<s:group name='WebSG'>
		<s:counter category='XboxLive WebSG' name='Requests / Sec' graph='RequestsPerSec TPS' median='yes' />
		<s:counter category='XboxLive WebSG' name='Failures / Sec' graph='RequestsPerSec TPS' median='yes' />
		<s:counter category='XboxLive WebSG' name='Total Requests' graph='TotalFailed request' median='no' />
		<s:counter category='XboxLive WebSG' name='Total Failures' graph='TotalFailed request' median='no' />
		<s:counter category='Processor' name='% Processor Time' instance='0' graph='CPU' />
		<s:counter category='Processor' name='% Processor Time' instance='1' graph='CPU' />
		<s:counter category='Process' name='Handle Count' instance='inetinfo' graph='Handle Count' />
		<s:counter category='Memory' name='Committed Bytes' graph='Committed Bytes' />
		<s:counter category='Network Interface' name='Bytes Received/sec' instance='Intel(R) PRO_100+ Dual Port Server Adapter' graph='NIC Bytes Received per sec' />
		<s:counter category='Network Interface' name='Bytes Sent/sec' instance='Intel(R) PRO_100+ Dual Port Server Adapter' graph='NIC Bytes Sent  per sec' />
		<s:counter category='Network Interface' name='Bytes Total/sec' instance='Intel(R) PRO_100+ Dual Port Server Adapter' graph='NIC Bytes Total per sec' />
	</s:group>
	<s:group name='comps_673'>
		<s:counter category='XQRY (SE): AdvanceTime' instance='673' name='AdvanceTime avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): AdvanceTime' instance='673' name='AdvanceTime failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): AdvanceTime' instance='673' name='AdvanceTime requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): AdvanceTime' instance='673' name='AdvanceTime total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): AdvanceTime' instance='673' name='AdvanceTime total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Cancel' instance='673' name='Cancel avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Cancel' instance='673' name='Cancel failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Cancel' instance='673' name='Cancel requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Cancel' instance='673' name='Cancel total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Cancel' instance='673' name='Cancel total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Checkin' instance='673' name='Checkin avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Checkin' instance='673' name='Checkin failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Checkin' instance='673' name='Checkin requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Checkin' instance='673' name='Checkin total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Checkin' instance='673' name='Checkin total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Delete' instance='673' name='Delete avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Delete' instance='673' name='Delete failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Delete' instance='673' name='Delete requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Delete' instance='673' name='Delete total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Delete' instance='673' name='Delete total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Eject' instance='673' name='Eject avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Eject' instance='673' name='Eject failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Eject' instance='673' name='Eject requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Eject' instance='673' name='Eject total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Eject' instance='673' name='Eject total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Forfeit' instance='673' name='Forfeit avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Forfeit' instance='673' name='Forfeit failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Forfeit' instance='673' name='Forfeit requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Forfeit' instance='673' name='Forfeit total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Forfeit' instance='673' name='Forfeit total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Join' instance='673' name='Join avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Join' instance='673' name='Join failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Join' instance='673' name='Join requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Join' instance='673' name='Join total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Join' instance='673' name='Join total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Progression' instance='673' name='Progression avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Progression' instance='673' name='Progression failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Progression' instance='673' name='Progression requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Progression' instance='673' name='Progression total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Progression' instance='673' name='Progression total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Reminders' instance='673' name='Reminders avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Reminders' instance='673' name='Reminders failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Reminders' instance='673' name='Reminders requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Reminders' instance='673' name='Reminders total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Reminders' instance='673' name='Reminders total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Slotting' instance='673' name='Slotting avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Slotting' instance='673' name='Slotting failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Slotting' instance='673' name='Slotting requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Slotting' instance='673' name='Slotting total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Slotting' instance='673' name='Slotting total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): SubmitResults' instance='673' name='SubmitResults avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): SubmitResults' instance='673' name='SubmitResults failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): SubmitResults' instance='673' name='SubmitResults requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): SubmitResults' instance='673' name='SubmitResults total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): SubmitResults' instance='673' name='SubmitResults total failures' graph='Comps 673' median='yes' />

		<s:counter category='XQRY (SE): Withdraw' instance='673' name='Withdraw avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Withdraw' instance='673' name='Withdraw failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Withdraw' instance='673' name='Withdraw requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Withdraw' instance='673' name='Withdraw total' graph='Comps 673' median='yes' />
		<s:counter category='XQRY (SE): Withdraw' instance='673' name='Withdraw total failures' graph='Comps 673' median='yes' />
	</s:group>
	<s:group name='cron'>
		<s:counter category='CRON: AddJob' instance='_total_' name='Add avg. execution time' graph='Cron Add' median='yes' />
		<s:counter category='CRON: AddJob' instance='_total_' name='AddJob failures/sec' graph='Cron Add' median='yes' />
		<s:counter category='CRON: AddJob' instance='_total_' name='AddJob requests/sec' graph='Cron Add' median='yes' />
		<s:counter category='CRON: AddJob' instance='_total_' name='AddJob total' graph='Cron Add' median='no' />
		<s:counter category='CRON: AddJob' instance='_total_' name='AddJob total failures' graph='Cron Add' median='no' />
		<s:counter category='CRON: FindJobs' instance='_total_' name='Add avg. execution time' graph='Cron FindJob' median='yes' />
		<s:counter category='CRON: FindJobs' instance='_total_' name='FindJob failures/sec' graph='Cron FindJob' median='yes' />
		<s:counter category='CRON: FindJobs' instance='_total_' name='FindJob requests/sec' graph='Cron FindJob' median='yes' />
		<s:counter category='CRON: FindJobs' instance='_total_' name='FindJob total' graph='Cron FindJob' median='no' />
		<s:counter category='CRON: FindJobs' instance='_total_' name='FindJob total failures' graph='Cron FindJob' median='no' />
		<s:counter category='CRON: GetJob' instance='_total_' name='Add avg. execution time' graph='Cron GetJob' median='yes' />
		<s:counter category='CRON: GetJob' instance='_total_' name='GetJob failures/sec' graph='Cron GetJob' median='yes' />
		<s:counter category='CRON: GetJob' instance='_total_' name='GetJob requests/sec' graph='Cron GetJob' median='yes' />
		<s:counter category='CRON: GetJob' instance='_total_' name='GetJob total' graph='Cron GetJob' median='no' />
		<s:counter category='CRON: GetJob' instance='_total_' name='GetJob total failures' graph='Cron GetJob' median='no' />
		<s:counter category='CRON: Ping' instance='_total_' name='Add avg. execution time' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: Ping' instance='_total_' name='Ping failures/sec' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: Ping' instance='_total_' name='Ping requests/sec' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: Ping' instance='_total_' name='Ping total' graph='Cron Ping' median='no' />
		<s:counter category='CRON: Ping' instance='_total_' name='Ping total failures' graph='Cron Ping' median='no' />
		<s:counter category='CRON: RemoveJob' instance='_total_' name='Add avg. execution time' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: RemoveJob' instance='_total_' name='RemoveJob failures/sec' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: RemoveJob' instance='_total_' name='RemoveJob requests/sec' graph='Cron Ping' median='yes' />
		<s:counter category='CRON: RemoveJob' instance='_total_' name='RemoveJob total' graph='Cron Ping' median='no' />
		<s:counter category='CRON: RemoveJob' instance='_total_' name='RemoveJob total failures' graph='Cron Ping' median='no' />
		<s:counter category='CRON: Job counters' instance='_total_' name='Job avg. execution time' graph='Cron Job Stats' median='yes' />
		<s:counter category='CRON: Job counters' instance='_total_' name='Job execution total' graph='Cron Job Stats' median='no' />
		<s:counter category='CRON: Job counters' instance='_total_' name='Job executions/sec' graph='Cron Job Stats' median='yes' />
		<s:counter category='CRON: Job counters' instance='_total_' name='Job failures total' graph='Cron Job Stats' median='no' />
		<s:counter category='CRON: Job counters' instance='_total_' name='Job failures/sec' graph='Cron Job Stats' median='yes' />
	</s:group>
	<s:group name='xqry_673'>
		<s:counter category='XQRY: Add' instance='673' name='Add avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Add' instance='673' name='Add failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Add' instance='673' name='Add requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Add' instance='673' name='Add total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: Add' instance='673' name='Add total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: FindFromIds' instance='673' name='FindFromIds avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='673' name='FindFromIds failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='673' name='FindFromIds requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='673' name='FindFromIds total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: FindFromIds' instance='673' name='FindFromIds total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: Remove' instance='673' name='Remove avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Remove' instance='673' name='Remove failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Remove' instance='673' name='Remove requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Remove' instance='673' name='Remove total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: Remove' instance='673' name='Remove total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: RemoveId' instance='673' name='RemoveId avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='673' name='RemoveId failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='673' name='RemoveId requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='673' name='RemoveId total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: RemoveId' instance='673' name='RemoveId total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: Search' instance='673' name='Search avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Search' instance='673' name='Search failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Search' instance='673' name='Search requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Search' instance='673' name='Search total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: Search' instance='673' name='Search total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: Select' instance='673' name='Select avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Select' instance='673' name='Select failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Select' instance='673' name='Select requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Select' instance='673' name='Select total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: Select' instance='673' name='Select total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: Update' instance='673' name='Update avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Update' instance='673' name='Update failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Update' instance='673' name='Update requests/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: Update' instance='673' name='Update total' graph='Comps 673' median='no' />
		<s:counter category='XQRY: Update' instance='673' name='Update total failures' graph='Comps 673' median='no' />

		<s:counter category='XQRY: UpdateId' instance='673' name='UpdateId avg. execution time' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='673' name='UpdateId failures/sec' graph='Comps 673' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='673' name='UpdateId requests/sec' graph='Comp 673' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='673' name='UpdateId total' graph='Comp 673' median='no' />
		<s:counter category='XQRY: UpdateId' instance='673' name='UpdateId total failures' graph='Comp 673' median='no' />
	</s:group>
	<s:group name='xqry_c3b0'>
		<s:counter category='XQRY: Add' instance='C3B0' name='Add avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Add' instance='C3B0' name='Add failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Add' instance='C3B0' name='Add requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Add' instance='C3B0' name='Add total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: Add' instance='C3B0' name='Add total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: FindFromIds' instance='C3B0' name='FindFromIds avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='C3B0' name='FindFromIds failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='C3B0' name='FindFromIds requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: FindFromIds' instance='C3B0' name='FindFromIds total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: FindFromIds' instance='C3B0' name='FindFromIds total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: Remove' instance='C3B0' name='Remove avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Remove' instance='C3B0' name='Remove failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Remove' instance='C3B0' name='Remove requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Remove' instance='C3B0' name='Remove total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: Remove' instance='C3B0' name='Remove total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: RemoveId' instance='C3B0' name='RemoveId avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='C3B0' name='RemoveId failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='C3B0' name='RemoveId requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: RemoveId' instance='C3B0' name='RemoveId total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: RemoveId' instance='C3B0' name='RemoveId total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: Search' instance='C3B0' name='Search avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Search' instance='C3B0' name='Search failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Search' instance='C3B0' name='Search requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Search' instance='C3B0' name='Search total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: Search' instance='C3B0' name='Search total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: Select' instance='C3B0' name='Select avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Select' instance='C3B0' name='Select failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Select' instance='C3B0' name='Select requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Select' instance='C3B0' name='Select total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: Select' instance='C3B0' name='Select total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: Update' instance='C3B0' name='Update avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Update' instance='C3B0' name='Update failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Update' instance='C3B0' name='Update requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: Update' instance='C3B0' name='Update total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: Update' instance='C3B0' name='Update total failures' graph='Comps C3B0' median='no' />

		<s:counter category='XQRY: UpdateId' instance='C3B0' name='UpdateId avg. execution time' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='C3B0' name='UpdateId failures/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='C3B0' name='UpdateId requests/sec' graph='Comps C3B0' median='yes' />
		<s:counter category='XQRY: UpdateId' instance='C3B0' name='UpdateId total' graph='Comps C3B0' median='no' />
		<s:counter category='XQRY: UpdateId' instance='C3B0' name='UpdateId total failures' graph='Comps C3B0' median='no' />
	</s:group>
	<s:group name='webstore_uodb'>
		<s:counter category='Webstore Applications' instance='UODB' name='% FSS Unavailable' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='% FSS Write Unavailable' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='% Read DB Blacklisted' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='% Write DB Blacklisted' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='% Collecting Period(s)' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType DefaultRead' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType DefaultWrite' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType ReadOnly' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType ReadOrWrite' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType ReadThenWrite' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType WriteOnly' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='CommandType WriteThenRead' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='Latency Bad' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Latency Good' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Latency Good Boundary (ms)' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Latency OK' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Latency OK Boundary (ms)' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Requests Attempted/sec' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Requests Failed/sec' graph='Webstore UODB' median='yes' />
		<s:counter category='Webstore Applications' instance='UODB' name='Requests Retries' graph='Webstore UODB' median='no' />
		<s:counter category='Webstore Applications' instance='UODB' name='Requests Timeout' graph='Webstore UODB' median='no' />
	</s:group>
	<s:group name='webstore_xprofile'>
		<s:counter category='Webstore Applications' instance='XProfile' name='% FSS Unavailable' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='% FSS Write Unavailable' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='% Read DB Blacklisted' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='% Write DB Blacklisted' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='% Collecting Period(s)' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType DefaultRead' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType DefaultWrite' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType ReadOnly' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType ReadOrWrite' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType ReadThenWrite' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType WriteOnly' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='CommandType WriteThenRead' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Latency Bad' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Latency Good' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Latency Good Boundary (ms)' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Latency OK' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Latency OK Boundary (ms)' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Requests Attempted/sec' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Requests Failed/sec' graph='Webstore XProfile' median='yes' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Requests Retries' graph='Webstore XProfile' median='no' />
		<s:counter category='Webstore Applications' instance='XProfile' name='Requests Timeout' graph='Webstore XProfile' median='no' />
	</s:group>
	<s:group name='xevents'>
		<s:counter category='Process' name='Handle Count' instance='_Total' graph='Handle Count' />
		<s:counter category='Process' name='Handle Count' instance='xevents' graph='Handle Count' />
		<s:counter category='Process' name='Private Bytes' instance='xevents' graph='Private Bytes' />
		<s:counter category='Xbox Alerts Event Listener Service' name='Concurrent Threads' graph='XEvents' />
		<s:counter category='Xbox Alerts Event Listener Service' name='Events Per Second' graph='XEvents' />
		<s:counter category='Xbox Alerts Event Listener Service' name='Failed Events' graph='XEvents' />
		<s:counter category='Xbox Alerts Event Listener Service' name='Failed Events Per Second' graph='XEvents' />
		<s:counter category='Xbox Alerts Event Listener Service' name='Total Events' graph='XEvents' />
	</s:group>
	<s:group name='NS$xbox'>
		<s:counter category='NS$xbox: Vacuumer' name='Completed Periods' instance='alerts' graph='SQLNS Vacuum' />
		<s:counter category='NS$xbox: Vacuumer' name='Quanta Remaining' instance='alerts' graph='SQLNS Vacuum' />
		<s:counter category='NS$xbox: Vacuumer' name='Quanta Vacuumed' instance='alerts' graph='SQLNS Vacuum' />
		<s:counter category='NS$xbox: Vacuumer' name='Timeouts' instance='alerts' graph='SQLNS Vacuum' />
		<s:counter category='NS$xbox: Notifications' name='Batches' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Awaiting Distribution' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Expired' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Failed Delivery' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches In Generation' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches In Retry' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Successfully Delivered' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Failed Delivery' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Generated Per Second/Class' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Successfully Delivered' instance='alerts : xlivenotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Awaiting Distribution' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Expired' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Failed Delivery' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches In Generation' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches In Retry' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Batches Successfully Delivered' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Failed Delivery' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Generated Per Second/Class' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Notifications' name='Notifications Successfully Delivered' instance='alerts : xcontentnotifications' graph='SQLNS Notifications' />
		<s:counter category='NS$xbox: Generator' name='Notifications Generated Per Second' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Quanta Behind' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Quanta Failed' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Quanta Processed' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Rule Firing Failures' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Rule Firings' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Skipped Chronicle Rule Firings' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Skipped Quanta' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Generator' name='Skipped Subscription Rule Firings' instance='alerts' graph='SQLNS Generator' />
		<s:counter category='NS$xbox: Events' name='Event Batches Awaiting Generation' instance='alerts : xcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches In Collection' instance='alerts : xcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Submitted' instance='alerts : xcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Total Events' instance='alerts : xcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Awaiting Generation' instance='alerts : xinternalcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches In Collection' instance='alerts : xinternalcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Submitted' instance='alerts : xinternalcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Total Events' instance='alerts : xinternalcontentevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Awaiting Generation' instance='alerts : xliveevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches In Collection' instance='alerts : xliveevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Submitted' instance='alerts : xliveevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Total Events' instance='alerts : xliveevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Awaiting Generation' instance='alerts : xtitleevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches In Collection' instance='alerts : xtitleevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Event Batches Submitted' instance='alerts : xtitleevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Events' name='Total Events' instance='alerts : xtitleevents' graph='SQLNS Events' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Aborted' instance='alerts:xcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Committed' instance='alerts:xcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Per Batch' instance='alerts:xcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received' instance='alerts:xcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received Per Second' instance='alerts:xcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Aborted' instance='alerts:xinternalcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Committed' instance='alerts:xinternalcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Per Batch' instance='alerts:xinternalcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received' instance='alerts:xinternalcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received Per Second' instance='alerts:xinternalcontentep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Aborted' instance='alerts:xliveep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Committed' instance='alerts:xliveep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Per Batch' instance='alerts:xliveep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received' instance='alerts:xliveep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received Per Second' instance='alerts:xliveep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Aborted' instance='alerts:xtitleep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Event Batches Committed' instance='alerts:xtitleep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Per Batch' instance='alerts:xtitleep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received' instance='alerts:xtitleep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Event Providers' name='Events Received Per Second' instance='alerts:xtitleep' graph='SQLNS Event Provider' />
		<s:counter category='NS$xbox: Distributors' name='Delivery Requests Failed' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Delivery Requests Succeeded' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Format Requests Failed' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Format Requests Rate' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Format Requests Succeeded' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Notification Bodies' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
		<s:counter category='NS$xbox: Distributors' name='Notification Headers' instance='alerts:alertsdist1' graph='SQLNS Distributors' />
	</s:group>	

	<s:counterfile name='fdbk'>
		<s:servertype>
			<s:server name='xontemessiis001' />
			<s:server name='xontemessiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='Feedback' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='string'>
		<s:servertype>
			<s:server name='xontemessiis001' />
			<s:server name='xontemessiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='string' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='moni'>
		<s:servertype>
			<s:server name='xontemoniinh001' />
			<s:server name='xontemoniinh002-b' />
			<s:group name='all' />
			<s:group name='monitoring' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='Xarbiis'>
		<s:servertype>
			<s:server name='xontexarbiis001' />
			<s:server name='xontexarbiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='asp.net data' />
			<s:group name='authreq' />
			<s:group name='Xarbiis' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='stats'>
		<s:servertype>
			<s:server name='xontestatiis001' />
			<s:server name='xontestatiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='asp.net data' />
			<s:group name='authreq' />
		</s:servertype>
		<s:servertype>
			<s:server name='xonteclisxxx006' />
			<s:server name='xonteclisxxx020' />
			<s:group name='stats' />
		</s:servertype>
		<s:servertype>
			<s:server name='xont2wbcaiis001.xontest2' />
			<s:group name='stats2' />
		</s:servertype>
		<s:servertype>
			<s:server name='xontestatsql001' />
			<s:server name='xontestatsql002' />
			<s:group name='all' />
			<s:group name='sql' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='prof'>
		<s:servertype>
			<s:server name='xonteprofsqlm01' />
			<s:server name='xonteprofsqlw01' />
			<s:server name='xonteprofsqlw02' />
			<s:server name='xonteprofsqlw03' />
			<s:server name='xonteprofsqlw04' />
			<s:group name='all' />
			<s:group name='profsql' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='uodb'>
		<s:servertype>
			<s:server name='xonteuodbsqlw01' />
			<s:server name='xonteuodbsqlw02' />
			<s:server name='xonteuodbsqlw03' />
			<s:server name='Xonteuodbsqlw03' />
			<s:group name='all' />
			<s:group name='sql' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xmacs'>
		<s:servertype>
			<s:server name='xontexmacinh001' />
			<s:server name='xontexmacinh002' />
			<s:group name='all' />
			<s:group name='kerberos' />
			<s:group name='xmacs' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xkdc'>
		<s:servertype>
			<s:server name='xontexkdcinh001' />
			<s:server name='xontexkdcinh002' />
			<s:group name='all' />
			<s:group name='kerberos' />
			<s:group name='xkdc' />
			<s:group name='askdc' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='mtch'>
		<s:servertype>
			<s:server name='xontemtchiis001' />
			<s:server name='xontemtchiis002' />
			<s:group name='all' />
			<s:group name='mtchiis' />
		</s:servertype>
		<s:servertype>
			<s:server name='xontemtchsql001' />
			<s:server name='xontemtchsql002' />
			<s:group name='all' />
			<s:group name='mtchsql' />
			<s:group name='sql' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xbos'>
		<s:servertype>
			<s:server name='xontexbosiis001' />
			<s:server name='xontexbosiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xbos' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='sg'>
		<s:servertype>
			<s:server name='XONTESECUINH001' />
			<s:server name='XONTESECUINH002' />
			<s:group name='all' />
			<s:group name='sg' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xuacs'>
		<s:servertype>
			<s:server name='xontexbosiis001' />
			<s:server name='xontexbosiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xuacs' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xcbk'>
		<s:servertype>
			<s:server name='xontexcbkiis001' />
			<s:server name='xontexcbkiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xcbk' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='cust'>
		<s:servertype>
			<s:server name='xontecustiis001' />
			<s:server name='xontecustiis002' />
			<s:group name='all' />
			<s:group name='asp.net' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xpnfiis'>
		<s:servertype>
			<s:server name='xontexpnfiis001' />
			<s:server name='xontexpnfiis002' />
			<s:server name='xontexpnfiis003' />
			<s:server name='xontexpnfiis004' />
			<s:group name='all' />
			<s:group name='xpnfdweb' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='presinh'>
		<s:servertype>
			<s:server name='XonTePresINH001-b' />
			<s:server name='XonTePresINH002-b' />
			<s:server name='XonTePresINH003-b' />
			<s:server name='XonTePresINH004-b' />
			<s:group name='all' />
			<s:group name='xpresence' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='presinhtime'>
		<s:servertype>
			<s:server name='XonTePresINH001-b' />
			<s:server name='XonTePresINH002-b' />
			<s:server name='XonTePresINH003-b' />
			<s:server name='XonTePresINH004-b' />
			<s:group name='xpresence-latency' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='presinhteams'>
		<s:servertype>
			<s:server name='XonTePresINH001-b' />
			<s:server name='XonTePresINH002-b' />
			<s:server name='XonTePresINH003-b' />
			<s:server name='XonTePresINH004-b' />
			<s:group name='all' />
			<s:group name='xteams' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='notiinh'>
		<s:servertype>
			<s:server name='XonTeNotiINH001-b' />
			<s:server name='XonTeNotiINH002-b' />
			<s:group name='all' />
			<s:group name='xnotification' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='notiinhtime'>
		<s:servertype>
			<s:server name='XonTeNotiINH001-b' />
			<s:server name='XonTeNotiINH002-b' />
			<s:group name='xnotification-latency' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xsig'>
		<s:servertype>
			<s:server name='xontexsigiis001' />
			<s:server name='xont2xsigiis001.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='authreq' />
			<s:group name='xsig' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xstoreiis001'>
		<s:servertype>
			<s:server name='xont2storiis001.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xstore' />
		</s:servertype>
		<s:servertype>
			<s:server name='xonteclisxxx002' />
			<s:server name='xonteclisxxx019' />
			<s:server name='xonteclisxxx003' />
			<s:group name='all' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xstoreiis002'>
		<s:servertype>
			<s:server name='xont2storiis002.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xstore' />
		</s:servertype>
		<s:servertype>
			<s:server name='xonteclisxxx002' />
			<s:server name='xonteclisxxx019' />
			<s:server name='xonteclisxxx003' />
			<s:group name='all' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xstoresqlw01'>
		<s:servertype>
			<s:server name='xont2storsqlw01.xontest2' />
			<s:group name='all' />
			<s:group name='xstoresql1' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='xstoresqlw02'>
		<s:servertype>
			<s:server name='xont2storsqlw02.xontest2' />
			<s:group name='all' />
			<s:group name='xstoresql2' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='XCacheOverall'>
		<s:servertype>
			<s:server name='xont2wbcaiis002.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xcache' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='signaturewidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis002.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='sigwidget' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='WebSG'>
		<s:servertype>
			<s:server name='xont2wbsgiis001.xontest2' />
			<s:server name='xont2wbsgiis002.xontest2' />
			<s:group name='WebSG' />
			<s:group name='all' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='preswidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis003.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='preswidget' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='userwidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis002.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='userwidget' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='messagingwidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis003.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='messagingwidget' />
		</s:servertype>
	</s:counterfile>	
	<s:counterfile name='statswidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis001.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='statswidget' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='statswidgetv3'>
		<s:servertype>
			<s:server name='xont2wbcaiis001.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='statswidgetv3' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='storagewidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis002.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='storagewidget' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='querywidget'>
		<s:servertype>
			<s:server name='xont2wbcaiis003.xontest2' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='querywidget' />
		</s:servertype>
		<s:servertype>
			<s:server name='xontexqryiis002.xontest' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xqry_c3b0' />
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='comps'>
		<s:servertype>
			<s:server name='xontexqryiis001.xontest' />
			<s:group name='all' />
			<s:group name='asp.net' />
			<s:group name='xcache' />
			<s:group name='webstore_uodb' />
			<s:group name='webstore_xprofile' />
			<s:group name='xqry_673' />
			<s:group name='comps_673'/>
		</s:servertype>
	</s:counterfile>
	<s:counterfile name='alerts'>
		<s:servertype>
			<s:server name='xont2alrtsql001.xontest2' />
			<s:group name='all' />
			<s:group name='sql' />
			<s:group name='xevents' />
			<s:group name='NS$xbox' />
		</s:servertype>
	</s:counterfile>

</s:counterinfo>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\perflog\XBLPerfLogTool\readme.txt ===
Installation Instructions

Add a virtual directory to your web server that points to the location of this directory. Leave everything where it is. The name of the virtual directory should be "XBLPerfLogTool", thus the path to the website needs to be:

http://localhost/XBLPerfLogTool/

When you open the XBLPerfLogTool.sln file, everything *should* work.  Remember to compile.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\perflog\XBLPerfLogTool\XBLPerfLogToolCfg.xml ===
﻿<?xml version ="1.0"?>
<configuration xmlns="urn:microsoft-catalog:XML_Metabase_V54_0">
<MBProperty>
<IIS_Global	Location ="."
		SessionKey="496353625000000034000000100000000b02000001680000016800002d4baca29b23b07b46720fa9ed5481ffa7e82adca98a8c2f9e71a79509fc19cdf3b7cabdfb1e052872006600d48a8afd0956e398bc48beb8e947e0bd"
	>
</IIS_Global>
<IIsWebVirtualDir	Location ="/lm/w3svc/1/ROOT/XBLPerfLogTool"
		AccessFlags="AccessRead | AccessScript"
		AppFriendlyName="XBLPerfLogTool"
		AppIsolated="2"
		AppRoot="/LM/W3SVC/1/ROOT/XBLPerfLogTool"
		AuthFlags="AuthAnonymous | AuthNTLM"
		DefaultDoc="PerfLogTool.aspx,Default.htm,Default.asp,index.htm,iisstart.htm,Default.aspx"
		DirBrowseFlags="DirBrowseShowDate | DirBrowseShowTime | DirBrowseShowSize | DirBrowseShowExtension | DirBrowseShowLongDate | EnableDefaultDoc"
		Path="c:\inetpub\wwwroot\XBLPerfLogTool"
	>
</IIsWebVirtualDir>
<IIsInheritedProperties	Location ="inherited:/lm/w3svc/1/ROOT/XBLPerfLogTool"
		AdminACL="49634462f0000000a4000000400000004ba6c2dbf70c51dd6547835fe4dc5977e01211461f6c3e0f59637b573afab594ebd34e86b1cb1d2ad629cabadd41443a119f22939fceb2a0f8acf13807732f7226be4ae11113ce55e6a489f74f6f7d64edd1c04c402eb711c4dd7ceae23706654f706ea56fa77bc8fd092658a251ee5ef3fe7552d6a7ff0ae51301ef7b57996da1c2b4ec636f24c91162b5c1fc2b5f5934a08d9a7a8233b0d138ff71f135d831d5a38356fa2f16fe6261f501cf05aea55bc663da59179197b2339d25e1fa189178ca0f001800000049634862180000001000000000000000e8229913d506922c81d06bd6a729b3ba"
		AllowKeepAlive="TRUE"
		AnonymousUserName="IUSR_XETESTSQL001"
		AnonymousUserPass="496344627000000022000000400000004ba6c2dbc70c6f5dd347c05f03dc7b7786122746766c150f3c635e574afac794ebd30000010001001b82c937b921a74f9880b511071ca87702000000000000000000000000000000000000000000000001000000000000004c4d454d38590d00000000006c000000"
		AppAllowClientDebug="FALSE"
		AppAllowDebugging="FALSE"
		AppPoolId="DefaultAppPool"
		AspAllowOutOfProcComponents="TRUE"
		AspAllowSessionState="TRUE"
		AspAppServiceFlags="0"
		AspBufferingLimit="4194304"
		AspBufferingOn="TRUE"
		AspCalcLineNumber="TRUE"
		AspCodepage="0"
		AspDiskTemplateCacheDirectory="%windir%\system32\inetsrv\ASP Compiled Templates"
		AspEnableApplicationRestart="TRUE"
		AspEnableAspHtmlFallback="FALSE"
		AspEnableChunkedEncoding="TRUE"
		AspEnableParentPaths="FALSE"
		AspEnableTypelibCache="TRUE"
		AspErrorsToNTLog="FALSE"
		AspExceptionCatchEnable="TRUE"
		AspExecuteInMTA="0"
		AspKeepSessionIDSecure="0"
		AspLCID="2048"
		AspLogErrorRequests="TRUE"
		AspMaxDiskTemplateCacheFiles="2000"
		AspMaxRequestEntityAllowed="204800"
		AspProcessorThreadMax="25"
		AspQueueConnectionTestTime="3"
		AspQueueTimeout="4294967295"
		AspRequestQueueMax="3000"
		AspRunOnEndAnonymously="TRUE"
		AspScriptEngineCacheMax="250"
		AspScriptErrorMessage="An error occurred on the server when processing the URL.  Please contact the system administrator."
		AspScriptErrorSentToBrowser="TRUE"
		AspScriptFileCacheSize="500"
		AspScriptLanguage="VBScript"
		AspScriptTimeout="90"
		AspSessionMax="4294967295"
		AspSessionTimeout="20"
		AspTrackThreadingModel="FALSE"
		AuthChangeURL="/iisadmpwd/achg.asp"
		AuthExpiredURL="/iisadmpwd/aexp.asp"
		AuthExpiredUnsecureURL="/iisadmpwd/aexp3.asp"
		AuthNotifyPwdExpURL="/iisadmpwd/anot.asp"
		AuthNotifyPwdExpUnsecureURL="/iisadmpwd/anot3.asp"
		CGITimeout="300"
		CacheISAPI="TRUE"
		ConnectionTimeout="120"
		ContentIndexed="TRUE"
		DownlevelAdminInstance="1"
		HttpCustomHeaders="X-Powered-By: ASP.NET"
		HttpErrors="400,*,FILE,C:\WINNT\help\iisHelp\common\400.htm
			401,1,FILE,C:\WINNT\help\iisHelp\common\401-1.htm
			401,2,FILE,C:\WINNT\help\iisHelp\common\401-2.htm
			401,3,FILE,C:\WINNT\help\iisHelp\common\401-3.htm
			401,4,FILE,C:\WINNT\help\iisHelp\common\401-4.htm
			401,5,FILE,C:\WINNT\help\iisHelp\common\401-5.htm
			401,7,FILE,C:\WINNT\help\iisHelp\common\401-1.htm
			403,1,FILE,C:\WINNT\help\iisHelp\common\403-1.htm
			403,2,FILE,C:\WINNT\help\iisHelp\common\403-2.htm
			403,3,FILE,C:\WINNT\help\iisHelp\common\403-3.htm
			403,4,FILE,C:\WINNT\help\iisHelp\common\403-4.htm
			403,5,FILE,C:\WINNT\help\iisHelp\common\403-5.htm
			403,6,FILE,C:\WINNT\help\iisHelp\common\403-6.htm
			403,7,FILE,C:\WINNT\help\iisHelp\common\403-7.htm
			403,8,FILE,C:\WINNT\help\iisHelp\common\403-8.htm
			403,9,FILE,C:\WINNT\help\iisHelp\common\403-9.htm
			403,10,FILE,C:\WINNT\help\iisHelp\common\403-10.htm
			403,11,FILE,C:\WINNT\help\iisHelp\common\403-11.htm
			403,12,FILE,C:\WINNT\help\iisHelp\common\403-12.htm
			403,13,FILE,C:\WINNT\help\iisHelp\common\403-13.htm
			403,15,FILE,C:\WINNT\help\iisHelp\common\403-15.htm
			403,16,FILE,C:\WINNT\help\iisHelp\common\403-16.htm
			403,17,FILE,C:\WINNT\help\iisHelp\common\403-17.htm
			403,18,FILE,C:\WINNT\help\iisHelp\common\403.htm
			403,19,FILE,C:\WINNT\help\iisHelp\common\403.htm
			403,20,FILE,C:\WINNT\help\iisHelp\common\403-20.htm
			404,*,FILE,C:\WINNT\help\iisHelp\common\404b.htm
			404,2,FILE,C:\WINNT\help\iisHelp\common\404b.htm
			404,3,FILE,C:\WINNT\help\iisHelp\common\404b.htm
			405,*,FILE,C:\WINNT\help\iisHelp\common\405.htm
			406,*,FILE,C:\WINNT\help\iisHelp\common\406.htm
			407,*,FILE,C:\WINNT\help\iisHelp\common\407.htm
			412,*,FILE,C:\WINNT\help\iisHelp\common\412.htm
			414,*,FILE,C:\WINNT\help\iisHelp\common\414.htm
			415,*,FILE,C:\WINNT\help\iisHelp\common\415.htm
			500,12,FILE,C:\WINNT\help\iisHelp\common\500-12.htm
			500,13,FILE,C:\WINNT\help\iisHelp\common\500-13.htm
			500,15,FILE,C:\WINNT\help\iisHelp\common\500-15.htm
			500,16,FILE,C:\WINNT\help\iisHelp\common\500.htm
			500,17,FILE,C:\WINNT\help\iisHelp\common\500.htm
			500,18,FILE,C:\WINNT\help\iisHelp\common\500.htm
			500,19,FILE,C:\WINNT\help\iisHelp\common\500.htm"
		InProcessIsapiApps="C:\WINNT\system32\inetsrv\httpext.dll
			C:\WINNT\system32\inetsrv\httpodbc.dll
			C:\WINNT\system32\inetsrv\ssinc.dll
			C:\WINNT\system32\msw3prt.dll
			C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll"
		LogExtFileFlags="LogExtFileDate | LogExtFileTime | LogExtFileClientIp | LogExtFileUserName | LogExtFileServerIp | LogExtFileMethod | LogExtFileUriStem | LogExtFileUriQuery | LogExtFileHttpStatus | LogExtFileWin32Status | LogExtFileServerPort | LogExtFileUserAgent | LogExtFileHttpSubStatus"
		LogFileDirectory="C:\WINNT\system32\LogFiles"
		LogFilePeriod="1"
		LogFileTruncateSize="20971520"
		LogOdbcDataSource="HTTPLOG"
		LogOdbcPassword="496344626000000012000000400000004ba6c2db850c275d8947ef5f1bdc3e77e0120100dbb1dd75c1bd830975eaf6a47c8d40ed43f01172c87b44f4d5e91c38fc2c365f651e79fc2069d37582761c54e3950330d8ed90570cfb31ace182f1b1646302b300000000"
		LogOdbcTableName="InternetLog"
		LogOdbcUserName="InternetAdmin"
		LogPluginClsid="{FF160663-DE82-11CF-BC0A-00AA006111E0}"
		LogType="1"
		MaxBandwidth="4294967295"
		MaxConnections="4294967295"
		MinFileBytesPerSec="240"
		PasswordChangeFlags="AuthChangeDisable | AuthAdvNotifyDisable"
		ScriptMaps=".asp,C:\WINNT\system32\inetsrv\asp.dll,5,GET,HEAD,POST,TRACE
			.cer,C:\WINNT\system32\inetsrv\asp.dll,5,GET,HEAD,POST,TRACE
			.cdx,C:\WINNT\system32\inetsrv\asp.dll,5,GET,HEAD,POST,TRACE
			.asa,C:\WINNT\system32\inetsrv\asp.dll,5,GET,HEAD,POST,TRACE
			.idc,C:\WINNT\system32\inetsrv\httpodbc.dll,5,GET,POST
			.shtm,C:\WINNT\system32\inetsrv\ssinc.dll,5,GET,POST
			.shtml,C:\WINNT\system32\inetsrv\ssinc.dll,5,GET,POST
			.stm,C:\WINNT\system32\inetsrv\ssinc.dll,5,GET,POST
			.asax,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.ascx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.ashx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.asmx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.aspx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.axd,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.vsdisco,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.rem,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.soap,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,1,GET,HEAD,POST,DEBUG
			.config,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.cs,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.csproj,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.vb,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.vbproj,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.webinfo,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.licx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.resx,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG
			.resources,C:\WINNT\Microsoft.NET\Framework\v1.1.4322\aspnet_isapi.dll,5,GET,HEAD,POST,DEBUG"
		ServerComment="Default Web Site"
		ServerSize="1"
		WAMUserName="IWAM_XETESTSQL001"
		WAMUserPass="496344627000000022000000400000004ba6c2dbc70c685da747f25f45dc7f77c41224464e6c550f63635f5713fad794ebd30000010001001b82c937b921a74f9880b511071ca87702000000000000000000000000000000000000000000000001000000000000004c4d454d38590d00000000006c000000"
	>
</IIsInheritedProperties>
</MBProperty>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\SafetyNet\SafetyNet.Admin\App_Data\Suites.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<suites>
  <suite name="Strings" dll="StringServTest" />
  <suite name="Callback" dll="XcbkTest" />
  <suite name="XeUacs" dll="XeUacs" />
  <suite name="Xbox1UACS" dll="UacsTest" />
  <suite name="CatalogQuery" dll="CatalogQueryTests" />
  <suite name="Xbos" dll="XeXbos" />
  <suite name="XbosTestV2" dll="XbosTestV2" />
  <suite name="CatalogPurchase" dll="CatalogPurchaseTests" />
  <suite name="XCust" dll="XCust" />
</suites>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\SafetyNet\SafetyNet.Tests\FailingWorkflow.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?>
<SequentialWorkflowActivity x:Name="Workflow1" xmlns:ns0="clr-namespace:SafetyNet.Tests;Assembly=SafetyNet.Tests" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
  <ns0:FailingActivity></ns0:FailingActivity>
</SequentialWorkflowActivity>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\SafetyNet\SafetyNet.Tests\ForTesting.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?>
<SequentialWorkflowActivity x:Name="Workflow1" xmlns:ns0="clr-namespace:SafetyNet.Tests;Assembly=SafetyNet.Tests" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
  <ns0:TestExecuteActivity></ns0:TestExecuteActivity>
</SequentialWorkflowActivity>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\SafetyNet\SafetyNet.Tests\AuthoringTests.txt ===
﻿==========================================================================
    Visual Studio Team System: Overview of Authoring and Running Tests    
==========================================================================

This overview describes the features for authoring and running tests in 
Visual Studio Team System and Visual Studio Team Edition for Software Testers.

Opening Tests
-------------
To open a test, open a test project or a test metadata file (a file with
extension .vsmdi) that contains the definition of the test. You can find
test projects and metadata files in Solution Explorer.

Viewing Tests
-------------
To see which tests are available to you, open the Test View window. Or,
if you have installed Team Edition for Software Testers, you can also open
the Test Manager window to view tests.

To open the Test View window, click the Test menu, point to Windows, and
then click Test View. To open the Test Manager window (if you have
installed Team Edition for Software Testers), click Test, point to Windows,
and then click Test Manager.

Running Tests
-------------
You can run tests from the Test View window and the Test Manager window.
See Viewing Tests to learn how to open these windows. To run one or more
tests displayed in the Test View window, first select the tests in that
window; to select multiple tests, hold either the Shift or CTRL key while
clicking tests. Then click the Run Tests button in the Test View window
toolbar.

If you have installed Visual Studio Team Edition for Software Testers, you can
also use the Test Manager window to run tests. To run tests in Test Manager,
select the check box next to each test that you want to run. Then click the
Run Tests button in the Test Manager window toolbar.

Viewing Test Results
--------------------
When you run a test or a series of tests, the results of the test run will be
shown in the Test Results window. Each individual test in the run is shown on
a separate line so that you can see its status. The window contains an
embedded status bar in the top half of the window that provides you with
summary details of the complete test run.

To see more detailed results for a particular test result, double-click it in
the Test Results window. This opens a window that provides more information
about the particular test result, such as any specific error messages returned
by the test.

Changing the way that tests are run
-----------------------------------
Each time you run one or more tests, a collection of settings is used to
determine how those tests are run. These settings are contained in a “test
run configuration” file.

Here is a partial list of some of the changes you can make with a test run 
configuration file:

 - Change the naming scheme for each test run.
 - Change the test controller that the tests are run on so that you can run
   tests remotely.
 - Gather code coverage data for the code being tested so that you can see
   which lines of code are covered by your tests.
 - Specify additional files to deploy before tests are run.
 - Select a different host, ASP.NET, for running ASP.NET unit tests.
 - Set various properties for the test agents that run your tests.
 - Run custom scripts at the start and end of each test run so that you can
   set up the test environment exactly as required each time tests are run.
 - Set time limits for tests and test runs.
 - Set the browser mix and the number of times to repeat Web tests in the
   test run.

By default, a test run configuration file is created whenever you create a
new test project. You make changes to this file by double-clicking it in 
Solution Explorer and then changing its settings. (Test run configuration
files have the extension .testrunconfig.)

A solution can contain multiple test run configuration files. Only one of
those files, known as the “Active” test run configuration file, is used to
determine the settings that are currently used for test runs. You select
the active test run configuration by clicking Select Active Test Run 
Configuration on the Test menu.

-------------------------------------------------------------------------------

Test Types
----------
Using Visual Studio Team Edition for Software Testers, you can create a number
of different test types:

Unit test: Use a unit test to create a programmatic test in C++, Visual C# or
Visual Basic that exercises source code. A unit test calls the methods of a
class, passing suitable parameters, and verifies that the returned value is
what you expect.
There are two specialized variants of unit tests:
 - Data-driven unit tests are created when you configure a unit test to be
   called repeatedly for each row of a data source. The data from each row
   is used by the unit test as input data.
 - ASP.NET unit tests are unit tests that exercise code in an ASP.NET Web
   application.

Web Test: Web tests consist of an ordered series of HTTP requests that you
record in a browser session using Microsoft Internet Explorer. You can have
the test report specific details about the pages or sites it requests, such
as whether a particular page contains a specified string.

Load Test: You use a load test to encapsulate non-manual tests, such as
unit, Web, and generic tests, and then run them simultaneously by using
virtual users. Running these tests under load generates test results,
including performance and other counters, in tables and in graphs.

Generic test: A generic test is an existing program wrapped to function as a
test in Visual Studio. The following are examples of tests or programs that
you can turn into generic tests:
 - An existing test that uses process exit codes to communicate whether the
   test passed or failed. 0 indicates passing and any other value indicates
   a failure.
 - A general program to obtain specific functionality during a test scenario.
 - A test or program that uses a special XML file (called a “summary results
   file”), to communicate detailed results.

Manual test: The manual test type is used when the test tasks are to be
completed by a test engineer as opposed to an automated script.

Ordered test: Use an ordered test to execute a set of tests in an order you
specify.

-------------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\buildd.err ===
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>errors in directory z:\xonline_main\private\test\stftests\stfgui
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\livematchtest
2>z:\xonline_main\private\test\stftests\livematchtest\msbuild : error MSB1028: The logger failed unexpectedly.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest failed - rc = 2

2>errors in directory z:\xonline_main\private\test\stftests\msgtool
2>z:\xonline_main\private\test\stftests\msgtool\msbuild : error MSB1028: The logger failed unexpectedly.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool failed - rc = 2

2>errors in directory z:\xonline_main\private\test\stftests\livebvt
2>z:\xonline_main\private\test\stftests\livebvt\msbuild : error MSB1028: The logger failed unexpectedly.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt failed - rc = 2

1>errors in directory z:\xonline_main\private\test\stftests\iflictest
1>z:\xonline_main\private\test\stftests\iflictest\msbuild : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\hijackaccounttests
2>z:\xonline_main\private\test\stftests\hijackaccounttests\msbuild : error MSB1028: The logger failed unexpectedly.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests failed - rc = 2

2>errors in directory z:\xonline_main\private\test\stftests\tokendiehard
2>z:\xonline_main\private\test\stftests\tokendiehard\msbuild : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\testthroughsg
2>z:\xonline_main\private\test\stftests\testthroughsg\msbuild : error MSB1028: The logger failed unexpectedly.
102>errors in directory z:\xonline_main\private\test\stftests\stfconsole\buildlive
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildlive failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\stfconsole\buildcore
101>z:\xonline_main\private\test\stftests\stfconsole\stfconsole.cs(486) : error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
101>z:\xonline_main\private\test\stftests\stfconsole\stfconsole.cs(495) : error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildcore failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\basictest
102>z:\xonline_main\private\test\stftests\basictest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\basictest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\basictest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xrlscan\xrlscantestsuite failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\websgtest
102>z:\xonline_main\private\test\stftests\websgtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\websgtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgtest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\xstoretest
101>z:\xonline_main\private\test\stftests\xstoretest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\xstoretest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xstoretest failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\xmatchtest
102>z:\xonline_main\private\test\stftests\xmatchtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\xmatchtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xmatchtest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\feedback\feedback
101>z:\xonline_main\private\test\stftests\feedback\feedback\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\feedback\feedback\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\feedback\feedback failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\fakesgservice
102>z:\xonline_main\private\test\stftests\fakesgservice\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\fakesgservice\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\fakesgservice failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\xarb
101>z:\xonline_main\private\test\stftests\xarb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\xarb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xarb failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\websgbvts
102>z:\xonline_main\private\test\stftests\websgbvts\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\websgbvts\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgbvts failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\reportingtargettest\bvt
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\bvt failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\reportingtargettest\replication
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\replication failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\livecontenttest
102>z:\xonline_main\private\test\stftests\livecontenttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\livecontenttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livecontenttest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\liveoffertest
101>z:\xonline_main\private\test\stftests\liveoffertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\liveoffertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\liveoffertest failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\spac
102>z:\xonline_main\private\test\stftests\spac\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\spac\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\spac failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\apdispatchertest
101>z:\xonline_main\private\test\stftests\apdispatchertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\apdispatchertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\apdispatchertest failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\sputtest
102>z:\xonline_main\private\test\stftests\sputtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\sputtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\sputtest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\livetitle
101>z:\xonline_main\private\test\stftests\livetitle\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\livetitle\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livetitle failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\livestats
102>z:\xonline_main\private\test\stftests\livestats\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\livestats\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>errors in directory z:\xonline_main\private\test\stftests\quickenforcementtest
101>z:\xonline_main\private\test\stftests\quickenforcementtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livestats failed - rc = 2

101>z:\xonline_main\private\test\stftests\quickenforcementtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\quickenforcementtest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\vouchermgrtest
101>z:\xonline_main\private\test\stftests\vouchermgrtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\vouchermgrtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\stutiltest
102>z:\xonline_main\private\test\stftests\stutiltest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>z:\xonline_main\private\test\stftests\stutiltest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stutiltest failed - rc = 2

101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\vouchermgrtest failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\syschecktest
102>z:\xonline_main\private\test\stftests\syschecktest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\syschecktest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\syschecktest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\modifyssisdb failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\reportingtest\stress
102>z:\xonline_main\private\test\stftests\reportingtest\stress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\reportingtest\stress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\stress failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\cleanserfvt failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\xltranstest
102>z:\xonline_main\private\test\stftests\xltranstest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\toolsmgmttest
101>z:\xonline_main\private\test\stftests\toolsmgmttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\xltranstest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\toolsmgmttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\toolsmgmttest failed - rc = 2

102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xltranstest failed - rc = 2

101>errors in directory z:\xonline_main\private\test\stftests\wsmonitortest
101>z:\xonline_main\private\test\stftests\wsmonitortest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\wsmonitortest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\wsmonitortest failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\storagetestui
102>z:\xonline_main\private\test\stftests\storagetestui\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\storagetestui\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\storagetestui failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\statsstress
102>z:\xonline_main\private\test\stftests\statsstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\statsstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>errors in directory z:\xonline_main\private\test\stftests\gpstress
101>z:\xonline_main\private\test\stftests\gpstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>z:\xonline_main\private\test\stftests\gpstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\statsstress failed - rc = 2

101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\gpstress failed - rc = 2

102>errors in directory z:\xonline_main\private\test\stftests\migrateusertest
102>z:\xonline_main\private\test\stftests\migrateusertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>z:\xonline_main\private\test\stftests\migrateusertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\migrateusertest failed - rc = 2

1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msgtool\msbuild : error MSB1028: The logger failed unexpectedly.
2>z:\xonline_main\private\test\stftests\livematchtest\msbuild : error MSB1028: The logger failed unexpectedly.
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool failed - rc = 2

2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest failed - rc = 2

2>z:\xonline_main\private\test\stftests\hijackaccounttests\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\livebvt\msbuild : error MSB1028: The logger failed unexpectedly.
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt failed - rc = 2

2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests failed - rc = 2

1>z:\xonline_main\private\test\stftests\iflictest\msbuild : error MSB1028: The logger failed unexpectedly.
2>z:\xonline_main\private\test\stftests\tokendiehard\msbuild : error MSB1028: The logger failed unexpectedly.
2>z:\xonline_main\private\test\stftests\testthroughsg\msbuild : error MSB1028: The logger failed unexpectedly.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\buildd.log ===
BUILD: Examining z:\xonline_main\private\test\stftests directory tree for files to compile.
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "livematchtest.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "msgtool.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "livebvt.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "hijackaccounttests.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "iflictest.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "tokendiehard.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "testthroughsg.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Executing prebuild scripts  *************
1>Performing prebuild steps..  *************
1>'Z:\XONLINE_MAIN\public\ext\tools\build_pre_process.cmd '
1>build_pre_process.cmd: nmake /nologo /f z:\xonline_main\makefil0 versions
1>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\stfgui *************
1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfgui
2>Building generated files in z:\xonline_main\private\test\stftests\stfconsole\buildcore *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildcore'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfconsole\buildcore
1>Running MsBuild v3.5
2>z:\xonline_main\private\test\stftests\stfconsole\buildcore: TARGETPATH is objd
2>z:\xonline_main\private\test\stftests\stfconsole\buildcore building test code in dev tree
2>z:\xonline_main\private\test\stftests\stfconsole\buildcore: TARGETPATH is objd
2>z:\xonline_main\private\test\stftests\stfconsole\buildcore building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386 STFConsoleCore Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>errors in directory z:\xonline_main\private\test\stftests\stfgui
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>genbasemac: module STFConsoleCore not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTesteventListener.cs  ..\CsvNodeWriter.cs
2>LCG: BUILD_LCE_FILE: 0
1>Building generated files in z:\xonline_main\private\test\stftests\stfconsole\buildlive *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildlive'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfconsole\buildlive
2>SOURCE_ASMMETA (STFConsoleCore.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\STFConsoleCore.exe) 
2>'z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386 STFConsoleCore Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\stfconsole\buildlive: TARGETPATH is objd
1>z:\xonline_main\private\test\stftests\stfconsole\buildlive building test code in dev tree
1>z:\xonline_main\private\test\stftests\stfconsole\buildlive: TARGETPATH is objd
1>z:\xonline_main\private\test\stftests\stfconsole\buildlive building test code in dev tree
2>genbasemac: module STFConsoleCore not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTesteventListener.cs  ..\CsvNodeWriter.cs
2>LCG: BUILD_LCE_FILE: 0
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386 STFConsoleLive Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (STFConsoleCore.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\STFConsoleCore.exe) 
2>Building generated files in z:\xonline_main\private\test\stftests\basictest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\basictest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\basictest
1>genbasemac: module STFConsoleLive not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTestEventListener.cs  ..\CodeCoverageTestListener.cs  ..\CsvNodeWriter.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (STFConsoleLive.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\STFConsoleLive.exe) 
1>'z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386 STFConsoleLive Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\basictest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\basictest building test code in dev tree
2>z:\xonline_main\private\test\stftests\basictest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\basictest building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\basictest\objd\i386 BasicTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module STFConsoleLive not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTestEventListener.cs  ..\CodeCoverageTestListener.cs  ..\CsvNodeWriter.cs
1>LCG: BUILD_LCE_FILE: 0
2>genbasemac: module BasicTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= AsyncTests.cs  BasicTest.cs  FuncBasic.cs  Stress.cs
1>SOURCE_ASMMETA (STFConsoleLive.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\STFConsoleLive.exe) 
2>LCG: BUILD_LCE_FILE: 0
1>Building generated files in z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xrlscan\xrlscantestsuite'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite
2>SOURCE_ASMMETA (BasicTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\BasicTest.dll) 
2>'z:\xonline_main\private\test\stftests\basictest\objd\i386\_asmid.inc' is up-to-date
1>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite building test code in dev tree
1>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\basictest\objd\i386 BasicTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386 XrlScanTestSuite Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module BasicTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= AsyncTests.cs  BasicTest.cs  FuncBasic.cs  Stress.cs
2>LCG: BUILD_LCE_FILE: 0
1>genbasemac: module XrlScanTestSuite not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (BasicTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\BasicTest.dll) 
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= CustomTransaction.cs  TestBase.cs  UrlTest.cs  SettingsTest.cs  WhiteListTest.cs  MiscTest.cs  stress.cs  Suite.cs
2>Building generated files in z:\xonline_main\private\test\stftests\websgtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\websgtest
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (XrlScanTestSuite.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XrlScanTestSuite.dll) 
1>'z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386 XrlScanTestSuite Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\websgtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\websgtest building test code in dev tree
2>z:\xonline_main\private\test\stftests\websgtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\websgtest building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgtest\objd\i386 WebSGTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module XrlScanTestSuite not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= CustomTransaction.cs  TestBase.cs  UrlTest.cs  SettingsTest.cs  WhiteListTest.cs  MiscTest.cs  stress.cs  Suite.cs
2>genbasemac: module WebSGTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>LCG: BUILD_LCE_FILE: 0
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CDatafile.cs  Functionals.cs  FuncValid.cs  GeneralInfo.cs  Stats.cs  Stresstionals.cs  WebCacheReflector.cs  WebSgTest.cs
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (XrlScanTestSuite.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XrlScanTestSuite.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\xstoretest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xstoretest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xstoretest
2>SOURCE_ASMMETA (WebSGTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\WebSGTest.dll) 
2>'z:\xonline_main\private\test\stftests\websgtest\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgtest\objd\i386 WebSGTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\xstoretest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\xstoretest building test code in dev tree
2>genbasemac: module WebSGTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CDatafile.cs  Functionals.cs  FuncValid.cs  GeneralInfo.cs  Stats.cs  Stresstionals.cs  WebCacheReflector.cs  WebSgTest.cs
1>z:\xonline_main\private\test\stftests\xstoretest: TARGETPATH is obj
2>LCG: BUILD_LCE_FILE: 0
1>z:\xonline_main\private\test\stftests\xstoretest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xstoretest\objd\i386 XStoreTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (WebSGTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\WebSGTest.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\xmatchtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xmatchtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xmatchtest
2>z:\xonline_main\private\test\stftests\xmatchtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\xmatchtest building test code in dev tree
1>genbasemac: module XStoreTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\xmatchtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\xmatchtest building test code in dev tree
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=AccessToken.cs  FuncAchievementsRF.cs  FuncCrossTitleDF.cs  FuncCrossTitleEnumFiles.cs  FuncCrossTitleRF.cs  FuncCrossTitleWF.cs  FuncGameClipsDF.cs  FuncGameClipsRF.cs  FuncGameClipsWF.cs  FuncGlobalTitleDF.cs  FuncGlobalTitleEnumFiles.cs  FuncGlobalTitleRF.cs  FuncGlobalTitleWF.cs  FuncMsgDF.cs  FuncMsgRF.cs  FuncMsgWF.cs  FuncReadFileHash.cs  FuncReportBrokenLink.cs  FuncUserTitleDF.cs  FuncUserTitleRF.cs  FuncUserTitleWF.cs  FuncXeStatsDF.cs  FuncXeStatsRF.cs  FuncXeStatsWF.cs  FuzzEngine.cs  StressAvatar.cs  StressCrossTitle.cs  StressGlobalTitle.cs  StressMsgWR.cs  StressNameResolver.cs  StressReadTitleFiles.cs  StressUserTitle.cs  StressXBoxGameClips.cs  StressXeStats.cs  UnitTestsAvatar.cs  UnitTestsWriteFile.cs  XStoreTest.cs  UnitAvatarRegEx.cs
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xmatchtest\objd\i386 XMatchTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (XStoreTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XStoreTest.dll) 
1>'z:\xonline_main\private\test\stftests\xstoretest\objd\i386\_asmid.inc' is up-to-date
2>genbasemac: module XMatchTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xstoretest\objd\i386 XStoreTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=ConfigDBTest.cs  Func2CreateSession.cs  Func2DeadXBox.cs  Func2DeleteSession.cs  Func2HostMigScenarios.cs  Func2RankedMatch.cs  Func2SearchSession.cs  Func2SearchSessionByIds.cs  Func2SearchWeighted.cs  Func2SocialMatch.cs  Func2TitleChange.cs  Func2UpdateSession.cs  Func2UpdateSession_Partitioning.cs  FuncCreateSession.cs  FuncDeadSG.cs  FuncDeadXBox.cs  FuncDeleteSession.cs  FuncSearchSession.cs  FuncSplitSession.cs  FuncTitleChange.cs  FuncUpdateSession.cs  ICorThreadPool.cs  MatchCommands.cs  MatchDelayedRequests.cs  MatchReplayFile.cs  MatchStressBase.cs  MatchTitleSchema.cs  MigrationStressTests.cs  PartitioningTests.cs  Proximity.cs  STFMatchCounters.cs  Stress2Create.cs  Stress2Delete.cs  Stress2Search.cs  Stress2Split.cs  Stress2Update.cs  StressClient.cs  StressDeadXBoxTitleChange.cs  StressHostCreate.cs  StressHostDelete.cs  StressHostUpdate.cs  StressParams.cs  XMatchTest.cs  XPresListener.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (XMatchTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\XMatchTest.dll) 
2>'z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\_asmid.inc' is up-to-date
1>genbasemac: module XStoreTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xmatchtest\objd\i386 XMatchTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=AccessToken.cs  FuncAchievementsRF.cs  FuncCrossTitleDF.cs  FuncCrossTitleEnumFiles.cs  FuncCrossTitleRF.cs  FuncCrossTitleWF.cs  FuncGameClipsDF.cs  FuncGameClipsRF.cs  FuncGameClipsWF.cs  FuncGlobalTitleDF.cs  FuncGlobalTitleEnumFiles.cs  FuncGlobalTitleRF.cs  FuncGlobalTitleWF.cs  FuncMsgDF.cs  FuncMsgRF.cs  FuncMsgWF.cs  FuncReadFileHash.cs  FuncReportBrokenLink.cs  FuncUserTitleDF.cs  FuncUserTitleRF.cs  FuncUserTitleWF.cs  FuncXeStatsDF.cs  FuncXeStatsRF.cs  FuncXeStatsWF.cs  FuzzEngine.cs  StressAvatar.cs  StressCrossTitle.cs  StressGlobalTitle.cs  StressMsgWR.cs  StressNameResolver.cs  StressReadTitleFiles.cs  StressUserTitle.cs  StressXBoxGameClips.cs  StressXeStats.cs  UnitTestsAvatar.cs  UnitTestsWriteFile.cs  XStoreTest.cs  UnitAvatarRegEx.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (XStoreTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XStoreTest.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\feedback\feedback *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\feedback\feedback'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\feedback\feedback
2>genbasemac: module XMatchTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=ConfigDBTest.cs  Func2CreateSession.cs  Func2DeadXBox.cs  Func2DeleteSession.cs  Func2HostMigScenarios.cs  Func2RankedMatch.cs  Func2SearchSession.cs  Func2SearchSessionByIds.cs  Func2SearchWeighted.cs  Func2SocialMatch.cs  Func2TitleChange.cs  Func2UpdateSession.cs  Func2UpdateSession_Partitioning.cs  FuncCreateSession.cs  FuncDeadSG.cs  FuncDeadXBox.cs  FuncDeleteSession.cs  FuncSearchSession.cs  FuncSplitSession.cs  FuncTitleChange.cs  FuncUpdateSession.cs  ICorThreadPool.cs  MatchCommands.cs  MatchDelayedRequests.cs  MatchReplayFile.cs  MatchStressBase.cs  MatchTitleSchema.cs  MigrationStressTests.cs  PartitioningTests.cs  Proximity.cs  STFMatchCounters.cs  Stress2Create.cs  Stress2Delete.cs  Stress2Search.cs  Stress2Split.cs  Stress2Update.cs  StressClient.cs  StressDeadXBoxTitleChange.cs  StressHostCreate.cs  StressHostDelete.cs  StressHostUpdate.cs  StressParams.cs  XMatchTest.cs  XPresListener.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (XMatchTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\XMatchTest.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\fakesgservice *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\fakesgservice'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\fakesgservice
1>z:\xonline_main\private\test\stftests\feedback\feedback: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\feedback\feedback building test code in dev tree
1>z:\xonline_main\private\test\stftests\feedback\feedback: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\feedback\feedback building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386 Feedback Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\fakesgservice: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\fakesgservice building test code in dev tree
2>z:\xonline_main\private\test\stftests\fakesgservice: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\fakesgservice building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\fakesgservice\objd\i386 FakeSGService Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module Feedback not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module FakeSGService not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= AggregateReview.cs  ICorThreadPool.cs  MainClass.cs  RatingCal.cs  StressFeedback.cs  StressTOU.cs  XeComplaint.cs  XeFeedback.cs
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= FakeSGService.cs  FakeSGSocket.cs  ProjectInstaller.cs  ServiceMain.cs  SGUserInfo.cs  SGXBoxInfo.cs
2>LCG: BUILD_LCE_FILE: 0
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (Feedback.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\Feedback.dll) 
1>'z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\_asmid.inc' is up-to-date
2>SOURCE_ASMMETA (FakeSGService.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\FakeSGService.exe) 
2>'z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386 Feedback Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\fakesgservice\objd\i386 FakeSGService Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module FakeSGService not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module Feedback not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= FakeSGService.cs  FakeSGSocket.cs  ProjectInstaller.cs  ServiceMain.cs  SGUserInfo.cs  SGXBoxInfo.cs
2>LCG: BUILD_LCE_FILE: 0
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= AggregateReview.cs  ICorThreadPool.cs  MainClass.cs  RatingCal.cs  StressFeedback.cs  StressTOU.cs  XeComplaint.cs  XeFeedback.cs
1>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (FakeSGService.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\FakeSGService.exe) 
2>Building generated files in z:\xonline_main\private\test\stftests\xarb *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xarb'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xarb
1>SOURCE_ASMMETA (Feedback.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\Feedback.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\websgbvts *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgbvts'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\websgbvts
1>z:\xonline_main\private\test\stftests\websgbvts: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\websgbvts building test code in dev tree
2>z:\xonline_main\private\test\stftests\xarb: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\xarb building test code in dev tree
1>z:\xonline_main\private\test\stftests\websgbvts: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\websgbvts building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgbvts\objd\i386 WebSGBVTs Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\xarb: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\xarb building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xarb\objd\i386 XArbTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module WebSGBVTs not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= CertificateStore.cs  FuncWebSG.cs  Stress.cs  WebSGBVTs.cs  Tests\GeneralInfoWidgetTests.cs  Tests\LSPWidgetTests.cs  Tests\MessagingWidgetTests.cs  Tests\SignatureVerifyTests.cs  Tests\StatsWidgetTest.cs  Tests\StoregeWidgetTests.cs  Tests\UserWidgetTests.cs
1>LCG: BUILD_LCE_FILE: 0
2>genbasemac: module XArbTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= ConfigSettings.cs  FuncMigration.cs  FuncRegisterTests.cs  FuncReportResultTests.cs  FuncTimeExtendTests.cs  FuncTrustTests.cs  MigrationMgr.cs  NoiseMachine.cs  StressOption.cs  Stresstests.cs  XArbGlobal.cs  XArbStressGlobal.cs  XArbTest.cs  XArbTestBase.cs
1>SOURCE_ASMMETA (WebSGBVTs.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\WebSGBVTs.dll) 
2>LCG: BUILD_LCE_FILE: 0
1>'z:\xonline_main\private\test\stftests\websgbvts\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgbvts\objd\i386 WebSGBVTs Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (XArbTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\XArbTest.dll) 
2>'z:\xonline_main\private\test\stftests\xarb\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xarb\objd\i386 XArbTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module WebSGBVTs not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= CertificateStore.cs  FuncWebSG.cs  Stress.cs  WebSGBVTs.cs  Tests\GeneralInfoWidgetTests.cs  Tests\LSPWidgetTests.cs  Tests\MessagingWidgetTests.cs  Tests\SignatureVerifyTests.cs  Tests\StatsWidgetTest.cs  Tests\StoregeWidgetTests.cs  Tests\UserWidgetTests.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (WebSGBVTs.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\WebSGBVTs.dll) 
2>genbasemac: module XArbTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= ConfigSettings.cs  FuncMigration.cs  FuncRegisterTests.cs  FuncReportResultTests.cs  FuncTimeExtendTests.cs  FuncTrustTests.cs  MigrationMgr.cs  NoiseMachine.cs  StressOption.cs  Stresstests.cs  XArbGlobal.cs  XArbStressGlobal.cs  XArbTest.cs  XArbTestBase.cs
1>Building generated files in z:\xonline_main\private\test\stftests\webrunner *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\webrunner'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\webrunner
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (XArbTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\XArbTest.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\reportingtargettest\common *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\common'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\common
1>z:\xonline_main\private\test\stftests\webrunner: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\webrunner building test code in dev tree
1>z:\xonline_main\private\test\stftests\webrunner: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\webrunner building test code in dev tree
2>z:\xonline_main\private\test\stftests\reportingtargettest\common: TARGETPATH is Z:\XONLINE_MAIN\target\debug
2>z:\xonline_main\private\test\stftests\reportingtargettest\common building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\webrunner\objd\i386 _WebRunner_1 Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\reportingtargettest\common: TARGETPATH is Z:\XONLINE_MAIN\target\debug
2>z:\xonline_main\private\test\stftests\reportingtargettest\common building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386 Reporting_common Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module _WebRunner_1 not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=
2>genbasemac: module Reporting_common not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>LCG: BUILD_LCE_FILE: 0
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (_WebRunner_1.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\_WebRunner_1.dll) 
1>'z:\xonline_main\private\test\stftests\webrunner\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\webrunner\objd\i386 _WebRunner_1 Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (Reporting_common.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (Z:\XONLINE_MAIN\target\debug\i386\Reporting_common.) 
2>'z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\_asmid.inc' is up-to-date
1>genbasemac: module _WebRunner_1 not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386 Reporting_common Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (_WebRunner_1.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\_WebRunner_1.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\reportingtargettest\bvt *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\bvt'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\bvt
2>genbasemac: module Reporting_common not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (Reporting_common.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (Z:\XONLINE_MAIN\target\debug\i386\Reporting_common.) 
1>z:\xonline_main\private\test\stftests\reportingtargettest\bvt: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\reportingtargettest\bvt building test code in dev tree
2> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\nm15A4.tmp
1>z:\xonline_main\private\test\stftests\reportingtargettest\bvt: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\reportingtargettest\bvt building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386 ReportingTargetTestBVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>Building generated files in z:\xonline_main\private\test\stftests\reportingtargettest\replication *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\replication'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\replication
1>genbasemac: module ReportingTargetTestBVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
1>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs
1>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
1>LCG: BUILD_LCE_FILE: 0
2>z:\xonline_main\private\test\stftests\reportingtargettest\replication: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtargettest\replication building test code in dev tree
1>SOURCE_ASMMETA (ReportingTargetTestBVT.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ReportingTargetTestBVT.dll) 
1>'z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386 ReportingTargetTestBVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\reportingtargettest\replication: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtargettest\replication building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386 ReplicationFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module ReportingTargetTestBVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
1>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs
1>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
1>LCG: BUILD_LCE_FILE: 0
2>genbasemac: module ReplicationFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
2>_MANAGED_SOURCES=ReplicationTestBase.cs
2>_MANAGED_SOURCES=ReplicationTestBase.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (ReportingTargetTestBVT.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ReportingTargetTestBVT.dll) 
1> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\nm1A64.tmp
2>SOURCE_ASMMETA (ReplicationFVT.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\ReplicationFVT.dll) 
2>'z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\_asmid.inc' is up-to-date
1>Building generated files in z:\xonline_main\private\test\stftests\pcext\appnew *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\pcext\appnew'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\pcext\appnew
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386 ReplicationFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
2>genbasemac: module ReplicationFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
2>_MANAGED_SOURCES=ReplicationTestBase.cs
2>_MANAGED_SOURCES=ReplicationTestBase.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
2>LCG: BUILD_LCE_FILE: 0
1>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
2>SOURCE_ASMMETA (ReplicationFVT.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\ReplicationFVT.dll) 
2> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\nm1D13.tmp
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>Building generated files in z:\xonline_main\private\test\stftests\pcext\extensions\testextension *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\pcext\extensions\testextension'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\pcext\extensions\testextension
1>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
1>LCG: BUILD_LCE_FILE: 0
2>z:\xonline_main\private\test\stftests\pcext\extensions\testextension: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\pcext\extensions\testextension building test code in dev tree
1>SOURCE_ASMMETA (H2PCApp.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
1>'z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\pcext\extensions\testextension: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\pcext\extensions\testextension building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386 TestExtension Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (H2PCApp.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
1>Building generated files in z:\xonline_main\private\test\stftests\livecontenttest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livecontenttest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livecontenttest
2>genbasemac: module TestExtension not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=Test.cs
2>LCG: BUILD_LCE_FILE: 0
1>z:\xonline_main\private\test\stftests\livecontenttest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\livecontenttest building test code in dev tree
2>SOURCE_ASMMETA (TestExtension.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\TestExtension.dll) 
2>'z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\_asmid.inc' is up-to-date
1>z:\xonline_main\private\test\stftests\livecontenttest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\livecontenttest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livecontenttest\objd\i386 LiveContentTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386 TestExtension Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module LiveContentTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module TestExtension not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=ContentDownloadHandle.cs  ContentTestBase.cs  ContentTestData.cs  LiveContentTest.cs  TitleVaultHandle.cs  UpdateTestBase.cs
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=Test.cs
1>LCG: BUILD_LCE_FILE: 0
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (TestExtension.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\TestExtension.dll) 
1>SOURCE_ASMMETA (LiveContentTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\LiveContentTest.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\liveoffertest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\liveoffertest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\liveoffertest
1>'z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livecontenttest\objd\i386 LiveContentTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\liveoffertest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\liveoffertest building test code in dev tree
1>genbasemac: module LiveContentTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\liveoffertest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\liveoffertest building test code in dev tree
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=ContentDownloadHandle.cs  ContentTestBase.cs  ContentTestData.cs  LiveContentTest.cs  TitleVaultHandle.cs  UpdateTestBase.cs
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\liveoffertest\objd\i386 LiveOfferTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (LiveContentTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\LiveContentTest.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\apdispatchertest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\apdispatchertest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\apdispatchertest
2>genbasemac: module LiveOfferTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=LiveOfferTest.cs  LiveOfferTestBase.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (LiveOfferTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\LiveOfferTest.dll) 
1>z:\xonline_main\private\test\stftests\apdispatchertest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\apdispatchertest building test code in dev tree
2>'z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\liveoffertest\objd\i386 LiveOfferTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\apdispatchertest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\apdispatchertest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386 APDispatcherTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module LiveOfferTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=LiveOfferTest.cs  LiveOfferTestBase.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (LiveOfferTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\LiveOfferTest.dll) 
1>genbasemac: module APDispatcherTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>Building generated files in z:\xonline_main\private\test\stftests\livematchtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livematchtest
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=z:\xonline_main\private\common\tools\tools\ctitleid.cs
1>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs
1>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs z:\xonline_main\private\common\tools\tools\ctitleid.cs
1>LCG: BUILD_LCE_FILE: 0
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true LiveMatchTest.csproj /Target:BuildGenerated /p:Pass=Generate
1>SOURCE_ASMMETA (APDispatcherTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\APDispatcherTest.dll) 
1>'z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386 APDispatcherTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module APDispatcherTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=z:\xonline_main\private\common\tools\tools\ctitleid.cs
1>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs
1>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs z:\xonline_main\private\common\tools\tools\ctitleid.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (APDispatcherTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\APDispatcherTest.dll) 
1> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\nm2A4C.tmp
1>Building generated files in z:\xonline_main\private\test\stftests\spac *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\spac'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\spac
1>z:\xonline_main\private\test\stftests\spac: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\spac building test code in dev tree
1>z:\xonline_main\private\test\stftests\spac: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\spac building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\spac\objd\i386 SPACTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\livematchtest
2>z:\xonline_main\private\test\stftests\livematchtest\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest failed - rc = 2

2>Building generated files in z:\xonline_main\private\test\stftests\msgtool *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\msgtool
1>genbasemac: module SPACTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=SPACFunctionals.cs  SPACOverrides.cs  SPACTestBase.cs  SPACTests.cs
1>LCG: BUILD_LCE_FILE: 0
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true MsgTool.csproj /Target:BuildGenerated /p:Pass=Generate
1>SOURCE_ASMMETA (SPACTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SPACTest.dll) 
1>'z:\xonline_main\private\test\stftests\spac\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\spac\objd\i386 SPACTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module SPACTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=SPACFunctionals.cs  SPACOverrides.cs  SPACTestBase.cs  SPACTests.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (SPACTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SPACTest.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\sputtest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\sputtest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\sputtest
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\msgtool
2>z:\xonline_main\private\test\stftests\msgtool\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>z:\xonline_main\private\test\stftests\sputtest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\sputtest building test code in dev tree
1>z:\xonline_main\private\test\stftests\sputtest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\sputtest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\sputtest\objd\i386 SPUTTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool failed - rc = 2

2>Building generated files in z:\xonline_main\private\test\stftests\livetitle *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livetitle'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livetitle
1>genbasemac: module SPUTTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=NegativeTests.cs  PositiveTests.cs  SPUTSuite.cs  SPUTTestBase.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (SPUTTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SPUTTest.dll) 
1>'z:\xonline_main\private\test\stftests\sputtest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\sputtest\objd\i386 SPUTTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\livetitle: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\livetitle building test code in dev tree
1>genbasemac: module SPUTTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=NegativeTests.cs  PositiveTests.cs  SPUTSuite.cs  SPUTTestBase.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (SPUTTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SPUTTest.dll) 
2>z:\xonline_main\private\test\stftests\livetitle: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\livetitle building test code in dev tree
1>Building generated files in z:\xonline_main\private\test\stftests\livestats *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livestats'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livestats
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livetitle\objd\i386 LiveTitle Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\livestats: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\livestats building test code in dev tree
2>genbasemac: module LiveTitle not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=FuncDeploy.cs  FuncRedeploy.cs  LiveTitleTestBase.cs  LiveTitleTests.cs  Title.cs  TitleVerifier.cs
2>LCG: BUILD_LCE_FILE: 0
1>z:\xonline_main\private\test\stftests\livestats: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\livestats building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livestats\objd\i386 LiveStats Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (LiveTitle.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\LiveTitle.dll) 
2>'z:\xonline_main\private\test\stftests\livetitle\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livetitle\objd\i386 LiveTitle Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module LiveStats not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=FuncBoundary.cs  FuncDeploy.cs  FuncMove.cs  FuncOther.cs  LiveStatsTestBase.cs  LiveStatsTests.cs  StatsVerifier.cs  SVLeaderboard.cs  TitleStats.cs  TrueSkill.cs
1>LCG: BUILD_LCE_FILE: 0
2>genbasemac: module LiveTitle not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=FuncDeploy.cs  FuncRedeploy.cs  LiveTitleTestBase.cs  LiveTitleTests.cs  Title.cs  TitleVerifier.cs
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (LiveStats.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\LiveStats.dll) 
1>'z:\xonline_main\private\test\stftests\livestats\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livestats\objd\i386 LiveStats Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (LiveTitle.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\LiveTitle.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\quickenforcementtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\quickenforcementtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\quickenforcementtest
2>z:\xonline_main\private\test\stftests\quickenforcementtest: TARGETPATH is objd
2>z:\xonline_main\private\test\stftests\quickenforcementtest building test code in dev tree
1>genbasemac: module LiveStats not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=FuncBoundary.cs  FuncDeploy.cs  FuncMove.cs  FuncOther.cs  LiveStatsTestBase.cs  LiveStatsTests.cs  StatsVerifier.cs  SVLeaderboard.cs  TitleStats.cs  TrueSkill.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (LiveStats.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\LiveStats.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\stutiltest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stutiltest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stutiltest
2>z:\xonline_main\private\test\stftests\quickenforcementtest: TARGETPATH is objd
2>z:\xonline_main\private\test\stftests\quickenforcementtest building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386 QuickEnforcementTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\stutiltest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\stutiltest building test code in dev tree
2>genbasemac: module QuickEnforcementTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= QuickEnforcementLiveTestBase.cs     QuickEnforcementLiveTests.cs     QuickEnforcementTestBase.cs     QuickEnforcementTests.cs
2>LCG: BUILD_LCE_FILE: 0
1>z:\xonline_main\private\test\stftests\stutiltest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\stutiltest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stutiltest\objd\i386 STUtilTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (QuickEnforcementTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\QuickEnforcementTest.dll) 
2>'z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386 QuickEnforcementTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module STUtilTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=CTitleId.cs  PositiveActionCases.cs  PositiveAdditionalOptionsCases.cs  PositiveLocalFileCases.cs  PositiveStoragePathCases.cs  STUtilTest.cs  Utility.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (STUtilTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\STUtilTest.dll) 
1>'z:\xonline_main\private\test\stftests\stutiltest\objd\i386\_asmid.inc' is up-to-date
2>genbasemac: module QuickEnforcementTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= QuickEnforcementLiveTestBase.cs     QuickEnforcementLiveTests.cs     QuickEnforcementTestBase.cs     QuickEnforcementTests.cs
2>LCG: BUILD_LCE_FILE: 0
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stutiltest\objd\i386 STUtilTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (QuickEnforcementTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\QuickEnforcementTest.dll) 
2> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\nm3DCC.tmp
1>genbasemac: module STUtilTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=CTitleId.cs  PositiveActionCases.cs  PositiveAdditionalOptionsCases.cs  PositiveLocalFileCases.cs  PositiveStoragePathCases.cs  STUtilTest.cs  Utility.cs
1>LCG: BUILD_LCE_FILE: 0
2>Building generated files in z:\xonline_main\private\test\stftests\vouchermgrtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\vouchermgrtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\vouchermgrtest
1>SOURCE_ASMMETA (STUtilTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\STUtilTest.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\syschecktest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\syschecktest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\syschecktest
2>z:\xonline_main\private\test\stftests\vouchermgrtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\vouchermgrtest building test code in dev tree
2>z:\xonline_main\private\test\stftests\vouchermgrtest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\vouchermgrtest building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386 VoucherMgrTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\syschecktest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\syschecktest building test code in dev tree
1>z:\xonline_main\private\test\stftests\syschecktest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\syschecktest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\syschecktest\objd\i386 SysCheckTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module SysCheckTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module VoucherMgrTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=Boundary.cs  HealthURLs.cs  Negative.cs  Positive.cs  SCResultsParser.cs  Stress.cs  SysCheckTest.cs  SysCheckTestBase.cs  XMLVerifier.cs
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=VoucherMgrTest.cs  VoucherMgrTestBase.cs
1>LCG: BUILD_LCE_FILE: 0
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (VoucherMgrTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\VoucherMgrTest.dll) 
1>SOURCE_ASMMETA (SysCheckTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SysCheckTest.dll) 
2>'z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\_asmid.inc' is up-to-date
1>'z:\xonline_main\private\test\stftests\syschecktest\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386 VoucherMgrTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\syschecktest\objd\i386 SysCheckTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module VoucherMgrTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module SysCheckTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=VoucherMgrTest.cs  VoucherMgrTestBase.cs
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=Boundary.cs  HealthURLs.cs  Negative.cs  Positive.cs  SCResultsParser.cs  Stress.cs  SysCheckTest.cs  SysCheckTestBase.cs  XMLVerifier.cs
1>LCG: BUILD_LCE_FILE: 0
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (SysCheckTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\SysCheckTest.dll) 
2>SOURCE_ASMMETA (VoucherMgrTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\VoucherMgrTest.dll) 
1>Building generated files in z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\modifyssisdb'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb
2>Building generated files in z:\xonline_main\private\test\stftests\reportingtest\stress *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\stress'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\stress
2>z:\xonline_main\private\test\stftests\reportingtest\stress: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtest\stress building test code in dev tree
1>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb building test code in dev tree
2>z:\xonline_main\private\test\stftests\reportingtest\stress: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtest\stress building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386 ReportingStressTests Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386 ModifySSISDB Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module ReportingStressTests not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CleanserStress\CleanserStress.cs  CleanserStress\CleanserStressSingleton.cs  CleanserStress\CleanserVipTrafficStress.cs  CleanserStress\SingleCleanserTrafficStress.cs
2>LCG: BUILD_LCE_FILE: 0
1>genbasemac: module ModifySSISDB not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=ModifySSISDB.cs
1>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (ReportingStressTests.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\ReportingStressTests.dll) 
2>'z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\_asmid.inc' is up-to-date
1>SOURCE_ASMMETA (ModifySSISDB.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ModifySSISDB.dll) 
1>'z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386 ReportingStressTests Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386 ModifySSISDB Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module ReportingStressTests not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module ModifySSISDB not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CleanserStress\CleanserStress.cs  CleanserStress\CleanserStressSingleton.cs  CleanserStress\CleanserVipTrafficStress.cs  CleanserStress\SingleCleanserTrafficStress.cs
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=ModifySSISDB.cs
2>LCG: BUILD_LCE_FILE: 0
1>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (ReportingStressTests.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\ReportingStressTests.dll) 
1>SOURCE_ASMMETA (ModifySSISDB.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ModifySSISDB.dll) 
2> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\nm4A79.tmp
1> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\nm4A79.tmp
2>Building generated files in z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\cleanserfvt'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt
1>Building generated files in z:\xonline_main\private\test\stftests\xltranstest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xltranstest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xltranstest
1>z:\xonline_main\private\test\stftests\xltranstest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\xltranstest building test code in dev tree
1>z:\xonline_main\private\test\stftests\xltranstest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\xltranstest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xltranstest\objd\i386 XLTransTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt building test code in dev tree
2>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386 CleanserFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module CleanserFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module XLTransTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=XLTrans.cs  XLTransBase.cs  XLTransImpl.cs  XLTransNegative.cs  XLTransPositive.cs  xlTransSuite.cs  XLTransToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmt.cs  ..\ToolsMgmtTest\WCToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmtBase.cs
1>LCG: BUILD_LCE_FILE: 0
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CleanserFVTSuite.cs  CleanserMessageFidelityFunctionalTest.cs  CleanserMessageFunctionalTest.cs
2>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (XLTransTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XLTransTest.dll) 
1>'z:\xonline_main\private\test\stftests\xltranstest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xltranstest\objd\i386 XLTransTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>SOURCE_ASMMETA (CleanserFVT.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\CleanserFVT.dll) 
2>'z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386 CleanserFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module XLTransTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=XLTrans.cs  XLTransBase.cs  XLTransImpl.cs  XLTransNegative.cs  XLTransPositive.cs  xlTransSuite.cs  XLTransToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmt.cs  ..\ToolsMgmtTest\WCToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmtBase.cs
1>LCG: BUILD_LCE_FILE: 0
2>genbasemac: module CleanserFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (XLTransTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\XLTransTest.dll) 
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=CleanserFVTSuite.cs  CleanserMessageFidelityFunctionalTest.cs  CleanserMessageFunctionalTest.cs
2>LCG: BUILD_LCE_FILE: 0
1>Building generated files in z:\xonline_main\private\test\stftests\toolsmgmttest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\toolsmgmttest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\toolsmgmttest
2>SOURCE_ASMMETA (CleanserFVT.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\CleanserFVT.dll) 
2> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\nm4FF5.tmp
1>z:\xonline_main\private\test\stftests\toolsmgmttest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\toolsmgmttest building test code in dev tree
1>z:\xonline_main\private\test\stftests\toolsmgmttest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\toolsmgmttest building test code in dev tree
2>Building generated files in z:\xonline_main\private\test\stftests\wsmonitortest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\wsmonitortest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\wsmonitortest
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386 ToolsMgmtDvt Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\wsmonitortest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\wsmonitortest building test code in dev tree
1>genbasemac: module ToolsMgmtDvt not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>z:\xonline_main\private\test\stftests\wsmonitortest: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\wsmonitortest building test code in dev tree
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= ToolsMgmt.cs  ToolsMgmtBase.cs  WCToolsMgmt.cs  Positive.cs  Negative.cs  MultiProp.cs  Stress.cs  Regression.cs
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386 WSMonitorTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (ToolsMgmtDvt.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ToolsMgmtDvt.dll) 
1>'z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386 ToolsMgmtDvt Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module WSMonitorTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=NTServiceCases.cs  ReportingCases.cs  ScriptGroupCases.cs  ScriptingCases.cs  ScriptInteropCases.cs  ServiceCases.cs  WSMonitorTest.cs  WSMonitorTestBase.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (WSMonitorTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\WSMonitorTest.dll) 
1>genbasemac: module ToolsMgmtDvt not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>'z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\_asmid.inc' is up-to-date
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= ToolsMgmt.cs  ToolsMgmtBase.cs  WCToolsMgmt.cs  Positive.cs  Negative.cs  MultiProp.cs  Stress.cs  Regression.cs
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386 WSMonitorTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (ToolsMgmtDvt.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\ToolsMgmtDvt.dll) 
2>genbasemac: module WSMonitorTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1> perl  -pe "s/([^\s\\]+\.\w+)/$1/g" > objd\_cs_inc.mac < z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\nm5707.tmp
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=NTServiceCases.cs  ReportingCases.cs  ScriptGroupCases.cs  ScriptingCases.cs  ScriptInteropCases.cs  ServiceCases.cs  WSMonitorTest.cs  WSMonitorTestBase.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (WSMonitorTest.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\WSMonitorTest.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\livebvt *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livebvt
1>Building generated files in z:\xonline_main\private\test\stftests\storagetestui *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\storagetestui'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\storagetestui
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true LiveBVT.csproj /Target:BuildGenerated /p:Pass=Generate
1>z:\xonline_main\private\test\stftests\storagetestui: TARGETPATH is objd
1>z:\xonline_main\private\test\stftests\storagetestui building test code in dev tree
1>z:\xonline_main\private\test\stftests\storagetestui: TARGETPATH is objd
1>z:\xonline_main\private\test\stftests\storagetestui building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\storagetestui\objd\i386 StorageTestUI Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module StorageTestUI not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=Form1.cs  Form1.Designer.cs  Program.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (StorageTestUI.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\StorageTestUI.exe) 
1>'z:\xonline_main\private\test\stftests\storagetestui\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\storagetestui\objd\i386 StorageTestUI Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\livebvt
2>z:\xonline_main\private\test\stftests\livebvt\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>genbasemac: module StorageTestUI not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=Form1.cs  Form1.Designer.cs  Program.cs
1>LCG: BUILD_LCE_FILE: 0
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt failed - rc = 2

2>Building generated files in z:\xonline_main\private\test\stftests\gpstress *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\gpstress'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\gpstress
1>SOURCE_ASMMETA (StorageTestUI.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\StorageTestUI.exe) 
1>Building generated files in z:\xonline_main\private\test\stftests\statsstress *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\statsstress'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\statsstress
2>z:\xonline_main\private\test\stftests\gpstress: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\gpstress building test code in dev tree
2>z:\xonline_main\private\test\stftests\gpstress: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\gpstress building test code in dev tree
1>z:\xonline_main\private\test\stftests\statsstress: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\statsstress building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\gpstress\objd\i386 GPStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>z:\xonline_main\private\test\stftests\statsstress: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\statsstress building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\statsstress\objd\i386 StatsStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module GPStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= Achievements.cs  GPStress.cs  Settings.cs  support.cs  TitleInfo.cs
2>LCG: BUILD_LCE_FILE: 0
1>genbasemac: module StatsStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= StatsStress.cs  StressCoordinator.cs  StressReqBuilder.cs
2>SOURCE_ASMMETA (GPStress.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\GPStress.dll) 
2>'z:\xonline_main\private\test\stftests\gpstress\objd\i386\_asmid.inc' is up-to-date
1>LCG: BUILD_LCE_FILE: 0
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\gpstress\objd\i386 GPStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>SOURCE_ASMMETA (StatsStress.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\StatsStress.dll) 
1>'z:\xonline_main\private\test\stftests\statsstress\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\statsstress\objd\i386 StatsStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module GPStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES= Achievements.cs  GPStress.cs  Settings.cs  support.cs  TitleInfo.cs
2>LCG: BUILD_LCE_FILE: 0
1>genbasemac: module StatsStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES= StatsStress.cs  StressCoordinator.cs  StressReqBuilder.cs
1>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (GPStress.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\GPStress.dll) 
2>Building generated files in z:\xonline_main\private\test\stftests\hijackaccounttests *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\hijackaccounttests
1>SOURCE_ASMMETA (StatsStress.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\StatsStress.dll) 
1>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\iflictest *************
1>'MSBuild.cmd "iflictest.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\iflictest
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true HijackAccountTests.csproj /Target:BuildGenerated /p:Pass=Generate
1>Running MsBuild v3.5
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>errors in directory z:\xonline_main\private\test\stftests\iflictest
1>z:\xonline_main\private\test\stftests\iflictest\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>errors in directory z:\xonline_main\private\test\stftests\hijackaccounttests
2>z:\xonline_main\private\test\stftests\hijackaccounttests\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>Building generated files in z:\xonline_main\private\test\stftests\migrateusertest *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 /nologo /f z:\xonline_main\public\ext\tools\makefile.def NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\migrateusertest'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\migrateusertest
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS0 NOLINK=1 PASS0ONLY=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests failed - rc = 2

2>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\tokendiehard *************
2>'MSBuild.cmd "tokendiehard.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\tokendiehard
2>Running MsBuild v3.5
1>z:\xonline_main\private\test\stftests\migrateusertest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\migrateusertest building test code in dev tree
1>z:\xonline_main\private\test\stftests\migrateusertest: TARGETPATH is obj
1>z:\xonline_main\private\test\stftests\migrateusertest building test code in dev tree
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\migrateusertest\objd\i386 MigrateUserTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module MigrateUserTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=MigrateUserTest.cs  Copy.cs  ReadAndWrite.cs  CallReadAndWriteCommand.cs  CallCopyCommand.cs
1>LCG: BUILD_LCE_FILE: 0
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\tokendiehard
2>z:\xonline_main\private\test\stftests\tokendiehard\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>SOURCE_ASMMETA (MigrateUserTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\MigrateUserTest.dll) 
1>'z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\_asmid.inc' is up-to-date
1>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\migrateusertest\objd\i386 MigrateUserTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>genbasemac: module MigrateUserTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\testthroughsg *************
2>'MSBuild.cmd "testthroughsg.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\testthroughsg
1>ALLOW_DLL_REFERENCES=1
1>CS_INCLUDES_FIXED=
1>_MANAGED_SOURCES=MigrateUserTest.cs  Copy.cs  ReadAndWrite.cs  CallReadAndWriteCommand.cs  CallCopyCommand.cs
1>LCG: BUILD_LCE_FILE: 0
1>SOURCE_ASMMETA (MigrateUserTest.asmmeta) 
1>_O_ASMMETA (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta) 
1>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta_ver_pass2) 
1>ASMMETA_INPUT (objd\i386\MigrateUserTest.dll) 
2>Running MsBuild v3.5
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>errors in directory z:\xonline_main\private\test\stftests\testthroughsg
2>z:\xonline_main\private\test\stftests\testthroughsg\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\stfgui
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\stfconsole\buildcore
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\stfconsole\buildlive
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\basictest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\websgtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\xstoretest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\xmatchtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\feedback\feedback
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\fakesgservice
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\xarb
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\websgbvts
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\webrunner
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtargettest\common
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtargettest\bvt
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtargettest\replication
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\pcext\appnew
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\pcext\extensions\testextension
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\livecontenttest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\liveoffertest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\apdispatchertest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\livematchtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\spac
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\msgtool
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\sputtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\livetitle
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\livestats
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\quickenforcementtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\stutiltest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\vouchermgrtest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\syschecktest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtest\stress
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\xltranstest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\toolsmgmttest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\wsmonitortest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\livebvt
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\storagetestui
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\gpstress
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\statsstress
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\hijackaccounttests
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\iflictest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\migrateusertest
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\tokendiehard
Skipping the PASS1 obj pass for z:\xonline_main\private\test\stftests\testthroughsg
Number of dirs done building libs 1 out of 46
101>Compiling z:\xonline_main\private\test\stftests\stfconsole\buildcore *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildcore'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfconsole\buildcore
102>Compiling z:\xonline_main\private\test\stftests\stfconsole\buildlive *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildlive'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfconsole\buildlive
101>z:\xonline_main\private\test\stftests\stfconsole\buildcore: TARGETPATH is objd
101>z:\xonline_main\private\test\stftests\stfconsole\buildcore building test code in dev tree
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive: TARGETPATH is objd
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive building test code in dev tree
101>z:\xonline_main\private\test\stftests\stfconsole\buildcore: TARGETPATH is objd
101>z:\xonline_main\private\test\stftests\stfconsole\buildcore building test code in dev tree
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive: TARGETPATH is objd
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386 STFConsoleCore Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386 STFConsoleLive Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module STFConsoleLive not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTestEventListener.cs  ..\CodeCoverageTestListener.cs  ..\CsvNodeWriter.cs
101>genbasemac: module STFConsoleCore not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTesteventListener.cs  ..\CsvNodeWriter.cs
102>LCG: BUILD_LCE_FILE: 0
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (STFConsoleLive.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\STFConsoleLive.exe) 
101>SOURCE_ASMMETA (STFConsoleCore.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\STFConsoleCore.exe) 
102>'z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\_asmid.inc' is up-to-date
101>'z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386 STFConsoleCore Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386 STFConsoleLive Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module STFConsoleCore not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module STFConsoleLive not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTesteventListener.cs  ..\CsvNodeWriter.cs
102>ALLOW_DLL_REFERENCES=1
101>LCG: BUILD_LCE_FILE: 0
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=..\ConsoleFeedbackFactory.cs  ..\ConsoleTestEventListener.cs  ..\STFConsole.cs  ..\XmlTestEventListener.cs  ..\CodeCoverageTestListener.cs  ..\CsvNodeWriter.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (STFConsoleLive.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildlive\objd\i386\STFConsoleLive.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\STFConsoleLive.exe) 
101>SOURCE_ASMMETA (STFConsoleCore.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stfconsole\buildcore\objd\i386\STFConsoleCore.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\STFConsoleCore.exe) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\STFConsoleLive.exe   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:exe 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /unsafe 
102> /define:UsingSTFLive 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:x86 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> ..\ConsoleFeedbackFactory.cs 
102> ..\ConsoleTestEventListener.cs 
102> ..\STFConsole.cs 
102> ..\XmlTestEventListener.cs 
102> ..\CodeCoverageTestListener.cs 
102> ..\CsvNodeWriter.cs 
102> objd\i386\_generated.cs
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\STFConsoleCore.exe   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:exe 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:x86 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> ..\ConsoleFeedbackFactory.cs 
101> ..\ConsoleTestEventListener.cs 
101> ..\STFConsole.cs 
101> ..\XmlTesteventListener.cs 
101> ..\CsvNodeWriter.cs 
101> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\stfconsole\buildlive
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\stfconsole\buildlive\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildlive failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\basictest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\basictest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\basictest
102>z:\xonline_main\private\test\stftests\basictest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\basictest building test code in dev tree
102>z:\xonline_main\private\test\stftests\basictest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\basictest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\basictest\objd\i386 BasicTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module BasicTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= AsyncTests.cs  BasicTest.cs  FuncBasic.cs  Stress.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (BasicTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\BasicTest.dll) 
102>'z:\xonline_main\private\test\stftests\basictest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\basictest\objd\i386 BasicTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>z:\XONLINE_MAIN\private\test\StfTests\STFConsole\STFConsole.cs(486,17): error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
101>errors in directory z:\xonline_main\private\test\stftests\stfconsole\buildcore
101>z:\xonline_main\private\test\stftests\stfconsole\stfconsole.cs(486) : error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
101>z:\XONLINE_MAIN\private\test\StfTests\STFConsole\STFConsole.cs(495,39): error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
102>genbasemac: module BasicTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>z:\xonline_main\private\test\stftests\stfconsole\stfconsole.cs(495) : error CS0246: The type or namespace name 'VsTestResultTestEventListener' could not be found (are you missing a using directive or an assembly reference?)
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= AsyncTests.cs  BasicTest.cs  FuncBasic.cs  Stress.cs

101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stfconsole\buildcore failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xrlscan\xrlscantestsuite'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (BasicTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\basictest\objd\i386\BasicTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\BasicTest.dll) 
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite building test code in dev tree
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386 XrlScanTestSuite Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\BasicTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> AsyncTests.cs 
102> BasicTest.cs 
102> FuncBasic.cs 
102> Stress.cs 
102> objd\i386\_generated.cs
101>genbasemac: module XrlScanTestSuite not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= CustomTransaction.cs  TestBase.cs  UrlTest.cs  SettingsTest.cs  WhiteListTest.cs  MiscTest.cs  stress.cs  Suite.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (XrlScanTestSuite.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XrlScanTestSuite.dll) 
101>'z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386 XrlScanTestSuite Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\basictest
102>z:\xonline_main\private\test\stftests\basictest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\basictest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\basictest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\websgtest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgtest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\websgtest
102>z:\xonline_main\private\test\stftests\websgtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\websgtest building test code in dev tree
101>genbasemac: module XrlScanTestSuite not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= CustomTransaction.cs  TestBase.cs  UrlTest.cs  SettingsTest.cs  WhiteListTest.cs  MiscTest.cs  stress.cs  Suite.cs
101>LCG: BUILD_LCE_FILE: 0
102>z:\xonline_main\private\test\stftests\websgtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\websgtest building test code in dev tree
101>SOURCE_ASMMETA (XrlScanTestSuite.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\objd\i386\XrlScanTestSuite.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XrlScanTestSuite.dll) 
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgtest\objd\i386 WebSGTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\XrlScanTestSuite.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> CustomTransaction.cs 
101> TestBase.cs 
101> UrlTest.cs 
101> SettingsTest.cs 
101> WhiteListTest.cs 
101> MiscTest.cs 
101> stress.cs 
101> Suite.cs 
101> objd\i386\_generated.cs
102>genbasemac: module WebSGTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CDatafile.cs  Functionals.cs  FuncValid.cs  GeneralInfo.cs  Stats.cs  Stresstionals.cs  WebCacheReflector.cs  WebSgTest.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (WebSGTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\WebSGTest.dll) 
102>'z:\xonline_main\private\test\stftests\websgtest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgtest\objd\i386 WebSGTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module WebSGTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CDatafile.cs  Functionals.cs  FuncValid.cs  GeneralInfo.cs  Stats.cs  Stresstionals.cs  WebCacheReflector.cs  WebSgTest.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (WebSGTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgtest\objd\i386\WebSGTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\WebSGTest.dll) 
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\xrlscan\xrlscantestsuite\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\WebSGTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xrlscan\xrlscantestsuite failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\xstoretest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xstoretest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xstoretest
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> CDatafile.cs 
102> Functionals.cs 
102> FuncValid.cs 
102> GeneralInfo.cs 
102> Stats.cs 
102> Stresstionals.cs 
102> WebCacheReflector.cs 
102> WebSgTest.cs 
102> objd\i386\_generated.cs
101>z:\xonline_main\private\test\stftests\xstoretest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xstoretest building test code in dev tree
101>z:\xonline_main\private\test\stftests\xstoretest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xstoretest building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xstoretest\objd\i386 XStoreTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\websgtest
102>z:\xonline_main\private\test\stftests\websgtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\websgtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>genbasemac: module XStoreTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=AccessToken.cs  FuncAchievementsRF.cs  FuncCrossTitleDF.cs  FuncCrossTitleEnumFiles.cs  FuncCrossTitleRF.cs  FuncCrossTitleWF.cs  FuncGameClipsDF.cs  FuncGameClipsRF.cs  FuncGameClipsWF.cs  FuncGlobalTitleDF.cs  FuncGlobalTitleEnumFiles.cs  FuncGlobalTitleRF.cs  FuncGlobalTitleWF.cs  FuncMsgDF.cs  FuncMsgRF.cs  FuncMsgWF.cs  FuncReadFileHash.cs  FuncReportBrokenLink.cs  FuncUserTitleDF.cs  FuncUserTitleRF.cs  FuncUserTitleWF.cs  FuncXeStatsDF.cs  FuncXeStatsRF.cs  FuncXeStatsWF.cs  FuzzEngine.cs  StressAvatar.cs  StressCrossTitle.cs  StressGlobalTitle.cs  StressMsgWR.cs  StressNameResolver.cs  StressReadTitleFiles.cs  StressUserTitle.cs  StressXBoxGameClips.cs  StressXeStats.cs  UnitTestsAvatar.cs  UnitTestsWriteFile.cs  XStoreTest.cs  UnitAvatarRegEx.cs
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'101>LCG: BUILD_LCE_FILE: 0

102>Stop.
101>SOURCE_ASMMETA (XStoreTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XStoreTest.dll) 
101>'z:\xonline_main\private\test\stftests\xstoretest\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xstoretest\objd\i386 XStoreTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgtest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\xmatchtest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xmatchtest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xmatchtest
101>genbasemac: module XStoreTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=AccessToken.cs  FuncAchievementsRF.cs  FuncCrossTitleDF.cs  FuncCrossTitleEnumFiles.cs  FuncCrossTitleRF.cs  FuncCrossTitleWF.cs  FuncGameClipsDF.cs  FuncGameClipsRF.cs  FuncGameClipsWF.cs  FuncGlobalTitleDF.cs  FuncGlobalTitleEnumFiles.cs  FuncGlobalTitleRF.cs  FuncGlobalTitleWF.cs  FuncMsgDF.cs  FuncMsgRF.cs  FuncMsgWF.cs  FuncReadFileHash.cs  FuncReportBrokenLink.cs  FuncUserTitleDF.cs  FuncUserTitleRF.cs  FuncUserTitleWF.cs  FuncXeStatsDF.cs  FuncXeStatsRF.cs  FuncXeStatsWF.cs  FuzzEngine.cs  StressAvatar.cs  StressCrossTitle.cs  StressGlobalTitle.cs  StressMsgWR.cs  StressNameResolver.cs  StressReadTitleFiles.cs  StressUserTitle.cs  StressXBoxGameClips.cs  StressXeStats.cs  UnitTestsAvatar.cs  UnitTestsWriteFile.cs  XStoreTest.cs  UnitAvatarRegEx.cs
101>LCG: BUILD_LCE_FILE: 0
102>z:\xonline_main\private\test\stftests\xmatchtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\xmatchtest building test code in dev tree
101>SOURCE_ASMMETA (XStoreTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xstoretest\objd\i386\XStoreTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XStoreTest.dll) 
102>z:\xonline_main\private\test\stftests\xmatchtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\xmatchtest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xmatchtest\objd\i386 XMatchTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\XStoreTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\test\LiveInfra\LiveLib\lib\objd\i386\LiveLib.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> AccessToken.cs 
101> FuncAchievementsRF.cs 
101> FuncCrossTitleDF.cs 
101> FuncCrossTitleEnumFiles.cs 
101> FuncCrossTitleRF.cs 
101> FuncCrossTitleWF.cs 
101> FuncGameClipsDF.cs 
101> FuncGameClipsRF.cs 
101> FuncGameClipsWF.cs 
101> FuncGlobalTitleDF.cs 
101> FuncGlobalTitleEnumFiles.cs 
101> FuncGlobalTitleRF.cs 
101> FuncGlobalTitleWF.cs 
101> FuncMsgDF.cs 
101> FuncMsgRF.cs 
101> FuncMsgWF.cs 
101> FuncReadFileHash.cs 
101> FuncReportBrokenLink.cs 
101> FuncUserTitleDF.cs 
101> FuncUserTitleRF.cs 
101> FuncUserTitleWF.cs 
101> FuncXeStatsDF.cs 
101> FuncXeStatsRF.cs 
101> FuncXeStatsWF.cs 
101> FuzzEngine.cs 
101> StressAvatar.cs 
101> StressCrossTitle.cs 
101> StressGlobalTitle.cs 
101> StressMsgWR.cs 
101> StressNameResolver.cs 
101> StressReadTitleFiles.cs 
101> StressUserTitle.cs 
101> StressXBoxGameClips.cs 
101> StressXeStats.cs 
101> UnitTestsAvatar.cs 
101> UnitTestsWriteFile.cs 
101> XStoreTest.cs 
101> UnitAvatarRegEx.cs 
101> objd\i386\_generated.cs
102>genbasemac: module XMatchTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=ConfigDBTest.cs  Func2CreateSession.cs  Func2DeadXBox.cs  Func2DeleteSession.cs  Func2HostMigScenarios.cs  Func2RankedMatch.cs  Func2SearchSession.cs  Func2SearchSessionByIds.cs  Func2SearchWeighted.cs  Func2SocialMatch.cs  Func2TitleChange.cs  Func2UpdateSession.cs  Func2UpdateSession_Partitioning.cs  FuncCreateSession.cs  FuncDeadSG.cs  FuncDeadXBox.cs  FuncDeleteSession.cs  FuncSearchSession.cs  FuncSplitSession.cs  FuncTitleChange.cs  FuncUpdateSession.cs  ICorThreadPool.cs  MatchCommands.cs  MatchDelayedRequests.cs  MatchReplayFile.cs  MatchStressBase.cs  MatchTitleSchema.cs  MigrationStressTests.cs  PartitioningTests.cs  Proximity.cs  STFMatchCounters.cs  Stress2Create.cs  Stress2Delete.cs  Stress2Search.cs  Stress2Split.cs  Stress2Update.cs  StressClient.cs  StressDeadXBoxTitleChange.cs  StressHostCreate.cs  StressHostDelete.cs  StressHostUpdate.cs  StressParams.cs  XMatchTest.cs  XPresListener.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (XMatchTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\XMatchTest.dll) 
102>'z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xmatchtest\objd\i386 XMatchTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module XMatchTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=ConfigDBTest.cs  Func2CreateSession.cs  Func2DeadXBox.cs  Func2DeleteSession.cs  Func2HostMigScenarios.cs  Func2RankedMatch.cs  Func2SearchSession.cs  Func2SearchSessionByIds.cs  Func2SearchWeighted.cs  Func2SocialMatch.cs  Func2TitleChange.cs  Func2UpdateSession.cs  Func2UpdateSession_Partitioning.cs  FuncCreateSession.cs  FuncDeadSG.cs  FuncDeadXBox.cs  FuncDeleteSession.cs  FuncSearchSession.cs  FuncSplitSession.cs  FuncTitleChange.cs  FuncUpdateSession.cs  ICorThreadPool.cs  MatchCommands.cs  MatchDelayedRequests.cs  MatchReplayFile.cs  MatchStressBase.cs  MatchTitleSchema.cs  MigrationStressTests.cs  PartitioningTests.cs  Proximity.cs  STFMatchCounters.cs  Stress2Create.cs  Stress2Delete.cs  Stress2Search.cs  Stress2Split.cs  Stress2Update.cs  StressClient.cs  StressDeadXBoxTitleChange.cs  StressHostCreate.cs  StressHostDelete.cs  StressHostUpdate.cs  StressParams.cs  XMatchTest.cs  XPresListener.cs
102>LCG: BUILD_LCE_FILE: 0
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\xstoretest
101>z:\xonline_main\private\test\stftests\xstoretest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>SOURCE_ASMMETA (XMatchTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta) 
101>z:\xonline_main\private\test\stftests\xstoretest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xmatchtest\objd\i386\XMatchTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\XMatchTest.dll) 
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xstoretest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\feedback\feedback *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\feedback\feedback'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\feedback\feedback
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\XMatchTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> ConfigDBTest.cs 
102> Func2CreateSession.cs 
102> Func2DeadXBox.cs 
102> Func2DeleteSession.cs 
102> Func2HostMigScenarios.cs 
102> Func2RankedMatch.cs 
102> Func2SearchSession.cs 
102> Func2SearchSessionByIds.cs 
102> Func2SearchWeighted.cs 
102> Func2SocialMatch.cs 
102> Func2TitleChange.cs 
102> Func2UpdateSession.cs 
102> Func2UpdateSession_Partitioning.cs 
102> FuncCreateSession.cs 
102> FuncDeadSG.cs 
102> FuncDeadXBox.cs 
102> FuncDeleteSession.cs 
102> FuncSearchSession.cs 
102> FuncSplitSession.cs 
102> FuncTitleChange.cs 
102> FuncUpdateSession.cs 
102> ICorThreadPool.cs 
102> MatchCommands.cs 
102> MatchDelayedRequests.cs 
102> MatchReplayFile.cs 
102> MatchStressBase.cs 
102> MatchTitleSchema.cs 
102> MigrationStressTests.cs 
102> PartitioningTests.cs 
102> Proximity.cs 
102> STFMatchCounters.cs 
102> Stress2Create.cs 
102> Stress2Delete.cs 
102> Stress2Search.cs 
102> Stress2Split.cs 
102> Stress2Update.cs 
102> StressClient.cs 
102> StressDeadXBoxTitleChange.cs 
102> StressHostCreate.cs 
102> StressHostDelete.cs 
102> StressHostUpdate.cs 
102> StressParams.cs 
102> XMatchTest.cs 
102> XPresListener.cs 
102> objd\i386\_generated.cs
101>z:\xonline_main\private\test\stftests\feedback\feedback: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\feedback\feedback building test code in dev tree
101>z:\xonline_main\private\test\stftests\feedback\feedback: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\feedback\feedback building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386 Feedback Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module Feedback not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= AggregateReview.cs  ICorThreadPool.cs  MainClass.cs  RatingCal.cs  StressFeedback.cs  StressTOU.cs  XeComplaint.cs  XeFeedback.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (Feedback.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\Feedback.dll) 
101>'z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\_asmid.inc' is up-to-date
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\xmatchtest
102>z:\xonline_main\private\test\stftests\xmatchtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\xmatchtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xmatchtest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\fakesgservice *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\fakesgservice'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\fakesgservice
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386 Feedback Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>z:\xonline_main\private\test\stftests\fakesgservice: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\fakesgservice building test code in dev tree
101>genbasemac: module Feedback not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= AggregateReview.cs  ICorThreadPool.cs  MainClass.cs  RatingCal.cs  StressFeedback.cs  StressTOU.cs  XeComplaint.cs  XeFeedback.cs
102>z:\xonline_main\private\test\stftests\fakesgservice: TARGETPATH is obj
101>LCG: BUILD_LCE_FILE: 0
102>z:\xonline_main\private\test\stftests\fakesgservice building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\fakesgservice\objd\i386 FakeSGService Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (Feedback.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\feedback\feedback\objd\i386\Feedback.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\Feedback.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\Feedback.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> AggregateReview.cs 
101> ICorThreadPool.cs 
101> MainClass.cs 
101> RatingCal.cs 
101> StressFeedback.cs 
101> StressTOU.cs 
101> XeComplaint.cs 
101> XeFeedback.cs 
101> objd\i386\_generated.cs
102>genbasemac: module FakeSGService not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= FakeSGService.cs  FakeSGSocket.cs  ProjectInstaller.cs  ServiceMain.cs  SGUserInfo.cs  SGXBoxInfo.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (FakeSGService.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\FakeSGService.exe) 
102>'z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\fakesgservice\objd\i386 FakeSGService Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module FakeSGService not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= FakeSGService.cs  FakeSGSocket.cs  ProjectInstaller.cs  ServiceMain.cs  SGUserInfo.cs  SGXBoxInfo.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (FakeSGService.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\fakesgservice\objd\i386\FakeSGService.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\FakeSGService.exe) 
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\feedback\feedback
101>z:\xonline_main\private\test\stftests\feedback\feedback\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\feedback\feedback\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\feedback\feedback failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\xarb *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xarb'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xarb
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\FakeSGService.exe   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:winexe 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /unsafe 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> FakeSGService.cs 
102> FakeSGSocket.cs 
102> ProjectInstaller.cs 
102> ServiceMain.cs 
102> SGUserInfo.cs 
102> SGXBoxInfo.cs 
102> objd\i386\_generated.cs
101>z:\xonline_main\private\test\stftests\xarb: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xarb building test code in dev tree
101>z:\xonline_main\private\test\stftests\xarb: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\xarb building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xarb\objd\i386 XArbTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module XArbTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= ConfigSettings.cs  FuncMigration.cs  FuncRegisterTests.cs  FuncReportResultTests.cs  FuncTimeExtendTests.cs  FuncTrustTests.cs  MigrationMgr.cs  NoiseMachine.cs  StressOption.cs  Stresstests.cs  XArbGlobal.cs  XArbStressGlobal.cs  XArbTest.cs  XArbTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\fakesgservice
102>z:\xonline_main\private\test\stftests\fakesgservice\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\fakesgservice\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
101>SOURCE_ASMMETA (XArbTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XArbTest.dll) 
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\fakesgservice failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\websgbvts *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgbvts'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\websgbvts
101>'z:\xonline_main\private\test\stftests\xarb\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xarb\objd\i386 XArbTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>z:\xonline_main\private\test\stftests\websgbvts: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\websgbvts building test code in dev tree
101>genbasemac: module XArbTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= ConfigSettings.cs  FuncMigration.cs  FuncRegisterTests.cs  FuncReportResultTests.cs  FuncTimeExtendTests.cs  FuncTrustTests.cs  MigrationMgr.cs  NoiseMachine.cs  StressOption.cs  Stresstests.cs  XArbGlobal.cs  XArbStressGlobal.cs  XArbTest.cs  XArbTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>z:\xonline_main\private\test\stftests\websgbvts: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\websgbvts building test code in dev tree
101>SOURCE_ASMMETA (XArbTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xarb\objd\i386\XArbTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\XArbTest.dll) 
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgbvts\objd\i386 WebSGBVTs Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\XArbTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /doc:Z:\XONLINE_MAIN\target\debug\i386\xmldocs\XArbTest.xml 
101> /doc:objd\i386\XArbTestDoc.xml 
101> /nowarn:1591 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> ConfigSettings.cs 
101> FuncMigration.cs 
101> FuncRegisterTests.cs 
101> FuncReportResultTests.cs 
101> FuncTimeExtendTests.cs 
101> FuncTrustTests.cs 
101> MigrationMgr.cs 
101> NoiseMachine.cs 
101> StressOption.cs 
101> Stresstests.cs 
101> XArbGlobal.cs 
101> XArbStressGlobal.cs 
101> XArbTest.cs 
101> XArbTestBase.cs 
101> objd\i386\_generated.cs
102>genbasemac: module WebSGBVTs not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= CertificateStore.cs  FuncWebSG.cs  Stress.cs  WebSGBVTs.cs  Tests\GeneralInfoWidgetTests.cs  Tests\LSPWidgetTests.cs  Tests\MessagingWidgetTests.cs  Tests\SignatureVerifyTests.cs  Tests\StatsWidgetTest.cs  Tests\StoregeWidgetTests.cs  Tests\UserWidgetTests.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (WebSGBVTs.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\WebSGBVTs.dll) 
102>'z:\xonline_main\private\test\stftests\websgbvts\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\websgbvts\objd\i386 WebSGBVTs Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module WebSGBVTs not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= CertificateStore.cs  FuncWebSG.cs  Stress.cs  WebSGBVTs.cs  Tests\GeneralInfoWidgetTests.cs  Tests\LSPWidgetTests.cs  Tests\MessagingWidgetTests.cs  Tests\SignatureVerifyTests.cs  Tests\StatsWidgetTest.cs  Tests\StoregeWidgetTests.cs  Tests\UserWidgetTests.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (WebSGBVTs.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\websgbvts\objd\i386\WebSGBVTs.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\WebSGBVTs.dll) 
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\xarb
101>z:\xonline_main\private\test\stftests\xarb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\xarb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xarb failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\webrunner *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\webrunner'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\webrunner
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\WebSGBVTs.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:.\interop.capicom.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> CertificateStore.cs 
102> FuncWebSG.cs 
102> Stress.cs 
102> WebSGBVTs.cs 
102> Tests\GeneralInfoWidgetTests.cs 
102> Tests\LSPWidgetTests.cs 
102> Tests\MessagingWidgetTests.cs 
102> Tests\SignatureVerifyTests.cs 
102> Tests\StatsWidgetTest.cs 
102> Tests\StoregeWidgetTests.cs 
102> Tests\UserWidgetTests.cs 
102> objd\i386\_generated.cs
101>z:\xonline_main\private\test\stftests\webrunner: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\webrunner building test code in dev tree
101>z:\xonline_main\private\test\stftests\webrunner: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\webrunner building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\webrunner\objd\i386 _WebRunner_1 Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module _WebRunner_1 not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=
101>LCG: BUILD_LCE_FILE: 0
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\websgbvts
102>z:\xonline_main\private\test\stftests\websgbvts\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\websgbvts\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\websgbvts failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\reportingtargettest\common *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\common'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\common
101>SOURCE_ASMMETA (_WebRunner_1.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\_WebRunner_1.dll) 
101>'z:\xonline_main\private\test\stftests\webrunner\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\webrunner\objd\i386 _WebRunner_1 Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>z:\xonline_main\private\test\stftests\reportingtargettest\common: TARGETPATH is Z:\XONLINE_MAIN\target\debug
102>z:\xonline_main\private\test\stftests\reportingtargettest\common building test code in dev tree
102>z:\xonline_main\private\test\stftests\reportingtargettest\common: TARGETPATH is Z:\XONLINE_MAIN\target\debug
102>z:\xonline_main\private\test\stftests\reportingtargettest\common building test code in dev tree
101>genbasemac: module _WebRunner_1 not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=
101>LCG: BUILD_LCE_FILE: 0
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386 Reporting_common Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (_WebRunner_1.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\webrunner\objd\i386\_WebRunner_1.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\_WebRunner_1.dll) 
102>genbasemac: module Reporting_common not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=
102>LCG: BUILD_LCE_FILE: 0
101>z:\xonline_main\private\test\stftests\webrunner BINPLACE_MISCFILES=gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>SOURCE_ASMMETA (Reporting_common.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (Z:\XONLINE_MAIN\target\debug\i386\Reporting_common.) 
102>'z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\_asmid.inc' is up-to-date
101>Build_Status Postbuild Preplace - gdiplus.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" gdiplus.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386 Reporting_common Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>Build_Status Postbuild Preplace - GetDom.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" GetDom.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - Interop.GetDom.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" Interop.GetDom.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - Interop.SHDocVw.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" Interop.SHDocVw.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - Microsoft.mshtml.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" Microsoft.mshtml.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>genbasemac: module Reporting_common not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=
102>LCG: BUILD_LCE_FILE: 0
101>Build_Status Postbuild Preplace - Microsoft.PicassoTest.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" Microsoft.PicassoTest.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>SOURCE_ASMMETA (Reporting_common.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\common\objd\i386\Reporting_common.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (Z:\XONLINE_MAIN\target\debug\i386\Reporting_common.) 
101>Build_Status Postbuild Preplace - microsoft.wtt.log.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" microsoft.wtt.log.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>Compiling z:\xonline_main\private\test\stftests\reportingtargettest\bvt *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\bvt'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\bvt
101>Build_Status Postbuild Preplace - msvcr70.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" msvcr70.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - screenJPG.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" screenJPG.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - ScreenShots.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" ScreenShots.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt building test code in dev tree
101>Build_Status Postbuild Preplace - UIAFsupp.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" UIAFsupp.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt building test code in dev tree
101>Build_Status Postbuild Preplace - WebRunner.ISTAF.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" WebRunner.ISTAF.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386 ReportingTargetTestBVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>Build_Status Postbuild Preplace - WebRunner.Loggers.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" WebRunner.Loggers.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Preplace - WebRunner.SDK.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\preplace.cmd" WebRunner.SDK.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>genbasemac: module ReportingTargetTestBVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>Build_Status Binplace - 14 file(s).
101> binplace.exe /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs
102>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReportingTargetTestBVT.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReportingTargetTestBVT.dll) 
102>'z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386 ReportingTargetTestBVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module ReportingTargetTestBVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs
102>_MANAGED_SOURCES=CleanserConnection.cs  ReportingTargetTestBVT.cs  ReportingTargetTestInit.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReportingTargetTestBVT.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\bvt\objd\i386\ReportingTargetTestBVT.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReportingTargetTestBVT.dll) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\ReportingTargetTestBVT.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\LiveInfra\LiveLib\lib\objd\i386\LiveLib.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Framework.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Controller.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Bdk.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Dmp.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MusicNet.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.Aggregator.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.MultiRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.NickNameListener.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.SingleRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaProfile.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaCredential.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ups.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.abch.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.FinBus.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.TransactionService.dll 
102> CleanserConnection.cs 
102> ReportingTargetTestBVT.cs 
102> ReportingTargetTestInit.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs 
102> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\reportingtargettest\bvt
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\reportingtargettest\bvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\bvt failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\reportingtargettest\replication *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\replication'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtargettest\replication
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication building test code in dev tree
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386 ReplicationFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module ReplicationFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>_MANAGED_SOURCES=ReplicationTestBase.cs
102>_MANAGED_SOURCES=ReplicationTestBase.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReplicationFVT.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReplicationFVT.dll) 
102>'z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386 ReplicationFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module ReplicationFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>_MANAGED_SOURCES=ReplicationTestBase.cs
102>_MANAGED_SOURCES=ReplicationTestBase.cs Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs      Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReplicationFVT.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtargettest\replication\objd\i386\ReplicationFVT.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReplicationFVT.dll) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\ReplicationFVT.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SQLServer.ManagedDTS.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Replication.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll 
102> /r:Z:\XONLINE_MAIN\private\test\tools\SchemaDiff\libd\i386\SchemaDiffAPI.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Framework.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Controller.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Bdk.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Dmp.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MusicNet.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.Aggregator.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.MultiRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.NickNameListener.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.SingleRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaProfile.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaCredential.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ups.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.abch.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.FinBus.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.TransactionService.dll 
102> ReplicationTestBase.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\CUtil.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\SQLDataProvider.cs 
102> Z:\XONLINE_MAIN\private\test\stfTests\ReportingTargetTest\common\FilterDBTables.cs 
102> objd\i386\_generated.cs
101>Build_Status Postbuild Postplace - gdiplus.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" gdiplus.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - GetDom.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" GetDom.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - Interop.GetDom.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" Interop.GetDom.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - Interop.SHDocVw.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" Interop.SHDocVw.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - Microsoft.mshtml.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" Microsoft.mshtml.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - Microsoft.PicassoTest.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" Microsoft.PicassoTest.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - microsoft.wtt.log.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" microsoft.wtt.log.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - msvcr70.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" msvcr70.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - screenJPG.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" screenJPG.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - ScreenShots.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" ScreenShots.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>Build_Status Postbuild Postplace - UIAFsupp.dll.
102>errors in directory z:\xonline_main\private\test\stftests\reportingtargettest\replication
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" UIAFsupp.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
101>Build_Status Postbuild Postplace - WebRunner.ISTAF.dll.
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" WebRunner.ISTAF.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>z:\xonline_main\private\test\stftests\reportingtargettest\replication\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>Build_Status Postbuild Postplace - WebRunner.Loggers.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" WebRunner.Loggers.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Build_Status Postbuild Postplace - WebRunner.SDK.dll.
101> "Z:\XONLINE_MAIN\tools\build\buildtypes\binplace.cmd" WebRunner.SDK.dll --no-postbuild-cover /R Z:\XONLINE_MAIN\drop\debug\. /:DBG /j /:NOCV /P placefile -R Z:\XONLINE_MAIN\drop\debug /:CVTCIL gdiplus.dll GetDom.dll Interop.GetDom.dll Interop.SHDocVw.dll Microsoft.mshtml.dll Microsoft.PicassoTest.dll microsoft.wtt.log.dll msvcr70.dll screenJPG.dll ScreenShots.dll UIAFsupp.dll WebRunner.ISTAF.dll WebRunner.Loggers.dll WebRunner.SDK.dll
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
101>Compiling z:\xonline_main\private\test\stftests\pcext\appnew *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\pcext\appnew'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\pcext\appnew
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtargettest\replication failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\livecontenttest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livecontenttest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livecontenttest
102>z:\xonline_main\private\test\stftests\livecontenttest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\livecontenttest building test code in dev tree
101>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
101>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
102>z:\xonline_main\private\test\stftests\livecontenttest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\livecontenttest building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livecontenttest\objd\i386 LiveContentTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module LiveContentTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=ContentDownloadHandle.cs  ContentTestBase.cs  ContentTestData.cs  LiveContentTest.cs  TitleVaultHandle.cs  UpdateTestBase.cs
101>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>LCG: BUILD_LCE_FILE: 0
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (LiveContentTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\LiveContentTest.dll) 
101>SOURCE_ASMMETA (H2PCApp.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
102>'z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\_asmid.inc' is up-to-date
101>'z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livecontenttest\objd\i386 LiveContentTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
102>genbasemac: module LiveContentTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=ContentDownloadHandle.cs  ContentTestBase.cs  ContentTestData.cs  LiveContentTest.cs  TitleVaultHandle.cs  UpdateTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (H2PCApp.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
102>SOURCE_ASMMETA (LiveContentTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livecontenttest\objd\i386\LiveContentTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\LiveContentTest.dll) 
101>Compiling z:\xonline_main\private\test\stftests\liveoffertest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\liveoffertest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\liveoffertest
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\LiveContentTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> ContentDownloadHandle.cs 
102> ContentTestBase.cs 
102> ContentTestData.cs 
102> LiveContentTest.cs 
102> TitleVaultHandle.cs 
102> UpdateTestBase.cs 
102> objd\i386\_generated.cs
101>z:\xonline_main\private\test\stftests\liveoffertest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\liveoffertest building test code in dev tree
101>z:\xonline_main\private\test\stftests\liveoffertest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\liveoffertest building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\liveoffertest\objd\i386 LiveOfferTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module LiveOfferTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=LiveOfferTest.cs  LiveOfferTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (LiveOfferTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\LiveOfferTest.dll) 
101>'z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\liveoffertest\objd\i386 LiveOfferTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\livecontenttest
102>z:\xonline_main\private\test\stftests\livecontenttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\livecontenttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livecontenttest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\pcext\extensions\testextension *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\pcext\extensions\testextension'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\pcext\extensions\testextension
101>genbasemac: module LiveOfferTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=LiveOfferTest.cs  LiveOfferTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>z:\xonline_main\private\test\stftests\pcext\extensions\testextension: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\pcext\extensions\testextension building test code in dev tree
101>SOURCE_ASMMETA (LiveOfferTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\liveoffertest\objd\i386\LiveOfferTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\LiveOfferTest.dll) 
102>z:\xonline_main\private\test\stftests\pcext\extensions\testextension: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\pcext\extensions\testextension building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386 TestExtension Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\LiveOfferTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> LiveOfferTest.cs 
101> LiveOfferTestBase.cs 
101> objd\i386\_generated.cs
102>genbasemac: module TestExtension not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Test.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (TestExtension.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\TestExtension.dll) 
102>'z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386 TestExtension Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\liveoffertest
101>z:\xonline_main\private\test\stftests\liveoffertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\liveoffertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\liveoffertest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\apdispatchertest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\apdispatchertest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\apdispatchertest
101>z:\xonline_main\private\test\stftests\apdispatchertest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\apdispatchertest building test code in dev tree
102>genbasemac: module TestExtension not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Test.cs
102>LCG: BUILD_LCE_FILE: 0
101>z:\xonline_main\private\test\stftests\apdispatchertest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\apdispatchertest building test code in dev tree
102>SOURCE_ASMMETA (TestExtension.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\extensions\testextension\objd\i386\TestExtension.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\TestExtension.dll) 
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386 APDispatcherTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>Compiling z:\xonline_main\private\test\stftests\spac *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\spac'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\spac
101>genbasemac: module APDispatcherTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=z:\xonline_main\private\common\tools\tools\ctitleid.cs
101>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs
101>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs z:\xonline_main\private\common\tools\tools\ctitleid.cs
102>z:\xonline_main\private\test\stftests\spac: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\spac building test code in dev tree
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (APDispatcherTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\APDispatcherTest.dll) 
102>z:\xonline_main\private\test\stftests\spac: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\spac building test code in dev tree
101>'z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\spac\objd\i386 SPACTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386 APDispatcherTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module APDispatcherTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=z:\xonline_main\private\common\tools\tools\ctitleid.cs
101>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs
101>_MANAGED_SOURCES=APDispatcherShell.cs     APDispatcherTest.cs     PSUtil.cs     Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs  Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs z:\xonline_main\private\common\tools\tools\ctitleid.cs
101>LCG: BUILD_LCE_FILE: 0
102>genbasemac: module SPACTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (APDispatcherTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\apdispatchertest\objd\i386\APDispatcherTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\APDispatcherTest.dll) 
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=SPACFunctionals.cs  SPACOverrides.cs  SPACTestBase.cs  SPACTests.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (SPACTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SPACTest.dll) 
102>'z:\xonline_main\private\test\stftests\spac\objd\i386\_asmid.inc' is up-to-date
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\APDispatcherTest.dll   
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\spac\objd\i386 SPACTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Interop.ProductStudio.dll 
101> /r:Z:\XONLINE_MAIN\private\common\marketplace\dll\objd\i386\XblMarketplace.dll 
101> /r:Z:\XONLINE_MAIN\private\common\security\dll\objd\i386\XblSecurity.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\ingestionutils\dll\objd\i386\XblIngestionUtils.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\SCS\7.5\bin\billing.pso.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\console\dll\objd\i386\XblConsole.dll 
101> /r:Z:\XONLINE_MAIN\private\common\leaderboard\dll\objd\i386\leaderboard.dll 
101> /r:Z:\XONLINE_MAIN\private\common\tools\dll\objd\i386\tools.dll 
101> /r:Z:\XONLINE_MAIN\private\common\match\dll\objd\i386\match.dll 
101> /r:Z:\XONLINE_MAIN\private\tools\framework\dll\objd\i386\toolsframework.dll 
101> /r:Z:\XONLINE_MAIN\private\common\offerutil\dll\objd\i386\offerutil.dll 
101> APDispatcherShell.cs 
101> APDispatcherTest.cs 
101> PSUtil.cs 
101> Z:\XONLINE_MAIN\private\tools\apdispatcher\filegrouping.cs 
101> Z:\XONLINE_MAIN\private\tools\apdispatcher\propresults.cs 
101> z:\xonline_main\private\common\tools\tools\ctitleid.cs 
101> objd\i386\_generated.cs
102>genbasemac: module SPACTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=SPACFunctionals.cs  SPACOverrides.cs  SPACTestBase.cs  SPACTests.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (SPACTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\spac\objd\i386\SPACTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SPACTest.dll) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\SPACTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> SPACFunctionals.cs 
102> SPACOverrides.cs 
102> SPACTestBase.cs 
102> SPACTests.cs 
102> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\spac
102>z:\xonline_main\private\test\stftests\spac\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\spac\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\spac failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\sputtest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\sputtest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\sputtest
102>z:\xonline_main\private\test\stftests\sputtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\sputtest building test code in dev tree
102>z:\xonline_main\private\test\stftests\sputtest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\sputtest building test code in dev tree
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\sputtest\objd\i386 SPUTTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>errors in directory z:\xonline_main\private\test\stftests\apdispatchertest
101>z:\xonline_main\private\test\stftests\apdispatchertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\apdispatchertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\apdispatchertest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\livetitle *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livetitle'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livetitle
101>z:\xonline_main\private\test\stftests\livetitle: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\livetitle building test code in dev tree
102>genbasemac: module SPUTTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=NegativeTests.cs  PositiveTests.cs  SPUTSuite.cs  SPUTTestBase.cs
102>LCG: BUILD_LCE_FILE: 0
101>z:\xonline_main\private\test\stftests\livetitle: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\livetitle building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livetitle\objd\i386 LiveTitle Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>SOURCE_ASMMETA (SPUTTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SPUTTest.dll) 
102>'z:\xonline_main\private\test\stftests\sputtest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\sputtest\objd\i386 SPUTTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module LiveTitle not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module SPUTTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=FuncDeploy.cs  FuncRedeploy.cs  LiveTitleTestBase.cs  LiveTitleTests.cs  Title.cs  TitleVerifier.cs
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=NegativeTests.cs  PositiveTests.cs  SPUTSuite.cs  SPUTTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (SPUTTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\sputtest\objd\i386\SPUTTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SPUTTest.dll) 
101>SOURCE_ASMMETA (LiveTitle.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\LiveTitle.dll) 
101>'z:\xonline_main\private\test\stftests\livetitle\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livetitle\objd\i386 LiveTitle Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\SPUTTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> NegativeTests.cs 
102> PositiveTests.cs 
102> SPUTSuite.cs 
102> SPUTTestBase.cs 
102> objd\i386\_generated.cs
101>genbasemac: module LiveTitle not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=FuncDeploy.cs  FuncRedeploy.cs  LiveTitleTestBase.cs  LiveTitleTests.cs  Title.cs  TitleVerifier.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (LiveTitle.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livetitle\objd\i386\LiveTitle.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\LiveTitle.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\LiveTitle.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> FuncDeploy.cs 
101> FuncRedeploy.cs 
101> LiveTitleTestBase.cs 
101> LiveTitleTests.cs 
101> Title.cs 
101> TitleVerifier.cs 
101> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\sputtest
102>z:\xonline_main\private\test\stftests\sputtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\sputtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\sputtest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\livestats *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livestats'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livestats
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\livetitle
101>z:\xonline_main\private\test\stftests\livetitle\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\livetitle\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livetitle failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\quickenforcementtest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\quickenforcementtest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\quickenforcementtest
102>z:\xonline_main\private\test\stftests\livestats: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\livestats building test code in dev tree
102>z:\xonline_main\private\test\stftests\livestats: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\livestats building test code in dev tree
101>z:\xonline_main\private\test\stftests\quickenforcementtest: TARGETPATH is objd
101>z:\xonline_main\private\test\stftests\quickenforcementtest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livestats\objd\i386 LiveStats Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>z:\xonline_main\private\test\stftests\quickenforcementtest: TARGETPATH is objd
101>z:\xonline_main\private\test\stftests\quickenforcementtest building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386 QuickEnforcementTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module LiveStats not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=FuncBoundary.cs  FuncDeploy.cs  FuncMove.cs  FuncOther.cs  LiveStatsTestBase.cs  LiveStatsTests.cs  StatsVerifier.cs  SVLeaderboard.cs  TitleStats.cs  TrueSkill.cs
102>LCG: BUILD_LCE_FILE: 0
101>genbasemac: module QuickEnforcementTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>SOURCE_ASMMETA (LiveStats.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\LiveStats.dll) 
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= QuickEnforcementLiveTestBase.cs     QuickEnforcementLiveTests.cs     QuickEnforcementTestBase.cs     QuickEnforcementTests.cs
101>LCG: BUILD_LCE_FILE: 0
102>'z:\xonline_main\private\test\stftests\livestats\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\livestats\objd\i386 LiveStats Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (QuickEnforcementTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\QuickEnforcementTest.dll) 
101>'z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386 QuickEnforcementTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module LiveStats not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=FuncBoundary.cs  FuncDeploy.cs  FuncMove.cs  FuncOther.cs  LiveStatsTestBase.cs  LiveStatsTests.cs  StatsVerifier.cs  SVLeaderboard.cs  TitleStats.cs  TrueSkill.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (LiveStats.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\livestats\objd\i386\LiveStats.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\LiveStats.dll) 
101>genbasemac: module QuickEnforcementTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= QuickEnforcementLiveTestBase.cs     QuickEnforcementLiveTests.cs     QuickEnforcementTestBase.cs     QuickEnforcementTests.cs
101>LCG: BUILD_LCE_FILE: 0
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\LiveStats.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> FuncBoundary.cs 
102> FuncDeploy.cs 
102> FuncMove.cs 
102> FuncOther.cs 
102> LiveStatsTestBase.cs 
102> LiveStatsTests.cs 
102> StatsVerifier.cs 
102> SVLeaderboard.cs 
102> TitleStats.cs 
102> TrueSkill.cs 
102> objd\i386\_generated.cs
101>SOURCE_ASMMETA (QuickEnforcementTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\quickenforcementtest\objd\i386\QuickEnforcementTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\QuickEnforcementTest.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\QuickEnforcementTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /D:NOCSPP 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\private\common\community\dll\objd\i386\XblCommunity.dll 
101> /r:Z:\XONLINE_MAIN\private\common\marketplace\dll\objd\i386\XblMarketplace.dll 
101> /r:Z:\XONLINE_MAIN\private\common\security\dll\objd\i386\XblSecurity.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\SCS\7.5\bin\billing.pso.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> /r:Z:\XONLINE_MAIN\private\test\LiveInfra\LiveLib\lib\objd\i386\LiveLib.dll 
101> /r:Z:\XONLINE_MAIN\private\common\console\dll\objd\i386\XblConsole.dll 
101> QuickEnforcementLiveTestBase.cs 
101> QuickEnforcementLiveTests.cs 
101> QuickEnforcementTestBase.cs 
101> QuickEnforcementTests.cs 
101> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\livestats
102>z:\xonline_main\private\test\stftests\livestats\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\livestats\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\quickenforcementtest
101>z:\xonline_main\private\test\stftests\quickenforcementtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livestats failed - rc = 2

101>z:\xonline_main\private\test\stftests\quickenforcementtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
102>Compiling z:\xonline_main\private\test\stftests\stutiltest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stutiltest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stutiltest
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\quickenforcementtest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\vouchermgrtest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\vouchermgrtest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\vouchermgrtest
101>z:\xonline_main\private\test\stftests\vouchermgrtest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\vouchermgrtest building test code in dev tree
102>z:\xonline_main\private\test\stftests\stutiltest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\stutiltest building test code in dev tree
102>z:\xonline_main\private\test\stftests\stutiltest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\vouchermgrtest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\vouchermgrtest building test code in dev tree
102>z:\xonline_main\private\test\stftests\stutiltest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stutiltest\objd\i386 STUtilTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386 VoucherMgrTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module VoucherMgrTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module STUtilTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=VoucherMgrTest.cs  VoucherMgrTestBase.cs
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CTitleId.cs  PositiveActionCases.cs  PositiveAdditionalOptionsCases.cs  PositiveLocalFileCases.cs  PositiveStoragePathCases.cs  STUtilTest.cs  Utility.cs
101>LCG: BUILD_LCE_FILE: 0
102>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (VoucherMgrTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\VoucherMgrTest.dll) 
101>'z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\_asmid.inc' is up-to-date
102>SOURCE_ASMMETA (STUtilTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\STUtilTest.dll) 
102>'z:\xonline_main\private\test\stftests\stutiltest\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386 VoucherMgrTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\stutiltest\objd\i386 STUtilTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module VoucherMgrTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=VoucherMgrTest.cs  VoucherMgrTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>genbasemac: module STUtilTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CTitleId.cs  PositiveActionCases.cs  PositiveAdditionalOptionsCases.cs  PositiveLocalFileCases.cs  PositiveStoragePathCases.cs  STUtilTest.cs  Utility.cs
102>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (VoucherMgrTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\vouchermgrtest\objd\i386\VoucherMgrTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\VoucherMgrTest.dll) 
102>SOURCE_ASMMETA (STUtilTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\stutiltest\objd\i386\STUtilTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\STUtilTest.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\VoucherMgrTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> VoucherMgrTest.cs 
101> VoucherMgrTestBase.cs 
101> objd\i386\_generated.cs
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\STUtilTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> CTitleId.cs 
102> PositiveActionCases.cs 
102> PositiveAdditionalOptionsCases.cs 
102> PositiveLocalFileCases.cs 
102> PositiveStoragePathCases.cs 
102> STUtilTest.cs 
102> Utility.cs 
102> objd\i386\_generated.cs
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\vouchermgrtest
101>z:\xonline_main\private\test\stftests\vouchermgrtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\vouchermgrtest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>errors in directory z:\xonline_main\private\test\stftests\stutiltest
102>z:\xonline_main\private\test\stftests\stutiltest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>z:\xonline_main\private\test\stftests\stutiltest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
101>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\stutiltest failed - rc = 2

101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\vouchermgrtest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\syschecktest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\syschecktest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\syschecktest
101>Compiling z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\modifyssisdb'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb
102>z:\xonline_main\private\test\stftests\syschecktest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\syschecktest building test code in dev tree
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb building test code in dev tree
102>z:\xonline_main\private\test\stftests\syschecktest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\syschecktest building test code in dev tree
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\syschecktest\objd\i386 SysCheckTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386 ModifySSISDB Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module SysCheckTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Boundary.cs  HealthURLs.cs  Negative.cs  Positive.cs  SCResultsParser.cs  Stress.cs  SysCheckTest.cs  SysCheckTestBase.cs  XMLVerifier.cs
102>LCG: BUILD_LCE_FILE: 0
101>genbasemac: module ModifySSISDB not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=ModifySSISDB.cs
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (SysCheckTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SysCheckTest.dll) 
102>'z:\xonline_main\private\test\stftests\syschecktest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\syschecktest\objd\i386 SysCheckTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (ModifySSISDB.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\ModifySSISDB.dll) 
101>'z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386 ModifySSISDB Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module SysCheckTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Boundary.cs  HealthURLs.cs  Negative.cs  Positive.cs  SCResultsParser.cs  Stress.cs  SysCheckTest.cs  SysCheckTestBase.cs  XMLVerifier.cs
102>LCG: BUILD_LCE_FILE: 0
101>genbasemac: module ModifySSISDB not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>SOURCE_ASMMETA (SysCheckTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\syschecktest\objd\i386\SysCheckTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\SysCheckTest.dll) 
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=ModifySSISDB.cs
101>LCG: BUILD_LCE_FILE: 0
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\SysCheckTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> Boundary.cs 
102> HealthURLs.cs 
102> Negative.cs 
102> Positive.cs 
102> SCResultsParser.cs 
102> Stress.cs 
102> SysCheckTest.cs 
102> SysCheckTestBase.cs 
102> XMLVerifier.cs 
102> objd\i386\_generated.cs
101>SOURCE_ASMMETA (ModifySSISDB.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\objd\i386\ModifySSISDB.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\ModifySSISDB.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\ModifySSISDB.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Framework.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Controller.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Bdk.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Dmp.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MusicNet.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.Aggregator.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.MultiRating.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.NickNameListener.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.SingleRating.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaProfile.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaCredential.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ups.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.abch.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.FinBus.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.TransactionService.dll 
101> ModifySSISDB.cs 
101> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\syschecktest
102>z:\xonline_main\private\test\stftests\syschecktest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\syschecktest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\syschecktest failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\reportingtest\stress *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\stress'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\stress
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\reportingtest\modifyssisdb\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\modifyssisdb failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\cleanserfvt'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt
102>z:\xonline_main\private\test\stftests\reportingtest\stress: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtest\stress building test code in dev tree
102>z:\xonline_main\private\test\stftests\reportingtest\stress: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\reportingtest\stress building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386 ReportingStressTests Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt building test code in dev tree
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386 CleanserFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module ReportingStressTests not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CleanserStress\CleanserStress.cs  CleanserStress\CleanserStressSingleton.cs  CleanserStress\CleanserVipTrafficStress.cs  CleanserStress\SingleCleanserTrafficStress.cs
102>LCG: BUILD_LCE_FILE: 0
101>genbasemac: module CleanserFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=CleanserFVTSuite.cs  CleanserMessageFidelityFunctionalTest.cs  CleanserMessageFunctionalTest.cs
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReportingStressTests.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReportingStressTests.dll) 
102>'z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386 ReportingStressTests Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>SOURCE_ASMMETA (CleanserFVT.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\CleanserFVT.dll) 
101>'z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386 CleanserFVT Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module ReportingStressTests not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=CleanserStress\CleanserStress.cs  CleanserStress\CleanserStressSingleton.cs  CleanserStress\CleanserVipTrafficStress.cs  CleanserStress\SingleCleanserTrafficStress.cs
102>LCG: BUILD_LCE_FILE: 0
101>genbasemac: module CleanserFVT not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=CleanserFVTSuite.cs  CleanserMessageFidelityFunctionalTest.cs  CleanserMessageFunctionalTest.cs
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (ReportingStressTests.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\stress\objd\i386\ReportingStressTests.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\ReportingStressTests.dll) 
101>SOURCE_ASMMETA (CleanserFVT.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\objd\i386\CleanserFVT.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\CleanserFVT.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\CleanserFVT.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\ReportingStressTests.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Rmo.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll 
101> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Framework.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Controller.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Bdk.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Dmp.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MusicNet.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.Aggregator.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.MultiRating.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.NickNameListener.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.SingleRating.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaProfile.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaCredential.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ups.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.abch.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.FinBus.dll 
101> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.TransactionService.dll 
101> CleanserFVTSuite.cs 
101> CleanserMessageFidelityFunctionalTest.cs 
101> CleanserMessageFunctionalTest.cs 
101> objd\i386\_generated.cs
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Rmo.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Replication.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Framework.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Controller.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Bdk.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.Dmp.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MusicNet.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.Aggregator.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.MultiRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.NickNameListener.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.MSNRR.SingleRating.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaProfile.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ppsaCredential.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.ups.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.abch.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.FinBus.dll 
102> /r:Z:\XONLINE_MAIN\private\test\stftests\emulators\emulator\bin\Emulators.TransactionService.dll 
102> CleanserStress\CleanserStress.cs 
102> CleanserStress\CleanserStressSingleton.cs 
102> CleanserStress\CleanserVipTrafficStress.cs 
102> CleanserStress\SingleCleanserTrafficStress.cs 
102> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\reportingtest\stress
102>z:\xonline_main\private\test\stftests\reportingtest\stress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\reportingtest\stress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\stress failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\xltranstest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xltranstest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\xltranstest
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\reportingtest\cleanserfvt\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\reportingtest\cleanserfvt failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\toolsmgmttest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\toolsmgmttest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\toolsmgmttest
102>z:\xonline_main\private\test\stftests\xltranstest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\xltranstest building test code in dev tree
101>z:\xonline_main\private\test\stftests\toolsmgmttest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\toolsmgmttest building test code in dev tree
102>z:\xonline_main\private\test\stftests\xltranstest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\xltranstest building test code in dev tree
101>z:\xonline_main\private\test\stftests\toolsmgmttest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\toolsmgmttest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xltranstest\objd\i386 XLTransTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386 ToolsMgmtDvt Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module ToolsMgmtDvt not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module XLTransTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=XLTrans.cs  XLTransBase.cs  XLTransImpl.cs  XLTransNegative.cs  XLTransPositive.cs  xlTransSuite.cs  XLTransToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmt.cs  ..\ToolsMgmtTest\WCToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmtBase.cs
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= ToolsMgmt.cs  ToolsMgmtBase.cs  WCToolsMgmt.cs  Positive.cs  Negative.cs  MultiProp.cs  Stress.cs  Regression.cs
101>LCG: BUILD_LCE_FILE: 0
102>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (ToolsMgmtDvt.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\ToolsMgmtDvt.dll) 
102>SOURCE_ASMMETA (XLTransTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\XLTransTest.dll) 
101>'z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\_asmid.inc' is up-to-date
102>'z:\xonline_main\private\test\stftests\xltranstest\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386 ToolsMgmtDvt Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\xltranstest\objd\i386 XLTransTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module XLTransTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=XLTrans.cs  XLTransBase.cs  XLTransImpl.cs  XLTransNegative.cs  XLTransPositive.cs  xlTransSuite.cs  XLTransToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmt.cs  ..\ToolsMgmtTest\WCToolsMgmt.cs  ..\ToolsMgmtTest\ToolsMgmtBase.cs
101>genbasemac: module ToolsMgmtDvt not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= ToolsMgmt.cs  ToolsMgmtBase.cs  WCToolsMgmt.cs  Positive.cs  Negative.cs  MultiProp.cs  Stress.cs  Regression.cs
102>LCG: BUILD_LCE_FILE: 0
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (XLTransTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\xltranstest\objd\i386\XLTransTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\XLTransTest.dll) 
101>SOURCE_ASMMETA (ToolsMgmtDvt.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\toolsmgmttest\objd\i386\ToolsMgmtDvt.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\ToolsMgmtDvt.dll) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\XLTransTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> XLTrans.cs 
102> XLTransBase.cs 
102> XLTransImpl.cs 
102> XLTransNegative.cs 
102> XLTransPositive.cs 
102> xlTransSuite.cs 
102> XLTransToolsMgmt.cs 
102> ..\ToolsMgmtTest\ToolsMgmt.cs 
102> ..\ToolsMgmtTest\WCToolsMgmt.cs 
102> ..\ToolsMgmtTest\ToolsMgmtBase.cs 
102> objd\i386\_generated.cs
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\ToolsMgmtDvt.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /D:NOCSPP 
101> /D:TEST 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> ToolsMgmt.cs 
101> ToolsMgmtBase.cs 
101> WCToolsMgmt.cs 
101> Positive.cs 
101> Negative.cs 
101> MultiProp.cs 
101> Stress.cs 
101> Regression.cs 
101> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\xltranstest
102>z:\xonline_main\private\test\stftests\xltranstest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\toolsmgmttest
101>z:\xonline_main\private\test\stftests\toolsmgmttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\xltranstest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>z:\xonline_main\private\test\stftests\toolsmgmttest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\toolsmgmttest failed - rc = 2

102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\xltranstest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\wsmonitortest *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\wsmonitortest'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\wsmonitortest
102>Compiling z:\xonline_main\private\test\stftests\storagetestui *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\storagetestui'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\storagetestui
101>z:\xonline_main\private\test\stftests\wsmonitortest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\wsmonitortest building test code in dev tree
102>z:\xonline_main\private\test\stftests\storagetestui: TARGETPATH is objd
102>z:\xonline_main\private\test\stftests\storagetestui building test code in dev tree
101>z:\xonline_main\private\test\stftests\wsmonitortest: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\wsmonitortest building test code in dev tree
102>z:\xonline_main\private\test\stftests\storagetestui: TARGETPATH is objd
102>z:\xonline_main\private\test\stftests\storagetestui building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386 WSMonitorTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\storagetestui\objd\i386 StorageTestUI Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module WSMonitorTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=NTServiceCases.cs  ReportingCases.cs  ScriptGroupCases.cs  ScriptingCases.cs  ScriptInteropCases.cs  ServiceCases.cs  WSMonitorTest.cs  WSMonitorTestBase.cs
101>LCG: BUILD_LCE_FILE: 0
102>genbasemac: module StorageTestUI not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Form1.cs  Form1.Designer.cs  Program.cs
101>SOURCE_ASMMETA (WSMonitorTest.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\WSMonitorTest.dll) 
102>LCG: BUILD_LCE_FILE: 0
101>'z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\_asmid.inc' is up-to-date
102>SOURCE_ASMMETA (StorageTestUI.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\StorageTestUI.exe) 
102>'z:\xonline_main\private\test\stftests\storagetestui\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386 WSMonitorTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\storagetestui\objd\i386 StorageTestUI Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module WSMonitorTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module StorageTestUI not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=Form1.cs  Form1.Designer.cs  Program.cs
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES=NTServiceCases.cs  ReportingCases.cs  ScriptGroupCases.cs  ScriptingCases.cs  ScriptInteropCases.cs  ServiceCases.cs  WSMonitorTest.cs  WSMonitorTestBase.cs
102>LCG: BUILD_LCE_FILE: 0
101>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (StorageTestUI.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\storagetestui\objd\i386\StorageTestUI.asmmeta_ver_pass2) 
101>SOURCE_ASMMETA (WSMonitorTest.asmmeta) 
102>ASMMETA_INPUT (objd\i386\StorageTestUI.exe) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\wsmonitortest\objd\i386\WSMonitorTest.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\WSMonitorTest.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\WSMonitorTest.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\private\tools\wsmonitor\libd\i386\LSMCommon.dll 
101> /r:Z:\XONLINE_MAIN\private\tools\wsmonitor\libd\i386\WSMUnit.dll 
101> /r:Z:\XONLINE_MAIN\private\tools\wsmonitor\libd\i386\WSMFramework.dll 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> NTServiceCases.cs 
101> ReportingCases.cs 
101> ScriptGroupCases.cs 
101> ScriptingCases.cs 
101> ScriptInteropCases.cs 
101> ServiceCases.cs 
101> WSMonitorTest.cs 
101> WSMonitorTestBase.cs 
101> objd\i386\_generated.cs
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\StorageTestUI.exe   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:winexe 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /platform:x86 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.configuration.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Xml.METADATA_DLL 
102> /r:..\XStoreTest\objd\i386\XStoreTest.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFGuiPlugins.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> Form1.cs 
102> Form1.Designer.cs 
102> Program.cs 
102> objd\i386\_generated.cs
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>errors in directory z:\xonline_main\private\test\stftests\wsmonitortest
101>z:\xonline_main\private\test\stftests\wsmonitortest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
101>z:\xonline_main\private\test\stftests\wsmonitortest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\wsmonitortest failed - rc = 2

101>Compiling z:\xonline_main\private\test\stftests\gpstress *************
101>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\gpstress'
101>BUILDMSG: Processing z:\xonline_main\private\test\stftests\gpstress
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\storagetestui
102>z:\xonline_main\private\test\stftests\storagetestui\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\storagetestui\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\storagetestui failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\statsstress *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\statsstress'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\statsstress
101>z:\xonline_main\private\test\stftests\gpstress: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\gpstress building test code in dev tree
101>z:\xonline_main\private\test\stftests\gpstress: TARGETPATH is obj
101>z:\xonline_main\private\test\stftests\gpstress building test code in dev tree
102>z:\xonline_main\private\test\stftests\statsstress: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\statsstress building test code in dev tree
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\gpstress\objd\i386 GPStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>z:\xonline_main\private\test\stftests\statsstress: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\statsstress building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\statsstress\objd\i386 StatsStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module GPStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= Achievements.cs  GPStress.cs  Settings.cs  support.cs  TitleInfo.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (GPStress.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\GPStress.dll) 
102>genbasemac: module StatsStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>'z:\xonline_main\private\test\stftests\gpstress\objd\i386\_asmid.inc' is up-to-date
101>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\gpstress\objd\i386 GPStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= StatsStress.cs  StressCoordinator.cs  StressReqBuilder.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (StatsStress.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\StatsStress.dll) 
102>'z:\xonline_main\private\test\stftests\statsstress\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\statsstress\objd\i386 StatsStress Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>genbasemac: module GPStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
101>ALLOW_DLL_REFERENCES=1
101>CS_INCLUDES_FIXED=
101>_MANAGED_SOURCES= Achievements.cs  GPStress.cs  Settings.cs  support.cs  TitleInfo.cs
101>LCG: BUILD_LCE_FILE: 0
101>SOURCE_ASMMETA (GPStress.asmmeta) 
101>_O_ASMMETA (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta) 
101>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\gpstress\objd\i386\GPStress.asmmeta_ver_pass2) 
101>ASMMETA_INPUT (objd\i386\GPStress.dll) 
102>genbasemac: module StatsStress not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES= StatsStress.cs  StressCoordinator.cs  StressReqBuilder.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (StatsStress.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\statsstress\objd\i386\StatsStress.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\StatsStress.dll) 
101> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\GPStress.dll   
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
101> /target:library 
101> /baseaddress:0x400000 
101> /debug:full 
101> /define:DEBUG 
101> /warnaserror+ 
101> /unsafe- 
101> /define:TRACE 
101> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
101> /platform:anycpu 
101> /nowarn:1699 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
101> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
101> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
101> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
101> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
101> Achievements.cs 
101> GPStress.cs 
101> Settings.cs 
101> support.cs 
101> TitleInfo.cs 
101> objd\i386\_generated.cs
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\StatsStress.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> StatsStress.cs 
102> StressCoordinator.cs 
102> StressReqBuilder.cs 
102> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\statsstress
102>z:\xonline_main\private\test\stftests\statsstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\statsstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>errors in directory z:\xonline_main\private\test\stftests\gpstress
101>z:\xonline_main\private\test\stftests\gpstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
101>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>Stop.
101>z:\xonline_main\private\test\stftests\gpstress\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
101>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\statsstress failed - rc = 2

101>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\gpstress failed - rc = 2

102>Compiling z:\xonline_main\private\test\stftests\migrateusertest *************
102>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\migrateusertest'
102>BUILDMSG: Processing z:\xonline_main\private\test\stftests\migrateusertest
102>z:\xonline_main\private\test\stftests\migrateusertest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\migrateusertest building test code in dev tree
102>z:\xonline_main\private\test\stftests\migrateusertest: TARGETPATH is obj
102>z:\xonline_main\private\test\stftests\migrateusertest building test code in dev tree
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\migrateusertest\objd\i386 MigrateUserTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module MigrateUserTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=MigrateUserTest.cs  Copy.cs  ReadAndWrite.cs  CallReadAndWriteCommand.cs  CallCopyCommand.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (MigrateUserTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\MigrateUserTest.dll) 
102>'z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\_asmid.inc' is up-to-date
102>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\migrateusertest\objd\i386 MigrateUserTest Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>genbasemac: module MigrateUserTest not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
102>ALLOW_DLL_REFERENCES=1
102>CS_INCLUDES_FIXED=
102>_MANAGED_SOURCES=MigrateUserTest.cs  Copy.cs  ReadAndWrite.cs  CallReadAndWriteCommand.cs  CallCopyCommand.cs
102>LCG: BUILD_LCE_FILE: 0
102>SOURCE_ASMMETA (MigrateUserTest.asmmeta) 
102>_O_ASMMETA (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta) 
102>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\migrateusertest\objd\i386\MigrateUserTest.asmmeta_ver_pass2) 
102>ASMMETA_INPUT (objd\i386\MigrateUserTest.dll) 
102> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe /nologo /nostdlib /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.metadata_dll /noconfig /out:objd\i386\MigrateUserTest.dll   
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\Accessibility.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Design.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Messaging.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.XML.metadata_dll 
102> /target:library 
102> /baseaddress:0x400000 
102> /debug:full 
102> /define:DEBUG 
102> /warnaserror+ 
102> /unsafe- 
102> /define:TRACE 
102> /res:Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\internal\SdkTools\ref\__testcode20__.resources 
102> /platform:anycpu 
102> /nowarn:1699 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.metadata_dll 
102> /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.METADATA_DLL 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\private\common\config\dll\objd\i386\XblConfig.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
102> /r:Z:\XONLINE_MAIN\private\common\marketplace\dll\objd\i386\XblMarketplace.dll 
102> /r:Z:\XONLINE_MAIN\private\common\core\dll\objd\i386\XblCore.dll 
102> /r:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\6.0.1217.0001\SDK64\release\dll\wstclient.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLive.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll 
102> /r:Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFCore.dll 
102> /r:Z:\XONLINE_MAIN\private\test\LiveInfra\LiveInternalTest\objd\i386\LiveInternalTest.dll 
102> /r:Z:\XONLINE_MAIN\private\common\console\dll\objd\i386\XblConsole.dll 
102> /r:Z:\XONLINE_MAIN\private\test\LiveInfra\LiveLib\internallib\objd\i386\LiveLibInternal.dll 
102> /r:Z:\XONLINE_MAIN\private\common\test\billing\dll\objd\i386\TestBilling.dll 
102> MigrateUserTest.cs 
102> Copy.cs 
102> ReadAndWrite.cs 
102> CallReadAndWriteCommand.cs 
102> CallCopyCommand.cs 
102> objd\i386\_generated.cs
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveTools.dll' could not be found
102>errors in directory z:\xonline_main\private\test\stftests\migrateusertest
102>z:\xonline_main\private\test\stftests\migrateusertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stflivetools.dll' could not be found
102>error CS0006: Metadata file 'Z:\XONLINE_MAIN\private\test\StfTests\libd\i386\STFLiveConfig.dll' could not be found
102>z:\xonline_main\private\test\stftests\migrateusertest\error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found(0) : error cs0006: metadata file 'z:\xonline_main\private\test\stftests\libd\i386\stfliveconfig.dll' could not be found
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\csc.exe' : return code '0x1'
102>Stop.
102>nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS1 NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\migrateusertest failed - rc = 2

1>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\stfgui *************
1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\stfgui
Compile errors: not linking z:\xonline_main\private\test\stftests\stfconsole\buildcore directory *************
Compile errors: not linking z:\xonline_main\private\test\stftests\stfconsole\buildlive directory *************
Compile errors: not linking z:\xonline_main\private\test\stftests\fakesgservice directory *************
2>Linking for z:\xonline_main\private\test\stftests\pcext\appnew *************
2>'nmake /nologo BUILDMSG=Stop. /nologo /f z:\xonline_main\public\ext\tools\makefile.def BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\pcext\appnew'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\pcext\appnew
2>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
1>Running MsBuild v3.5
2>z:\xonline_main\private\test\stftests\pcext\appnew: TARGETPATH is obj
2>z:\xonline_main\private\test\stftests\pcext\appnew building test code in dev tree
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (H2PCApp.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
2>'z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\_asmid.inc' is up-to-date
2>BUILD: z:\xonline_main\public\ext\tools\genbasemac.pl z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386 H2PCApp Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>genbasemac: module H2PCApp not found in Z:\XONLINE_MAIN\public\ext\sdk\VS9SP1\sdk\lib\coffbase.txt
2>ALLOW_DLL_REFERENCES=1
2>CS_INCLUDES_FIXED=
2>_MANAGED_SOURCES=SessionInfo.cs  SessionLog.cs  PCExtCommon.cs     ListenThread.cs     ProjectInstaller.cs  Main.cs
2>LCG: BUILD_LCE_FILE: 0
2>SOURCE_ASMMETA (H2PCApp.asmmeta) 
2>_O_ASMMETA (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta) 
2>_O_ASMMETA_OUTPUT (z:\xonline_main\private\test\stftests\pcext\appnew\objd\i386\H2PCApp.asmmeta_ver_pass2) 
2>ASMMETA_INPUT (objd\i386\H2PCApp.exe) 
2>Linking for z:\xonline_main\private\test\stftests\livematchtest *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livematchtest
1>Linking for z:\xonline_main\private\test\stftests\msgtool *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\msgtool
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true LiveMatchTest.csproj /Target:BuildLinked /p:Pass=Link
1> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true MsgTool.csproj /Target:BuildLinked /p:Pass=Link
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\msgtool\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>z:\xonline_main\private\test\stftests\livematchtest\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>Stop.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
1>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\msgtool failed - rc = 2

2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livematchtest failed - rc = 2

1>Linking for z:\xonline_main\private\test\stftests\livebvt *************
1>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\livebvt
Compile errors: not linking z:\xonline_main\private\test\stftests\storagetestui directory *************
2>Linking for z:\xonline_main\private\test\stftests\hijackaccounttests *************
2>'nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\hijackaccounttests
1> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true LiveBVT.csproj /Target:BuildLinked /p:Pass=Link
2> Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe /nologo /verbosity:normal /m:2 /p:BuildType=debug /p:BuildingWithBuildExe=true /clp:NoSummary /clp:ShowCommandline /p:BuildingInSeparatePasses=true HijackAccountTests.csproj /Target:BuildLinked /p:Pass=Link
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>z:\xonline_main\private\test\stftests\hijackaccounttests\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>z:\xonline_main\private\test\stftests\livebvt\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>Stop.
2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
1>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\livebvt failed - rc = 2

2>NMAKE : fatal error U1077: 'Z:\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v3.5\MSBuild.exe' : return code '0x1'
2>Stop.
1>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\iflictest *************
1>'MSBuild.cmd "iflictest.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
1>BUILDMSG: Processing z:\xonline_main\private\test\stftests\iflictest
2>nmake /nologo BUILDMSG=Stop. BUILD_PASS=PASS2 LINKONLY=1 NOPASS0=1 MAKEDIR_RELATIVE_TO_BASEDIR=private\test\stftests\hijackaccounttests failed - rc = 2

2>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\tokendiehard *************
2>'MSBuild.cmd "tokendiehard.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\tokendiehard
2>Running MsBuild v3.5
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\iflictest\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>z:\xonline_main\private\test\stftests\tokendiehard\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
2>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\testthroughsg *************
2>'MSBuild.cmd "testthroughsg.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
2>BUILDMSG: Processing z:\xonline_main\private\test\stftests\testthroughsg
2>Running MsBuild v3.5
2>MSBUILD : error MSB1028: The logger failed unexpectedly.
2>z:\xonline_main\private\test\stftests\testthroughsg\msbuild : error MSB1028: The logger failed unexpectedly.
2>System.Security.SecurityException: That assembly does not allow partially trusted callers.
2> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
2>The action that failed was:
2>LinkDemand
2>The assembly or AppDomain that failed was:
2>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
2>The Zone of the assembly that failed was:
2>Internet
2>The Url of the assembly that failed was:
2>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
2>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Executing post build scripts  *************
Fix Public Change
1>'Z:\XONLINE_MAIN\public\ext\tools\buildpost.cmd '
1>Running scripts in Z:\XONLINE_MAIN\target\debug\i386\PostBuildScripts
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\APDispatcherTest.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<stf>
    <APDispatcherTest>
        <InputFilePath>..\InputFiles\APDispatcherTest</InputFilePath>
        <Server>10.198.102.85</Server>
        <UploadServer>10.198.103.99</UploadServer>
        <PSDatabase>xboxonlinetest</PSDatabase>
        <PSPath>DVT</PSPath>
		<!--ExePath>D:\APDispatcher</ExePath-->
		<!--Email>trevorm@microsoft.com</Email-->
	</APDispatcherTest>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\InputFiles\PropResults_20060315121402442.txt ===
<datetime TBD>
Success:fffe07f100600001.cab+fffe07f100600001.offer+0xffffffffffffffff.png
Prop Failed:fffe07f100100001.cab+fffe07f100100001.offer+0xffffffffffffffff.png

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\InputFiles\PropResultsAllTest.txt ===
<datetime TBD>
Success:file0.cab+file0.offer+file0.png
Prop Failed:file1.cab+file1.offer+file1.png
Invalid Grouping:file2.cab+file2.offer+file2.png
Skipped:file3.cab+file3.offer+file3.png

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\InputFiles\PropResultsBadResultType.txt ===
<datetime TBD>
Blah:file0.cab+file0.offer+file0.png

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\InputFiles\PropResults_20060315122202442.txt ===
<datetime TBD>
Skipped:fffe07f100600001.cab+fffe07f100600001.offer+0xffffffffffffffff.png
Prop Failed:fffe07f100100001.cab+fffe07f100100001.offer+0xffffffffffffffff.png

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====

====  Begin Detailed Job Output ====
line 1
line 2
line 3
====  End Detailed Job Output ====
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\BasicTest\BasicTestStress.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<stf>
	<config>
		<stress>
			<!--option name='resultshtml' value='yes' /-->
			<option name='initialthreads' value='8' />
			<!--option name='secondsremaining' value='600' /-->
		</stress>
	</config>
	<tests>
		<suite name='BasicTest'>
			<stress>
				<test name='StressSimple' priority='100000'/>
				<test name='StressSimpleTwo' priority='100000'/>
				<test name='StressFailer' priority='1'/>
				<test name='StressDeadlocker' priority='10'/>
			</stress>
		</suite>
	</tests>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="apdispatchertest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\APDispatcherTest\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="apdispatchertest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\stfdoc\stfhelp.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STFCore</name>
    </assembly>
    <members>
        <member name="T:ServerTestFramework.TestAttribute">
            <summary>
            allow an alias for Attribute "[TestCase]" to be "[Test]", like NUnit
            </summary> 
        </member>
        <member name="T:ServerTestFramework.TestGroupSetupAttribute">
            <summary>
            marks a function as a setup method.  These methods are executed
            just before a set of tests are run.
            </summary> 
        </member>
        <member name="T:ServerTestFramework.TestGroupTearDownAttribute">
            <summary>
            marks a function as an tear-down method.  These methods are executed
            just after a set of tests are run.
            </summary> 
        </member>
        <member name="T:ServerTestFramework.TestFixtureAttribute">
            <summary>
            allow an alias for Attribute "[TestGroup]" to be "[TestFixture]", like NUnit
            </summary>
        </member>
        <member name="T:ServerTestFramework.IgnoreAttribute">
            <summary>
            This feature should be used to temporarily not run a TestCase or TestGroup. 
            This is a better mechanism than commenting out the testCase/testGroup,
            since the tests will be compiled with the rest of the code and there is an 
            indication at run time that a test is not being run. This insures that tests will not be forgotten.
            </summary>
        </member>
        <member name="T:ServerTestFramework.DVTAttribute">
            <summary>
            This attribute can be applied to TestGroup or TestCase
            it stands for "Developer Verfication Test"
            </summary>
        </member>
        <member name="T:ServerTestFramework.AsyncGroupAttribute">
            <summary>
            On a test case, tests with the same AsyncGroup value can run at the same time.  On a group this sets the default AsyncGroup value for all tests in that group.
            Test groups with the same AsyncSet value can be run at the same time. (AsyncSet has no meaning for a test case)
            A value of 0 means don't run async.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AsyncThreadCountAttribute">
            <summary>
            Attribute for a test group for how many threads within the group are allowed to run at the same time.
            Default is 8.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AsyncThreadDelayAttribute">
            <summary>
            Attribute for a test group.  Controls the delay (in ms) between thread creations for tests within the group.
            This can be useful for preventing a ton of tests from slamming the network system at the exact same moment.
            Default is 25ms.
            </summary>
        </member>
        <member name="T:ServerTestFramework.DoNotRunDailyAttribute">
            <summary>
            Attribute for groups and cases.  This specifies that the test case or group should be excluded from the automatic daily functional run.
            </summary>
        </member>
        <member name="T:ServerTestFramework.DoNotRetryAttribute">
            <summary>
            Attribute for groups and cases.  This specifies that the test case should never be automatically retried if it fails.
            </summary>
        </member>
        <member name="T:ServerTestFramework.CompoundCaseAttribute">
            <summary>
            Attribute for groups and cases.  Each instance of CompoundTestBase class that use this will cause multiple instances of TestBase's to be created.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSuiteException">
            <summary>
            Custom Excption class to convey excpetions at the test suite load and run states.
            </summary>
        </member>
        <member name="T:ServerTestFramework.HttpStatusCodeException">
            <summary>
            Custom Exception class to carry and identify failures with an Http Status code
            </summary>
        </member>
        <member name="T:ServerTestFramework.TimeOutException">
            <summary>
            Custom Exception class to identify time out failures
            </summary>
        </member>
        <member name="T:ServerTestFramework.ExpectedValueCheckException">
            <summary>
            Custom Excption class to carry and identify failures matching a named value.
            </summary>
        </member>
        <member name="T:ServerTestFramework.StfException">
            <summary>
            Generic exception wrapper, allows parameters in the message string. Think of it as
            an Exception++.
            </summary>
        </member>
        <member name="F:ServerTestFramework.CoreGlobal.DefaultConfigFile">
            <summary>
            The default config file to load.
            </summary>
        </member>
        <member name="F:ServerTestFramework.CoreGlobal.Config">
            <summary>
            The current config set.
            </summary>
        </member>
        <member name="M:ServerTestFramework.CoreGlobal.CheckAssemblyVersion(System.Reflection.Assembly)">
            <summary>
            Check the versions of other assemblies linked against us, to make sure there's not a mismatch between the version they linked with and our version.
            </summary>
        </member>
        <member name="M:ServerTestFramework.CoreGlobal.Initialize(System.Xml.XmlDocument)">
            <summary>
            Initialize the framework using a pre-created XML config document.
            </summary>
        </member>
        <member name="M:ServerTestFramework.CoreGlobal.Initialize(ServerTestFramework.Runner.StfXmlDoc)">
            <summary>
            Initialize the framework using a pre-created XML config document.
            </summary>
        </member>
        <member name="M:ServerTestFramework.CoreGlobal.Initialize">
            <summary>
            Initialize the framework using the default config file.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.InfiniteLifetimeMarshalByRefObject">
            <summary>
            This overrides the lease provided on a MarshalByRef object so that it doesn't
            timeout during debugging or otherwise.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Report.DEBUG">
            <summary>
            Bit flags used for specifying the logging level of a report.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Report.GetRoot">
            <summary>
            Get the global root reporting destination.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Report.#ctor(System.String,System.String)">
            <summary>
            Create a new report object it will be placed under the root report.
            </summary>
            <param name="Category">Category of logging</param>
            <param name="Name">Name of specific log</param>
        </member>
        <member name="M:ServerTestFramework.Report.#ctor(ServerTestFramework.Report,System.String)">
            <summary>
            Create a new report that inherits it's properties (minus filter) from
            a parent report. Name must be specified for every report seperately.
            </summary>
            <param name="parent">Report to inherit properties from</param>
        </member>
        <member name="M:ServerTestFramework.Report.#ctor(System.String)">
            <summary>
            Create a new default style report with a given name and unspecified
            category. This report will automatically be attached to the root 
            reporting object.
            </summary>
            <param name="Name">Name of this report.</param>
        </member>
        <member name="M:ServerTestFramework.Report.AddReportDestination(ServerTestFramework.Report.Destination)">
            <summary>
            Add a new reporting destination to the internal list of reporters.
            </summary>
            <param name="dest">Class conforming to abstract protocol Destination</param>
        </member>
        <member name="M:ServerTestFramework.Report.RemoveReportDestination(ServerTestFramework.Report.Destination)">
            <summary>
            Removeo a new reporting destination by reference.
            </summary>
            <param name="dest">Class conforming to abstract protocol Destination</param>
        </member>
        <member name="M:ServerTestFramework.Report.GetReportDestinations">
            <summary>
            Return a list of all destinations for this report.
            </summary>
            <returns>ArrayList of Destinations.</returns>
        </member>
        <member name="M:ServerTestFramework.Report.ResetDestinations">
            <summary>
            Remove all reporting destinations.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Report.SetLevelFilter(System.UInt32)">
            <summary>
            Change the level of reporting that will be written.
            </summary>
            <param name="filter">Log level bitflags</param>
        </member>
        <member name="M:ServerTestFramework.Report.EnableFilter(System.UInt32)">
            <summary>
            Shortcut to enable only a specific set of filters
            </summary>
            <param name="filter">Log level bitflags</param>
        </member>
        <member name="M:ServerTestFramework.Report.DisableFilter(System.UInt32)">
            <summary>
            Shortcut to disable only a specific set of filters
            </summary>
            <param name="filter">Log level bitflags</param>
        </member>
        <member name="M:ServerTestFramework.Report.Debug(System.String)">
            <summary>
            Log a message at debug priority.
            </summary>
            <param name="message">String to send to logs.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Debug(System.String,System.Object[])">
            <summary>
            Log a message at debug priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Info(System.String)">
            <summary>
            Log a message at info priority.
            </summary>
            <param name="message">String to send to logs.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Info(System.String,System.Object[])">
            <summary>
            Log a message at info priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Warn(System.String)">
            <summary>
            Log a message at warning priority.
            </summary>
            <param name="message">String to send to logs.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Warn(System.String,System.Object[])">
            <summary>
            Log a message at warning priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Error(System.String)">
            <summary>
            Log a message at error priority.
            </summary>
            <param name="message">String to send to logs.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Error(System.String,System.Object[])">
            <summary>
            Log a message at error priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Fatal(System.String)">
            <summary>
            Log a message at fatal priority.
            </summary>
            <param name="message">String to send to logs.</param>
        </member>
        <member name="M:ServerTestFramework.Report.Fatal(System.String,System.Object[])">
            <summary>
            Log a message at fatal priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.Report.Success(System.String)" -->
        <member name="M:ServerTestFramework.Report.Success(System.String,System.Object[])">
            <summary>
            Log a message at success priority.
            </summary>
            <param name="format">Format string applied to objets.</param>
            <param name="arguments">Object paramaters to use in format string.</param>
        </member>
        <member name="M:ServerTestFramework.Report.FormatLogLine(System.UInt32,System.String,System.String)">
            <summary>
            Formats and timestamps a log line nicely.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Report.Destination">
            <summary>
            Interfaced needed to a log message sink.
            </summary>
        </member>
        <member name="T:ServerTestFramework.MinimumStressTestBase">
            <summary>
            This is multi-thread safe.  Classes that implement this will only be
            instantiated once during a stress run.
            </summary>
        </member>
        <member name="T:ServerTestFramework.MinimumTestBase">
            <summary>
            This must be multi-thread safe.
            </summary>
        </member>
        <member name="T:ServerTestFramework.StressTestBase">
            <summary>
            This is not multi-thread safe.  Due to legacy code, StressTestBase needs to derive
            from TestBase.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestBase">
            <summary>
            This is not multi-thread safe.
            </summary>
        </member>
        <member name="T:ServerTestFramework.FuncToStressAdapter">
            <summary>
            This adapts a functional test to a stress test.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AsyncStressTestBase">
            <summary>
            A stress base for doing asynchronous tests.  Derived classes must implement their Begin function
            in a thread safe manner, as only one actual object will ever be created.
            The Run function allows the async tests to run synchronously if the scheduler does not
            have support for async tests.
            </summary>
        </member>
        <member name="F:ServerTestFramework.AsyncStressTestBase.MaximumWaitTimeMilliseconds">
            <summary>
            The maximum time to wait when running synchronously.
            </summary>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.Run">
            <summary>
            The Run function allows the async tests to run synchronously if the scheduler does not
            have support for async tests.
            </summary>
            <returns>The result of running the test.</returns>
        </member>
        <member name="F:ServerTestFramework.AsyncStressTestBase.WaitEventQ">
            <summary>
            The queue of ManualResetEvents to be used when running synchronously.
            </summary>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.GetWaitEvent">
            <summary>
            Gets a ManualResetEvent from the queue, or creates one if it is empty.
            </summary>
            <returns>A ManualResetEvent.</returns>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.ReleaseWaitEvent(System.Threading.ManualResetEvent)">
            <summary>
            Returns a ManualResetEvent to the queue.
            </summary>
            <param name="mre">The ManualResetEvent to return.</param>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.Begin(System.Object)">
            <summary>
            The main entry point for external callers that are aware of AsyncStressTestBase.
            </summary>
            <param name="state">A state object that will be passed back to the external caller.</param>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.Begin(ServerTestFramework.AsyncStressTestBase.AsyncStressTracking)">
            <summary>
            This is the entry point for the test case.  Remember that it must be thread safe.
            All tests should call End to report the result of running the test.
            </summary>
            <param name="tracker">The state object used to track this test run.</param>
        </member>
        <member name="F:ServerTestFramework.AsyncStressTestBase.AsyncFinish">
            <summary>
            The function that will be called by the test to report its result.
            The scheduler should set this value on startup to receive callbacks.
            </summary>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.End(ServerTestFramework.TEST_RESULTS,ServerTestFramework.AsyncStressTestBase.AsyncStressTracking)">
            <summary>
            Reports the test result given to it.
            </summary>
            <param name="result">The result of running the test.</param>
            <param name="tracker">The state object used to track this test run.</param>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.End(System.Exception,ServerTestFramework.AsyncStressTestBase.AsyncStressTracking)">
            <summary>
            Reports the test as failed with the given exception.
            </summary>
            <param name="exc">The exception that occured.</param>
            <param name="tracker">The state object used to track this test run.</param>
        </member>
        <member name="M:ServerTestFramework.AsyncStressTestBase.End(ServerTestFramework.TEST_RESULTS,System.Exception,ServerTestFramework.AsyncStressTestBase.AsyncStressTracking)">
            <summary>
            Reports the test result and updates the tracker.
            </summary>
            <param name="result">The result of running the test.</param>
            <param name="exc">The exception that occured.</param>
            <param name="tracker">The state object used to track this test run.</param>
        </member>
        <member name="T:ServerTestFramework.AsyncStressTestBase.AsyncStressTracking">
            <summary>
            An object that may be useful for debugging and will be used for running synchronously.
            </summary>
        </member>
        <member name="F:ServerTestFramework.AsyncStressTestBase.AsyncStressTracking.IDVal">
            <summary>
            The ID value position, each tracker gets its own number until we wrap.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AsyncStressTestBase.AsyncCompletion">
            <summary>
            The delegate type that is used to notify the scheduler of the async test completing.
            </summary>
            <param name="state">A state object that will be passed back to the external caller.</param>
            <param name="result">The result of running the test.</param>
            <param name="exc">The exception, if any, that occured.</param>
        </member>
        <member name="T:ServerTestFramework.CompoundTestBase">
            <summary>
            This is a test case that will generate multiple TestBase instances to represent it.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.#ctor">
            <summary>
            Construct a new TestBaseGroup using the type's name and an Xbox client
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.#ctor(System.String)">
            <summary>
            Construct a new TestBaseGroup with a custom name and an Xbox client
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.Add(ServerTestFramework.TestBase)">
            <summary>
            Adds a test to the group.  The group's default AsyncGroup value will be used.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.Add(ServerTestFramework.TestBase,System.UInt32)">
            <summary>
            Adds a test to the group, with a specific AsyncGroup value.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.Add(ServerTestFramework.CompoundTestBase)">
            <summary>
            Generates the tosts of a compound test and adds them to the group.  The group's default AsyncGroup value will be used.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestBaseGroup.Add(ServerTestFramework.CompoundTestBase,System.UInt32)">
            <summary>
            Generates the tosts of a compound test and adds them to the group, with a specific AsyncGroup value.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceCommonActionState">
            <summary>
            Common Action State keeps track of the number of tests requesting this action
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceCommonAction">
            <summary>
            Common Action requestable by a test sequence.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceCommonActionsTable">
            <summary>
            Table of the states of requested common actions.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceBase">
            <summary>
            This class of test is executed by a TestSequenceBaseGroup.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceBaseGroup">
            <summary>
            Group of TestSequenceBases.  This class handles their async execution flow.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestSequenceAsyncResult">
            <summary>
            Async Result of a step executed on a Test Sequence.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.DescribeTestTree">
            <summary>
            Load the description of the enabled test tree into a XmlDocument
            </summary>
            <param name="testDesc">Document to build description into</param>
        </member>
        <member name="M:ServerTestFramework.TestSuite.Initialize(System.Xml.XmlDocument)">
            <summary>
            Functional:
            This is called when a functional run for a suite is started.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.DeinitializeSuite">
            <summary>
            Functional:
            This is called when a functional run for a suite is complete.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.InitializeStress(System.Xml.XmlDocument)">
            <summary>
            Stress:
            This is called just before a stress run starts.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.DeinitializeStress">
            <summary>
            Stress:
            This is called when a stress run ends.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.OneTimeInitializeStress(System.Xml.XmlDocument)">
            <summary>
            Stress:
            This is called after your suite is loaded but still before the gui shows up.
            Override it to do stuff like show your own form, etc.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.OneTimeDeinitializeStress">
            <summary>
            Stress:
            This is called when the stress GUI is being closed. Use it to do stuff like
            close your own custom form, etc.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestSuite.AddCustomMenus">
            <summary>
            This doesn't make any sense as part of a suite base which may be run without any gui existing.
            We will remove this eventually, but need to come up with an alternative first.
            
            Override this to add custom menus to the GUI. (stress only)
            </summary>
        </member>
        <member name="P:ServerTestFramework.TestSuite.FullPath">
            <summary>
            Returns full path to the suite DLL
            </summary>
        </member>
        <member name="T:ServerTestFramework.ThreadMaker">
            <summary>
            Utility function to just create a System.Thread (this internally updates the thread tracker automatically).
            (You must still call .Start() on it like normal)
            </summary>
        </member>
        <member name="T:ServerTestFramework.ThreadBase">
            <summary>
            Represents a class with a worker thread (this internally updates the thread tracker automatically).
            </summary>
        </member>
        <member name="T:ServerTestFramework.UnitTest">
            <summary>
            Base class for simple UnitTests.
            This is old, please use TestBase.
            </summary>
        </member>
        <member name="M:ServerTestFramework.UnitTest.RunTest">
            <summary>
            Implement this to be a unit test.
            </summary>
        </member>
        <member name="M:ServerTestFramework.UnitTest.Verify(System.Boolean)">
            <summary>
            Utility function to break nicely in either Debug or Free builds.
            </summary>
            <param name="b"></param>
        </member>
        <member name="P:ServerTestFramework.UnitTest.Name">
            <summary>
            Returns the name of the unit test.
            </summary>
        </member>
        <member name="M:ServerTestFramework.ArrayEx.Reverse``1(``0[])">
            <summary>
            Reverses the bytes in the array
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.ArrayEx.ByteComparison(System.Byte,System.Byte)">
            <summary>
            Implementation of the System.Comparison delegate for byte values
            </summary>
            <param name="left">First byte to compare</param>
            <param name="right">Second byte to compare</param>
            <returns>
            Less than 0: x is less than y.
            0: x equals y.
            Greater than 0: x is greater than y.
            </returns>
        </member>
        <member name="M:ServerTestFramework.ArrayEx.SearchByteArray(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            searches an array for another array and returns the index of the start of the found block, or -1 if not found
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.ArrayComparer`1" -->
        <member name="M:ServerTestFramework.ArrayComparer`1.#ctor(System.Comparison{`0})">
            <summary>
            Constructor
            </summary>
            <param name="elementComparer">A System.Comparison delegate capable of comparing
            two values/objects of type T</param>
        </member>
        <member name="M:ServerTestFramework.ArrayComparer`1.Compare(System.Array,System.Array)">
            <summary>
            Compares two arrays
            </summary>
            <param name="left">First array to compare</param>
            <param name="right">Second array to compare</param>
            <returns>
            Less than 0: x is less than y.
            0: x equals y.
            Greater than 0: x is greater than y.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ServerTestFramework.ArrayComparer`1.ElementComparer" -->
        <member name="M:ServerTestFramework.Utilities.AsyncUtils.ParallelRunner.Run(ServerTestFramework.Utilities.AsyncUtils.PRFuncToCall,System.UInt32,System.UInt32,System.Object,System.UInt32)">
            <summary>
            Starts a set of parallel function calls and waits for them to finish.
            Exceptions are rethrown on to caller if thrown on a thread.
            </summary>
            <param name="fToCall">the function to call</param>
            <param name="count">total number of calls to make (the value passed to your function is incremented each time starting from 0)</param>
            <param name="maxAtOnce">max number of threads to run at once</param>
            <param name="userData">any user-defined information to pass on (note that it is passed by referance, so all threads share the same copy)</param>
            <param name="threadDelay">Delay in ms between thread creations (default 0).  This is useful to prevent a ton of operations that start all at once from trying to hammer a network interface silmutaneously, which can cause packets to be dropped.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.AsyncUtils.ParallelRunner.RunAsync(ServerTestFramework.Utilities.AsyncUtils.PRFuncToCall,System.UInt32,System.UInt32,System.Object,System.UInt32)">
            <summary>
            Same as Run(), only returns immediately.  The returned Status object can be used to monitor the progress.
            If an exception occurs, it is stored in the status object.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.AsyncUtils.ParallelRunner.Status">
            <summary>
            represents the status of an asynchronous run
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ByteEncoding">
            <summary>
            Encoding to just get the gosh dern bytes out of the string, and visa versa
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ConsoleX">
            <summary>
            <p>class ConsoleX: Extends standard Console  with kbhit() and getch() methods and colored output.</p>
            
            <p>uses MSVCR70.DLL Runtime library for kbhit() and getch()</p>
            <p>uses kernel32.dll and Win32 Console API for colored output</p>
             
            contacts: VladiP
            </summary>
            <example>
            <code>
            // write colored output for arg list without brackets {},  see comments in CC class  for color output details
            ConsoleX.WriteLine(CC.BLUE, " Simple colored output: ", CC.GREEN, " int: ",i, "  float: ", f);
            ConsoleX.Write(CC.WHITE, "\n Formatted output: ", CC.GREEN, "f= ", f.ToString("000.0")); 
            
            // kbhit example
            while (27 != c)
            {
            	if (ConsoleX.kbhit())
            	{
            		c = ConsoleX.getch();
            		ConsoleX.WriteLine(CC.GREEN,"Key: ", c, "  code: ", CC.WHITE, ((int)c).ToString("d") );
            	}
            }
            </code>
            </example>
            
        </member>
        <member name="M:ServerTestFramework.Utilities.ConsoleX.Write(System.Object[])">
            <summary>
            writes arg list to console, parameters with byte type will set color options for the next output items
            see comments in CC class  for color output details
            </summary>
            <param name="olist"> parameter list with optional byte type color modifiers </param>
            <returns> byte value - old default console color </returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.ConsoleX.WriteLine(System.Object[])">
            <summary>
            WriteLine: works as Write with new line at the end of parameter list
            </summary>
            <param name="olist"></param>
            <returns> byte value - old default console color </returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.CC">
            <summary>
            class CC - contains color constants to be used with ConsoleX output methods.
            Thanks to Keith Stutler (KeithSt) -- he suggested to put all constants into public class
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.COORD">
            <summary>
            Win32 API struct
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.SMALL_RECT">
            <summary>
            Win32 API struct
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.CONSOLE_SCREEN_BUFFER_INFO">
            <summary>
            Win32 API struct
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.Events">
            <summary>
            Works with event logs on multiple servers.  Primary use is searching for specific
            events withing logs since the last checkpoint.
            </summary>
            <example>
            // Set up checking event log for the kdc xmacs...
            string[] servers = Global.XEnv.GetServerListByInterface(STF.common.config.Interface.kdcsvc);
            Events logs = new Events(servers);
            logs.Source = "XMACS"; //optional
            logs.Init();
            // Run tests...
            ...
            // Check for events by search string in new events.
            if (change.TestForChange("execution failed"))
            ...
            </example>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.Init">
            <summary>
            Run before your operation to get a base for the log.
            Returns true if all servers listed responded, false if any did not.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestForChange(System.String)">
            <summary>
            Searches new entries since Init() or the last TestForChange was called.
            </summary>
            <param name="search">String to look for in log</param>
            <returns>True if Search string is found in any log since Init.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestForChange(System.String,System.Boolean)">
            <summary>
            Searches new entries since Init() or the last TestForChange was called with advanceTime == true.
            </summary>
            <param name="search">String to look for in log</param>
            <param name="advanceTime">If true, advances the last time; if false, does not.</param>
            <returns>True if Search string is found in any log since Init.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestForChangeAll(System.String,System.Boolean)">
            <summary>
            Searches for events from the time that Init or the last TestForChangeAll was called.
            </summary>
            <param name="search">The string to search for.</param>
            <param name="expect">True if the string is expected; false if it is not.</param>
            <returns>
            If expect is true: Returns true if the string is found on all servers; false if it is missing from one or more.
            If expect is false: Returns true if the string is not found on all servers; false if it is found on one or more.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestForChangeAll(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for events from the time that Init or the last TestForChangeAll was called.
            </summary>
            <param name="search">The string to search for.</param>
            <param name="expect">True if the string is expected; false if it is not.</param>
            <param name="advanceTime">If true, advances the last time; if false, does not.</param>
            <returns>
            If expect is true: Returns true if the string is found on all servers; false if it is missing from one or more.
            If expect is false: Returns true if the string is not found on all servers; false if it is found on one or more.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestServerForEvents(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime@)">
            <summary>
            Searches the server log for the search string that occured in an event after begin.
            </summary>
            <param name="server">The server to search.</param>
            <param name="log">The log to search.</param>
            <param name="source">The source of events.</param>
            <param name="search">The string to search for.</param>
            <param name="begin">The earliest the event could occur to be relevant.</param>
            <param name="outLastTime">Output param: The last time value that was checked for events in the log.</param>
            <returns>True if a matching event is found; false if it is not.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestServerForEvents(System.String,System.String,System.String,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            Searches the server log for the event id after begin.
            </summary>
            <param name="server">The server to search.</param>
            <param name="log">The log to search.</param>
            <param name="source">The source of events.</param>
            <param name="id">The event id to search for.</param>
            <param name="begin">The earliest the event could occur to be relevant.</param>
            <param name="end">The latest the event could occur to be relevant.</param>
            <returns>True if a matching event is found; false if it is not.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.TestServerForEvents(System.String,System.String,System.String,System.Int64,System.String,System.DateTime,System.DateTime)">
            <summary>
            Searches the server log for the event id after begin.
            </summary>
            <param name="server">The server to search.</param>
            <param name="log">The log to search.</param>
            <param name="source">The source of events.</param>
            <param name="id">The event id to search for.</param>
            <param name="search">The string to search for.</param>
            <param name="begin">The earliest the event could occur to be relevant.</param>
            <param name="end">The latest the event could occur to be relevant.</param>
            <returns>True if a matching event is found; false if it is not.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.GetEventsAfter(System.Diagnostics.EventLog,System.DateTime)">
            <summary>
            Gets all of the events after a certain time.  Attempts to compensate for a moving log target.
            </summary>
            <param name="eventLog">The log to get from.</param>
            <param name="begin">The time to start getting events.</param>
            <returns>An array of events from the log after the time.</returns>
            <remarks>
            The change to make this copy out the timed list of entries was due to the fact that when the event log
            becomes too large, it will automatically truncate.  This would cause the end of the list to drop out
            from under the index, throwing an exception.
            
            We now do a binary search to find the oldest entry we care about, then copy out the entries from that
            one to the end.  If the oldest entry in the log hasn't changed, then we continue on.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Utilities.Events.FindFirstGTE(System.Diagnostics.EventLog,System.DateTime)">
            <summary>
            Does a binary search to find the first entry whose time is >= the time passed in.
            </summary>
            <param name="log">The log to search.</param>
            <param name="time">The time to search for.</param>
            <returns>The index of the entry, or -1 if it all entries are earlier than time.</returns>
        </member>
        <member name="P:ServerTestFramework.Utilities.Events.Servers">
            <summary>
            List of servers to check for events.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.Events.Source">
            <summary>
            Source of the events.  ie. 'xmatchfd'
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.Events.Log">
            <summary>
            Name of the Log to access.  Default 'Application'
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.EventMonitor">
            <summary>
            Monitors an eventlog for a list of events.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.EventMonitor.Poll">
            <summary>
            Checks eventChecker for an occurance of any event in eventStringList.
            If a logfile was provided, the event will be saved to that file.
            If another Poll on the object is already in progress, it returns immediately with null.
            </summary>
            <returns>A list of events that occured, or null if none (or failure trying to check).</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.SleepInfo">
            <summary>
            Create new SleepInfo objects to key off some user feedback
            sleep in the GUI/Console/Etc.
            
            E.G: 
            	new SleepInfo("Waiting for server", 15 * 1000);
            	
            	This will sleep for 15 seconds while providing some progress
            	feedback to the user.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.SleepInfo.#ctor(System.String,System.UInt32)">
            <summary>
            Create new sleep info object, this will auto-induce sleep.
            </summary>
            <param name="title">Title of the feedback widget</param>
            <param name="millis">Milliseconds to sleep</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.ProgressInfo">
            <summary>
            ProgressInfo object provide fine grained control over
            the display of an elapsed task. 
            
            E.G.: 
            
            	ProgressInfo progress = new ProgressInfo("Creating objects", 100, 1);
            	
            	for(int i = 0; i &lt; 100; ++i)
            	{
            		progress.Step();
            	}
            	
            	If you are unsure of if your progress is finished you should call Finish()
            	to ensure that the progress handle is cleaned up internally.
            	
            	If you step up to or over the maximum value the progress info handle will 
            	be automatically cleaned up.
            	
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            Create a new progress info feedback object.
            </summary>
            <param name="title">Title as it should appear to the user</param>
            <param name="total">Total number of items before completion</param>
            <param name="step">Ammount to step per call to Step()</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.SetMessage(System.String)">
            <summary>
            Change the user visible message.
            </summary>
            <param name="message">Message as it should appear to the user</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.Step">
            <summary>
            Step one 'Step' unit. See the constructor.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.UnStep">
            <summary>
            Step back one 'Step' unit. See the constructor.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.SetValue(System.UInt32)">
            <summary>
            Explicitly change the internal value.
            </summary>
            <param name="newValue">New value of progress</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProgressInfo.Finish">
            <summary>
            Move Value to Maximum and cleanup the progress indicator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ProgressFeedbackHandle">
            <summary>
            Feedback Handles are used by the concrete class to implement 
            user visible feedback however the user interface sees fit.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FeedbackHandleFactory">
            <summary>
            The abstract factory is set on the manager (also a factory) to hand
            out new progress feedback handles. These will be handed out to new instances
            of the feedback info classes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.Utilities.FeedbackManager" -->
        <member name="M:ServerTestFramework.Utilities.FeedbackManager.SetFactory(ServerTestFramework.Utilities.FeedbackHandleFactory)">
            <summary>
            Set the internal factory. This class acts as a proxy container
            for that factory.
            </summary>
            <param name="factory">Factory to hand out feedback handles</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FeedbackManager.CreateProgressFeedback(System.String)">
            <summary>
            Create a new progress feedback handles for talking to the user interface.
            </summary>
            <param name="title">User-visible title of the feedback</param>
            <returns>New feedback handle</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FeedbackManager.ReleaseProgressFeedback(ServerTestFramework.Utilities.ProgressFeedbackHandle)">
            <summary>
            Release a progress feedback handle to the user interface.
            </summary>
            <param name="handle">Handle that was created with CreateProgressFeedback() on the manager</param>
        </member>
        <member name="P:ServerTestFramework.Utilities.FeedbackManager.Instance">
            <summary>
            Access the global instance of the feedback manager.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.NullProgressFeedbackHandle">
            <summary>
            The default class in case you try to use the ProgressInfo without 
            setting a factory, which seems to happen for certain calls within STF 
            when running outside STFRunner.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.NullFeedbackHandleFactory">
            <summary>
            The null factory for handing out null feedback handles. Does nothing.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClientException">
            <summary>
            An exception thrown by the HttpClient class.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClientException.#ctor">
            <summary>
            An exception thrown by the HttpClient class.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClientException.#ctor(System.String)">
            <summary>
            An exception thrown by the HttpClient class, with the given message.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClient">
            <summary>
            A simple generic http client.
            Unlike .NET's wrapper, this does not guarentee that a built request is actually valid, making it useful for negative cases.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.#ctor(System.String,System.UInt16)">
            From a hostname/ip and port.
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.#ctor(System.Net.IPEndPoint)">
            <summary>
            Creates a client that points at the given IP endpoint.
            </summary>
            <param name="endpoint">The location to talk to.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendRequest(ServerTestFramework.Utilities.HttpClient.Request)">
            <summary>
            Sends a request to the server.
            If we aren't connected, it will attempt to connect.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.GetResponse">
            <summary>
            Receives and parses a single response from the server.  This call will block if required.
            If the request times out or not enough data to form a response comes back, returns null.
            </summary>
            <param name="parseBody">Whether a body should be parsed from the response.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.CheckForResponse(System.Boolean)">
            <summary>
            Checks a data blob to see if it contains a valid response.
            </summary>
            <param name="readBody">
            If true, read the body as specified by the Content-Length header; if false, do not.
            </param>
            <returns>The response if a valid one is found, or null if one is not.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.Connect">
            <summary>
            Connect the socket to the remote server if it is not.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendRequestAsync(ServerTestFramework.Utilities.HttpClient.Request)">
            <summary>
            Sends a request asynchronously.
            </summary>
            <param name="request">The request to send.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendRequestAsync(System.Byte[])">
            <summary>
            Sends a request asynchronously.
            </summary>
            <param name="request">The request to send.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.GetResponseAsync(System.Boolean,ServerTestFramework.Utilities.HttpClient.AsyncResponseCallback)">
            <summary>
            Gets a response asynchrounously.
            </summary>
            <param name="readBody">If true, read the body of the response; if false, do not.</param>
            <param name="callback">Called when a response is received.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendReceiveAsync(ServerTestFramework.Utilities.HttpClient.Request,System.Boolean,ServerTestFramework.Utilities.HttpClient.AsyncResponseCallback)">
            <summary>
            Sends and receives asynchrounously.
            </summary>
            <param name="request">The request to send.</param>
            <param name="readBody">If true, read the body of the response; if false, do not.</param>
            <param name="callback">Called when a response is received.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendReceiveAsync(System.Byte[],System.Boolean,ServerTestFramework.Utilities.HttpClient.AsyncResponseCallback)">
            <summary>
            Sends and receives asynchrounously.
            </summary>
            <param name="request">The request to send.</param>
            <param name="readBody">If true, read the body of the response; if false, do not.</param>
            <param name="callback">Called when a response is received.</param>
        </member>
        <member name="F:ServerTestFramework.Utilities.HttpClient._connect_sync">
            <summary>
            Used to keep any other threads from calling BeginConnect while we are waiting to connect.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.ConnectAsync(ServerTestFramework.Utilities.HttpClient.AsyncState)">
            <summary>
            Begins the connect.
            </summary>
            <param name="state">The state to use.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.ConnectAsyncComplete(System.IAsyncResult)">
            <summary>
            Ends the connect.
            </summary>
            <param name="result">The result passed in.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendAsync(ServerTestFramework.Utilities.HttpClient.AsyncState)">
            <summary>
            Begins the send.
            </summary>
            <param name="state">The state to use.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.SendAsyncComplete(System.IAsyncResult)">
            <summary>
            Ends the send.
            </summary>
            <param name="result">The result passed in.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.ReceiveAsync(ServerTestFramework.Utilities.HttpClient.AsyncState)">
            <summary>
            Begins the receive.
            </summary>
            <param name="state">The state to use.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.ReceiveAsyncComplete(System.IAsyncResult)">
            <summary>
            Ends the receive.
            </summary>
            <param name="result">The result passed in.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClient.Request">
            <summary>
            Used to build a request to the server.
            Any field set to null will not be included in the request.
            Each field is seperated by \r\n.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.HttpClient.Request.GetHeaderString">
            <summary>
            Constructs the header string.
            </summary>
            <returns>The header string.</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClient.Response">
            <summary>
            Used to return the response from a server.
            If a field is null, it means there was no response for it.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.HttpClient.Response.Exception">
            <summary>An exception thrown when attempting to retrieve this response.</summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClient.AsyncResponseCallback">
            <summary>
            Called when a response is received asynchronously.
            </summary>
            <param name="response">The response that was received, or null if timed out.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.HttpClient.AsyncState">
            <summary>
            The state object passed between the async calls.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.IOCPSocket">
            <summary>
            Summary description for IOCP.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.LocalInterface">
            <summary>
            Helper methods for LocalInterface.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.LocalInterface.GetBestMatch(System.Net.IPEndPoint,System.Net.IPAddress@)">
            <summary>
            Use this to match a lo
            </summary>
            <param name="localIp"></param>
            <returns></returns>
        </member>
        <member name="T:MemoryMappedFile.MMF">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ProcessWrapper">
            <summary>
            Provides a way to run a process and capture it's output.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.ProcessWrapper.Run(System.String)">
            <summary>
            Method to run the process with the specified arguments.
            </summary>
            <param name="arguments">The command line arguments to send to the process.</param>
            <returns>The return code from the process.</returns>
            <remarks>
            The following exceptions can be thrown by this method:
            	ArgumentNullException		If the arguments string is null.
            	ProcessException            If the timeout expired waiting for the process to finish.
            	
            These exceptions can be thrown from the Process.Start method:
            	InvalidOperationException
            	Win32Exception
            	ObjectDisposedException
            </remarks>
        </member>
        <member name="P:ServerTestFramework.Utilities.ProcessWrapper.ProcessName">
            <summary>
            Gets or sets the friendly name of the process.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.ProcessWrapper.ExecutablePath">
            <summary>
            Gets or sets the fully-qualified path to the process executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.ProcessWrapper.WorkingDirectory">
            <summary>
            Gets or sets the name of the working directory.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.ProcessWrapper.ExecutionTimeout">
            <summary>
            Gets or sets the number of seconds to allow the process to run before abandoning it. Default is 120.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.ProcessWrapper.Output">
            <summary>
            Gets the text written by the running process to the Standard Output stream.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ProcessOutputReader">
            <summary>
            Thread procedure wrapper that allows data to be passed in and out of the procedure.
            Used to read process output.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.PuidPool">
            <summary>
            A static accessor class for the service defined pre-allocated puid pools.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.PuidPool.Type">
            <summary>
            Define your own puid pool enum here if you want to allocate a specific
            type of puid.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Core.Utilities.RandomEx">
            <summary>
            Summary description for Random.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomString(System.Int32)">
            <summary>
            Generates a random ASCII string
            </summary>
            <param name="MaxLength">Length of string to generate</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomString(System.String,System.Int32)">
            <summary>
            Like GenerateRandomString, but with specified prefix.
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomNameString(System.Int32)">
            <summary>
            Unlike GenerateRandomString, there is no prefix with this version.
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomUTFString(System.Int32)">
            <summary>
            Generates a random UTF string
            </summary>
            <param name="MaxLength">Length of string to generate</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomUpperAlphaNumericString(System.Int32)">
            <summary>
            Generates a random string comprised of upper case characters and numbers.
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomUpperAlphaNumericString(System.Int32,System.Int32)">
            <summary>
            Generates a random string comprised of upper case characters and numbers.
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateTotallyRandomString(System.Int32)">
            <summary>
            This will generate, like, a totally, like, random string, dude.
            
            The entire string is composed of chars in the 32..255 range
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateNumberString(System.Int32)">
            <summary>
            This will generate number strings (0,1,2,....9).
            The entire string is composed of chars in the 48 - 57 range
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateHexString(System.Int32)">
            <summary>
            This will generate hex strings (0,1,2,....e,f) with a prepended 0x
            </summary>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateIPString">
            <summary>
            Generates a random IP address in human readable dotted form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.GenerateRandomBlob(System.Int32)">
            <summary>
            This will generate a random blob of bytes ranging from 0x0-0xff
            </summary>
            <param name="MaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.RandomEx.NextLog">
            <summary>
            Returns an Int32 that logarithmically tends towards 0
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.ReflectionUtils.GetDerivedTypes(System.Collections.Generic.List{System.Type},System.Reflection.Assembly,System.Type)">
            <summary>
            Uses the information passed in to build a list of all the types derived 
            from the baseType within a specific assembly
            </summary>
            <param name="list">The list to add the Types to.</param>
            <param name="asm">The assembly to search through.</param>
            <param name="baseType">The base type you want derived types from.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.ReflectionUtils.GetDerivedTypes(System.Reflection.Assembly,System.Type)">
            <summary>
            Finds all types derived from baseType within the specified assembly.
            </summary>
            <param name="asm">The assembly to search through.</param>
            <param name="baseType">The base type you want derived types from.</param>
            <returns>A list of the types.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.ReflectionUtils.GetDerivedTypes(System.Type)">
            <summary>
            Finds all typed derived from baseType in *ALL* assemblies
            </summary>
            <param name="baseType">The base type you want derived types from.</param>
            <returns>A list of the types.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.ReflectionUtils.GetDerivedTypes(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>
            Finds all types derived from baseType and adds them to the specified List.
            </summary>
            <param name="list">The list to add the found types to.</param>
            <param name="baseType">The base type you want derived types for.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.RemoteReportDestination">
            <summary>
            This is a simple pass-through destination so that the destination and/or the report 
            object don't have to marshal their own parameters.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.SubStatics">
            <summary>
            Used to make class variables class-static, as in each inherited subclass has it's own static instance of the class 
            variable.  Normally, when a field is static in a base class, all subclasses share one instance of this field.  
            Sometimes it is important that each subclass of a particular base class each have its own instance.
            
            To use:
            - Pick a field in a base class for which you want a static instance per sub class.
            - Add a [SubStatic] attribute to that field.
            - Call SubStatics.Initialize(this) in the constructor for the base class.
            
            If the constructor for this field type requires parameters, adjust them on the SubStaticAttribute.
            Example:
              [SubStatic(ParameterTypes=new Type[] {typeof(int)}, Parameters=new object[] {2})]
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.SubStatics.Initialize(System.Object)">
            <summary>
            Initialize should be called in the constructor of any class that has SubStaticAttributes so that they are 
            actually initialized or set into the appropriate fields.
            </summary>
            <param name="target">A reference to the class containing fields with SubStaticAttributes.  Usually the "this" 
            keyword.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.SubStatics.GetStatic(System.Type,System.String)">
            <summary>
            Use this function to get a SubStatic from a class without having to create an instance of the class.
            </summary>
            <param name="owner">The type of the class that contains the SubStatic.</param>
            <param name="fieldName">The field name of the SubStatic item you are interested in.</param>
            <returns>The SubStatic instance for the supplied field</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.SubStaticAttribute">
            <summary>
            Add this attribute to a field to make it SubStatic.
            ParameterTypes and Parameters are nescessary to use when constructor for the SubStatic field has parameters
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.SubStaticAttribute.ParameterTypes">
            <summary>
            Array of the parameter types for the constructor of the SubStatic type.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.SubStaticAttribute.Parameters">
            <summary>
            Array of the parameters for the constructor of the SubStatic type.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.SubStaticUnitTest">
            <summary>
            UnitTest for SubStatics.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.SubStaticUnitTest.RunTest">
            <summary>
            Call this function to run the UnitTest suite.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.TcpRelay">
            <summary>
            Listens for tcp connections on a port, and relays all that traffic to/from the destination.
            You must Dispose() this object when you are done with it, in order to kill the listener thread.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.TcpRelay.AllowOnlyLocalHost">
            <summary>
            Prevent connections from anyone but ourself.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.TcpRelay.Dispose">
            <summary>
            Shuts down the listener thread and connections.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.TcpRelay.ProcessData(ServerTestFramework.Utilities.TcpRelay.Connection,System.Boolean,System.Byte[],System.Byte[]@)">
            <summary>
            Override this in order to alter the data before it is relayed from one side to the other.
            </summary>
            <param name="isRemoteTarget">If true, then the data being processed here is passing from the local side to the remote side.</param>
        </member>
        <member name="P:ServerTestFramework.Utilities.TcpRelay.Destination">
            <summary>
            The remote host to which traffic is relayed.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.TcpRelay.RemotePort">
            <summary>
            The port on the remote host.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.TcpRelay.LocalListenPort">
            <summary>
            The local port on which we listen for new connections.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.TcpRelay.Connection">
            <summary>
            Represents a connection on which we are relaying data
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.TextWriterReportBridge">
            <summary>
            Bridge between text writers and reporting system, used for rerouting console
            output into the report system
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.Timing.QueryPerformanceCounter">
            <summary>
            Gets the current value of the hardware performance counter.
            </summary>
            <returns>The current value of the counter.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the underlying call to QueryPerformanceCounter returns false.</exception>
        </member>
        <member name="M:ServerTestFramework.Utilities.Timing.QueryPerformanceFrequency">
            <summary>
            Gets the frequency at which the hardware performance counter ticks.
            </summary>
            <returns>The frequency at which the counter ticks.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the underlying call to QueryPerformanceFrequency returns false.</exception>
        </member>
        <member name="M:ServerTestFramework.Utilities.Timing.CalculatePerformanceDelta(System.Int64,System.Int64)">
            <summary>
            Calculates the time between two values of the performance counter, in seconds.
            </summary>
            <param name="start">The sample of the performance counter taken first.</param>
            <param name="end">The sample of the performance counter taken second.</param>
            <returns>The time between the two samples of the counter, in seconds.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the underlying call to QueryPerformanceFrequency returns false.</exception>
        </member>
        <member name="P:ServerTestFramework.Utilities.Timing.PerformanceFrequency">
            <summary>
            The frequency at which the hardware performance counter ticks.
            </summary>
            <remarks>
            Returns the cached value.  Call QueryPerformanceFrequency() to requery the value from the system.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the underlying call to QueryPerformanceFrequency returns false.</exception>
        </member>
        <member name="T:ServerTestFramework.Utilities.StopWatch">
            <summary>
            Summary description for Timers.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Core.Utilities.ValueCheck">
            <summary>
            Class containing overloaded Test methods that compare a value with another taht was expected 
            and throw descriptive ExpectedValueCheckExceptions when they don't match.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.ValueCheck.IsTrue(System.Boolean,System.String)">
            <summary>
            Checks if the given value is true.  If it is false, an exception is thrown.
            </summary>
            <param name="cond">The value to check.</param>
            <param name="desc">A description of the value, or the reason for checking it.</param>
        </member>
        <member name="M:ServerTestFramework.Core.Utilities.ValueCheck.IsFalse(System.Boolean,System.String)">
            <summary>
            Checks if the given value is false.  If it is true, an exception is thrown.
            </summary>
            <param name="cond">The value to check.</param>
            <param name="desc">A description of the value, or the reason for checking it.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XmlConfigFile.#ctor(System.String)">
            <summary>
            Constructor reads in the config file and determines the environment
            to run on based on the "environ" tag
            </summary>
            <param name="Filename">name of the config file</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XmlConfigFile.ReadNode(System.String)">
            <summary>
            Method used to read the needed data
            </summary>
            <param name="NodeName">name of the config file</param>
            <returns>The node's inner text</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XmlConfigFile._Parse(System.String)">
            <summary>
            Searches the given string for following keywords and substitutes them:
             o %MACHINE% -- the user's machine
             o %USERNAME% -- the user's name
             o %USERDOMAIN% -- the user's domain
            </summary>
            <param name="InnerText"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.Utilities.XmlConfigFile.Item(System.String)">
            <summary>
            Accessor method used to read the needed data, it automatically takes care of
            reading from the right environment.  It's used like this:
            
            XmlConfigFile Config = new Config ("MyConfigFile.xml");
            string SomeSetting = Config["/Auth/Username"];
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.TestEventListener">
            <summary>
            This interface should be implemented by any class that would be notified by a functional test scheduler of events
            as it is running tests.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.TestScheduler">
            <summary>
            Functional test schedular interface.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.LocalTestSuiteLoader">
            <summary>
            Loader for a local test suite in the current app domain
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.RemoteSchedulerAgent">
            <summary>
            An object that can run a set of tests inside a remote app domain and report the results to a local 
            scheduler
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.StressJob.#ctor(System.String,System.Type,System.Single,System.String,ServerTestFramework.Runner.TestResultCollection,System.Boolean)">
            <summary>
            Constructor for dynamic test cases
            </summary>
            <param name="suiteName"></param>
            <param name="type"></param>
            <param name="priority"></param>
            <param name="testname"></param>
            <param name="allResults"></param>
        </member>
        <member name="M:ServerTestFramework.Runner.StressJob.#ctor(System.String,System.Type,System.Single,ServerTestFramework.Runner.TestResultCollection,System.Boolean)">
            <summary>
            Regular constructor
            </summary>
            <param name="suiteName"></param>
            <param name="type"></param>
            <param name="priority"></param>
            <param name="allResults"></param>
        </member>
        <member name="T:ServerTestFramework.Runner.StressSettingsTPS">
            <summary>
            Settings and Status for the TPS based scheduler.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.StressSchedulerTPS">
            <summary>
            The TPS based stress scheduler.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.StressTestScheduler">
            <summary>
            Interface for stress test schedulers.  You should be able to implement this, then with only a little gui effort, integrate the new scheduler into STFRunner.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.StressTestScheduler.Initialize(ServerTestFramework.Runner.StfXmlDoc,ServerTestFramework.Runner.TestSuiteContainer,ServerTestFramework.Runner.StressJobList,System.Object)">
            <summary>
            Called to set up the scheduler.
            </summary>
            <param name="schedulerSettings">This can be anything.  Most likely it will be used to pass a custom settings class so you can communicate settings to/from the scheduler.</param>
        </member>
        <member name="M:ServerTestFramework.Runner.StressTestScheduler.Shutdown">
            <summary>
            Shuts down the scheduler.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.StressTestScheduler.Run">
            <summary>
            This call should block and run tests and block until someone calls Stop.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.StressTestScheduler.Stop">
            <summary>
            Stop running tests.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.StressTestScheduler.ValidateParameters">
            <summary>
            Validates that the current scheduler settings are valid.
            </summary>
            <returns>true if they are valid</returns>
        </member>
        <member name="M:ServerTestFramework.Runner.StressSchedulerTPS.TestCallback(System.Object,ServerTestFramework.TEST_RESULTS,System.Exception)">
            <summary>
            The callback used by async tests to report success or failure.
            </summary>
            <param name="state">The state object that was passed to Begin.</param>
            <param name="result">The result of running the test.</param>
            <param name="exc">The exception, if any, that occured during the asynchronous portions of the test.</param>
        </member>
        <member name="P:ServerTestFramework.Runner.StressSchedulerTPS.IsInProgress">
            <summary>
            Checks the job list for in progress tests, if there are any, return true.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.TestAction">
            <summary>
            Specific types of events that occur inside of the test scheduler.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.Fail">
            Test returned a passed result.
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.Retry">
            Test case returned a failed result.
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.Start">
            A test case that previously failed is now being re-run.
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.Ignore">
            Test case started running.
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.StartAll">
            Test case was ignored.
        </member>
        <member name="F:ServerTestFramework.Runner.TestAction.StopAll">
            Tests begin running. Details will contain a count of running tests.
        </member>
        <member name="T:ServerTestFramework.Runner.TestEventArgs">
            <summary>
            Event arguments notifying listeners of a test result.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.TestResult">
            <summary>
            All stats-related variables and calculations for stress testing should go in this class.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.TestResult.Start">
            <summary>
            Start counting elapsed time.  The counter is stopped when End is called.  The Elapsed time is cumulative through Start/End pairs.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.TestResult.BeginInProgress">
            <summary>
            Increases the count of in progress test runs.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.TestResult.EndInProgress">
            <summary>
            Decreases the count of in progress test runs.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Runner.TestResultCollection">
            <summary>
            Represents a collection of TestResult objects and provides methods for calculating summary values
            </summary>
        </member>
        <member name="M:ServerTestFramework.Runner.TestResultCollection.CreateTestResult(System.String)">
            <summary>
            Creates a new TestResult and adds it to the collection
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Runner.TestResultCollection.AddTestResult(ServerTestFramework.Runner.TestResult)">
            <summary>
            Add existing TestResult to collection
            </summary>
            <param name="r"></param>
        </member>
    </members>

    <assembly>
        <name>STFLive</name>
    </assembly>
    <members>
        <member name="T:ServerTestFramework.UnexpectedXRLTestResultException">
            <summary>
            Same as UnexpectedTestResult from the core, only with an xrl.
            </summary>
        </member>
        <member name="T:ServerTestFramework.HResultException">
            <summary>
            Custom Exception class to carry and identify failures with an HResult
            </summary>
        </member>
        <member name="T:ServerTestFramework.XErrException">
            <summary>
            Custom Exception class to carry and identify failures with an X-Err
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.BundledAuthData">
            <summary>
            Summary description for BundledAuthData.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.HeartbeatThread">
            <summary>
            Main thread for sending heartbeat messages to the server. Also responsible for sending
            initial register message, which is the same as a heartbeat.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.CommandListenerThread">
            <summary>
            Main thread for listening to incoming server commands. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.RegisterListeners(ServerTestFramework.LiveService.CmdListener_Stop)">
            <summary>
            Call this to register listener functions for handling incoming commands
            </summary>
            <param name="funcStop"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.Start(ServerTestFramework.LiveService.TestType,ServerTestFramework.LiveService.TestState,System.String,System.String,ServerTestFramework.LiveService.CmdListener_Stop)">
            <summary>
            Call this to fire up the threads and send an initial register message. Uses default server port.
            </summary>
            <param name="type"></param>
            <param name="state"></param>
            <param name="componentName"></param>
            <param name="serverIp"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.Start(ServerTestFramework.LiveService.TestType,ServerTestFramework.LiveService.TestState,System.String,System.Net.IPEndPoint,ServerTestFramework.LiveService.CmdListener_Stop)">
            <summary>
            Call this to fire up the threads and send an initial register message.
            </summary>
            <param name="type"></param>
            <param name="state"></param>
            <param name="componentName"></param>
            <param name="epControllerServer"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.Stop">
            <summary>
            Shuts down the threads and causes a stop message to be sent to the server
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Controller.SetCurrentState(ServerTestFramework.LiveService.TestType,ServerTestFramework.LiveService.TestState,System.String)">
            <summary>
            Client should call this to update its state
            </summary>
            <param name="type"></param>
            <param name="state"></param>
            <param name="componentName"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.MsgTypes">
            <summary>
            In MessageHeader, to indicate which kind of message is coming
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.MessageHeader">
            <summary>
            Always sent before all other message types
            </summary>
        </member>
        <member name="T:ServerTestFramework.WireData">
             <summary>
             Provides easy serialization of  structured data into byte streams.
             </summary>
             <remarks>
             The <c>WireData</c> class provides a method of serializing class data into byte streams.  This is especially
             useful transfering data over the network.  Using <c>WireData</c> is very simple.  First create a class that derives
             from <c>WireData</c>.  Then add public member variables that specify the format of the data that this class targets in
             the order it appears in the stream.  For many cases this is enough to start serializing and deserializing with
             your <c>WireData</c> class.
             <list type="bullet">
             <item>
             <term>Serialization to a byte[]</term>
             <description>Fill out your structure and cast your class to a <c>byte[]</c>.  The resulting <c>byte[]</c> will be your serialization data.  Alternatively you can call WriteStream and pass a <c>Stream</c> for a similar effect.</description>
             </item>
             <item>
             <term>Deserialization from a byte[] or a Stream</term>
             <description>Construct a new instance of your class and call ReadStream on your <c>byte[]</c> or <c>Stream</c>.  Your instance will contain the data that was present in the <c>Stream</c>.</description>
             </item>
             </list>
            
             WireData derived classes are made up of different data types.  The valid data types for serialization are as follows:
             <list type="bullet">
             <item>
             <term>Supported native types</term>
             <description>The types that may make up WireData types are: <c>bool</c>, <c>byte</c>, <c>char</c>, <c>decimal</c>, <c>double</c>, <c>short</c>, <c>int</c>, <c>long</c>, <c>sbyte</c>, <c>float</c>, <c>ushort</c>, <c>uint</c>, <c>ulong</c>, <c>DateTime</c>, <c>string</c>, arrays of any of these types and other <c>WireData</c> derived classes.  <c>DateTime</c> is supported like a native type and is serialized by calling its ToFileTime.</description>
             </item>
             <item>
             <term>Embedded WireData classes</term>
             <description><c>WireData</c> classes can also contain other embedded <c>WireData</c> classes as members.</description>
             </item>
             <item>
             <term>Arrays</term>
             <description><c>WireData</c> supports arrays of any of the other types of supported data types.  To use an array you must specifiy how many items are in the array.  See <see cref="T:ServerTestFramework.WireInfoAttribute"/> and "Arrays" section below for details on how to use arrays.</description>
             </item>
             <item>
             <term>Strings</term>
             <description>Strings are treated almost identically to arrays.  To use a string you must specifiy how many characters are in the string.  See <see cref="T:ServerTestFramework.WireInfoAttribute"/> and the "Arrays" section below for more information.  They are UTF8 encoded for serialization.</description>
             </item>
             </list>
            
             <b>Arrays</b><br/>
             <para>Since Arrays are not always the same size there are special considerations that are nescessary.  For example, a deserializer needs to know how many elements to allocate for the array and how much data to pull in.  A seriailzer needs to know where to serialize the element count for a variable sized array.  For these and other reasons, a <see cref="T:ServerTestFramework.WireInfoAttribute"/> needs to be specified any time an array is declared.</para>
             The size needs to be specified in one of three ways:
             <list type="number">
             <item>
             <term>ArraySize</term>
             <description>Specify an <c>ArraySize</c> when the array always has a constant number of elements.  If there are 4 <c>int</c>s (comprising 16 bytes) set <c>SizeParam = 4</c>.  On serialization if the array doesn't have enough elements the stream will be zero-padded.</description>
             </item>
             <item>
             <term>SizeParam</term>
             <description>For variable-sized arrays you can tell <c>WireData</c> to look at a different integral (such as <c>int</c>) field to get and set the number of array elements from and to.  Set <c>SizeParam</c> to be the name of the field that represents the element count.  If you set this up then when serializing/deserializing, <c>WireData</c> will take care of setting the linked count so you do not have to.  See the example below for more information.</description>
             </item>
             <item>
             <term>&lt;field&gt;Len</term>
             <description>For coveniance you don't usually have to specify the attribute for variable sized arrays at all.  Just take the field that you want to link as if you were using <c>SizeParam</c> above and name it the same as the array but append "Len" to the end.  See the example below for more information.</description>
             </item>
             </list>
             <para><b>Overloaded ReadStream/WriteStream</b></para>
             <para>There are situations where the above features don't make up enough functionality to match your protocol.  In these cases you will need to override <c>ReadStream</c> and <c>WriteStream</c> in your <c>WireData</c> derived class.  See <see cref="M:ServerTestFramework.WireData.ReadStream(System.IO.Stream)"/> for more information.</para>
             </remarks>
            
             <example>
             This sample shows how to call use the main features of WireData.
             <code>
                public class ExampleWireData : WireData
                {
                    public byte JustAByte = 0;
                    [WireInfo(ArraySize=10)] public string ConstString;
                    public int SizeForVarString;
                    [WireInfo(SizeParam="SizeForVarString")] public string VarString;
                    public uint VarByteArrayLen;
                    public int[] VarByteArray;
            
                    [STAThread]
                    static void Main(string[] args)
                    {
                        // Create and fill out the ExampleWireData structure
                        ExampleWireData wd1 = new ExampleWireData();
                        wd1.JustAByte = 4;
                        wd1.ConstString = "hello";
                        wd1.VarString = "goodbye";
                        wd1.VarByteArray = new int[3] {5, 6, 7};
            
                        // Serialize ExampleWireData to byte array
                        byte[] data = (byte[])wd1;
                        Debug.Assert(data.Length == 38);
            
                        // Create, deserialize and verify that it was converted correctly
                        ExampleWireData wd2 = new ExampleWireData();
                        wd2.ReadBytes(data);
                        Debug.Assert(wd2.JustAByte == 4);
                        Debug.Assert(wd2.ConstString == "hello");
                        Debug.Assert(wd2.VarString == "goodbye");
                        Debug.Assert(wd2.VarByteArray[0] == 5);
                        Debug.Assert(wd2.VarByteArray[1] == 6);
                        Debug.Assert(wd2.VarByteArray[2] == 7);
                    }
                }
             </code>
             </example>
            
        </member>
        <member name="F:ServerTestFramework.WireData.ManualArraySize">
            <summary>
            If set, you will need to manually provide array sizes when writing WireDatas
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireData.DumpDiagnosticInfo">
            <summary>
            Setting this to true will dump WireData info as it's being written to a stream
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireData.NullTermOverRide">
            <summary>
            If set, overrides NullTerminated attribute. That is things that are supposed to be
             null terminated, won't be.
            </summary>
        </member>
        <member name="M:ServerTestFramework.WireData.GetFieldCacheLine(System.Type)">
            <summary>
            Gets the static entry in the WireData field cache that
            corresponds to the type passed in. If one does not exist,
            InitFieldCache will create one.
            </summary>
            <param name="type">Type to get the field cache line for.</param>
            <returns>The FieldCache object for the given type, or null if one cannot be constructed.</returns>
        </member>
        <member name="M:ServerTestFramework.WireData.op_Explicit(ServerTestFramework.WireData)~System.Byte[]">
            <summary>
            This serializes a <c>WireData</c> class to a byte[].
            </summary>
        </member>
        <member name="M:ServerTestFramework.WireData.ReadBytes(System.Byte[])">
            <summary>
            ReadBytes deserializes a byte[] to a <c>WireData</c> class.
            </summary>
        </member>
        <member name="M:ServerTestFramework.WireData.ReadBytes(System.Byte[],System.Int32)">
            <summary>
            ReadBytes deserializes a byte[] to a <c>WireData</c> class.
            </summary>
            <param name="bytes">Byte array of data, may be larger than necessary</param>
            <param name="bytesSize">The number of bytes of data to use. Must be less than or equal to bytes.Length.</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.WireData.ReadStream(System.IO.Stream)">
             <summary>
             ReadStream deserializes a stream to fill this <c>WireData</c> class.
             </summary>
             <param name="stream">The source stream to deserialize from.</param>
             <returns>Returns a copy of itself.  This is just a convenience for constructing and deserializing at once.</returns>
             <example>
             <b>Overloaded ReadStream/WriteStream</b>
             <para>When implementing a complex protocol you may run into situations where the built in functionality is not sufficient.  An common example of this is when a header precedes a section that's structure depends on a value in the header.  For example, a IP packet has a byte 24 bytes in which if it equals 17 then the rest of the packet after the header should be interpreted as UDP and if it's 6, TCP.  This affects the following structure of the packet.</para>
             <para>The example below is a trivialized version of making TCP/UDP/IP packets.  For simplicity I am leaving out portions of the protocol and not actually handling the body of the packets.  This implementation is completely self-contained.  All you have to do is create a <c>Packet</c> object and call ReadStream on it to pull in a UDP or TCP packet.</para>
             <code>
                public class Packet : WireData
                {
                    public IPHeader IPHeader;
                    public ProtocolHeader ProtocolHeader;
            
                    public override WireData ReadStream(Stream stream)
                    {
                        IPHeader.ReadStream(stream);
                        Debug.Assert(IPHeader.Type == 0x11 || IPHeader.Type == 0x6);
                        if (IPHeader.Type == 0x11)
                            ProtocolHeader = (ProtocolHeader)new UDPHeader().ReadStream(stream);
                        else
                            ProtocolHeader = (ProtocolHeader)new TCPHeader().ReadStream(stream);
            
                        return this;
                    }
            
                    public override void WriteStream(Stream stream)
                    {
                        if (ProtocolHeader is UDPHeader)
                            IPHeader.Type = 0x11;
                        else
                            IPHeader.Type = 0x6;
            
                        IPHeader.WriteStream(stream);
                        ProtocolHeader.WriteStream(stream);
                    }
                }
            
                public class IPHeader : WireData
                {
                    public byte Version;
                    public byte TOS;
                    public ushort TotalSize;
                    [WireInfo(ArraySize=5)] public byte[] Other1;
                    public byte Type;
                    [WireInfo(ArraySize=10)] public byte[] Other2;
                }
            
                public class ProtocolHeader : WireData
                {
                }
            
                public class UDPHeader : ProtocolHeader
                {
                    public short SourcePort;
                    public short DestPort;
                    public short DataLen;
                    public short Checksum;
                    [WireInfo(ArraySize=0)] public byte[] Data;
                }
            
                public class TCPHeader : ProtocolHeader
                {
                    public short SourcePort;
                    public short DestPort;
                    public uint SequenceNumber;
                    [WireInfo(ArraySize=12)] public byte[] Other2;
                    [WireInfo(ArraySize=0)] public byte[] Data;
                }
                </code>
             </example>
        </member>
        <member name="M:ServerTestFramework.WireData.WriteStream(System.IO.Stream)">
            <summary>
            ReadStream serializes this <c>WireData</c> class into a stream.
            </summary>
            <remarks>
            See <see cref="M:ServerTestFramework.WireData.ReadStream(System.IO.Stream)"/> for more information and an example.
            </remarks>
            <param name="stream">The destination stream to serialize to.</param>
        </member>
        <member name="M:ServerTestFramework.WireData.Size">
            <summary>
            Returns the size of this WireData class as currently configured.
            </summary>
            <remarks>
            This is expensive because it requires actually serializing the structure and getting the length of the resulting data.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.WireData.BinaryWriteValue(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes an object to the writer using the correctly typed function.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="o">The object to write.</param>
        </member>
        <member name="M:ServerTestFramework.WireData.BinaryWriteValue(System.IO.BinaryWriter,System.Object,System.Type)">
            <summary>
            Writes an object to the writer using the correctly typed function.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="o">The object to write.</param>
            <param name="type">The type to write the object as.</param>
        </member>
        <member name="M:ServerTestFramework.WireData.BinaryWriteValue(System.IO.BinaryWriter,System.Object,System.Type,ServerTestFramework.WireData)">
            <summary>
            Writes an object to the writer using the correctly typed function.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="o">The object to write.</param>
            <param name="type">The type to write the object as.</param>
            <param name="wiredata">The WireDate to inherit schema version from.</param>
        </member>
        <member name="M:ServerTestFramework.WireData.FieldCache.AddForcedFields(System.Reflection.FieldInfo[],System.Boolean)">
            <summary>
            Adds the fields that have WireData.ForceSerialize set to true.
            </summary>
            <param name="fields">The fields to check.</param>
            <param name="bSortedByClass">True to sort the fields, false if not.</param>
        </member>
        <member name="M:ServerTestFramework.WireData.FieldCache.GetFieldIndex(System.String)">
            <summary>
            Determines the index of the field with the given name.
            </summary>
            <param name="fieldName">The name of the field to find.</param>
            <returns>The index of the field with the given name.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if no field can be found whose name matches the value passed in fieldName.
            </exception>
        </member>
        <member name="M:ServerTestFramework.WireData.FieldCache.CreateFuzzData(System.Int32)">
            <summary>
            Creates a FuzzDataAttribute for the given index, unless one already exists.
            </summary>
            <param name="i">The index to create at.</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestState">
            <summary>
            State of client for Register messages
            Warning: StfController relies on these, watch for build breaks if you change them.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestType">
            <summary>
            Type of client for Register messages
            Warning: StfController relies on these, watch for build breaks if you change them.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Register">
            <summary>
            (xmit) Register message, for sending state to server
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.CommandMsg">
            <summary>
            (recv) Command message
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.CustomTransaction">
            <summary>
            Summary description for CustomTransaction.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.FDTransaction.endPoint">
            <summary>
            IP or DNS name of server
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.FDTransaction.transport">
            <summary>
            Use the UDP protocol transport for delivery
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FDTransaction.httpStatus">
            <summary>
            http status in response
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FDTransaction.ResponseContents">
            <summary>
            Buffer sized to contain raw contents of response
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FDTransaction.XErr">
            <summary>
            Value returned in XErr header field when http response status is 500.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FDTransaction.XDelay">
            <summary>
            HTTP response header for client-side throttling
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.FDTransaction.Transports">
            <summary>
            FD transactions can be UDP or TCP now
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.CustomTransaction.Execute">
            <summary>
            Sends a request with garbage data
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.CustomTransaction.Execute(System.IO.MemoryStream)">
            <summary>
            Sends a request
            </summary>
            <param name="reqStream">Data to be sent to the server (HTTP header will be generated automatically)</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.Global">
            <summary>
            Provides various statics for the entire framework.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Global._MinSupportedSTFRunnerVersion">
            Instruction for adding new members to Global:
            
            Members should inherit from InfiniteLifetimeMarshalByRefObject so they can be accessed across app domain.
            Fields should be and public. And Avoid static fields. Declare a static property to return its value
            from the singleton. If you must use MBV values, make sure they're copied into new app domains (see 
            RemoteTestSuiteLoader).
        </member>
        <member name="M:ServerTestFramework.Global.Initialize(System.String)">
            <summary>
            Initialize the framework using a file on the local filesystem.
            </summary>
            <param name="configFileName">Path to XML configuration file.</param>
        </member>
        <member name="M:ServerTestFramework.Global.InitializeXml(System.String)">
            <summary>
            Initialize the framework using a string of XML config data. This is
            useful for initializing remotely from another process space since
            the XML data can be serialized easier.
            </summary>
            <param name="configXmlData">Well-formed XML document</param>
        </member>
        <member name="M:ServerTestFramework.Global.Initialize(System.Xml.XmlDocument)">
            <summary>
            Initialize the framework using a pre-created XML config document.
            </summary>
            <param name="config">XML DOM object</param>
        </member>
        <member name="M:ServerTestFramework.Global.Initialize(ServerTestFramework.Runner.StfXmlDoc)">
            <summary>
            Initialize the framework using a pre-created XML config document.
            </summary>
            <param name="config">XML DOM object</param>
        </member>
        <member name="M:ServerTestFramework.Global.Initialize">
            <summary>
            Initialize the framework using the default config file.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet">
            <summary>
            Returns the BulkUserSet, if specified in the XML file. Grabs either the
            userset with tag "" or the first user set, if "" is not found.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet(System.String)">
            <summary>
            Returns the BulkUserSet, if specified in the XML file, for the given tag. This is
            user-settable, in the XML file, and allows for distinct user sets. You may want
            to create some Xenon and Xbox users, or partition them manually, etc.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetEnvironmentSettingsGroup">
            <summary>
            Returns an XML node for the "settingsgroup" node matching the current environment choice
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetSettingsGroup(System.String)">
            <summary>
            Returns an XML node for the "settingsgroup" node with the given name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.XErrToString(System.UInt32)">
            <summary>
            Converts an XErr returned by the server to a string (long live reflection!)
            </summary>
            <param name="XErr">Error code returned by the XOnline servers</param>
            <returns>A human readable string</returns>
        </member>
        <member name="M:ServerTestFramework.Global.GenerateSeparatorString(System.String)">
            <summary>
            Returns a string that can be used as a fancy seprator when writing to the console.
            Example:
            GenerateSeparatorString ("Hello World")
            returns "Hello World -------------------------------------------"
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.GameConfig">
            <summary>
            Summary description for GameConfig.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.HTTPAuthData">
            <summary>
            Taken from private\common\service\SGInfo.cs
            Storage datacenter request needs these httpHeader
            
            This is a stripped down copy of the service SGInfo.cs.  This is unfortunate, as we
            also have a test version of SGInfo.cs (in ServerTestFramework\Liveservice\FakeSG\SGInfo.cs, 
            its object is CSGInfo.  CSGInfo is optimized for FakeSG, which requires an explicitly laid
            out struct so it can easily map to the memory-mapped file (MMF).  It is also a struct instead
            of a class.  When we get some down time, it might be nice to consolidate this and that. 
            
            This does support AuthData3 now.
            
            kgoodier
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.SGInfo">
            <summary>
            taken from SGInfo.cs, but only keeps the parts that HTTPAuthData uses
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsole">
            <summary>
            Summary description for ManagementConsole.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STF.Initialize(System.String)">
            <summary>
            As of 4/1/2005, please use this function and not the ones above. Calling into
            InitializeGlobalResources() with a null config file will cause an exception to be thrown.
            
            For examples of XML config files to use, please see files such as:
              private\test\stftests\stfrunner\stf_tn.xml
              private\test\stftests\stfrunner\stf_xblob.xml
            
            This function will likely be removed in the future.
            </summary>
            <param name="XmlFilename">Name of XML file holding config info. May be null to use default name.</param>
        </member>
        <member name="T:ServerTestFramework.WireDataIncludeBase">
            <summary>
            Extend this if you want to include a base class's members in the Wiredata serialization. This will
            include all public instance variables in base classes, up through the chain to the base Wiredata class.
            Fields in base classes will be serialized first.
            </summary>
        </member>
        <member name="T:ServerTestFramework.WireInfoAttribute">
            <summary>
            Attribute placed on fields of a class derived from WireData to add context to the field in order to serialze it
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.ArraySize">
            <summary>
            Used to specify a constant size for an array.
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.SizeParam">
            <summary>
            Used to specify which other field in a <c>WireData</c> class specifies the size of the array or string this attribute is put on.
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.NullTerminated">
            <summary>
            Include the Null in a varible length string and add 1 to it's length variable (if there is one)
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.UnicodeEncoded">
            <summary>
            Use unicode Encoding instead of the default (UTF8)
            </summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.ForceSerialize">
            <summary>If true, forces this field to be picked up for serialization.</summary>
        </member>
        <member name="F:ServerTestFramework.WireInfoAttribute.None">
            <summary>
            An static instance of <c>WireInfoAttribute</c> with all values set to defaults.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.XblUserBase">
            <summary>
            XblUserBase is intended to be used for stress purpose only.  Do not create XblUserBase object in your tools.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XblUserBase.op_Implicit(ServerTestFramework.LiveService.XblUserBase)~System.UInt64">
            <remarks>
            Other type castors should be handled by functional library.  For example, explicit cast to BillingInfo should be handled by UACSCommon.
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.XblUser">
            <summary>
            XblUser represents user information for server test framework.
            Coders should make sure that following guideline is observed:
            1. for libary code that intended to use by other components and thus require absolute performance, you can use _variable to access different fields directly
            2. for utility code, please use provided accessor
            3. utility coder should assume that each field can contain erronous data, including null.  This is to provide test cases writers to test negative (error condition).
            please refer to wiki page for more information.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.XblUser._gamertag">
            <remarks>
            _gamertag, _billingInfo and _passportInfo are listed as internal to allow direct access for libraby code that requires absolute performance
            please remember that direct access of those members requires more responsibility in the area of house keeping.
            we do not add "protected" level of access to those members since XblUser is sealed.  If you make XblUser inheritable, you should consider to make those members
            protected internal.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.LiveService.XblUser.#ctor">
            <remarks>
            The following constructor are internal only.  They are intended for library code who need direct access to member variables.  Remember that using these
            two constructor may break utility code assumption that puid and gamertag is always there.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.LiveService.XblUser.#ctor(System.UInt64,System.String)">
            <remarks>
            The following constructors are for public consumption.  If you add a new data member for this class, please don't forget to update the constructors.
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.XConfig">
            <summary>
            Summary description for XConfig.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.CheckNpdbAccessibility">
            <summary>
            Does a relatively quick check for whether we can talk to the NPDB machine or not.
            The timeout period for making an NPDB call (via SQL) when the server is not available
            is over 1 minute on my machine. This should time out in a couple of seconds. That is
            oh-so-much more tolerable.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XRLPayload.TestNegative(System.UInt32)">
            <summary>
            Verifies that the specified call failed, and that the returned error matches the expected code. 
            This behavior can be overriden to not check for an explicit error code
            
            This function will also set ResultCode as needed
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.CreditCardRandomizer">
            <summary>
            This class provides properties to generate random credit card numbers
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.CreditCardRandomizer.#cctor">
            <summary>
            Static constructor - empty
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.CreditCardRandomizer.GetRandomAccountNumber(System.String)">
            <summary>
            Returns a random credit card number for the type of card provided
            </summary>
            <param name="creditCardType">The credit card type. Can be American Express, Discover, JCB, Mastercard, or Visa. Tries to handle abbreviations and name variations (eg: AMEX). Defaults to Visa.</param>
            <returns>A random credit card number in string format</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.CreditCardRandomizer.getRandomCC(System.Int32,System.Int32)">
            <summary>
            Constructs the actual random credit card number. All credit cards follow the same checksum, the only difference being the prefix and length of the number
            </summary>
            <param name="prefix">The prefix of the credit card type. For example, Visa cards start with a 4</param>
            <param name="length">The length of the credit card type. For example, Visa cards are all 16 digits in length</param>
            <returns>A random credit card number in string format</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.DirectDebitRandomizer">
            <summary>
            This class provides properties to generate random debit card numbers
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.#ctor">
            <summary>
            Default constructor - assumes Germany for the direct debit country
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.#ctor(System.String)">
            <summary>
            Uses the country provided to randomize on
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.#ctor(System.String,System.String)">
            <summary>
            Uses the country provided to randomize on
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.Randomize">
            <summary>
            Generates a random direct debit account number, bank code, branch code, etc.
            These values are in the various properties of this class and are synched with each other to provide a valid direct debit account.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.RandomizeDirectDebitValues">
            <summary>
            Generates a random direct debit account number, bank code, branch code, etc.
            These values are in the various properties of this class and are synched with each other to provide a valid direct debit account.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.DirectDebitRandomizer.GetCheckDigitsForFranceAccount">
            <summary>
            Returns the Check Digits value based on the algorithm for a French direct debit account.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.AccountNumber">
            <summary>
            The account number of the direct debit account
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.AccountNumberLastFour">
            <summary>
            The last four digits of the account number
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.BankCode">
            <summary>
            The bank code of the direct debit account
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.BranchCode">
            <summary>
            The branch code of the direct debit account
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.CheckDigits">
            <summary>
            The checksum of the direct debit account
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.Country">
            <summary>
            The country of the direct debit account
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.DirectDebitRandomizer.Algorithm">
            <summary>
            Alogrithm used to generate acct number
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Utilities.DeterministicRandom">
            <summary>
            Generates random numbers, but keeps track of enough information to recreate any specific event.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._rand">
            <summary>The random number generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._seed">
            <summary>The value used to seed the generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._iterations">
            <summary>The number of times a function was called on the generator.</summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor">
            <summary>
            Creates a new DeterministicRandom using the current time as a seed value.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor(System.Int32)">
            <summary>
            Creates a new DeterministicRandom using the given value as a seed.
            </summary>
            <param name="seed">The value to use as a seed.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Reset">
            <summary>
            Resets the state of the DeterministicRandom.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32,System.Int32)">
            <summary>
            Gets a random int in the range [minValue, maxValue).
            </summary>
            <param name="minValue">The inclusive minimum value to generate.</param>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [minValue, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32)">
            <summary>
            Gets a random int in the range [0, maxValue).
            </summary>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [0, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next">
            <summary>
            Gets a random int.
            </summary>
            <returns>An int in the range [0, int.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextByte">
            <summary>
            Gets a random byte.
            </summary>
            <returns>A random byte in the range [0, 255].</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextLong">
            <summary>
            Gets a random long.
            </summary>
            <returns>A random long in the range [0, long.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextDouble">
            <summary>
            Gets a random double.
            </summary>
            <returns>A double in the range [0, 1)</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextBytes(System.Byte[])">
            <summary>
            Fills the given array with random bytes.
            </summary>
            <param name="bytes">The array to fill with random bytes.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="offset">The offset from the beginning of the array to start from.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Seed">
            <summary>
            Gets or sets the seed value.  Setting the value to -1 causes a time based number to be chosen.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Iterations">
            <summary>
            Gets the number of times a function was called on the generator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.PassportUtilities">
            <summary>
            This class provides properties to generate random credit card numbers
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.RandomEx">
            <summary>
            Summary description for Random.  --(who the heck writes a comment like this?)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.UserPlayedGame(System.UInt64,System.UInt32,System.UInt32)">
            <summary>
            Makes call to the service to add a title to the list of played games for the given user.  Ignores
            titles that have already been played.
            </summary>
            <param name="puid">puid of the user</param>
            <param name="titleId">title played</param>
            <param name="localeID"></param>
            <returns>true if request to the service succeeds or if title already in list of played games</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.UserEarnedAchievement(System.UInt64,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Makes call to the service to add an achievement to list of earned achievements for the given user.  Ignores
            achievements that have already been earned.
            </summary>
            <param name="puid">puid of the user</param>
            <param name="titleID">title played</param>
            <param name="achievementId">id of the achievement earned</param>
            <param name="localeID"></param>
            <returns>true if request to the service succeeds or if achievement already earned</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.GetPlayedTitles(System.UInt64)">
            <summary>
            Returns details about titles played by the given user.
            </summary>
            <param name="puid">puid of user</param>
            <returns>array containing details of titles played by given user</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.AddPlayedTitles(System.UInt64,System.UInt32[])">
            <summary>
            Adds the specified titles to the user's list of played titles.
            </summary>
            <param name="user">existing user</param>
            <param name="titleIds">array of title Ids</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.GetAchievementDetails(System.UInt64,System.UInt32)">
            <summary>
            Use this method to retrieve information about achievements for the given title.  Note that this
            is user-specific, but can be used to get the list of all achievement Ids (non-user specific) for
            the title by setting puid to any valid user.
            </summary>
            <param name="puid">puid of user</param>
            <param name="titleID">titleId</param>
            <returns>array containing the achievement details for a given titleId and user</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.AddEarnedAchievements(System.UInt64,System.UInt32,System.UInt32[])">
            <summary>
            Updates the given user with earned achievements for the given title.  Use GetAchievementDetails() to
            obtain a list of achievementIds available for a title.
            </summary>
            <param name="puid">puid of user</param>
            <param name="titleId">titleId</param>
            <param name="achievementIds">array of achievement Ids</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.ExecutePrivilegeUpdate(System.UInt64,ServerTestFramework.LiveService.UserAccount.UserPrivileges,ServerTestFramework.LiveService.UserAccount.UserPrivileges)">
            <summary>
            Send a request to the service to update a user's privileges
            </summary>
            <param name="userPuid">puid of the user</param>
            <param name="privs">privileges to set</param>
            <param name="restrictPrivs">privileges to restrict</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.UpdateWithWebActivity(ServerTestFramework.LiveService.UserAccount.XeUser)">
            <summary>
            Update the user with web activity to avoid redirection to account creation when signing in to xbox.com site
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.GrantPermissionsForChildAcct(ServerTestFramework.LiveService.UserAccount.XeUser)">
            <summary>
            Update a child account with least restrictive permissions.
            </summary>
            <param name="user">child account</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.UpdatePrivileges(ServerTestFramework.LiveService.UserAccount.XeUser,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Updates a user's privacy settings only with the specified allow/restrict lists - all other privileges will remain at the current setting
            </summary>
            <param name="user">an existing account</param>
            <param name="privsToSet">list of privileges to set to true/allow (privileges are defined as: XONLINE_XPRIVILEGE_...)</param>
            <param name="privsToRestrict">list of privileges to set to false/restrict (privileges are defined as: XONLINE_XPRIVILEGE_...)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.UpdatePrivileges(ServerTestFramework.LiveService.UserAccount.Owner,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Updates a user's privacy settings only with the specified allow/restrict lists - all other privileges will remain at the current setting
            </summary>
            <param name="user">an existing account</param>
            <param name="privsToSet">list of privileges to set to true/allow (privileges are defined as: XONLINE_XPRIVILEGE_...)</param>
            <param name="privsToRestrict">list of privileges to set to false/restrict (privileges are defined as: XONLINE_XPRIVILEGE_...)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.Create(ServerTestFramework.LiveService.UserAccount.XeUser,System.String,System.String)">
            <summary>
            Create the user based on XeUser information
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Account(System.String,System.String,System.String,System.UInt64,System.String,System.String,System.UInt64,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Set up XeUser object and make call to create the user based on params submitted from the public methods
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="PassportMemberNameOfParent">username of parent's passport account</param>
            <param name="PassportPasswordOfParent">password of parent's passport account</param>
            <param name="PassportPuidOfParent">if this is NOT a child account this should be equal to PassportPuid, otherwise this is the puid of the parent's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360ChildAccount(System.String,System.String,System.String,System.UInt64,System.String,System.String,System.UInt64,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Set up XeUser object and make call to create the user based on params submitted from the public methods
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="PassportMemberNameOfParent">username of parent's passport account</param>
            <param name="PassportPasswordOfParent">password of parent's passport account</param>
            <param name="PassportPuidOfParent">puid of the parent's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User">
            <summary>
            Create a brand new SILVER account marked with web activity
            </summary>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.Boolean)">
            <summary>
            Create a brand new SILVER account with specified web activity
            </summary>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.Boolean,System.Boolean)">
            <summary>
            Create a brand new account with specified web activity and gold/silver status
            </summary>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.String)">
            <summary>
            Create a brand new SILVER account with specified gamertag marked with web activity
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.String,System.Boolean)">
            <summary>
            Create a brand new SILVER account with specified gamertag and web activity
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a brand new account with specified gamertag, web activity, and gold/silver status
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360User(System.String,System.String,System.String,System.UInt64,System.Boolean,System.Boolean)">
            <summary>
            Creates an account with specified gamertag, passport, web activity, and gold/silver status
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child">
            <summary>
            Creates a brand new SILVER child account (age 15) marked with web activity
            </summary>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.Int32)">
            <summary>
            Creates a brand new SILVER child account marked with web activity and with the specified age
            </summary>
            <param name="Age">child's age</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.Boolean,System.Boolean)">
            <summary>
            Creates a brand new child account (age 15) with specified web activity and gold/silver status
            </summary>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a brand new child account with specified web activity, gold/silver status, and age
            </summary>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <param name="Age">child's age</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.String,System.String,System.String,System.UInt64,System.Boolean,System.Boolean)">
            <summary>
            Creates a child account (age 15) with specified gamertag, passport, web activity, and gold/silver status
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.String,System.String,System.String,System.UInt64,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a child account with specified gamertag, passport, web activity, gold/silver status, and age
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Age">child's age</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.CreateXbox360Child(System.String,System.String,System.String,System.UInt64,System.String,System.String,System.UInt64,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a child account with specified gamertag, passport, parent's passport, web activity, gold/silver status, and age
            </summary>
            <param name="Gamertag">the desired gamertag for this user</param>
            <param name="PassportMemberName">username of this user's passport account</param>
            <param name="PassportPassword">password of this user's passport account</param>
            <param name="PassportPuid">puid of this user's passport account</param>
            <param name="PassportMemberNameOfParent">username of the parent's passport account</param>
            <param name="PassportPasswordOfParent">password of the parent's passport account</param>
            <param name="PassportPuidOfParent">puid of the parent's passport account</param>
            <param name="MarkWithWebActivity">true if you want this user marked as having visited the site to avoid account creation</param>
            <param name="Gold">true if you want to upgrade this user to a gold account</param>
            <param name="Age">child's age</param>
            <returns>null if failure, or XeUser with info filled out if success</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.MakeFriend(ServerTestFramework.LiveService.UserAccount.XeUser,ServerTestFramework.LiveService.UserAccount.XeUser)">
            <summary>
            Makes friends of two users
            </summary>
            <param name="requestor">The user sending the friend request</param>
            <param name="friend">The user accepting the friend request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserSetup.MakeFriend(ServerTestFramework.LiveService.UserAccount.XeUser,ServerTestFramework.LiveService.UserAccount.Owner)">
            <summary>
            Makes friends of two users
            </summary>
            <param name="requestor">The user sending the friend request</param>
            <param name="friend">The user accepting the friend request</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.ValueCheck">
            <summary>
            Class containing overloaded Test methods that compare a value with another taht was expected 
            and throw descriptive ExpectedValueCheckExceptions when they don't match.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FuzzDataAttributeException">
            <summary>
            An exception in the FuzzDataAttribute space.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttributeException.#ctor(System.String)">
            <summary>
            Creates a new exception with the given message.
            </summary>
            <param name="message">A message which describes the error.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttributeException.#ctor(System.String,System.Type)">
            <summary>
            Creates a new exception with the given message and type.
            </summary>
            <param name="message">A message which describes the error.</param>
            <param name="t">The type that caused the error.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttributeException.#ctor(System.String,System.Type,System.Exception)">
            <summary>
            Creates a new exception with the given message and type.
            </summary>
            <param name="message">A message which describes the error.</param>
            <param name="t">The type that caused the error.</param>
            <param name="e">The inner exception.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.FuzzDataAttribute">
            <summary>
            Attribute for marking fields and classes for fuzzing.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.Fuzz">
            <summary>Used to turn fuzzing on and off.</summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.Probability">
            <summary>The chance that a given field will be fuzzed.</summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.Deterministic">
            <summary>
            If true, this field will be fuzzed using a recorded or given seed value, and the iterations tracked.
            Useful for recreating past events.  See RandomSeed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.RandomSeed">
            <summary>
            If Deterministic is true and RandomSeed is non-negative, this value will be used as the seed for the 
            random number generator.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.RandomBytes">
            <summary>
            If true, the field will simply be filled with random bytes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.SetDeterminism(System.Boolean,System.Int32)">
            <summary>
            Sets up the deterministic random as requested.
            </summary>
            <param name="isDeterministic">The value to change Deterministic to.</param>
            <param name="seed">The value to change RandomSeed to.</param>
            <remarks>
            Would have done it in a property, but Attributes need fields.
            </remarks>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute._Properties">
            <summary>
            Contains the name/value pairs passed in to the attribute.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.DetRandom">
            <summary>
            The deterministic random number generator, if one is requested.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.StandardSerializer">
            <summary>
            Serialization function used to write objects in the standard method.
            Change it if custom serialization is needed, otherwise the default is WireData.BinaryWriteValue.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.RandomByteSerializer">
            <summary>
            Serialization function used to write random bytes.
            The default is InefficientRandomBytesWriter;
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute._actual">
            <summary>
            If not null, contains the fully typed attribute.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute.FuzzFieldCache">
            <summary>
            Cache for holding the list of fields for each type derived from FuzzFieldAttribute.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.#cctor">
            <summary>
            Static constructor loads type associations.  Still safe to call SearchAllAssemblies again.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.#ctor">
            <summary>
            Creates a new instance of the class using the defaults.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the class using the given value for Fuzz.
            </summary>
            <param name="fuzz">The value to set Fuzz to initially.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.#ctor(System.Object[])">
            <summary>
            Creates a new instance, using the list of name/value pairs.
            </summary>
            <param name="objs">A list of name/value pairs that will be propagated to the appropriate class.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.ConstructorCommon">
            <summary>
            All constructors should call this.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute._factory_map">
            <summary>
            The mapping from field types to FuzzDataAttribute derived classes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.MapFieldType(System.Type)">
            <summary>
            Maps a field type to a FuzzDataAttribute type.
            </summary>
            <param name="t">The field type to map.</param>
            <returns>The FuzzDataAttribute type</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.SpecializeGenericType(System.Type,System.Type)">
            <summary>
            Specializes a generic type with the param type.
            </summary>
            <param name="generic">The generic type to specialize.</param>
            <param name="param">The type to specialize by.</param>
            <returns>The type specialized with the param.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.InvokeDefaultConstructor(System.Type)">
            <summary>
            Invokes the default constructor on the given type.
            </summary>
            <param name="t">The type to construct.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.AssociateTypesToAttribute(System.Type[],System.Type)">
            <summary>
            Associates an array of types with an attribute type.
            </summary>
            <param name="associates">The types that can be fuzzed by the attribute.</param>
            <param name="t">The attribute type to associate.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.SearchAllAssemblies">
            <summary>
            Searches all loaded assemblies for classes derived from <c>FuzzDataAttribute</c>.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.SearchAssembly(System.Reflection.Assembly)">
            <summary>
            Searches a specific assembly for classes derived from <c>FuzzDataAttribute</c>.
            </summary>
            <param name="asm">The assembly to search.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.BindType(System.Type)">
            <summary>
            Attempts to create an attribute that is specialized for the given type.
            </summary>
            <param name="t">The type to specialize for.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.GetFuzzTypes">
            <summary>
            Gets an array of types that this attribute can fuzz.
            </summary>
            <returns>An array of types that this attribute can fuzz.</returns>
            <remarks>
            This function should be static for the type, but C# does not support static functions in an interface.
            
            For a generic type, this function will be called by specializing the generic using object and 
            calling through that type. Thus, GetFuzzTypes should be invariant by specialization.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.InheritProperties(ServerTestFramework.Utilities.FuzzDataAttribute)">
            <summary>
            Called when creating a more specific instance of a <c>FuzzDataAttribute</c>.
            </summary>
            <param name="fuzzAttr">The attribute to inherit properties from.</param>
            <example>
            Below is an example of how to implement the function properly:
            <code>
            class FooFuzzAttribute : FuzzDataAttribute
            {
            ...
            public override void InheritProperties (FuzzDataAttribute fuzzAttr)
            {
                base.InheritProperties(fuzzAttr);
            
                FooFuzzAttribute fooFuzzAttr = fuzzAttr as FooFuzzAttribute;
                if (fooFuzzAttr != null)
                {
                    this.FooProperty = fooFuzzAttr.FooProperty;
                    ...
                }
            
                if (fuzzAttr.Properties != null)
                {
                    if (fuzzAttr.Properties.ContainsKey("FooProperty"))
                    {
                        this.FooProperty = (FooType) fuzzAttr.Properties["FooProperty"];
                    }
                    ...
                }
            }
            ...
            }
            </code>
            </example>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.FuzzWrite(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes the object to the writer, possibly fuzzes the written value, but does not change it.
            </summary>
            <param name="bw">The destination to write to.</param>
            <param name="obj">The object to fuzz.</param>
            <returns>
            True if the object was fuzzed when writing; false if not.
            </returns>
            <remarks>
            This is the public face of fuzzing, it guarantees that the base class is respected and takes the
            burden of always checking it off of derived classes.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.FuzzWriteInternal(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes the object to the writer, possibly fuzzes the written value, but does not change it.
            The default implementation simply writes with no fuzzing.
            </summary>
            <param name="bw">The destination to write to.</param>
            <param name="obj">The object to fuzz.</param>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzDataAttribute._staRandom">
            <summary>
            A thread static random number generator, we will assume that it is thread safe due to this.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.NextDouble">
            <summary>
            Gets a random double from the correct source.
            </summary>
            <returns>A random double.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.NextBytes(System.Byte[])">
            <summary>
            Fills the given array with random bytes.
            </summary>
            <param name="bytes">The array to fill with random bytes.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.NextBool(System.Double)">
            <summary>
            Uses NextDouble to get a boolean value based on the probability given.
            </summary>
            <param name="prob">The probability that a value of true will be returned.</param>
            <returns>
            True if the value of NextDouble is less than the value given; false if not.
            Thus a given probability of 1 will always generate true, and 0 will always generate false.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.FuzzCheck">
            <summary>
            Gets a value indicating whether fuzzing should be performed.
            </summary>
            <returns>True if fuzzing should occur; false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.InefficientSizeOf(System.Object)">
            <summary>
            Determines the size of the object by serializing it.
            </summary>
            <param name="obj">The object to size.</param>
            <returns>The length of the byte stream after serializing.</returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzDataAttribute.InefficientRandomBytesWriter(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes random bytes to the given writer based on the size of the given object.
            The size is determined by serializing the object, so if you determine it faster, use that size.
            </summary>
            <param name="bw">The writer to write with.</param>
            <param name="obj">The object to write.</param>
        </member>
        <member name="P:ServerTestFramework.Utilities.FuzzDataAttribute.Properties">
            <summary>
            Gets the name/value pairs passed in to the attribute.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.FuzzDataAttribute.Actual">
            <summary>
            The fully typed <c>FuzzDataAttribute</c>.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.FuzzDataAttribute.Fields">
            <summary>
            Returns the FieldInfo from the fuzzFieldCache. If
            it doesn't exist, it will add it and then return it.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.FuzzDataAttribute.StaRandom">
            <summary>
            Gets the thread static random number generator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FuzzDataAttribute.CustomSerializer">
            <summary>
            A custom serializer writes an object to a stream using the provided writer.
            </summary>
            <param name="writer">The writer to write with.</param>
            <param name="obj">The object to write.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.FuzzArrayAttribute">
            <summary>
            Extends the <c>FuzzDataAttribute</c> class to give more specific options for arrays and strings.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzArrayAttribute.NullTermProbability">
            <summary>
            The chance that the null terminator status will be changed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzArrayAttribute.LengthProbability">
            <summary>
            The chance that the number of elements written will be changed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzArrayAttribute.ElementProbability">
            <summary>
            The probability that an individual element will be fuzzed when written.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzArrayAttribute.ElementFuzz">
            <summary>
            The fuzzer for individual elements of the array.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzArrayAttribute.FuzzWriteArray(System.IO.BinaryWriter,System.Object,System.Reflection.FieldInfo,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Writes an array or string to the given destination.
            </summary>
            <param name="bw">The destination to write to.</param>
            <param name="obj">The object to write.</param>
            <param name="fi">The FieldInfo for the field that the object came from.</param>
            <param name="encoding">The encoding for string-like objects.</param>
            <param name="isNullTerm">If true and this is a string-like object, it will be null-terminated.</param>
            <param name="totalSize">If positive, the minimum number of elements to write.</param>
            <returns>
            True if the object was fuzzed when writing; false if not.
            </returns>
            <remarks>
            The base of this class is used to determine whether the entire array is fuzzed.  For individual element
            fuzzing probability, see ElementProbability.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzArrayAttribute.SetElementFuzz(ServerTestFramework.Utilities.FuzzDataAttribute)">
            <summary>
            Sets the element fuzzer to a given value.
            </summary>
            <param name="elem_attr">The element fuzzer to use.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzArrayAttribute.InheritProperties(ServerTestFramework.Utilities.FuzzDataAttribute)">
            <summary>
            Inherits properties from its parent.
            </summary>
            <param name="fuzzAttr">The attribute to inherit from.</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.FuzzCharAttribute">
            <summary>
            Extends the <c>FuzzDataAttribute</c> class to give more specific options for chars.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzCharAttribute.CharacterEncoding">
            <summary>
            The name of the character encoding to use.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.SetEncodingByName(System.String)">
            <summary>
            Sets the character encoding to the specified type.
            </summary>
            <param name="encoding">The name of the encoding to use.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.SetEncodingByObject(System.Text.Encoding)">
            <summary>
            Sets the character encoding to the specified type.
            </summary>
            <param name="encoding">The encoding to use.</param>
        </member>
        <member name="F:ServerTestFramework.Utilities.FuzzCharAttribute.CharEnc">
            <summary>
            The character encoding to use.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.#ctor">
            <summary>
            Creates a default char fuzzer.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.#ctor(System.String)">
            <summary>
            Creates a char fuzzer using the specified encoding.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.#ctor(System.Text.Encoding)">
            <summary>
            Creates a char fuzzer using the specified encoding.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.ConstructorCommon">
            <summary>
            Every constructor should call this.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.StandardWrite(System.IO.BinaryWriter,System.Object)">
            <summary>
            Intercepts byte arrays and writes them, as the WireData writer does not handle them.
            Also properly encodes the char for writing.
            </summary>
            <param name="bw">The writer to write to.</param>
            <param name="obj">The object to write.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.RandomByteWrite(System.IO.BinaryWriter,System.Object)">
            <summary>
            Intercepts byte arrays and writes them, as the WireData writer does not handle them.
            </summary>
            <param name="bw">The writer to write to.</param>
            <param name="obj">The object to write.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FuzzCharAttribute.GetFuzzTypes">
            <summary>
            Returns an array containing the char type.
            </summary>
            <returns>An array containing the char type.</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.WireDataFuzzHelper">
            <summary>
            Utility class to allow WireData classes that override WriteStream to fuzz more easily.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.WireDataFuzzHelper._fc">
            <summary>
            The FieldCache of the given type.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzHelper.#ctor(System.Type)">
            <summary>
            Creates a WireDataFuzzHelper with the given type.
            </summary>
            <param name="type">The type to help with.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzHelper.Write(System.String,System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes the object using the FuzzDataAttribute associated with the field.
            This function assumes that [fieldName] returns true.
            </summary>
            <param name="fieldName">The field to write.</param>
            <param name="bw">The writer to write to.</param>
            <param name="obj">The object to write.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzHelper.CheckWrite(System.String,System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes the object using the FuzzDataAttribute associated with the field.
            This function first checks that [fieldName] returns true.
            </summary>
            <param name="fieldName">The field to write.</param>
            <param name="bw">The writer to write to.</param>
            <param name="obj">The object to write.</param>
            <returns>True if [fieldName] is true, which also means that the field was written; false otherwise.</returns>
        </member>
        <member name="P:ServerTestFramework.Utilities.WireDataFuzzHelper.Fuzz">
            <summary>
            Checks whether the given type has fuzzing turned on.
            If not you can follow the normal code path.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Utilities.WireDataFuzzHelper.Item(System.String)">
            <summary>
            Checks whether the field of the type has fuzzing turned on.
            This function assumes that Fuzz returns true, otherwise there would be no reason
            to have gotten this far.
            </summary>
            <param name="fieldName">The name of the field to check for fuzzing.</param>
            <returns>True if the field has fuzzing turned on; false if it does not.</returns>
        </member>
        <member name="T:ServerTestFramework.Utilities.XHttpListener">
            <summary>
            Summary description for XHttpListener.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.Continue">
            <summary>
            String constants
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.randGen">
            <summary>
            random number generator.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.PercentError">
            <summary>
            PercentError is the percentage time 500 bad request is returned with the proper xErrror 
            you can call SetXerror to change the default xerror returned.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.delay">
            <summary>
            delay is the minumun time the request will take before it returns 200 ok
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.maxCon">
            <summary>
            MAxcimun connection the listner can open. by default its infinity.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.IsRunning">
            <summary>
            Flag that indicates in which state is the listner 
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.port">
            <summary>
            Port that listener accepts on
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.sock">
            <summary>
            Listener socket
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.Handlers">
            <summary>
            Number of handlers
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListener.MaintainConnection">
            <summary>
            Keep TCP connection open (thread will never return)?
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="listenPort"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="listenPort"></param>
            <param name="delay"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="listenPort"></param>
            <param name="delay"></param>
            <param name="maxConn"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="listenPort"></param>
            <param name="delay"></param>
            <param name="maxConn"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.ParseHeaders(System.Byte[],System.Int32@,System.Int32@,System.String@)">
            <summary>
            Helper function to get ContentLength and other headers
            </summary>
            <param name="bytes"></param>
            <param name="endofheader"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.IncomingReqHandler(System.Object)">
            <summary>
            Call back method that parses http request and passes it to ProcessData
            </summary>
            <param name="stateInfo"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.ProcessData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Virtual function for processing content data
            </summary>
            <param name="ReqData"></param>
            <param name="ConIndex"></param>
            <param name="conLen"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[]@)">
            <summary>
            This is for processing requests whose reponse contains both header and body.
            </summary>
            <param name="ReqData"></param>
            <param name="ConIndex">the index in the buffere where the content starts</param>
            <param name="conLen">the lendth of the data</param>
            <param name="respBuff"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListener.ThreadBody">
            <summary>
            The main listner threasd
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.XHttpListenerIOCP">
            <summary>
            Summary description for Server.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.Continue">
            <summary>
            String constants
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.randGen">
            <summary>
            random number generator.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.PercentError">
            <summary>
            PercentError is the percentage time 500 bad request is returned with the proper xErrror 
            you can call SetXerror to change the default xerror returned.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.delay">
            <summary>
            delay is the minumun time the request will take before it returns 200 ok
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.maxCon">
            <summary>
            Maximum connections the listener can open. By default its infinity.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.IsRunning">
            <summary>
            Flag that indicates in which state is the listner 
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.port">
            <summary>
            Port that listener accepts on
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.sock">
            <summary>
            Listener socket
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.Handlers">
            <summary>
            Number of handlers
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.ShutDownEvent">
            <summary>
            Signaled when it's time to shut down
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.XHttpListenerIOCP.ConnectionAccepted">
            <summary>
            Let's the listener thread know it's time to call BeginAccept again
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListenerIOCP.ProcessData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Virtual function for processing content data
            </summary>
            <param name="ReqData"></param>
            <param name="ConIndex"></param>
            <param name="conLen"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListenerIOCP.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[]@)">
            <summary>
            This is for processing requests whose reponse contains both header and body.
            </summary>
            <param name="ReqData"></param>
            <param name="ConIndex">the index in the buffere where the content starts</param>
            <param name="conLen">the lendth of the data</param>
            <param name="respBuff"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Utilities.XHttpListenerIOCP.ThreadBody">
            <summary>
            The main listener thread
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.DBPoster.DBTable">
            <summary>
            Summary description for DBTable.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.BuildMasterTypeCache(System.Type)">
            <summary>
            Builds the internal structure to keep track of all the classes and namespaces
            that derive in some way from the baseClass you pass in. This structure is 
            later used to do list population and is private to the form.
            </summary>
            <param name="baseClass">The base class from which you want the derived types.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.PopulateNamespaceList">
            <summary>
            Uses the master cache member that was populated on form create
            looks through the master cache and fills in the pulldown menu with
            the list of appropriate namespaces and an extra item for ALL
            </summary>
            <param name="myForm"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.PopulateClassList(System.String)">
            <summary>
            Uses the master cache member to populate the checklistbox with
            the names of the classes that are covered under tha passed in
            namespace.
             
            If the namespace passed in it "All Namespaces" then it displays
            all of them.
            </summary>
            <param name="szNamespace"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.AddNewField(System.Windows.Forms.Panel,System.Reflection.FieldInfo,ServerTestFramework.Utilities.FuzzDataAttribute,System.Int32)">
            <summary>
            Helper function used to add a new default panel to the member lists. This will
            init all the pieces, and handle getting everything lined up.
            </summary>
            <param name="panel">Parent Panel</param>
            <param name="fi">Field info to be filled in.</param>
            <param name="fda">FuzzDataAttribute associated with that field.</param>
            <param name="yPos">Location in the Y direction to place the new panel.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.comboNamespaces_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles changes to the namespace pulldown box. This will automatically
            repopulate the class list box with the new classes within the selected
            namespace.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.checkedListBoxDerivedClasses_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Takes care of updating the main field panel when a new class is chosen. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.checkOverallFuzz_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Toggles the static fuzz boolean in the wiredata class to enable
            or disable fuzzing for everything.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.label2_Click(System.Object,System.EventArgs)">
            <summary>
            Brings up the open file dialog box that can be used to load a background 
            image for the form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.button1_Click(System.Object,System.EventArgs)">
            <summary>
            Loops through all of the current classes in the mastercache
            and dissables fuzzing on all of them without modifying the static
            fuzz field in WireData
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.button1_Click_1(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.button_FuzzToggle_Click(System.Object,System.EventArgs)">
            <summary>
            Toggle all Fuzzing for each field within the current class.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:ServerTestFramework.Utilities.WireDataFuzzForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.WireDataFuzzForm.FuzzAttribDisplay">
            <summary>
            Class used to display information about fuzzing controls 
            for a specified field. This handles all updating and will display all 
            custom attribute fields per field.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.FuzzAttribDisplay.check_CheckChange(System.Object,System.EventArgs)">
            <summary>
            Handles check box changes to make sure the correct controls are
            enabled and dissabled when a change is made.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.FuzzAttribDisplay.trackProbability_ProbabilityValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the slider for probability changes, this converts it to a string
            between 0 and 1
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ServerTestFramework.Utilities.WireDataFuzzForm.FuzzAttribDisplay.textProbablility_ProbabilityValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when focus to the text box for probablility is lost, this takes the number
            and converts it to a number between 0 and 100 and sets the slider to that value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ServerTestFramework.Utilities.FclFuzzer.Analyzer.EmailAnalyzer">
            <summary>
            This is only an example analyzer.
            You can add your own analyzer if needed
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer">
            <summary>
            Helper class that providing fuzz methods with FCL
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer._lock">
            <summary>
            Common lock object
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.fclServer">
            <summary>
            LocalServer object
            </summary>
        </member>
        <member name="F:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.sessionId">
            <summary>
            FCL Session ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.#ctor">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String@)">
            <summary>
            Fuzz a string
            </summary>
            <param name="identifier">The symbolic identifier for the string</param>
            <param name="data">The string to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.Byte[]@)">
            <summary>
            Fuzz a raw byte array
            </summary>
            <param name="identifier">The symbolic identifier for the byte array</param>
            <param name="data">The byte array to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.Byte@)">
            <summary>
            Fuzz a raw byte
            </summary>
            <param name="identifier">The symbolic identifier for the byte</param>
            <param name="data">The byte to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.Byte@)">
             <summary>
             Fuzz an char using the FCL
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.Int16@)">
             <summary>
             Fuzz an short using the FCL
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.UInt16@)">
             <summary>
             Fuzz an unsigned short using the FCL
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.UInt64@)">
             <summary>
             Fuzz an unsigned long using the FCL
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.Int64@)">
             <summary>
             Fuzz an  long using the FCL
            </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.FuzzArray(System.String,System.String,System.UInt64[]@)">
            <summary>
            Fuzz an array of unsigned Long integer
            </summary>
            <param name="restrictions">The restrictions string for the integer (see the Context Strings documentation for details)</param>
            <param name="identifier">The symbolic identifier for the integer array</param>
            <param name="data">The integer array to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.Int32@)">
            <summary>
            Fuzz a signed integer using the FCL
            </summary>
            <param name="restrictions">The restrictions string for the integer (see the Context Strings documentation for details)</param>
            <param name="identifier">The symbolic identifier for the integer</param>
            <param name="data">The integer to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.UInt32@)">
            <summary>
            Fuzz an unsigned integer using the FCL
            </summary>
            <param name="restrictions">The restrictions string for the integer (see the Context Strings documentation for details)</param>
            <param name="identifier">The symbolic identifier for the integer</param>
            <param name="data">The integer to be fuzzed</param>
        </member>
        <member name="M:ServerTestFramework.Utilities.FclFuzzer.FclFuzzer.Fuzz(System.String,System.String,System.Double@)">
            <summary>
            Fuzz an unsigned double using the FCL
            </summary>
            <param name="restrictions">The restrictions string for the integer (see the Context Strings documentation for details)</param>
            <param name="identifier">The symbolic identifier for the integer</param>
            <param name="data">The integer to be fuzzed</param>
        </member>
        <member name="T:ServerTestFramework.Utilities.FclFuzzer.Manipulations.EmailManipulation">
            <summary>
            This is only an example.
            You can add your own manipulation class if needed
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.BulkUserSet">
            
             Class to represent a set of bulk users. These users a represented as a base
            	ID and are gauranteed to have a few useful properties:
             
             1: PUIDs in the range Base + [0,n) offset where Base is the base offset of the set
            		and n is the count of users in the set.
             2: Web Puids in the range 0x0001ffffffffffff + BaseLow + [0,n] where BaseLow is the lo 32 bit
             	value of the PUID. This is done to gaurantee unique web IDs that are distiguishable from
            		normal user PUIDs.
             3: Gamertags where the first 2 bytes are the passed in prefix, and the last 13 bytes are a base
            		32 encoding of the PUID. This is done to allow username/puid calculation from the PUID/gamertag 
            		without database reads. Use the built-in methods this class for help in doing this.
            	
        </member>
        <member name="T:ServerTestFramework.Database.DatabaseException">
            <summary>
            Helper exception for database related errors
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlException)">
            <summary>
            Construct a new database exception describing all of the errors
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="ex">Sql exception object to be described</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Construct a new database exception for the given connection.
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.String)">
            <summary>
            Construct a new database exception.
            </summary>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="T:ServerTestFramework.Database.Events">
            <summary>
            This is a wrapper class for talking to the events database.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDatabase">
            <summary>
            A class defining database servers iwthin reporting
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.IReportingComponent">
            <summary>
            Interface for all servers or machines interacting with Reporting
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.IReportingComponent.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.IReportingComponent.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.IReportingComponent.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.IReportingComponent.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.IReportingComponent.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.IReportingComponent.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingDatabase.JobQueue">
            <summary>
            List of jobs to execute
            </summary>        
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingDatabase.JobThreads">
            <summary>
            Hashtable to store Reporting Job threads
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.CloseJobQueueThreads">
            <summary>
            Close any internal items. This must be called somewhere inside the destructor of derived classes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.RunJobs">
            <summary>
            Runs the queued jobs
            </summary>
            <returns>An array list with the return values with the associated ReportingJob Objects which contain the results of each job</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.RunJob(System.Object)">
            <summary>
            Sub-function to run each job in a separate Thread.
            </summary>
            <param name="JobIndex">Reporting Job to be run</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.GetCurrentJobStatus">
            <summary>
            Updates the status of the queued jobs. *Note that only jobs that have already been started will be updated*
            </summary>
            <returns>An array list of the currently queued jobs with their updated status</returns>>        
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDatabase.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingDatabase.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingDatabase.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingDatabase.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Database.FilterDB.m_ServerName">
            <summary>
            Summary description for FilterDBTables.
            TODO: Add in attributes to specify whether or not fields are strict/loose
            TODO: Add all tables into STFLive.Reporting.Tables
            TODO: Add comments
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.FilterDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.FilterDB.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.FilterDB.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.FilterDB.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Hasher.Hash(System.Object)">
            <summary>
            Attempt to determine the SQL data type based on the .Net data type. I think 
            the only things we partition on are BIGINT and VARCHAR, so this should catch 
            all of those. It may not work quite right in cases beyond that, so use it at 
            your own risk.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.NameList">
            <summary>
            Maintains a cache of valid names
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.GameConfigRow">
            <summary>
            Data structure returned from GetGameConfig()
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.LiveTitleConfigRow">
            <summary>
            Data structure returned from GetLiveTitleConfig()
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.StringServerString">
            <summary>
            Data structure describing an entry in the t_stringsvr_strings table
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.StringServerStrings">
            <summary>
            Collection of StringServerString objects
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Leaderboard">
            <summary>
            Class defining a leaderboard entry in the t_stats_leaderboards table
            and a competition template entry in the t_stats_competition_templates table.
            The IsCompetitionTemplate member will be set to true if the object defines an
            Xbox1 Competition Template, otherwise it will be false;
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Npdb">
            <summary>
            This is a wrapper class for talking to the NPDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.BlacklistMachine(System.UInt64,System.Boolean)">
            <summary>
            Xenon M1 work: t_blacklisted_machines table is moved from uodb to npdb
            </summary>
            <param name="puid"></param>
            <param name="isBlacklisted"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.BlacklistTitle(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Xenon M1 work: t_blacklisted_titles table is moved from uodb to npdb
            </summary>
            <param name="puid"></param>
            <param name="isBlacklisted"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.BlacklistUser(System.UInt64,System.Boolean)">
            <summary>
            Xenon M1 work: t_blacklisted_users table is moved from uodb to npdb
            </summary>
            <param name="puid"></param>
            <param name="isBlacklisted"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.BlacklistDigest(System.Byte[],System.Boolean)">
            <summary>
            Xenon M1 work: t_blacklisted_digests table is moved from uodb to npdb
            </summary>
            <param name="digest"></param>
            <param name="isBlacklisted"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.IsBlacklistedDigest(System.Byte[],System.Boolean)">
            <summary>
            Xenon M1 work: t_blacklisted_digests table is moved from uodb to npdb
            Determines if digest is blacklisted.
            </summary>
            <param name="digest"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetLiveTitleConfig(System.UInt32)">
            <summary>
            Gets the Live Title Config (LTC) data for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>A LiveTitleConfigRow object that will contain the Live Title Config data</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.SetMatchTitleDeleteDelay(System.UInt32,System.Int32)">
            <summary>
            Sets the delete delay in seconds for a particular Match title ID.
            Note: this method does NOT call xmgmt cmd to reload title IDs on Match servers.
            </summary>
            <param name="titleId"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.SetMatchTitleRevokeCrossPlatform(System.UInt32,System.Nullable{System.Int32})">
            <summary>
            Sets the delete delay in seconds for a particular Match title ID.
            Note: this method does NOT call xmgmt cmd to reload title IDs on Match servers.
            </summary>
            <param name="titleId"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetTitleStrings(System.UInt32)">
            <summary>
            Returns all title strings from the t_stringsvr_strings table for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of StringServerString objects representing each title string.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetStringsByID(System.UInt32)">
            <summary>
            Returns all strings in the t_stringsvr_strings table for a specified StringID
            </summary>
            <param name="stringID">ID of the strings to be returned</param>
            <returns>A collection of StringServerString objects representing each title string.</returns>
            <remarks>This method returns all strings for a specified StringID that are in t_stringsvr_strings
            without regard to the titleID assigned to the string
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetLeaderboards(System.UInt32)">
            <summary>
            Retrieves the leaderboard definitions for a specified Title ID
            </summary>
            <param name="titleId">Title Id</param>
            <returns>A collection of Leaderboard objects.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetCompetitionTemplates(System.UInt32)">
            <summary>
            Retrieves the Competition Template definitions for the specified Title Id
            </summary>
            <param name="titleId">Xbox1 Title Id</param>
            <returns>
            A collection of Leaderboard objects with the IsCompetitionTemplate member set to true.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetLeaderboardsOrTemplates(System.UInt32,System.Boolean)">
            <summary>
            Retrieves either leaderboard definitions or competition template definitions for
            the given title id.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="isTemplate">Flag indicating whether to retrieve leaderboards or competition templates</param>
            <returns>A collection of Leaderboard objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32)">
            <summary>
            Retrieves all interface buckets for a specified Title ID
            </summary>
            <param name="titleId">Title Id</param>
            <returns>A collection of InterfaceBucket objects.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32,System.String)">
            <summary>
            Retrieves interface buckets for a specific Title id in a specific environment.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String)">
            <summary>
            Retrieves all interface buckets for a specified environment
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String,System.String)">
            <summary>
            Retrieves interface buckets based on the environment name and interface
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <param name="interfaceName">Interface name (eg: "libsvr")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.Data.SqlClient.SqlCommand)">
            <summary>
            Private method that does the actual work to retrieve the interface buckets based on the given command.
            </summary>
            <param name="command">An SqlCommand object that defines a query for interface retrieval</param>
            <returns>
            If successful, a collection of InterfaceBucket objects. NULL if an error occurs or if the given
            command produced no results.
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.OLAPDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.OLAPDB.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.OLAPDB.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.OLAPDB.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Pcdb">
            <summary>
            Summary description for Pcdb.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleInformation(System.UInt32)">
            <summary>
            Retrieves title information from several tables in PCDB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A TitleInformation class that contains information about the title.
            If there is no title information for this title, null is returned.
            </returns>
            <remarks>
            This method pulls data directly from the t_titles and t_title_feature_data tables.
            It then calls the following methods to finish populating the fields:
                GetTitleVersions
                GetTitleRatings
                GetTitleGenres
                GetTitleCultureDetails
                GetAlternateTitleIds
                GetTitleTrustConstants
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleVersions(System.UInt32)">
            <summary>
            Retrieves title version information for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleVersion objects that represent the version chains for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleRatings(System.UInt32)">
            <summary>
            Retrieves title ratings for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleRating objects that represent the ratings for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleGenres(System.UInt32)">
            <summary>
            Retrieves genre information for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleGenre objects that represent the genres for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleCultureDetails(System.UInt32)">
            <summary>
            Retrieves the culture details for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleCultureDetail objects that represent the culture details for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetAlternateTitleIds(System.UInt32)">
            <summary>
            Retrieves the alternate title id data for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            An AlternateTitleId object that specified the alternate title id data for this title
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.Pcdb.GetTitleTrustConstants(System.UInt32,ServerTestFramework.Database.TitleTrustConstants@)">
            <summary>
            Gets the title trust constants for a title ID
            </summary>
            <param name="titleId"></param>
            <param name="TTC"></param>
            <returns>true if the retrieval was sucessful, false if the title id does not exist in the table</returns>
        </member>
        <member name="T:ServerTestFramework.Database.CPUIDList">
            <summary>
            Maintains a cache of valid puids
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.QueryDB">
            <summary>
            Wrapper for talking to QueryDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.ConnectToServer(System.String[])">
            <summary>
            Connects to QueryDB server taking an array
            Only connects to the first server in the array
            </summary>
            <param name="serverNames">Array of QueryDB server names</param>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.ConnectToServer(System.String)">
            <summary>
            Connects to the QueryDB Database
            </summary>
            <param name="serverName">Name of QueryDB server</param>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.Close">
            <summary>
            Closes the connection to QueryDB
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.ExecuteScalar(System.String)">
            <summary>
            Executes a SQL Query and returns the single scalar value
            </summary>
            <param name="sql">SQL Query</param>
            <returns>Value of Query</returns>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.IssueCommand(System.String)">
            <summary>
            Allows you to run a command against QueryDB
            </summary>
            <param name="sql">SQL command to execute</param>
            <returns>Number of rows affected.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.QueryDB.ReadData(System.String,System.Data.SqlClient.SqlDataReader@)">
            <summary>
            Allows you to pass a query to QueryDB and get a data reader back.
            </summary>
            <param name="sql">SQL Query</param>
            <param name="reader">Data returned from query</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.ConfirmStagingTables(System.String)">
            <summary>
            Confirm all staging tables exist
            </summary>
            <param name="szReplicationProvider">Replication Provider Name</param>
            <returns>void</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.DeleteStagingTables(System.String,System.DateTime)">
            <summary>
            Delete all staging tables if data is newer than dtWhen
            </summary>
            <param name="szReplicationProvider">Replication Provider Name</param>
            <returns>void</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingDB.DeleteFinalFactTables(System.Int32)">
            <summary>
            Delete all final fact tables if data is newer than iDate
            </summary>
            <returns>void</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingDB.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingDB.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingDB.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingArchiveDatabase.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Database.ReportingIIS">
            <summary>
            Reporting Common Code object to extend the ReportingService Proxy class
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.GetXMLReportingServerData(System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Submit a report request to the Reporting Web Service. 
            </summary>
            <param name="ReportPath">Full path of the report in the web server. Example: XBOX Live New Portal\Title Usage Report\Title Usage Summary</param>
            <param name="SavePath">Path of report export file</param>
            <param name="FileName">Name of report export file</param>
            <param name="ReportParameters">Name/Value Collection of report input parameters to submit to the server. 
            These input parameters can be found in the report RDL</param>
            <param name="ReportFormat">Report export format. Default format is XML</param>
            <returns>True if execution was successful</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.GetReportParameters(System.String)">
            <summary>
            Get report parameters from Service.
            </summary>
            <param name="ReportPath">Path to report</param>
            <returns>String of parameter names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.RunJobs">
            <summary>
            Runs the queued jobs
            </summary>
            <returns>An array list with the return values with the associated ReportingJob Objects which contain the results of each job</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.GetCurrentJobStatus">
            <summary>
            Updates the status of the queued jobs. *Note that only jobs that have already been started will be updated*
            </summary>
            <returns>An array list of the currently queued jobs with their updated status</returns>>        
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingIIS.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingIIS.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportingSSIS.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingSSIS.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingSSIS.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportingSSIS.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Database.ReportRealtimeDB">
            <summary>
            Reporting Realtime Database Object
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.RunDebugQuery">
            <summary>
            Runs a query against the database (all tables).  Returns data for small tables (less than 20 rows), returns counts for all other tables
            </summary>
            <returns>Query Results</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.RunDebugQuery(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Runs a query against the tables for this database using the data available in the reference objects
            </summary>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType)">
            <summary>
            Queues a job to be run using the default parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.QueueJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Queues a job to be run using the specified parameters for that job (specific to that job)
            Validates that this job can be run on this server
            </summary>
            <param name="jobType">Type of job to be run</param>
            <returns>Could job be queued</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.InjectSingleData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="row"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.InjectData(ServerTestFramework.STFLive.Reporting.ReportingDataLoader,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Inserts a certain data set and returns a reference object to that data set
            </summary>
            <param name="table"></param>
            <param name="reportingRefObjectContainer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.InjectSingleRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            Inserts a randomly generated reporting data type into that particular database, returns a reference object to that item.
            </summary>
            <param name="dataType"></param>
            <param name="refObjectContainer"></param>
            <returns>SQL results of inserting the data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.InjectRandomData(ServerTestFramework.STFLive.Reporting.ReportingDataType,System.Int64,ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer@)">
            <summary>
            Insters a set of randomly generated data into the database
            </summary>
            <param name="dataType">Type of data to insert</param>
            <param name="count">How many objects to insert</param>
            <param name="container">A reference object to this data</param>
            <returns>SQL results of inserting that data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.ListReplicationStreamsAndStatus">
            <summary>
            Collects information about the current replication status
            </summary>
            <returns>A string describing any streams present as well as their status</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Database.ReportRealtimeDB.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this database
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportRealtimeDB.DatabaseName">
            <summary>
            The SQL name of the database (note: NOT THE MACHINE NAME)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportRealtimeDB.ComponentType">
            <summary>
            What type server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Database.ReportRealtimeDB.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.StatsWS">
            <summary>
            Summary description for StatsWS.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.UodbTable">
            <summary>
            Represents an easy way to retrieve values from and modify tables in the UODB. 
            Intended to represent a single row.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.#ctor(System.String)">
            <summary>
            Constructor for a non-partitioned (mirrored) database table
            </summary>
            <param name="tableName">Name of the table, i.e. t_users</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.#ctor(System.String,System.String)">
            <summary>
            Constructor for a partitioned database table
            </summary>
            <param name="tableName">Name of the table, i.e. t_users</param>
            <param name="partitionedColumnName">Name of the column this table is partitioned on, i.e. bi_user_puid</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.SetProperty(System.String,System.Object)">
            <summary>
            Add or change a property and its value. A property is a column in the table.
            </summary>
            <param name="columnName">Name of property (column) to update</param>
            <param name="value">New value</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.SetConstraint(System.String,System.Object)">
            <summary>
            Add or change a constraint and its value. A constraint is a column in the
            table and is used in the "... WHERE constraints" part of the SQL clause.
            </summary>
            <param name="columnName">Name of constraint (column) to update</param>
            <param name="value">New value</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.GetProperty(System.String)">
            <summary>
            Retrieve a value for the column.
            </summary>
            <param name="columnName">Name of table's column</param>
            <returns>Data cell for row/column</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.GetSqlUpdateStatement">
            <summary>
            The SQL UPDATE statement for this dbtable
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.GetSqlSelectStatement">
            <summary>
            The SQL SELECT statement for this dbtable
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbTable.GetSqlDeleteStatement">
            <summary>
            The SQL DELETE statement for this dbtable
            </summary>
        </member>
        <member name="P:ServerTestFramework.Database.UodbTable.TableName">
            <summary>
            The name of the table
            </summary>
        </member>
        <member name="P:ServerTestFramework.Database.UodbTable.IsPartitioned">
            <summary>
            Is this a partitioned or a non-partitioned (mirrored) table?
            </summary>
        </member>
        <member name="P:ServerTestFramework.Database.UodbTable.PartitioningValue">
            <summary>
            Retrieves the value for the partitioned column from the constraints
            or properties. This is the value that needs to be hashed on.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.UodbWS">
            <summary>
            Interfaces with the UODB WebStore - taking into account partitioned tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.ExecuteScalarExpectingResult(System.String,System.Int32)">
            <summary>
            Run the sql, expecting a certain value.  Returns true if all returned 
            scalars match the expected result.  The query *must* expect an integer
            response, and is best used with a SELECT COUNT(*)... type of query.
            </summary>
            <param name="sql">The SQL query used</param>
            <param name="result">The expected value the query should return.</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.ExecuteSQLSelect(ServerTestFramework.Database.UodbTable)">
            <summary>
            Executes a SQL SELECT statement using the provided UodbTable object. Results 
            are stored in the dbtable.
            </summary>
            <param name="dbtable">UodbTable object to use. Must have 1 or more constraints 
            set. Expected to only return 1 row.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.ExecuteSQLUpdate(ServerTestFramework.Database.UodbTable)">
            <summary>
            Executes a SQL UPDATE statement using the provided UodbTable object.  
            </summary>
            <param name="dbtable">UodbTable object to use. Must have 1 or more constraints 
            set and 1 or more properties to update.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.ExecuteSQLDelete(ServerTestFramework.Database.UodbTable)">
            <summary>
            Executes a SQL DELETE statement using the provided UodbTable object.  
            </summary>
            <param name="dbtable">UodbTable object to use. Must have 1 or more constraints 
            set.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.DoesUserExist(System.UInt64,System.String@)">
             <summary>
             Searches for a given user
             </summary>
             <param name="Puid">PUID of user</param>
             <returns>PUID of user</returns>
             <remarks>
             Searches for a given user
            returns the puid of the user if it finds a match, otherwise 0
             
            The reason why it returns a puid instead of a bool is to make this function return code
            compatible with DoesUserExist(string)
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserIDFromGamerTag(System.String)">
            <summary>
            Do a direct gamertag to puid look up.
            This method used to hit t_users on all partitions. It should be hitting 
            t_user_names on the gamertag partition, since that's the point of the 
            table. You must hash gamerTag in lowercase form!
            </summary>
            <param name="_gamertag">gamertag</param>
            <returns>puid of gamertag</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetGamertag(System.UInt64)">
            <summary>
            Lookup the gamertag of a user puid
            </summary>
            <param name="userPuid">user's puid</param>
            <returns>Gamertag</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetCountryName(System.Int32)">
            <summary>
            Looks up a country entry in uodb.t_countries, returns vc_name
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetCountryID(System.String)">
            <summary>
            Lookup a country ID using it's friendly name.
            </summary>
            <param name="countryName">2 letter country code</param>
            <returns>Country ID</returns>faskfj;  
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetLanguageId(System.String)">
            <summary>
            Lookup the language ID used by the given locale
            </summary>
            <param name="localeCode">Locale string. IE: "en-US"</param>
            <returns>The Language ID used by this Live locale</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetOfferID(System.String)">
            <summary>
            Lookup a live billing offer ID from the SPS billing offer ID string.
            </summary>
            <param name="billingOfferID">SPS billing offer ID string</param>
            <returns>Live billing offer ID</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserInfo(System.UInt64,ServerTestFramework.Database.UserInfo@)">
            <summary>
            Returns user information
            </summary>
            <param name="userPuid">user's puid</param>
            <param name="user">[out] information about the user</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserInfo(System.UInt64)">
            <summary>
            Returns user information. Throws an exception on error
            </summary>
            <param name="userPuid">user's puid</param>
            <returns>information about the user</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserWebMapping(System.UInt64)">
            <summary>
            Returns user-web linking
            </summary>
            <param name="userPuid">user's puid</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserLicenses(System.UInt64,System.UInt64)">
            <summary>
            Retrieves a list of licenses for a user, a machine, or both.
            </summary>
            <param name="userPuid">PUID of the user. May be 0 to get all licenses for a machine.</param>
            <param name="machinePuid">PUID of the machine. May be 0 to get all licenses for a user.</param>
            <returns>A List of UserLicense objects.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserPassportUserPuid(System.UInt64)">
            <summary>
            Returns the passport puid associated with this user
            </summary>
            <param name="userPuid">user's puid</param>
            <returns>The user's passport puid</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserPassportOwnerPuid(System.UInt64)">
            <summary>
            Returns the passport puid associated with this user
            </summary>
            <param name="userPuid">user's puid</param>
            <returns>The user's passport puid</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserProperty(System.UInt64,System.String)">
            <summary>
            Get a single property as a string from the proper partition of UODB
            </summary>
            <param name="userPuid">user's puid</param>
            <param name="_property">property name</param>
            <returns>property value</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetUserProperty(System.UInt64,System.String,System.String)">
            <summary>
            Set a single property on a user in the property partition of UODB
            </summary>
            <param name="userPuid">user's puid</param>
            <param name="_property">property name</param>
            <param name="_newvalue">new property value</param>
            <returns>true if set was successful</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetUserAccountState(System.UInt64,ServerTestFramework.Database.AccountResetState,System.UInt32)">
            <summary>
            Set account management information in the proper partition of UODB
            </summary>
            <param name="_puid">user's puid</param>
            <param name="type">account management type</param>
            <param name="nDurationInDays">how long the account is being banned</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.ExpireUserAccountState(System.UInt64,ServerTestFramework.Database.AccountResetState)">
            <summary>
            Expires account management information in the proper partition of UODB
            </summary>
            <param name="_puid">user's puid</param>
            <param name="type">account management type to expire</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserPrivileges(System.UInt64,ServerTestFramework.LiveService.UserAccount.UserPrivileges@)">
            <summary>
            Only get the grant privileges
            </summary>
            <param name="userPuid"></param>
            <param name="privileges"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserPrivileges(System.UInt64,ServerTestFramework.LiveService.UserAccount.UserPrivileges@,ServerTestFramework.LiveService.UserAccount.UserPrivileges@)">
            <summary>
            Get both grant privileges and restricted privileges
            </summary>
            <param name="userPuid"></param>
            <param name="grantPrivileges"></param>
            <param name="restrictPrivileges"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetUserSubscriptionStatus(System.UInt64,ServerTestFramework.Database.SubscriptionStatus)">
            <summary>
            Sets a user in the UODB as being enabled, suspended (expired), or canceled (deprovisioned) without the SPS hit.
            </summary>
            <param name="userPuid">user's puid</param>
            <param name="_newStatus">new status</param>
            <returns>true if set was successful</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetQueuedUserInfo(System.UInt64,ServerTestFramework.Database.QueuedUserInfo@)">
            <summary>
            Returns information about a queued user
            </summary>
            <param name="_puid">User puid</param>
            <param name="user">[out] QueuedUserInfo object containing the user data</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetReservationInfo(System.String,ServerTestFramework.Database.ReservationInfo@)">
            <summary>
            Returns ReservationInfo (machine puid, expiration date) for a user
            </summary>
            <param name="gamerTag">The gamerTag that was reserved</param>
            <param name="RI">ReservationInfo object that gets filled</param>
            <returns>True if it find this user</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetReservationInfo(System.String,ServerTestFramework.Database.ReservationInfo)">
            <summary>
            Sets ReservationInfo (machine puid, expiration date) for a user
            </summary>
            <param name="gamerTag">The gamerTag that was reserved</param>
            <param name="RI">ReservationInfo object that gets entered into the UODB</param>
            <returns>True if it succeeds</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.PopulatePuidListFromNames(System.String,ServerTestFramework.Database.CPUIDList@)">
            <summary>
            Populates a puid cache with puids from t_user_names table.
            </summary>
            <param name="prefix"> Gamer tag prefix</param>
            <param name="pList"> Puid list</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.PopulatePuidList(System.String,ServerTestFramework.Database.CPUIDList@)">
            <summary>
            Populates a puid cache with puids from the database
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUsersAndOffersSubscriptionInstanceId(System.UInt64,System.UInt64)">
            <summary>
            Get the active subscription service instance id, but in this case get only the
            one whose offerId matches the one given.
            Get the subscription id for the given user and the given offerid.  This particular
            call, unlike the others, does not care if the subscription is active, expired,
            cancelled, etc.
            </summary>
            <param name="userPuid">User puid</param>
            <param name="offerId">Offer Id</param>
            <returns>Subscription service instance id</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUsersSubscriptionInstanceId(System.UInt64)">
            <summary>
            Get the active subscription service instance id.
            </summary>
            <param name="userPuid">User puid</param>
            <returns>Subscription service instance id</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUsersSubscriptionOfferId(System.UInt64)">
            <summary>
            Get the active subscription offer id.
            </summary>
            <param name="userPuid">User puid</param>
            <returns>Subscription offer id</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GrabBOIDs(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Return a list of all BOIDs that match the specified criteria
            Since BOIDs should be uniform across servers, we only verify the first server
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetTitleInformation(System.UInt32)">
            <summary>
            Retrieves title information from several tables in UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A TitleInformation class that contains information about the title.
            If there is no title information for this title, null is returned.
            </returns>
            <remarks>
            This method pulls data directly from the t_titles and t_title_feature_data tables.
            It then calls the following methods to finish populating the fields:
                GetAllTitleVersions
                GetTitleRatings
                GetTitleGenres
                GetTitleCultureDetails
                GetAlternateTitleIds
                GetTitleTrustConstants
            </remarks>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetAllTitleVersions(System.UInt32)">
            <summary>
            Retrieves title version information for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleVersion objects that represent the version chains for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetTitleRatings(System.UInt32)">
            <summary>
            Retrieves title ratings for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleRating objects that represent the ratings for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetTitleGenres(System.UInt32)">
            <summary>
            Retrieves genre information for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleGenre objects that represent the genres for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetAlternateTitleIds(System.UInt32)">
            <summary>
            Retrieves the alternate title id data for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            An AlternateTitleId object that specified the alternate title id data for this title
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.DeleteAllTitleUpdateInfo(System.UInt32,System.UInt32)">
            <summary>
            Deletes all title update information on a given titleid.
            Tables affected are t_title_versions, t_update_packages,
            and t_update_locations.
            Deletes all records of updates to a title.
            </summary>
            <param name="titleId">titleId to affect.</param>
            <param name="basever">base version to reset to.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.AddTitleVersion(System.UInt32,System.UInt32,System.Boolean,STF.common.protocol.ConsoleTypeEnum)">
            <summary>
            Adds a version chain for a specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="version">The version to add</param>
            <param name="fullUpdate">Flag indicating whether this is a full update or a beta update.</param>
            <param name="consoleType">A ConsoleType value specifying which console this version targets.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetTitleCultureDetails(System.UInt32)">
            <summary>
            Retrieves the culture details for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>
            A collection of TitleCultureDetail objects that represent the culture details for this title.
            </returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetTitleTrustConstants(System.UInt32,ServerTestFramework.Database.TitleTrustConstants@)">
            <summary>
            Gets the title trust constants for a title ID
            </summary>
            <param name="titleId"></param>
            <param name="TTC"></param>
            <returns>true if the retrieval was sucessful, false if the title id does not exist in the table</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetTitleTrustConstants(ServerTestFramework.Database.TitleTrustConstants)">
            <summary>
            Sets the title trust constants for a title ID.  
            If the title exists it updates the values, otherwise, it creates it and populatest the values.
            </summary>
            <param name="TTC"></param>
            <returns>true if the operation was successful, false if the create or update failed</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserTrustRatings(System.UInt64,System.UInt32,ServerTestFramework.Database.UserTrustRatings@)">
            <summary>
            Gets the user trust ratings for a title ID and Puid pair.
            </summary>
            <param name="puid"></param>
            <param name="titleId"></param>
            <param name="UTR"></param>
            <returns>true if retrieval was sucessful, false if record could not be found</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetUserTrustRatings(ServerTestFramework.Database.UserTrustRatings)">
            <summary>
            Sets the user trust rating for a title ID and Puid pair.
            </summary>
            <param name="puid"></param>
            <param name="titleId"></param>
            <param name="UTR"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUTCDate">
            <summary>
            Get the SQL server UTC Date
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetServices">
            <summary>
            Builds list of services and info about them from t_service and t_service_instances tables
            </summary>
            <returns>True if data found</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetUserTier(System.UInt64)">
            <summary>
            This function will return the tier to which the user currently has a subscription.
            </summary>
            <param name="userPuid">The user puid</param>
            <returns>The tier of the base subscription to which this user is subscribed</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.SetUserTier(System.UInt64,System.Byte)">
            <summary>
            This function will subscribe a user to a base subscription which matches the requested tier.
            </summary>
            <param name="userPuid">The user puid</param>
            <param name="tier">The requested tier.</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.UserHasLicense(System.UInt64,System.UInt64)">
            <summary>
            Checks to see if the user/offer combination has an entry in the dbo.t_user_licenses table
            </summary>
            <param name="userPuid"></param>
            <param name="offerId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetDmpPurchaseItemStatus(System.UInt64)">
            <summary>
            Get dmp PurchaseItem transaction status
            </summary>
            <param name="userPuid"></param>
            <returns>transaction status</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.UpdateDmpPurchaseItemAlternateUrl(System.UInt64,System.String)">
            <summary>
            Update new alternate url for dmp PurchaseItem transaction
            </summary>
            <param name="userPuid"></param>
            <param name="newUrl">new alternate url</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetDmpRewardStatus(System.UInt64)">
            <summary>
            Get dmp AddPromotionPoints transaction status
            </summary>
            <param name="userPuid"></param>
            <returns>transaction status</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.UpdateDmpRewardAlternateUrl(System.UInt64,System.String)">
            <summary>
            Update new alternate url for dmp AddPromotionPoints transaction
            </summary>
            <param name="userPuid"></param>
            <param name="newUrl">new alternate url</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.GetScsPurchaseItemStatus(System.UInt64)">
            <summary>
            Get scs PurchaseItem transaction status
            </summary>
            <param name="userPuid"></param>
            <returns>transaction status</returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.UpdateScsPurchaseItemAlternateUrl(System.UInt64,System.String)">
            <summary>
            Update new alternate url for scs PurchaseItem transaction
            </summary>
            <param name="userPuid"></param>
            <param name="newUrl">new alternate url</param>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.LoadFriends(System.UInt64)">
            <summary>
             Load all of the friend records for a given user. This is used to
             bulk load friend by private\server\presence\test\setupstress. And
             anyone else who might need to manually validate friend data in the 
             database
            </summary> 
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.IsOfferVisible(System.UInt64,System.UInt32,System.UInt32)">
            <summary>
            Returns true if Xbox1 offer is visible on the console
            </summary>
            <param name="expectedOfferId">OfferID we are looking for</param>
            <param name="countryId">Country ID of offer</param>
            <param name="titleId">TitleId for Offer</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Database.UodbWS.WaitForQueueRemoval(System.UInt64,System.Boolean)">
            <summary>
            Wait 10 sec for billing queue removal and optionally wait 60 sec for callback.  NOTE:This expects
            only one subscription row, and will be unable to reliably wait if there are more than one.
            </summary>
            <param name="userPuid">the user puid</param>
            <param name="waitForCallbackCompletion">if wait callback</param>
        </member>
        <member name="T:ServerTestFramework.Database.OfferType">
            <summary>
                Offer type enumeration. See CreateBulkUsers()
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.UserWebMappingList">
            <summary>
            Summary description for WebMapping.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Webdb">
            <summary>
            This is a wrapper class for talking to the WebDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetTitleInformation(System.UInt32)">
            <summary>
            Retrieves the title information from the WebDB, including localized title names.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>A WebdbTitleInformation object describing the title in WebDB.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetTitleNames(System.UInt32)">
            <summary>
            Retrieves all the localized title names for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>A collection of WebdbTitleName objects. Null if none exist.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetLeaderboards(System.UInt32)">
            <summary>
            Retrieves the leaderboard data for the specified title, including all localized names, raw attributes
            and formatted attributes.
            </summary>
            <param name="titleId">Title ID</param>
            <returns>A collection of WebdbLeaderboard objects. Null is none exist.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetLeaderboardNames(System.UInt32,System.Int32)">
            <summary>
            Retrieves the localized names for the specified title and leaderboard.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="leaderboardId">Leaderboard ID</param>
            <returns>A collection of WebdbLeaderboardName objects. Null if none exist.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetLeaderboardRawAttributes(System.UInt32,System.Int32)">
            <summary>
            Retrieves the raw attributes for the specified leaderboard
            </summary>
            <param name="titleId">Title ID</param>
            <param name="leaderboardId">Leaderboard ID</param>
            <returns>A collection of WebdbRawAttributes object. Null if none exist.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetLeaderboardFormattedAttributes(System.UInt32,System.Int32)">
            <summary>
            Retrieves the formatted attributes for the specified leaderboard, including the localized
            formatted attribute names.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="leaderboardId">Leaderboard ID</param>
            <returns>A collection of WebdbFormattedAttribute objects. Null if none exist.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Webdb.GetLeaderboardFormattedAttributeNames(System.UInt32,System.Int32,System.String)">
            <summary>
            Retrieves the localized names for a formatted attribute on the specified leaderboard.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="leaderboardId">Leaderboard ID</param>
            <param name="friendlyName">Friendly name of the formatted attribute</param>
            <returns>A collection of WebdbFormattedAttributeName objects. Null if none exist.</returns>
        </member>
        <member name="T:ServerTestFramework.Database.XbosWS">
            <summary>
            Derived from UodbWS, so all functions from UodbWS are also available here.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.XbosWS.AdjustAcquiredDateTime(System.Int32,System.UInt64,System.UInt64,System.String)">
            
             License
            
        </member>
        <member name="T:ServerTestFramework.Database.XbosWS.OfferInfo">
            Subscription-related UODB queries.
        </member>
        <member name="T:ServerTestFramework.Database.XMatch">
            <summary>
            Wrapper for talking to XMatch.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.ConnectToServer(System.String[])">
            <summary>
            Connects to XMatch server taking an array
            Only connects to the first server in the array
            </summary>
            <param name="serverNames">Array of XMatch server names</param>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.ConnectToServer(System.String)">
            <summary>
            Connects to the Xmatch Database
            </summary>
            <param name="serverName">Name of XMatch server</param>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.Close">
            <summary>
            Closes the connection to XMatch
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.ClearMatchConfiguration(System.UInt32)">
            <summary>
            Removes the match tables and procs for specified TitleID
            Reverses the changes that LiveMatch does to make it 'clean' for running LiveMatch again.
            There is a stored proc in NPDB that does the same thing p_match_title_delete
            Works for both Xbox and Xenon
            </summary>
            <param name="titleId">TitleID to remove match tables</param>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetMatchTables(System.UInt32)">
            <summary>
            Gets a list of match tables from the XMatch Db
            </summary>
            <param name="titleID">Title ID to retrieve matches</param>
            <returns>Comma separated list of names</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetXboxMatchTables(System.UInt32)">
            <summary>
            Gets a list of match tables from the XMatch Db
            </summary>
            <param name="titleID">Title ID to retrieve matches</param>
            <returns>Comma separated list of names</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetStoredProc(System.String)">
            <summary>
            Return a single stored procedure's text.  This can be used to re-create the stored
            procedure.
            </summary>
            <param name="sprocName">Name of the stored procedure whose text is to be returned.</param>
            <returns>Text of the stored procedure.  This begins with a CREATE, and can be used to
            re-create the procedure.  Replacing CREATE with ALTER allows modifications in-place.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetStoredProcs(System.UInt32)">
            <summary>
            Get a list of stored procedures in XMatch DB for Matches.
            </summary>
            <param name="titleID">Title of the matches to be returned</param>
            <returns>Comma separated string of match stored procs</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetXboxStoredProcs(System.UInt32)">
            <summary>
            Get a list of stored procedures in XMatch DB for Matches.
            </summary>
            <param name="titleID">Title of the matches to be returned</param>
            <returns>Comma separated string of match stored procs</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.GetTableColumns(System.String)">
            <summary>
            Get a list of column names from a specified table
            </summary>
            <param name="TableName">Table name to retrieve</param>
            <returns>Comma separated list of column names</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.ExecuteScalar(System.String)">
            <summary>
            Executes a SQL Query and returns the single scalar value
            </summary>
            <param name="sql">SQL Query</param>
            <returns>Value of Query</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.IssueCommand(System.String)">
            <summary>
            Allows you to run a command against XMatch
            </summary>
            <param name="sql">SQL command to execute</param>
            <returns>Number of rows affected.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.XMatch.ReadData(System.String,System.Data.SqlClient.SqlDataReader@)">
            <summary>
            Allows you to pass a query to XMatch and get a data reader back.
            </summary>
            <param name="sql">SQL Query</param>
            <param name="reader">Data returned from query</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Achievement.AchivementBase">
            <summary>
            Summary description for AchievementBase.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.PCBase">
            <summary>
            Summary description for Pcontrol.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Achievement.XRLClearAchievement">
            <summary>
            Summary description for XRLClearAchievement.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Achievement.XRLSyncAchievements">
            <summary>
            Summary description for XRLSyncAchievements.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.TestUSetting">
             <summary>
             Summary description for DBHelper.
             </summary>
            
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.TitleClearRequest">
            <summary>
            Summary description for XRLClearTitle.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.EnumTitlesRequest">
            <summary>
            Summary description for XRLEnumTitle.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.ReadSettingsRequest">
            <summary>
            Summary description for XRLReadSettings.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.XRLSyncAllRequest">
            <summary>
            Summary description for XRLSyncAll.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.SyncAllResponse">
            <summary>
            SyncSettingsResponse
            </summary>
            <param name="Version">Version</param>
            <param name="SettingsLen">Count of settings</param>
            <param name="Settings">User settings collection</param>
            <remarks>
            Returned in response to SyncSettingsRequest
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserSettings.SyncSettingsRequest">
            <summary>
            Summary description for XRLSyncSettings.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.AlertsListener">
            <summary>
            MSN Alerts backend simulator
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsListener.aRE">
            <summary>
            Auto reset event for triggering gets from hash table to wakeup
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsListener.ht">
            <summary>
            Hash table that stores alert data or alert counts
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsListener.isStress">
            <summary>
            Running in stress mode?  Depends on constructor used
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsListener.CounterCategory">
            <summary>
            Performance counter category
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.#ctor(System.Int32,ServerTestFramework.Database.CPUIDList)">
            <summary>
            Constructor for functional tests
            </summary>
            <param name="listenPort"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.#ctor(System.Int32,System.UInt64,System.UInt64)">
            <summary>
            Constructor for stress
            </summary>
            <param name="listenPort"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.GetAlertData(System.UInt64,ServerTestFramework.LiveService.Alerts.AlertsListener.AlertData@,System.TimeSpan)">
            <summary>
            Gets alert data stored in hashtable (functional tests)
            </summary>
            <param name="puid"></param>
            <param name="ad"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.PeekAlertData(System.UInt64,ServerTestFramework.LiveService.Alerts.AlertsListener.AlertData@,System.TimeSpan)">
            <summary>
            Peek at alert data stored in hashtable (functional tests)
            </summary>
            <param name="puid"></param>
            <param name="ad"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.ProcessData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Consumes incoming alerts soap requests and stores data based on test mode
            </summary>
            <param name="reqData"></param>
            <param name="index"></param>
            <param name="contentLen"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.Go">
            <summary>
            Start the listener
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsListener.Stop">
            <summary>
            Stop that closes socket so that thread abort exception will trigger
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.AlertsListener.AlertData">
            <summary>
            Functional tests store Alert Data in Hashtable
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.AlertsSQL">
            <summary>
            Access object for Alerts SQL databases xboxNSMain and xboxAlerts.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQL.c_instanceDB">
            <summary>
            Alerts databases
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQL.m_instanceConnection">
            <summary>
            Database connection instances
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQL.m_ServerName">
            <summary>
            Name of physical box that alerts databases reside on
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.Finalize">
            <summary>
            Destructor ensures that database connection is closed
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.FormatSubscriberId(System.UInt64)">
            <summary>
            Formats a subscriber id ulong into 0x########:0x########
            </summary>
            <param name="subscriberId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.ConnectToServer(System.String)">
            <summary>
            Open connections to Alerts databases
            </summary>
            <param name="_ServerName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.Close">
            <summary>
            Close connections to Alerts databases
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetProtocols(System.String[]@,System.String[]@,System.String[]@)">
            <summary>
            Stored procedure wrapper for NSGetProtocols
            </summary>
            <param name="protocolName"></param>
            <param name="className"></param>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertProtocol(System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSInsertProtocols
            </summary>
            <param name="protocolName"></param>
            <param name="className"></param>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSUpdateProtocol(System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSUpdateProtocol
            </summary>
            <param name="protocolName"></param>
            <param name="className"></param>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSDeleteProtocol(System.String)">
            <summary>
            Stored procedure wrapper for NSDeleteProtocol
            </summary>
            <param name="protocolName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetDeliveryChannels(System.String[]@,System.String[]@)">
            <summary>
            Stored procedure wrapper for NSGetDeliveryChannels
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="protocolName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertDeliveryChannel(System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSInsertDeliveryChannel
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="protocolName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSUpdateDeliveryChannel(System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSUpdateDeliveryChannel
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="protocolName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSDeleteDeliveryChannel(System.String)">
            <summary>
            Stored procedure wrapper for NSDeleteDeliveryChannel
            </summary>
            <param name="deliveryChannelName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetDeliveryChannelArguments(System.String,System.String[]@,System.String[]@)">
            <summary>
            Stored procedure wrapper for NSGetDeliveryChannelArguments
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="argumentName"></param>
            <param name="argumentValue"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.GetDeliveryChannelArgumentValue(System.String,System.String,System.String@)">
            <summary>
            Calls NSDeliveryChannelArguments store procedure and then retrieves the value for the named argument
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="argumentName"></param>
            <param name="argumentValue"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertDeliveryChannelArgument(System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSInsertDeliveryChannelArgument
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="argumentName"></param>
            <param name="argumentValue"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSUpdateDeliveryChannelArgument(System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSUpdateDeliveryChannelArgument
            </summary>
            <param name="deliveryChannelName"></param>
            <param name="argumentName"></param>
            <param name="argumentValue"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSDeleteDeliveryChannelArguments(System.String)">
            <summary>
            Stored procedure wrapper for NSDeleteDeliveryChannelArguments
            </summary>
            <param name="deliveryChannelName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetEvents(System.Int32[]@,System.String[]@,System.String[]@)">
            <summary>
            Stored procedure wrapper for NSGetEvents
            </summary>
            <param name="type"></param>
            <param name="locale"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetSubscribers(System.UInt64,System.Boolean@)">
            <summary>
            Stored procedure wrapper for NSGetSubscribers
            </summary>
            <param name="subscriberId"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertSubscriber(System.UInt64,System.Boolean)">
            <summary>
            Stored procedure wrapper for NSInsertSubscribers
            </summary>
            <param name="subscriberId"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSUpdateSubscriber(System.UInt64,System.Boolean)">
            <summary>
            Stored procedure wrapper for NSUpdateSubscriber
            </summary>
            <param name="subscriberId"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSDeleteSubscriber(System.UInt64)">
            <summary>
            Stored procedure wrapper for NSDeleteSubscriber
            </summary>
            <param name="subscriberId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSGetSubscriberDevices(System.UInt64,System.String[]@,System.String[]@,System.String[]@,System.String[]@)">
            <summary>
            Stored procedure wrapper for NSGetSubscriberDevices
            </summary>
            <param name="subscriberId"></param>
            <param name="deviceName"></param>
            <param name="deviceTypeName"></param>
            <param name="deviceAddress"></param>
            <param name="deliveryChannelName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertSubscriberDevice(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSInsertSubscriberDevice
            </summary>
            <param name="subscriberId"></param>
            <param name="deviceName"></param>
            <param name="deviceTypeName"></param>
            <param name="deliveryChannelName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSUpdateSubscriberDevice(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Stored procedure wrapper for NSUpdateSubscriberDevice
            </summary>
            <param name="subscriberId"></param>
            <param name="deviceName"></param>
            <param name="deviceTypeName"></param>
            <param name="deliveryChannelName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSDeleteSubscriberDevice(System.UInt64,System.String)">
            <summary>
            Stored procedure wrapper for NSDeleteSubscriberDevice
            </summary>
            <param name="subscriberId"></param>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertxLiveSubscriptionsSubscription(System.Boolean,System.UInt32,System.String,System.UInt64,System.String,System.String,System.UInt64,System.UInt64@)">
            <summary>
            Stored procedure wrapper for NSInsertxLiveSubscriptionsSubscription
            </summary>
            <param name="enabled"></param>
            <param name="type"></param>
            <param name="deviceName"></param>
            <param name="subscriberXUID"></param>
            <param name="subscriber"></param>
            <param name="subscriberLocale"></param>
            <param name="subscriberId"></param>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.NSInsertxContentSubscriptionsSubscription(System.Boolean,System.Int32,System.String,System.String,System.UInt64,System.UInt64@)">
            <summary>
            Stored procedure wrapper for NSInsertxContentSubscriptionsSubscription
            </summary>
            <param name="enabled"></param>
            <param name="type"></param>
            <param name="deviceName"></param>
            <param name="subscriberLocale"></param>
            <param name="subscriberId"></param>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.AddContentEvent(System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Adds a content event to the DB through batch system
            </summary>
            <param name="type"></param>
            <param name="locale"></param>
            <param name="message"></param>
            <param name="deliveryTime"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.AddTitleEvent(System.UInt32,System.String,System.String)">
            <summary>
            Adds a title event to the DB through batch system
            </summary>
            <param name="titleId"></param>
            <param name="locale"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.GetTitle(System.UInt32,System.String,System.String@)">
            <summary>
            Gets data for a title
            </summary>
            <param name="titleId"></param>
            <param name="titleLocale"></param>
            <param name="titleName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.SetTitle(System.UInt32,System.String,System.String)">
            <summary>
            Sets data for a title
            </summary>
            <param name="titleId"></param>
            <param name="titleLocale"></param>
            <param name="titleName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.DeleteTitle(System.UInt32)">
            <summary>
            Deletes data about a title
            </summary>
            <param name="titleId"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.DeleteSubscriberDevices(System.String)">
            <summary>
            Delete all subscriber devices that match deviceName
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.AlterNSCreatexNotificationsDistributorWorkItems(System.String)">
            <summary>
            Dynamically rewrites stored procedures that distributor uses to create work items with new delivery channel
            Specifically NSCreatexLiveNotificationsDistributorWorkItems and NSCreatexContentNotificationsDistributorWorkItems
            </summary>
            <param name="deliveryChannel"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.GetStoredProcedureText(System.Data.SqlClient.SqlConnection,System.String,System.String@)">
            <summary>
            Gets the text of a stored procedure
            </summary>
            <param name="conn"></param>
            <param name="sprocName"></param>
            <param name="sprocText"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.AlterNSCreatexNotificationsDistributorWorkItemsText(System.String@,System.String)">
            <summary>
            Helper method for updating NSCreatexContentNotificationsDistributorWorkItems
            </summary>
            <param name="sprocText"></param>
            <param name="deliveryChannel"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.ExecuteNonQuery(System.String)">
            <summary>
            Helper method for executing non queries
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQL.GetUTCDate">
            <summary>
            Get the SQL server UTC Date
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.AlertsSQLNS">
            <summary>
            Access object for Alerts SQLNS service
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQLNS.serviceName">
            <summary>
            Service name
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQLNS.m_serverName">
            <summary>
            Remote server name
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.AlertsSQLNS.m_sc">
            <summary>
            Service control object
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQLNS.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="serverName"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.AlertsSQLNS.Restart">
            <summary>
            Restart the service
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.XEvents">
            <summary>
            Wiredata for sending Alerts.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.XEvents.localClient">
            <summary>
            System.Net.Sockets.UdpClient override to expose socket's client 
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.XEvents.unicodeEnc">
            <summary>
            Used for unicode string conversions
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.XEvents.fDisconnectAfterTransmit">
            <summary>
            Controls whether the connection to the xevent service is dropped after each udp transmit
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Alerts.XEvents.titleId">
            <summary>
            Serialized WireData
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Finalize">
            <summary>
            Destructor ensures connectioned is dropped during garbage collection at least.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.UnInitialize">
            <summary>
            Call this when you are done with the object
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Connect(System.Net.IPEndPoint)">
            <summary>
            Connects to an endpoint or switches endpoints on the fly
            </summary>
            <param name="endPoint"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Disconnect">
            <summary>
            Disconnects from and endpoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Execute">
            <summary>
            Serialize data to wire with default STF XEvent server
            </summary>
            <returns>
            Success or Failure
            </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Execute(ServerTestFramework.LiveService.LiveServer)">
            <summary>
            Serialize data to wire
            </summary>
            <param name="sServer">
            LiveServer object to server target
            </param>
            <returns>
            Success or failure
            </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Alerts.XEvents.Execute(System.Net.IPEndPoint)">
            <summary>
            Serialize data to wire
            </summary>
            <param name="endPoint">
            IPEndPoint object to server target
            </param>
            <returns>
            Success or failure
            </returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Alerts.XEvents.Recipients">
            <summary>
            Accessor: sets recipients and zeros out length for re-serialization
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Alerts.XEvents.Data">
            <summary>
            Accessor: converts standard string into unicode; then stores it for serialization.  Zero's out length for re-serialization.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Alerts.XEvents.SenderGamertag">
            <summary>
            Accessor: sets gamertag and zeros out length for re-serialization
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.XEvents.Types">
            <summary>
            Alert Types
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Alerts.XEventsRecipients">
            <summary>
            Wiredata portion for recipients of alert
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.ArbSessionBase">
             <summary>
             This is a wrapper class that represents a shared arbitration session
             which you would use to
             </summary>
            
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.ArbitrationSession.AddMachine">
            <summary>
            Create a new machine participating in the session.
            </summary>
            <returns>Index of machine for later calls to AddUser</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.ArbitrationSession.AddUser(System.UInt32,System.UInt64,System.UInt64[])">
            <summary>
            Add a user playing on a machine by index.
            </summary>
            <param name="machine">Index of machine in session</param>
            <param name="userPuid">Unique ID of user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.ArbitrationSession.AddUser(System.UInt64)">
            <summary>
            Add a single user playing on their own machine.
            </summary>
            <param name="userPuid">The unique ID of the user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.ArbitrationSession.AddUser(System.UInt64,System.UInt64[])">
            <summary>
            Add a single user playing on their own machine.
            </summary>
            <param name="userPuid">The unique ID of the user</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.HandlerOptions">
            <summary>
            Summary description for HandlerOptions.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Arbitration.HandlerOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.HandlerOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Arbitration.HandlerOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XArbListener">
            <summary>
            XArbListener threads listen for stats or query posts back from Arbitration server.
            </summary>
            
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLDebugResult">
            <summary>
            Arbitration DebugResult request XRLPayload.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLDebugResultResponse">
            <summary>
            Arbitration DebugResult response wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.ArbitrationXboxInfo">
            <summary>
            Arbitration DebugResult response ArbitrationXboxInfo wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.ArbitrationXUIDAndTrust">
            <summary>
            Arbitration DebugResult response ArbitrationXUIDAndTrust wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.ArbitrationBundle">
            <summary>
            Arbitration DebugResult response ArbitrationBundle wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.ArbitrationSuspiciousInfo">
            <summary>
            Arbitration DebugResult response ArbitrationSuspiciousInfo wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLHealthARB">
            <summary>
            Summary description for XRLHealth.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLRegister">
            <summary>
            Arbitration Register request XRLPayload.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLRegisterResponse">
            <summary>
            Arbitration Register response wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.RegisteredXbox">
            <summary>
            Arbitration Register response RegisteredXbox wiredata 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.RegisteredUser">
            <summary>
            Arbitration Register repsonse RegisteredUser wiredata 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLReportResult">
            <summary>
            Arbitration ReportResult request XRLPayload.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.LostConnectivityInfo">
            <summary>
            Arbitration ReportResult request LostConnectivityInfo wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.SuspiciousInfo">
            <summary>
            Arbitration ReportResult request SuspiciousInfo wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.StatsBundle">
            <summary>
            Arbitration ReportResult request StatsBundle wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.TournamentBundle">
            <summary>
            Arbitration ReportResult request TournamentBundle wiredata
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Arbitration.XRLTimeExtend">
            <summary>
            Arbitration TimeExtend request XRLPayload.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.ActiveAuthException">
            <summary>
            Exceptions thrown by the ActiveAuthClient itself.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig">
            <summary>
            For handling configuration/settings for activeauth.
            Requires Npdb access.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.SetPolicyEntry(ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.PolicyEntry)">
            <summary>
            Updates or adds a policy entry to npdb for the module (t_activeauth_policies)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.SetPolicyEntry_SQL(ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.PolicyEntry)">
            <summary>
            Creates the SQL for updating/adding the policy entry.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.GetPolicyEntry(System.String)">
            <summary>
            Retrieves a policy entry from npdb, given the path that it applies to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.RemovePolicyEntry(System.String)">
            <summary>
            Removes a policy entry from npdb.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.AAModuleReload">
            <summary>
            Does an xmgmtc reload command on aamodule (to cause the policies to be reloaded)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.ActiveAuthHttpConfig.PolicyEntry">
            <summary>
            Represents an entry in npdb's t_activeauth_policies.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient">
            <summary>
            For making actual requests through the activeauth gateway.
            Can run from anywhere that has idcrl set up corectly.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient.CheckMinimalResponseHeaders(ServerTestFramework.Utilities.HttpClient.Response)">
            <summary>
            Validates that there are no unacceptable duplicate headers.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient.CheckWLIDHeader(ServerTestFramework.Utilities.HttpClient.Response)">
            <summary>
            Validates that a WWW-Authenticate: WLID1.0 header contains valid fields.
            Returns the parsed WLID fields.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient.ParseWLIDHeader(System.String)">
            <summary>
            WWW-Authenticate value to extract the WLID1.0 parameters
            example: WLID1.0 realm="WindowsLive", fault="0x00000000", policy="mbi", ver="4.0.1532.0"
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient.GetPageResponse(System.String)">
            <summary>
            Uses GET method to retrieve a page.  Gets a passport ticket and uses WLID1.0 auth if needed and able.
            </summary>
            <param name="uri">example: /somewhere/page.html</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ActiveAuthHttpClient.PostPageRequest(System.String,System.Byte[],System.String)">
            <summary>
            Uses POST to send data to and retrieve a page.  Gets a passport ticket and uses WLID1.0 auth if needed and able.
            </summary>
            <param name="uri">example: /something/greatness.php</param>
            <param name="content">The content to send (can be null)</param>
            <param name="contentType">The type of the content to send (can be null).  Example: text/html</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthClientBase.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Base constructor. Doesn't do much.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthClientBase.BuildXenonConsolePrincipal(System.Byte[],System.Byte[])">
            <summary>
            Builds gamertag (principal) for a machine based on the console id
            </summary>
            <param name="ConsoleId">Input 5-byte console id</param>
            <param name="Gamertag">Output 15 character gamertag for machine name</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AskdcClient.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            ASKDC constructor.  Signs on users and machine to get a combinedTgt.
            </summary>
            <param name="ctx">AuthContext state</param>
            <param name="ip">IP address of the ASKDC server. May be null.</param>
            <param name="manualSetup">If false, use default values. If true, user will set all values.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AskdcClient.Initialize(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Common constructor code to initialize various members and member of AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AskdcClient.SetDefaults(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Reset everything to valid default values. You should be able to sign in with 
            just these values.  Think of this as the most basic, simple, valid request possible.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AskdcClient.SignInAskdc">
            <summary>
             Sign in to the ASKDC server. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AskdcClient.AddToTicketTimeRemaining(System.Int32)">
            <summary>
            Adds time to the ticket expiration time. Currently in Testnet, tickets
            expire after 30 minutes (I believe), which makes stress testing difficult.
            Use this to artificially add more time to the ticket.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.AuthContext">
            <summary>
            This class holds all auth-related information and is passed around between the 
            various auth clients (xmacs, askdc, xkdc, sg). It is test-oriented, so a lot of 
            information is exposed. However, it should also be very simple to use for mainline 
            stuff. Each auth client has its own requirements for what fields need to be set 
            prior to signing in and what fields are set after signing in. Refer to the 
            IsSignedIn* properties for the post-signin fields, and refer to the SetDefaults() 
            function in each client for the pre-signin fields.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.#ctor(ServerTestFramework.LiveService.Auth.AuthContext.ClientTypes)">
            <summary>
            Construct an AuthContext with a specific client type
            </summary>
            <param name="type">What kind of client to simulate</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.#ctor">
            <summary>
            Construct an AuthContext as a Xenon client
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Byte[],System.Byte[])">
            <summary>
            Copy constructor for faking out the SG for improving stress test performance
            </summary>
            <param name="ctx"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.PassportAuthenticate">
            <summary>
            Get a ticket from Passport, needed for Panorama sign-ins.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.PassportAuthenticate(System.String,System.String)">
            <summary>
            Get a ticket from Passport for the given user and password.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.MakeUser(System.String)">
            <summary>
            Create a user object from a gamertag
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.MakeUser(System.String,System.Byte[])">
            <summary>
            Create a user object from a gamertag and user key
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.SetUser(System.String,System.Int32)">
            <summary>
            Set a user into 1 of 4 slots (think of controller ports) using default key of 
            all zeroes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.AuthContext.SetUser(ServerTestFramework.LiveService.UserAccount.XeUser,System.Int32)">
            <summary>
            Set a user based off of UACS' user account class. This should have a real 
            gamertag and key. Make sure the user has been created.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.LiveService.Auth.AuthUtils" -->
        <member name="M:ServerTestFramework.LiveService.Auth.AuthUtils.GetNewNonce">
            <summary>
            Get a new 8-byte nonce. Supposed to be super-duper unique and random. In reality, it comes
            kinda close.  We use 4 random bytes and 4 byte from the timer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SimpleUdpSG">
            <summary>
            When we key exchange with the SG, it sends back an ICMP Port Unreachable packet just before the real
            response. This causes an exception. This class will swallow that exception and attempt to recvfrom()
            again, to get the real reply.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SimpleUdpSG.RecvAsync(System.Byte[],ServerTestFramework.LiveService.Auth.SimpleUdpSG.RecvAsyncCallback,System.Object)">
            <summary>
            Asynchronously receives data from the socket.
            </summary>
            <param name="buffer">The buffer to fill with data. It is suggested to be 1500 bytes.</param>
            <param name="callback">The callback function.</param>
            <param name="state">The state object for use by the callback function.</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SimpleUdpSG.RecvAsyncCallback">
            <summary>
            The callback function for use with RecvAsync.
            </summary>
            <param name="state">The state object passed in to RecvAsync.</param>
            <param name="buffer">The buffer passed in to RecvAsync.</param>
            <param name="length">The amount of data that was read into the buffer.</param>
            <param name="endpoint">The location that the packet came from.</param>
            <param name="connection_reset">True if the connection was reset, false if not.</param>
            <param name="exc">The exception, if any, that was thrown by EndReceiveFrom.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values
            </summary>
            <param name="packet"></param>
            <param name="packetLength"></param>
            <param name="iterations">The number of random bytes to change</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.ChallengeManager">
            <summary>
            Aids in managing challenge/response and filter files on the SG server -- 
            configuring, enumerating, enabling, etc.
            NOT THREAD SAFE!
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PushChallenge(ServerTestFramework.LiveService.Auth.Challenge)">
            <summary>
            Prop a challenge to the SG and save it in our local store.
            </summary>
            <param name="chal">The challenge to prop.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PushChallenge(ServerTestFramework.LiveService.Auth.Challenge,System.Boolean)">
            <summary>
            Prop a challenge to the SG and save it in our local store.
            </summary>
            <param name="chal">The challenge to prop.</param>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopChallenge">
            <summary>
            Remove a challenge from the SG and our local store.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopChallenge(System.Boolean)">
            <summary>
            Remove a challenge from the SG and our local store.
            </summary>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopAllChallenges">
            <summary>
            Removes all challenges from the SG and our local store.  Reloads the SG after doing so.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopAllChallenges(System.Boolean)">
            <summary>
            Removes all challenges from the SG and our local store.  Conditionally reloads the SG after doing so.
            </summary>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PushFilter(ServerTestFramework.LiveService.Auth.Filter)">
            <summary>
            Prop an authblock filter to the SG and save it in our local store.
            </summary>
            <param name="filter">The filter to prop.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PushFilter(ServerTestFramework.LiveService.Auth.Filter,System.Boolean)">
            <summary>
            Prop an authblock filter to the SG and save it in our local store.
            </summary>
            <param name="filter">The filter to prop.</param>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopFilter">
            <summary>
            Remove an authblock filter from the SG and our local store.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopFilter(System.Boolean)">
            <summary>
            Remove an authblock filter from the SG and our local store.
            </summary>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopAllFilters">
            <summary>
            Removes all filters from the SG and our local store.  Reloads the SG after doing so.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PopAllFilters(System.Boolean)">
            <summary>
            Removes all filters from the SG and our local store.  Conditionally reloads the SG after doing so.
            </summary>
            <param name="reload">If true, reload the SG; if false, don't, call ReloadConfig to do so.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.IsConfigured(ServerTestFramework.LiveService.Auth.KeyExchangeSgToXbChallenge)">
            <summary>
            Verify whether a challenge received from the SG has been configured by us on 
            the SG.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PropChallenge(ServerTestFramework.LiveService.Auth.Challenge,System.Boolean)">
            <summary>
            Props the challenge and conditionally reloads the SG.
            </summary>
            <param name="chal">The challenge to prop.</param>
            <param name="reload">If true, reload the SG; if false, don't.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.RemoveSgScript(ServerTestFramework.LiveService.Auth.Challenge,System.Boolean)">
            <summary>
            Removes the challenge and conditionally reloads the SG.
            </summary>
            <param name="chal">The challenge to remove.</param>
            <param name="reload">If true, reload the SG; if false, don't.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.PropFilter(ServerTestFramework.LiveService.Auth.Filter,System.Boolean)">
            <summary>
            Props the filter and conditionally reloads the SG.
            </summary>
            <param name="filter">The filter to prop.</param>
            <param name="reload">If true, reload the SG; if false, don't.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.RemoveFilter(ServerTestFramework.LiveService.Auth.Filter,System.Boolean)">
            <summary>
            Removes the filter and conditionally reloads the SG.
            </summary>
            <param name="filter">The filter to remove.</param>
            <param name="reload">If true, reload the SG; if false, don't.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.ReloadConfig">
            <summary>
            Executes xmgmt command "reload_config" against all known SG servers
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.ReloadConfig(System.Int32)">
            <summary>
            Calls 'e :sg reload_config' on the SGs.
            </summary>
            <param name="timeoutInMS">
            The maximum amount of time to wait for the reload to finish.
            The actual maximum could be up to twice this value.
            </param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ChallengeManager.ReloadConfig(System.Int32,System.Boolean)">
            <summary>
            Calls 'e :sg reload_config' on the SGs.
            </summary>
            <param name="timeoutInMS">
            The maximum amount of time to wait for the reload to finish.
            The actual maximum could be up to twice this value.
            </param>
            <param name="waitForFinish">
            If true, waits for the asynchronous reload to finish; if false, returns immediately.
            </param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.Challenge">
            <summary>
            Base interface for challenge wrappers
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.Challenge_Lua">
            <summary>
            Wrapper class for new LUA based challenges
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.Challenge_Expr">
            <summary>
            Wrapper class for old-style byte-code expression language-based challenges
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ParamResponse.#ctor(System.Byte[])">
            <summary>
            Constructor for challenges received by the client that were sent by the SG in 
            the keyex reply.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.Filter">
            <summary>
            Implements a LUA filter for authblock on the SG. This LUA script will execute 
            every time a client signs in to the SG, and essentially returns true or false - is 
            the client allowed to sign on or not? It has access to the client's authdata in 
            order to make this decision.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.Filter.#ctor(ServerTestFramework.LiveService.Auth.Challenge_Lua)">
            <summary>
            Converts a Lua challenge to a Lua filter, for lazy people to get filters from config XML.
            </summary>
            <param name="chal_lua">The challenge that is really a filter on the inside.</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SgServerInfo">
            <summary>
            Represents information about an SG server. This includes the name, xmgmt ip (not 
            the datacenter ip in NPDB), and the network path to the SGCFG directory.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStoreGeneric.Add(System.Object)">
            <summary>
            Adds item to store
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStoreGeneric.Get">
            <summary>
            Gets item but leaves it in the store
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStoreGeneric.Pop">
            <summary>
            Gets item from store and removes it
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStore`1.Add(`0)">
            <summary>
            Adds item to store
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStore`1.Get">
            <summary>
            Gets item but leaves it in the store
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.KerbStore`1.Pop">
            <summary>
            Gets item from store and removes it
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XeTitleInfo.GetTitleInfo">
            <summary>
            Get TitleInfo struct, for backwards compatibility
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XeTitleInfo.SetTitleInfo(ServerTestFramework.LiveService.Auth.TitleInfo)">
            <summary>
            Sets members based on TitleInfo object, for backwards compatibility
            </summary>
            <param name="ti"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ServiceContextXe.GetXkdcResult">
            <summary>
            Helper function for compatibility
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.ServiceContextXbox.GetXkdcResult">
            <summary>
            Helper function for backwards compatibility
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.LSPException">
            <summary>
            Custom LSP exception so we can catch() more explicitly
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Auth.SgClient.bUseSgIpFromKDC">
            <summary>
            Use the SG IP address returned from the KDC or override it with our own, as specified in the
            stf.xml file?
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Auth.SgClient.bVerifyKeyEx">
            <summary>
            Should we verify the keyex reply?  If we don't, the keys won't be stored, which means we
            can't send any SecMsg packets... but on the other hand, it will be faster
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Auth.SgClient.bUseConnectionServices">
            <summary>
            Only applies to user key exchanges (machine-only logons don't count). Requires 
            the presence or signature service, otherwise SG will throw an event.  With this enabled,
            the SG will send update messages to presence on the datacenter side of things. It may
            do more stuff as well..
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Auth.SgClient.bUseRealXKDC">
            <summary>
            To get the TGS ticket, should we use the real XKDC or generate a fake ticket?
            TODO: port all tests that need the real KDC to set this to true
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            SG constructor.
            </summary>
            <param name="ctx">AuthContext state</param>
            <param name="ip">IP address of the SG server. May be null.</param>
            <param name="manualSetup">If false, use default values. If true, user will set all values.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.Initialize(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Common constructor code to intialize various members and member of AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SetDefaults(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Reset everything to valid default values. You should be able to sign in with 
            just these values.  Think of this as the most basic, simple, valid request possible.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.FakeSignInXkdc">
            <summary>
            If we aren't "signed in" to the XKDC, then we need to generate
            fake authdata and populate it with reasonable defaults.  You are
            free to do this before calling SignIn, as long as the ServiceContext
            is set, we will be "signed in" to the XKDC.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SignOutSG">
            <summary>
            Sign out of the SG.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SignInSG">
            <summary>
            Do the key exchange with the SG and store the keys. Sign in with KDC if necessary.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SimpleVerify">
            <summary>
            Quickly verify that the key exchange succeeded
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.BuildAP">
            <summary>
            Build the Kerberos AP portion of the key exchange request packet
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SetDefaultAuthdata(ServerTestFramework.LiveService.Auth.Authdata_Xbox2)">
            <summary>
            Construct reasonable authdata info for use when building fake TGS tickets.
            This is for the legacy Authdata version 2 format.
            </summary>
            <param name="ad"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.CheckPortAndSpi(ServerTestFramework.LiveService.Auth.XspPacket)">
            <summary>
            Verify the port we initiated the connection with is still being used
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspSendAdjustSize(System.Byte[],System.Int32)">
            <summary>
            Sends an encrypted XSP packet, but allows the caller to adjust the number of bytes sent.  Used only for 
            testing.
            </summary>
            <param name="message">A SecMsg* packet converted to a byte array</param>
            <param name="extraBytes">Extra bytes to send.  May be positive or negative.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspSend(ServerTestFramework.LiveService.Auth.SecMsgHeader)">
            <summary>
            Sends an encrypted SECMSG* XSP packet to the SG.
            </summary>
            <param name="msg">A SecMsg* packet.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspSend(System.Byte[])">
            <summary>
            Sends an encrypted SECMSG* XSP packet to the SG.
            </summary>
            <param name="msg">A SecMsg* packet.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspResend(ServerTestFramework.LiveService.Auth.XspPacket,System.Byte[])">
            <summary>
            Resends an XSP packet. All this really has to do is increment the sequence number
            and re-encrypt the packet. 
            </summary>
            <param name="xsp"></param>
            <param name="msgBytes"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspSendData(System.Byte[],System.UInt32,System.UInt16,System.UInt16)">
            <summary>
            Sends an encrypted XSP packet.  Used for sending data through the SG to a service.
            You should probably stick to XSP_TYPE_UDP_2 for now.
            </summary>
            <param name="message">A non-SecMsg* packet converted to a byte array.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.AnyRecv(System.Int32,System.Int32@)">
            <summary>
            Receives anything, useful for clearing out the incoming buffer without bothering to
            decrypt the packet or do anything with it.
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspRecv(System.Int32)">
            <summary>
            Receives an encrypted XSP packet from the SG.  
            </summary>
            <param name="timeout">Time out, in milliseconds, to wait for a reply.</param>
            <returns>The decrypted byte array, can be turned into a SecMsg* packet</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SecMsgRecv(System.Int32)">
            <summary>
            If you are expecting a SecMsg* packet back, use this shortcut function
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SecMsgRecv(System.Int32,System.Int16)">
            <summary>
            If you are expecting a specific SecMsg* packet back, use this shortcut function.
            This should guarantee you get your desired packet back while tossing out the other
            things.
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendPulse">
            <summary>
            Send a SECMSG_TYPE_PULSE packet
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendDataPulse">
            <summary>
            Send a SECMSG_TYPE_XBTOSG_PULSE data pulse packet with no data
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendDataPulseStateChange(System.UInt32)">
            <summary>
            Send a SECMSG_TYPE_XBTOSG_PULSE data pulse packet with a state change message attached
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendDataPulseStateChange(System.UInt32,System.UInt64)">
            <summary>
            Send a SECMSG_TYPE_XBTOSG_PULSE data pulse packet with a state change message attached
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendDataPulseTitleChange(System.UInt32)">
            <summary>
            Send a SECMSG_TYPE_XBTOSG_PULSE data pulse packet with a title change message attached
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendDelete">
            <summary>
            Send a SECMSG_TYPE_DELETE packet
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendQos">
            <summary>
            Send a pair of SECMSG_TYPE_XBTOSG_QOS_INIT packets, and return the result from the SG.
            </summary>
            <returns>QOS class encapsulating all QOS stuff</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.SendChangeUsers">
            <summary>
            Send a SECMSG_TYPE_CHANGE_USERS_REQ packet based on a new ServiceResult (from the XKDC)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SgClient.XspSendData(System.Byte[],System.Byte,ServerTestFramework.LiveService.Auth.SGFakeService.ActionType,ServerTestFramework.LiveService.Auth.SGFakeService.IServicePort)">
            <summary>
            Sends XSP packet through SG to our SGFakeService using a common UDP packet format.
            </summary>
            <param name="message"></param>
            <param name="?"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.SgClient.LastRTT">
            <summary>
            Returns the elapsed time, in seconds, of the last successful round trip.  This of course
            relies on using a call that both sends and receives a packet, otherwise this value will be
            negative or undefined.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.SgClient.SPI">
            <summary>
            SPI of this client
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.SgClient.ChallengeNonce">
            <summary>
            The asynchronous challenge nonce, used for correspondence with SG
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.SgClient.SGADDR">
            <summary>
            Return the SGADDR of this client, known only after we have signed-in to the SG
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            LSP constructor.
            </summary>
            <param name="ctx">AuthContext state</param>
            <param name="ip">IP address of the LSP server. May be null.</param>
            <param name="manualSetup">If false, use default values. If true, user will set all values.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.Initialize(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Common constructor code to intialize various members and member of AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.SetDefaults(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Reset everything to valid default values. You should be able to sign in with 
            just these values.  Think of this as the most basic, simple, valid request possible.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.SignOutLSP">
            <summary>
            Sign out of the LSPSG.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.SignInLSP">
            <summary>
            Do the key exchange with the LSPSG and store the keys.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.BuildTsAP">
            <summary>
            Build the Kerberos AP portion of the key exchange request packet
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LspClient.SimpleVerifyTs">
            <summary>
            Quickly verify that the key exchange succeeded
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.QOS">
            <summary>
            Embodies the Quality of Service (QoS) message/response to the Live service.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.QOS.#ctor(System.Boolean)">
            <summary>
            Creates a new QOS object with the specified value for UseLargePackets.
            </summary>
            <param name="useLargePackets">The value to set UseLargePackets to.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.QOS.ComputeClientQoS(System.Collections.Generic.List{ServerTestFramework.LiveService.Auth.QOS})">
            <summary>
            Computes the client QoS numbers from the given individual QoS tests.
            </summary>
            <param name="probes">The QoS tests to use.</param>
            <returns>A Results object that contains the same values that are computed on the client.</returns>
            <remarks>Adapted from \xenon\private\xtl\net\base\Ipqos.cpp::IpQosCliInfoCompute</remarks>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.QOS.ComputeClientBandwidth(System.Collections.Generic.List{ServerTestFramework.LiveService.Auth.QOS},System.Boolean)">
            <summary>
            Computes the client bandwidth from the given individual QoS tests.
            </summary>
            <param name="probes">The QoS tests to use.</param>
            <param name="downstream">True for the downstream bandwidth; false for the upstream.</param>
            <returns>The bits per second bandwidth value for the requested direction.</returns>
            <remarks>Adapted from \xenon\private\xtl\net\base\Ipqos.cpp::IpQosBandwidth</remarks>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.QOS.UseLargePackets">
            <summary>
            If true, large QoS packets will be sent to the SG; otherwise small ones.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.QOS.TimerMs">
            <summary>
            Return the current timer in milliseconds
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.QOS.Results">
            <summary>
            The results of a client QoS computation.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.QOS.QoSBucket">
            <summary>
            Used in ComputeClientBandwidth to 'bucketize' the sampled values.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.RawNic">
            <summary>
            Provides frame-level access to the NIC. Careful, it's tricky to use.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGException">
            <summary>
            Custom SG exception so we can catch() more explicitly
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGNoReplyException">
            <summary>
            Custom SG exception so we can catch() more explicitly
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGRetryException">
            <summary>
            Custom SG exception so we can catch() more explicitly
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacketFactory.Get(ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for receiving Xsp packets
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacketFactory.Get(ServerTestFramework.LiveService.Auth.SecMsgHeader,ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for any SecMsg type message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacketFactory.Get(System.Byte[],ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for any SecMsg type message. Use for funky messages.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacketFactory.Get(System.Byte[],System.UInt32,System.Int32,System.Int32,ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for sending any non-SecMsg type message. This will automatically build
            the extra bytes needed for the UDP_1, UDP_2, etc, header.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGFakeService">
             <summary>
             Acts like a fake service running behind the SG.  The SG tests will send data to this service,
             which much be configured in the SG. More details later on that. 
             
             <sample>
             Payload structure:
            
               Byte 1: action
               Byte 2: sequence number
               Remaining bytes are payload
            
             Put the following in an sgconfig.ini file that goes in ...\sgroot\sgcfg\.  This is a bare 
             minimum to make this work, the "real" XNetPerf tool needs more.
             
             sgconfig.ini:
                ; For XnetPerf
                ; aka SG throughput stress tool
            
                Service { Id 1129 Name XONLINE_SG_SITE_1_TEST_SERVICE }
            
                ; Service 5 (C# test only)
                Server { Id 334 Service XONLINE_SG_SITE_1_TEST_SERVICE Address { InterfaceId 1 Ip 10.20.201.254 Port 65421 } }
                
                ; Service 6
                Server { Id 337 Service XONLINE_SG_SITE_1_TEST_SERVICE Address { InterfaceId 1 Ip 10.20.201.254 Port 65417 } }
                
                ; Server for testing SG notifications (client state update, title change, and deadxbox)
                Server 
                { 
                    Id 1 
                    Service XONLINE_SG_SITE_1_TEST_SERVICE 
                    NotifyUpdateUrl "/update.ashx"
                    NotifyTitleChangeUrl "/titlechange.ashx"
                    NotifyDeleteUrl "/delete.ashx"
                    Address { InterfaceId 1 Ip 10.20.201.254 Port 65000 }
                }
             
             Replace the IP address with the address of the computer in the DMZ running SGFakeService. The example
             above is for the re-wired client 17. You'll need the FakeSGService running on that machine listening
             on port 65417.  The client should send to port 337.
             
             Also, the UODB must be configured so the KDC will authorize a user for service id 1129. Add
             rows to:
                 t_services
                 t_service_instances
             
             </sample>
             
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SGFakeService.#ctor(System.Net.IPEndPoint)">
            <summary>
            Constructor for use as SGINFO lookup only, don't care about listening on a port
            </summary>
            <param name="sgEPDatacenter">IP address of datacenter-facing NIC on the SG</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SGFakeService.#ctor(System.Int32)">
            <summary>
            Constructor for use as a throughput reflector
            </summary>
            <param name="localPort">Local port to listen on</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SGFakeService.#ctor">
            <summary>
            Default constructor, will listen on Service6 port (65417)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SGFakeService.Process">
            <summary>
            Called after Recv to handle the packet and take actions, if necessary
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Auth.NotificationListener.ProcessData(System.Byte[],System.Int32,System.Int32)" -->
        <member name="T:ServerTestFramework.LiveService.Auth.KC">
            <summary>
            Kerb Constants
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGC">
            <summary>
            SG Constants
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SendablePacket">
            <summary>
            Extend this class if your packet can be sent and received via a UDP socket.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SendablePacket.Check">
            <summary>
            Called just after receiving the bytes but before sending them to Wiredata. Override
            this as necessary to verify the received bytes are the expected ones. Generally, this
            can be done by looking at the first few bytes of the stream, if the packet specifies its
            type, or by looking at the stream length.
            </summary>
            <returns>true is this is the correct packet, false if we should try the Recv() again.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SendablePacket.Send(System.Net.IPEndPoint,ServerTestFramework.LiveService.Auth.SimpleUdpSG)">
            <summary>
            Send this packet on its way.
            </summary>
            <param name="remoteHost"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SendablePacket.RecvHelp(System.Int32,ServerTestFramework.LiveService.Auth.SimpleUdpSG,System.Int32)">
            <summary>
            Used internally for recursive receives, in order to throw away unexpected packets and 
            try again.
            </summary>
            <param name="timeoutInMs"></param>
            <param name="recvAttempts"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SendablePacket.Recv(System.Int32,ServerTestFramework.LiveService.Auth.SimpleUdpSG)">
            <summary>
            Wait for data to come in on this socket, then serialize the received bytes to this Wiredata
            object. It is assumed we are expecting exactly 1 type of packet to come back, so we'll retry
            up to a finite number of times if we get an unexpected packet type, as verified by Check().
            </summary>
            <param name="timeoutInMs"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SGPacket">
            <summary>
            All SG based packets will likely extend this, such as SECMSG*, SGMSG*, and KEYEX* messages.
            Of course, any packet that has Type and cbEnt fields at the beginning may extend it. Be sure
            to set these two fields before serializing into this class, since Check() will use these
            fields to verify the incoming byte stream.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.#ctor(ServerTestFramework.LiveService.Auth.SecReg)">
            <summary>
            Use this constructor for receiving Xsp packets
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.#ctor(ServerTestFramework.LiveService.Auth.SecMsgHeader,ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for any SecMsg type message
            </summary>
            <param name="msg"></param>
            <param name="keys"></param>
            <param name="SeqXmit"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.#ctor(System.Byte[],ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for any SecMsg type message. Use for funky messages.
            </summary>
            <param name="msg"></param>
            <param name="keys"></param>
            <param name="SeqXmit"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.#ctor(System.Byte[],System.UInt32,System.Int32,System.Int32,ServerTestFramework.LiveService.Auth.SecReg,System.UInt32)">
            <summary>
            Use this constructor for sending any non-SecMsg type message. This will automatically build
            the extra bytes needed for the UDP_1, UDP_2, etc, header.
            </summary>
            <param name="msgBytes"></param>
            <param name="xspType"></param>
            <param name="keys"></param>
            <param name="SeqXmit"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.Encrypt(System.Byte[])">
            <summary>
            Set payload and hashedTail members
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XspPacket.Decrypt">
            <summary>
            Sets secmsg and Sequence members
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SecMsgSgToXbChal.ChallengeFlagKeyexSafe(System.UInt32)">
            <summary>
            Returns whether or not the flags indicate that the challenge can be used
            for the key exchange challenge or not
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.LargeSupervisorChallenge.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Allows for easy conversion from the way the challenge is stored in the input
            packet to a handy SupervisorChallenge structure.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Auth.SiteInfo">
            <summary>
            Holds information about both SG and LSP sites
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SiteInfo.Init(System.String,System.String)">
            <summary>
            Finish doing common constructor things, cleaning up defaults, etc
            </summary>
            <param name="sitevip">VIP address for site; optional for SG, required for LSP</param>
            <param name="siteip">IP address for site; optional for SG, optional for LSP</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SiteInfo.BuildTSKey(System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)">
            <summary>
            Outputs an 8 byte TS session key, the same one that is advertised by the LSPSG
            to query.  
            </summary>
            <param name="siteKey">16 byte key site key of LSP server</param>
            <param name="ipBytes">IP address of LSP server</param>
            <returns>8 byte TS session key</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SiteInfoManager.Check">
            <summary>
            Lazy initialization, will do it upon first request
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.SiteInfoManager.AddDefaultSgSite">
            <summary>
            Add essential basic info about SG site1.. for the lazy..
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            XKDC constructor.  Signs on users and machine to get a ServiceResult.
            </summary>
            <param name="ctx">AuthContext state</param>
            <param name="ip">IP address of the XKDC server. May be null.</param>
            <param name="manualSetup">If false, use default values. If true, user will set all values.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.Initialize(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Common constructor code to intialize various members and member of AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SetDefaults(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Reset everything to valid default values. You should be able to sign in with 
            just these values.  Think of this as the most basic, simple, valid request possible.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SetRequest(System.UInt32[],System.Boolean)">
            <summary>
            Helper function for setting up a Xenon TGS request
            </summary>
            <param name="services">Array of service ids to request. May be null.</param>
            <param name="bAutoDiscoverServices">True for auto-discover of services, false if they are explicitly requested</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SetRequest(System.UInt32[])">
            <summary>
            Helper function for setting up a TGS request
            </summary>
            <param name="services">Array of service ids to request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SignInXkdc">
            <summary>
            Sign in to the XKDC server. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SignInXkdcXenon">
            <summary>
            Sign in Xenon-style
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XkdcClient.SignInXkdcXbox">
            <summary>
            Sign in Xbox-style
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.#ctor(ServerTestFramework.LiveService.Auth.AuthContext,ServerTestFramework.LiveService.Auth.ConsoleCertificate,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Xenon constructor, allows for custom console certificates to be used
            </summary>
            <param name="ctx">AuthContext state</param>
            <param name="cert">Your own custom ConsoleCertificate. May be null.</param>
            <param name="ip">IP address of the XMACS server. May be null.</param>
            <param name="manualSetup">If false, use default values. If true, user will set all values.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.Initialize(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Common constructor code to intialize various members and member of AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.SetDefaults(ServerTestFramework.LiveService.Auth.AuthContext)">
            <summary>
            Reset everything to valid default values. You should be able to sign in with 
            just these values.  Think of this as the most basic, simple, valid request possible.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.SetDefaults(ServerTestFramework.LiveService.Auth.XonlinepUser)">
            <summary>
            Set defaults for machine for Key, KerberosRealm, and Domain. 
            Does not set the gamertag since it depends on Xenon/Xbox.
            </summary>
            <param name="machine"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.SignInXmacs">
            <summary>
            Sign in to the XMACS server.  You should tweak the values in TitleInfo,
            machineUser, and consoleCert before calling this, if you want anything but 
            the default request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.SignInXmacsWithMachinePuid(System.UInt64)">
            <summary>
            Signs into the xmacs using a specific machine puid.
            </summary>
            <param name="machinePuid"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.SignInXmacsWithConsoleID(System.String)">
            <summary>
            Signs into the xmacs using a specific consoleID.
            </summary>
            <param name="machinePuid"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.BuildRequest">
            <summary>
             Builds up an XMACS request based on the ClientType of the 
             AuthContext
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.VerifyResponse">
            <summary>
             Verifies the integrity of the response of the XMACS.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.GenerateDevkitSerial">
            <summary>
            Generate Xbox (not Xenon) serial # for gamertag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Auth.XmacsClient.GenerateXenonPrincipal">
            <summary>
            Generate Xenon (not Xbox) principal for gamertag. This is an encoded version of the
            console id, which is a 5 byte array with a 4 bit checksum on the end. Thus the 
            principal is a bit tricky to generate correctly.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.XmacsClient.ConsoleId">
            <summary>
            Return the console id, which is really the gamertag
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Auth.XmacsClient.MachinePuid">
            <summary>
            Return the machine puid, which is only known after the account is created 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.ContentOfferLoader">
            <summary>
            this is a static utility class that loads content offers
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.ContentOfferLoader.UpdateOfferPolicyFlags(System.UInt64,System.UInt32)">
            <summary>
            Update/change the policy flags for an offer
            </summary>
            <param name="offerId"></param>
            <param name="policyFlags"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.ContentOfferLoader.IsAssociatedOfferExists(System.UInt32,System.UInt64)">
            
             Associated offers
            
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosGenre">
            <summary>
            Genre class to add some new genres to both Game and Media
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosTitle">
            <summary>
            Title class for Uodb loading purpose
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosOffer">
            <summary>
            Offer class for Uodb loading purpose
            Cannot guarantee that the offer id is unique in the title
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosContent">
            <summary>
            Content class for Uodb loading purpose
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosSubscription">
             <summary>
             Subscription class for loading as well as knowing the expected output of
             requests.  Subscriptions are non-content offers--similar but less complex.
             One day the two should inherit from each other.
            
             This code has NOT BEEN TESTED yet.  It is put on hold while other items take precedence.
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.ArgoUser">
            <summary>
            Argo user for music and video purchase
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeUser.AddPaymentInstrumentVisa">
            <summary>
            Facilitate the easy addition of a visa card to the user's account.
            </summary>
            <returns>Returns the PaymentInstrumentId returned from SCG</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeUser.AddPaymentInstrumentVisa(ServerTestFramework.LiveService.UserAccount.XRLXeAddPaymentInstrument@)">
            <summary>
            Facilitate the easy addition of a visa card to the user's account.
            </summary>
            <param name="request">Returns the request object in case the user needs the cc number/details</param>
            <returns>Returns the PaymentInstrumentId returned from SCG</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeUser.AddPaymentInstrumentVisa(System.String)">
            <summary>
            Facilitate the easy addition of a visa card with a specific credit card number to this
            user's account.  This allows the return of certain AVS codes returned by a bank emulator on
            the SCG side.
            </summary>
            <param name="request">Returns the request object in case the user needs the cc number/details</param>
            <returns>Returns the PaymentInstrumentId returned from SCG</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeUser.AddPaymentInstrumentDirectDebit">
            <summary>
            Facilitate the easy addition of a direct debit payment instrument to the user's account.
            </summary>
            <returns>Returns the PaymentInstrumentId returned from SCG</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeUser.GetPaymentInstruments">
            <summary>
            Returns all payment instruments associated with this account
            </summary>
            <returns>Returns an array of payment instrument types</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XbosUser">
            <summary>
            Xenon user used by Xbos
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLAutoUpdateReferral">
            <summary>
            Summary description for XRLOfferingDetails.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLContentAvailable">
            <summary>
            Summary description for XRLContentAvailable.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLContentReferral">
            <summary>
            Summary description for XRLOfferingDetails.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLOfferingCancel">
            <summary>
            using System;
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLOfferingDetails">
            <summary>
            Summary description for XRLOfferingDetails.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLOfferingDetailsNoUser">
            <summary>
            Summary description for XRLOfferingDetails.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLOfferingEnumerate">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLOfferingPurchase">
            <summary>
            using System;
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.XRLVerifyNickname">
            <summary>
            Summary description for XRLVerifyNickname.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Callback.ISvcProvider">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.ProvisionService(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginProvisionService(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndProvisionService(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.DeprovisionService(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginDeprovisionService(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndDeprovisionService(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EnableService(System.Int32,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginEnableService(System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndEnableService(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.DisableService(System.Int32,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginDisableService(System.Int32,System.Int32,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndDisableService(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.ValidateProvisioningData(System.Int32,System.Int32,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginValidateProvisioningData(System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndValidateProvisioningData(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.CheckProvisioningStatus(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.BeginCheckProvisioningStatus(System.Int32,System.Int32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Callback.ISvcProvider.EndCheckProvisioningStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Callback.SvcProviderWrapper">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Crux.CruxService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Crux.CruxService.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Crux.CruxService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGBase.GetCompiledVersion">
            <summary>
            Version shared by client and service to ensure compatability
            IMPORTANT: Increment this when making changes to client / service interaction
            </summary>
            <returns>FakeSG version number</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGBase.GetSingleton">
            <summary>
            Get the current FakeSG Service or Client object
            </summary>
            <returns>Instance of FakeSG Service or Client</returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.FakeSG.FakeSGBase.mmf">
            <summary>
            SPI Auth Data
            Uses Memory Mapped file to allow direct maniplation of slots
            by both Client and Service
            Format:  Header then a table of 0xFFFF slot entries for each local IP (interface)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGBase.SetUpMMF(System.Int32)">
            <summary>
            Sets up Shared Memory Mapped File
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGBase.GetMMFVersion">
            <summary>
            Gets version in user when MMF was created
            </summary>
            <returns>Version number in MMF header</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="testName">Name of test that will be connecting</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.IsServiceRunning">
            <summary>
            Checks if FakeSG Service is runnning.
            </summary>
            <returns>True if status equals Running</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.StartService">
            <summary>
            Start the FakeSG Service
            </summary>
            <returns>True if service is started</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.StopService">
            <summary>
            Stop the FakeSG Service
            </summary>
            <returns>True if service is stopped</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.IsServiceInstalled">
            <summary>
            Checks if FakeSG Service is installed
            </summary>
            <returns>"FakeSGService" is found in enumeration of installed services</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.InstallService">
            <summary>
            Installs the FakeSG Service
            </summary>
            <returns>Service copied and installed</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.UninstallService">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.CopyRequired(System.String)">
            <summary>
            Copies a required file to Service directory
            </summary>
            <param name="filename">Name of file to copy</param>
            <returns>true if copy succedes</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.CopyOptional(System.String)">
            <summary>
            Copies an optional file to Service directory
            </summary>
            <param name="filename">Name of file to copy</param>
            <returns>true if copy succedes or file is deleted from Service directory</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.InstallUtil(System.String,System.Boolean)">
            <summary>
            Use .NET instalutil to install or uninstall FakeSGservice
            </summary>
            <param name="fileName">Path of Service exe</param>
            <param name="install">True to install, False to uninstal</param>
            <returns>True if instalation succedes</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.InitRemoteControl">
            <summary>
            Sets up Remoting connection to Service
            </summary>
            <returns>Version Number compitled into FakeSG Service exe.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.ConnectToService">
            <summary>
            Tries to make sure correct version of FakeSG Service is running and connect to it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.GetSlot">
            <summary>
            Get a block of slot data ready to be loaded
            </summary>
            <returns>Fresh new SPI Auth data</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.PutSlot(ServerTestFramework.LiveService.FakeSG.CSGInfo@,System.Net.IPAddress)">
            <summary>
            Set a block of SPI Auth data to the Service to use
            </summary>
            <param name="slot">Loaded SPI Auth Data</param>
            <param name="srcIp">IP address of interface XRL request was sent out on</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.LoadSlot(ServerTestFramework.LiveService.FakeSG.CSGInfo@,System.UInt64)">
            <summary>
            Loads an SGInfo slot with the info stored in the service's
            xbox table.  This can be used to
            </summary>
            <param name="sgInfo">The slot to be loaded</param>
            <param name="xboxId">The machine ID of the xbox to use</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.AddXbox(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.Byte[],System.UInt64,ServerTestFramework.LiveService.FakeSG.CSGInfo.ClientType,System.UInt32)">
            <summary>
            Adds an xbox to the service's table.  Represents an xbox connecting to an SG.
            </summary>
            <param name="sgIp"></param>
            <param name="spi"></param>
            <param name="xboxId"></param>
            <param name="titleId"></param>
            <param name="titleVer"></param>
            <param name="titleRegion"></param>
            <param name="key"></param>
            <param name="clientVersion"></param>
            <param name="clientType"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.RemoveXbox(System.UInt64)">
            <summary>
            Removes an xbox to the service's table.  
            </summary>
            <param name="xboxId"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.DeadXbox(System.UInt64)">
            <summary>
            Disconnect the xbox in the fake sg and send the CSgMsgNotifyDelete for the removed
            xbox.
            </summary>
            <param name="xboxId"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.ClearXboxes">
            <summary>
            Clear the FakeSG of any knoledge of XBoxes. Propogate the clear to the presence server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetTitle(System.UInt64,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Modify an xbox in the service's table.  Represents an xbox changing titles.
            </summary>
            <param name="xboxId"></param>
            <param name="titleId"></param>
            <param name="titleVer"></param>
            <param name="titleRegion"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetAltTitle(System.UInt64,System.UInt32,System.Int32)">
            <summary>
            Modify an xbox in the service's table.  Sets a single Alt Title
            </summary>
            <param name="xboxId"></param>
            <param name="titleId"></param>
            <param name="pos"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetAltTitles(System.UInt64,System.UInt32[])">
            <summary>
            Modify an xbox in the service's table.  Sets full set of Alt Titles
            </summary>
            <param name="xboxId"></param>
            <param name="altTitleIds"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetKey(System.UInt64,System.Byte[])">
            <summary>
            Modify an xbox in the service's table.  Changes key
            </summary>
            <param name="xboxId"></param>
            <param name="key"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetUserState(System.UInt64,System.UInt64,System.UInt64,System.UInt32,System.Byte[],System.UInt16)">
            <summary>
            Update state in presence for a xbox with connected user.
            TitleId is opaque and contain XBOX 1 state or Xenon state but the length
            of titleData cannot exceed 256 bytes.
            </summary>
            <param name="xboxId"></param>
            <param name="userId"></param>
            <param name="matchId"></param>
            <param name="state"></param>
            <param name="titleId"></param>
            <param name="titleData"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetStateEndpoint(System.String)">
            <summary>
            Set the endpoint that the fake SG will use to send client state updates.
            Should be of the form IP:PORT
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.SetEnableStateBatching(System.Boolean,System.UInt32)">
            <summary>
            Set the endpoint that the fake SG will use to send client state updates.
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.AddUser(System.UInt64,System.UInt64,System.UInt32)">
            <summary>
            Modify an xbox in the service's table.  Represents a user being logged on.
            </summary>
            <param name="xboxId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.RemoveUser(System.UInt64,System.UInt64)">
            <summary>
            Modify an xbox in the service's table.  Represents a user being logged off.
            </summary>
            <param name="xboxId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.GetUserCount(System.UInt64)">
            <summary>
            Queries an xbox in the service's table.  Gets current number of users on xbox.
            </summary>
            <param name="xboxId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.FakeSGClient.ReadUserQValPacket(System.UInt64,System.UInt64,ServerTestFramework.LiveService.FakeSG.QValPacket@)">
            <summary>
            Queries an xbox in the service's table.  Gets current Qflags for a user.
            </summary>
            <param name="xboxId"></param>
            <param name="userId"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.FakeSG.QValPacket">
            <summary>
            A representation of the QVAL data that is delivered from notification
            to the SG and from the SG to the client. This class packages up the data
            and flags so that we can percolate the data from the wire up to the test
            infrastructure.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.FakeSG.QValPacket.DeliveryTime">
            <summary>
            File time when this qval was delivered
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.FakeSG.QValPacket.Push">
            <summary>
            Push flag set to indicate urgent data delivery
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.NewMessageId(System.UInt32)">
            <summary>
            The last 3 message IDs that arrived.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.NewMessageData(System.UInt32)">
            <summary>
            Data for the last 3 messages that arrived
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.DeletedMessageId(System.UInt32)">
            <summary>
            Last 3 messages deleted
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.Validate">
            <summary>
            Validate internal consistency of QVAL packet throw an exception
            if something does not match up.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.Copy(ServerTestFramework.LiveService.FakeSG.QValPacket)">
            <summary>
            Perform copy operation on data rather than object assignment.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.Clear">
            <summary>
            Clear the qval payload data.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.QValPacket.FirstMessageIdMatchingType(System.Byte)">
            <summary>
            Find the first matching message type in messaging qvals for provided type ID.
            If no appropriate message is found returns 0.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.Data">
            <summary>
            Set the qvals in the packet, copy them into an internal 
            buffer.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.QVal">
            <summary>
            Notification Queue Flags
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.QFlags">
            <summary>
            Indication of payload available in queue.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.InviteQVal">
            <summary>
            Low byte indicates positive existence
            of invite transient message, high 24 bits
            indicate the sequence number of the invite.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.InviteSequenceNum">
            <summary>
            Read invite sequence from invite qval.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.NewMessageSequenceNum">
            <summary>
            This value is the same for both msg data and id qvals
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.NewMessageDataQVal">
            <summary>
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.DeletedMessageQVal">
            <summary>
            Raw qval value for deleted message payload.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.FakeSG.QValPacket.DeletedMessageSequenceNum">
            <summary>
            Last sequence number for the delete message qval and associated payloads.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.FakeSG.CSGInfo.ChangeClientType(ServerTestFramework.LiveService.FakeSG.CSGInfo.ClientType)">
            <summary>
            Changes ClientType to the one needed because SetClientType only works once
                After machinePuid is newly generated, it's set permanently.
            </summary>
            <param name="type">Client Type Enum</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Feedback.FeedbackWS">
            <summary>
            Summary description for FeedbackSupport.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Feedback.XrlFeedback">
            <summary>
            Summary description for XrlFeedback.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Feedback.SubmitComplaintRequest">
            <summary>
            Summary description for xrlUserComplaint.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Feedback.SubmitReview">
            <summary>
            Summary description for XrlUserReview.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.FriendsCommon">
            <summary>
            Friends Common: high-level presence operation wrapper
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.#ctor">
            <summary>
            Default constructor, friends common creates its own UACSCommon.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.#ctor(ServerTestFramework.LiveService.UserAccount.UacsCommon)">
            <summary>
            Constructor, friends common uses given UACSCommon
            </summary>
            <param name="uacs">Provides access to high level uacs support</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateUser">
            <summary>
            Creates a new PNUser out of a newly createed UODB user
            </summary>
            <returns>New User</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateUser(System.Boolean)">
            <summary>
            Create a new xenon user in a online/offline state.
            <param name="alive">Alive new user</param>
            <returns>New User</returns>
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXboxUser(System.Boolean)">
            <summary>
            Create a xbox version user using the last released version of the XDK.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXboxUsers(System.UInt32,System.Boolean)">
            <summary>
            Create a block of users using the CreateXboxUser() method
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXenonUser(System.Boolean)">
            <summary>
            Create a xenon version user using the last released version of the XDK.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXenonUser(System.Boolean,System.UInt32)">
            <summary>
            Create a xenon version user using the last released version of the XDK.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXenonUsers(System.UInt32,System.Boolean)">
            <summary>
            Create a block of users using the CreateXenonUser() method
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreatePanoramaUser(System.Boolean)">
            <summary>
            Create a panorama version user using the last released version of the XDK.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreatePanoramaUser(System.Boolean,System.UInt32)">
            <summary>
            Create a panorama version user using the last released version of the XDK.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreatePanoramaUsers(System.UInt32,System.Boolean)">
            <summary>
            Create a block of users using the CreateXenonUser() method
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateUser(System.Boolean,System.UInt32,System.UInt64,System.Boolean)">
            <summary>
            Legacy.  Use ClientType.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateUser(System.Boolean,System.UInt32,System.UInt64,ServerTestFramework.LiveService.FakeSG.CSGInfo.ClientType)">
            <summary>
            Explicitly create a user in a known title, client version and using xenon/xbox authdataflags
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.ReleaseUsers(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Release a block of users see ReleaseUser(PNUser user)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.ReleaseUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
             <summary> 
             Release a user back the global shared user pool. Don't do this
             unless you know this user is clean for another test. This is mainly
             used a test case speed optimization or could be used during stress.
            
             In practice this is rarely neccessary.
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateLinkedUser">
            <summary>
            Creates a new PNUser out of a newly createed Web Linked UODB user
            </summary>
            <returns>New User</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateLinkedUser(System.Boolean)">
            <summary>
            Creates a new PNUser out of a newly createed Web Linked UODB user,
            and optionally logs that user on.
            </summary>
            <param name="logon">Log on (Alive) new user</param>
            <returns>New User</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LinkUser(ServerTestFramework.LiveService.UserAccount.Owner,System.UInt64,System.Byte[])">
            <summary>
            Link an account using the owner puid and owner object
            return the user puid (used for testing minor accounts).
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Alives a user into presence seting up a new PNXbox for the user to connect to the 
            FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Alives a user into presence seting up a new PNXbox for the user to connect to the 
            FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <param name="appearOffline">Set this flag to logon cloaked</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Alives a user into presence with a particular Tittle ID, seting up a new PNXbox for the user to 
            connect to the FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <param name="titleId">Title to log into</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.Boolean)">
            <summary>
            Alives a user into presence with a particular Tittle ID, seting up a new PNXbox for the user to 
            connect to the FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <param name="titleId">Title to log into</param>
            <param name="appearOffline">Set this flag to logon cloaked</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Alives a user into presence, optionally seting up a new PNXbox for the user 
            to connect to the FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <param name="xbox">Xbox to connect user through, null to create one</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogonUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNXbox,System.Boolean)">
            <summary>
            Alives a user into presence, optionally seting up a new PNXbox for the user 
            to connect to the FakeSG with.
            </summary>
            <param name="user">User to logon</param>
            <param name="xbox">Xbox to connect user through, null to create one</param>
            <param name="appearOffline">Set this flag to logon cloaked</param>
            <returns>Success Flavor of HR returned in alive reply msg</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.LogoffUser(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Disconnect the user on the xbox living in the fake sg (clears their user
            slot) and clear the user's internal presence state.
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.PrepUserPair(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean@,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean@)">
            <summary>
            Used to setup operations that require users to be logged on and stores their 
            initail state so it can be restored
            </summary>
            <param name="user1">First user</param>
            <param name="wasOffline1">Original logon state of first user</param>
            <param name="user2">Second user</param>
            <param name="wasOffline2">Original logon state of second user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.RestoreUserPair(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Used to cleanup after operations that required users to be logged on based on 
            their initail state
            </summary>
            <param name="user1">First user</param>
            <param name="wasOffline1">Original logon state of first user</param>
            <param name="user2">Second user</param>
            <param name="wasOffline2">Original logon state of second user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.RequestFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Asks someone who isn't already a buddy to be one or just verifies that the 
            request has been made
            </summary>
            <param name="requestor">User doing asking</param>
            <param name="requestee">User being asked</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.AcceptFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Verifies tht a buddy request can be accepted and does it
            </summary>
            <param name="requestee">User that been asked</param>
            <param name="requestor">User that did asking</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.RejectFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Verifies tht a buddy request can be rejected and does it
            </summary>
            <param name="requestee">User that been asked</param>
            <param name="requestor">User that did asking</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.RejectFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Verifies tht a buddy request can be rejected and does it
            </summary>
            <param name="requestee">User that been asked</param>
            <param name="requestor">User that did asking</param>
            <param name="never">Put them on never list?</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.MakeFriends(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Establish a one to many friend relationship
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.MakeFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Verifies, Finishes, or completes from the start the exstablishment of buddy 
            relationship for two users.
            </summary>
            <param name="requestor">User doing asking</param>
            <param name="requestee">User being asked</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.MakeFriendFast(System.UInt64,System.UInt64)">
            <summary>
            Makes 2 users friends of each other, given their puids.
            This version is much faster to execute than MakeFriend:
              It pokes directly at the uodb sproc rather than going through the normal process.
              No major verification is done.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.DeleteFriend(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Verifies or does the removal of a buddy relationship for two uesrs
            </summary>
            <param name="requestor">User doing asking</param>
            <param name="requestee">User being asked</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.AllocateUsers(System.UInt32)">
            <summary>
            Manually allocate users in the global PNUser queue using the bulk user allocator
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Presence.FriendsCommon.CreateXenonUsers(System.String,System.UInt32,System.Byte)" -->
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.UserChangeTitle(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt64,System.Boolean)">
            <summary>
             Legacy.  Use ClientType
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.FriendsCommon.UserChangeTitle(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt64,ServerTestFramework.LiveService.FakeSG.CSGInfo.ClientType)">
            <summary>
            High level title change function. Automatically changes title of the currently connected
            xbox on the user or intantiates a new xbox with the provided title information. 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAcceptBuddy">
            <summary>
            Accept a request to be someone's buddy
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg">
            <summary>
            Combines Msg data with properties needed to process requests
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.GetFDHttpHdr(ServerTestFramework.LiveService.FakeSG.CSGInfo@,System.Int64)">
            <summary>
            Makes an Http Header for this request, using cached version of everything
            but content length and auth data if the auth is HttpHdr.  If there is no 
            builder cached a new one is made based on current FD Service 
            </summary>
            <param name="lContentLength">Length of post data</param>
            <returns>hhtp header for FD request</returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.ClientVersion">
            <summary>
            Client version added to User Agent string if non-zero when http header is created
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.ServiceUrl">
            <summary>
            Service Url used to create http header
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.ServiceUA">
            <summary>
            Service User agent used in http header
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.Requestor">
            <summary>
            Source of request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.FDPort">
            <summary>
            FD Port to use when sending to FD 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.FDAuth">
            <summary>
            Auth Method to use when sending to FD
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg.FDService">
            <summary>
            FD Service to request, Loads Url, service ID, and UA (based on service ID)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAcceptBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User accepting the request</param>
            <param name="buddy">Buddy that made the request</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAcceptBuddyMsgData">
            <summary>
            Message data specific to Accept buddy request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgData">
            <summary>
            Base class for specific Pres and Noti message data.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAddAffiliates">
            <summary>
            Attempt to add the given person to the sender's buddy list, either by the
            person's ID or name. Either Buddy ID or Nmae size must be zero.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAddAffiliatesMsgData">
            <summary>
            Message data specific to AddAffiliates request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAddBuddy">
            <summary>
            Attempt to add the given person to the sender's buddy list, either by the
            person's ID or name. Either Buddy ID or Nmae size must be zero.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor, defaults to old style add, by PUID
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddy">User being asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Constructor, defaults to old style add 
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddy">User being asked to be buddies</param>
            <param name="byName">Ask using buddy name instead of PUID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Constructor, allows flags and details for add2, defaults to add by PUID
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddy">User being asked to be buddies</param>
            <param name="flags">Message flags</param>
            <param name="details">Message details</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,ServerTestFramework.LiveService.Notification.MsgDetails,System.Boolean)">
            <summary>
            Constructor, allows flags and details for add2, defaults to add by PUID
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddy">User being asked to be buddies</param>
            <param name="flags">Message flags</param>
            <param name="details">Message details</param>
            <param name="byName">Ask using buddy name instead of PUID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.String)">
            <summary>
            Constructor, buddyId or buddyName can be specified. Leave
            the either of them blank to change the behavior (add by name, add by id)
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddyId">User being asked to be buddies</param>
            <param name="buddyName">User being asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAddBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.String,System.UInt32,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Constructor, allows flags and details for add2, buddyId or buddyName can be specified. Leave
            the either of them blank to change the behavior (add by name, add by id)
            </summary>
            <param name="user">User asking to be buddies</param>
            <param name="buddyId">User being asked to be buddies</param>
            <param name="buddyName">User being asked to be buddies</param>
            <param name="flags">Message flags</param>
            <param name="details">Message details</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAddBuddyMsgData">
            <summary>
            Message data specific to Add buddy request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAddBuddyMsgData2">
            <summary>
            Message data specific to Add buddy 2 request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAlive">
            <summary>
            The pre aftershock way to establish a user's Presence in the system. 
            Translated to P_ALIVE_INTERNAL_MSG by the Front Door. Old unused fields were 
            kept for client compatability, but they've never actually been relied upon
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAlive.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User being logged in</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAliveMsgData">
            <summary>
            Message data specific to Alive request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAliveReplyMsgData">
            <summary>
            Message data specific to all Alive replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.BuddyData">
            <summary>
            Buddy data included in Alive replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAlive2">
            <summary>
            The post aftershock way to establish a user's Presence in the system. 
            Translated to P_ALIVE_INTERNAL_MSG by the Front Door. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAlive2.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User being logged in</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAlive2MsgData">
            <summary>
            Message data specific to Alive_2 request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgAliveInternal">
            <summary>
            Establishes the user's Presence in the system.  This version of alive only goes from 
            FD to INH. FD maps what it can from client alives and adds SG session data such as 
            alternate title ID's and client winsockx enpoint info.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgAliveInternal.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User being logged in</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PAliveInternalMsgData">
            <summary>
            Message data specific to AliveInternal request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgBlockVoice">
            <summary>
            Add a user to my block (mute) list
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgBlockVoice.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User making request</param>
            <param name="block">User being blocked</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PBlockVoiceMsgData">
            <summary>
            Message data specific to Block voice request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgCancelInvite">
            <summary>
            Cancel invitaion of 1 or more users to a particular session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCancelInvite.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User canceling invitation</param>
            <param name="buddies">Array of buddies getting uninvited</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCancelInviteMsgData">
            <summary>
            Message data specific to Cancel invite request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgCheckTitleMessages">
            <summary>
            Request a dump of friend status information for a specified user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCheckTitleMessages.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants friend status</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCheckTitleMessagesMsgData">
            <summary>
            Message data specific to Web Friends request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCheckTitleMessagesReplyMsgData">
            <summary>
            Message data specific to Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgCreateTeam">
            <summary>
            Create a new team
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCreateTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Constructor, current logged on title
            </summary>
            <param name="user">User doing the creating</param>
            <param name="team">Team being created</param>
            <param name="creator">TeamMember doing the creating</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCreateTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Constructor, specific (alt) title
            </summary>
            <param name="user">User doing the creating</param>
            <param name="titleId">Title (perhaps alt title) creating team for</param>
            <param name="team">Team being created</param>
            <param name="creator">TeamMember doing the creating</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCreateTeamMsgData">
            <summary>
            Message data specific to Create Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCreateTeamReplyMsgData">
            <summary>
            Message data specific to Create Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgCreateTeamXe">
            <summary>
            Create a new team
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCreateTeamXe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Constructor, current logged on title
            </summary>
            <param name="user">User doing the creating</param>
            <param name="team">Team being created</param>
            <param name="creator">TeamMember doing the creating</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgCreateTeamXe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Constructor, specific (alt) title
            </summary>
            <param name="user">User doing the creating</param>
            <param name="titleId">Title (perhaps alt title) creating team for</param>
            <param name="team">Team being created</param>
            <param name="creator">TeamMember doing the creating</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCreateTeamXeMsgData">
            <summary>
            Message data specific to Create Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PCreateTeamXeReplyMsgData">
            <summary>
            Message data specific to Create Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgDeleteBuddy">
            <summary>
            Delete a buddy from my buddy list
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgDeleteBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User deleting the buddy</param>
            <param name="buddy">Buddy being deleted</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PDeleteBuddyMsgData">
            <summary>
            Message data specific to Delete buddy request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgDeleteTeam">
            <summary>
            Delete a team
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgDeleteTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team)">
            <summary>
            Constructor
            </summary>
            <param name="user">User deleting team</param>
            <param name="team">Team being deleted</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgDeleteTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt64)">
            <summary>
            Constructor
            </summary>
            <param name="user">User deleting team</param>
            <param name="titleId">Title team belongs too</param>
            <param name="teamId">Id of team being deleted</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PDeleteTeamMsgData">
            <summary>
            Message data specific to Delete Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PDeleteTeamReplyMsgData">
            <summary>
            Message data specific to Delete Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgFindUser">
            <summary>
            Allows update of title specific data stored by Presence for a particular user. 
            Title initiates immediate update all the way to server. Because of this and the 
            potential for misuse this message has been phased out for new titles.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgFindUser.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's data is being updated</param>
            <param name="nickname">new nickname data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgFindUsers.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64[],System.String[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's data is being updated</param>
            <param name="nickname">new nickname data</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PFindUserMsgData">
            <summary>
            Message data specific to FindUser request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PFindUserReplyMsgData">
            <summary>
            Message data specific to FindUser response
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PFindUsersMsgData">
            <summary>
            Message data specific to FindUsers request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PFindUsersReplyMsgData">
            <summary>
            Message data specific to FindUsers response
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgGetFriendsList">
            <summary>
            Request a dump of friend status information for a specified user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgGetFriendsList.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants friend status</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetFriendsListMsgData">
            <summary>
            Message data specific to Web Friends request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetFriendsListReplyMsgData">
            <summary>
            Message data specific to Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.GetFriendsListData">
            <summary>
            Online friend data included in Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgGetPresenceInfo">
            <summary>
            Request a dump of friend status information for a specified user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgGetPresenceInfo.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants friend status</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetPresenceInfoMsgData">
            <summary>
            Message data specific to Web Friends request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPresenceInfoReplyMsgData">
            <summary>
            Message data specific to Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PresenceInfo">
            <summary>
            Online friend data included in Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgGetTeamTicket">
            <summary>
            Join a team that user has been recruited to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgGetTeamTicket.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">User asking for their team ticket</param>
            <param name="titleId">Title (perhaps alt title) getting ticket for</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetTeamTicketMsgData">
            <summary>
            Message data specific to Get Team Ticket request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetTeamTicketReplyMsgData">
            <summary>
            Message data specific to Get Team Ticket replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgInvalidateUser">
            <summary>
            Allows update of title specific data stored by Presence for a particular user. 
            Title initiates immediate update all the way to server. Because of this and the 
            potential for misuse this message has been phased out for new titles.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgInvalidateUser.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's data is being updated</param>
            <param name="nickname">new nickname data</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PInvalidateUserMsgData">
            <summary>
            Message data specific to InvalidateUser request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgInvite">
            <summary>
            Invite 1 or more users to a title session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgInvite.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User sending the invitaion</param>
            <param name="buddies">Array of buddies being invited</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PInviteMsgData">
            <summary>
            Message data specific to Invite request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgInvite2">
            <summary>
            Invite 1 or more users to a session, new version that supports messaging and team
            and competition invitations
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PInvite2MsgData">
            <summary>
            Message data specific to Invite 2 request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgInviteAnswer">
            <summary>
            Single user answers an invitaion to a particular session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgInviteAnswer.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="user">User responding to the invitation</param>
            <param name="host">Session host that made the invitaion</param>
            <param name="accept">Is invitaion accepted</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgInviteAnswer.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="user">User responding to the invitation</param>
            <param name="host">Session host that made the invitaion</param>
            <param name="reply">Reply code for yes, no, or never</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PInviteAnswerMsgData">
            <summary>
            Message data specific to Invite Answer request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgIsAffiliate">
            <summary>
            determine if a user is on the sender's buddy list
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PIsAffiliateMsgData">
            <summary>
            Message data specific to IsAffiliate request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PIsAffiliateReplyMsgData">
            <summary>
            Message data specific to IsAffiliate reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgJoinTeam">
            <summary>
            Join a team that user has been recruited to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgJoinTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.Team.JoinResponse,ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Xbox 1 style join constructor
            </summary>
            <param name="user">User replying to recruit msg</param>
            <param name="team">Team being recuited to</param>
            <param name="answer">Yes, No, or Never</param>
            <param name="recruitMsg">Recruit messaage user recieived, null if not known</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgJoinTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.Team.JoinResponse)">
            <summary>
            Xenon style join constructor (message-less)
            </summary>
            <param name="user">User replying to recruit msg</param>
            <param name="team">Team being recuited to</param>
            <param name="answer">Yes, No, or Never</param>
            <param name="recruitMsg">Recruit messaage user recieived, null if not known</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PJoinTeamMsgData">
            <summary>
            Message data specific to Join Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PJoinTeamReplyMsgData">
            <summary>
            Message data specific to Join Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgListTeamMembers">
            <summary>
            List the members of a team a user belongs to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgListTeamMembers.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="user">User getting their teams list</param>
            <param name="team">Team to get member info on</param>
            <param name="showRecruits">Include recruits in member list</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListTeamMembersMsgData">
            <summary>
            Message data specific to Teams List Members request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListTeamMembersReplyMsgData">
            <summary>
            Message data specific to Teams List Members replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamMemberInfo">
            <summary>
            Team Member data returned in Team List Members replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgListTeams">
            <summary>
            List the teams a user belongs to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgListTeams.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64[])">
            <summary>
            Constructor, current logged on title
            </summary>
            <param name="user">User getting their teams list</param>
            <param name="teamIds">Team Ids to get info on</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgListTeams.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt64[])">
            <summary>
            Constructor, specific (alt) title
            </summary>
            <param name="user">User getting their teams list</param>
            <param name="titleId">Title (perhaps alt title) listing teams for</param>
            <param name="teamIds">Team Ids to get info on</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListTeamsMsgData">
            <summary>
            Message data specific to Teams List request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListTeamsReplyMsgData">
            <summary>
            Message data specific to Teams List replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamInfo">
            <summary>
            Team data returned in Team List replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgListUserTeams">
            <summary>
            List the teams a user belongs to
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgListUserTeams.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor, current logged on title
            </summary>
            <param name="user">User getting their teams list</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgListUserTeams.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor, specific (alt) title
            </summary>
            <param name="user">User getting their teams list</param>
            <param name="titleId">Title (perhaps alt title) listing teams for</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListUserTeamsMsgData">
            <summary>
            Message data specific to Teams List request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PListUserTeamsReplyMsgData">
            <summary>
            Message data specific to Teams List replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.UserTeamInfo">
            <summary>
            Team data returned in Team List replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgLogonCheck">
            <summary>
            determines if a user is already logged in at another location.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgLogonCheck.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64)">
            <summary>
            Constructor
            </summary>
            <param name="user">user to query logon status</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PLogonCheckMsgData">
            <summary>
            Message data specific to LogonCheck request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PLogonCheckReplyMsgData">
            <summary>
            Message data specific to LogonCheck reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgManageTeam">
            <summary>
            Manage (change) team information
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgManageTeam.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User changing team</param>
            <param name="team">team being changed</param>
            <param name="name">new team name</param>
            <param name="description">new team description</param>
            <param name="motto">new team motto</param>
            <param name="url">new team url</param>
            <param name="teamData">new team data blob</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamMsgData">
            <summary>
            Message data specific to Manage Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamReplyMsgData">
            <summary>
            Message data specific to Manage Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgManageTeamMember">
            <summary>
            Manage (change) team member information
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgManageTeamMember.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember,System.UInt32,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User making change</param>
            <param name="team">Team being changed</param>
            <param name="member">Member being changed</param>
            <param name="memberPrivliges">New member privliges</param>
            <param name="memberData">New member data blob</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamMemberMsgData">
            <summary>
            Message data specific to Manage Team Member request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamMemberReplyMsgData">
            <summary>
            Message data specific to Manage Team Member replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgManageTeamXe">
            <summary>
            Manage (change) team information
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgManageTeamXe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User changing team</param>
            <param name="team">team being changed</param>
            <param name="name">new team name</param>
            <param name="description">new team description</param>
            <param name="motto">new team motto</param>
            <param name="url">new team url</param>
            <param name="teamData">new team data blob</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamXeMsgData">
            <summary>
            Message data specific to Manage Team request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PManageTeamXeReplyMsgData">
            <summary>
            Message data specific to Manage Team replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgNickname">
            <summary>
            Allows update of title specific data stored by Presence for a particular user. 
            Title initiates immediate update all the way to server. Because of this and the 
            potential for misuse this message has been phased out for new titles.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgNickname.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's data is being updated</param>
            <param name="nickname">new nickname data</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNicknameMsgData">
            <summary>
            Message data specific to Nickname request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgPeerSession">
            <summary>
            Allows Retrieval of Client Winsock Endpoint info sent up with alives starting 
            with the aftershock release.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgPeerSession.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User making the request for data</param>
            <param name="host">User who's endpoint data is requested</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSessionMsgData">
            <summary>
            Message data specific to Peer Session request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSessionReplyMsgData">
            <summary>
            Message data specific to Peer Session reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgPeerSubscribe">
            <summary>
            Allows user to subscribe to presence notifications for other users that are not 
            friends
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgPeerSubscribe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User wanting presence notifications</param>
            <param name="peers">Users who's presence will be provided</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgPeerSubscribe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64[])">
            <summary>
            Constructor
            </summary>
            <param name="user">User wanting presence notifications</param>
            <param name="peers">Users who's presence will be provided</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSubscribeMsgData">
            <summary>
            Message data specific to Peer Subscribe request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSubscribeReplyMsgData">
            <summary>
            Message data specific to Peer Subscribe reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgPeerSubscribeEx">
            <summary>
            Attempt to add the given person to the sender's buddy list, either by the
            person's ID or name. Either Buddy ID or Nmae size must be zero.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSubscribeExMsgData">
            <summary>
            Message data specific to AddAffiliates request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerSubscribeExReplyMsgData">
            <summary>
            Message data specific to QueryAffiliates reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgPeerUnsubscribe">
            <summary>
            Cancels subcription to presence notifications for other users that are not 
            friends
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgPeerUnsubscribe.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User wanting to cancel presence notifications</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerUnsubscribeMsgData">
            <summary>
            Message data specific to Peer Unsubscribe request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PPeerUnsubscribeReplyMsgData">
            <summary>
            Message data specific to Peer Unsubscribe reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgQueryAffiliates">
            <summary>
            determine if a user is on the sender's buddy list
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PQueryAffiliatesMsgData">
            <summary>
            Message data specific to QueryAffiliates request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PQueryAffiliatesReplyMsgData">
            <summary>
            Message data specific to QueryAffiliates reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgRecruitTeamMember">
            <summary>
            Recruit a new team member
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgRecruitTeamMember.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember,ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Xbox 1 style recruit constructor
            </summary>
            <param name="user">User doing the recruiting</param>
            <param name="team">Team being recruited too</param>
            <param name="recruit">New Team member being recruited</param>
            <param name="msg">carries flags and custom properties that should be in recruit message</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgRecruitTeamMember.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Xenon style recruit constructor
            </summary>
            <param name="user">User doing the recruiting</param>
            <param name="team">Team being recruited too</param>
            <param name="recruit">New team member being recruited</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PRecruitTeamMemberMsgData">
            <summary>
            Message data specific to Recruit Team Member request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PRecruitTeamMemberReplyMsgData">
            <summary>
            Message data specific to Recruit Team Member replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgRejectBuddy">
            <summary>
            Reject a request to be someone's buddy. If never is indicated all future buddy 
            requests from the user being rejected will be blocked at the server.  The "never"
            list is stored on the server and there is no way to remove someone explicitly from 
            it, but sending someone on it a buddy request will remove them implicitly.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgRejectBuddy.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="user">User rejecting the buddy</param>
            <param name="buddy">Buddy being rejected</param>
            <param name="never">Block all future requests</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PRejectBuddyMsgData">
            <summary>
            Message data specific to Reject buddy request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgRemoveTeamMember">
            <summary>
            Remove a member from a team
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgRemoveTeamMember.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Constructor
            </summary>
            <param name="user">User doing remove</param>
            <param name="team">Team being changed</param>
            <param name="member">Member being removed</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PRemoveTeamMemberMsgData">
            <summary>
            Message data specific to Remove team member request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PRemoveTeamMemberReplyMsgData">
            <summary>
            Message data specific to Remove team member replies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgState">
            <summary>
            Allows update of title specific data stored by Presence for a particular user similar 
            to nickname.  However timing is not immediate or title initiated.  Instead the data 
            rides in periodic SG heatbeat messages.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgState.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's state data is being updated</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PStateMsgData">
            <summary>
            Message data specific to State request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgState2">
            <summary>
            Xenon version of state message. This message functions like state, but deprecates the 
            rgbTitleStuff member, and replaces it with the Rich Presence related contexts and properties. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgState2.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's state data is being updated</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PState2MsgData">
            <summary>
            Message data specific to State2 request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgGetState">
            <summary>
            Allows for the retrieval of State data about a user, including the Rich Presence contexts and properties
            this message is currently only consumed by the FD in response to a Dequeue or Alive so that 
            the Rich Presence string can be created for a user. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgGetState.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User who's state data is being updated</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetStateMsgData">
            <summary>
            Message data specific to Get State request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PGetStateReplyMsgData">
            <summary>
            Message data specific to Get State reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgUnblockVoice">
            <summary>
            Remove a particular user (or all users) from my blocklist.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgUnblockVoice.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants someone unblocked</param>
            <param name="block">User being unblocked</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgUnblockVoice.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants blocklist emptied</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgUnblockVoice.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants someone unblocked</param>
            <param name="blockId">User PUID being unblocked</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNUnblockVoiceMsgData">
            <summary>
            Message data specific to Unblock request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgWebAlive">
            <summary>
            login a user from the web
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgWebAlive.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants to log in</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PWebAliveMsgData">
            <summary>
            Message data specific to Web Alive request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PWebAliveReplyMsgData">
            <summary>
            Message data specific to Web Alive reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PMsgWebFriends">
            <summary>
            Request a dump of friend status information for a specified user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PMsgWebFriends.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that wants friend status</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PWebFriendsMsgData">
            <summary>
            Message data specific to Web Friends request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PWebFriendReplyMsgData">
            <summary>
            Message data specific to Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.WebFriend">
            <summary>
            Online friend data included in Web Friends reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.Team">
            <summary>
            Sim object for teams, local storage and handy methods for creation and veriication
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.LoadWithRandomInfo">
            <summary>
            Load team data with valid random stuff.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.#ctor">
            <summary>
            Constructor, random everything, no members 
            </summary>
            <param name="creator">User creating team</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.#ctor(System.UInt32)">
            <summary>
            Simple Constructor, random strings and data, set number for maxmembers, no members
            </summary>
            <param name="creator">User creating team</param>
            <param name="maxMembers">Max number of team members</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt64)">
            <summary>
            Constructor that allows loading of a team from the server given it's ID
            </summary>
            <param name="requestor">User making the server requests</param>
            <param name="titleId">Title team is in</param>
            <param name="teamId">ID of team</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,ServerTestFramework.LiveService.Presence.TeamInfo)">
            <summary>
            Constructor that allows loading of a team from the server given it's info block and a title Id
            </summary>
            <param name="user">User making server requests</param>
            <param name="titleId">Title team was created in</param>
            <param name="teamInfo">TeamInfo block already retrieved from server</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.LoadTeamInfo(ServerTestFramework.LiveService.Presence.TeamInfo,System.UInt32)">
            <summary>
            Sets team data with info block from server
            </summary>
            <param name="teamInfo">TeamInfo block already retrieved from server</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.LoadMembers(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Sets team member data with info retrieved from server
            </summary>
            <param name="requestor">User making server requests</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Creates a team with the current data and default creator data for users current title, 
             only member is creator
            </summary>
            <param name="creator">User sending create message</param>
            <returns>Team ID</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.CreateXe(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Creates a xenon team with the current data and default creator data for users current title, 
             only member is creator
            </summary>
            <param name="creator">User sending create message</param>
            <returns>Team ID</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Creates a team with the current data and default creator data for the speicifed title,
             only member is creator
            </summary>
            <param name="creator">User sending create message</param>
            <param name="titleId">Title team will be created for</param>
            <returns>Team ID</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,System.UInt32)">
            <summary>
            Creates a team with the current team data and provied creator data for the specified title, 
             only member is creator
            </summary>
            <param name="creator">User sending create message</param>
            <param name="creatingMember">Preloaded member based on creator</param>
            <param name="titleId">Title team will be created for</param>
            <returns>Team ID</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.CreateXe(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,System.UInt32)">
            <summary>
            Creates a xenon team with the current team data and provied creator data for the specified title, 
             only member is creator
            </summary>
            <param name="creator">User sending create message</param>
            <param name="creatingMember">Preloaded member based on creator</param>
            <param name="titleId">Title team will be created for</param>
            <returns>Team ID</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.CheckCreateReply(ServerTestFramework.LiveService.Presence.PCreateTeamReplyMsgData)">
            <summary>
            Checks create message reply
            </summary>
            <param name="replyData">Contents of create message reply</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.CheckCreateXeReply(ServerTestFramework.LiveService.Presence.PCreateTeamXeReplyMsgData)">
            <summary>
            Checks create message reply
            </summary>
            <param name="replyData">Contents of create message reply</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.SetCreated(ServerTestFramework.LiveService.Presence.TeamMember,System.DateTime,System.UInt32,System.UInt64)">
            <summary>
            Completes setup of team following creation to prepare it for validation
            </summary>
            <param name="creatingMember">Member that created the team</param>
            <param name="whenCreated">When team was created</param>
            <param name="titleId">Title team is for</param>
            <param name="teamId">Id server gave team</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Delete(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Deletes Team, specified user does it
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ManageTeam(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Changes a team's name, description, motto, url, and data blob
            </summary>
            <param name="user">User doing change</param>
            <param name="name">New name</param>
            <param name="desc">New Description</param>
            <param name="motto">New Motto</param>
            <param name="url">New Url</param>
            <param name="data">New Data blob</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeTeamName(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String)">
            <summary>
            Changes a team's name
            </summary>
            <param name="user">Member doing change</param>
            <param name="name">New name</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeTeamDescription(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String)">
            <summary>
            Changes a team's description
            </summary>
            <param name="user">Member doing change</param>
            <param name="desc">New Description</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeTeamMotto(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String)">
            <summary>
            Changes a team's motto
            </summary>
            <param name="user">Member doing change</param>
            <param name="motto">New Motto</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeTeamUrl(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String)">
            <summary>
            Changes a team's url
            </summary>
            <param name="user">Member doing change</param>
            <param name="url">New Url</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeTeamDataBlob(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte[])">
            <summary>
            Changes a team's data blob
            </summary>
            <param name="user">Member doing change</param>
            <param name="data">New Data blob</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.AddMember(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Simple method to add a user to a team with random data
            </summary>
            <param name="recruitor">Current team member</param>
            <param name="recruitee">New team member</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.AddMember(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Simple method to add a user to a team with specific privliges and random data
            </summary>
            <param name="recruitor">Current team member</param>
            <param name="recruitee">New team member</param>
            <param name="privliges">Privliges new member could have</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.AddMember(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Add a new member send and acknoledge a recruit message
            </summary>
            <param name="recruitor">Current team member</param>
            <param name="recruitee">New team member</param>
            <param name="privliges">Privliges new member could have</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Recruit(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Send Xbox 1 Recruit message and adds recruit to local member list
            </summary>
            <param name="user">User making offer to join</param>
            <param name="recruit">Potential team member</param>
            <param name="msg">Message sent to annouce invitaion</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Recruit(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Send Xenon Recruit message and adds recruit to local member list
            </summary>
            <param name="user">User making offer to join</param>
            <param name="recruit">Potential team member</param>
            <param name="msg">Message sent to annouce invitaion</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Join(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Notification.UserMessage,ServerTestFramework.LiveService.Presence.Team.JoinResponse)">
            <summary>
            Xbox 1 style respond to invitaion to join team from a message
            </summary>
            <param name="recruit">User being recruited, must arlready be in local member list</param>
            <param name="recruitMsg">Recruit message responding user recieved</param>
            <param name="joining">Response (yes, no, never)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Join(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.Team.JoinResponse)">
            <summary>
            Xenon style respond to invitaion to join team from a message (message-less)
            </summary>
            <param name="recruit">User being recruited, must arlready be in local member list</param>
            <param name="joining">Response (yes, no, never)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.Remove(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Removal of member from team
            </summary>
            <param name="user">User doing the deed</param>
            <param name="outcast">Team Member getting removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.RemoveAllMembers(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Remove all members from the team.
            </summary>
            <param name="user">User doing the deed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.DoRemoveMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Sends message to server to remove a team member
            </summary>
            <param name="user">User doing the deed</param>
            <param name="outcast">Team Member getting removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ManageMember(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,System.UInt32,System.Byte[])">
            <summary>
            Change a team members privliges and data blob.
            </summary>
            <param name="user">Member doing change</param>
            <param name="member">Member being changed</param>
            <param name="privliges">New privlige flags</param>
            <param name="data">New data blob</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeMemberPrivliges(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,System.UInt32)">
            <summary>
            Change a team members privliges.
            </summary>
            <param name="user">Member doing change</param>
            <param name="member">Member being changed</param>
            <param name="privliges">New privlige flags</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ChangeMemberDataBlob(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Presence.TeamMember,System.Byte[])">
            <summary>
            Change a team members data blob.
            </summary>
            <param name="user">Member doing change</param>
            <param name="member">Member being changed</param>
            <param name="data">New data blob</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ValidateTeam(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Validates the current team state with server info (members too)
            </summary>
            <param name="validator">User doing the server enumerations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ValidateMembers(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Validates the current member list state with server
            </summary>
            <param name="validator">User doing the server enumerations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.CheckListReplyData(ServerTestFramework.LiveService.Presence.TeamInfo)">
            <summary>
            Compares current state to team info from server
            </summary>
            <param name="info">Description in reply to team enumeration</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.MemberListCount">
            <summary>
            Get a count of the number of members loaded in this team object.
            </summary>
            <returns>Count of members loaded into team object</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.MemberListJoinedCount">
            <summary>
            Get a count of the number of joined members loaded in this team object.
            </summary>
            <returns>Count of members loaded into team object that have joined</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.GetMemberList">
            <summary>
            Get local member list
            </summary>
            <returns>List of local member state objects</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.AddToMemberList(ServerTestFramework.LiveService.Presence.TeamMember)">
            <summary>
            Add a new user to team's local member list
            </summary>
            <param name="user">User that will become a member</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.RemoveFromMemberList(System.UInt64)">
            <summary>
            Removes an item from the team's local member list
            </summary>
            <param name="user">User Puid that will be removed from internal list</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.ClearMemberList">
            <summary>
            Removes all items from team's local member list 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.Team.FindMemberInList(System.UInt64)">
            <summary>
            Finds a item in the team's local member list
            </summary>
            <param name="memberId">User Id of member</param>
            <returns>Member object, null if not found</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.Team.JoinResponse">
            <summary>
            Posible answers when joining, Never adds sender to never list.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamMember">
            <summary>
            Sim Object for Team members, storage and validation for team meber specific user 
            data.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.LoadWithRandomInfo">
            <summary>
            Load member data with valid random stuff. (no Live privileges)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.#ctor(ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor, random data and title privliges, no Live privilleges.
            </summary>
            <param name="parentTeam">Team member belongs to</param>
            <param name="user">User that is becoming member</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.#ctor(ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor, random data and specified privliges.
            </summary>
            <param name="parentTeam">Team member belongs to</param>
            <param name="user">User that is becoming member</param>
            <param name="privliges">Intial privileges</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.#ctor(ServerTestFramework.LiveService.Presence.Team,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.Byte[])">
            <summary>
            Constructor, Specifies data and privliges
            </summary>
            <param name="parentTeam">Team member belongs to</param>
            <param name="user">User that is becoming member</param>
            <param name="priv">Member privliges</param>
            <param name="data">Member data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.WaitForRecruitMsg">
            <summary>
            Get recruit message for member, if memeber is not yet joined
            </summary>
            <returns>Recruit message sent to this member</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.WaitForNoRecruitMsg">
            <summary>
            Waits to make sure member does not get a recruit message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.TeamMember.CheckListMembersReplyData(ServerTestFramework.LiveService.Presence.TeamMemberInfo)">
            <summary>
            Compares current state to member data from server
            </summary>
            <param name="info">Description in reply to team member enumeration</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamTickets">
            <summary>
            Collection of team tickets
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamTicketsHdr">
            <summary>
            The header part of TeamTickets
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamTicketsList">
            <summary>
            The ticket list part of TeamTickets
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.TeamTicket">
            <summary>
            A single team ticket
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.UserTeams">
            <summary>
            Table of a user's teams, listed by title
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that is the member of the teams</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Add(ServerTestFramework.LiveService.Presence.Team)">
            <summary>
            Add a team to the list for the specified title
            </summary>
            <param name="titleId">Title team exists in</param>
            <param name="team">Team User is member of</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Get(System.UInt64,System.UInt32)">
            <summary>
            Gets a team out
            </summary>
            <param name="teamId">Id of team</param>
            <param name="titleId">Title Id of team</param>
            <returns>Team object</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Remove(System.UInt32,System.UInt64)">
            <summary>
            Removes a team from the list for the specified title
            </summary>
            <param name="titleId">Title team exists in</param>
            <param name="teamId">Id of team user has left</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Clear(System.UInt32)">
            <summary>
            Removes all teams from the list for the specified title
            </summary>
            <param name="titleId">Title teams exists in</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Clear">
            <summary>
            Removes all teams from all titles
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Count(System.UInt32)">
            <summary>
            Get the count of teams for the specified title
            </summary>
            <param name="titleId">Title teams exist in</param>
            <returns>number of teams for this title</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.GetFirstTeam">
            <summary>
            Get's the first team for the user's current title
            </summary>
            <returns>One of the users teams (whichever the enurator thinks is first</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.GetTeams(System.UInt32,System.Boolean)">
            <summary>
            Gets the list of teams for a specified title
            </summary>
            <param name="titleId">Title teams exist in</param>
            <returns>Array of Teams</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.GetTeamIds(System.UInt32,System.Boolean)">
            <summary>
            Gets the list of team IDs for a specified title
            </summary>
            <param name="titleId">Title teams exist in</param>
            <returns>Array of Team IDs</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.Validate">
            <summary>
            Validates local team state of a users teams for their current title
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.ValidateTicket(ServerTestFramework.LiveService.Presence.TeamTicket)">
            <summary>
            Checks given ticket against what it should be for user's current logged in title.
            </summary>
            <param name="ticket">Team Ticket being checked for correctness</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.UserTeams.ValidateTicket(ServerTestFramework.LiveService.Presence.TeamTicket,System.UInt32,System.Byte[])">
            <summary>
            Checks given ticket against what it should be for the given title and key
            </summary>
            <param name="ticket">Team Ticket being checked for correctness</param>
            <param name="titleId">Title Id for ticket and list of teams</param>
            <param name="key">Key in use when ticket was fetched from server</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.Message.Check(ServerTestFramework.LiveService.Notification.Message)">
            <summary>
            Checks current summary contents 
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgDetails">
            <summary>
            Message details data (a collection of Message Properties)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.CreateBlank">
            <summary>
            Create a blank set of message details that's ready to have properties added.
            Use of static factory, allows default constructor used by input serialization
            to not have to create the dynamic storage crap
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.WriteStream(System.IO.BinaryWriter)">
            <summary>
            Output serializion overload that first loads portocol data member variable form
            dynamic storage variable use by AddPorperty methods before calling base version
            </summary>
            <param name="binaryWriter">Output serializer</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(ServerTestFramework.LiveService.Notification.MsgPropertyWrapped)">
            <summary>
            Add a wrapped property type, the data will be extracted
            from the extra bytes and put into the details by way of 
            another AddProperty call with the stored type.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16)">
            <summary>
            Add an empty property
            </summary>
            <param name="tag">Property tag</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.Byte)">
            <summary>
            Add an 8-bit property
            </summary>
            <param name="tag">Property tag</param>
            <param name="u8">8-bit value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.UInt16)">
            <summary>
            Add a 16-bit property
            </summary>
            <param name="tag">Property tag</param>
            <param name="u16">16-bit value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.UInt32)">
            <summary>
            Add a 32-bit property
            (Also works for String Server ID's)
            </summary>
            <param name="tag">Property tag</param>
            <param name="u32">32-bit value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.UInt64)">
            <summary>
            Add a 64-bit property
            </summary>
            <param name="tag">Property tag</param>
            <param name="u64">64-bit value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.String)">
            <summary>
            Add a string property
            </summary>
            <param name="tag">Property tag</param>
            <param name="sz">String value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.DateTime)">
            <summary>
            Add a DataTime property
            </summary>
            <param name="tag">Property tag</param>
            <param name="dt">DateTime value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.Byte[])">
            <summary>
            Add a Binary Blob property
            </summary>
            <param name="tag">Property tag</param>
            <param name="blob">Binary array</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.UInt32,System.UInt32,System.String)">
            <summary>
            Add an Attachment property
            </summary>
            <param name="tag">Property tag</param>
            <param name="size"></param>
            <param name="flags"></param>
            <param name="url"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.AddProperty(System.UInt16,System.Boolean)">
            <summary>
            Add a Bool property
            </summary>
            <param name="tag">Property tag</param>
            <param name="b">Bool value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.ReadStream(System.IO.BinaryReader)">
            <summary>
            Input serialization that first loads up the protocol data members then set up 
            buffer/reader wrapper for binary data blob
            </summary>
            <param name="binaryReader">Input serializer</param>
            <returns>Self</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.HasNullProperty(System.UInt16)">
            <summary>
            Checks if a Null type property is present.  Because this type of property has no data all
            we can do is see if it's there
            </summary>
            <param name="index">Property tag</param>
            <returns>true if property found and type is null</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetByteProperty(System.UInt16)">
            <summary>
            Returns the byte value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetWordProperty(System.UInt16)">
            <summary>
            Returns the word value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetDwordProperty(System.UInt16)">
            <summary>
            Returns the dword value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetQwordProperty(System.UInt16)">
            <summary>
            Returns the qword value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetStringProperty(System.UInt16)">
            <summary>
            Returns the string value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetDateTimeProperty(System.UInt16)">
            <summary>
            Returns the DateTime value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetBinaryProperty(System.UInt16)">
            <summary>
            Returns the byte array value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetAttachmentProperty(System.UInt16)">
            <summary>
            Returns the Attachment info value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetBoolProperty(System.UInt16)">
            <summary>
            Returns the boolean value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetStringIdProperty(System.UInt16)">
            <summary>
            Returns the String ID value of the property with the given tag
            </summary>
            <param name="index">Property tag</param>
            <returns>Value of property </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetPropertyIndex(System.UInt16)">
            <summary>
            Finds the index of a given property tag in the properties list
            </summary>
            <param name="tag">Property Id</param>
            <returns>Index into properties list</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgDetails.GetPropertyData(System.Byte,System.Byte)">
            <summary>
            Returns the value of the property at given index as the type indicated in the property tag
            </summary>
            <param name="index">Index into MsgProperty array</param>
            <returns>Value of property in type specified by index</returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Notification.MsgDetails.size">
            <summary>
            Better than Size with a capital S that lives in WireData
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgPropertyTag">
            <summary>
            Message Property tags occupy a word where the upper byte indicates the property's 
            data type, and the lower byte indicates a unique identifier for the property.
            Property identifiers only need to be unique within a given message type.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgProperty">
            <summary>
            Message Property contains the tag and a value who's meaning depends on property
            type. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgProperty.ReadExtraData(System.IO.BinaryReader)">
            <summary>
            Do a specific read for the type of data stored in this property. If it
            exists outside this property than it must preceed this property in the
            stream. This is the case for msg properties passed as parameters in
            wire protocol. For handling a group of properties in a details blob
            use MsgDetails.GetPropertyData() which can handle the stream seek and object
            conversion.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgPropertyWrapped">
            <summary>
             Wraps a message property with some extra data to hold
             the actual property data. This can be used for passing
             around properties and using them for parameters to APIs
             such as RevokeMsgEx
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgPropertyWrapped.#ctor(System.UInt32)">
            <summary>
            Create the wrapped msg property, allocate cb extra
            bytes for the payload.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgPropertyWrapped.#ctor(ServerTestFramework.WireData)">
            <summary>
            Create the wrapped message property, the extra
            wire data will be serialized new into the payload
            of this property.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgPropertyWrapped.GetWriter">
            <summary>
            Return a writer that allows writing to the allocated
            extra block. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.MsgPropertyWrapped.GetReader">
            <summary>
            Return a reader that allows reading from the
            extra block.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgPropertyBinary">
            <summary>
            Format of MSG_PROP_TYPE_BINARY property found in MsgDetails property data blob
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgPropertyAttachment">
            <summary>
            Format of MSG_PROP_TYPE_ATTACHMENT property found in MsgDetails property data blob
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgPropertyString">
            <summary>
            Format of MSG_PROP_TYPE_STRING property found in MsgDetails property data blob
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgNotification">
            <summary>
            Message notification flags in lower 24 bits and message type in upperbyte
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgUtility">
            <summary>
            Utility functions taken from macros found in xonlinep.h
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.InvalidMsgPropertyException">
            <summary>
            Custom Exception class to carry and identify failures due to invalid message properties 
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgAdd">
            <summary>
            Tell Notificaion to add a new item of the given item type to one or more users' 
            queues. (Only needed when isolating notification.  Presence normally does this 
            for it's QTypes.)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Notification.QMsgAdd.#ctor(System.UInt16,System.UInt64[],System.Byte[])" -->
        <member name="T:ServerTestFramework.LiveService.Notification.QAddMsgData">
            <summary>
            Message data specific to Add request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgDeleteMsg">
            <summary>
            Delete message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDeleteMsg.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of message</param>
            <param name="msgId">Id of message</param>
            <param name="flags"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteMsgMsgData">
            <summary>
            Message data specific to Delete Msg request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteMsgReplyMsgData">
            <summary>
            Message data specific to Delete Msg reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgDeleteSystemMsg">
            <summary>
            Delete specified system message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDeleteSystemMsg.#ctor(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="titleId">Title responsible for message</param>
            <param name="msgId">Id of message</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteSystemMsgMsgData">
            <summary>
            Message data specific to Delete System Msg request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteSystemMsgReplyMsgData">
            <summary>
            Message data specific to Delete System Msg reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgDeleteTitle">
            <summary>
            Delete title
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDeleteTitle.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">User making request</param>
            <param name="titleId">Id of title</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteTitleMsgData">
            <summary>
            Message data specific to Delete Title request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDeleteTitleReplyMsgData">
            <summary>
            Message data specific to Delete Title reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgDequeue">
            <summary>
            Retrieves and deletes notificaion messege queue items for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDequeue.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of queue</param>
            <param name="qType">One of the available Message Queue types (see XonPresNoti)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDequeue.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt16,System.UInt32,System.UInt16,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of queue</param>
            <param name="qType">One of the available Message Queue types (see XonPresNoti)</param>
            <param name="startItemID">First queue item in list to dequeue</param>
            <param name="maxItems">The maximum number of items that can dequeue</param>
            <param name="maxTotalItemDataSize">The maximum number of bytes to allocate for the item buffer on the server</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDequeueMsgData">
            <summary>
            Message data specific to Dequeue request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDequeueReplyMsgData">
            <summary>
            Top level of message data specific to Dequeue reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.ListReplyHdr">
            <summary>
            Header portion of message data specific to Dequeue reply.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.ListItem">
            <summary>
            Top level of List Item. One or more of these follow ListReplyHdr in message data 
            specific to Dequeue reply.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.ListItemHdr">
            <summary>
            Common header for all QType specific list items
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.ListItemData">
            <summary>
            Base class for QType specific list items
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.PresenceItem">
            <summary>
            Presence list item specific data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.Presence2Item">
            <summary>
            Presence2 list item specific data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.PeerPresenceItem">
            <summary>
            Peer Presence list item specific data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.ListChangeItem">
            <summary>
            List Change list item specific data. (Also used for buddy requests.)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.InvitationItem">
            <summary>
            Inivitation list item specific data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.InvitationAnswerItem">
            <summary>
            Inivitation Answer list item specific data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgDetails">
            <summary>
            Get details of specified message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgDetails.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of message</param>
            <param name="msgId">Id of message</param>
            <param name="setFlags"></param>
            <param name="unsetFlags"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDetailsMsgData">
            <summary>
            Message data specific to Details request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QDetailsReplyMsgData">
            <summary>
            Message data specific to Details reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgEnumMsgs">
            <summary>
            Enumerates messages for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgEnumMsgs.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User messages are to</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumMsgsMsgData">
            <summary>
            Message data specific to Enumerate Msgs request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumMsgsReplyMsgData">
            <summary>
            Message data specific to Enumerate Msgs reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgEnumMsgs2">
            <summary>
            Enumerates messages for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgEnumMsgs2.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User messages are to</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumMsgs2MsgData">
            <summary>
            Message data specific to Enumerate Msgs request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumMsgs2ReplyMsgData">
            <summary>
            Message data specific to Enumerate Msgs reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgEnumSystemMsgs">
            <summary>
            Enumerate non user specific messages for a particular title. 
            System will be 0 or Dash title ID - TBD.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgEnumSystemMsgs.#ctor(System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="titleId">Title responsible for message</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumSystemMsgsMsgData">
            <summary>
            Message data specific to Enumerate System Msgs request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumSystemMsgsReplyMsgData">
            <summary>
            Message data specific to Enumerate System Msgs reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgEnumTitles">
            <summary>
            Enumerate titles
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgEnumTitles.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User making request</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumTitlesMsgData">
            <summary>
            Message data specific to Enumerate Titles request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QEnumTitlesReplyMsgData">
            <summary>
            Message data specific to Enumerate Titles reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserTitle">
            <summary>
            Per title info retruned when a user enumerates titlte.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgFlags">
            <summary>
            Set flags of specified message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgFlags.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of message</param>
            <param name="msgId">Id of message</param>
            <param name="setFlags"></param>
            <param name="unsetFlags"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QFlagsMsgData">
            <summary>
            Message data specific to Flags request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QFlagsReplyMsgData">
            <summary>
            Message data specific to Flags reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgRevokeMsgEx">
            <summary>
            Revoke a message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgRevokeMsgEx.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.UInt32,System.Byte,ServerTestFramework.LiveService.Notification.MsgPropertyWrapped,ServerTestFramework.LiveService.Notification.RecipientResult[])">
            <summary>
            Constructor
            </summary>
            <param name="sender">Sender of message</param>
            <param name="context">Message context</param>
            <param name="type">Message type</param>
            <param name="recipients">If recipients.dwMessageID is zero, all messages of this type with a matching sender and context are deleted</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeExMsgMsgData">
            <summary>
            Message data specific to Revoke Msg request
            If recipients.dwMessageID is zero, all messages of this type with a matching sender 
            and context are deleted
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeExMsgReplyMsgData">
            <summary>
            Message data specific to Revoke Msg By Prop reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgRevokeMsg">
            <summary>
            Revoke a message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgRevokeMsg.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.Byte,ServerTestFramework.LiveService.Notification.RecipientResult[])">
            <summary>
            Constructor
            </summary>
            <param name="sender">Sender of message</param>
            <param name="context">Message context</param>
            <param name="type">Message type</param>
            <param name="recipients">If recipients.dwMessageID is zero, all messages of this type with a matching sender and context are deleted</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeMsgMsgData">
            <summary>
            Message data specific to Revoke Msg request
            If recipients.dwMessageID is zero, all messages of this type with a matching sender 
            and context are deleted
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeMsgReplyMsgData">
            <summary>
            Message data specific to Revoke Msg reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgRevokeMsgByProp">
            <summary>
            Revoke a message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgRevokeMsgByProp.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.Byte,ServerTestFramework.LiveService.Notification.RecipientResult[])">
            <summary>
            Constructor
            </summary>
            <param name="sender">Sender of message</param>
            <param name="context">Message context</param>
            <param name="type">Message type</param>
            <param name="recipients">If recipients.dwMessageID is zero, all messages of this type with a matching sender and context are deleted</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeMsgByPropMsgData">
            <summary>
            Message data specific to Revoke Msg request
            If recipients.dwMessageID is zero, all messages of this type with a matching sender 
            and context are deleted
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QRevokeMsgByPropReplyMsgData">
            <summary>
            Message data specific to Revoke Msg By Prop reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgSendMsg">
            <summary>
            Send a message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSendMsg.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.Notification.UserMessage,System.UInt64[])">
            <summary>
            Constructor
            </summary>
            <param name="sender">User sending message</param>
            <param name="msg">Message being sent</param>
            <param name="recipients">UserIds message is too</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSendMsg.#ctor(ServerTestFramework.LiveService.Notification.UserMessage,System.UInt64[])">
            <summary>
            Constructor
            </summary>
            <param name="msg">Message being sent</param>
            <param name="recipients">UserIds message is too</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSendMsgMsgData">
            <summary>
            Message data specific to Send Msg request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSendMsgReplyMsgData">
            <summary>
            Message data specific to Send Msg reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.RecipientResult">
            <summary>
            Recipient result is message Id on success and HR on failure
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgSendSystemMsg">
            <summary>
            Send a system message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSendSystemMsg.#ctor(ServerTestFramework.LiveService.Notification.SystemMessage)">
            <summary>
            Constructor
            </summary>
            <param name="msg">System Message Object</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSendSystemMsgMsgData">
            <summary>
            Message data specific to Send System Msg request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSendSystemMsgReplyMsgData">
            <summary>
            Message data specific to Send System Msg reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgSummary">
            <summary>
            Get summary of specified message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSummary.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of message</param>
            <param name="messageId">Id of message</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSummaryMsgData">
            <summary>
            Message data specific to Summary request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSummaryReplyMsgData">
            <summary>
            Message data specific to Summary reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgSummary2">
            <summary>
            Get summary of specified message for a user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSummary2.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="user">Owner of message</param>
            <param name="messageId">Id of message</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSummary2MsgData">
            <summary>
            Message data specific to Summary request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSummary2ReplyMsgData">
            <summary>
            Message data specific to Summary reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QMsgSystemDetails">
            <summary>
            Get details of specified system message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.QMsgSystemDetails.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="titleId">Title responsible for message</param>
            <param name="msgId">Id of message</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSystemDetailsMsgData">
            <summary>
            Message data specific to System Msg Details request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.QSystemDetailsReplyMsgData">
            <summary>
            Message data specific to System Msg Details reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.SystemMessage">
            <summary>
            System Message Wrapper
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.CreateBlank">
            <summary>
            Creates a blank System message 
            </summary>
            <returns>Blank system message ready to be loaded for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.Create(System.String,System.UInt32,System.UInt32,System.UInt64,System.DateTime,System.UInt32,System.UInt16,System.Byte,System.String,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Fully parametarized creation of sytem message
            </summary>
            <param name="senderName">Name of sender</param>
            <param name="titleID">Title message is for</param>
            <param name="region">Region message is for</param>
            <param name="context">Message specific context</param>
            <param name="sentTime">Message activation time</param>
            <param name="flags">Message flags</param>
            <param name="expireMinutes">Minutes until message expires after it is activated</param>
            <param name="type">Message Type</param>
            <param name="description">Message Descripion</param>
            <param name="details">Collection of message properties</param>
            <returns>A system message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.CreateLiveMsg(ServerTestFramework.LiveService.Notification.Message.Priority,System.String,System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt16,System.UInt16)">
            <summary>
            Fully parametarized creaton of Live type system message
            </summary>
            <param name="priority">Message priority, used to set flags</param>
            <param name="senderName">Name of Sender</param>
            <param name="titleId">Title message is for</param>
            <param name="region">Region message is for</param>
            <param name="description">Message Descripion</param>
            <param name="stringId">ID for string server lookup</param>
            <param name="delayedSendMinutes">Minutes from now message will activate</param>
            <param name="expireMinutes">Minutes until message expires after it is activated</param>
            <returns>A complete Live type system message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.#ctor(ServerTestFramework.LiveService.Notification.SystemMsgSummary)">
            <summary>
            Constuct with received message summary
            </summary>
            <param name="summary">Message summary wire data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constuct with system details message
            </summary>
            <param name="titleId">Title message was for</param>
            <param name="msgId">ID of message</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.Send">
            <summary>
            Send message based on current contents. Changes Message ID if send succedes
            </summary>
            <returns>Message ID if succesfull</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.Delete(System.UInt32,System.UInt32,ServerTestFramework.LiveService.Notification.SystemMessage.RevokeAlso)">
            <summary>
            Static fully parametarized deletion
            </summary>
            <param name="titleId">Title message was sent to</param>
            <param name="msgId">ID of message</param>
            <param name="revoke">option to also delete message already delivered to users</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.Delete(ServerTestFramework.LiveService.Notification.SystemMessage.RevokeAlso)">
            <summary>
            Delete this message (based on current contents)
            </summary>
            <param name="revoke">Option to also delete message already delivered to users</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.GetDetails">
            <summary>
            Gets details and stores them, validates Summary recieved with current contents
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.CheckSummary(ServerTestFramework.LiveService.Notification.SystemMsgSummary)">
            <summary>
            Checks current contents against Wire Data summary
            </summary>
            <param name="summary">System message summary wire data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMessage.CheckSystemMessage(ServerTestFramework.LiveService.Notification.SystemMessage)">
            <summary>
            Checks current summary contents against that of another system message
            </summary>
            <param name="sysMsg">Other system message that should be identical (at least summary part)</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.SystemMsgFolder">
            <summary>
            Collection of a particular title's system messages
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMsgFolder.#ctor(System.UInt32)">
            <summary>
            Cretae empty folder for given title ID
            </summary>
            <param name="titleId">Title ID messages are for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMsgFolder.Load">
            <summary>
            Enumerate messages from server
            </summary>
            <returns>Number of messages retrieved</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMsgFolder.DeleteAll(ServerTestFramework.LiveService.Notification.SystemMessage.RevokeAlso)">
            <summary>
            Delete all loaded messages from server
            </summary>
            <param name="revoke">Option to also delete message already delivered to users</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.SystemMsgFolder.DeleteAll(System.UInt32,ServerTestFramework.LiveService.Notification.SystemMessage.RevokeAlso)">
            <summary>
            Delete all messages for specified title from server
            </summary>
            <param name="titleId">Title messages are for</param>
            <param name="revoke">Option to also delete message already delivered to users</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.SystemMsgSummary">
            <summary>
            System message summary data
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Notification.UserMessage.CreateAndLoad(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32)" -->
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Notification.UserMessage.CreateAndLoad(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt32,System.UInt32,System.UInt32)" -->
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateBlank">
            <summary>
            Creates a blank User message 
            </summary>
            <returns>Blank user message ready to be loaded for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte,System.UInt64,System.UInt32,System.UInt16,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Fully parametarized creation of xbox 1 user message with details
            </summary>
            <param name="sender">User sending the message</param>
            <param name="type">Message Type</param>
            <param name="context">Message specific context</param>
            <param name="flags">Message flags</param>
            <param name="expireMinutes">Minutes until message expires</param>
            <param name="details">Collection of message properties</param>
            <returns>A user message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte,System.UInt64,System.UInt32,System.UInt16)">
            <summary>
            Fully parametarized creation of xbox 1 user message without details 
            </summary>
            <param name="sender">User sending the message</param>
            <param name="type">Message Type</param>
            <param name="context">Message specific context</param>
            <param name="flags">Message flags</param>
            <param name="expireMinutes">Minutes until message expires</param>
            <returns>A user message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String,System.Byte,System.UInt64,System.UInt32,System.UInt16,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Fully parametarized creation of xenon user message with details 
            </summary>
            <param name="sender">User sending the message</param>
            <param name="subject">Subject from message summary</param>
            <param name="type">Message type</param>
            <param name="context">Message specific context</param>
            <param name="flags">Message flags</param>
            <param name="expireMinutes">Minutes until message expires</param>
            <param name="details">Collection of message properties</param>
            <returns>A user message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.Create(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String,System.Byte,System.UInt64,System.UInt32,System.UInt16)">
            <summary>
            Fully parametarized creation of xenon user message without details 
            </summary>
            <param name="sender">User sending the message</param>
            <param name="subject">Subject from message summary</param>
            <param name="type">Message type</param>
            <param name="context">Message specific context</param>
            <param name="flags">Message flags</param>
            <param name="expireMinutes">Minutes until message expires</param>
            <returns>A user message loaded and ready for sending</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateTitleCustomMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Creation of basic custom message type
            </summary>
            <param name="sender">User sending the message</param>
            <returns>Most basic custom message</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateFriendsRequestMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Creation of basic friends request message
            </summary>
            <param name="sender">User sending the message</param>
            <returns>Most basic friend request message</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateTeamRecruitMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64)">
            <summary>
            Creation of basic team recruit message
            </summary>
            <param name="sender">User sending the message</param>
            <param name="teamId">Id of team being recruited into</param>
            <returns>Most basic team recruit message</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateCompReminderMsg(System.UInt64,System.String,System.UInt16,System.DateTime,System.UInt32,System.UInt16)">
            <summary>
            Creation of a service originated comp reminder, see comps\query\elimination.cs
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateCompRequestMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64,System.String,System.DateTime,System.DateTime,System.UInt32,System.UInt16)">
            <summary>
            Creation of a user originated competition join request to another user he would
            like to join the competition.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreateGameInviteMsg(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.UInt64)">
            <summary>
            Creation of basic game invite message
            </summary>
            <param name="sender">User sending the message</param>
            <param name="sessionId">Id of session being invited to</param>
            <returns>Most basic game invite message</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.CreatePersonalMessage(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.String)">
            <summary>
            Creation of basic game invite message
            </summary>
            <param name="sender">User sending the message</param>
            <param name="sessionId">Id of session being invited to</param>
            <returns>Most basic game invite message</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.AttachText(ServerTestFramework.LiveService.Notification.UserMessage,System.String)">
            <summary>
            Attach a basic string text summary to a message
            </summary>
            <param name="msg">Message to attach details</param>
            <param name="strData">String to attach as a text property</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.AttachVoice(ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Deprecated, call specific voice attachment function per platform
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.AttachXboxVoice(ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Attach a generic xbox 1 fake voice attachment to a message
            </summary>
            <param name="msg">Message to attach details</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.AttachXenonVoice(ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Attach a generic fake voice attachment to a message
            </summary>
            <param name="msg">Message to attach details</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.#ctor(ServerTestFramework.LiveService.Notification.UserMsgSummary)">
            <summary>
            Constuct with received xbox 1 message summary
            </summary>
            <param name="summary">Message summary wire data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMessage.#ctor(ServerTestFramework.LiveService.Notification.UserMsgSummary2)">
            <summary>
            Constuct with received xenon message summary 
            </summary>
            <param name="summary">Message summary wire data</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserMsgFolder">
            <summary>
            Collection of a particular user's messages
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.#ctor(System.UInt64)">
            <summary>
            Construct an empty folder for a user, by PUID.
            </summary>
            <param name="ownerId">PUID of owning user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Construct an empty folder for a user
            </summary>
            <param name="owner">Owner user</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.DeleteInbox">
            <summary>
            Deletes all messages from the server
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.DeleteInbox(System.Boolean)">
            <summary>
            Deletes all messages from the server
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.ClearOutbox">
            <summary>
            Clear all of the sent messages stored
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.AddSentMessage(ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Manually add a message to the collection. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Load">
            <summary>
            Enumerate messages from server
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Load2">
            <summary>
            Enumerate messages from server using new enum2 message type
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.LoadEx">
            <summary>
            Enumerate messages from server using new enum2 message type if the user is
            a xenon user or enumerate using old API for xbox 1 user.
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.FindBySender(System.Byte,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="senderId">User ID of sender</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.FindByContext(System.Byte,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Find(System.Byte,System.UInt64,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="senderId">User ID of sender</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsgBySender(System.Byte,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="senderId">User ID of sender</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsgByContext(System.Byte,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsg(System.Byte,System.UInt64,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="senderId">User ID of sender</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.ValidateContainsMessage(System.UInt32,ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Look for a message matching the ID with parameters matching the input
            template. 
            
            This method does not do any waiting so it is best to pair with something like
            WaitForNewMessage() on the PNUser to get the message ID.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Notification.UserMsgFolder.Item(System.UInt32)">
            <summary>
            Indexer to sent message table
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgTime">
            <summary>
            Messaging protocol time is a shortened offset from 1/1/2003
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserMsgSummary">
            <summary>
            Message summary data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserMsgSummary2">
            <summary>
            Message summary data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool">
            <summary>
            Group of connections to INH servers that can be sent to all at once, or individually
            (based on PUID hash)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server">Group of servers listed are in "Front" entries</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.GetCount">
            <summary>
            Get Pool size.
            </summary>
            <returns>Number of servers</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.GetIndex(System.UInt64)">
            <summary>
            Get index of server a particular user hashes to.
            </summary>
            <param name="qwUserId">PUID of user to locate server for</param>
            <returns>Zero based server number</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.GetBucket(System.UInt64)">
            <summary>
               Get the bucket that a given user puid resides in
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.RemoteClosed(System.Net.Sockets.Socket)">
            <summary>
            Detects if socket has been closed by remote end. Built in properties
            "Connected" and "Available" don't work
            </summary>
            <param name="s">Socket to check</param>
            <returns>True if socket was closed at other end</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.CheckConnected(System.Boolean,System.UInt32,System.Int32)">
            <summary>
            Validates connection state and throws exception if it isn't right.
            </summary>
            <param name="expectConnected">True if expecting pool to be connected</param>
            <param name="retries">number of times to retry on failure</param>
            <param name="retrySleep">msec to wait between retries on failure</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Connect">
            <summary>
            Connect socket to each server in cluster
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.SafeConnect">
            <summary>
            Establishes and verifies a fresh connection to each server in cluster
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Close">
            <summary>
            Gracefull closure of connection to each server in cluster
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.SafeClose">
            <summary>
            Gracefull closure of connection to each server in cluster, first checking if that
            connection is open
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Send(System.UInt64,System.IO.MemoryStream)">
            <summary>
            Send message to the server in cluster that user hashes too
            </summary>
            <param name="userId">User PUID</param>
            <param name="stream">data to send</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.SendToAll(System.IO.MemoryStream)">
            <summary>
            Send message to each server in the cluster
            </summary>
            <param name="stream">data to send</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Receive(System.UInt64,System.Int32,System.IO.MemoryStream@)">
            <summary>
            Receive message from the server in cluster that user hashes too
            </summary>
            <param name="userId">User PUID</param>
            <param name="waitMilliSec">Miliseconds to wait</param>
            <param name="stream">data received</param>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Connected">
            <summary>
            True if all the sockets in a pool are connected to remote host.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.InhServerPool.Disconnected">
            <summary>
            True if all the sockets in a pool are NOT connected to remote host.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState">
            <summary>
            Create a multi-value wait state where all conditions must be
            met for the wait to complete.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.#ctor">
            <summary>
            Create a new conditional wait state for a target user. A default of 5 seconds
            will be used for the wait timeout.
            </summary>
            <param name="user">User to act as the target</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.#ctor(System.UInt32)">
            <summary>
            Create a new conditional wait state for a target user.
            </summary>
            <param name="user">User to act as the target</param>
            <param name="maxTimeoutSeconds">Timeout in seconds for the wait state</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredQFlag(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required qflag that should arive based on the action of 
            a certain sender.
            </summary>
            <param name="qFlagMask">Bits to wait on, usually this will be a single bit. See XonPresNoti for bit definitions.</param>
            <param name="sender">Initiator of the action.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredMessageType(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required messaging qval that should arive based on the action
            of the sender. Match the type of the message.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredMessageData(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required messaging qval that should arive based on the action
            of the sender. Match the data flags in the message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredDeletedMessageId(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required deleted messaging qval that should arive based on the action
            of the sender.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.ToString">
            <summary>
            Build a condition string.
            </summary>
            <returns>A string representing all conditions currently unsatisfied</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.WaitOnConditions(System.Boolean)">
            <summary>
            Wait on all conditions.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.QFlagCondition">
            <summary>
            Condition class that wraps a qflag change on a user. This condition
            will be satisified when that qflag is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.MessagingCondition">
            <summary>
            Condition class that wraps a messaging qval change.
            will be satisified when that qval data is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.DeletedMessagingCondition">
            <summary>
            Condition class that wraps a deleted message qval change.
            will be satisified when that qval data is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.SGADDR">
            <summary>
            Unique SG session Identifier
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNADDR">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XNADDR.Check(ServerTestFramework.LiveService.PresNotiCommon.XNADDR)">
            <summary>
            Validates given value agaist current state
            </summary>
            <param name="xnAddr">Test value</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNKID">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XNKID.Check(ServerTestFramework.LiveService.PresNotiCommon.XNKID)">
            <summary>
            Validates given value agaist current state
            </summary>
            <param name="xnKID">Test value</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNKEY">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHdr">
            <summary>
            Common header for Pres and Noti messages (BASE_MSG_HEADER)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsg">
            <summary>
            Common wrapper for commom Presence and notication message header and custom data.
            (Duplicates Read and Write stream semantics without derivation or specific
            overloading becuse the Wiredata constructor did not like some of the stuff
            that needed to be ddone here. The PresNoti protocol is not very stream friendly.)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsg.ReadStream(System.IO.Stream)">
            <summary>
            Loads known Pres and Noit reply messaages from a data stream.
            </summary>
            <param name="stream">Reply message data stream</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsg.WriteStream(System.IO.Stream)">
            <summary>
            Serializes Pres and Noti request messages to a data stream.
            </summary>
            <param name="stream">Request message data stream</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNBaseAckReplyMsgData">
            <summary>
            Message data specific to the common Base Ack Reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadSG">
            <summary>
            Inform the servers that the given SG just went offline, so any users who were on 
            this SG should be considered offline also.  
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadSG.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadSGMsgData">
            <summary>
            Message data specific to Dead SG request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadUser">
             <summary>
             Inform the presence or notification server that the given user just went offline.
             Format is the same for both Presence and Notification
            
             DeadUser is a forged user message, it requires a valid auth data response from the
             SG but the user ID cannot be in the ticket.
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadUser.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that is offline</param>
            <param name="service">Presence or Notificaion</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadUserMsgData">
            <summary>
            Message data specific to Dead User request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadXbox">
            <summary>
            Inform the servers that the given XBox just went offline. Any users who were on this 
            XBox should be considered offline also. Notification will consider items pertaining 
            to this address no longer relevant and delete them.
            Format is the same for both Presence and Notification
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadXbox.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Constructor
            </summary>
            <param name="xbox">Xbox going offiline</param>
            <param name="service">Presence or Notificaion</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadXboxMsgData">
            <summary>
            Message data specific to Dead Xbox request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHello">
            <summary>
            Must be the first message sent between servers after establishing a TCP connection.
            Format is the same for both Presence and Notification
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHello.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNHelloMsgData">
            <summary>
            Message data specific to Hello request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNServers">
            <summary>
            Provides access to the common Presence/Notification, Teams, and Messaging front
            door, as well as the hashed in-house (INH) stateful cluster.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.GetPresInhCount">
            <summary>
            Get Pool count for Presence
            </summary>
            <returns>Number of servers</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.GetPresInhIndex(System.UInt64)">
            <summary>
            Get index of Presence server a particular user hashes to.
            </summary>
            <param name="qwUserId">PUID of user to locate server for</param>
            <returns>Zero based server number</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.Connect(System.Boolean)">
            <summary>
            Establish connections with Inh Server pools
            </summary>
            <param name="sayHello">True if Hello Messages are to be sent</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.Disconnect">
            <summary>
            Closes connections with Inh Server pool
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.SendToInh(System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg)">
            <summary>
            Uses persistent connections to Inh Severs to send request to one that user
            hashes to
            </summary>
            <param name="userId">PUID of user request is for</param>
            <param name="request">Request message data and properties</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.SendToAllInh(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg)">
            <summary>
            Uses persistent connections to Inh Severs to send request to all in the
            cluster
            </summary>
            <param name="request">Request message data and properties</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.RecvFromInh(System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNMsg@,System.Int32)">
            <summary>
            Gets reply message on perstistent connection to Inh Severs that the user
            hashes to
            </summary>
            <param name="userId">PUID of user expecting reply</param>
            <param name="reply">Reply of specific derived PNMsg type</param>
            <param name="waitMilliSec">Miliseconds to wait</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.CallInh(System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg,ServerTestFramework.LiveService.PresNotiCommon.PNMsg@,System.Int32)">
            <summary>
            Uses persistent connections to Inh Severs to send request to one that user
            hashes to, and waits for reply
            </summary>
            <param name="userId">PUID of user making request</param>
            <param name="reply">Reply of specific derived PNMsg type</param>
            <param name="waitMilliSec">Miliseconds to wait for reply</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.TransactFD(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg)">
            <summary>
            Send request to PN front door, not expecting a reply.
            </summary>
            <param name="request">Request being sent</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.TransactFD(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg,System.UInt32@)">
            <summary>
            Send request to PN front door, not expecting a reply.
            </summary>
            <param name="request">Request being sent</param>
            <param name="xDelay">XDelay in response Hdr</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.TransactFD(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg,ServerTestFramework.LiveService.PresNotiCommon.PNMsg@)">
            <summary>
            Send request to PN front door, with a reply expected.
            </summary>
            <param name="request">Request being sent</param>
            <param name="reply">Response contents as PNMsg</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.TransactFD(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg,ServerTestFramework.LiveService.PresNotiCommon.PNMsg@,System.UInt32@)">
            <summary>
            Send request to PN front door, with a reply expected.
            </summary>
            <param name="request">Request being sent</param>
            <param name="reply">Response contents as PNMsg</param>
            <param name="xDelay">XDelay in response Hdr</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNServers.TransactFD(ServerTestFramework.LiveService.PresNotiCommon.PNRequestMsg,ServerTestFramework.LiveService.FakeSG.CSGInfo@,ServerTestFramework.LiveService.PresNotiCommon.PNMsg@,System.UInt32@)">
            <summary>
            Send request to PN front door, with a reply expected.
            </summary>
            <param name="request">Request being sent</param>
            <param name="slot">Customized SGInfo</param>
            <param name="reply">Response contents as PNMsg</param>
            <param name="xDelay">XDelay in response Hdr</param>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNServers.FullyConnected">
            <summary>
            Checks if Fully connected and ready for anything
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser">
            <summary>
            Simulation state for a user in the the presence and notificatiion system.
            This is state storage, the methods here to not attempt to maintain consistency 
            or correctness of User state data.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.PresNotiCommon.PNUser.HQV_ReadMessages">
            <summary>
            Enumerated flags passed or'd together can be passed
            to HandleQValPacket to control how qval data is processed
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor">
            <summary>
            Creates an user with default data. 
            Intended for PN testing only. (Real users get there Ids from UACS.)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(System.String,System.UInt64)">
            <summary>
            Create with name raw values provided
            </summary>
            <param name="name">User's gamertag</param>
            <param name="userId">User's PUID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(System.String,System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Create with name raw values provided, link user to provided console
            </summary>
            <param name="name">User's gamertag</param>
            <param name="userId">User's PUID</param>
            <param name="xbox">Linked console</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(ServerTestFramework.Database.PuidName)">
            <summary>
            Create with users made using framework's UODB stuff
            </summary>
            <param name="puidName"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Finalize">
            <summary>
            At least try to give the lookup table a break.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Connect(ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Establish connection with FakeSG so it will start collecting QVals
            for this user
            </summary>
            <param name="xbox">Xbox that user will connect to FakeSG through</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Reconnect">
            <summary>
            Manually reconnect a user to an xbox
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Disconnect">
            <summary>
            Remove association with fake SG, QVal reply will start reporting this
            user as not found 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invalidate">
            <summary>
            Reload the online presence record. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ClearState">
            <summary>
            Cleans out user login state
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Alive">
            <summary>
            Build and send alive msg, then update state with default presecne flags and buddy
            and block list info returned
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Dead">
            <summary>
            Send dead user message to presence and notification clusters
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetAuthData">
            <summary>
            Generate HTTP auth data block for this user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send a request to add a buddy.  
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User being asked to be a buddy</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AcceptBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send accept of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send reject of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Send reject of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
            <param name="never">Never see buddy request from that user again</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send delete of requested buddy (accepted or not).
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">Buddy being deleted</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteAllBuddies">
            <summary>
            Send delete to all buddies and make sure all buddy lists (theirs and 
            ours) get updated by waiting for and handling notifications.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetBuddyInfo(System.UInt64)">
            <summary>
            Lookup buddy information for any buddy state by the associated
            buddies user ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddPeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a user to the list of peer subscribed users.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddPeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Add an array of users to the list of peer subscribed users.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemovePeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Remove one of the users that is subscribed and update subscriptions
            on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemovePeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Remove an array of users that are subscribed and update subscriptions
            on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribe(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Peer subscribe to a single user. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribe(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Peer subscribe to a list of users. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Peer subscribe to a single user. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Peer subscribe to a list of users. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Add Peer subscription to an add list of users. Remove any subscriptions from the delete list.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerUnsubscribe">
            <summary>
            Tear down any existing peer subscriptions on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsPeerSubscribed(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Test peer subscription state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsPeerSubscribed(System.UInt64)">
            <summary>
            Test peer subscription state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPeerInfo(System.UInt64)">
            <summary>
            Lookup a peer info tracking struct.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ExpectInviteBlip">
            <summary>
            Tell WaitForInviteBlip that you are waiting for an additional
            invite. (Stores current invite sequence number)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForInviteBlip">
            <summary>
            Wait for the invite count to go above the last stored invite 
            blip count (see ExpectInviteBlip()).
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invite(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],System.UInt64)">
            <summary>
            Send game session invitation to one or more users
            </summary>
            <param name="invited">Users to invite</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invite2(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],System.UInt64,System.UInt64,System.UInt32,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Send game session invitation to one or more users with extra 
            messaging parameters and/or competition/team data.
            </summary>
            <param name="invited">Users to invite</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AcceptInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send acceptance of invitation to game session
            </summary>
            <param name="host">User that sent the invitations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInvitationInfo(System.UInt64)">
            <summary>
            Lookup an invite tracking struct by host user ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPendingOwnedInvite">
            <summary>
            Lookup an invite tracking struct by that is being hosted
            by this user. There can be only one.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvitedFromBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from a buddy.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvitedFromPeer(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from a peer.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvited(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from anyone at all.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.HasUnAnsweredInvite">
            <summary>
            Look for unanswereqd pending invite
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send rejection of invitation to game session
            </summary>
            <param name="host">User that sent the invitations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Reject a pending invite.
            </summary>
            <param name="host">User that sent the invitations</param>
            <param name="never">Add host to user's never list</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.CancelInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Send revocation of game session invitation to one or more users
            </summary>
            <param name="invited">Users no longer invited</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.EnterSession(System.UInt64,System.Boolean)">
            <summary>
            If we are not already in a session this will cause this user
            to appear to enter a session.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.LeaveSession">
            <summary>
            Make it appear to presence and reporting that we have left any session
            that we might have been a part of
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfo(System.UInt32)">
            <summary>
            Lookup a stored message tracking struct by the message ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfoFrom(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Lookup all stored message tracking structs by the sending user ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfoTypeFrom(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Lookup all stored message tracking structs by the sending user ID and message type.
            If the message type is 0 all messages from this user will be returned.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteMessage(System.UInt32)">
            <summary>
            Delete a message by it's ID. Also removes any tracking structs.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemoveDeletedMessages">
            <summary>
            Remove messages that have been revoked or deleted on the server (we have received
            a deleted message qval for this message ID)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteAllMessages">
            <summary>
            For all tracking message structs delete the message on the server. Also
            removes tracking struct and returns the array of hresults returned from
            DeleteMessage().
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemoveMessageInfo(System.UInt32)">
            <summary>
            Remove a message tracking struct.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Mute(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send addition to list of voice blocked users
            </summary>
            <param name="block">User to shut up</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.UnMute(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send deletion from list of voice blocked users
            </summary>
            <param name="unblock">User to listen to again</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddConsoleStateInfo(System.UInt32@)">
            <summary>
            Sets the Console Type Bits in the Local State
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData">
            <summary>
            Send current state flags, match session and Title data to server
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt32)">
            <summary>
            Store new value(s). Then send current state flags, match session and Title 
            data to server
            </summary>
            <param name="state">New state flags</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt64)">
            <summary>
            Store new value(s). Then send current state flags, match session and Title 
            data to server
            </summary>
            <param name="matchId">New match session ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.Byte[])">
            <summary>
            Store new value(s). Then send current state flags, match session and Title 
            data to server
            </summary>
            <param name="titleStuff">New title data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt32,System.UInt64,System.Byte[])">
            <summary>
            Store new value(s). Then send current state flags, match session and Title 
            data to server
            </summary>
            <param name="state">New state flags</param>
            <param name="matchId">New match session ID</param>
            <param name="titleStuff">New title data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetWebFriends">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPresenceInfo(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Use datacenter port to query presence info for a target.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPeerSession(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo@)" -->
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusPending(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for outgoing buddy request
            </summary>
            <param name="buddy">User being checked</param>
            <returns>A request has been sent to buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusRequested(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for incoming buddy request
            </summary>
            <param name="buddy">User being checked</param>
            <returns>A request has come from buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusOK(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for established buddy relationship
            </summary>
            <param name="buddy">User being checked</param>
            <returns>User is a fully accepted buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Checks for specified buddy stats
            </summary>
            <param name="buddy">User being checked</param>
            <param name="status">Status being checked for</param>
            <returns>Is a user a buddy with the given status</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for existence of buddy list entry (regardless of Status)
            </summary>
            <param name="buddy">User being checked</param>
            <returns>User is in buddy list</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusPending(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy request to a user to be confirmed
            </summary>
            <param name="buddy">User request was sent to</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusRequested(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy request from a user to come in 
            </summary>
            <param name="buddy">User that made request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusOK(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for an accepted buddy request to be confirmed
            </summary>
            <param name="buddy">User that either made or accepted the request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusDeleted(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy deletion to be confirmed. 
            </summary>
            <param name="buddy">User that is to be removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.MutualWaitForStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Waits and watches Qflags and gets list change and buddy request notifications 
            (if flags indicate the need to) in order to try for specified buddy stats.
            </summary>
            <param name="buddy">User waiting on</param>
            <param name="status">Satus being watied for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Waits and watches Qflags and gets list change and buddy request notifications 
            (if flags indicate the need to) in order to try for specified buddy stats.
            </summary>
            <param name="buddy">User waiting on</param>
            <param name="status">Satus being watied for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyPresence(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser.PresenceFields,ServerTestFramework.LiveService.Notification.PresenceItem)">
            <summary>
            Waits and watches Qflags and gets presence notifications 
            
            </summary>
            <param name="buddy">User waiting on</param>
            <param name="field">The field(s) to wait for in pi</param>
            <param name="pi">A PresenceItem containing the fields to wait for equality on</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetListChangeNotifications">
            <summary>
            Gets and processes List Change notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetBuddyRequestNotifications">
            <summary>
            Gets and processes Buddy Request notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInviteNotifications">
            <summary>
            Gets and processes Invite notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInviteAnswerNotifications">
            <summary>
            Gets and processes Invite Answer notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPresenceNotifications">
            <summary>
            Gets and processes Presence notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPeerPresenceNotifications">
            <summary>
            Gets and processes Peer Presence notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPresence2Notifications">
            <summary>
            Gets and processes Presence notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetRawNotifications(System.UInt16)">
            <summary>
            Dequeues a raw list of notifications
            </summary>
            <param name="qType">Queue to dequeue from</param>
            <returns>List of qType specific list items</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DequeueNotifications(System.UInt16)">
            <summary>
            Provide granular control over the dequeue message
            </summary>
            <param name="qType">Queue to dequeue from</param>
            <returns>Dequeue reply data</returns>/ 
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DequeueNotifications(System.UInt16,System.UInt32,System.UInt16,System.UInt32)">
            <summary>
            Provide granular control over the dequeue message
            </summary>
            <param name="qType">Queue to dequeue from</param>
            <param name="startItemID">Item in queue to start with</param>
            <param name="maxItems">Max items to return</param>
            <param name="maxTotalItemsDataSize">Max total payload data size to return in bytes</param>
            <returns>Dequeue reply data</returns>/ 
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetNotifications(System.UInt16)">
            <summary>
            Gets and processes notification queue items
            </summary>
            <param name="qType">ID of Queue to get items from</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetTeamTicket">
            <summary>
            Returns the presence server's idea of what the team ticket is for the current title.
            Note this will depend on what the Fake SG tells it the key data is.
            </summary>
            <returns>Team ticket from server</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetTeamTicket(System.UInt32)">
            <summary>
            Returns the presence server's idea of what the team ticket is for specified title.
            Note this will depend on what the Fake SG tells it the key data is.
            </summary>
            <returns>Team ticket from server</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetTeamList">
            <summary>
            Get a list of all the teams the user is in for their current title,
            </summary>
            <returns>New ArrayList populated with Team objects</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetTeamList(System.UInt32)">
            <summary>
            Get a list of all the teams the user is in for specified title,
            Note this title must be valid in users SPIData
            </summary>
            <param name="titleId">Title teams were created in</param>
            <returns>Array of Team objects</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetImplicitTeamList(System.UInt32)">
            <summary>
            Get a list of all the teams the user is in for specified title
            Note this title must be valid in users SPIData
            </summary>
            <param name="titleId">Title teams were created in</param>
            <returns>Array of Team objects</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessage">
            <summary>
            Wait for next message (any).
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessageType(System.Byte)">
            <summary>
            Wait for a specific type of message to be delivered to the user.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessage(System.UInt32)">
            <summary>
            Wait for a message matching data flags to appear in the 0th slot of the
            messaging qvals. Passing zero will return the first non-zero qval. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForDeletedMessage">
            <summary>
            Wait for a non-zero message ID on the deleted message qval payload
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForDeletedMessage(System.UInt32)">
            <summary>
            Wait for a specific message ID on the deleted message qval payload
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForQFlags(System.UInt32)">
            <summary>
            Wait for a single qval flag, note that this method can be bad for internal state since
            it doesn't ensure that the items are dequeued or that the qvals are updated correctly.
            Also any flags that come in before the one specified will not be correctly handled.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ProcessQVals(System.UInt32,System.UInt32)">
            <summary> 
            Process qvals for a period of time. This can be used to ensure a fairly
            clean read on the read after this is done. Use the HQV flags to control
            qval processing.
            </summary> 
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ProcessQVals">
            <summary> 
            Process qvals with default settings.
            </summary> 
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ProcessQVals(System.UInt32)">
            <summary> 
            Process qvals on the wire, dequeue and updating internal state with dequeues.
            Flags may be 0 or a combination of the HQV flags to control how the processed
            qvals should be processed.
            </summary> 
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNUser.LoggedOn">
            <summary>
            Checks users state bits to see in online flag is set
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Connected">
            <summary>
            Checks if an xbox is set for this user
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyInfo">
            <summary>
            Used to store information about users buddies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.InvitationInfo">
            <summary>
            Represents an invitation from a user to a game session. If the Host == this then this is
            an out going InvitationItem
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerInfo">
            <summary>
            Represents a peer subscription to another user
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.MessageInfo">
            <summary>
            Represents message data that was received in a messaging QVAL
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo">
            <summary>
            Consolodates session info (title and client endpoint)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo.Check(ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo)">
            <summary>
            Compares current with given state and throws exception when differences found
            </summary>
            <param name="sessInfo">Data to compare against</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNXbox">
            <summary>
            Simulation state for an Xbox in the the presence and notificatiion system
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#cctor">
            <summary>
            Static initializer for clearing any Xbox that the FakeSG is tracking
            this should cleanup the corresponding data in presence the first time
            any PNXbox is used.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor">
            <summary>
            Creates an xbox with default data in connected state
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32)">
            <summary>
            Creates an xbox with default data in connected state with specified titleID 
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt64)">
            <summary>
            Creates an xbox with default data in connected state with titleId and clientVersion
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
            <param name="clientVersion">Version of client, default is 5936</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt64,System.Boolean)">
            <summary>
            Creates an xbox with default data in connected state with titleId and clientVersion and Xenon client
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
            <param name="clientVersion">Version of client, default is 5936</param>
            <param name="isXenonTitle">Is this a Xenon title (client) or Xbox</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            Create with raw values provided, intended for invalid test cases.
            Not initially connected
            </summary>
            <param name="ipsg">SgAddr IP</param>
            <param name="spisg">SgAddr SPI</param>
            <param name="xboxId">SgAddr Xbox ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ConnectToFakeSG">
            <summary>
            Establish this xbox in the fake SG. This method can be called more than once
            to update the associated information about this Xbox in the SG.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.UpdateFakeSG">
            <summary>
            Refresh data in Fake SG will throw if a SPI has not been generated 
            indicating a 'disconnected' state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.DisconnectFromFakeSG">
            <summary>
            Clear SPI, remove this Xbox instance from the FakeSG
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.DeadXbox">
            <summary>
            Send dead xbox message via the CSgMsgNotifyCliDelete
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ChangeTitle(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Change title information on the local xbox object and in the fake sg
            </summary>
            <param name="titleId">New title Id</param>
            <param name="titleVer">New title version</param>
            <param name="titleRegion">New Title Region</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.CanConsumeRichPresence">
            <summary>
            Returns True if this XBox is expecting to dequeue Presenece 2 items
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ConnectedToFakeSG">
            <summary>
            Is xbox connected to SG (fakeSG)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuddyStatusToString(System.Byte)">
            <summary>
            Get the friendly name for a buddy status byte
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.QTypeToString(System.UInt32)">
            <summary>
            Get the friendly name for a presence QType ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuildQFlagsString(System.UInt32)">
            <summary>
            Build a string representation of a qflags bit set
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.ListChangeOpToString(System.UInt16)">
            <summary> 
            Get the friendly name for a list change operation
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuildMsgNotificationFlagsString(System.UInt32)">
            <summary>
            Build a string representation of the messaging qval notification flags.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest">
            <summary>
            This class represents a GetSiteInfo request that originates in an SG 
            LSP server and makes its way to a LSP front-door server by way of the
            LSP proxy, Web SG, and the Live proxy.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.siteID">
            <summary>
            The Site ID for the GetSiteInfo request.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.Execute(System.Net.IPEndPoint)">
            <summary>
            Executes the request.
            </summary>
            <param name="proxyEndPoint">The IPEndPoint of the LSP proxy that 
            this request will be sent through.</param>
            <returns>true if successful.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.ReadResponse(System.IO.MemoryStream)">
            <summary>
            Reads in the response from the LSP Front Door server. The read
            response is then stored in the 32-bit integer this.response.
            </summary>
            <param name="responseStream"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.QueryAndLsp.XRLSiteInfo">
            <summary>
            This class represents the LSP Front Door server's response to a 
            GetSiteInfo request.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.#ctor">
            <summary>
            DBHelper without stats server simulation.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.#ctor(ServerTestFramework.LiveService.Stats.StatsDBSim.StatsIMDB,System.Boolean)">
            <summary>
            DBHelper with stats server simulation.
            </summary>
            <param name="StatsImdb">IMDB to use for simulation</param>
            <param name="UpdateStatsSim">Keep simulation up to date?</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.LBSname(System.Int32)">
            <summary>
            Used to get a Leaderboard Server's descriptive name.
            </summary>
            <param name="index">Leaderboard Server Index: 0 to n where n = TotalLBServers - 1</param>
            <returns>Name of the Leaderboard Server for the given index</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.LBSinfo(System.Int32)">
            <summary>
            Used to get Information on a Leaderboard Server given its index.
            </summary>
            <param name="index">Leaderboard Server Index: 0 to n where n = TotalLBServers - 1</param>
            <returns>IPEndPoint Structure describing the Leaderboard for the given index</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.SetTitleReadWrite(System.Int32,System.Int32)">
            <summary>
            Used to set a Title as Read/Write
            </summary>
            <param name="TitleID">TitleId to set as Read/Write</param>
            <param name="maxReadwrites">Max Number of Reads/Writes.  Recommended Value: 5</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.HalfConfigureTitle(System.Int32,ServerTestFramework.LiveService.Stats.StatsDBSim.LeaderboardInfo[])">
            <summary>
            Sets up half of the needed information for a title.  Here to reproduce a bug.
            </summary>
            <param name="Title_id">Title Id to "half" configure</param>
            <param name="lbtypes">Array of leaderboards to create for the title</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ConfigureTitle(System.Int32,ServerTestFramework.LiveService.Stats.StatsDBSim.LeaderboardInfo[])">
            <summary>
            Completely (re)configure a Title.  Any leaderboards already existing are laid waste.
            </summary>
            <param name="Title_id">Title Id to configure</param>
            <param name="lbtypes">Array of leaderboards to create for the title</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.deleteLeaderBoard(System.Int32,System.Int32,System.Int32)">
            <summary>
            Delete a Leaderboard, removing it from NPDB.
            </summary>
            <param name="Title_id">Title Id for leaderboard</param>
            <param name="LB_Type">Leaderboard Id to delete</param>
            <param name="ServerIndex">LBS Index where the leaderboard resides</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateV2LB(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32)">
            <summary>
            Create a non-arbitrated gamertag leaderboard with no ELo Params on LBS Index 0.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal, 0=Never</param>
            <returns>0, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.HalfCreateNewLeaderBoards(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Half-Creates a leaderboard for a title.
            
            Leaderbord is cleaned up by manually removing the row from NPDB.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="param">ELo Parameters, used to define the curve for ranking</param>
            <param name="IsTeamLB">Is this a Team Leaderboard?</param>
            <param name="IsArbitrated">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the leadboard on</param>
            <returns>1, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.UpdateLeaderBoards(System.Int32,System.Int32,System.Int32,System.Byte,System.Int32)">
            <summary>
            Used to modify a leaderboard's attributes after it has already been created.
            </summary>
            <param name="Title_id">Title Id for the leaderboard to modify</param>
            <param name="LB_Type">Id of the Leaderboard to modify</param>
            <param name="Reset_Type">New Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="IsTop100">Enable/Disable Top 100 functionality</param>
            <param name="Decayindays">New Decay Time: 0=Never</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateNewLeaderBoards(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Used to create a new Leaderboard for a given title.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="param">ELo Parameters, used to define the curve for ranking</param>
            <param name="IsTeamLB">Is this a Team Leaderboard?</param>
            <param name="IsArbitrated">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the leadboard on</param>
            <returns>0, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.reloadStatFDs">
            <summary>
            Reload the Stats Front Doors, updating leaderboard information for all titles.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.DeleteTitle(System.Int32)">
            <summary>
            Clear all Leaderboards.  Remove all Leaderboards from NPDB.  Remove Title.
            </summary>
            <param name="titleid"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Stats.DBHelper.CreateCompetitionPartition(System.Int32,System.Byte,System.Int32)" -->
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateCompetitionTemplate(System.Int32,System.Int32,System.Byte,System.Int32,System.Int32,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Creates a Competition Template for a given title (must be done prior to creating a Competition Partition).
            </summary>
            <param name="i_title_id">Title Id to create the template for</param>
            <param name="i_templateId">Template Id to create: 0 to 255</param>
            <param name="ti_reset_type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="i_att_count">Attachment Count: 0 to n</param>
            <param name="i_max_att_size">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="i_decay_days">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="vc_params">ELo Parameters, used to define the curve for ranking</param>
            <param name="ti_isTeam">Is this a Team Leaderboard?</param>
            <param name="ti_reqArbitration">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the template on</param>
            <returns>0 on success, -1 on failure</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ResetTile(System.UInt32)">
            <summary>
            Resets a title, clearing all leaderboards but not removing them from NPDB.
            </summary>
            <param name="Title_id">Title Id to reset</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.InternalExecuteLeaderboardRequest(ServerTestFramework.LiveService.LBServer.StatsMessage,System.Int32)">
            <summary>
            Private function to submit LBS Requests and return results.
            </summary>
            <param name="Proc">Fully-Formed StatsMessage to submit in the request</param>
            <param name="ServerIndex">Index of the Leaderboard Server to execute request on: -1 = All</param>
            <returns>An ArrayList of results of type: ProcCallResp or null in the error case</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ResetLeaderboards(System.DateTime)">
            <summary>
            Resets all leaderboards on the Leaderboard Serever with index 0 that would be elegible for reset on the provided date.
            </summary>
            <param name="dt_today">A future date, used to trigger weekly/monthly/yearly resets; will become the "Last Reset Date" for any reset leaderboards.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ChangeLastWriteTime(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Change the last write time of all entries on a given leaderboard.
            </summary>
            <param name="iLbType">Leaderboard Id to change last write times for</param>
            <param name="title">Title Id for leaderboard</param>
            <param name="iDayDiff">Number of days to adjust the last write time by</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.Decay">
            <summary>
            Auto-Decay all elegible leaderboards on the Leaderboard server with index 0.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.TrimLB">
            <summary>
            Auto-Trim all Top 100 Leaderboards on the Leaderboard Server with index 0.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsFD">
            <summary>
             This class encapsulate the communication between the  test client and the stats FD
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.StatsFD.#ctor">
            object to post data to Stats FD.
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.StatsFD.PopulateSlot(ServerTestFramework.LiveService.Stats.StatReqBase,ServerTestFramework.LiveService.FakeSG.CSGInfo@)">
            this function executes the test case and verifyes.
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.TestManager">
            <summary>
            Summary description for TestManager.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsProc">
            <summary>
            Summary description for XRLUnitReplace.
            </summary>
            
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsSpec">
            <summary>
            Summary description for StatsRead.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByUserRequest">
            <summary>
            StatsEnumByUserRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User id for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified user id and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByRankRequest">
            <summary>
            StatsEnumByRankRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rank">Rank value for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rank and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByRatingRequest">
            <summary>
            StatsEnumByRatingRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rating">Rating for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rating and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLCommitAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.ReqCompCreateLb">
            <summary>
            Summary description for XRLComp.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLEnumLBRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEstimateRankRequestStruct">
            <summary>
            Summary description for XRLEstimateRankForRatings.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLGetRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLRemoveAtt">
            <summary>
            Summary description for XRLRemoveAtt.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLResetUser">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLSetRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLWebEnumLB">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.LBServer.LBSClient">
            <summary>
            Summary description for LBSClient.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.LBServer.LBSRequest">
            <summary>
            Summary description for LBSRequest.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsDBSim.StatsIMDB">
            <summary>
            Summary description for IMDB.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsDBSim.PlayerTeamIMDB">
            <summary>
            Summary description for PlayerTeam.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.CompsHighLevel">
            <summary>
            Summary description for CompsHighLevel.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.CompsXrlPayload">
            <summary>
            Adds comps specific attribute functionality to Wiredata and XrlPayload.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.QueryAttributeBag">
            <summary>
            This is a helper class that helps put together multiple attributes
            in a clean fashion and save them off so that you don't have to duplicate
            your code.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.#ctor(System.UInt32)">
            <summary>
            Create a new attribute bag for a fixed number of attributes.
            </summary>
            <param name="count">The number attributes you wish to populate</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.ResetPosition">
            <summary>
            Reset the internal position to rewrite some attribute values.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.AppendDateTime(System.UInt32,System.DateTime)">
            <summary>
            Append a date time to the lValue of the current attribute.
            </summary>
            <param name="id">Attribute ID</param>
            <param name="dt">DateTime value (will be converted to File Time)</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.AddRelativeDateTime(System.UInt32,System.Int64)">
            <summary>
            Append a date time to the lValue of the current attribute.
            </summary>
            <param name="id">Attribute ID</param>
            <param name="offsetMinutes">Offset in minutes that will be added to current time</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.AppendLong(System.UInt32,System.Int64)">
            <summary>
            Append a date time to the lValue of the current attribute.
            </summary>
            <param name="id">Attribute ID</param>
            <param name="lValue">32bit Long value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.AppendString(System.UInt32,System.String)">
            <summary>
            Append a date time to the lValue of the current attribute.
            </summary>
            <param name="id">Attribute ID</param>
            <param name="strValue">String value</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeBag.AppendBlob(System.UInt32,System.Byte[])">
            <summary>
            Append a blob to the binValue of the current attribute.
            </summary>
            <param name="id">Attribute ID</param>
            <param name="binValue">Binary value in bytes</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendIntSpec">
            <summary>
            Append an attribute specifying an int value in the return.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendStringSpec(System.UInt32,System.UInt32)">
            <summary>
            Append an attribute specifying a string value in the return.
            </summary>
            <param name="typeID">The type identifier of the query attribute</param>
            <param name="maxLength">The max length of string to return</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendStringSpec">
            <summary>
            Append attribute specifying a string value with the max length in the return.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendBlobSpec(System.UInt32,System.UInt32)">
            <summary>
            Append an attribute specifying a blob value in the return.
            </summary>
            <param name="typeID">The type identifier of the query attribute</param>
            <param name="maxLength">The max length of blob to return</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendBlobSpec">
            <summary>
            Append attribute specifying a blob value with the max length in the return.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.QueryAttributeSpecBag.AppendNullSpec">
            <summary>
            Append attribute specifying a null value in the return.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.QueryAttribute">
            <summary>
            This class represents a single serializable attribute in a call
            on the query service.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.MultiLevel.Entrant">
            <summary>
            MultiLevel entrant participating in comp
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.MultiLevel.Round">
            <summary>
            Track a single round's state in multilevel for correct
            transition of entrants
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.MultiLevel.Round.Submit(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Submit results for entrants provided in a list.
            </summary>
            <param name="entrants"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.MultiLevel.Round.Submit(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Submit results in static submission set sizes.
            </summary>
            <param name="count"></param>
            <param name="setsize"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.MultiLevel.Round.Submit(System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Submit results in randomly variable submission set sizes.
            </summary>
            <param name="count"></param>
            <param name="minsetsize"></param>
            <param name="maxsetsize"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.MultiLevel.QueryUtil">
            <summary>
            This class emulates the functionality of the dev sides query util in the STF environment
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.RoundPlayInfo">
            <summary>
            Round play info is used to data drive a round replay for testing 
            scenarios. This allows large test matrices to be formed for round play
            without involving a lot of code. See PlaySingleRound()
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.SeEvent">
            <summary>
            A round encapsulation that stores the two entrants competing and records
            the winner.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.EventData2">
            <summary>
            Data type returned from a title 0x673 FindFromIds ProcIndex 2 query
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.MyCompetitionData">
            <summary>
            Data type returned from a MyCompetitions query
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.SeEntrant">
            <summary>
            Enapsulation of a competition participant, stores their PUID and currently attached
            entity ID (Unique row ID).
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.SingleElimination">
            <summary>
            High level competition that allows storingb the state of round progression
            and provides operations common to a single elimination tournament.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.InitializeDefaults">
            <summary>
            Setup the parameters for a default single elimination tourney.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.Initialize(System.Int32,System.Int32)">
            <summary>
            Initialize this single elimination event.
            </summary>
            <param name="privateSlotCount">Number of private slots to reserve.</param>
            <param name="publicSlotCount">Number of public slots to reserve.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.SubmitScoreDirect(ServerTestFramework.LiveService.Comps.SeEntrant,ServerTestFramework.LiveService.Comps.SeEntrant,System.Int64)">
            <summary>
            Submit the results of the competition to the competitions server behind the scores.
            Normally this is performed by the arbitation server but we are going direct.
            </summary>
            <param name="winnerPuid">PUID of the winner</param>
            <param name="loserPuid">PUID of the loser</param>
            <param name="eventId">Event that you are submitting against</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.SubmitScoreArbitration(ServerTestFramework.LiveService.Comps.SeEntrant,ServerTestFramework.LiveService.Comps.SeEntrant,System.Int64)">
            <summary>
            Submit a score through arbitration
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.CheckIn(ServerTestFramework.LiveService.Comps.SeEntrant,System.Int64)">
            <summary>
            Tell the competition that the user is checking in for the round.
            </summary>
            <param name="puid">PUID of checking in user</param>
            <param name="eventId">Event ID of the round</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.CheckIn(ServerTestFramework.LiveService.Comps.SeEntrant)">
            <summary>
            Checkin a user to their currently attached round.
            </summary>
            <param name="u">User object to checkin</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.CreateComp">
            <summary>
            Send the create competition XRL to comps.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.SubmitAllScores">
            <summary>
            Submit all scores for all entrants in all current round.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.Join(ServerTestFramework.LiveService.Comps.SeEntrant,System.Boolean)">
            <summary>
            Join a specific entrant into the specified slot type.
            </summary>
            <param name="ent">Single Elimination entrant to join</param>
            <param name="privateSlot">True when the entrant is registering for a private slot</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.Join(ServerTestFramework.LiveService.Comps.SeEntrant,System.Boolean,ServerTestFramework.LiveService.Comps.QueryAttributeBag)">
            <summary>
            Join a specific entrant into the specified slot type. The extra attributes
            are passed with the join and can be set in the entrants table.
            </summary>
            <param name="ent">Single Elimination entrant to join</param>
            <param name="joinPrivate">True when the entrant is registring for a private slot</param>
            <param name="attrs">Extra attributes that should store in the entrants table</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.JoinCount(System.UInt32,System.Boolean)">
            <summary>
            Join a specific number of private or public users.
            </summary>
            <param name="count">Number of users from entrants to join</param>
            <param name="joinPrivate">Specifies which slot type they will try to use</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.EveryoneJoinSeeded">
            <summary>
            Loop through all of the attached entrants and join them into the competition.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.EveryoneJoin">
            <summary>
            Loop through all of the attached entrants and join them into the competition.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.InitiateSlotting">
            <summary>
            High level method that initiates slotting without waiting for the registration period to end
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.StartTournament(System.Int32,System.Int32)">
            <summary>
            High level method that starts off a tournement with a preset private/public
            slot count, creates the tourney, joins everyone, warps to the start and waits
            for slotting.
            </summary>
            <param name="privateSlotCount"></param>
            <param name="publicSlotCount"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.PlaySingleRound">
            <summary>
            High level method that plays a single a single round with all current entrants
            with checkin and score submission.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Comps.SingleElimination.PlaySingleRound(ServerTestFramework.LiveService.Comps.RoundPlayInfo[])">
            <summary>
            High level method that plays a single a single round with all current entrants
            with checkin and score submission specified by the array of RoundPlayInfo. The array
            replay will loop back to the beginning. It is not required to specify every event.
            </summary>
            <param name="playInfoArray"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.Topology">
            <summary>
            Topology encapsulation class
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlAdd">
            <summary>
            Summary description for XrlAdd.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlFindFromIds">
            <summary>
            Summary description for XrlFindFromIds.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlQueryTimeWarp">
            <summary>
            Summary description for XrlQueryTimeWarp.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlRemove">
            <summary>
            Summary description for XrlFindFromIds.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlRemoveId">
            <summary>
            Summary description for XrlFindFromIds.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlSearch">
            <summary>
            Summary description for XrlSearch.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlSelect">
            <summary>
            Summary description for XrlAdd.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlUpdate">
            <summary>
            Summary description for XrlUpdate.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Comps.XrlUpdateId">
            <summary>
            Summary description for XrlUpdateId.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlAddJobRequest">
            <summary>
            Summary description for XrlAddJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlFindJobsRequest">
            <summary>
            Summary description for XrlFindJobs.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlGetJobRequest">
            <summary>
            Summary description for XrlGetJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlRemoveJobRequest">
            <summary>
            Summary description for XrlRemoveJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlTimeWarp">
            <summary>
            Summary description for XrlTimeWarp.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UacsCommon">
            <summary>
            This class will be aggregated into TestBase to provide common UACS functionality
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UacsCommon.CreateUser(ServerTestFramework.LiveService.UserAccount.Owner@)">
            <summary>
            Generates and creates a user.
            </summary>
            <param name="ownr"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.BillingInfo">
            <summary>
            Billing coder, please add proper definition for billing information
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.BillingInfo.ToString">
            <summary>
            return billing information in a string format.  Billing coder please decide what information is necessary to return.
            </summary>
            <returns>string that contains billing information</returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.PassportInfo.MemberName">
            <summary>
            I don't see after passport has been created, there is any reason to change memberName, SQ and SA.  And thus I have made those field public readonly.
            sessionToken is in the same category, however, I don't see anybody other than passport functions to use it, and thus the internal designator.
            Password can be changed, and thus, I will provide an accessor.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.PassportInfo.EncryptedPassword">
            <summary>
            encrypted password is generated by using password, secret question and secret answer
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UacsCommon2">
            <summary>
            This class will be aggregated into TestBase to provide common UACS functionality
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UpsProfile">
            <summary>
            Summary description for Ups.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserTestBase.TestNegative(ServerTestFramework.LiveService.XRLPayload,System.UInt32)">
            <summary>
            Verifies that the specified call failed, and that the returned error matches the expected code. 
            This behavior can be overriden to not check for an explicit error code
            
            This function will also set ResultCode as needed
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLChangeGamerTag">
             <summary>
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.Owner.GetCCNumber">
            <summary>
            Generates a random Visa number
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.Owner.GetCCNumber(System.String,System.Int32)">
            <summary>
            Generates a credit card number that conforms to the LUHN formula
            </summary>
            <param name="prefix">The prefix for the credit card number.</param>
            <param name="size">The length of the credit card number.</param>
            <returns>A string containing the generated credit card number.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLEnumerateEligible">
            <summary>
            Summary description for XRLEnumerateEligible.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetPaymentInfo">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetPostalCode">
            <summary>
            Handles the UACS GetPostalCode API
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetSubscriptionStatus">
            <summary>
            Summary description for XRLGetSubscriptionStatus.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLLinkWebAccount">
            <summary>
            Summary description for LinkWebAccount.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLRenewSubscription">
            <summary>
            Summary description for XRLRenewSubscription.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetPaymentInfo">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.SetUserPIN">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetUserSettings">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetUserSettings2">
            <summary>
            Executes the SetUserSettings2 API
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyBillingPIN">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyVoucher">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyVoucherGetOffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLWebGetUserSettings">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalance(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginGetPointsBalance(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndGetPointsBalance(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignIn">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginSignIn(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndSignIn(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.AboveLowBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.DmpAccountStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.SessionKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.XboxOfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.MusicNetSku">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.EndDate">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.PointsBalance">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.SubscriptionLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Constants">
            <summary>
            All constants that will be used by storage service
            part of it are copied from StorageConstants.cs
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Constants.StorageDomain">
            <summary>
             Storage Domain Ids: this part got from npdb t_storage_domains table
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.AccessToken">
            <summary>
            basic fields of accessToken that will be shared by all sorts of requests
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.ReadFileToken">
            <summary>
            additional fields for readFile request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.WriteFileToken">
            <summary>
            additional fields for writeFile request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.RemoveFileToken">
            <summary>
            addtional fields for removeFile requests
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.EnumFilesToken">
            <summary>
            additional fields for EnumFiles request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.MyWriteFileToken">
            <summary>
            AccessToken that is used for WriteFile request
            the fields of this class should be in sync with accessToken.cs in
            \\depot\xonline\private\common\mc\storage\accessToken.cs
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.MyReadFileToken">
            <summary>
            AccessToken that is used for ReadFile request
            the fields of this class should be in sync with accessToken.cs in
            \\depot\xonline\private\common\mc\storage\accessToken.cs
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.LiveService.Storage.MyRemoveFileToken" -->
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.LiveService.Storage.MyEnumFilesToken" -->
        <member name="T:ServerTestFramework.LiveService.Storage.XRLEnumFiles">
            <summary>
            This class is for emerate files
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            XRLEnumFiles constructor that takes five parameters
            </summary>
            <param name="pathName">pathName of the files that will be enumerated</param>
            <param name="titleID">titleID of the files that will be enumerated; it should be the same as the one in the pathname</param>
            <param name="rangeStart">zero-based index of the starting file</param>
            <param name="rangeEnd">zero-based index of the ending file</param>
            <param name="lModifiedSince">return files that modified after this time</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter EnumFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLEnumFilesResponse@)">
            <summary>
            send XRLEnumFiles http request to storage front door and get the response back
            </summary>
            <param name="sServer">Storage front door</param>
            <param name="Response">XRLEnumFiles response</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLSingleEnumFileResult">
            <summary>
            This class is for each file returned in the enumFile response
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLSingleEnumFileResult.Compare(ServerTestFramework.LiveService.Storage.XRLWriteFile)">
            <summary>
            Compare each single enumFile response with the writeFile request;
            </summary>
            <param name="other">requests that upload the file</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLEnumFilesResponse">
            <summary>
            enumFiles response
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLGetQuota">
            <summary>
            This class is for get quota data from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLGetQuota.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            default constructor for XRLGetQuota
            normally will be used for negative test cases
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLGetQuota.Execute(ServerTestFramework.LiveService.Storage.XRLGetQuotaResponse@)">
            <summary>
            send GetQuota request to stfd:11140 since it's a datacenter request
            </summary>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLGetQuotaResponse">
            <summary>
            This class is for XRLGetQuotaResponse
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLNameResolver">
            <summary>
            Summary description for XRLNameResolver.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadFile">
            <summary>
            This class is for download a file from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.#ctor">
            <summary>
            default constructor for XRLReadFile
            normally will be used for negative test cases
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.#ctor(System.String)">
            <summary>
            XRLReadFile constructor that takes one parameter
            </summary>
            <param name="pathName">pathName of the file that will be downloaded</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            Send XRLReadFile requests to the xstorage front door
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            send XRLReadFile http request to storage front door and get the response back
            </summary>
            <param name="sServer">Storage front door</param>
            <param name="Response">XRLReadFile response</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            During stress, I found out it spend lots of time in deserializing when reading response
            since stress doesn't care the response, we will just ignore it for stress tests.
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadFileResponse">
            <summary>
            This class is for XRLReadFileResponse
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFileResponse.Compare(ServerTestFramework.LiveService.Storage.XRLWriteFile)">
            <summary>
            Compare the readFile response with the writeFile request;
            This method can be used to check if all columns are set up correctly
            in the database for upload file request
            </summary>
            <param name="other">requests that upload the file</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLRemoveFile">
            <summary>
            This class is for delete a file from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.#ctor(System.String,System.UInt32,System.String)">
            <summary>
            XRLRemoveFile constructor that takes two parameters
            </summary>
            <param name="pathName">pathName of the file that need to be removed</param>
            <param name="TitleID">titleID of the file that need to be removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter RemoveFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.Execute">
            <summary>
            Send XRLRemoveFile http request to stfd
            </summary>
            <param name="sServer">storage front door</param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Storage.XRLRemoveFile.Server">
            <summary>
            Set or get Storage Front door
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReportBrokenLink">
            <summary>
            Summary description for XRLReportBrokenLink.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLWriteFile">
            <summary>
            This class is used to upload a file to storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor">
            <summary>
            default constructor for XRLWriteFile
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor(System.UInt32,System.UInt32,System.String,System.UInt64)">
            <summary>
            XRLWriteFile constructor that takes four parameters
            Can be used together with stats API to upload a file
            </summary>
            <param name="titleID">titleID of the upload file</param>
            <param name="uiFileSize">filesize of the upload file in byte</param>
            <param name="pathName">stats generated pathName of the upload file</param>
            <param name="UserPuid">userPUID that upload the file</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor(System.String,System.String)">
            <summary>
            Tsunami testing: different domain has different permission type
            </summary>
            <param name="permissionType">None/All/Owner/Team/UserToken/ServiceToken/ServiceAddr</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.Verify">
            <summary>
            connect to STDB to check columns that cannot be checked by ReadFileResponse
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter WriteFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.Execute">
            <summary>
            send XRLWriteFile requests to the xstorage front door
            </summary>
            <param name="sServer"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Storage.XRLWriteFile.Server">
            <summary>
            Set or get Storage Front door
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr">
            <summary>
            MatchSessionMgr keeps track of all sessions created by Create and Split.
            It can then check the expected delay in time for a session ID to be deleted and
            verify the session no longer exists after that inverval has elapsed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.sessionIdsByTitleId">
            <summary>
            Stores all registered sessions' IDs bucketed by Title ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.RegisterSession(System.UInt32,System.Int64)">
            <summary>
            RegisterSession stores the title and session IDs of a newly created/split session in order to 
            confirm the session's subsequent deferred deletion
            </summary>
            <param name="titleId">The title ID; used to get the expected delete delay seconds for this session ID</param>
            <param name="sessionId">The newly created or split session ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.VerifyAllSessionsDeleted">
            <summary>
            Verifies all sessions registered via RegisterSession() get cleaned up.
            </summary>
            <returns>true: all sessions were cleaned up; false: a session existed after it should have been deleted</returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.RegisteredSessionsCount">
            <summary>
            Returns the total number of sessions registered with the session manager
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.SessionIdList">
            <summary>
            Makes the code in this class a little more legible, otherwise adds nothing new to the conversation
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLxnaddr">
            <summary>
            Summary description for XRLxnaddr.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.Constants.X_ATTRIBUTE_SESSION_ID">
            <summary>
            The following const are system defined context/properties
            </summary>		
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.Constants.CONTEXT_MYCONTEXT1">
            <summary>
            The following const are copied from xenonmatchTest.spa.h file
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.Constants.getNumDBForTitle(System.UInt32)">
            <summary>
            return the number of database that a particular title resides
            </summary>
            <param name="titleID"></param>
            <returns></returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.MatchUtil.verifySessionExistsCmd">
            <summary>
            SQL statement template for determining if a session exists in a particular table
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchUtil.CalculateOffsets(System.UInt32,ServerTestFramework.LiveService.Matchmaking.XrlAttributeBase[],System.UInt32[]@,System.UInt32@)">
            <summary>
            Calculate a set of offsets given a base message size and collection of attributes.
            The total message size is and offset collection are returned as out parameters.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitle(System.UInt32)">
            <summary>
            Retrieves a single match title's info from NPDB
            </summary>
            <param name="titleId">A valid Match title ID (i.e. defined in the npdb.dbo.t_match_titles table)</param>
            <returns>An instance of MatchTitle initialized with the values retrieve from the NPDB server</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitles" -->
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitlesByIds(System.Collections.IEnumerable)" -->
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam">
            <summary>
            This class is used to represent both attributes in schema AND
            search parameters in the search requests.
            In Xenon: 
            Search Parameters:	int32/int64/float32/float64/dateTime are allowed, while string and blobs are not.
            Session Attributes: string/int32/int64/float32/float64/dateTime/null are allowed, blobs are not.
            Search Results: same as Session Attributes.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLXeIntValue">
            <summary>
            can be used represent both int32 and int64 values
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeIntValue.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeFloatValue.#ctor(System.Single)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeDoubleValue.#ctor(System.Double)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeStringValue.#ctor(System.String)">
            <summary>
            create a stringParam with specified string value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeDateTimeValue.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession">
            <summary>
            Since WireData doesn't support inheritance (it doesn't serialize parent class's fields),
            Instead of inheriting from XRLCreateUpdateSession, we create a wrapper of that
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[])">
            <summary>
            create session with provided attributes: this might or might not have the above 8 default attribs
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor(System.Byte[])">
            <summary>
            update session constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.RetrieveCurrentValue(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Fills in the given XRLXeAttribParam with the value of the current one, if it exists.
            Leaves it unchanged otherwise.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for, and fill with the value.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.FindAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Find a single attribute with the given parameter.  Does not use the passed-in value of
            that attribute.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for</param>
            <returns>A handle to the XRLXeAttribParam that currently exists and matches the name of the
            passed-in attribute.  Think before assigning to this!  Returns null if none is found.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.UpdateAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Updates a single attribute.  Unlike UpdateAttribs(), the attribute must be found in the
            base attribs array
            </summary>
            <param name="updateAttrib"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo@)">
            <summary>
            send createSession requests
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send updateSession requests
            </summary>
            <param name="sServer"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession">
            <summary>
            counterPart for XMATCH_DELETE_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession.#ctor(System.Byte[],System.UInt32)">
            <summary>
            delete session with specified sessionID
            </summary>
            <param name="sessID"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send deleteSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.AlternatePresenceUrl">
            <summary>
            This is being used for stress test: redirect queryAffiliate call to presence emulator
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.AddParams(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[])">
            <summary>
            append search parameters at the end of search requests
            </summary>
            <param name="Params"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.FindAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Find a single attribute with the given parameter.  Does not use the passed-in value of
            that attribute.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for</param>
            <returns>A handle to the XRLXeAttribParam that currently exists and matches the name of the
            passed-in attribute.  Think before assigning to this!  Returns null if none is found.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRL2SearchResults@)">
            <summary>
            For stress testing, we don't care what's being returned in the results
            </summary>
            <param name="stress"></param>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.Execute(System.Net.IPEndPoint,System.UInt32,ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[],ServerTestFramework.LiveService.Matchmaking.XRL2SearchResults@)">
            <summary>
            send searchSession http request to matchmaking front door and get results back
            This one is used by functional test to check search results' details.
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="dwExpectedNumResults">expected number of sessions in the searchResults</param>
            <param name="ExpectedAttribs">expected number of attributes in the returned session</param>
            <param name="Response">actual response got back from match servers</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLIntAttribute">
            <summary>
            int attribute when creating or updating a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLIntAttribute.#ctor(System.UInt32,System.Int64)">
            <summary>
            XRLIntAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLStringAttribute">
            <summary>
            string attribute when creating or updateing a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLStringAttribute.#ctor(System.UInt32,System.String)">
            <summary>
            XRLStringAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBlobAttribute">
            <summary>
            blob attribute when creating or updating a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLBlobAttribute.#ctor(System.UInt32,System.Byte[])">
            <summary>
            XRLBlobAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBaseSession">
            <summary>
            basic fields of createSession request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession">
            <summary>
            counterPart of XMATCH_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo@)">
            <summary>
            send CreateSession requests to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="Response">createSession response</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send updateSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.AddAttribs(ServerTestFramework.WireData[])">
            <summary>
            append title attributes at the end of create/updateSession requests
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.SetAttribs(ServerTestFramework.WireData[])">
            <summary>
            Change the attributes of a session object
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.AppendAttribs(ServerTestFramework.LiveService.Matchmaking.XrlAttributeBase[])">
            <summary>
            append title attributes at the end of create/updateSession requests
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.GetAttribute(System.UInt32)">
            <summary> 
            Retrieve an attribute wiredata based on the ID
            </summary>
            <param name='attributeId'>Match AttributeID to retrieve</param>
            <returns>Attribute wiredata object or null if none exists</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo">
            <summary>
            counterPart for XMATCH_SESSIONINFO
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox">
            <summary>
            counterPart for XMATCH_DEAD_XBOX
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox.#ctor">
            <summary>
            create a deadxbox request with random values
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox.Execute(System.Net.IPEndPoint)">
            <summary>
            send individual deadxbox request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession">
            <summary>
            counterPart for XMATCH_DELETE_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession.#ctor(System.Byte[])">
            <summary>
            delete session with specified sessionID
            </summary>
            <param name="sessID"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send deleteSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLAttribParam">
            <summary>
            This class is used to represent BOTH session attributes returned in search Results
            AND search parameters in the search requests
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLIntParam.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLStringParam.#ctor(System.String)">
            <summary>
            create a stringParam with specified string value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLBlobParam.#ctor(System.Byte[])">
            <summary>
            create a blob parameter with specified blob value
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBaseSearchSession">
            <summary>
            basic fields of search session request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession">
            <summary>
            counter part of XMATCH_SEARCH_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.#ctor(System.UInt32)">
            <summary>
            create a search session request with specified spIndex
            </summary>
            <param name="spIndex">stored procedure index that used for search request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.AddParams(ServerTestFramework.LiveService.Matchmaking.XRLAttribParam[])">
            <summary>
            append search parameters at the end of search requests
            </summary>
            <param name="Params"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            send searchSession http request to match front door and get response
            This one assumes nothing about search results. i.e. it works for both
            returned session with and without attributes.
            So it can be used by both functional and stress tests
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="Response">search result</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            For stress test, we don't care what's being returned in the search results
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Net.IPEndPoint,System.UInt32,ServerTestFramework.WireData[],ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            send searchSession http request to matchmaking front door and get results back
            This one is used by functional test to check search results' details.
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="dwExpectedNumResults">expected number of sessions in the searchResults</param>
            <param name="ExpectedAttribs">expected number of attributes in the returned session</param>
            <param name="Response">actual response got back from match servers</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSingleSearchResult">
            <summary>
            counterPart of XMATCH_SEARCH_RESULT
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSearchResults">
            <summary>
            XMATCH_SEARCHRESULT_HEADER + sessions returned
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession">
            <summary>
            XRL for splitting a session during host migration
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.#ctor(System.Byte[],System.UInt32,ServerTestFramework.LiveService.Matchmaking.XRLxnaddr,ServerTestFramework.WireData[])">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.#ctor(ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession)">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRL2SingleSearchResult@)">
            <summary>
            Send SplitSession request
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLTitleChange">
            <summary>
            Xenon: 1st new API for Xenon
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLTitleChange.Execute(System.Net.IPEndPoint)">
            <summary>
            send individual deadxbox request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLAddString">
            <summary>
            Summary description for XRLAddString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLGetString">
            <summary>
            Summary description for XRLGetString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLTitleIDRequest">
            <summary>
            Summary description for XRLTitleIDRequest.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLLogString">
            <summary>
            Summary description for XRLLogString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLVetString">
            <summary>
            Summary description for XRLVetString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.GI.Pong">
            Context and properties that are exposed for the pong
            test title ID.
        </member>
        <member name="T:ServerTestFramework.LiveService.GI.Pong.Context">
            Context IDs used for creating contexts
            see named enums below for context values.
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.SendablePacket.GenerateRandomString(System.Int32)">
            <summary>
            Generate a random string of characters
            </summary>
            <param name="size">Lenght of string</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest">
             <summary>
             Summary description for CReflectionRequest.
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.UInt16,System.UInt16,System.String)">
            <summary>
            Reflection Request, use this constructor for making bad packets
            </summary>
            <param name="pv">Protocol version</param>
            <param name="rt">Request type</param>
            <param name="rps">Return packet size</param>
            <param name="pl">Payload</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.String)">
            <summary>
            Reflection Request, simple constructor
            </summary>
            <param name="rt">Request type</param>
            <param name="pl">Payload</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.Int32)">
            <summary>
            Reflection Request, simple constructor
            </summary>
            <param name="rt">Request type</param>
            <param name="payloadsize">Payload size, automatically generates a random string</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.Int32)">
            <summary>
            Reflection Request, even simpler constructor
            </summary>
            <param name="payloadsize">Payload size, automatically generates a random string</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CICMPRequest">
             <summary>
             Summary description for CICMPRequest.
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.#ctor(System.UInt16,System.UInt16,System.Byte[],System.UInt64,System.UInt32)">
            <summary>
            ICMP Request constructor, use this for making bad packets
            </summary>
            <param name="pv">Protocol version</param>
            <param name="rt">Request type</param>
            <param name="signature">Signature</param>
            <param name="ts">Timestamp</param>
            <param name="packetsize">Packet size</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.#ctor(ServerTestFramework.LiveService.Diagnostics.CReflectionReply)">
            <summary>
            ICMP Request, simple constructor
            </summary>
            <param name="reply">Reply packet from a Reflection Request call</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.SetTimestamp(System.Byte[],System.UInt64)">
            <summary>
            Both parameters must come from a CReflectionReply message
            </summary>
            <param name="signature"></param>
            <param name="timestamp"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CReflectionReply">
             <summary>
             Reply packet for Reflection request
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Cleanser.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Cleanser.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingMachines">
            <summary>
            The current machines that are in some way involved in reporting
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Uninitialized">
            <summary>
            Uninitialized value
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Client">
            <summary>
            Client - Source for most server side events
            Hey, I can dream, can't I?
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xbos">
            <summary>
            XBOS -
            Content Referral, Argo Licensing, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xuacs">
            <summary>
            XUACS -
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xcbk">
            <summary>
            XCBK -
            Account Provisioning/Deprovisioning
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.PresenceINH">
            <summary>
            Presence -
            TitleStart/TitleEnd, SessionStart/SessionEnd, GuestChanges, Messaging
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.StringSvr">
            <summary>
            StringServer -
            Fusion, Banner Click/View/Purchase
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.WMIS">
            <summary>
            WMIS -
            All argo related metadata
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.UODB">
            <summary>
            UODB -
            All user related data, achievements, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.ProductDB">
            <summary>
            ProductDB -
            All product data, offers, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Cleanser">
            <summary>
            Cleanser -
            Server where all of the INH/Frontdoor data is collected
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.SSIS">
            <summary>
            SSIS -
            Server where all of the UODB and WMIS data is collected
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Filter">
            <summary>
            FilterDB, distribution location for data passing through the cleansers
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Reporting">
            <summary>
            Main reporting database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.OLAP">
            <summary>
            Main aggregation database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Rosetta">
            <summary>
            IIS Server that serves out reports
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Archive">
            <summary>
            Archive database for the reporting database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Realtime">
            <summary>
            Realtime reports database
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XBLReports">
            <summary>
            Xbox Live Reports
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingCommon">
            <summary>
            Main class for reporting test code
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingCommon.ClearInstance(System.Boolean)">
            <summary>
            Clears the current singleton
            Should ONLY be done at the beginning of a test group
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.Instance">
            <summary>
            Returns the singleton for this class
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingDB">
            <summary>
            A reference to the reportingDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingSSISDB">
            <summary>
            A reference to the SSISDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingArchiveDB">
            <summary>
            A reference to the Archive DB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingOLAPDB">
            <summary>
            A reference to the OLAPDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingIIS">
            <summary>
            A reference to the ReportIIS - Report Service
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.RealtimeDB">
            <summary>
            A reference to the ReportingRealtime database
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.FilterDBs">
            <summary>
            A reference to ALL of the filterdbs
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.Cleansers">
            <summary>
            A reference to ALL of the cleansers
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingData">
            <summary>
            A reference object class representing a data set
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.RawData">
            <summary>
            Raw object data (Caller must know how to cast the data)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.TableCounts">
            <summary>
            ReportingData is a series of tables and respective row counts
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType">
            <summary>
            This classifies the data that a ReportingData object contains
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.Query">
            <summary>
             ReportingData object is a query or set of queries
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.RawData">
            <summary>
            ReportingData object contains raw data
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.TableCounts">
            <summary>
            ReportingData object contains a set of tables and respective rowcounts
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDataLoader">
            <summary>
            A class containing the logic necessary to load data for a particular type of data
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDataLoader.InjectSingleData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingEvent">
            <summary>
            A reference object representing an individual event
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_i_time(System.DateTime)">
            <summary>
            fn_get_i_time 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_dt_datetime(System.Int32,System.Int32)">
            <summary>
            fn_get_dt_time 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_i_date(System.DateTime)">
            <summary>
            fn_get_i_date 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_dt_date(System.Int32)">
            <summary>
            fn_get_dt_date 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetTopContent(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            API to get single row from a table
            </summary>
            <param name="sProvider"> SQLDataProvider </param>
            <param name="szTable"></param>
            <returns> SqlDataReader </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetContent(System.Data.SqlClient.SqlConnection,System.String,System.Collections.ArrayList)">
            <summary>
            API to get single row from a table with conditions
            </summary>
            <param name="sProvider"> SQLDataProvider </param>
            <param name="szTable"></param>
            <param name="aList"> ArrayList of ColumnInfo </param>
            <returns> SqlDataReader </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CompareSingleRow(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            CompareSingleRow 
            Compare a row in two tables column by column
            Currently it only cares about Byte, Int16, Int32, Int64, Boolean and String type
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.FillColumnInfo(System.Data.SqlClient.SqlDataReader)">
            <summary>
            FillColumnInfo 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentString(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentString 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentInt(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentInt 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentBool(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentBool 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_Equal(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if two collections are equal. They are considered equal if they have the same number
            of objects and all objects from Data1 are present in Data2
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if the 2 sets of data are equal. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_Different(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if two collections are different. They are considered different if they have the different number
            of objects or objects from Data1 are not present in Data2
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if the 2 sets of data are different. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionNoRepeatedValues(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare the values of a collection against each other to find if any are repeated
            </summary>
            <param name="Data1">Name/Value Collection</param>
            <returns>True if the set of data has repeated values. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_DataPresent(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if all the elements from Data1 are present in Data2. Note that this DOES NOT mean they are equal
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if ALL elements from Data1 are present in Data2 (This does not mean that Data1 = Data2)</returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingHelper.ColumnInfo">
            <summary>
            ColumnInfo 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor for DateRange. Set dateMin and dateMax values.
            </summary>        
            <param name="minus">Delta to subtract from current time in seconds</param>
            <param name="plus">Delta to add to current time in seconds</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.Reset">
            <summary>
            Recenters the date range around the current time.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJobStatus">
            <summary>
            Job Status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJob">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_SQLJob">
            <summary>
            Using .NET built-in Job class internally
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_Completed">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_HResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_JobType">
            <summary>
            Job Type
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_Parameters">
            <summary>
            Job parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.RunJob">
            <summary>
            Execute the job
            </summary>
            <returns>The constructed SQL script to execute the job</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.UpdateStatus">
            <summary>
            Update job status
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.InvokeJob">
            <summary>
            Execute the job
            </summary>
            <returns>JobExecutionStatus</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.HResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Results">
            <summary>
            The results of this job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.StartTime">
            <summary>
            When the job was started
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.RunningTime">
            <summary>
            How long it took this job to run
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.ServerName">
            <summary>
            Name of Server the job runs in
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.JobName">
            <summary>
            Name of the job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.JobSteps">
            <summary>
            Job Steps
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Parameters">
            <summary>
            Job Parameters
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJobParameters">
            <summary>
            Placeholder class, you cast from this class to your expected job parameters.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.m_Instance">
            <summary>
            Create a singleton class
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.m_ReportingJobs">
            <summary>
            Contains all reporting jobs in this test run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.#ctor">
            <summary>
            Constructor
            The class is a singleton because it serves as a central datastore for all jobs in a test run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.ClearInstance">
            <summary>
            Clears the current singleton        
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.CreateReportingJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Factory method
            </summary>
            <param name="reportingJobType"></param>
            <param name="reportingJobParams"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.Instance">
            <summary>
            Returns the singleton for this class
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportingService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.#ctor(System.String)">
            Reporting Service constructor
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethods">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSecureMethods(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSecureMethods(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCancelBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCancelBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginExecuteBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndExecuteBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItem(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteItem(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItem(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginMoveItem(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndMoveItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildren(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListChildren(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListChildren(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenAsync(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenAsync(System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemType(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetItemType(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetItemType(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolder(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateFolder(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateFolder(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReport(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateReport(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinition(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDefinition(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinition(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportDefinition(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateResource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContents(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetResourceContents(System.String,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetResourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContents(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetResourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetResourceContents(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParameters(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportParameters(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParameters(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportParameters(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReport(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateLinkedReport(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateLinkedReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLink(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportLink(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLink(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportLink(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReports(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListLinkedReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListLinkedReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.Render(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@,ServerTestFramework.STFLive.Reporting.Service.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginRender(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndRender(System.IAsyncResult,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@,ServerTestFramework.STFLive.Reporting.Service.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStream(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginRenderStream(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndRenderStream(System.IAsyncResult,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResource(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetRenderResource(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetRenderResource(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetExecutionOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetExecutionOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetExecutionOptions(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptions(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetCacheOptions(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetCacheOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetCacheOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetCacheOptions(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshot(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginUpdateReportExecutionSnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndUpdateReportExecutionSnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCache(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFlushCache(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFlushCache(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobs">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListJobs(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListJobs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJob(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCancelJob(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCancelJob(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSource(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateDataSource(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContents(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetDataSourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContents(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetDataSourceContents(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginEnableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndEnableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDisableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDisableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListReportsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListReportsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSources(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportDataSources(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSources(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDataSources(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePrompts(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDataSourcePrompts(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDataSourcePrompts(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshot(System.String,ServerTestFramework.STFLive.Reporting.Service.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateReportHistorySnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateReportHistorySnapshot(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptions(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportHistoryOptions(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportHistoryOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptions(System.String,System.Boolean@,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportHistoryOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportHistoryOptions(System.IAsyncResult,System.Boolean@,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimit(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportHistoryLimit(System.String,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportHistoryLimit(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimit(System.String,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportHistoryLimit(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportHistoryLimit(System.IAsyncResult,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistory(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListReportHistory(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListReportHistory(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshot(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteReportHistorySnapshot(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteReportHistorySnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItems(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFindItems(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFindItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSchedule(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateSchedule(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetScheduleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetScheduleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetScheduleProperties(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetScheduleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReports(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListScheduledReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListScheduledReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedules">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSchedules(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSchedules(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginPauseSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndPauseSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginResumeSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndResumeSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateDataDrivenSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateDataDrivenSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetDataDrivenSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSubscriptionProperties(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetDataDrivenSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetDataDrivenSubscriptionProperties(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscription(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteSubscription(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQuery(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginPrepareQuery(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndPrepareQuery(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryAsync(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryAsync(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettings(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetExtensionSettings(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettings(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginValidateExtensionSettings(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndValidateExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptions(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSubscriptionsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSubscriptionsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensions(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListExtensions(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListExtensions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsAsync(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsAsync(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEvents">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListEvents(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListEvents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEvent(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFireEvent(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFireEvent(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasks">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSystemTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSystemTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasks">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRoles">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSystemRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSystemRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRoles">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRole(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateRole(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRole(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteRole(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRoleProperties(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetRoleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetRoleProperties(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRoleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetRoleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetRoleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPolicies">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemPolicies(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPolicies(ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSystemPolicies(ServerTestFramework.STFLive.Reporting.Service.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesAsync(ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesAsync(ServerTestFramework.STFLive.Reporting.Service.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPolicies(System.String,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetPolicies(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetPolicies(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPolicies(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetPolicies(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurity(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginInheritParentSecurity(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndInheritParentSecurity(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissions">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemPermissions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissions(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetPermissions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUser(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginLogonUser(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndLogonUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.Logoff">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginLogoff(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndLogoff(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader.ReportServerVersionNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader.ReportServerEdition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Policy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Policy.GroupUserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Policy.Roles">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Role">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Role.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Role.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Task">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.TaskID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Event">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Event.Type">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.ExtensionType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.LocalizedName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.Visible">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Delivery">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Render">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Data">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.All">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Subscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.SubscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Owner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.VirtualPath">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Report">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.DeliverySettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.LastExecuted">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.LastExecutedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.IsDataDriven">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings.ParameterValues">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference.ParameterName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference.FieldAlias">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Label">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ActiveState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.DeliveryExtensionRemoved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.DeliveryExtensionRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.SharedDataSourceRemoved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.SharedDataSourceRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.MissingParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.MissingParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.InvalidParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.InvalidParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.UnknownReportParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.UnknownReportParameterSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.DisplayName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.ReadOnly">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Encrypted">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.IsPassword">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.ValidValues">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidValue.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidValue.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.CommandType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.CommandText">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.Timeout">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.TimeoutSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Field">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Field.Alias">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Field.Name">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Fields">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Query">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.CaseSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.CaseSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Collation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.AccentSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.AccentSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.KanatypeSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.KanatypeSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.WidthSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.WidthSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Name">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.True">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.False">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.Auto">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan.DataSet">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ConnectString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.CredentialRetrieval">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.WindowsCredentials">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ImpersonateUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ImpersonateUserSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Prompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.UserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Password">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Enabled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.EnabledSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Prompt">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Store">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Integrated">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.None">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceReference.Reference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.InvalidDataSourceReference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Schedule">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.ScheduleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Definition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Creator">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.NextRunTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.NextRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.LastRunTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.LastRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.ReferencesPresent">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.State">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.StartDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.EndDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DailyRecurrence">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RecurrencePattern">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DailyRecurrence.DaysInterval">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.WeeksInterval">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.WeeksIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Sunday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Monday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Tuesday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Wednesday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Thursday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Friday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Saturday">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MinuteRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MinuteRecurrence.MinutesInterval">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence.Days">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.January">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.February">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.March">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.April">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.May">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.June">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.July">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.August">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.September">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.October">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.November">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.December">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.WhichWeek">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.WhichWeekSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.FirstWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.SecondWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.ThirdWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.FourthWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.LastWeek">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference.ScheduleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference.Definition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.NoSchedule">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Ready">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Running">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Paused">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Expired">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Failing">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.HistoryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.Size">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.DataSourceID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.Prompt">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSource">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSource.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSource.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Job">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.JobID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Machine">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.StartDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Action">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Status">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.Render">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.SnapshotCreation">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.ReportHistoryCreation">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum.User">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum.System">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.New">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.Running">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.CancelRequested">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.TimeExpiration">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.TimeExpiration.Minutes">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleExpiration">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleExpiration.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.TypeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Nullable">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.NullableSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.AllowBlank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.AllowBlankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.MultiValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.MultiValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.QueryParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.QueryParameterSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Prompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.PromptUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.PromptUserSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Dependencies">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValues">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValues">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.State">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.StateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ErrorMessage">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Boolean">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.DateTime">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Integer">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Float">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.String">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.HasValidValue">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.MissingValidValue">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.HasOutstandingDependencies">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.DynamicValuesUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.DataSourceName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.UserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.Password">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Warning">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Code">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Severity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.ObjectName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.ObjectType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Message">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CatalogItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.VirtualPath">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Size">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.SizeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Hidden">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.HiddenSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreationDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreatedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.MimeType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ExecutionDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ExecutionDateSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Unknown">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Folder">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Report">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Resource">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.LinkedReport">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.DataSource">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Property">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Property.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Property.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SearchCondition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SearchCondition.Condition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SearchCondition.ConditionSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum.Contains">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum.Equals">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SessionHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.SessionId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.IsNewExecution">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.ExecutionDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.ExpirationDateTime">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceHeader.ItemNamespace">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum.PathBased">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum.GUIDBased">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.BatchHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.BatchHeader.BatchID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum.Live">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum.Snapshot">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum.And">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum.Or">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExecuteBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MoveItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateLinkedReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.ParametersUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.StreamIds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.UpdateReportExecutionSnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FlushCacheCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.EnableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DisableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.KeepExecutionSnapshots">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.IsSystem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.SystemLimit">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PauseScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ResumeScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs.Changed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FireEventCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs.InheritParent">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.InheritParentSecurityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.LogonUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.LogoffCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingQueryType">
            <summary>
            Type of query to do against a particular table
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingPair">
            <summary>
            Helper class
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryRunner">
            <summary>
            Runs a query against a Reporting server
            
            First deconstructs the query, running a count query first
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryRunner.RunQuery(System.Collections.Generic.List{System.String},System.String,System.String,System.Int32@,System.Collections.ArrayList@)">
            <summary>
            Order expected (count query then select query
            </summary>
            <param name="queries">Queries to run against the server</param>
            <param name="ReportingServer">Server to hit</param>
            <param name="ReportingDB">Database to hit</param>
            <param name="count"></param>
            <param name="Results">Results and counts from queries</param>
            <returns>If there were any errors</returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryBuilder">
            <summary>
            Contains helpful utility functions for building SQL queries
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryBuilder.BuildQuery(System.Type,System.Collections.Generic.Queue{ServerTestFramework.STFLive.Reporting.ReportingPair},ServerTestFramework.STFLive.Reporting.ReportingQueryType)">
            <summary>
            
            </summary>
            <param name="ReportingTableType"></param>
            <param name="KnownValues"></param>
            <param name="TypeOfQuery"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingTable">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMaxUserPUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMinUserPUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.FindNextUserID(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.FindNextUserID(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingVerification">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_Completed">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_HResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_Parameters">
            <summary>
            Job parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingVerification.RunJob">
            <summary>
            Execute the job
            </summary>
            <returns>The constructed SQL script to execute the job</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.HResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Results">
            <summary>
            The results of this job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.StartTime">
            <summary>
            When the job was started
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.RunningTime">
            <summary>
            How long it took this job to run
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.JobName">
            <summary>
            Name of the job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.JobSteps">
            <summary>
            Job Steps
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Parameters">
            <summary>
            Job Parameters
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XBLReport">
            <summary>
            Abstract class for Xbox Live Report objects. Each object will map to a specific report
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CIQDatafeed">
            <summary>
            This is the CIQ Datafeed export job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CIQDatafeed.CIQDatafeed_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux">
            <summary>
            This is the ReportingDB Daily Processing Crux job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.RunJob">
            <summary>
            Execute the job. If the job contains a valid parameter object then it will create
            the SQL to run the stored procedure for Daily Processing Crux.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.UpdateStatus">
            <summary>
            Update Job status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.DailyProcessing_Crux_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage">
            <summary>
            This is the Game Usage Daily Processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.RunJob">
            <summary>
            Execute the job. If the job contains a valid parameter object then it will create
            the SQL to run the stored procedure for Game Usage Daily Processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.UpdateStatus">
            <summary>
            Update Job status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.DailyProcessing_GameUsage_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing">
            <summary>
            This is the OLAP ACHIEVEMENT CUBE daily processing job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapJob">
            <summary>
            OlapJob. From here the SSAS processing jobs will be derived.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapJob.RunJob">
            <summary>
            Run job. If no parameters are set then default job will be executed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapJob.UpdateStatus">
            <summary>
            Update Olap Job Status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapJob.OlapJobParameters">
            <summary>
            Parameters for Olap Cube processing jobs
            Default settings are for regular job to run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.DailySSAS_AchievementProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing">
            <summary>
            This is the OLAP CRUXUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.DailySSAS_CruxUsageProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing">
            <summary>
            This is the OLAP GAMEUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.DailySSAS_GameUsageProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables">
            <summary>
            This is the FilterDB:Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.FilterDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration">
            <summary>
            This is the Olap Partition tool creation job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.OlapCubeGeneration_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapFullProcessGameUsageJob">
            <summary>
            OlapFullProcessGameUsageJob
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables">
            <summary>
            This is the ReportRealtimeDB: Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.RealtimeDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing">
            <summary>
            This is the ReportRealtimeDB: Realtime Processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.RealtimeDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.ReportArchiveDB_TransferFactData_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.ReportArchiveDB_UpdateFilegroups_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.ReportingDB_DropArchivedFacts_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables">
            <summary>
            This is the ReportingDB:Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.ReportingDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS">
            <summary>
            This is the SCGExport SSIS package job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.SCGExport_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS">
            <summary>
            This is the SCGImport SSIS package job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.SCGImportFeed_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SSISJob">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS">
            <summary>
            This is the UODB Accounts SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.UODB_Accounts_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS">
            <summary>
            This is the UODB Music SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.UODB_Music_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS">
            <summary>
            This is the UODB Offers SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.UODB_Offers_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS">
            <summary>
            This is the Daily UODB SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.UODB_Primary_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS">
            <summary>
            This is the UODB Realtime SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.UODB_Realtime_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS">
            <summary>
            This is the Weekly UODB SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.UODB_Secondary_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS">
            <summary>
            This is the UODB Video SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.UODB_Video_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.WMIS_Download">
            <summary>
            This is the WMIS Download job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.WMIS_Download.WMIS_Download_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.StagingTable">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_achievements">
            <summary>
            A class representing T_achievements table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int32,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int32,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_base_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_content_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_content_package">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions">
            <summary>
            A class representing T_dmp_purchase_transactions table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Guid,System.Int32)">
            <summary>
            AddOneRow
            if i_purchase_type_id=1 then Xbox Live Offers, if 2 then MusicNet, if 3 then SyncCast
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.GetContent(System.Data.SqlClient.SqlConnection,System.Guid,System.String)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_music">
            <summary>
            A class representing T_dmp_purchase_transactions_music table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_music.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_video">
            <summary>
            A class representing T_dmp_purchase_transactions_video table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_video.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_elite_migration_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_fdb_time">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_guest_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_machines">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetMaxMachinePUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetMinMachinePUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.FindNextMachineID(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.FindNextMachineID(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.String)">
            <summary>
            GetContent
            szTable should be "t_machines" or "t_machines_rt"
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_migrate_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_msg_snd_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_new_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_presence_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_provision_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_publisher_titles">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_purchase_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_content_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_content_xbox360_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_guest_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_migrate_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_msg_snd_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_new_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_presence_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_provision_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_purchase_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_session_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_session_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.AddOneRow(System.Data.SqlClient.SqlCommand)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions">
            <summary>
            A class representing T_subscriptions table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32,System.String,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32,System.String,System.DateTime)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_titles">
            <summary>
            A class representing T_titles
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.FindNextTitleId(System.Data.SqlClient.SqlCommand,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.FindNextTitleId(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Byte,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Byte,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.GetOneTitle(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            GetOneTitle
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_culture_details">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_feature_data">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_users">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddMultipleRowsInTrans(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddMultipleRowsInTrans
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateMultipleRowsInTrans(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddMultipleRowsInTrans
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.String)">
            <summary>
            GetContent
            szTable should be "t_users" or "t_users_rt"
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_users_rt">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users_rt.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts">
            <summary>
            A class representing T_user_musicnet_accounts table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly">
            <summary>
            A class representing T_user_per_client_type_data_weekly table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings">
            <summary>
            A class representing T_user_settings table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles">
            <summary>
            A class representing T_xmsg_user_titles table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification.#ctor(ServerTestFramework.STFLive.Database.ReportingDB,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification.VerifyFactTableSingle(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification_BVT">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapReportData">
            <summary>
            ReportingData object to submit queries to OlapDB for reports
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>        
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_RawData">
            <summary>
            Raw object data (Caller must know how to cast the data)
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_ReportType">
            <summary>
            Report that this data object maps to
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.RunDebugQuery">
            <summary>
            Run a query in OLAPDB to obtain the raw data
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.InitializeDataObject(ServerTestFramework.STFLive.Reporting.XBLReports)">
            <summary>
            Initialize ReportingData object.
            ** In the future this should be modified to generate dynamic data **
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.GetReportDataQueries(System.String)">
            <summary>
            Parse the Report Test Script and extract all OLAP queries with their respective
            report section and test case.
            </summary>
            <param name="TestScriptFileName">Report Test script file</param>
            <returns>Hashtable in the form of (Key)ReportQueryNumber (Value)|ReportSectionNumber|TestCaseNumber|Query|</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapReportData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>        
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent">
            <summary>
            CleanserTCPEvent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.#ctor">
            <summary>
            CleanserTCPEvent constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.ConnectToCleanser(System.Int32,System.Int32)">
            <summary>
            ConnectToCleanser
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.DisconnectFromCleanser(System.Int32)">
            <summary>
            DisconnectFromCleanser
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.SocketSend(System.Int32,System.Byte[])">
            <summary>
            SocketSend
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.SendMessage(System.Int32,System.Int32,System.String)">
            <summary>
            SendMessage
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.MigrateAccountTCPEvent">
            <summary>
            MigrateAccountTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ProvisionTCPEvent">
            <summary>
            ProvisionTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DeprovisionTCPEvent">
            <summary>
            DeprovisionTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ContentTCPEvent">
            <summary>
            ContentTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ContentXeTCPEvent">
            <summary>
            ContentXeTCPEvent - Not Done
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceTitleStartTCPEvent">
            <summary>
            PresenceTitleStartTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceTitleEndTCPEvent">
            <summary>
            PresenceTitleEndTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SessionStartTCPEvent">
            <summary>
            SessionStartTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SessionEndTCPEvent">
            <summary>
            SessionEndTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceGuestTCPEvent">
            <summary>
            PresenceGuestTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XePurchaseTCPEvent">
            <summary>
            XePurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.EliteMigrationTCPEvent">
            <summary>
            EliteMigrationTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GenericTCPEvent">
            <summary>
            ContentTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ArgonTCPEvent">
            <summary>
            ArgonTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceOfferPurchaseTCPEvent">
            <summary>
            GeoFenceOfferPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceContentReferralTCPEvent">
            <summary>
            GeoFenceContentReferralTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoPurchaseTCPEvent">
            <summary>
            GeoFenceVideoPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoAcquireURLTCPEvent">
            <summary>
            GeoFenceVideoAcquireURLTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoAcquireLicenseTCPEvent">
            <summary>
            GeoFenceVideoAcquireLicenseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerViewAggTCPEvent">
            <summary>
            BannerViewAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerViewTCPEvent">
            <summary>
            BannerViewTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerClickAggTCPEvent">
            <summary>
            BannerClickAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerClickTCPEvent">
            <summary>
            BannerClickTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerPurchaseTCPEvent">
            <summary>
            BannerPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerPurchaseAggTCPEvent">
            <summary>
            BannerPurchaseAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FusionTCPEvent">
            <summary>
            FusionTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FusionAggTCPEvent">
            <summary>
            FusionAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.LicenseTCPEvent">
            <summary>
            LicenseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PurchaseOfferTCPEvent">
            <summary>
            PurchaseOfferTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData">
            <summary>
            GameUsageFactData
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingBVTData">
            <summary>
            GameUsageFactData
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="M:RealtimeDBStressData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader">
            <summary>
            This class contains the logic necessary to load Data objects into the Reporting Realtime Database
            or FilterDB databases that feed the Realtime system.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_MinUserIndex">
            <summary>
            UserPuid index - Puid to use in the next data generation
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_Titles">
            <summary>
            Array of titles to use
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_Offers">
            <summary>
            Array of offers to use
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_TargetTable">
            <summary>
            Target table to insert data into
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.GetSupportedDatabases">
            <summary>
            Get the database names supported by this loader object
            </summary>
            <returns>List of database names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.InjectSingleData">
            <summary>
            This method creates a SQL query to add a single row of data into specific tables of a database.
            </summary>        
            <returns>SQL string to add data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.IncreaseUserDataIndex">
            <summary>
            Internal function to increase data index
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.MinUserIndex">
            <summary>
            Initialize the data index
            </summary>
            <param name="SeedIndex">Seed value to use</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.BillingEmulatorController">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.SetAction(ServerTestFramework.LiveService.Emulators.MethodEnum,System.Int32,System.UInt32,System.String,System.Int32,System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginSetAction(ServerTestFramework.LiveService.Emulators.MethodEnum,System.Int32,System.UInt32,System.String,System.Int32,System.String,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndSetAction(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.GetActions">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginGetActions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndGetActions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.GetMethodActions(ServerTestFramework.LiveService.Emulators.MethodEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginGetMethodActions(ServerTestFramework.LiveService.Emulators.MethodEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndGetMethodActions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.Clear">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginClear(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndClear(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EnableLogging(ServerTestFramework.LiveService.Emulators.MethodEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginEnableLogging(ServerTestFramework.LiveService.Emulators.MethodEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndEnableLogging(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.DisableLogging">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginDisableLogging(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndDisableLogging(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.GetLastCallParameters(ServerTestFramework.LiveService.Emulators.MethodEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginGetLastCallParameters(ServerTestFramework.LiveService.Emulators.MethodEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndGetLastCallParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.ClearLastCallParameters">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.BeginClearLastCallParameters(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.BillingEmulatorController.EndClearLastCallParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.MethodEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ActivateToken">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.AddComment">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.AddPaymentInstrument">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.AddRoleAssignment">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.AddViolation">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.CancelSubscription">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.CheckProvisioningStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ConvertSubscription">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ConvertSubscriptionEx">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.CreateAccount">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.DeprovisionServices">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetAccountIdFromAdminPUID">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetAccountInfo">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetComments">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetEligibleOfferings">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetKey">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetPaymentInstruments">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetSubscriptions">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetSubscriptionStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.GetTokenInfoEx">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.MigrateOffer">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ProvisionServices">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.PurchaseItem">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.PurchaseOffering">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.PurchaseOfferingEx">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ReinstateSubscription">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.RemovePaymentInstrument">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.RemoveRoleAssignment">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.RemoveViolation">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.SettleBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.SwitchPaymentInstruments">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.TestConnection">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.TransferBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.UpdateAccountInfo">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.UpdatePaymentInstrumentInfo">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.UpdateSubscriptionInfo">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.MethodEnum.ValidateProvisioningData">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.Action">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.method">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.waitSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.hresult">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.errorMessage">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.instanceCount">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.identifier">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.Action.outParameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.CallParameter">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.CallParameter.Name">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.CallParameter.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.DmpEmulatorController">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.SetAction(ServerTestFramework.LiveService.Emulators.DmpMethodEnum,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String,System.Object[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.BeginSetAction(ServerTestFramework.LiveService.Emulators.DmpMethodEnum,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String,System.Object[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.EndSetAction(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.GetActions">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.BeginGetActions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.EndGetActions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.GetMethodActions(ServerTestFramework.LiveService.Emulators.DmpMethodEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.BeginGetMethodActions(ServerTestFramework.LiveService.Emulators.DmpMethodEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.EndGetMethodActions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.Clear">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.BeginClear(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Emulators.DmpEmulatorController.EndClear(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.DmpMethodEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.AddProvisionedBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.AddPromotionalBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.RegisterUser">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.UpdateRegistration">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.PurchaseItem">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.CancelPurchaseItem">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetBalanceDetails">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetStatement">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetSingleTransactionHistory">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.SetStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetUserProperties">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.SetUserProperties">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.GetBalancePolicy">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.CreditBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.DebitBalance">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpMethodEnum.TestConnection">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Emulators.DmpAction">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.method">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.waitSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.errorCode">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.errorMessage">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.canRetry">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.instanceCount">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.identifier">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Emulators.DmpAction.outParameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegressionReport">
            <summary>
            Summary description for Report.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDB.OpenSQLConnection">
            <summary>
            Asynchronously attempts to connect to all RegDB server IPs and returns as soon as a successful connection is made.
            Once one is found, the server name is cached so subsequent attempts return much quicker.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBTreeReader">
            <summary>
            Retrieves a node tree containing every test group and case that RegDB contains for a specific suite.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBInquirer">
            <summary>
            Represents a specific component (suite, group or case) on which queries can be performed.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String)">
            <summary>
            This query is about a specific test suite.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String,System.String)">
            <summary>
            This query is about a specific test group.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String,System.String,System.String)">
            <summary>
            This query is about a specific test case.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetHistory">
            <summary>
            Retrieves the history of the component that this object represents.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory,ServerTestFramework.Report.Destination)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            /// if outDst is non-null, then the log is pushed into a specific reporting destination rather than returned as a string
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.String,System.String,System.UInt32)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.UInt32)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.UInt32,ServerTestFramework.Report.Destination)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            if outDst is non-null, then the log is pushed into a specific reporting destination rather than returned as a string
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.CancelGetLog">
            <summary>
            Cancels a currently running GetLog() request.
            This blocks until log retrieval is actually halted.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory">
            <summary>
            represents a pass/fail entry for as specific build of a component.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.Alerts">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExists(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginSubscriberExists(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndSubscriberExists(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.Subscribe(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginSubscribe(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndSubscribe(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscribeAsync(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscribeAsync(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.Unsubscribe(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginUnsubscribe(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndUnsubscribe(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.UnsubscribeAsync(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.UnsubscribeAsync(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptions(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginEnumerateSubscriptions(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndEnumerateSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlert(System.Byte[],System.UInt32,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginScheduleContentAlert(System.Byte[],System.UInt32,System.String,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndScheduleContentAlert(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertAsync(System.Byte[],System.UInt32,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertAsync(System.Byte[],System.UInt32,System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.SubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.UnsubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GeneralInfo">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleList(System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.BeginGetTitleList(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.EndGetTitleList(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTags(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.BeginLinkedGamerTags(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.EndLinkedGamerTags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.MessagingImpl">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageString(System.UInt32,System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetMessageString(System.UInt32,System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetMessageString(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringAsync(System.UInt32,System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringAsync(System.UInt32,System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessage(ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginRevokeTitleUserMessage(ServerTestFramework.Web.Messaging.WCRecipientResult[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndRevokeTitleUserMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageAsync(ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageAsync(ServerTestFramework.Web.Messaging.WCRecipientResult[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessage(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendTitleUserMessage(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendTitleUserMessage(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageAsync(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageAsync(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessage(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.UInt16@,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendTitleWideMessage(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendTitleWideMessage(System.IAsyncResult,System.UInt16@,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageAsync(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageAsync(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessage(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteTitleWideMessage(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteTitleWideMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageAsync(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageAsync(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetails(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetTitleWideMessageDetails(System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetTitleWideMessageDetails(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsAsync(System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsAsync(System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessages(System.UInt32,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumTitleWideMessages(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumTitleWideMessages(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlags(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSetMessageFlags(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSetMessageFlags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitles(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCUserTitle[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumUserTitles(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumUserTitles(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCUserTitle[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitle(System.Byte[],System.String,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteUserTitle(System.Byte[],System.String,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteUserTitle(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleAsync(System.Byte[],System.String,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleAsync(System.Byte[],System.String,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessage(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginRevokeMessage(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndRevokeMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageAsync(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageAsync(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessage(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendMessage(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendMessage(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageAsync(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageAsync(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessage(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteMessage(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetails(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetMessageDetails(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetMessageDetails(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessages(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumMessages(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumMessages(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.Music">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestCreateAccount(System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginTestCreateAccount(System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndTestCreateAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestCreateAccountAsync(System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestCreateAccountAsync(System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestOrderSubscription(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginTestOrderSubscription(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndTestOrderSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestOrderSubscriptionAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.TestOrderSubscriptionAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.CancelSubscription(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginCancelSubscription(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndCancelSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.CancelSubscriptionAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.CancelSubscriptionAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.ResumeAccount(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginResumeAccount(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndResumeAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.ResumeAccountAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.ResumeAccountAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.SuspendAccount(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginSuspendAccount(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndSuspendAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.SuspendAccountAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.SuspendAccountAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountStatus(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetAccountStatus(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetAccountStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountStatusAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountStatusAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.RestoreSubscription(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginRestoreSubscription(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndRestoreSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.RestoreSubscriptionAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.RestoreSubscriptionAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderSubscription(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginOrderSubscription(System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndOrderSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderSubscriptionAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderSubscriptionAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetSubscriptionProducts(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetSubscriptionProducts(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetSubscriptionProducts(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetSubscriptionProductsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetSubscriptionProductsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountSummary(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetAccountSummary(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetAccountSummary(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountSummaryAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountSummaryAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.AuthenticateAccount(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginAuthenticateAccount(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndAuthenticateAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.AuthenticateAccountAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.AuthenticateAccountAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetBillingInfo(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetBillingInfo(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetBillingInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetBillingInfoAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetBillingInfoAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountBalance(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetAccountBalance(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetAccountBalance(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountBalanceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetAccountBalanceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderItems(System.String,System.String,System.String,System.Boolean,ServerTestFramework.Web.Music.Item[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginOrderItems(System.String,System.String,System.String,System.Boolean,ServerTestFramework.Web.Music.Item[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndOrderItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderItemsAsync(System.String,System.String,System.String,System.Boolean,ServerTestFramework.Web.Music.Item[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.OrderItemsAsync(System.String,System.String,System.String,System.Boolean,ServerTestFramework.Web.Music.Item[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetOrderByExternalOrderId(System.String,System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.BeginGetOrderByExternalOrderId(System.String,System.String,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.EndGetOrderByExternalOrderId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetOrderByExternalOrderIdAsync(System.String,System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.GetOrderByExternalOrderIdAsync(System.String,System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Music.Music.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.TestCreateAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.TestOrderSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.CancelSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.ResumeAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.SuspendAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetAccountStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.RestoreSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.OrderSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetSubscriptionProductsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetAccountSummaryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.AuthenticateAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetBillingInfoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetAccountBalanceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.OrderItemsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Music.Music.GetOrderByExternalOrderIdCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.Presence">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDS(System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetGamertagsFromXUIDS(System.UInt64[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetGamertagsFromXUIDS(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSAsync(System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSAsync(System.UInt64[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertags(System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetXUIDSFromGamertags(System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetXUIDSFromGamertags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsAsync(System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsAsync(System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfo(System.UInt64,System.UInt64,System.UInt16,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetPresenceInfo(System.UInt64,System.UInt64,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetPresenceInfo(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoAsync(System.UInt64,System.UInt64,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoAsync(System.UInt64,System.UInt64,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsEx(System.UInt64,System.UInt16,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetFriendsEx(System.UInt64,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetFriendsEx(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsExAsync(System.UInt64,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsExAsync(System.UInt64,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayers(System.UInt64,System.UInt16,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetRecentPlayers(System.UInt64,System.UInt16,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetRecentPlayers(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersAsync(System.UInt64,System.UInt16,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersAsync(System.UInt64,System.UInt16,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriends(System.Byte[],System.String,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetFriends(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetFriends(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetFriendsExCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetFriendsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.Profile">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievements(System.UInt64,System.UInt32,System.UInt16,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.BeginReadAchievements(System.UInt64,System.UInt32,System.UInt16,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.EndReadAchievements(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievementsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievementsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettings(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.BeginReadSettings(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.EndReadSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettingsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettingsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Profile.Profile.ReadAchievementsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Profile.Profile.ReadSettingsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.Query">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Add(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginAdd(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndAdd(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.AddAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.AddAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Update(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginUpdate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndUpdate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginUpdateId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndUpdateId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Search(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndSearch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIds(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginFindFromIds(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndFindFromIds(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIdsAsync(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIdsAsync(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Remove(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginRemove(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndRemove(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginRemoveId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndRemoveId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Select(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginSelect(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndSelect(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SelectAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SelectAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfig(System.UInt32,System.Byte[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginGetXQSConfig(System.UInt32,System.Byte[],System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndGetXQSConfig(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfigAsync(System.UInt32,System.Byte[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfigAsync(System.UInt32,System.Byte[],System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCreate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCreate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleElimination(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCreateSingleElimination(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCreateSingleElimination(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionSearch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrant(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionManageEntrant(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionManageEntrant(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantAsync(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantAsync(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancel(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCancel(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCancel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancelAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancelAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopology(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionTopology(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionTopology(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologyAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologyAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleElimination(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionTopologySingleElimination(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionTopologySingleElimination(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.AddCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.UpdateIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.SearchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.FindFromIdsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.RemoveCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.RemoveIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.SelectCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.GetXQSConfigCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCreateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionSearchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCancelCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionTopologyCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.Signature">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignature(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginVerifySignature(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndVerifySignature(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureAsync(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureAsync(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignature(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginCreateSignature(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndCreateSignature(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureAsync(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureAsync(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.Stats">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLB(System.UInt32,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginDeleteXUIDFromLB(System.UInt32,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndDeleteXUIDFromLB(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBAsync(System.UInt32,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBAsync(System.UInt32,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBs(System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginDeleteXUIDFromAllLBs(System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndDeleteXUIDFromAllLBs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsAsync(System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsAsync(System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBList(System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBList(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBList(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByType(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBListByType(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBListByType(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeAsync(System.UInt32,ServerTestFramework.Web.Stats.LBType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeAsync(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateLB(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTag(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBNearGamerTag(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBNearGamerTag(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTags(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBForGamerTags(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBForGamerTags(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTags(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBDetailsForGamerTags(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBDetailsForGamerTags(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUID(System.UInt32,System.UInt64,System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetMLBByXUID(System.UInt32,System.UInt64,System.UInt32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetMLBByXUID(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDAsync(System.UInt32,System.UInt64,System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDAsync(System.UInt32,System.UInt64,System.UInt32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateTeamLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateTeamLB(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamName(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBNearTeamName(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBNearTeamName(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNames(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBForTeamNames(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBForTeamNames(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNames(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBDetailsForTeamNames(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBDetailsForTeamNames(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRaw(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateLBRaw(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateLBRaw(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBListCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.Storage">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuota(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginGetTitleQuota(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndGetTitleQuota(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFile(System.UInt32,System.Byte[],System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginReadUserFile(System.UInt32,System.Byte[],System.String,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndReadUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFile(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginReadTitleFile(System.UInt32,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndReadTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFileAsync(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFileAsync(System.UInt32,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFile(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginWriteUserFile(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndWriteUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFile(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginWriteTitleFile(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndWriteTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFileAsync(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFileAsync(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFile(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginDeleteUserFile(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndDeleteUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFile(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginDeleteTitleFile(System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndDeleteTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileAsync(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileAsync(System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFile(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginRevokeTitleFile(System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndRevokeTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileAsync(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileAsync(System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFile(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginRevokeUserFile(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndRevokeUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFileAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFiles(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginEnumerateTitleFiles(System.UInt32,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndEnumerateTitleFiles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesAsync(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesAsync(System.UInt32,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.ReadUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.ReadTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.WriteUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.WriteTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.DeleteUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.RevokeUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.Teams">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeam(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginCreateTeam(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndCreateTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeam(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginDeleteTeam(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndDeleteTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeamAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginRemoveTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndRemoveTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeam(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginManageTeam(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndManageTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginManageTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndManageTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginRecruitTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndRecruitTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeam(System.UInt32,System.Byte[],System.String,System.String,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginJoinTeam(System.UInt32,System.Byte[],System.String,System.String,System.Byte,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndJoinTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Byte,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfo(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginGetTeamInfo(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndGetTeamInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfoAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfoAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembers(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginGetTeamMembers(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndGetTeamMembers(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembersAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembersAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.CreateTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.DeleteTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.ManageTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.JoinTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.GetTeamInfoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.GetTeamMembersCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAccount">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUser(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginLinkUser(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndLinkUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserAsync(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserAsync(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTags(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginLinkedGamerTags(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndLinkedGamerTags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettings(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetUserSettings(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetUserSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharing(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginSetInfoSharing(System.Byte[],System.String,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndSetInfoSharing(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingAsync(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingAsync(System.Byte[],System.String,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatus(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetAccountStatus(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetAccountStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorization(System.UInt32,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetUserAuthorization(System.UInt32,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetUserAuthorization(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationAsync(System.UInt32,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationAsync(System.UInt32,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.TeamInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.motto">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.URL">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.created">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.numMembers">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.data">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.TeamMember">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.gamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.member">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.data">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.joined">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.CreateTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.DeleteTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.RemoveTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.ManageTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.ManageTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.RecruitTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.JoinTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.AddSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AddSubscriptions.liveSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AddSubscriptions.contentSubscriptions">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.AlertSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AlertSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AlertSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ContentSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.subscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.LiveSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.subscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ExistingSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ExistingSubscriptions.liveSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ExistingSubscriptions.contentSubscriptions">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.SubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.DefaultLocale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.LocalizedName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.TitlePrivilege">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.None">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.ReadOnly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.ReadWrite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.FullControl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.ESRBRating">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.ALL">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.ADULT">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.MATURE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.TEEN">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.EVERYONE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.KIDS_TO_ADULTS">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.EARLY_CHILDHOOD">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.UNSPECIFIED">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName.DisplayName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkInfo.Owner">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkInfo.Owner">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAuthorization">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.acceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.isVoiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.isSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.services">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAccountStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.acceptMSInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.acceptPartnerInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.forceNameChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.voiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.voiceBannedUntil">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.nicknameBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.accountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.accountSuspendedUntil">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCRecipientResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCRecipientResult.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCRecipientResult.MessageID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageSummary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.Sender">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SenderContext">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SentTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SenderTitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.ExpireMinutes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.DetailsSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Required">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Recommended">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.HasVoice">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.HasText">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Read">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.NonExportable">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TeamContext">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.CompContext">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.AlternateTitle">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Marketing">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved0">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved2">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved3">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved4">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved5">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved6">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved7">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved8">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved9">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved10">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved11">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved12">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved13">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved0">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved2">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved3">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved4">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved5">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved6">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.Invalid">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.TitleCustom">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.FriendRequest">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.GameInvite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.TeamRecruit">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.CompReminder">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.CompRequest">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.LiveMessage">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCUserTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.LastLogonTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.Flags">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCUserTitleFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCUserTitleFlags.AcceptMarketing">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SenderContext">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SentTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.Region">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.ExpireMinutes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.DetailsSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SenderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCLanguageString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLanguageString.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLanguageString.String">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCLocalizedString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.DefaultLocale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.LangString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageAttachment">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.Flags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.Data">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCAttachFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCAttachFlags.NonExportable">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCAttachFlags.Directory">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCStringIdProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringIdProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringIdProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCBoolProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBoolProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBoolProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCAttachmentProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachUrl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCBinaryProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBinaryProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBinaryProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCTimeProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTimeProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTimeProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCStringProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCQwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCQwordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCQwordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCDwordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCDwordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCWordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCWordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCWordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCByteProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCByteProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCByteProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCNullProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCNullProp.PropID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.NullProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.ByteProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.WordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.DwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.QwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.StringProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.TimeProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.BinaryProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.AttachmentProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.BoolProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.StringIdProp">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags.RevokeAll">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDeleteMsgFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCDeleteMsgFlags.BlockSender">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs.RecipResult">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.Delay">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.MessageID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Details">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs.Title">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs.RecipResult">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Details">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestCreateAccountResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.gamertagField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.xboxLivePuidField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.passportPuidField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.passportMemberNameField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.passportPasswordField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountResult.pointsBalanceField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderStatus.externalOrderId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderStatus.orderStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderStatusEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.OrderStatusEnum.ExternalOrderIdNotFound">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.OrderStatusEnum.TransactionPending">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.OrderStatusEnum.TransactionSuccessful">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.OrderStatusEnum.TransactionFailed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetOrderResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetOrderResult.externalOrderIdStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderItemsResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderItemsResult.externalOrderId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderItemsResult.accountBalanceField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.virtualSkuField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.componentIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.artistNameField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.titleField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.retailPriceInPoints">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.retailPriceInCurrency">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Item.wholesalePriceInCurrency">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.ComponentType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.ComponentType.Album">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.ComponentType.Single">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AccountBalanceResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountBalanceResult.balance">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.BillingInfoResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.BillingInfoResult.hasPaymentInstrument">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AuthenticateAccountResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.customerIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.balanceField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.accountStatusField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.subscriptionField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.userPrivilegesField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountResult.clientDataField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AccountStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.AccountStatus.Active">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.AccountStatus.SuspendedByPartner">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.AccountStatus.SuspendedForBillingFailure">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.AccountStatus.SuspendedManually">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.Subscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.subscriptionSkuField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.orderedDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.startDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.payCyclePriceField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.nextPayCycleDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.cancelRequestDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Subscription.endDateField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.SubscriptionSku">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.skuField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.availableStartDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.availableEndDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.consumerAvailableField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.fulfillmentSkuField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.productIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.paymentTypeField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.trialDurationDaysField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.trialDurationDaysFieldSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.trialDurationDaysFieldSpecified1">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.paymentCycleField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionSku.paymentCyclePriceField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.PaymentType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.PaymentType.Free">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.PaymentType.Paid">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.PaymentCycle">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.PaymentCycle.Monthly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Music.PaymentCycle.Annual">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AccountSummaryResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.retailerIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.customerIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.firstNameField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.lastNameField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.emailField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AccountSummaryResult.hasPaymentInstrument">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.Product">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Product.productIdField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Product.productNameField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Product.productTierField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Product.subscriptionRightsField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.Product.subscriptionSkusField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetSubscriptionProductsResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetSubscriptionProductsResult.productsField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.SubscriptionHistory">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionHistory.currentSubscriptionField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionHistory.queuedSubscriptionField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionHistory.expiredSubscriptionsField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.SubscriptionResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionResult.accountStatusField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SubscriptionResult.subscriptionHistoryField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestOrderSubscriptionResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.isAllowedField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.startDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.totalChargeField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.creditChargeField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.debitChargeField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.nextBillingDateField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionResult.paymentCyclePriceField">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestCreateAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestCreateAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestCreateAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestOrderSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.TestOrderSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.TestOrderSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.CancelSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.CancelSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.CancelSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.ResumeAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.ResumeAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.ResumeAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.SuspendAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.SuspendAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.SuspendAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetAccountStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.RestoreSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.RestoreSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.RestoreSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetSubscriptionProductsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetSubscriptionProductsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetSubscriptionProductsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountSummaryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountSummaryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetAccountSummaryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AuthenticateAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.AuthenticateAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.AuthenticateAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetBillingInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetBillingInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetBillingInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetAccountBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetAccountBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.OrderItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.OrderItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetOrderByExternalOrderIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Music.GetOrderByExternalOrderIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Music.GetOrderByExternalOrderIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.PresenceInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.XUID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.OnlineState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.LastSeenTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.MinutesSinceStateChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.RichPresenceString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.OfflineFriend">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OfflineFriend.G">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.OnlineFriend">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.T">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.S">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.FriendsInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendsInfo.OnlineFriends">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendsInfo.OfflineFriends">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.RecentPlayer">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.UserLivepuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.Gamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerTileUrl">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.ReputationBucket">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerScore">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerZone">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GameTitleName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.LastMetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GameTitleTileUrl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GamercardZones">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Unknown">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.None">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Xbox_1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.RR">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Pro">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Family">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Underground">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.RecentPlayerStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Neutral">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Preferred">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Avoided">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.FriendEx">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.XUID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.FriendStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.OnlineState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.LastSeenTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.MinutesSinceStateChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.RichPresenceString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.wcAchievement">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.uiAchievementId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.dtAchieved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.byType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nCred">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nImageId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szDescription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szHowTo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.UserSetting">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.ulUserId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.uiSettingId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.status">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadProfileStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.SUCCESS_TITLE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.SUCCESS_DEFAULT">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.WARNING_NO_VALUE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.ERROR_NO_PERMISSION">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.ERROR_PUID_INVALID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.QueryAttribute">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.WireData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttribute.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttribute.Id">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.XRLObject2">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.returnedResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.attribCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.attribs">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.totalResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.returnedResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.attribCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.attribs">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.QueryAttributeSpec">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttributeSpec.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttributeSpec.len">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.AddCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.AddCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.AddCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.UpdateIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.RemoveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.RemoveIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SelectCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionManageEntrantCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCancelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest._digest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest._signature">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse._hresult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse._signature">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest._digest">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Success">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Warning_No_OP">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Xuid">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Title">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Lb_ID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.LBID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.ResetType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.LocalizedLBName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.AttributeInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBResetType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Never">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Weekly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Monthly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Bimonthly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Quarterly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Semiannually">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Annually">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.StatsLocalizedName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.StatsLocalizedName.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.StatsLocalizedName.DisplayName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBAttribute">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBAttribute.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBAttribute.V">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.A">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedMLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.LBID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.F">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBEntryAttribute">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntryAttribute.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntryAttribute.V">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedMLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBResults.G">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntry.R">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.F">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBAttributeInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.Unit">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.LocalizedAttrName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.AttributeUnit">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Integer">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Float">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Percent">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.GamerTag">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.TimeStamp">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.MilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.TenMilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.HundredMilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Seconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Minutes">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Hours">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Days">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.String">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Team">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.MaxAttributeUnit">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.Regular">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.RegularTeam">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.CompetitionTemplate">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.CompetitionTemplateTeam">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.QuotaInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.MaxFileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalBytesMax">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalBytesUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalFilesMax">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalFilesUsed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.FileEnumerationInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.TitleVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.UserCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileContentType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.FileContentTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Storage.FileContentTypeEnum.Package">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Storage.FileContentTypeEnum.Blob">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadFileInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileNotModified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.TitleVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.UserCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileContentType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.WriteUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.WriteTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.DeleteUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.DeleteTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.RevokeTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.RevokeUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.CXSuppApi">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXName(System.String,System.UInt64@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetPuidFromXName(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetPuidFromXName(System.IAsyncResult,System.UInt64@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccount(System.UInt64,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetAccount(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetAccount(System.IAsyncResult,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleId(System.UInt64,System.String,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetMachineAccountByConsoleId(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetMachineAccountByConsoleId(System.IAsyncResult,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccount(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginmodifyAccount(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndmodifyAccount(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccountAsync(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccountAsync(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccount(System.UInt64,System.Boolean,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginbanAccount(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndbanAccount(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccountAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccountAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccounts(System.UInt64,System.UInt64[]@,System.String[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetRelatedAccounts(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetRelatedAccounts(System.IAsyncResult,System.UInt64[]@,System.String[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatus(System.String,System.Boolean@,System.Boolean@,System.Boolean@,System.UInt64@,System.String@,System.DateTime@,System.UInt64@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetSubscriptionCodeStatus(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetSubscriptionCodeStatus(System.IAsyncResult,System.Boolean@,System.Boolean@,System.Boolean@,System.UInt64@,System.String@,System.DateTime@,System.UInt64@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountEx(System.UInt64,System.UInt64@,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@,System.Boolean@,System.DateTime@,System.Byte@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetAccountEx(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetAccountEx(System.IAsyncResult,System.UInt64@,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@,System.Boolean@,System.DateTime@,System.Byte@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountExAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountExAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberName(System.UInt64,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetPassportMemberName(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetPassportMemberName(System.IAsyncResult,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPicture(System.UInt64,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginRemoveGamerPicture(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndRemoveGamerPicture(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMotto(System.UInt64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetUserMotto(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetUserMotto(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMottoAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMottoAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItems(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetUserProfileItems(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetUserProfileItems(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsAsync(System.UInt64,ServerTestFramework.CUST.ProfileItem[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsAsync(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.modifyAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.banAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getAccountExCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetUserMottoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ProfileItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.profileItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.profileItemValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.titleId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPuidFromXNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.puid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isAccountOwner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isActive">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isLockedOut">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isVoiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isNicknameBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.mustChangeXName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isGeofenceExempt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.isLockedOut">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.modifyAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.modifyAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.modifyAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.modifyAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.banAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.banAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.banAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.banAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getRelatedAccountsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.relatedAccounts">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.relatedAccountNames">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bValidSubscriptionCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bUsedMaxTimes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ulLastUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.szLastUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ftLastUsage">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ulOfferID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.szOffer">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountExCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountExCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.biOwnerPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtAccountResumeDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.iSuspensionLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtVoiceResumeDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.iVoiceBanLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.bMustChangeXName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtAcceptedTOS">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.tiCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.isGeoFenceExempt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPassportMemberNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.userPmn">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.parentPmn">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserMottoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.AccountInfo">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.CUST.AccountInfoEx">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineAccountInfo">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Mdp.MdpService">
            <summary>
            This is the main class that holds the MdpService defintion.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpService.MdpHeaderValue">
            <summary>
            The request header for the web service. The
            request header is required for a Mdp Web Service implementation.
            </summary>        
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpService.MdpReturnHeaderValue">
            <summary>
            The return header for the web service. The
            return header is needed for Mdp Web Services that need to have
            a security layer.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.#ctor">
            <summary>
            The default constructor for this class.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.GetPackage(System.String,System.String,ServerTestFramework.Web.Mdp.MdpParameterCollection)">
            <summary>
            This is the GetPackage() method which is overridden
            in the implementing web service. This is the method in which the main
            work of an Mdp Web Service occurs and data is returned.
            </summary>
            <param name="packageName">The name of the package being called.</param>
            <param name="version">The current version of the data the client has.</param>
            <param name="parameters">The MdpParameterCollection for the parameters for the web method.</param>
            <returns>XmlNode that is the MXF output of the web method.</returns>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.BeginGetPackage(System.String,System.String,ServerTestFramework.Web.Mdp.MdpParameterCollection,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous implementation of GetPackage()
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.EndGetPackage(System.IAsyncResult)">
            <summary>
            Asynchronous implementation of GetPackage()
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.GetSecurityToken(System.String)">
             <summary>
             This web method is exposed automatically by all MDP webservices to 
             provide the implementation point for the security for a web method.
            
             NOTE: This call can only be made across a secure connection.
             </summary>
             <param name="clientAuthToken">The client authentication token</param>
             <returns/>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.BeginGetSecurityToken(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous implementation of GetSecurityToken()
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpService.EndGetSecurityToken(System.IAsyncResult)">
            <summary>
            Asynchronous implementation of GetSecurityToken()
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Mdp.MdpHeader">
            <summary>
            This is the common Mdp Request Header that is specified as input to each
            web method implementing Mdp.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.ClientType">
            <summary>
            REQUIRED! The Client Type.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.ClientVersion">
            <summary>
            REQUIRED! The Client Version.
            </summary>  
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.ClientId">
            <summary>
            REQUIRED! The Client ID.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.CountryCode">
            <summary>
            REQUIRED! The ISO 3166 Country Code for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.LanguageId">
            <summary>
            OPTIONAL! The ISO 639-1 or ISO 639-2 Language ID for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.TestKey">
            <summary>
            OPTIONAL! The Test Key for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.Timezone">
            <summary>
            The Timezone for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.Oem">
            <summary>
            REQUIRED! The Oem name for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.OemModel">
            <summary>
            REQUIRED! The Oem Model name for the Client.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpHeader.SecurityToken">
            <summary>
            OPTIONAL! The Security Token for the Client.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Mdp.MdpParameter">
            <summary>
            Internal class that represents a single parameter in the 
            collection of parameters. This is used to front-end the serialization
            of the internal hashtable collection. Objects from the hashtable
            are converted to this type for serialization.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameter.#ctor">
            <summary>
            Default contructor to keep the serializer happy.
            </summary> 
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameter.#ctor(System.Collections.DictionaryEntry)">
            <summary>
            Constructor that builds the object from a DictionaryEntry.
            </summary>   
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpParameter.Key">
            <summary>
            The key for the entry.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:ServerTestFramework.Web.Mdp.MdpParameter.Value" -->
        <member name="T:ServerTestFramework.Web.Mdp.MdpParameterCollection">
            <summary>
            This class encapsulates the parameters passed to the GetPackage()
            method of Mdp. The MdpParameterCollection is a wrapper class around
            the internal Hashtable object to provide an abstraction from the 
            serialization/deserialization details. 
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.#ctor">
            <summary>
            Contructor for the parameter collection - this one is
            needed and used for serialization/deserialization.
            </summary>  
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.#ctor(System.Collections.Specialized.HybridDictionary)">
            <summary>
            This constructor takes a table and uses that for the 
            collection. It will then serialize/deserialize properly.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the direction entries from the table in to the one-dimenstional array.
            </summary>
            <param name="a">array to copy the entries to</param>
            <param name="index">index at which to start the copying</param>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.Contains(System.String)">
            <summary>
            Returns if the inner collection contains a specific key or not.
            </summary>
            <param name="key">Key to check</param>
            <returns>true if the key is in the collection, false otherwise</returns>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.GetEnumerator">
            <summary>
            Implements the GetEnumerator method for the interface.
            </summary>
            <returns>The enumerator for the underlying table</returns>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.Add(System.String,System.String)">
            <summary>
            Adds a key/value pair to the internal representation.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns/>
        </member>
        <member name="M:ServerTestFramework.Web.Mdp.MdpParameterCollection.Add(System.Object)">
            <summary>
            Adds an object to the internal representation.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Table">
            <summary>
            Read-only property to get the internal table of parameters. This 
            needs to be ignored during serialization as Hashtables can't be
            serialized across SOAP in .NET v1.1.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.MdpParameters">
            <summary>
            Property to get/set the MdpParameters for the collection. This is
            used during serialization/deserialization to build the collection.
            </summary>        
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Item(System.String)">
            <summary>
            Property to access the inner collection using the indexer.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Item(System.Int32)">
            <summary>
            Property to access the inner collection using the indexer.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Count">
            <summary>
            Property to get the count of items in the table.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.SyncRoot">
            <summary>
            Property to get the object to synchronize object to the underlying table.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.IsSynchronized">
            <summary>
            Property to determine whether access to the underlying table is thread-safe.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Keys">
            <summary>
            Property to get the collection of keys from the underlying table.
            </summary>
        </member>
        <member name="P:ServerTestFramework.Web.Mdp.MdpParameterCollection.Values">
            <summary>
            Property to get the collection of values from the underlying table.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Mdp.MdpReturnHeader">
            <summary>
            This is the commond Mdp Return Header this is return to a client on
            each web method implementing Mdp.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Web.Mdp.MdpReturnHeader.SecurityToken">
            <summary>
            The security token for the header.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.WmisVideoCatalogService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetails(System.Guid,ServerTestFramework.Web.Wmis.VideoType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.BeginGetVideoPurchaseDetails(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.EndGetVideoPurchaseDetails(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetailsAsync(System.Guid,ServerTestFramework.Web.Wmis.VideoType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetailsAsync(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetails2(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.Boolean,System.Int64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.BeginGetVideoPurchaseDetails2(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.Boolean,System.Int64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.EndGetVideoPurchaseDetails2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetails2Async(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.Boolean,System.Int64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetails2Async(System.Guid,ServerTestFramework.Web.Wmis.VideoType,System.Boolean,System.Int64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.GetVideoPurchaseDetails2Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Wmis.WmisVideoCatalogService.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.VideoType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.Movie">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.TVShow">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.MusicVideo">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.VideoPodcast">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.AudioPodcast">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.Viral">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.TVEpisode">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.TVSeason">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.TVSeries">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.VideoType.TVNetwork">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.VideoPurchaseDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.RetailPriceInPoints">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.RetailPriceInUSDCurrency">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.WholesalePriceInUSDCurrency">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.TitleText">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.IsDRMProtected">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.IsPreview">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.QualityPurchased">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.VideoOffers">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.IsAcquirable">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.OfferType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoPurchaseDetails.Reserved">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.QualityType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.QualityType.HD">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.QualityType.SD">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.QualityType.ED">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.QualityType.XD">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.QualityType.UD">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.VideoOffer">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.SCOID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.WMID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.Quality">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.IsAcquirable">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.OfferType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.VideoOffer.Reserved">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.OfferTypes">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.OfferTypes.None">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.OfferTypes.DTO">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.OfferTypes.PPV">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.OfferTypes.Subscription">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Wmis.OfferTypes.Free">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetails2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetails2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.GetVideoPurchaseDetails2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Wmis.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Wmis.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:STF.common.protocol.LostConnectivityInfo">
            <summary>
            Arbitration ReportResult request LostConnectivityInfo wiredata
            </summary>
        </member>
        <member name="T:STF.common.protocol.SuspiciousInfo">
            <summary>
            Arbitration ReportResult request SuspiciousInfo wiredata
            </summary>
        </member>
        <member name="T:STF.common.protocol.StatsBundle">
            <summary>
            Arbitration ReportResult request StatsBundle wiredata
            </summary>
        </member>
        <member name="T:STF.common.protocol.TournamentBundle">
            <summary>
            Arbitration ReportResult request TournamentBundle wiredata
            </summary>
        </member>
        <member name="T:STF.common.service.CacheTable`2">
            <summary>
            Implements a fixed size LRU cache for data.
            </summary>
            <typeparam name="K">The type of the keys in the cache</typeparam>
            <typeparam name="V">The type of the values in the cache. V must implement IMeasurable to allow cache size to be measured</typeparam>
            <remarks>
            This class is very much like a special case dictionary. Items that have not been "touched" in a long time are removed from the Cache if it gets very large.
            </remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the CacheTable that doesn't resolve items when cache misses's occur.
            </summary>
            <param name="name">The name of the cache.</param>
            <param name="maxSize">The maximum size of the cache.</param>
        </member>
        <member name="M:STF.common.service.CacheTable`2.#ctor(System.String,System.UInt32,STF.common.service.ResolveCacheMissDelegate{`0,`1})">
            <summary>
            Initializes a new instance of the CacheTable with an item resolver that is called on a cache miss.
            </summary>
            <param name="name">The name of the cache.</param>
            <param name="maxSize">The maximum size of the cache.</param>
            <param name="itemResolver">A delegate to a method that will get called when a cache miss occurs.</param>
        </member>
        <member name="M:STF.common.service.CacheTable`2.ChangeSize(System.Int64,System.Int64)">
            <summary>
            Updates the size of the cache.
            </summary>
            <remarks>
            amount to change the cache size by. If change is negative the cache size is reduced.
            
            This method is not thread safe, lock on _syncRoot before calling it.
            </remarks>        
        </member>
        <member name="M:STF.common.service.CacheTable`2.Flush">
            <summary>
            Clears all items form the cache.
            </summary>
        </member>
        <member name="M:STF.common.service.CacheTable`2.ContainsKey(`0)">
            <summary>
            Determines whether the Cache contains the specified key
            </summary>
            <param name="key">The key to locate in the Cache</param>
            <returns>true if the Cache contains an element with the specified key; otherwise, false</returns>
            <remarks>This method approaches an O(1) operation.</remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the cache.
            </summary>
            <param name="key">The key of the element to add</param>
            <param name="data">The value of the element to add. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns></returns>
        </member>
        <member name="M:STF.common.service.CacheTable`2.TryGetValue(`0,`1@)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the Cache contains an element with the specified key; otherwise, false.</returns>
            <remarks>
            This method combines the functionality of the ContainsKey method and the Item property.
            If the key is not found, then the value parameter gets the appropriate default value for the value type TValue; for example, 0 (zero) for integer types, false for Boolean types, and a null reference (Nothing in Visual Basic) for reference types.
            Use the TryGetValue method if you are not usign an item resolver and your code frequently attempts to access keys that are not in the cache. Using this method is more efficient than catching the KeyNotFoundException thrown by the Item property when there is a cache miss and no item resolver exists.
            </remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.InternalTryGetValue(`0,`1@)">
            <summary>
            Try to read cached data.
            </summary>
            <remarks>
            We're using a double-check lock pattern below to avoid locking on reads 
            although The FindExistingKey method will lock briefly if the key is found 
            to update the MRU list. 
            </remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.FindExistingEntry(`0,`1@)">
            <summary>
            Search for an item in the cache and if found, move ti to the front of the MRU 
            </summary>
            <param name="key">The key of the element to look up.</param>
            <param name="value">The value of the element if found.</param>
            <returns></returns>
        </member>
        <member name="M:STF.common.service.CacheTable`2.MakeMRU(STF.common.service.CacheTable{`0,`1}.CacheEntry{`0,`1})">
            <summary>
            Make the given CacheEntry the most recently used item in the mry list.
            </summary>
            <param name="entry">The enrty to bring to the front of the list.</param>
        </member>
        <member name="M:STF.common.service.CacheTable`2.InternalAdd(`0,`1)">
            <summary>
            Add a new item to the Cache
            </summary>
            <param name="key">The key of the element to add</param>
            <param name="data">The value of the element to add. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <remarks>
            <para>
            This method is not thread safe, lock on _syncRoot before calling it.
            </para>
            <para>
            It might seem that compiler optimizations or processor 
            re-ordering will break the double-check lock pattern used before calling 
            this from the InternalTryGetValue method.
            (http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html)
            write re-ordering will NOT occur because the second write is not in the same 
            method and the Dictionary.Add method will not be inlined to bring it in 
            (it's already NGen compiled and it's a virtual call)
            </para>
            </remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.EnsureCacheSize(System.UInt32)">
            <summary>
            Make sure the cache has enough space to grow by dataSize.
            If it doesn't,
            remove items from the end of the queue until there's enough space
            </summary>
            <param name="dataSize">size table should grow to acommodatey</param>
            <remarks>
            This method is not thread safe, lock on _syncRoot before calling it.
            </remarks>
        </member>
        <member name="M:STF.common.service.CacheTable`2.ShrinkCache(System.UInt32)">
            <summary>
            Purge some items from the cache to make room for new items or to acommodate a change in 
            MaxSize.
            </summary>
            <param name="targetSize">The size the cache needs to be reduced to</param>
            <remarks>
            This method is not thread safe, lock on _syncRoot before calling it.
            </remarks>
        </member>
        <member name="P:STF.common.service.CacheTable`2.MaxSize">
            <summary>
            Gets the Maximum Size the Cache can grow to.
            </summary>
            <remarks>
            If an items is added to the cache after it reaches MaxSize or when Size + item.GetSize() > MaxSize, then
            the least used items in the cache are ejected to make room for the new entry.
            </remarks>
        </member>
        <member name="P:STF.common.service.CacheTable`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the CacheTable
            </summary>
        </member>
        <member name="P:STF.common.service.CacheTable`2.Size">
            <summary>
            Gets the current size of the cache.
            </summary>
            <remarks>
            This is the sum of the values returned by calling IMeasurable.GetSize() on each item when items are inserted or changed.
            </remarks>
        </member>
        <member name="P:STF.common.service.CacheTable`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found and there is no item resolver, a get operation throws a KeyNotFoundException. 
            A set operation creates a new element with the specified key if one doesn't exist, otherwise it replaces the exisitng entry and adjusts the cache size accordingly. 
            </returns>
        </member>
        <member name="P:STF.common.config.Config.ServerSet_TestOnly_DoNotUse">
            <summary>
            DO NOT USE!!!  SERIOUSLY!!!  WHAT ARE YOU THINKING???
            This is a Test Only Method.
            DO NOT USE!!!  SERIOUSLY!!!
            </summary>
        </member>
        <member name="P:STF.common.config.Config.ReportMessageComponentId">
            <summary>
            Gets the ID used by the cleanser's ReportMessage protocol based on the current component.
            0 is returned if no mapping for the current component has been defined.
            </summary>
        </member>
        <member name="T:STF.common.service.XmlSafeConvert">
            <summary>
            Provides methods for conversion, with a defualt if the value is null or an empty string
            </summary>
        </member>
        <member name="T:STF.common.crypto.CryptoReader">
            <summary>
            The crypto manager is responsible for attain and maintaining key encryption keys from the UODB.
            </summary>
        </member>
        <member name="M:STF.common.crypto.CryptoReader.GetServiceKeys">
            <summary>
            GetServiceKeys: talks to the UODB to get the key encryption keys.
            </summary>
            <returns> Result value on whether this passed or failed. </returns>
        </member>
        <member name="T:STF.common.crypto.CryptoApi">
            <summary>
            WIN32 Crypto API:  Unmanaged code extensions necessary for key management.
            </summary>
            NOTE:  Add more functions when deemed necessary.
        </member>
        <member name="T:STF.common.crypto.CryptoTools">
            <summary>
            CryptoTools:  Cryptography tools and methods to make managing crypto32 and managed code crypto more usable.
            </summary>
        </member>
        <member name="M:STF.common.crypto.CryptoTools.GenerateRandomEncryptedKey(System.UInt32,System.String,System.UInt32@)">
            <summary>
            GenerateRandomEncryptedKey:  Creates a random key and en
            </summary>
            <param name="keySize">Size of the key to generate.</param>
            <param name="publicMasterKeyFileName">File name that carries the public master key file.</param>
            <param name="masterKeyVersion">out -- returns the master key version from the file.</param>
            <returns></returns>
        </member>
        <member name="M:STF.common.crypto.CryptoTools.RSA_Encrypt(System.Byte[],System.Byte[],System.UInt32)">
            <summary>
            RSA_Encrypt:  Does RSA encryption using the public key.
            </summary>
            <param name="rawData">data to be encrypted.</param>
            <param name="publicKeyBlob">Public key blob to import into CSP for encryption.</param>
            <param name="keyVersion">Version of the RSA key to use.</param>
            <returns>Encrypted binary array of raw data.</returns>
            <exception>Thrown if some error occurs with the encryption.  Details are in the message body.</exception>
        </member>
        <member name="M:STF.common.crypto.CryptoTools.GetSymmetricKey(System.IntPtr,System.IntPtr@)">
            <summary>
            GetSymmetricKey:  Gets special symmetric key... it's a surprise ;)
            </summary>
            <param name="hProv">Handle to the correct provider.</param>
            <param name="hSymKey">handle for the symmetric key.</param>
        </member>
        <member name="M:STF.common.crypto.CryptoTools.GenerateRandomBytes(System.UInt32)">
            <summary>
            GenerateRandomBytes:  Generates an array of crypto safe random bytes.
            </summary>
            <param name="size">Size of array to return.</param>
            <returns></returns>
        </member>
        <member name="M:STF.common.crypto.CryptoTools.ReadPublicKeyFile(System.Byte[],System.UInt32@,System.Byte[]@)">
            <summary>
            ReadPublicKeyFile:  Reads Xbox Live Key Files
            </summary>
            <param name="publicKeyFileData">File blob</param>
            <param name="keyVersion">Key version of the file.</param>
            <param name="Key Blob">The Key blob to be imported.</param>
            <returns>True if successfully read.</returns>
        </member>
        <member name="T:STF.common.config.SettingChangeFilter">
            <summary>
            Implements a SettingChangeEventHandler that vetos any changes to settings that
            are not supposed to be dynamically consumed.
            </summary>
            <remarks>
            This is really a last minute hack to make up for a design shortcoming with the Config class.
            The Config library was designed to not accept any changes to items in the NPDB config database
            unless a SettingChangeEventHandler was registered with the Config class to allow components that
            were not designed to handle dynamic changes. Unfortunatly this did not take into account that 
            components that can not handle values to dynamically change might link in untiltiy libraries that
            were designed to accept dynamic changes. Once one of these utility libraries regestered an EventHandler
            to accept their setting changes, all settings were then allowed to be updated dynamically. 
            To get around this issue, this global SettingChangeEventHandler was created that would veto changes for
            any item that had not been marked as dynamic.
            To mark an item as one that can be dynamically consumed, add a dynamic="true" attribute to
            the setting element for that element in the common/config/configItems.xml file. If your setting is not
            defined in the XML file, you can also register the setting as dynamic by calling the RegisterDynamicSetting 
            method of this class.
            </remarks>
        </member>
        <member name="M:STF.common.service.SGInfo.#ctor">
            <summary>
            The default constructor will create a new SGInfo with all the current information from
            the security gateway.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.String)">
            <summary>
            Wrapper for AddParameter junk.  This version assumes Input parameter type.
            </summary>
            <param name="val">The value of the parameter</param>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Byte[])">
            <summary>
            Wrapper for AddParameter junk.  This version assumes Input parameter type.
            </summary>
            <param name="val">The value of the parameter</param>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Byte)">
            <summary>
            Overloaded method for ints.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Int16)">
            <summary>
            Overloaded method for shorts.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.UInt16)">
            <summary>
            Overloaded method for ushorts.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Int32)">
            <summary>
            Overloaded method for ints.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.UInt32)">
            <summary>
            Overloaded method for uints.  Unless noted, assumes Input parameter.
            </summary>     
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Int64)">
            <summary>
            Overloaded method for longs.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.UInt64)">
            <summary>
            Overloaded method for ulongs.  Unless noted, assumes Input parameter.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.DateTime)" -->
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Guid)">
            <summary>
            Overloaded method for Guids.  Unless noted, assumes Input parameter.
            </summary>
            <param name="name">Name of the parameter.</param>
            <param name="val">Value to assign to the parameter.</param>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameter(System.String,System.Object,System.Data.DbType)">
            <summary>
            Overloaded method for DbType'd Objects.  Unless noted, assumes Input parameter.
            </summary>
            <param name="name">Name of the parameter.</param>
            <param name="val">Value to assign to the parameter.</param>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.AddParameterObject(System.String,System.Object)">
            <summary>
            Add object parameter. Useful if you want to pass a DBNull value for example. I 
            opted to name this differently from 'AddParameter' to avoid conflicts.
            </summary>
            <param name="name">Name of the parameter.</param>
            <param name="val">Value to assign to the parameter.</param>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.Execute(System.String)">
            <summary>
            Used to Execute the given string on the WebStore hash bucket
            to which the client is bound.  
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.Execute">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound.  
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.Execute(System.Data.CommandBehavior)">
             <summary>
             Used to Execute the property Cmd to which the client is bound with specific CommandBehaviors
             </summary>
             <remarks>
             Specifying CommandBehavior.CloseConnection as one of the passed behaviors will alter the way that the
             SqlClient handles its Close() and Dispose() functionality. If CommandBehavior.CloseConnection is specified,
             it is expected that the caller is responsible for closing the connection by calling the Close method of the 
             returned SqlDataReader. This allows for the separation of the code that is performing the query from the code
             that is processing the results, allowing the data processing code to close the connection (through SqlDataReader.Close())
             when it is done with it. See the code below for an example of how this is used.
             </remarks>
             <example>
             class CultureDataAccess
             {
                 public static SqlDataReader GetSupportedCultures()
                 {
                     SqlDataReader reader = null;
                     SqlClient client = new SqlClient(iface);
            
                     using (client)
                     {
                         client.StoredProc = "p_culture_GetSupportedCultures";
                         reader = client.Execute(CommandBehavior.CloseConnection | CommandBehavior.SingleResult);
                     }
            
                     return reader;
                 }
             }
              
             class SupportedCultures
             {
                 public Hashtable Cultures = null;
                 private void PopulateCultures()
                 {
                     Hashtable newCultures = new Hashtable();
            
                     SqlDataReader reader = CultureDataAccess.GetSupportedCultures();
                     using(reader) 
                     {
                         int userLanguageOrdinal = reader.GetOrdinal("UserLanguage");
                         int cultureOrdinal = reader.GetOrdinal("CultureName");
            
                         while (reader.Read())
                         {           
                             newCultures.Add((string) reader.GetValue(userLanguageOrdinal), (string) reader.GetValue(cultureOrdinal));
                         }
                     }
                     cultures = newCultures;
                 }
             }
             </example>
             <param name="behavior">Provides a description of the results of the query and its effect on the database.</param>
             <returns>A SqlDataReader containing the results of the query.</returns>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.ExecuteNonQuery(System.String)">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound, without returning a resultset.
            </summary>
        </member>
        <member name="M:STF.common.sql.sqlclient.SqlClient.ExecuteXmlReader">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound.  
            </summary>
        </member>
        <member name="T:STF.common.protocol.StatLbIdParser">
            <summary>
            StatLbIdParser
            </summary>
            <remarks>
            Leaderboard ID parser helper class
            </remarks>
        </member>
        <member name="T:STF.common.protocol.MsgSetData">
            <summary>
            MsgSetData
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User PUID</param>
            <param name="LbId">Leaderboard ID</param>
            <param name="AttrCount">Count of attributes</param>
            <param name="Attribs">Attribute data message</param>
            <returns>
            RepSetDataCanUploadAtt for S_CAN_UPLOAD_ATT
            </returns>
        </member>
        <member name="T:STF.common.protocol.RepSetDataCanUploadAtt">
            <summary>
            RepSetDataCanUploadAtt
            </summary>
            <param name="AccessToken">Storage access token</param>
            <param name="RefCount">Count of objects in Refs</param>
            <param name="Refs">Leaderboard/User pairs</param>
            <remarks>
            Response object with a storage access token that allows an attachment to be uploaded
            <para>
            Response for MsgSetData request that returns S_CAN_UPLOAD_ATT
            </para>
            </remarks>
        </member>
        <member name="T:STF.common.protocol.RepSetDataReference">
            <summary>
            RepSetDataReference
            </summary>
            <param name="Lb">Leaderboard id</param>
            <param name="User">User PUID</param>
            <remarks>
            Attachment part of RepSetDataCanUploadAtt
            <para>
            Response for MsgSetData request that returns S_CAN_UPLOAD_ATT
            </para>
            </remarks>
        </member>
        <member name="T:STF.common.protocol.ReqGetData">
            <summary>
            ReqGetData
            </summary>
            <param name="Messages">Request messages</param>
            <returns>RepGetData response</returns>
            <remarks>
            Reads data from leaderboard server as described in the request messages
            </remarks>
        </member>
        <member name="T:STF.common.protocol.MsgGetData">
            <summary>
            MsgGetData
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User PUID</param>
            <param name="LbId">Leaderboard ID</param>
            <param name="AttrCount">Attribute count</param>
            <param name="AttrIds">Array of attribute ids (size==AttrCount)</param>
            <remarks>
            Leaderboard query message.  Specifies title, leaderboard, and attributes to retrieve.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.ReqStatPost">
            <summary>
            ReqStatPost
            </summary>
            <param name="TitleID">Title ID</param>
            <param name="ProcCount">Count of procedures</param>
            <param name="Procs">Procedure calls</param>
            <param name="TeamTickets">Team Tickets objects</param>
            <remarks>
            Supports running leaderboard operator procedures as defined in StatPostProcedure
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsColumn">
            <summary>
            StatsColumn
            </summary>
            <param name="ColumnId">Stats column id (usually ordinal)</param>
            <param name="Type">Stats column datatype</param>
            <param name="Data">Stat data value</param>
            <remarks>
            Data object for holding the contents of a stat column.
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsColumn.ReadStream(System.IO.BinaryReader)">
            <summary>
            ReadStream
            </summary>
            <param name="binaryReader">BinaryReader object that has the input stream</param>
            <returns>WireData object</returns>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsColumn.WriteStream(System.IO.BinaryWriter)">
            <summary>
            WriteStream
            </summary>
            <param name="binaryWriter">BinaryWriter object that has the output stream</param>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsRow">
            <summary>
            </summary>
            <param name="Puid">User PUID</param>
            <param name="Rating">User rating</param>
            <param name="GamerTagLength">Length of gamer tag string</param>
            <param name="GamerTag">Gamer tag string</param>
            <param name="ColumnCount">Count of columns</param>
            <param name="Columns">Stats columns collection</param>
            <remarks>
            Data object for a stats result row
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsRow.#ctor(System.UInt64,System.UInt32,System.UInt64,System.String,System.UInt32)">
            <summary>
            StatsRow constructor
            </summary>
            <param name="puid">User ID for row</param>
            <param name="rank">Rank of row</param>
            <param name="rating">Rating of row</param>
            <param name="gamerTag">GamerTag for row</param>
            <param name="columns">Count of columns of data in row</param>
            <remarks>
            Constructor that sets values for row and allocates an array for column data
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:STF.common.protocol.StatsResultSet" -->
        <member name="T:STF.common.protocol.StatsSpec">
            <summary>
            StatsSpec
            </summary>
            <param name="ViewId">View id (leaderboard id)</param>
            <param name="ColumnCount">Count of column id's</param>
            <param name="ColumnIds">Collection of column id's to query</param>
            <remarks>
            Data object representing a stats query
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsOperatorParameter">
            <summary>
            StatsOperatorParameter
            </summary>
            <param name="Type">Paramter data type (StatParamType)</param>
            <param name="Data">Parameter data</param>
            <remarks>
            Data object for a stats operator parameter
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsOperatorParameter.ReadStream(System.IO.BinaryReader)">
            <summary>
            ReadStream
            </summary>
            <param name="binaryReader">BinaryReader object that has the input stream</param>
            <returns>WireData object</returns>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsOperatorParameter.WriteStream(System.IO.BinaryWriter)">
            <summary>
            WriteStream
            </summary>
            <param name="binaryWriter">BinaryWriter object that has the output stream</param>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsOperator">
            <summary>
            StatsOperator
            </summary>
            <param name="OperatorId">Operator type</param>
            <param name="ParameterCount">Count of operator parameters</param>
            <param name="Parameters">Collection of parameters</param>
            <remarks>
            Data object for a stats operator
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsPostRequest">
            <summary>
            StatsPostRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="OperatorCount">Count of operators</param>
            <param name="Operators">Collection of operators</param>
            <param name="TeamTickets">Collection of team tickets (optional)</param>
            <returns>StatsPostResponse</returns>
            <remarks>
            Batch of stat operator requests that generates StatsPostResponse.
            Operators dictate the functionality.
            Typical operators include REPLACE, ADD, MIN, MAX
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsPostRequest.ReadStream(System.IO.BinaryReader)">
            <summary>
            ReadStream
            </summary>
            <param name="binaryReader">BinaryReader object that has the input stream</param>
            <returns>WireData object</returns>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="M:STF.common.protocol.StatsPostRequest.WriteStream(System.IO.BinaryWriter)">
            <summary>
            WriteStream
            </summary>
            <param name="binaryWriter">BinaryWriter object that has the output stream</param>
            <remarks>
            Overrride of default WireData implementation.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsPostResponse">
            <summary>
            StatsPostResponse
            </summary>
            <returns>TitleId</returns>
            <remarks>
            Response for StatPostRequest.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsReadRequest">
            <summary>
            StatsReadRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserCount">Count of users</param>
            <param name="Users">Collection of user id's</param>
            <param name="SpecCount">Count of query specs</param>
            <param name="Specs">Collection of query specs</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Query for users and specific view columns.
            Results are generated with one result set per query spec with
            each user having a record in the result set.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsEnumByUserRequest">
            <summary>
            StatsEnumByUserRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User id for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified user id and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsEnumByRankRequest">
            <summary>
            StatsEnumByRankRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rank">Rank value for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rank and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsEnumByRatingRequest">
            <summary>
            StatsEnumByRatingRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rating">Rating for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rating and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:STF.common.protocol.StatsReadResponse">
            <summary>
            StatsReadResponse
            </summary>
            <param name="ResultsCount">Count of result sets</param>
            <param name="Results">Collection of result sets</param>
            <remarks>
            Response to StatsReadRequest.
            Contains collection of result sets for the corresponding query specs.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.Achievement">
            <summary>
            Achievement
            </summary>
            <param name="AchievementId">Achievement ID</param>
            <param name="Achieved">Achieved datetime</param>
            <param name="Flags">Flags</param>
            <remarks>
            Data object for an achievement
            </remarks>
        </member>
        <member name="M:STF.common.protocol.Achievement.#ctor(System.UInt32,System.DateTime,System.Int32)">
            <summary>
            Achievement
            </summary>
            <param name="achievementId">Achievement ID</param>
            <param name="achieved">Achieved datetime</param>
            <param name="flags">Flags</param>
            <remarks>
            Achievement constructor
            </remarks>
        </member>
        <member name="T:STF.common.protocol.SyncAchievementsRequest">
            <summary>
            AchievementWriteRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Puid">User PUID</param>
            <param name="AchievementCount">Count of achievements</param>
            <param name="Achievements">Collection of achievements</param>
            <returns>AchievementWriteResponse</returns>
            <remarks>
            Request to write a set of achievements to the database for a specific user + title.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.SyncAchievementsResponse">
            <summary>
            AchievementWriteResponse
            </summary>
            <returns>TitleId</returns>
            <remarks>
            Response to a AchievementWriteRequest.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.AchievementEnumRequest">
            <summary>
            AchievementEnumRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Puid">User PUID</param>
            <returns>AchievementEmumResponse</returns>
            <remarks>
            Request to read all achievements for a specific user
            </remarks>
        </member>
        <member name="T:STF.common.protocol.AchievementEnumResponse">
            <summary>
            AchievementEnumResponse
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Puid">User PUID</param>
            <param name="AchievementsCount">Count of achievements</param>
            <param name="Achievements">Collection of achievement descriptions</param>
            <remarks>
            Response to AchievementEnumRequest.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.AchievementClearRequest">
            <summary>
            AchievementClearRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Puid">User PUID</param>
            <returns>AchievementClearResponse</returns>
            <remarks>
            Request to clear all achievements for a specific user
            for the specified title id
            </remarks>
        </member>
        <member name="T:STF.common.protocol.AchievementClearResponse">
            <summary>
            AchievementClearResponse
            </summary>
            <returns>TitleId</returns>
            <returns>Puid</returns>
            <remarks>
            Response to a AchievementWriteRequest.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.UserSetting">
            <summary>
            UserSetting
            </summary>
            <remarks>
            Describes a single setting.  Used in both setting and getting values.
            </remarks>
        </member>
        <member name="T:STF.common.protocol.ReadSettingsRequest">
            <summary>
            ReadSettingsRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User ID</param>
            <param name="ForUserIdsLen">Count of user id's</param>
            <param name="ForUserIds">User ids to read</param>
            <param name="SettingsIdsLen">Count of settings</param>
            <param name="SettingsIds">Setting ids to read</param>
            <remarks>
            Retrieves a list of settings for a list of users
            </remarks>
        </member>
        <member name="T:STF.common.protocol.ReadSettingsResponse">
            <summary>
            ReadSettingsResponse
            </summary>
            <param name="SettingsLen">Count of settings</param>
            <param name="Settings">User settings collection</param>
            <remarks>
            Returned in response to ReadSettingsRequest
            </remarks>
        </member>
        <member name="T:STF.common.protocol.SyncSettingsRequest">
            <summary>
            SyncSettingsRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User ID</param>
            <param name="Version">Version</param>
            <param name="SettingsLen">Count of settings</param>
            <param name="Settings">User settings collection</param>
            <remarks>
            Updates one or more of a single user's profile settings
            </remarks>
        </member>
        <member name="T:STF.common.protocol.SyncSettingsResponse">
            <summary>
            SyncSettingsResponse
            </summary>
            <param name="Version">Version</param>
            <param name="SettingsLen">Count of settings</param>
            <param name="Settings">User settings collection</param>
            <remarks>
            Returned in response to SyncSettingsRequest
            </remarks>
        </member>
        <member name="T:STF.common.protocol.SyncAllResponse">
            <summary>
            SyncSettingsResponse
            </summary>
            <param name="Version">Version</param>
            <param name="SettingsLen">Count of settings</param>
            <param name="Settings">User settings collection</param>
            <remarks>
            Returned in response to SyncSettingsRequest
            </remarks>
        </member>
        <member name="T:STF.common.service.Validator">
             <summary>
                 This can be used as a generic validation module. To use this, do the following:
                 1)  Make the Validators that you will need (look around for existing ones first
                     as there's a chance you can reuse something.
                 1a) Implement DoCheckImpl on your new classes, see comment block
                     by that function declaration for details.
                 2)  Pass a bunch of Validators into MakeValidatorChain, which will return
                     a Validator that will do everything for you.
                 2a) In addition to the Validators, pass in the "final result" of the chain.
                 3)  Call DoCheck
                 3a) If this return true, you're good to go.
                 3b) If it returns false, we should not generate a certificate.  To get an
                     error message suitable for an exception, get the ErrorMessage property.
             </summary>
            
             <remarks>
                 Internally, the CertificateRequestChecker is basically a Chain of Responsiblity (GoF, page 233),
                 implemented as a linked-list of CertificateRequestGenerators.
             </remarks>
        </member>
        <member name="M:STF.common.service.Validator.MakeValidatorChain(System.Boolean,STF.common.service.Validator[])">
            
             <summary>
                 Makes a Validator chain out of the Validators passed in.
                 Note that this alters the validators passed in--it doesn't clone them.
             </summary>
            
             <param name="finalResult">
                 Indicates whether the final result, if nothing has an opinion, should be true or false.
                 Note that these are modified as they are chained together.
             </param>
             <param name="validators">An array of validators to chain together, in the order in which they are passed in.</param>
            
             <returns>The first validator passed in, with the rest chained to it.</returns>
            
        </member>
        <member name="M:STF.common.service.Validator.DoCheck">
            
             <summary>
                 Actually do the check.
             </summary>
            
             <returns>Whether validation passed or failed.</returns>
            
        </member>
        <member name="P:STF.common.service.Validator.ErrorMessage">
            
             <summary>
                 If DoCheck return false, this will contain an error message.
             </summary>
            
             <remarks>
                 Note that DoCheck could have return false because of
                 a checker further down in the list.  So if we don't
                 have a string and we aren't the last checker, we pass
                 the call down the list.
            
                 Subclasses can set the error message for themselves
                 using the protected setter.
             </remarks>
            
             <returns>An error string representing why the validation didn't pass.</returns>
            
        </member>
        <member name="T:STF.common.service.Validator.DoCheckResults">
            
             <summary>
                 Derived classes must implement this function.  The meanings of the
                 return values are detailed below.  Take a look at DoCheck to see
                 how these are used.
             </summary>
            
             <returns>The result of the validation.</returns>
        </member>
        <member name="T:STF.common.sql.webstore.CmdType">
             <summary>
             The WSTCommandType that determines how the command will be executed.
            
             Explained as follows:
            
             WRITEONLY_COMMANDTYPE       -   Use only Write database for the execution.
             READTHENWRITE_COMMANDTYPE   -   First use Read database for the execution and, if fail over, use Write database.
             READONLY_COMMANDTYPE        -   Use only Read database for the execution.
             WRITETHENREAD_COMMANDTYPE   -   First use Write database for the execution and, if fail over, use Read database.
             READORWRITE_COMMANDTYPE     -   Use any database (write or read) in the partition and, if fail over, use any other available database.
                                             This balances database access equally.
             </summary>
        </member>
        <member name="T:STF.common.sql.webstore.WSClient">
             <summary>
             WsClient is a thin wrapper around the webstore and SqlClient
             classes.   It serves a few functions:
               - according to webstore docs, at least one WstCommand should
                 be kept in memory at all times, to track initialization data.
                 this class holds one instance for each app used.
               - default values are given in leiu of DbNull (null for strings
                 and datetimes, 0 for numeric values).   This saves the consumer
                 from having to check IsDbNull any time a column is accessed, and
                 the errors resulting from it if they dont check.
               - exceptions thrown as a result of one of the Execute*() functions
                 include the stored proc and param values used in the call.
               - stord proc and param values are also show in XomTrace statements.
               - interface is fairly close to WSClient used for 2.1, so transition
                 pain from one to another should be minimal.
             </summary>
            
        </member>
        <member name="F:STF.common.sql.webstore.WSClient.SiteName">
            <summary>
            for testing only, never use it in server code
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Guid)">
            <summary>
            Wrapper for AddParameter junk.  This version assumes INPUT parameter type.
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="val">The value of the parameter</param>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.String)">
            <summary>
            Wrapper for AddParameter junk.  This version assumes INPUT parameter type.
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="val">The value of the parameter</param>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Byte[])">
            <summary>
            Wrapper for AddParameter junk.  This version assumes INPUT parameter type.
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="val">The value of the parameter</param>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Byte)">
            <summary>
            Overloaded method for ints.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Int16)">
            <summary>
            Overloaded method for shorts.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.UInt16)">
            <summary>
            Overloaded method for ushorts.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Int32)">
            <summary>
            Overloaded method for ints.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.UInt32)">
            <summary>
            Overloaded method for uints.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Int64)">
            <summary>
            Overloaded method for longs.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.UInt64)">
            <summary>
            Overloaded method for ulongs.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Double)">
            <summary>
            Overloaded method for doubles.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.DateTime)">
            <summary>
            Overloaded method for DateTimes.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameter(System.String,System.Object,System.Data.DbType)">
            <summary>
            Overloaded method for DbType'd Objects.  Unless noted, assumes INPUT parameter.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.AddParameterObject(System.String,System.Object)">
            <summary>
            Add object parameter. Useful if you want to pass a DBNull value for example. I 
            opted to name this differently from 'AddParameter' to avoid conflicts.
            </summary>
            <param name="name">Name of the parameter.</param>
            <param name="val">Value to assign to the parameter.</param>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.GetDateParameter(System.String)">
            <summary>
            If the OUTPUT parameter is null, DateTime.MinValue is returned.
            Use IsNullParameter to determine if the DateTime parameter is
            actually null.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.IsNullParameter(System.String)">
            <summary>
            Used to determine if an OUTPUT parameter is null.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.BeginTransaction">
            <summary>
            Used to start a transaction.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.CommitTransaction">
            <summary>
            Used to commit a transaction.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.RollbackTransaction">
            <summary>
            Used to rollback a transaction.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.Execute(System.String)">
            <summary>
            Used to Execute the given string on the WebStore hash bucket
            to which the client is bound.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.Execute">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.ExecuteNonQuery(System.String)">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound, without returning a resultset.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.ExecuteScalar(System.String)">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound, returning the first column of the first row
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.ExecuteXmlReader(System.String)">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound, without returning a resultset.
            </summary>
        </member>
        <member name="M:STF.common.sql.webstore.WSClient.ExecuteXmlReader">
            <summary>
            Used to Execute the property Cmd on the WebStore hash bucket
            to which the client is bound.  
            </summary>
        </member>
        <member name="P:STF.common.sql.webstore.WSClient.CommandText">
            <summary>
            The string SQL command to be executed.  In OLE DB this looks something
            like this: "{ call p_MySproc(?, ?) }".
            </summary>
        </member>
        <member name="P:STF.common.sql.webstore.WSClient.StoredProc">
            <summary>
            The stored proc to be executed.
            </summary>
        </member>
        <member name="P:STF.common.sql.webstore.WSClient.CommandSql">
            <summary>
            The sql statement to be executed.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Game">
            <summary>
            A class to represent a single game between some teams each of which comprised of several players. Each game also has
            to have the date at which it ended. This time is assumed to be the time when the game finsihed as each team will
            know about its scores (which is only possible AFTER the game).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Game.m_aDate">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Game.m_aTeams">
            <summary>
            A variable sized list of teams.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Game.#ctor(System.DateTime,System.Int32)">
            <summary>
            Constructs a game that ended at a specified date between at a maximal number of teams. 
            </summary>
            <param name="aDate">Date at which the game ended.</param>
            <param name="iMaxNumberOfTeams">Maximum number of teams.</param>
            <remarks>An exception will be thrown if more than the specified number of teams are added.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.#ctor(System.DateTime)">
            <summary>
            Constructs a game that ended at a specified date between an arbitrary number of teams.
            </summary>
            <param name="aDate">Date at which the game ended.</param>
        </member>
        <member name="M:MSRC.Ranking.Game.AddTeam(MSRC.Ranking.Team)">
            <summary>
            Adds a team to the game.
            </summary>
            <param name="aTeam">The team to be added.</param>
            <returns>The team index of the team added.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.GetTeam(System.Int32)">
            <summary>
            Gets the team at a specified index.
            </summary>
            <param name="iTeamIndex">The index of the team.</param>
            <returns>The team at the given index or null, if the index is wrong.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.GetWinner(System.Int32,System.Int32)">
            <summary>
            Gets the winner between two teams.
            </summary>
            <param name="iTeamIndex1">Team index of team 1.</param>
            <param name="iTeamIndex2">Team index of team 2.</param>
            <returns>Returns +1 if team 1 won against team 2, -1 if team 2 won against team 1, and 0 it both teams
            draw.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.RemoveEmptyTeams">
            <summary>
            Removes all empty teams.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.Date">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.NumberOfTeams">
            <summary>
            The number of participating teams.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.NumberOfPlayers">
            <summary>
            The total number of players participating in the game.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.PlayerIDs">
            <summary>
            All player IDs of all players in the game.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.TeamIDs">
            <summary>
            All team indicies of all players in the game.
            </summary>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="P:MSRC.Ranking.Game.Ranking">
            <summary>
            The full ranking of all teams based on the team scores.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Numerics.GaussianApproximations">
            <summary>
            A static class that provides some functions for Gaussian integrals. In particular, this class provides
            correction functions for the mean and variance of the truncated Gaussian.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.erfc(System.Double)">
            <summary>
            Computes the complementary error function. This function is defined by 2/sqrt(pi) * integral from x to infinity of exp (-t^2) dt.
            </summary>
            <param name="x">The lower boundary of integration.</param>
            <returns>The complementary error function.</returns>
            <remarks>This method uses a Chebyshev series approximation which is exact in the whole range up to 1 * 10^{-7}.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.erfcinv(System.Double)">
            <summary>
            Computes the inverse of the complementary error function. 
            </summary>
            <param name="y">The point of interest.</param>
            <returns>The inverse of the complementary error function.</returns>
            <remarks>This function uses a polynomial approximation together with one step of Halley's rational method.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the input <c>y</c> is outside [0,2].</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.Phi(System.Double)">
            <summary>
            Computes the cummulative Gaussian distribution at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The cummulative Gaussian distribution at the point of interest.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.PhiInverse(System.Double)">
            <summary>
            Computes the inverse of the cummulative Gaussian distribution (qunatile function) at a specified point of interest.
            </summary>
            <param name="p">The cummulative probability or point of interest in [0,1].</param>
            <returns>The quantile at the specified point.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.N(System.Double)">
            <summary>
            Computes the normal density at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The normal density at the point of interest.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v0(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w0(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v(System.Double,System.Double,System.Double)">
            <summary>
            Computes the additive correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The additive correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u.</remarks>
            <exception cref="T:System.ArithmeticException">Thrown if the computation is not numerically stable.</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w(System.Double,System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The multiplicative correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u.</remarks>
            <exception cref="T:System.ArithmeticException">Thrown if the computation is not numerically stable.</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.ComputeNiederreiterSeries(System.Int32)">
            <summary>
            Computes a Niederreither series of coefficients.
            </summary>
            <param name="iNumberOfDimensions">Number of dimensions.</param>
            <returns>A Niederreiter series with as many elements as dimensions.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.TransformSample(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Double[],MSRC.Ranking.LinearAlgebra.Matrix@,System.Double@,MSRC.Ranking.LinearAlgebra.Matrix@,MSRC.Ranking.LinearAlgebra.Matrix@)">
            <summary>
            Computes the transformed integrand of a multi-variate Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian.</param>
            <param name="C">Cholesky factor of the covariance of the Gaussian.</param>
            <param name="a">Lower integration boundary.</param>
            <param name="b">Upper integration boundary.</param>
            <param name="dSample">The uniform random sample.</param>
            <param name="tmp">A temporary matrix of the size of <c>M1</c>.</param>
            <param name="M0">The volume sample (zeroth moment).</param>
            <param name="M1">The mean sample (first moment).</param>
            <param name="M2">The second moment sample.</param>
            <remarks>This function is implemented to minimise the number of allocations of memory and may thus be hard to 
            read.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.CalculateTGMoments(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The normalisation constant, mean and second moment matrix of a multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992 using a quais-random lattice generator based on Niederreiter point sets. However, for one-dimensional
            integrals of a certain sort if resorts to use the fast <c>v</c>, <c>w</c>, <c>v0</c> and <c>w0</c> function.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not the same number of rows as <c>Sigma</c>.</exception>
            <exception cref="T:System.ArithmeticException">Thrown if the normalisation constant comes out too small.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of dimensions is too large (which would lead to unrealiable results).</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.Phi(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The integal of the multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of 
            Multivariate Normal Probabilities.</i> 1992. However, fast functions based on <c>erfc</c> are used for one-dimensional
            integrals.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not the same number of rows as <c>Sigma</c>.</exception>
            <exception cref="T:System.ArithmeticException">Thrown if the normalisation constant comes out too small.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of dimensions is too large (which would lead to unrealiable results).</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.CalculateTGAParameters(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes the parameter of the best Gaussian approximation of a multivariate truncated Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The normalisation constant, mean and covariance matrix of the best Gaussian approxiamtion to the truncated multivariate Gaussian