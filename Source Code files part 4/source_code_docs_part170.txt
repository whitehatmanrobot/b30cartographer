530 \h  2.4.1 Foreign Key relations  PAGEREF _Toc489455531 \h  2.4.2 Hierarchical configuration information  PAGEREF _Toc489455532 \h  2.4.3 Inheritance  PAGEREF _Toc489455533 \h  Query Hints  PAGEREF _Toc489455534 \h  Schema design guidelines  PAGEREF _Toc489455535 \h  2.6.1 Use separate association collections  PAGEREF _Toc489455536 \h  XSD representation of Config Schema  PAGEREF _Toc489455537 \h  2.7.1 ConfigType, Section: element  PAGEREF _Toc489455538 \h  2.7.2 ConfigType Property definition: complexType  PAGEREF _Toc489455539 \h  2.7.3 Primary Key: key  PAGEREF _Toc489455540 \h  2.7.4 Enum definition: simpleType, enumeration  PAGEREF _Toc489455541 \h  2.7.5 Flags: ?  PAGEREF _Toc489455542 \h  2.7.6 RelationMeta  PAGEREF _Toc489455543 \h  2.7.7 QueryMeta  PAGEREF _Toc489455544 \h  2.7.8 IndexMeta  PAGEREF _Toc489455545 \h  2.7.9 Section  PAGEREF _Toc489455546 \h  2.7.10 Behavior / Wiring  PAGEREF _Toc489455547 \h  Wiring  PAGEREF _Toc489455548 \h  Selecting an Interceptor Chain for a ConfigType  PAGEREF _Toc489455549 \h  Instructions to the schema compiler  PAGEREF _Toc489455550 \h  Instructions to the XML storage interceptor  PAGEREF _Toc489455551 \h  3.3.1 IsContained  PAGEREF _Toc489455552 \h  3.3.2 NotScopedByTablename  PAGEREF _Toc489455553 \h  Managing Schema and Wiring  PAGEREF _Toc489455554 \h  Schema / Wiring compilation  PAGEREF _Toc489455555 \h  4.1.1 XML Schema  PAGEREF _Toc489455556 \h  4.1.2 CLB Schema  PAGEREF _Toc489455557 \h  4.1.3 Header files  PAGEREF _Toc489455558 \h  4.1.4 Collection/Item classes  PAGEREF _Toc489455559 \h  Dynamic schema/wiring discovery  PAGEREF _Toc489455560 \h  Open Issues  PAGEREF _Toc489455561 \h  Appendix A: Defining the schema of the schema using schema  PAGEREF _Toc489455562 \h  Revision History  PAGEREF _Toc489455563 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Requirements Discoverability It must be possible (for a generic configuration consumer) to discover the set of available collections and their properties.  It should be possible to discover the set of available instances in a collection Early bound access: it must be possible for consumers to obtain high-performance access to configuration information when they have a-priori knowledge about the schema of a collection. Extensibility Schema It must be possible for internal Microsoft groups to extend the schema by adding new collections, relate them to existing collections and modify existing collections (typically adding new properties). It must be possible for customers to extend the schema by adding new collections, relate them to existing collections (Microsoft defined or defined by other customers).  It should be possible for customers to add new properties to existing collections.  It should be possible to add schema for only part of the configuration hierarchy (granularity: application/appdomain level), without impacting applications in other parts of the configuration hierarchy and without requiring machine administrative privileges.  Defining and extending the schema must be easy for both internal groups and customers. Specifically, no special deployment step (registration, setup etc.) must be required for customer extensions. It should be easy to define schema for hierarchal configuration information, i.e. it should not be required to explicitly declare relations between collections, when this can be derived from context. Wiring information It must be possible for internal Microsoft groups to add new interceptors to the wiring information for an existing collection, as well as define configuration objects and interceptors for new collections. It should be possible for customers to use existing interceptors for their own collections.  Compatibility It must be possible to mechanically map the configuration system schema and data to CIM/WMI, ADSI, XML-Schema/Data, ADO+ data sets. The mapping should be loss-less, even though extended meta-data may require more than one "collection" or non-intuitive encoding in the target schema. It must be possible to mechanically map CIM/WMI, ADSI, XML-Schema/Data and ADO+ data sets to configuration system schema and data. The mapping should be loss-less, even though some of the information may require non-intuitive encoding in the configuration system. Configuration files must carry a XML schema definition that allows any XML reader to perform XML schema validation etc. Specifically VS7 XML editors must be able to apply auto completion etc. How do we locate XML schema files? We need a urn: -like mechanism => CLovett/AmarG Schema Definition The configuration system assumes a well-defined schema for the configuration types that it manipulates. In some cases the schema can be implied from the data file, but nonetheless, the configuration system internally is schema driven. This schema must provide: ConfigType name Property Name and Type for each property in the ConfigType Additionally (and optionally) the schema can provide: Primary Key Property validation rules Property Default values Index definitions Query hints Containment of and Relations between ConfigTypes Example: <Collection ConfigType= System.IIS.Sites   <Property Name= SiteID Type= PrimaryKey   <Property Name= DefaultAppPoolID Type=   <Property Name= HomeDirectory Type=   <Property Name= Bindings Type= BYTES </Collection> Collection Definition ConfigType The ConfigType indicates the string to be used for programmatic reference to the collection from managed code (i.e. for requests to the Configuration Manager, in generated config collection classes, etc.). The ConfigType must be globally unique, and should therefore be defined using reverse DNS syntax, i.e.  com.mycompany.myconfigtype System.IIS.Sites". RaduP: In current drops, the ConfigType is just a string and the config objects are in namespace  System.Config.Objects The ConfigType is also the class name of the object returned by the configuration manager for requests for this ConfigType. The  namespace  of the ConfigType is the string preceding the last   in the ConfigType, i.e.  com.mycompany System.IIS .Should we really require the ConfigType to be the same as the config collection class? [Yes] Can we somehow deal with namespace collisions? Scope name resolution s to appdomains? Allow aliases to be defined? Should we use namespaces to establish default wiring? [tentative answer: No] How can we make XML syntax user friendly? xmlns could avoid the  System.IIS.  prefix Internal Name (optional) RaduP: In current drops, the Internal Name is not optional. The internal name is used for generating C++ header files. If no internal name is specified, the configuration system defaults it to the ConfigType, replacing any invalid characters (especially  ) with   (underscore) characters. Example: <Collection ConfigType= System.IIS.Sites  InternalName= SYSTEM_IIS_SITES Do we need a separate display name for generic UI? [Yes] Do we need a separate XML element name? [No] Item Name (optional) Indicates the name to be used when referring to items in this collection. If no ItemName is specified the configuration system defaults it to <ConfigType>Item. The ItemName is scoped within the name space of the ConfigType: If a globally unique item name is required (for config in XML without specifying the containing collection, for config item classes etc.), the item name and the ConfigType are composed as follows: If the ConfigType string does not contain a  : <ConfigType><ItemName> (String concatenation). If the ConfigType contains a  : replace the string following the last   with the ItemName. Examples: <Collection ConfigType= System.IIS.Sites  ItemName= <!-- Globally unique item name: System.IIS.Site --> <Collection ConfigType= System.IIS.Sites <!-- ItemName: System.IIS.SitesItem, same as globally unique item name --> Should we require/allow the ItemName to be specified as fully qualified name? Item Class (optional) The configuration system returns instances of a well-known configuration collection class, which contain instances of a well-known config item class. The CollectionItem entry specifies which item class the configuration system should use for a config type. If no ItemClass is specified, the config system defaults it to the globally unique ItemName as described   REF _Ref466379318 \p \h  above RaduP: In current drops the ItemClass attribute is hard coded to  System.Config.Objects.<PublicName>ConfigItem Auto Generated Collection/Item classes (optional) The configuration system can auto-generate configuration collection and/or item classes from the schema definition of a config type.  AutoGenCollectionClass, AutoGenItemClass RaduP: In current drops, there is a  GENERATECONFIGOBJECTS  metaflag on  The AutoGenCollectionClass/AutoGenItemClass* are Boolean flags that indicate if the configuration system should auto matically generate configuration classes. If no AutoGen* flag is specified, the configuration system defaults to   (= do auto-generate the respective class). Should we allow specification of an assembly/DLL name? Yes! Should we support generating source code? In which languages? We wouldn t have to worry about assembly/dll names, changes in IL emit classes etc. OverrideCollectionClass, OverrideItemClass The OverrideCollectionClass/OverrideItemClass are Boolean flags, that indicate if the actual configuration/item classes are going to be custom implementations that derive from the auto-generated classes. If this flag is specified, the name of the generated classes will be appended with a   suffix. Example 1: <Collection ConfigType= System.IIS.Sites  ItemName=   <!-- nothing specified: defaults to generate and use two classes:  System.IIS.Sites  System.IIS.Site   --> Example 2:   <Collection  ConfigType= System.IIS.Sites        ItemClass= System.IIS.Config.Site   <!-- generates two classes: System.IIS.Sites System.IIS.Config.Site and declares them as the collection/item classes to use --> Example 3:   <Collection  ConfigType= System.IIS.Sites        Flags= OverrideCollectionClass OverrideItemClass   <!-- generates two classes: System.IIS.SitesBase System.IIS.SiteBase and declares the following two classes as the config classes to use: System.IIS.Sites System.IIS.Config.Site These classes have to be implemented by the config type author, and would typically derive from the generated bases classes to  implement custom Methods that use the standard configuration classes.   --> Example 4:   <Collection ConfigType= System.IIS.Sites        AutoGenCollectionClass= False  AutoGenItemClas= False   <!--  Generates no classes  Defaults to using the following two classes as the config classes: System.IIS.Sites System.IIS.SitesItem These classes could store the config data in a custom format, yet implement the IConfigCollection/Item interfaces respectively.   --> SchemaGeneratorFlags EmitXMLSchema EmitCLBBlob Base Version (optional) The base version number of this collection. Each time existing properties are re-ordered (either by re-ordering, inserting new properties, deleting existing properties) or the definition of any existing properties is fundamentally changed, the base version must be incremented.  The version must not change when new columns are added.  Therefore, a version guarantees a well-known subset of properties with well-known definitions. Extended Version (optional) The extended version of this collection: increments whenever collection definition changes. Internal (optional) Flag indicating that this collection is not to be available outside of the configuration system. Only interceptors and the configuration manager can access the collection. How are we going to enforce this? Is this only true for the admin interfaces as opposed to the config manager? <Collection ConfigType= System.Config.PersistedCacheFiles  Internal > NoChangeNotify (optional) Change notification should not be supported on this collection.Should this be a wiring definition? RelationIntegrity (optional) RowIntegrity (optional) NoPublicInsert (optional) NoPublicUpdate (optional) NoPublicDelete (optional) RequiresQuery (optional) Property Definition Every collection has a fixed set of properties. Two names can be specified: Name: the property name is used for programmatic access to the property (i.e. in generated config item classes, etc.). It should be short, but concise. Internal Name (optional): the internal name is used for C++ header filesIf no internal name is specified, the configuration system defaults it to the Name, replacing invalid characters with   (underscore). Property names are scoped within the collection name. They must be unique within the collection. Programmatic and Internal Names are thought to be in different name spaces, i.e. it is possible that the public name of one property has the same string value as the internal name of another property (as long as the second property has a different public name). <Collection ConfigType= System.IIS.Sites   <Property Name= HomeDirectory  InternalName= HOMEDIRECTORY  Type= </Collection> The supported types are: WSTR, fixed or variable length BYTES, fixed or variable length DBTIMESTAMP MULTI_SZ should be a type. ExpandString should be a type. Bool should be a type, not a flag Do we need to support any other types? Size (optional) Indicates the Size of the property in bytes when returned from the config system. The size is only required for fixed size strings and byte arrays. For all other types, including variable size strings and byte arrays, the size definition should be omitted and is calculated by the configuration system. UI4: 4 (defaulted) WSTR: Size=0 indicates variable length (default), Size>0 indicates fixed length (in bytes, not characters!) Is this how we determine variable size properties? BYTES: Size=0 indicates variable length (default), Size>0 indicates fixed length DBTIMESTAMP: 8 (defaulted) GUID: 16 (defaulted) <Collection ConfigType= System.IIS.Sites   <!-- ficticious example: limits size of Bindings property to 512 bytes -->   <Property Name= Bindings  Type= BYTES  Size= </Collection> UIKey (optional) This flag indicates that the value of this property can be used to identify an item instance for UI purposes. Often the UIKey property will be part of the primary key of the item, but it does not have to be unique across items within the collection; it should be  sufficiently unique  for UI purposes. If no property is declared as the UIKey, the UI typically defaults to the Primary Key. <Collection ConfigType= System.IIS.Sites   <!-- Ficticious example: use HomeDirectory in the UI, instead of SiteID -->   <Property Name= HomeDirectory Type= UIKey </Collection> Navigation Property (optional) Primary Key (optional) This flag indicates that the property is to be part of the primary key of this collection. More than one property can be part of the primary key. If no property is designated as part of the primary key, all properties are assumed to be the primary key for the collection (i.e. no primary key validation will be performed). <Collection ConfigType= System.IIS.Sites   <Property Name= SiteID Type= PrimaryKey </Collection> Foreign Key (optional) t we just imply this from relationship information? Default Value (optional) Defines the default value to use for this property if it is not specified in a store, i.e. returned as NULL from the store. <Collection ConfigType= System.IIS.Sites   <!-- ficticious example: defaults the default app pool ID to 1 -->   <Property Name= DefaultAppPoolID Type= DefaultValue= </Collection> StartingNumber/EndingNumber (optional) Defines the permissible values for a numeric property.  If both StartingNumber and EndingNumber are specified, the values of this property must fall within this range, i.e. StartingNumber<= property value <= EndingNumber. If only StartingNumber is specified, the values of this property must be greater or equal to the StartingNumber, i.e. StartingNumber <= property value. If only EndingNumber is specified, the values of this property must be less than or equal to the EndingNumber, i.e. property value <= EndingNumber.   <!-- fictucious example: 10 <= value <= 20 -->   <Property Name= DefaultAppPoolID Type=  StartingNumber=  EndingNumber= CharacterSet (optional) Defines the permissible characters for a string or byte property. <!-- ficticious example: forces HomeDirectory to only be letters --> <Property Name= HomeDirectory  Type=  CharacterSet= abcdefghijklmnopqrstuvwxyz\: ExcludeCharacterSet (optional) Defines invalid charaters for a string or byte property. <!-- ficticious example: disallows slash and dash and plus in HomeDirectory --> <Property Name= HomeDirectory  Type=  ExcludeCharacterSet= Only one of CharacterSet or ExcludeCharacterSet can be specified for a property. Directive (optional) Declares the property as containing directives. Directives impact the way the collection is rendered by the configuration system. List Merge Interceptors use this property to determine which property contains the  Remove Final  etc. directives. The XML Storage Interceptor will allow this property to be used as the element name instead of the PublicItem name. Do we need to do something special to avoid name collisions in XML files (i.e.   directive in more than on collection)? Bool (optional) Should this be just another type? Flag (optional) Used on Bool properties. Indicates to the XML Storage Interceptor that presence/absence of an attribute should determine the value of the property. Enumeration (optional) Declares the permissible values of a numeric property by enumerating these values, as well as symbolic names that can be used instead of these values.  Does this only work for numeric properties? The UI uses this declaration to populate list/comboboxes etc. The generated config item classes contain fields that are enumerators, instead of numeric values. The XML storage interceptor enforces that values for this property be one of the symbolic names. <Property Name= Access  Type=   <Enum Name= Value=   <Enum Name= Write Value=   <Enum Name= Append Value= </Property> WriteNever (optional) WriteOnChange (optional) WriteOnInsert (optional) NotPublic (optional) Declares this property to be for internal use of the configuration system only. Does this apply only to the admin interfaces or also to config manager? NotDocd (optional) Declares this property to be accessible, but not officially documented (i.e. the property has not been fully tested or may be changed in a future release). Does this apply only to the admin interfaces or also to config manager? PublicReadOnly (optional) Declares this property to be read-only. PublicWriteOnly (optional) Declares this property to be write-only. Typically used for clear-text security credentials. InsertDefault (optional) InsertGenerate (optional) InsertUnique (optional) InsertParent (optional) NotNullable (optional) Declares that this property must carry a non-null value. NotPersistable (optional) MultiString (optional) Should this be a type? ExpandString (optional) Declares that a string property may contain substrings that need to be replaced with environment variable settings. The configuration system performs this expansion by calling the Win32 ExpandEnvironmentStrings function. Should this be specified as a type of it s own? Unknown Size (optional) Variable Size (optional) Index Definition Hierarchy & Relationships Foreign Key relations Hierarchical configuration information Configuration information is often structured in a hierarchical fashion.  Containment Often a parent collection has items to which one or more items in another collection are strict subordinates, i.e. they only exist in the context of the parent item and have no meaning by themselves. To facilitate declaring this kind of collection containment, it is possible to use nesting of collection definitions to express the containment. Example: <Collection ConfigType= Directories   <Collection ConfigType= Scriptmaps     <Property Name= Extension  Type=     <Property Name= Module  Type=   </Collection> </Collection> The contained collection inherits all primary key properties of the containing collection. If more flexible control over the containment relationship is needed, the generic relationship definition (described   REF _Ref466188762 \p \h  below ) can be used. Tree structures Often items in a collection represent the nodes in a tree structure. This is typically represented by defining a  Parent  property, which refers back to the primary key of the same collection. Example (Lightning Codegroups):  INCLUDEPICTURE "CodeGroupHierarchy.gif" \* MERGEFORMAT  Schema: <Collection ConfigType= System.Security.CodeGroup   <Property Name= Type= PrimaryKey    <Property Name= Parent Type=   <-- real properties of CodeGroup --> </Collection> <Relation PrimaryCollection= System.Security.CodeGroup  PrimaryProperties= Parent           ForeignCollection= System.Security.CodeGroup  ForeignCollections=            Example XML: < System.Security.CodeGroup Name= All Code   < System.Security.CodeGroup Name= Publisher:Microsoft     < System.Security.CodeGroup Name= Name:MS.Office     < System.Security.CodeGroup Name= Name:MS.Windows   </ System.Security.CodeGroup >   < System.Security.CodeGroup Name= Zone:Internet   < System.Security.CodeGroup Name= Zone:Intranet     < System.Security.CodeGroup Name= Publisher:CorpAdmin     < System.Security.CodeGroup Name= Site:localweb   </ System.Security.CodeGroup >   < System.Security.CodeGroup Name= Site:xyz.com </ System.Security.CodeGroup > Results in the following collection: Parent All Code Publisher:Microsoft All Code Name:MS.Office Publisher:Microsoft Name:MS.Windows Publisher:Microsoft Internet All Code Intranet All Code Publisher:CorpAdmin Intranet Site:localweb Intranet Site:xyz.com All Code Inheritance Do we need to support collection inheritance, i.e. reuse of collection schema? Would we want to apply additional semantics? Query Hints  Schema design guidelines Use separate association collections CIM/WMI strongly recommends this (and uses it in the Win32 and other schemas) to allow items/collections to be related independent from the item/collection definition. Wiring Selecting an Interceptor Chain for a ConfigType <ConfigChain ConfigType= System.IIS.Sites  Chain= System.IIS.Default Instructions to the schema compiler These used to be on the collection meta, but seem to be more driven by wiring decisions (i.e. if you use the CLB interceptor you need CLB blocs, if you use the XML interceptor you need XML blobs). Maybe we can even fully automate this (or at least apply smart defaults)? Instructions to the XML storage interceptor These used to be on the collection meta, but seem to be more driven by wiring decisions (i.e. if you use the CLB interceptor you need CLB blocs, if you use the XML interceptor you need XML blobs). IsContained NotScopedByTablename Managing Schema and Wiring Schema / Wiring compilation XML Schema CLB Schema Header files Collection/Item classes Dynamic schema/wiring discovery XSD representation of Config Schema Configuration schema maps to a subset of XSD. Additional information that has no direct representation in XSD is expressed using schema annotation (additional attributes/elements that have a different namespace). Prototypical examples of configuration information in XML: <configuration> <!-- singleton --> <AppDomain SharedPath= c:\shared  PrivatePath= .;.\bin  ShadowCopy= false <!-- collection --> <foo prop1=  prop2= <foo prop1=  prop2= <!-- scoped collection (BindingPolicy with items BindingRedir) -->  <BindingPolicy>   <!-- only foo elements are valid within the <foos> elemenet -->   <BindingRedir Name= foo.dll  Originator=  Version= 1.0.0.0  NewVersion= 2.0.0.0   <BindingRedir Name= bar.dll  Originator=  Version= 1.0.0.0  NewVersion= 2.0.0.0 </BindingPolicy> singleton (authentication), in a section (security) --> <security>   <authentication mode= Passport </security> singleton (impersonation), nested sections (security, identity) --> <security>   <identity>     <impersonation enable=   </identity> </security> <!-- two scoped collections (compilers, assemblies), in a singleton (compilation) --> <compilation debugmode=   <compilers>     <compiler language=  extension=  type= MSVSA.dll#Microsoft.VB.Compiler     <compiler language=  extension= .cool  type= COOL.dll#Microsoft.COOL.Compiler     <compiler language=  extension=  type=  COOL.dll#Microsoft.COOL.Compiler   </compilers>   <assemblies>     <add assembly= Microsoft.WFC.dll     <add assembly= ADODB.dll     <add assembly="*" />   </assemblies> </compilation> <!-- nested collections/singletons: Policy: scoped collection with items PolicyLevel NamedPermissionSets: scoped collection with items PermissionSet,                               nested within PolicyLevels Permission: (unscoped) collection, nested within PermissionSet FileIOPermission: singleton, nested within Permission <Policy>    <PolicyLevel class= System.Security.Policy.PolicyLevel  version=     <NamedPermissionSets>       <PermissionSet Name="foo"                       Description="The FOO permission set"                      class= System.Security.NamedPermissionSet>         <Permission class= System.Security.Permissions.FileIOPermission  version=           <FileIOPermission Read= C:\Temp Append="D:\MyFiles\document.doc" />         </Permission>       </PermissionSet>       <PermissionSet Name="bar"                       Description="The BAR permission set"                      class= System.Security.NamedPermissionSet>         <Permission class= System.Security.Permissions.FileIOPermission  version=           <FileIOPermission Read= C:\Temp " />         </Permission>       </PermissionSet>     </NamedPermissionSets>    </PolicyLevel> </Policy> <!-- two unscoped collections (foo, bar), in a section (section3) --> <section3> <foo prop1=  prop2= <foo prop1=  prop2= <bar prop1=  prop2=  prop3= <bar prop1=  prop2=  prop3= <foo prop1=  prop2= </section3> <!-- mix of collection (<bar>) scoped collection (<foo> in <foos>) singleton (<zee>) in a section (<section4>)  <section4> <foos> <!-- only foo elements are valid within the <foos> elemenet --> <foo prop1=  prop2= <foo prop1=  prop2= </foos> <bar prop1=  prop2=  prop3= <bar prop1=  prop2=  prop3= <zee Prop1=  Prop2= </section4> </configuration> The following BNR-inspired production rules illustrate the structure: configfile := config-info | section config-info := singleton | collection | scoped-collection singleton := 1* (element +attribute nested-config-info) collection := * (element +attribute nested-config-info) scoped-collection := scoping-element ( collection | directive-collection ) directive-collection := *(directive +attribute) section := *section *configtype nested-config-info := config-info ConfigType, Section: element An element declaration in XSD corresponds to A section, iff the element has a cfg:Section=  attribute. A singleton or unscoped collection, iff the element contains exactly one complexType definition or reference. The multiOccur attribute determines if the element corresponds to a singleton (multiOccur= ) or an unscoped collection (multiOccur= unbounded  or not present). A scoped collection, iff the element has no cfg:Section attribute or a cfg:Section= false  attribute and contains exactly one other element that contains exactly one complexType definition. Any other element declaration is not supported and constitutes an error, unless explicitly annotated using the cfg:Ignore attribute. <!-- Example: singleton schema definition --> <element name="AppDomain" maxOccurs= <complexType> <attribute name= SharedPath <attribute name= Privatepath /> <attribute name= ShadowCopy  type= boolean </complexType> </element> <!-- Example: scoped collection schema definition --> <element name="BindingPolicy" > <element name="BindingRedir" maxOccurs= unbounded <complexType> <attribute name= <attribute name= Originator <attribute name= Version <attribute name= NewVersion <attribute name= UseLatestBuildRevision  type= boolean </complexType> </element> </element> <!-- Example: section schema definition --> <element name= security  cfg:Section=   <element name= authentication  maxOccurs=     <complexType>       <attribute name=         <simpleType base= string           <enumeration value=      cfg:Value=           <enumeration value= Windows   cfg:Value=           <enumeration value= Cookie    cfg:Value=           <enumeration value= Passport  cfg:Value=         </simpleType>       </attribute>     </complexType>   </element> </element> Element for a ConfigType definition Attribute Mapping Restriction (Public) Name of the ConfigType Required MaxOccurs if present:   = Singleton unbounded  = collection other value: error (not supported in V1) not present: same as   (singleton), per XSD spec. MinOccurs Error: not supported in V1. Nullable Error: in the config data model elements have no value. Error: reference to externally defined elements not supported in V1. Error: reference to named complexTypes is not supported in V1. Ignored. Do we need to enforce uniqueness or can we just return an error? Error: namespace control per-element not supported in V1. Fixed Error: in the config data model elements have no value. Final Error: Not supported in V1. EquivClass Error: not supported in V1. Safe to ignore? Default Error: in the config data model, elements have no value. Block Error: Not supported in V1. Abstract Error: Not supported in V1. Note: Attributes, whose semantics is not enforced in V1, generally cause validation errors to allow the config system to enforce these semantics in future versions. If we did not reject these schema definitions in V1, we could break applications that rely on V1 ignoring/not enforcing the semantics. Config Type annotations: All annotations are usually placed into the   XML namespace using a namespace attribute in the root element of the schema file: <schema xmlns= http://www.w3.org/1999/XMLSchema         xmlns:cfg="urn:schemas-microsoft-com:xml-configuration </schema> Can we support other namespacing or do we require cfg: for V1? Is it possible to put our extensions into the default namespace? Do XML schema and data editors safely ignore the annotations? (VS7 XML designer!). Attribute cfg:Section Indicates if the element defines a section in the XML file.  Must be false (or not specified) for a ConfigType definition. boolean, default: false cfg:InternalName Name to use when accessing the ConfigType programmatically. String, default to value of name attribute. cfg:BaseVersion Base version number: increment for incompatible schema changes. integer, Default: 1 cfg:ExtendedVersion Extended version number: increment for compatible schema changes. integer, Default: 1 cfg:Internal Do not expose in management tools. Boolean, default: false cfg:NoListening t allow change notification interception (MS Internal/native only) Boolean, default: true cfg:RelationIntegrity Enforce relational integrity Boolean, default: false. Not supported in V1. Yank this? Error if true? cfg:RowIntegrity Enforce integrity within each row? Amongst rows by primary key? Boolean, default: ? cfg:NoPublicInsert cfg:NoPublicUpdate cfg:NoPublicDelete Disallow inserts/updates/deletes through public APIs (interceptors only). MS Internal only. Boolean, default: false. Not in V1? cfg:RequiresQuery Can only be retrieved with query (no enumeration). Boolean, default: false. cfg:StoreDeltas Guarantee complete change notification across crashes. MS Internal only. Boolean, default: false. cfg:EmitCLBBlob MS Internal only: generate schema for complib store. Boolean, default: false. cfg:EmitXMLSchema MS Internal only: generate XDR schema? Clean schema w/o annotations? Do we still need this? Boolean, default: false. cfg:GenerateConfigObjects MS Internal only: generate strongly typed accessor classes. Boolean, default: false. cfg:ItemClass Type to use when returning items. String, default: none (use System.Configuration.BaseConfigItem). cfg:CollectionClass Type to use when returning a collection of items. String, default: none (use System.Configuration.BaseConfigCollection). cfg:Behavior Interceptor selection. Need to define the mechanism for this! Native, managed etc. cfg:Ignore The config system should ignore this element and all it s child elements. Boolean, default: false. Element for a Section definition Attribute Mapping Restriction (Public) Name of the Section Required MaxOccurs if present:   = Singleton unbounded  = error other value: error (not supported in V1) not present: same as   (singleton), per XSD spec. MinOccurs Error: not supported in V1. Nullable Error: in the config data model sections have no value. Error: reference to externally defined elements not supported in V1. Error: reference to named complexTypes is not supported in V1. Ignored. Error: namespace control per-element not supported in V1. Fixed Error: in the config data model elements have no value. Final Error: Not supported in V1. EquivClass Error: not supported in V1. Safe to ignore? Default Error: in the config data model, elements have no value. Block Error: Not supported in V1. Abstract Error: Not supported in V1. Section Annotations: Attribute cfg:Section Indicates if the element defines a section in the XML file. Section definitions can carry a cfg:Section element to carry default behavior information for elements that are contained in the section. Replaces the previous concept of  Database  in the config system. Do we just append all section names to form the database string or do we want to store/represent this differently? Database currently has a maximum size of 15 boolean, default: false cfg:InternalName Name to use when accessing the ConfigType programmatically, defaults to name. String, default to value of name attribute. cfg:BaseVersion Base version number: increment for incompatible schema changes. integer, Default: 1 cfg:ExtendedVersion Extended version number: increment for compatible schema changes. integer, Default: 1 cfg:Behavior Default interceptor selection for all config types in this section (and it s child sections). Need to define the mechanism for this! Native, managed etc. ConfigType Property definition: complexType The complexType definition in XSD corresponds to  The definition of properties in the configuration schema (<attribute>) and The definition of contained (nested) configtypes (<element>). attribute Attribute Mapping Constraints Property name (Public name) Property type  REF _Ref489452847 \p \h  below value Default value.  attribute must be  default required : maps to NOTNULLABLE. default : use value attribute as default value, ignored if no value attribute otherwise. prohibited fixed  : not supported in V1   error! Use not specified:  if value attribute specified   Error. Ignored. Can we safely ignore or do we need to validate uniqueness? Not supported: error. Not supported: error. Do we want to support the Annotation element in the content of the attribute definition? Assume no, just ignore. Property Annotations: Attribute Mapping Constraints cfg:NameColumn NameColumn Boolean, default: false. cfg:NavColumn NavColumn Boolean, default: false. cfg:UseAsPublicRowName Does this make sense in XSD? This would really be expressed as multiple XML elements defining the same config type UseAsPublicRowName cfg:InternalName InternalName String, defaults to value of the   attribute. cfg:Directive Directive: use this property as the directive property during merge computation. Boolean, default: false. cfg:WriteNever cfg:WriteOnChange cfg:WriteOnInsert WriteNever WriteOnChange WriteOnInsert Boolean, default: false. cfg:NotPublic NotPublic Boolean, default: false. cfg:NotDocumented NotDocd Boolean, default: false. cfg:PublicReadOnly cfg:PublicWriteOnly PublicReadOnly PublicWriteOnly Do we need this? Boolean, default: false. cfg:InsertDefault cfg:InsertGenerate cfg:InsertUnique cfg:InsertParent Do we need this? cfg:NotPersistable NotPersisteable Boolean, default: false. cfg:MultiString MultiString Is this supported in XSD? cfg:ExpandString ExpandString cfg:CaseInsensitive CaseInsensitive Is this supported in XSD? MSDATA annotations? Boolean, default: false. cfg:ToLowerCase ToLowerCase Do we need this? Boolean, default: false. cfg:SchemaGeneratorFlags USEASPUBLICROWNAME USEASNAMEOFNVPAIR USEASVALUEOFNVPAIR USEASTYPEOFNVPAIR USEASGROUPOFNVPAIR USEASMETABASEATTRIBUTE Which do we still support need? What about: Index? TODO: Charset/Range, FlagMask, : what are the XSD mechanisms? Types Primary Key: key What about Foreign Key? Enum definition: simpleType, enumeration Flags: ? RelationMeta QueryMeta cfg:Queries element: IndexMeta Section cfg:Section element: Default wiring. Behavior / Wiring Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Appendix A: Defining the schema of the schema using schema Meta-meta alert! If you or your brain is easily induced into infinite loops, skip this section. <Collection ConfigType= Collection   <Property Name= ConfigType Type= PrimaryKey    <Property Name= PublicName Type=   <Property Name= ItemName Type=   <Property Name= BaseVersion Type=   <Property Name= ExtendedVersion Type=   <Property Name= Internal Type=   <Property Name= NoListening Type= </Collection> <Collection ConfigType= Property   <Property Name= Type= PrimaryKey   <Property Name= Type=     <Enum Name= Value=     <Enum Name= Value=     <Enum Name= BYTES Value=     <Enum Name= Value=     <Enum Name= DBTIMESTAMP Value=   </Property> </Collection> Revision History October 26, 1999 Rev 0.1 (MarkusH): Created. November 4, 1999 Rev 0.2 (MarkusH): Moved config class/item declaration into collection definition. Added section on hierarchy/containment. Changed collection/item naming (internal vs. public). November 23, 1999 Rev 0.3 (MarkusH): Clarified current implementation. July 28, 2000 Rev 0.4 (MarkusH): Added section on XSD mapping. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\textfilelogger specification.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. TextFileLogger Specification TitleTextFileLogger Specification Mohit Srivastava Normal.dot Mohit Srivastava Microsoft Word 9.0TextFileLogger Specification Author: MohitS Date:   TIME \@ "MMMM d, yyyy"  April 24, 2001 Why is it Needed? In certain scenarios, it is desirable to log errors to a textfile log.  Specifically, in IIS, the textfile log is used so remote administrators can easily view WAS and Edit-While-Running errors.  However, there needs to be mechanism to bound the total log size.   Exposure The TextFileLogger is an internal non-exposed class that is instantiated and used by certain ICatalogErrorLoggers.  The log file is split into dwNumFiles of size dwLogSize/dwNumFiles each identified by a 32-bit unsigned version number.  The naming format is as follows: %windir%\<product> config_xxxxxxxxxx.log Once textlog n-1 is full, a textlog n is created, and textlog n-dwNumFiles is deleted.  If textlog n-dwNumFiles is undeletable, this is non-fatal. dwNumFiles is internally configurable but not configurable by the user.  dwLogSize is configurable through the following registry key: HKLM\Software\Microsoft\Catalog42\<product>\TextFileLogSize (dword). If the key is missing or unreadable, a default size of 500K is assumed.  Also, the default is assumed if TextFileLogSize < 500K. Algorithm The first time the dll is loaded, the highest version log file is determined.  g_dwVersion, stored in a shared segment (so it is accessible from multiple processes), is set as follows: If the highest log file version is <= MAX_ULONG and file is not-full, we use this file. If the highest log file version is < MAX_ULONG and file is full, we use  highest log file version + 1 .  If file exists, it gets blown away.  If it can t be blown away, this is fatal, and the logging operation fails. If the highest log file version is MAX_ULONG and file is full, we start at 0 and look for the first non-full log file. Subsequently, when the logfile corresponding to g_dwVersion gets full, we just increment g_dwVersion.  If this new log version already exists, it is blown away.  If it can t be blown away, this is fatal, and the logging operation fails. Whenever g_dwVersion is set, the log file version g_dwVersion-dwNumFiles is deleted. Internal Design Issues Except g_dwVersion, the TextFileLogger is stateless.  As a result, a file handle is opened and closed for every Log operation. Any operation involving the log file(s) and/or g_dwVersion is protected by a mutex.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\net wmi provider.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Management APIs for .Net Frameworks Configuration  Title _PID_HLINKSManagement APIs for .Net Frameworks Configuration  Markus Horstmann COM+ Template.dot Markus Horstmann Microsoft Word 9.0C*=&D0 =]]'^b CKc*T 1b<z+ alJlR \trPP 0rUz~ TGNa8 iVqb8 Tf"f  cRl:6 krmx_ +Ivvf @\\red-prn-12\CORP0066 Ne01: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 LetterX(\,$ h`2z=, \pg7T;ID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMaOutlook Message Attachment MailMsgAtt MailMsgAtt*RE: Type-B DCR Approved: IIS WMI Provider  Untitled Attachment Untitled Attachment 0G F7=IconOnly Tahoma RE: Type-B DCR  Approved: IIS W.../O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659Eric Deily/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659ericde@microsoft.comericdeEric Deilyericde@microsoft.comEric Deily/O=MICROSOFT/OU=APPS-WGA/CN=XENIX_USERS/CN=ERICDE/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368Bruno K. Da Costa/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368brunokc@microsoft.combrunokcBruno K. Da Costabrunokc@microsoft.comBruno K. Da Costa/O=MICROSOFT/OU=APPS-WGA/CN=XENIX_USERS/CN=BRUNOKC/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451Aaron Lee/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451aaronl@microsoft.comaaronlAaron Leeaaronl@microsoft.comaaron lee/o=Microsoft/ou=APPS-WGA/cn=Xenix_Users/cn=aaronlIPM.NoteRE: Type-B DCR Approved: IIS WMI Provider EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Murat Ersanc=US;a= ;p=Microsoft;l=LASSIE-000829183948Z-113168/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766IIS WMI Provider DCR/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Murat ErsanEX:/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Eric Deily; Bruno K. Da Costa; Aaron LeeType-B DCR Approved: IIS WMI Provider Eric, is there any setup work that needs to be done regarding the mfl file? Should setup copy the mfl to the appropriate directory?  -----Original Message----- From:  Eric Deily   Sent: Tuesday, August 29, 2000 11:17 AM Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  go ahead and check it in.    -----Original Message----- From:  Murat Ersan   Sent: Tuesday, August 29, 2000 8:29 AM Bruno K. Da Costa Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  Bruno, let me know ASAP when you are done with testing so that I can check it in. Thanks, Murat  -----Original Message----- From:  Gwyneth Marshall   Sent: Monday, August 28, 2000 4:35 PM Eric Deily Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  Please check it in. Thanks!  -----Original Message----- From:  Eric Deily   Sent: Monday, August 28, 2000 4:34 PM Gwyneth Marshall Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  Importance: Gwyneth, I need to know if we have to checkin the English file or not. The new MOF works (Bruno is still running his tests), so we'll probably be checking in this MOF.  But what about the MFL?   -ericde  -----Original Message----- From:  Gwyneth Marshall   Sent: Friday, August 25, 2000 3:41 PM Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  The mail I got from the Loc team indicates that they think both files (MOF and MFL should be checked into SourceDepot).  For now, just check in the MOF file and I will work with NT International and the localizers to see if the English MFL file should also be checked in. Thanks!  -----Original Message----- From:  Eric Deily   Sent: Friday, August 25, 2000 3:38 PM Gwyneth Marshall Subject: FW: Type-B DCR Approved: IIS WMI Provider  Gwyneth, I'm hacking away on our MOF file right now.  What should we checkin?  I can easily build a base MOF (w/o Description strings) and an english (MS_409) MFL file, but after that I don't know what path we should take.  Should I checkin the base MOF? thanks. -ericde  -----Original Message----- From:  Michael Maston   Sent: Friday, August 25, 2000 1:17 PM Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, what you are doing should work. The way we have done MFLs is that we have the MOFCOMP stage as part of our build process.  What we keep in SD is the "master" MOF, meaning the one with everything in one MOF.  At build time, we generate the MOF and MFL using MOFCOMP.  You hand off the MFLs to localization (we have provided them with a DLL for LocStudio to help with MFLs).    -----Original Message----- From:  Eric Deily   Sent: Friday, August 25, 2000 11:55 AM Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Importance: Michael, It looks like we're needing assisntance on splitting the file.  according to your email, I need to just look for any [Description(...)] markers in the MOF included, and make sure to put an AMENDED tag at the end of it, or AMENDMENT, LOCALE(1033) - right?  One of the examples that appears to have been done on our MOF is the following: [Description("..."): ToSubClass, AMENDMENT, LOCALE(1033)] What's the ToSubClass for, and is it needed to localize?   After I do this, I run  mofcomp -MOF:iiswmim.mof -MFL:iiswmi.mfl iiswmi.mof right?  This will separate out all the descriptions into iiswmi.mfl, and leave iiswmim.mof as the main base MOF, right?  Then I checkin IISWMIM.MOF into my tree.  My question then becomes which MFL do I checkin, or do I hand the MFL off to NT Localization, and checkin the resulting 30 MFL's?   Thanks. -ericde  -----Original Message----- From:  Michael Maston   Sent: Tuesday, July 11, 2000 4:55 PM Richard Ersek; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, the MOF you have now is probably very close to if not already ready for the splitting process.  As long as it identifies the descriptions and display name qualifiers as amended, you are set.  If it doesn't, it is very easy to do and won't affect the structure of the schema or the provider code. Let us know if you need any assist on it.  -----Original Message----- From:  Richard Ersek   Sent: Tuesday, July 11, 2000 4:41 PM Michael Maston; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Ok, I've found a doc that explains this in detail from MSDN.  It pretty much restates what you're saying here.  So it sounds like we convert the mof we have into a version with the basic classes and then create localized mofs with amended classes.  I'm assuming that what we have can be a master mof already but if not, we might need some work.  We're not using any Value qualifiers that I know of so we're basically talking about localizing descriptions and display names.  -----Original Message----- From:  Michael Maston   Sent: Tuesday, July 11, 2000 4:29 PM Richard Ersek; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Our normal localization effort is: 1) Localize any class, property, method, etc. descriptions 2) Localize any VALUES qualifiers  3) Don't put localizable data in the provider 4) Provider should act as a pass-thru for any localized data coming from the data source (in this case the metabase) 5) Don't localize any class, property, method, etc. names 6) Don't localize any of the name of standard qualifiers (read, write, etc.) The way we do this have a "master" MOF file that contains all the English versions of all the localizable text.  We define the localizable qualifiers as "amended".  If you run MOFCOMP with the -MOF and -MFL flags it will split the master MOF into a MOF file without all the localizable data in it and a MFL file that somewhat mirrors the MOF but contains all the localizable data in it.  We have tools for LocStudio that allow localizers to take the MFL and localize it into the various languages.  You ship the MFLs (which are loaded into parallel, locale namespaces).  When a user asks for data (and qualifiers, they are optional by default), WMI looks at their locale and gives them the localized info for their locale. You should probably go over one of our master MOFs with Raxit to see how this all works.  It is fairly simple to add the necessary statements for the amended qualifiers (if they aren't there already). Michael Maston Program Manager, WMI SDK and Providers *mimaston@microsoft.com *425-936-3750   -----Original Message----- From:  Richard Ersek   Sent: Tuesday, July 11, 2000 4:08 PM Raxit Kagalwala; Michael Maston Subject: FW: Type-B DCR Approved: IIS WMI Provider  What are we localizing in the schema, the descriptions?  Anything else?  I'm guessing that the provider code shouldn't have to change - is that ok to assume? Thanks, -Rich  -----Original Message----- From:  Sasha Nosov   Sent: Tuesday, July 11, 2000 4:02 PM Andrew Cushman; Edward Ye; Simon Muzio; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  You must localize your schema if you are on Whistler box (this is the OS requirements). If you don't register with MUI then the MUI stup will not include your loacalized schema. It is between you and the MUI folks to determine.  -----Original Message----- From:  Andrew Cushman   Sent: Tuesday, July 11, 2000 3:49 PM Edward Ye; Sasha Nosov; Simon Muzio; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  what happens if we don't localize our schema and dont' register with mui setup? we are code complete and test complete already and this is the first we've heard of this.  -----Original Message----- From:  Edward Ye   Sent: Tuesday, July 11, 2000 3:45 PM Sasha Nosov; Simon Muzio; Andrew Cushman; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  the rules are not published yet because the project is not setup yet. I just got back from a 3 week vacation. I'll make this happen in this week.   -----Original Message----- From:  Sasha Nosov   Sent: Tuesday, July 11, 2000 3:43 PM Simon Muzio; Andrew Cushman; Edward Ye; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, your schema must be localized and registered with MUI setup according to the new rules that Edward have introduced based on my input. Edward, are these published yet?  -----Original Message----- From:  Simon Muzio   Sent: Tuesday, July 11, 2000 3:32 PM Andrew Cushman; Edward Ye; Richard Ersek Sasha Nosov; Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Not that I know of. Sasha/Michael?  -----Original Message----- From:  Andrew Cushman   Sent: Tuesday, July 11, 2000 3:12 PM Edward Ye; Richard Ersek; Simon Muzio Subject: RE: Type-B DCR Approved: IIS WMI Provider  i don't  think we explicitly considered it. please tell me if mui has affected any other wmi providers. thanks   -----Original Message----- From:  Edward Ye   Sent: Tuesday, July 11, 2000 10:19 AM Andrew Cushman Subject: FW: Type-B DCR Approved: IIS WMI Provider  Hi, Andrew, Have you considered MUI in this picture or MUI is not an issue at all for this work? thx  -----Original Message----- From:  Bjorn Rettig (WINDOWS PM)   Sent: Tuesday, July 11, 2000 6:51 AM Edward Ye Subject: FW: Type-B DCR Approved: IIS WMI Provider  does this work with mui?  -----Original Message----- From:  Andrew Cushman   Sent: Monday, July 10, 2000 1:03 PM Whistler Planning Group Richard Ersek Subject: Type-B DCR Approved: IIS WMI Provider  IIS WMI Provider: The IIS WMI provider provides access through COM object interfaces to IIS metabase data and methods on objects instantiated from the metabase.  WMI is used by Windows 2000, management tools and scripts to manage systems composed of numerous devices, resources and applications. WMI users will access metabase nodes, properties and methods through the COM object instances of WMI classes generated by the WMI provider.  This facilitates access through: Windows Scripting Host (WSH) scripts User-written Visual Basic, C++ and Java applications Management tools and middleware written by ISVs and Microsoft Enterprise products such as Microsoft Exchange The IIS WMI provider will be used by other groups. But there are no external dependencies. The spec is attached. dev approval: geoffrek test approval: stevecon mgmt approval: rodneyl (mackm and kkean support this dcr too)rcpg125 o L qty !up w -q P n !-r m 16 -8 sag~e8 i0-144 @6@18 0:U>6T @29-0  11:17 `M?wTo@GM n; Br ba?xubj4 @GRJE> E`J/K? _S-01p3 ns3b. nks,5*D#f @X_a&Glwy/ m  \[8A qOr_sc 5*ot!5$G >_|o} -Qma|17 h-RmQs) 4A-b. w-0jA n`6@z Taw\` i/B@Y -4/@" rsp}h cl?`R M`ENDE2`/  LOCALE ")QQoP1 I".]o wm7@. Q axwaK )B`Sa n51gD} 8!x6e Vi`UE SG*%^ ar C( QgCG`UF?R 36-375 @2<?PW PG`iDVa @@!803s- 7Q%1y duV0h R 0No UOV_WoX ub<q7 dOe_fo FWs?tOu_ 9P(W`INDOW oM[6:51 tw-5y 'b4P+R 92H"P `+P5qd y}P2(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"> <HTML> <HEAD> <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1"> <META NAME="Generator" CONTENT="MS Exchange Server version 6.0.4418.8"> <TITLE>RE: Type-B DCR Approved: IIS WMI Provider </TITLE> </HEAD> <BODY> <!-- Converted from text/rtf format --> <P><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Eric, is there any setup work that needs to be done regarding the mfl file? Should setup copy the mfl to the appropriate directory?</FONT></P> <P><FONT FACE="Arial"><SPAN LANG="en"></SPAN></FONT><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, August 29, 2000 11:17 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">go ahead and check it in.&nbsp; </FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, August 29, 2000 8:29 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Bruno, let me know ASAP when you are done with testing so that I can check it in. Thanks,</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Murat</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Verdana"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, August 28, 2000 4:35 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Please check it in.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Thanks!</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">G.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, August 28, 2000 4:34 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Importance:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">High</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Gwyneth,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">I need to know if we have to checkin the English file or not. The new MOF works (Bruno is still running his tests), so we'll probably be checking in this MOF.&nbsp; But what about the MFL?&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Verdana"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 3:41 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">The mail I got from the Loc team indicates that they think both files (MOF and MFL should be checked into SourceDepot).&nbsp; For now, just check in the MOF file and I will work with NT International and the localizers to see if the English MFL file should also be checked in.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Thanks!</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">G.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Trebuchet MS"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 3:38 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">Gwyneth,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">I'm hacking away on our MOF file right now.&nbsp; What should we checkin?&nbsp; I can easily build a base MOF (w/o Description strings) and an english (MS_409) MFL file, but after that I don't know what path we should take.&nbsp; Should I checkin the base MOF?</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">thanks.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 1:17 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Yes, what you are doing should work.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The way we have done MFLs is that we have the MOFCOMP stage as part of our build process.&nbsp; What we keep in SD is the &quot;master&quot; MOF, meaning the one with everything in one MOF.&nbsp; At build time, we generate the MOF and MFL using MOFCOMP.&nbsp; You hand off the MFLs to localization (we have provided them with a DLL for LocStudio to help with MFLs).&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 11:55 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Importance:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">High</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Michael,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">It looks like we're needing assisntance on splitting the file.&nbsp; according to your email, I need to just look for any [Description(...)] markers in the MOF included, and make sure to put an AMENDED tag at the end of it, or AMENDMENT, LOCALE(1033) - right?&nbsp; One of the examples that appears to have been done on our MOF is the following:</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Courier New">[Description(&quot;...&quot;): ToSubClass,</FONT></SPAN><SPAN LANG="en-us"><B> <FONT COLOR="#000080" SIZE=2 FACE="Courier New">AMENDMENT, LOCALE(1033)</FONT></B><FONT COLOR="#000080" SIZE=2 FACE="Courier New">]</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">What's the<I> ToSubClass</I> for, and is it needed to localize?&nbsp; </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">After I do this, I run </FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Courier New">mofcomp -MOF:iiswmim.mof -MFL:iiswmi.mfl iiswmi.mof</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">right?&nbsp; This will separate out all the descriptions into iiswmi.mfl, and leave iiswmim.mof as the main base MOF, right?&nbsp; Then I checkin IISWMIM.MOF into my tree.&nbsp; My question then becomes which MFL do I checkin, or do I hand the MFL off to NT Localization, and checkin the resulting 30 MFL's?&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Thanks.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:55 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Yes, the MOF you have now is probably very close to if not already ready for the splitting process.&nbsp; As long as it identifies the descriptions and display name qualifiers as amended, you are set.&nbsp; If it doesn't, it is very easy to do and won't affect the structure of the schema or the provider code.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Let us know if you need any assist on it.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:41 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Ok, I've found a doc that explains this in detail from MSDN.&nbsp; It pretty much restates what you're saying here.&nbsp; So it sounds like we convert the mof we have into a version with the basic classes and then create localized mofs with amended classes.&nbsp; I'm assuming that what we have can be a master mof already but if not, we might need some work.&nbsp; We're not using any Value qualifiers that I know of so we're basically talking about localizing descriptions and display names.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:29 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Our normal localization effort is:</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">1) Localize any class, property, method, etc. descriptions</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">2) Localize any VALUES qualifiers </FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">3) Don't put localizable data in the provider</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">4) Provider should act as a pass-thru for any localized data coming from the data source (in this case the metabase)</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">5) Don't localize any class, property, method, etc. names</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">6) Don't localize any of the name of standard qualifiers (read, write, etc.)</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The way we do this have a &quot;master&quot; MOF file that contains all the English versions of all the localizable text.&nbsp; We define the localizable qualifiers as &quot;amended&quot;.&nbsp; If you run MOFCOMP with the -MOF and -MFL flags it will split the master MOF into a MOF file without all the localizable data in it and a MFL file that somewhat mirrors the MOF but contains all the localizable data in it.&nbsp; We have tools for LocStudio that allow localizers to take the MFL and localize it into the various languages.&nbsp; You ship the MFLs (which are loaded into parallel, locale namespaces).&nbsp; When a user asks for data (and qualifiers, they are optional by default), WMI looks at their locale and gives them the localized info for their locale.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">You should probably go over one of our master MOFs with Raxit to see how this all works.&nbsp; It is fairly simple to add the necessary statements for the amended qualifiers (if they aren't there already).</FONT></SPAN></P> <P><SPAN LANG="en-us"><B><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">Michael Maston</FONT></B></SPAN> <BR><SPAN LANG="en-us"><B><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">Program Manager, WMI SDK and Providers</FONT></B></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" FACE="Wingdings">*</FONT><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">mimaston@microsoft.com</FONT> <FONT COLOR="#008080" FACE="Wingdings">(</FONT><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">425-936-3750</FONT> </SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:08 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Raxit Kagalwala; Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">What are we localizing in the schema, the descriptions?&nbsp; Anything else?&nbsp; I'm guessing that the provider code shouldn't have to change - is that ok to assume?</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Thanks,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">-Rich</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Palatino Linotype"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:02 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman; Edward Ye; Simon Muzio; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">You must localize your schema if you are on Whistler box (this is the OS requirements). If you don't register with MUI then the MUI stup will not include your loacalized schema. It is between you and the MUI folks to determine.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:49 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye; Sasha Nosov; Simon Muzio; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">what happens if we don't localize our schema and dont' register with mui setup?</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">we are code complete and test complete already and this is the first we've heard of this.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:45 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov; Simon Muzio; Andrew Cushman; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">the rules are not published yet because the project is not setup yet. I just got back from a 3 week vacation. I'll make this happen in this week. </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">thx</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Palatino Linotype"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:43 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Simon Muzio; Andrew Cushman; Edward Ye; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">Yes, your schema must be localized and registered with MUI setup according to the new rules that Edward have introduced based on my input.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">Edward, are these published yet?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Simon Muzio&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:32 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman; Edward Ye; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov; Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Not that I know of. Sasha/Michael?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:12 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye; Richard Ersek; Simon Muzio</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">i don't&nbsp; think we explicitly considered it.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">please tell me if mui has affected any other wmi providers.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">thanks </FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 10:19 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Hi, Andrew,</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Have you considered MUI in this picture or MUI is not an issue at all for this work? thx</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Bjorn Rettig (WINDOWS PM)&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 6:51 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">does this work with mui?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, July 10, 2000 1:03 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Whistler Planning Group</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <UL><UL> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">IIS WMI Provider:</FONT> <FONT SIZE=2 FACE="Arial">The IIS WMI provider provides access through COM object interfaces to IIS metabase data and methods on objects instantiated from the metabase.&nbsp; WMI is used by Windows 2000, management tools and scripts to manage systems composed of numerous devices, resources and applications.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT SIZE=2 FACE="Arial">WMI users will access metabase nodes, properties and methods through the COM object instances of WMI classes generated by the WMI provider.&nbsp; This facilitates access through:</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Windows Scripting Host (WSH) scripts</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">User-written Visual Basic, C++ and Java applications</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Management tools and middleware written by ISVs and Microsoft</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Enterprise products such as Microsoft Exchange</FONT></SPAN> </UL></UL> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The IIS WMI provider will be used by other groups. But there are no external dependencies. The spec is attached.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">dev approval: geoffrek</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">test approval: stevecon</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">mgmt approval: rodneyl (mackm and kkean support this dcr too)</FONT></SPAN> </UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL> </BODY> </HTML><BFF90FB6CF66D111BF4F0000F840DB850FFCD103@lassie.dns.microsoft.com><B245B3C3A0729D429CC55A15D5BF71246CA25A@red-pt-01.redmond.corp.microsoft.com>Murat Ersan (Exchange)/O=MICROSOFT/OU=APPS-WGA/CN=RECIPIENTS/CN=MURATEMurat Ersan (Exchange)/O=MICROSOFT/OU=APPS-WGA/CN=RECIPIENTS/CN=MURATEtitle  Management APIs for .Net Frameworks Configuration  January 11, 2001, 2000, Draft Rev 0.8  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the Management APIs for .Net Frameworks configuration, including the .Net Frameworks Configuration WMI provider and the System.Management APIs as applied to configuration information. TOC \o "1-3" Introduction  PAGEREF _Toc503854457 \h  Goals  PAGEREF _Toc503854458 \h  Non Goals  PAGEREF _Toc503854459 \h  WMI provider for .Net Framework Configuration  PAGEREF _Toc503854460 \h  MSINTERNAL: Schema definition format  PAGEREF _Toc503854461 \h  Class Mapping for configuration information  PAGEREF _Toc503854462 \h  2.2.1 Data type mapping  PAGEREF _Toc503854463 \h  2.2.2 Class naming  PAGEREF _Toc503854464 \h  2.2.3 Relations and Associations  PAGEREF _Toc503854465 \h  2.2.4 Qualifiers  PAGEREF _Toc503854466 \h  Singletons [MSINTERNAL]  PAGEREF _Toc503854467 \h  Collections without Primary Key  PAGEREF _Toc503854468 \h  Configuration without schema  PAGEREF _Toc503854469 \h  Enumeration & Query  PAGEREF _Toc503854470 \h  Batch update  PAGEREF _Toc503854471 \h  Selectors  PAGEREF _Toc503854472 \h  2.8.1 Web Application Selector (IIS://)  PAGEREF _Toc503854473 \h  2.8.2 Shell Application Selector (shell://)  PAGEREF _Toc503854474 \h  2.8.3 Configuration File Selector  PAGEREF _Toc503854475 \h  2.8.4 Well-known configuration files  PAGEREF _Toc503854476 \h  Location element  PAGEREF _Toc503854477 \h  Merging and Merge Hierarchies  PAGEREF _Toc503854478 \h  Application Enumeration  PAGEREF _Toc503854479 \h  2.11.1 Base classes  PAGEREF _Toc503854480 \h  2.11.2 Web Applications  PAGEREF _Toc503854481 \h  2.11.3 Web Directories  PAGEREF _Toc503854482 \h  2.11.4 WebApplicationToIISDirectory/VirtualDir/ServerAssociator  PAGEREF _Toc503854483 \h  2.11.5 WebApplicationToAssemblyAssociator  PAGEREF _Toc503854484 \h  2.11.6 Shell Applications  PAGEREF _Toc503854485 \h  2.11.7 Assembly enumeration (cut)  PAGEREF _Toc503854486 \h  2.11.8 Custom Hosts  PAGEREF _Toc503854487 \h  Miscellaneous  PAGEREF _Toc503854488 \h  General Provider requirements  PAGEREF _Toc503854489 \h  Platform Support  PAGEREF _Toc503854490 \h  Setup Requirements  PAGEREF _Toc503854491 \h  Globalization  PAGEREF _Toc503854492 \h  Performance  PAGEREF _Toc503854493 \h  Testing  PAGEREF _Toc503854494 \h  Globalization/Localization  PAGEREF _Toc503854495 \h  Specific schema  PAGEREF _Toc503854496 \h  Samples  PAGEREF _Toc503854497 \h  System.Management  PAGEREF _Toc503854498 \h  Scripting  PAGEREF _Toc503854499 \h  Postponed Features  PAGEREF _Toc503854500 \h  Open Issues  PAGEREF _Toc503854501 \h  Implementation issues  PAGEREF _Toc503854502 \h  Murat s analysis:  PAGEREF _Toc503854503 \h  Error! Bookmark not defined. Revision History  PAGEREF _Toc503854504 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Introduction The .Net Framework consists of several, tightly integrated and interdependent technologies: Common Language Runtime (CLR) Class Libraries Web Services Net Classes All these technology areas have configurable properties, which are specified in XML configuration files. The different areas use different mechanisms to read their configuration information at system runtime, but a single management APIs allows uniform, programmatic access to all .Net Framework configuration information. The Application Center Configuratiom Management team owns this management API. It and consists of the following building blocks: A native code WMI provider: this provider is schema driven and maps the XML configuration information and the configuration file hierarchy to WMI classes and instances. The provider is developed by the Application Center Configuration Management team, and is described in detail in this specification. A managed code API to access all WMI information (System.Management): this API was designed as a collaborative effort between the WMI team, the Frameworks team and the Application Center team. It is developed by the WMI team and is described in detail in  HYPERLINK "http://wmig/vss/specifications/Quasar/program Management/MiniQuasar WMI+ (PM Spec).doc" the System.Management specification . This specification contains sample code describing the use of System.Management for managing configuration information. Goals Provide a management API for all .NET Frameworks configuration information. Enable Management Application for configuration information to be written in both native code and managed code. Enable management of configuration information through command line scripts. Allow discovery of applications and configuration files through the management API. Allow reading and writing of configuration information. Provide basic consistency validation of configuration information during read and write. Provide a management API for user defined application settings (as offered by the <appsettings> mechanism in the Framework configuration system, and potentially for a set of well-known section handlers). MarkusH: Beyond the dictionary section handler there need to be other reusable section handlers (singleton and collection of singleton). We can make this a sample, but ideally this should be part of the Framework configuration system offering. Non Goals Provide a high-performance API for accessing configuration information at system runtime. This requirement is partially covered by the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  Framework configuration system  (read-only in V1). Provide a general-purpose mechanism for application settings. This requirement is partially covered by the section handler mechanism of the Framework configuration system. The management API should allow management of a well-defined subset of application settings. WMI provider for .Net Framework Configuration The WMI provider for .Net Framework Configuration exposes configuration information and configuration file hierarchy to WMI classes and instances. [MSINTERNAL] The class mapping is almost entirely schema driven, but the schema is not publicly extensible: only MS internal groups can define schema and all schema is compiled into the WMI provider binaries. This approach makes it easy to add new configuration entries and modify existing configuration definitions without having to change any code. The schema is defined in a special purpose XML format, that is easier to manually author and maintain than XML schema (XDR and even XSD). [end MSINTERNAL] MSINTERNAL: Schema definition format tbw: The configuration management team owns the schema definition for the .Net config (urtmeta.xml). The schema is defined in XML files, which get compiled into the provider binaries (urtcfg.dll) as part of the configuration system build process. A (ms-internal) utility (catutil.exe) exists to modify the binary schema without recompiling the configuration system binaries. Class Mapping for configuration information The .Net Frameworks Config WMI provider defines all schema in the WMI repository.  The configuration system build process generates a MOF file from the configuration schema (and an internal-only MOF template file), which .Net Frameworks setup installs via the MOF compiler utility. All .Net Frameworks classes reside in the  NETFRAMEWORKSv1  namespace. The namespace is defined in the MOF template file. All non-internal (Metaflag  INTERNAL  on CollectionMeta) configuration tables are exposed into the same WMI namespace, regardless of the database they belong to. The .Net provider does not support side-by-side installation for incremental builds. For major releases we will version the namespace name by changing the MOF template file. The ProductID used to locate the correct config binary version will also be changed and will typically be the same as the namespace name. P2: Currently we read the ProductID as a qualifier from the class definition in the WMI repository. Do we really need to expose this? This avoids the need for script authors to change their scripts from build to build or minor release to minor release. It is consistent with the general versioning approach in the WMI world. MarkusH: We are basing this on the assumption that ASP+ is not s-b-s installable. Need to run this by the .Net people.  P1: MarkusH: Do we need to support scoping of table names by WMI namespace (or database)? In Beta 1, <Assemblies> and <assemblies> conflicted. Assumption is that there will not be conflicting table names.  Configuration base class class NetConfigurationClass { [key] String Selector; Need the exact schema. Data type mapping Schema and data types in the Config system will be mapped to WMI schema and data types as follows: Config System Type WMI Type Collection Class Item in collection Instance Property Property Uint32 String String Multistring Array of strings Binary Array of uint8 Boolean Boolean ExpandSZ (environment variable) String, becomes a boolean qualifier on the property Timestamp Datetime Primary key Foreign key Mapped as a qualifier on the property in the class definition.  Property will be mapped to an appropriate property in the WMI class.  Enumerated types Mapped to appropriate data type and VALUE/VALUEMAP pairs Relations w/ UseContainment Embedded object in the instance Relations w/o UseContainment Association class Enumerated types in the config system have a data type, a set of appropriate values and enumerated values that correspond 1:1 with each value.  These are to be mapped to the appropriate data type, VALUEMAP and VALUE qualifiers in WMI.  For example: In the config system: <Property       InternalName="Zone"                     Type="UI4"      MetaFlags=""> <Enum       InternalName="MyComputer"               Value="0" /> <Enum       InternalName="Intranet"                 Value="1" /> <Enum       InternalName="Trusted"                  Value="2" /> <Enum       InternalName="Internet"                 Value="3" /> <Enum       InternalName="Untrusted"                Value="4" /> </Property> In WMI: uint32 Zone; [ VALUEMAP {  }, VALUES { MyComputer Intranet Trusted Internet Untrusted MarkusH: Is there a better way to expose enums in WMI? What support does System.Management have for the VALUEMAP qualifiers (if any)? MarkusH: Do the Frameworks config APIs define enumeration values for some of these entries? Class naming WMI class names are generated from the public name of the collections.  WMI class names should be case-preserving from the original config system collection name. Should we change the capitalization etc. to comply with WMI conventions? It seems that config files will use camelCasing. Could  we could just make the first character UPPERCASE or do we need more complex mappings (name prefix?)? The config system adopts WMI naming restrictions and case-insensitivity so the provider does not perform any significant translations of schema names between config system and WMI. The following naming restrictions are be enforced in the schema compilation utility: A WMI name must start with a letter Cannot have leading or trailing underscores Only contains letters, digits and underscores as part of the name WMI names are case-insensitive Primary keys can not be Arrays, Real and floating-point numbers, Embedded objects  or characters lower than ASCII 32 (that is, white space characters). P2: StephenR: Does this need to be implemented in catutil? Relations and Associations Relations without a  UseContainment  statement are equivalent to an unnamed association definition.  The name of the association that is created will be built from the names of the two collections that the Relations definition specifies. 1:N relations in the configuration system are supported by supplying a partial primary key as the foreign key.  These need to be mapped appropriately to 1:N associations in WMI. P1: MarcelV: Are we doing the right thing here? Qualifiers Description qualifier The configuration schema allows a  Description  to be defined for tables ( TableMeta.Description ) and columns ( ColumnMeta.Description ). The MOF generator generates a MFL files (MOF files for localization) that contains description qualifiers for the EN locale. The main MOF file does not contain description qualifiers. Localization teams can then pick up the EN MFL and localize it to other languages. This is the standard WMI localization process. DisplayName qualifier Would be nice to support, but is a lower priority. Units qualifier Nice to have, low priority. Password qualifier Should we tag passwords? Mark them as write only? Read/Write qualifiers Read and write qualifiers will be placed by default on all classes. There is no way to detect which classes are read-only vs. read/write from the config system. For .Net all classes are read/write, so this is not a requirement for the .Net provider. Singletons [MSINTERNAL] The provider and MOF generator introduce a  Selector  property to all defined configuration classes. The provider maps the Selector property to the special   query cell where appropriate. Ideally, singleton collections should be handled inside the config system by introducing a  Selector  property on all .Net config classes, so that the provider does not have to do any special work. Due to schedule constraints we leave the current implementation, with the hope of doing code cleanup later, or at least for V2. Collections without Primary Key Multi-instance collections without keys are not required for .Net Framework configuration. Configuration without schema P3 (cut): Need to provide access to raw XML if no schema is available for a configuration node (browsercaps, custom section handlers and potentially custom permissions). Enumeration & Query The provider does not support class enumeration for any configuration class, as this would require enumeration of all configuration files on the machine, which is not useful/practical. The provider supports retrieving instances by key on any class supplied by the provider. The provider supports simple WQL queries but leaves more complex queries to CIMOM to post-filter. MarcelV: WMI only supports returning a super-set of the requested result set (which it them filters). This means that we have to at a minimum parse out the Selector property for every supported query. Can we do this? The provider supports writing of instances. There are no read-only classes. The provider supports creating of instances. The provider supports deleting of instances.   Batch update There will be a special class with a method for batching updates. Signature of the method is as follows: Class BatchEntry [values{"create", "modify", "delete", "retrieve"}, Description("Batch operation to perform: when create-provide an instance, modify-provide an instance, delete-fill in an object path, retrieve-fill in an object path")] uint32 Op; [Description("Instance to be modified or created")] object Inst; [Description("Object (path) to be deleted or retrieved.  For create operations, BatchOperation::ProcessBatch method returns the path for the instance")] string Path; [Description("returns HRESULT of the operation")] uint32 Status; -------------------------------------------------------------------- [abstract, description("Expectation that this will be processed in the order in which the method list is specified.  Derive from this class and implement the method (per provider)")] class BatchOperation { [static] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags); uint32 BatchCreate[in]object ObjectList[], [in]uint32 flags, [out]uint32 status[], [out]string Path[]); uint32 BatchUpdate([in]object ObjectList[], [in]uint32 flags, [out]uint32 status[], [out]string Path[]); uint32 BatchDelete([in]string Path[], [in]uint32 flags, [out]uint32 status[], [out]object results[]); uint32 BatchRetrieve([in]string Path[], [in]uint32 flags, [out]uint32 status[], [out]object results[]); P2: MarkusH: We should run this by the WMI team, so that they can update their documentation, and tell people that the batch update is the preferred method of updating data. P2: MarkusH: System.Management should also have special support for this, so that we guide people in the right direction for doing multi-updates. The configuration WMI provider supports multi-updates only of instances of the same class that are written into the same file. Other cases will result in an error. P2: Multi-update of different classes for the same file. P3: Multi-update of different classes into different files. Selectors Selector modeling all happens in the config system: we add a  Selector  property to every config type. The selector property acts as a symbolic name for a physical file (or multiple files). A set of qualifiers is added to the class that indicates which selectors are supported for this class. The following selectors are supported: Web Application Selector (IIS://) Syntax: IIS://localhost/<metabase path> The syntax for the Selector is identical to the moniker supported by the IIS ADSI provider, except that  All Selectors must use  localhost  as the machine name.  All Selectors must refer to a node at or below the root node of an IIS site (w3svc/<siteid>/root). It is not possible to use the path to the site node (w3svc/<siteid>) as a selector, nor is it possible to use to any metabase path outside of the w3svc node. Example:  IIS://localhost/w3svc/1/root Note: This URL is slightly different from the IIS WMI provider approach, which uses only relative paths and models the machine name as a WMI system property (__server), but it is preferable to require the  localhost  string than to define an entirely new URL scheme. Shell Application Selector (shell://) Syntax: shell://<UNC path to module> Example: shell://c:\program files\my company\myapp.exe Configuration File Selector Syntax:   HYPERLINK "file://<filepath"  file://<filepath >[#<location>] This filepath portion of this URL represents a configuration file in the file system. The (optional) location portion represents the Path of a <location> element within a ASP+ configuration file (see <Location> section in the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification  for details). If no location is specified, the selector only references configuration outside of any <location> element in the file. The URL is normalized according to RFC1738 rules (using URLMon s URL manipulation APIs). Specifically: Forward slashes ( ) are supported and converted to backward slashes ( ) before being passed to Win32 file system APIs. File paths containing reserved characters (like  ) must be encoded using standard URL encoding rules (i.e.   must be  Well-known configuration files Machine configuration Syntax: config://localhost Represents the machine configuration file (%CLR Install Dir%\machine.config). MarkusH: What is the registry key/API we can use to determine this location? MarkusH: Is there any configuration that can not be specified in machine.config, but can appear in an app/dir/shell app? Machine security policy Syntax: config://localhost/security Represents the machine security policy file (%CLR Install Dir %\config\security.config). MarkusH: What about enterprise policy (enterprise.config per runtime security admin spec)? User security policy Syntax: config://localhost/security/user Represents the user security policy file ((%userprofile%\ application data\Microsoft\CLR security config\vxx.xx\security.config) for the current calling user identity. Syntax: config://localhost/security/user/<username> Represents the user security policy file (%userprofile%\ application data\Microsoft\CLR security config\vxx.xx\security.config) for the specified user. How do we determine the user profile location on Win9x? Note: Like in IIS s ADSI provider,  http:  URL are not supported as there is no reliable/efficient mechanism to resolve them to the proper IIS vdir. Using   URLs is also not desirable for management tools/scripts, as the URL mapping can change at any time. Note: The previously supported  appdomain://  selector is not supported, as there is no mechanism to detect the application domain of the caller (if any) from within the WMI provider. Location element class Location { [key] String Selector; [key] String Path; Boolean AllowOverride; The Location class represents Location sections that can be used in ASP+ configuration files to specify configuration for a child node in the configuration file of a parent node, as well as lock down the configuration of a child node against accidental or malicious changes. Refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration spec  for details. The Location Path property is a relative path indicating the child node to which the section is to be applied. The Path segments must be separated using forward slash ( Location elements can only be retrieved or written using a file selector. New location sections can be inserted by creating and saving a new instance of the Location class. An entire location section can be deleted by deleting a Location class instance. Location sections cannot be renamed: the section needs to be deleted and recreated. Configuration entries can be retrieved or written using the #<location> syntax of the file selector, or by using the association from Location class to configuration classes: [Association: DisableOverride ToInstance ToSubClass] class LocationConfiguration: NodeToConfigurationClass {}; Merging and Merge Hierarchies Application Enumeration In addition to manipulating configuration files, the .Net Config WMI provider also supports discovery of .Net applications. The .Net Framework provides three host environments for applications:  Web Applications: ASP+ Shell Applications: command line  Browser hosted  controls The .Net Config WMI provider fully supports discovery of Web Applications, and to a lesser extent of Shell Applications. Base classes Need to turn these definitions into valid MOF syntax Applications and Nodes class ConfigurationNode { [key] String Selector; // must begin with a URL protocol prefix class Application : ConfigurationNode { // "abstract" // Selector: must refer to an application node Configuration information for a node P2: MarkusH: How do we determine which class can be specified at which level (machine vs. app vs. dir vs. file)? Can we use the IIS KeyType? For now assume we don t enforce these restrictions. [Association: DisableOverride ToInstance ToSubClass] class NodeToConfigurationClass { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; What is the real name of the base class of the config classes? [Association: DisableOverride ToInstance ToSubClass] class NodeToConfigurationClassUnmerged : NodeToConfigurationClass { [Association: DisableOverride ToInstance ToSubClass] class ApplicationConfiguration : NodeToConfigurationClass {} class ApplicationConfigurationUnmerged : NodeToConfigurationClassUnmerged {}; Configuration Files and Hierarchy class ConfigurationFile : ConfigurationNode { // Selector String Path; // path to the configuration file for this node. UNC path without  file:  prefix. [Association: DisableOverride ToInstance ToSubClass] //  abstract class ConfigurationHierarchy { [key, read: ToSubClass] ConfigurationNode ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref ContributingConfigFiles; How does one distinguish associations that return collections vs. singletons? [Association: DisableOverride ToInstance ToSubClass] //  abstract class ConfigurationFileLocation { [key, read: ToSubClass] ConfigurationNode ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; How does one distinguish associations that return collections vs. singletons? [Association: DisableOverride ToInstance ToSubClass] class ConfigurationNodeChildren { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; [Association: DisableOverride ToInstance ToSubClass] class ConfigurationNodeParent { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] ConfigurationNode ref Parent; Web Applications class WebApplication : Application { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // VDir for the MB path (based on metabase information) The Selector for a WebApplication must have an   HYPERLINK  \l "_Web_Application_Selector"   protocol prefix The WebApplication class supports instance enumeration, although it is somewhat inefficient: the provider has to enumerate all Sites/Directories in the IIS metabase that have an  approot  property. Note that this enumeration returns both ASP and ASP+ applications, as there is no robust/efficient mechanism to distinguish between ASP and ASP+ applications. WebApplication instances are read-only, except for creation/deletion of instances:  Creating (and saving) a new instance of WebApplication adds an "Approot" property to the IIS metabase. If necessary it creates a new node in the metabase. If the metabase node is already an  approot , only the Vdir is changed to WebApplication.Path. The ConfigurationFilePath property is ignored on write. MarkusH: Which additional MB entries do we need to create? Do we need to call the WAM APIs? Does ASP+ have any specific requirements as to inproc/oop/pooled? Deleting an instance of WebApplication removes the node and all its child nodes from the metabase. Note: The .Net Provider does not provide control over app properties, like inproc/pooled/out-of-proc, app identify. Use the IIS6 WMI provider (or ADSI on W2k) to manipulate these. WebApplication<config class>, WebApplication<config class>Unmerged Given a WebApplication instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with WebApplication instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: WebApplication<config class>: returns the merged configuration for this application, including configuration information inherited from parent nodes or the machine configuration file. WebApplication<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a web application are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries. MarcelV: Should the provider obtain the association information from the WMI repository (common base class!) or do we want to keep this in binary schema for efficiency reasons? Can we use RelationMeta for this? [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class WebApplicationConfiguration : ApplicationConfiguration { [key, read: ToSubClass] WebApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class WebApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged { [key, read: ToSubClass] WebApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for an application Determine all applicable configuration for an application TODO: provide examples using System.Management and native VBS. Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebApplicationHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of all configuration files that contribute to a web application instance.  The associator returns a set of ConfigurationNode instances, which represent the files along the metabase hierarchy, including the machine configuration file. For details on the merge hierarchy, refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification Do we need to express the order of the hierarchy? Sorting the instances by selector should give us the order. [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebApplicationConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] WebApplication ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This association enables retrieval of only the main configuration file for a web application.  [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildren : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; This association enumerates all children (web applications or web directories) under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildApplications : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebApplication ref ChildNodes; This association enumerates only web applications under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildDirectories : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebDirectory ref ChildNodes; This association enumerates all child web directories under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationParentApplication : ConfigurationNodeParent { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebApplication ref Parent; Associates to immediate parent WebApplication, if any. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationParent : ConfigurationNodeParent { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] ConfigurationNode ref Parent; Associates to immediate parent WebApplication or WebDirectory, if any. Web Directories class WebDirectory : ConfigurationNode { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // VDir for the MB path (based on metabase information) The Selector for a WebDirectory must have an   HYPERLINK  \l "_Web_Application_Selector"   protocol prefix The WebDirectory class supports instance enumeration, although it is somewhat inefficient: the provider has to enumerate all Sites/Directories in the IIS metabase that do NOT have an  approot  property. Note that this enumeration returns both directories in ASP and ASP+ applications, as there is no robust/efficient mechanism to distinguish between ASP and ASP+ applications. WebDirectory instances are read-only, except for creation/deletion of instances:  Creating (and saving) a new instance of WebDirectory creates a new node in the IIS metabase and sets the Vdir to WebDirectory.Path. If the metabase node is already an  approot , the approot property is removed. If the node is a site, the save fails. The ConfigurationFilePath property is ignored on write and must be NULL. Deleting an instance of WebDirectory removes the node and all it s child nodes from the metabase (fails if the node is not a web directory). Note: The .Net Provider does not provide control over app properties, like inproc/pooled/out-of-proc, app identify. Use the IIS6 WMI provider (or ADSI on W2k) to manipulate these. WebDirectory<config class>, WebDirectory<config class>Unmerged Given a WebDirectory instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with WebDirectory instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: WebDirectory<config class>: returns the merged configuration for this application, including configuration information inherited from parent nodes or the machine configuration file. WebDirectory<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a web directory are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries. MarcelV: Should the provider obtain the association information from the WMI repository (common base class!) or do we want to keep this in binary schema for efficiency reasons? Can we use RelationMeta for this? [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryConfiguration : NodeToConfigurationClass { [key, read: ToSubClass] WebDirectory ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class WebDirectoryConfigurationUnmerged : NodeToConfigurationClassUnmerged { [key, read: ToSubClass] WebDirectory ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for a directory. Determine all applicable configuration for a directory. MarkusH: TODO: provide examples using System.Management and native VBS. MarkusH => ScottGu: Is it an error if a config that only applied to an app is specified in a dir or does ASP+ just silently ignore the config? What should the provider do? Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebDirectoryHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of all configuration files that contribute to a web directory instance.  The associator returns a set of ConfigurationNode instances, which represent the files along the metabase hierarchy, including the machine configuration file. For details on the merge hierarchy, refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification Do we need to express the order of the hierarchy? Sorting the instances by selector should give us the order. [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebDirectoryConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] WebDirectory ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This associator enables retrieval of only the main configuration file for a web application.  [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryChildren : ConfigurationNodeChildren { [key, read: ToSubClass] WebDirectory ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; This association enumerates all children (web applications or web directories) under this metabase node, not including any children of an immediate child.  [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryParentApplication : ConfigurationNodeParent { [key, read: ToSubClass] WebDirectory ref Node; [key, read: ToSubClass] WebApplication ref ChildNodes; Associates to parent WebApplication. WebApplicationToIISDirectory/VirtualDir/ServerAssociator P3 (cut): Associated to/from IISVDir, IISDirectory, IISServer (iff approot metabase property is set). Requires IIS6 provider to be available on the machine WebApplicationToAssemblyAssociator P3 (cut): Associated to Assembly (based on <compiler/assemblies> list in web.config files) Shell Applications class ShellApplication : Application { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // Path of the module (EXE) of this application The Selector for a ShellApplication must have an  HYPERLINK  \l "_Shell_Application_Selector" shell:  protocol prefix The ShellApplication class does not support instance enumeration, as this would require enumeration of all files in the file system. MarkusH => StevenPr: How can we provide a list of all the application installed on a machine: use the MSI WMI classes, do a disk scan for executables? ShellApplication instances are read-only.  ShellApplication<config class>, ShellApplication<config class>Unmerged Given a ShellApplication instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with ShellApplication instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: ShellApplication<config class>: returns the merged configuration for this application, including configuration information inherited from the machine configuration file. ShellApplication<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a shell application are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries.  [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class ShellApplicationConfiguration : ApplicationConfiguration { [key, read: ToSubClass] ShellApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class ShellApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged { [key, read: ToSubClass] ShellApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for an application Determine all applicable configuration for an application TODO: provide examples using System.Management and native VBS. Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class ShellApplicationHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of the configuration files (machine configuration file and application configuration file) that contribute to a shell application instance.  The associator returns two ConfigurationNode instances, which represent the machine configuration file and the application configuration file. For details on the merge hierarchy, refer to the  HYPERLINK "http://fusion/projects/helium/helium specs/ConfigSyntax.doc" CLR configuration specification MarkusH => StevenPr: What merge rules (if any) can we implement in the provider? Fusion policy can t be merged, nor can security policy  [Association: DisableOverride ToInstance ToSubClass] //  abstract class ShellApplicationConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] ShellApplication ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This association enables retrieval of only the main configuration file for a web application. P3 (cut): Associated to Win32_File class (for EXE binary) P3 (cut): Associated to PrivateAssembly (for root assembly) P3 (cut): Associated to "MSI Component" (?) Assembly enumeration (cut) Assembly P3 (cut): Associated to Assembly (assembly refs in this assembly) PrivateAssembly P3 (cut): Associated to Win32_File (for binary locations) SharedAssembly : Assembly P3 (cut): Enumerated from Global Assembly Cache Custom Hosts The .Net Framework supports hosting of managed applications in arbitrary host environments. The .Net WMI provider is not extensible to accommodate custom hosts. However, custom host writers can (and should) make their applications discoverable by: Implementing their own WMI provider  Deriving their own classes from the appropriate base classes defined by the .Net Configuration provider. Associate their class with configuration classes and relevant other classes in a manner similar to the WebApplication and ShellApplication classes implemented by the .Net Config provider. Miscellaneous No methods beyond the batch methods are implemented, as there are no management methods exposed in the .Net Framework. For web server management the IIS WMI provider (in Whistler) does provide methods like start/stop/pause etc. Support per-user security for each request. Like any WMI provider the provider impersonates the calling user before attempting any file access. All classes derive from CIM_LogicalElement. General Provider requirements No hard-coded strings that would require localization in the provider. When a method on IWbemServices returns an error, the provider should return an extended status object with any additional information that is available whenever possible.  The provider should use the detailed errors mechanism in the config system to provide verbose error information to the user. Platform Support This provider must be supported on all server platforms that the URT supports. This includes Windows NT 4.0, Windows 2000, Whistler and Whistler IA64. Setup Requirements The provider is set up with the rest of the URT components. The provider DLL is regsvr32 ed and the MOF file compiled into the WMI repository. Setup work in .Net setup has already been done. Globalization The provider should be designed, coded and tested to assure globalization compliance. Performance MarkusH: Need to determine performance requirements: working set, requests per second, updates per second, concurrent updates. Testing MarkusH: need to cover stress, End-to-end testing with ASP+/Runtime etc.! Globalization/Localization MarkusH: Beside the Description, are there other localization issues, given that we don t localize config files? [Murate] Details on localizing mof files are in this mail: EMBED MailMsgAtt Who will do the localization? Specific schema s passport.redirecturl: is this a URL or a fixed set of values? Security schema: are custom permissions still supported and do they use a single element name (pass through)? Samples System.Management Scripting Postponed Features  Flag to indicate read-only vs. read-write in config schema: not required by .Net because all classes are read/write. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Info needed from ScottGu: Merge semantics: in ASP+ config spec! Authorization merge semantics? Which ones are singletons?   Which ones can be specified where? Machine, server, app, dir, file? Schema maintenance: notification! End to end testing: ASP+ scenarios Merge? Which sections apply? Selectors: Does http make sense? Implementation issues P3 (cut): Nesting without additional PKs on contained tables (get rid of "key2,key3,key4,..." hacks) P3 (cut): Arbitrary containing XML element names (<System.Web>) P1: Need to support nested code groups for code access security! Revision History Rev 0.1 (MMaston): Initial specification. Rev 0.2 (MarcelV/RaduP): Update with .Net Beta 2 requirements/issues. October 16, 2000 Rev 0.3: Incorporate results of design meeting. New spec template. Assign owners to issues. October 24, 2000 Rev 0.4: Added e-mail discussions. October 30, 2000 Rev 0.6: Incorporated spec review decisions. November 21, 2000 Rev 0.7: More feedback. January 11, 2001 Rev 0.8: Clarified Associations, Location support, Selectors, Hierarchy, Application class definitions. Identified cut features (assembly enumeration, IIS6 provider integration, code cleanup).  The provider could support schema definition in XSD to leverage XML authoring tools like VS7, but this feature has been cut due to schedule constraints and the limited benefit that it provides given that schema is not publicly extensible. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urt configuration.ppt ===
URT Configuration Markus Horstmann Lead Program Manager The Problem Space Fragmented application model Web apps, COM apps etc Fragile integration due to duplication of data Unspecific consistency rules No single point of admin (Ex.: IIS5/COM+) Multiple management APIs exposed to customers Duplication of effort between teams Stores, logic, APIs, tools The Problem Space Goals for URT Config Zero-admin for the end-user (wherever possible) Zero-install: just browse to the app Simplicity for the (server) administrator Small number of complementary concepts Text based configuration files, notepad editable  Zero registration, "XCOPY" deployment URT Config Goals (2) URT Config Goals (3) Uniform config model across URT features Avoid fragmentation of the Win32 platform! Same concepts, same text format, same config API etc. Isolate core system routines from specific stores and transformation logic Avoid redundancy: UI, config interface, system Strategy for URT Config Use Catalog abstraction for all URT configuration information Single namespace, common concepts etc. Single configuration API built on top of catalog Single administrative UI Catalog Separate transformation logic from physical store Data store abstraction technology Storage abstraction: relational data model Location abstraction: query can change location Merge/validation logic abstraction Enhanced schema (XML schema/data based) Edit rules for Config API, relationships etc. Configuration Store implementations Configuration API Managed code, collection/dictionary oriented Catalog in the URT Configuration Stores Text files: XML data URT meta-data engine: module/assembly meta-data CompLib 1.0: relational store (binary format) RegDB: transactional store, built on CompLib Under investigation for URT 1.0: IIS meta-base (XSP needs to run on IIS5) Directives (XML? INI-style?) Store for dynamic state (i.e. Subscriptions) Secure (encrypted) store: passwords, code access etc Registry: legacy? Interop? Configuration Logic Attribute consistency enforced by logic tables Every virtual table defined in schema has  1 data table, N logic tables Specified in wiring DB Allows logic to be plugged together / reused Catalog Configuration Merge Hierarchy of XML files (containers) Machine -> site -> application -> directory Contribute to logical tables (entities) Merge/inheritance semantics Override/final: policies (bandwidth, security) Add/remove/clear: ScriptMaps etc Others can be added via logic tables Configuration Caching What Does the Catalog Team Provide? Query abstraction layer (table dispenser, wiring) Managed & Unmanaged Core data stores (XML, RegDB, DLLs, etc.) Common, reusable logic Merging/inheritance rules (final/override, add/remove) Persistent caching Change notification Others as identified based on requirements Configuration APIs Work with URT teams to ensure config coherency What Does Each URT Team Provide? Catalog Status Drops have been given to Ducttape, OP and fusion Starting broader, daily builds/drops on 8/2: XML extensible schema / wiring XML extensible config cook down Logic table plug-ins (three method for typical LT) Managed and unmanaged catalog APIs CompLib (binary) & RegDB (binary + Tx) stores Change notification Details on http://appsrv/asconfig. Alias: URTConf Towards URT November Release Summary URT Config Status (1) URT Config Status (2) URT Config Status (3) VS7 Config Status Questions? Web site: http://appsrv/asconfig Alias: URTConf Contacts: MarkusH, RCraig, VanVan Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level System Runtimes  (Managed/Unmanaged) Data Store Abstraction (Unmanaged) Validation / Merge Logic (Unmanaged) Applications (Managed) Config APIs (Managed) Config Files Catalog API (Managed/Unmanaged) Other Config stores (cache, volatile data, secure, legacy) Assemblies & DLLs Config Schema AS Replication, AS UI etc. Data Table Store Validation Logic Caching Logic Notification Logic Merge Logic Catalog Slide Not defined Managed? Need definition Security Not defined Managed Need definition Context Start work post M10 Not defined Unmanaged Loader Catalog Drop Schema Access Design in progress Managed Design in progress Managed Same as XSP? WebServer Catalog Drop Schema Access Integrating Defined Unmanaged DuctTape Catalog Drop Schema Access Some defined Managed Messaging Integrated Defined Managed Needs definition Managed Remoting Managed WFC Managed Properties? Managed Message Queue Objects Managed XDO DSNs URT Configuration Markus Horstmann Markus Horstmann Microsoft PowerPoint Times New Roman URT Configuration Times New Roman Markus Horstmann& Lead Program Manager "System On-screen Show Microsoft Internal Times New Roman Symbol Default Design URT Configuration The Problem Space The Problem Space Goals for URT Config URT Config Goals (2) URT Config Goals (3) Strategy for URT Config Catalog Catalog in the URT Configuration Stores Configuration Logic Catalog Configuration Merge Configuration Caching What Does the Catalog Team Provide? What Does Each URT Team Provide? Catalog Status Towards URT November Release Summary URT Config Status (1) URT Config Status (2) URT Config Status (3) VS7 Config Status Questions? Fonts Used Design Template Slide Titles _PID_HLINKS Markus Horstmann
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urt configuration system.ppt ===
URT Configuration System Robert Craig Markus Horstmann Example: Application Example: Application Example: Consumer code Config Architecture Diagram Configuration Schema Example: Adding config logic 1) Define schema, done. If merge interceptor not already written: 2) Plug-in interceptor code 3) Write interceptor code ScriptMap Example: 1) Schema Scriptmap Example: 2) Wiring Configuration Manager Maps request for config data/objects to config interceptors Config interceptors can be chained Schema driven, programmatically overridable Caches config data and objects Owned by config team. Per-appdomain object. Config Manager API: Object GetConfig( String key, String selector, ServiceLevel s); Configuration Interceptors ScriptMap Example: 3) Code Configuration Objects Base Config Object Primary consumer: administrative tools Implements XML-DOM-style interface Can be cast to strongly typed object for runtime consumers Config Implementation Which interceptors do we need? Hierarchy Interceptors HTTP Hierarchy Interceptor (WebApps/XSP) URL => UNC Shell Hierarchy Interceptor (EXEs) Machine/User Browser Hierarchy Interceptor (Web Client Apps) IE Cache etc., tbd Merge Interceptors List merge (Add/Remove/Final/Clear) Property merge (Inheritance/Final) Config Implementation Storage interceptors XML Store interceptor Parses XML attributes/elements (incl. Directives) into config data Assembly Store interceptor Turns assembly meta-data into config data/objects Config Implementation Custom interceptors Script interceptor (URL rewrite) Runs the script (XML element body) !!?? Validation interceptors Site/Pool/Application validator etc. Change Notification interceptor (Filter) Part of change notification system Intercepts writes and provides detailed change info Config Implementation Change notification system Separate object  Manages subscriptions for specific config data Using delegates/connection points for now, switch to Pub/Sub later Listens for file change notifications Requirements: XSP-1 Configuration directives are associated with nodes in a hierarchy Directives: schema indicates directives Hierarchy: HTTP Hierarchy interceptor Incl. Dirs, files, regex Merge parent/child config, free form directives Name-value pairs: properties Commands: schema flag Scripts (URL rewrite): Script interceptor Open Merge semantics:  custom merge interceptor, extend merge interceptor via Validation interceptor !!?? Requirements: XSP-2 Requirements: XSP-3 Requirements: XSP-4 Requirements: XSP-5 Requirements: RT-1 Efficient, production implementation (Nov.) Done. Need to start concrete scheduling Published perf goals, continuous measuring Will do. UI: separate discussion Get into URT integration build: done Publish plan/schedule: done. Equal emphasis on client & server: yes, need details, also syncing with Fusion/Neptune. Support assembly meta-data: done. Requirements: RT-2 Requirements: RT-3 Requirements: RT-4 Backup/Restore: XCOPY, AppCenter will provide replication engine Browser download: config is just XML, hierarchy interceptor User defined objects: Extensibility via schema/interceptors Can handle serialized objects, but no Admin! Migration Existing code-base is small (1000 lines?) Config team can probably absorb migration cost Need to derive from BCO Can be done incrementally (Object still suported) Who does what? Who does what? URT teams Schema for private collections Contribute to shared schema Custom merge interceptors To be decided More storage interceptors (Secure Store? SQL?) Cross team/cross collection validation Admin UI team Client UI (with Fusion/Neptune) Server UI (built on config) Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level Hierarchy Merge Storage Config Manager Shell List Merge Property Merge XML Store Assembly Store Secure Store Config Files System Runtimes Management API, UI Schema Files Using Catalog for URT Configuration Markus Horstmann Markus Horstmann Microsoft PowerPoint Times New Roman URT Configuration System+ Times New Roman Robert Craig Markus Horstmann& "System On-screen Show Microsoft Internal Times New Roman Courier New Default Design URT Configuration System Example: Application Example: Application Example: Consumer code Config Architecture Diagram Configuration Schema Example: Adding config logic ScriptMap Example: 1) Schema Scriptmap Example: 2) Wiring Configuration Manager Configuration Interceptors ScriptMap Example: 3) Code Configuration Objects Base Config Object Config Implementation Which interceptors do we need?  Config Implementation Config Implementation Config Implementation Requirements: XSP-1 Requirements: XSP-2 Requirements: XSP-3 Requirements: XSP-4 Requirements: XSP-5 Requirements: RT-1 Requirements: RT-2 Requirements: RT-3 Requirements: RT-4 Migration Who does what? Who does what? Fonts Used Design Template Slide Titles Markus Horstmann
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urtconfdec.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft URT Configuration in the December release Title _PID_HLINKSURT Configuration in the December release Markus Horstmann This documents collects the configurable items in the URT December'99 release. COM+ Template.dot Markus Horstmann Microsoft Word 9.06X[Xh ;X[Xh 1b<z+ u<X[Xh boIZA alJlR MX[Xh 0rUz~ VX[Xh TGNa8 Tf"f  cRl:6 krmx_ pX[Xh ,Lyvo: @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool \\red-prn-12\CORP0066 44E/1MC1 NPI632532 \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  URT Configuration in the December release October 15, 1999, Draft Rev 0.4  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This documents collects the configurable items in the URT (COM+ 2.0) December '99 release. TOC \o "1-3" Goals  PAGEREF _Toc464647425 \h  Current files/layout  PAGEREF _Toc464647426 \h  Machine-level configuration files  PAGEREF _Toc464647427 \h  Per-user configuration files  PAGEREF _Toc464647428 \h  Per-application configuration files  PAGEREF _Toc464647429 \h  Per-directory configuration files  PAGEREF _Toc464647430 \h  Per endpoint configuration files  PAGEREF _Toc464647431 \h  Per-assembly  PAGEREF _Toc464647432 \h  Suggested layout  PAGEREF _Toc464647433 \h  Machine-level configuration files  PAGEREF _Toc464647434 \h  Per-user configuration files  PAGEREF _Toc464647435 \h  Per-application configuration files  PAGEREF _Toc464647436 \h  Per-directory configuration files  PAGEREF _Toc464647437 \h  Per-endpoint configuration files  PAGEREF _Toc464647438 \h  Per-assembly  PAGEREF _Toc464647439 \h  Changes per team  PAGEREF _Toc464647440 \h  Configuration (MarkusH)  PAGEREF _Toc464647441 \h  Ducttape (EricDe)  PAGEREF _Toc464647442 \h  XSP (GaryBu)  PAGEREF _Toc464647443 \h  Lightning (StevenPr)  PAGEREF _Toc464647444 \h  Messaging (ChrisWhi)  PAGEREF _Toc464647445 \h  Assembly Loader / Fusion (MarkusH/StevenPr)  PAGEREF _Toc464647446 \h  Open Issues  PAGEREF _Toc464647447 \h  Revision History  PAGEREF _Toc464647448 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Goals This document tries to  Provide an overview for users of the December release of what needs to be configured where. Identify potential for unification Current files/layout Machine-level configuration files %windir%\admin.cfg: Fusion assembly version policy %windir%\xspdt\global.xml: Ducttape/WebServer. Directory is really install location of catalog.dll %windir%\System.messaging.cfg: Messaging %windir%\xspdt\.webconfig: XSP. Directory is really the install location of system.ASP.dll ?\op.clb: OP. Binary file, edited through WONS APIs and /or NSADMIN.EXE tool. %windir%\system32\security.cfg: Lightning code access security policy Per-user configuration files %USERPROFILE%\security.cfg: Lightning code access security policy Per-application configuration files <appdomain root dir>\app.cfg: Fusion assembly version policy <appdomain root dir>\appcfg.xml: Ducttape application configuration <appdomain root dir>\.dirconfig: XSP application/directory configuration Per-directory configuration files <appdomain root dir>\<relative URL>\.dirconfig: XSP directory configuration Per endpoint configuration files <app root dir>\<relative URL>\<filename>.mms: messaging endpoint configuration. File may or may not physically exist. Per-assembly <assembly root dir>\<assembly name>.cfg: Managed properties Suggested layout Still need final word on setup locations. Machine-level configuration files All machine-level configuration files reside under the URT installation directory in a  Config  sub-directory. Tentative default installation for URT: %windir%\COMPlus. The machine configuration directory would thus be %windir%\COMPlus\Config, unless overridden by the user. Hereafter we refer to this directory using <machineconfigdir>.  Managed code should obtain this location by calling System.Configuration.ConfigManager.GetMachineConfigDirectory (in MngdIst.dll), rather than hardcoding any paths. Unmanaged code should call the GetMachineConfigDirectory API (catalog.h header, link to cat.lib). <machineconfigdir>\machine.cfg:  Fusion assembly version policy Ducttape/WebServer configuration. XSP configuration when running under Ducttape. Example of a machine configuration file: <?xml version="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <AppPoolList>     <AppPool AppPoolID="AppPool32"               PeriodicRestartTime="211" PeriodicRestartRequests="212" MaxProcesses="213"              PingingEnabled="214" IdleTimeout="115" RapidFailProtection="216"/>   </AppPoolList>   <SiteList>     <Site SiteID="304" DefaultAppPoolID="AppPool32"           HomeDirectory="%systemroot%\xspdt_invalid">       <BindingList>         <Binding Name="URLPre34"/>       </BindingList>     </Site>   </SiteList>   <webconfig xmlns=     <!-- xmlns=  only needed when xmlns is specified in <configuration> root element --> <!-- XSP configuration -->   </webconfig>   <BindingPolicy>     <BindingRedir Name="wininet" PK="" Version="0.5.0.10" VersionNew="0.7.0.1"                   NoPublisherPolicy="no"/>   </BindingPolicy> </configuration> <machineconfigdir>\web.cfg: XSP configuration, when running under IIS. <machineconfigdir>\System.messaging.cfg: Messaging configuration <machineconfigdir>\security.cfg: Lightning code access security policy ?\COMPlus\op.clb: OP. Binary file, edited through WONS APIs and /or NSADMIN.EXE tool. Per-user configuration files %USERPROFILE%\Config.cfg: Lightning code access security policy Per-application configuration files <appdomain root dir> is the Application Home directory defined in the Application Domain. All teams use the same semantics. <appdomain root dir>\Config.cfg:  Fusion assembly version policy Ducttape application configuration XSP app/dir configuration Example of an application configuration file ( config.cfg <?xml version ="1.0"?> <configuration xmlns="x-schema:Catalog.xms">   <webconfig xmlns=     <!-- xmlns=  only needed when xmlns is specified in <configuration> root element -->     <!-- XSP configuration goes here -->   </webconfig>   <Application     IsApp="TRUE"     AppEnabled="TRUE"/>   <BindingMode>     <AppBindingMode Mode="normal"/>   </BindingMode>   <BindingPolicy>     <BindingRedir Name="wininet" PK="" Version="0.5.0.10" VersionNew="0.6.0.0" NoPublisherPolicy="no"/>   </BindingPolicy>   <CodeBase>     <CodeBaseHint Name="wininet" PK="" Version="0.5.0.10" CodeBase="http://ie" />   </CodeBase> </configuration> Per-directory configuration files <appdomain root dir>\<relative URL>\Config.cfg: XSP directory configuration Per-endpoint configuration files <app root dir>\<relative URL>\<filename>.mms: messaging endpoint configuration. File may or may not physically exist. Per-assembly <assembly root dir>\<assembly name>.cfg: Managed properties Changes per team Configuration (MarkusH) Rename/move ducttape global configuration file to <machineconfigdir>\machine.cfg. Implement the System.Configuration.ConfigManager.GetMachineConfigDirectory method (to be checked in on 10/13, available in 10/14 config system build). Rename Ducttape app configuration file to  Config.cfg Change root node from  XMLDataStore configuration . Coordinate change with Fusion and Ducttape (default files) and OP (XML schema). Add <web> node under <configuration> node with open schema. Ducttape (EricDe) Rename global configuration file to  machine.cfg : prevent accidental download,  global  sounds like  enterprise global Move  machine.cfg  into <machineconfigdir>. Rename app configuration file to  Config.cfg : prevent accidental download. Change default files in build/setup. Coordinate content with other teams. Requires coordinated checkin with config team. XSP (GaryBu) Rename app/dir configuration file to  Config.cfg Read config from <Configuration> <web  ></web> <configuration/> node. Config team will change their schema to allow for an open <web> element.  Change default files in build/setup. Move machine config file into <machineconfigdir>. Lightning (StevenPr) Move machine security policy to <machineconfigdir>. Potentially: store machine policy in  machine.cfg  file (pending config team investigation, and design of storing serialized classes). Rename user security policy to  Config.cfg . Potentially: adjust format to be the same as machine.cfg format. Messaging (ChrisWhi) Move messaging machine configuration into <machineconfigdir>. Assembly Loader / Fusion (MarkusH/StevenPr) Rename Fusion application configuration file to  Config.cfg : shared with Ducttape, both using catalog => should  just work Move Fusion machine configuration file to <machineconfigdir>. Rename Fusion machine configuration file to  machine.cfg Need to coordinate contents of default files with other teams (if any). Setup Install default machine config file(s) into %windir%\COMPlus\Config directory. Write new registry keys for catalog DLL and machine config directory (per   HYPERLINK "http://appcenter/config/specs/urt1/using urt config.htm"  http://appcenter/config/specs/urt1/using urt config.htm What is the default install location for COM+ 2.0 binaries? Assuming %windir%\COMPlus Needs final sign off from setup team. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 6, 1999 Rev 0.1 (MarkusH): Created. October 8, 1999 Rev 0.2 (MarkusH): Added suggestions from config meeting. Added suggested file layout. Added required changes per-team with owners. October 12, 1999 Rev 0.3 (MarkusH): Resolved last issues. Changed per-app/directory files for  Config.cfg . Added GetMachineConfigDirectory API. Clarified <web> sub-node for XSP config. October 15, 1999 Rev 0.4 (MarkusH): Changed <web> to <webconfig> (on request from XSP). Clarified syntax for <webconfig> tag when using schema validation. Clarified use of web.cfg by XSP only when running under IIS. Added section for Setup changes. All teams (except Setup) have now signed off on this.  Microsoft Confidential Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urt configuration beta 1.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Configuration in URT Beta 1 Title _PID_HLINKSConfiguration in URT Beta 1 Markus Horstmann This document summarizes URT Configuration in the Beta 1 timeframe. COM+ Template.dot Markus Horstmann Microsoft Word 9.0su9X^ 1b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 >[.mN krmx_ @\\red-prn-12\CORP0066 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 LetterID="{221120B7-CC55-47E1-A9C3-0298DF25FD3F}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="4F4D9A6DA6F3F1F7F1F7F1F7F1F7" DPB="9E9C4B3ED5C225C325C325" GC="EDEF388BC8DBC9DBC924" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmannf! Normal.NewMacros.ExtractStyleTextft   ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmanna Extract all paragraphs with style:  Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomN\W*>O Win16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal DocumentjProject \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 DFM20 .DLL#Mic rosoft  ibrary/ 00}#0  6D08A20 3-7015-1@1D1-89 080C74D4 -TEMP \VBE\ Templa C\\marku thared gram F iles\ UOf fice\ s\ COM+  G{2DF8D0 4C-5BFA @B-BDE5@tA ;`MSO97  x8.0L  _alc ThisDocu mentGbjbjU title  Configuration in URT Beta 1 May 9, 2000, Draft Rev 0.6,   AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document summarizes URT Configuration in the Beta 1 timeframe.  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc482532721"  Overall URT Configuration Inventory, by Feature Area  PAGEREF _Toc482532721 \h   HYPERLINK \l "_Toc482532722"  COR (Lightning)  PAGEREF _Toc482532722 \h   HYPERLINK \l "_Toc482532723"  1.1.1 Config.cfg / <exe_modulename>.cfg  PAGEREF _Toc482532723 \h   HYPERLINK \l "_Toc482532724"  1.1.2 machine.cfg  PAGEREF _Toc482532724 \h   HYPERLINK \l "_Toc482532725"  1.1.3 security.cfg  PAGEREF _Toc482532725 \h   HYPERLINK \l "_Toc482532726"  ASP+ / Managed Properties  PAGEREF _Toc482532726 \h   HYPERLINK \l "_Toc482532727"  1.2.1 config.web:  PAGEREF _Toc482532727 \h   HYPERLINK \l "_Toc482532728"  NetClasses  PAGEREF _Toc482532728 \h   HYPERLINK \l "_Toc482532729"  Configuration APIs  PAGEREF _Toc482532729 \h   HYPERLINK \l "_Toc482532730"  System.Configuration  PAGEREF _Toc482532730 \h   HYPERLINK \l "_Toc482532731"  2.1.1 Selectors  PAGEREF _Toc482532731 \h   HYPERLINK \l "_Toc482532732"  2.1.2 Generic Access (IConfigItem/IConfigCollection)  PAGEREF _Toc482532732 \h   HYPERLINK \l "_Toc482532733"  2.1.3 Read/Write APIs (Config Manager)  PAGEREF _Toc482532733 \h   HYPERLINK \l "_Toc482532734"  2.1.4 ADO+ Data Adaptor  PAGEREF _Toc482532734 \h   HYPERLINK \l "_Toc482532735"  2.1.5 Strongly typed accessor classes  PAGEREF _Toc482532735 \h   HYPERLINK \l "_Toc482532736"  2.1.6 Interceptors  PAGEREF _Toc482532736 \h   HYPERLINK \l "_Toc482532737"  2.1.7 Extensibility  PAGEREF _Toc482532737 \h   HYPERLINK \l "_Toc482532738"  2.1.8 Native WMI Provider  PAGEREF _Toc482532738 \h   HYPERLINK \l "_Toc482532739"   PAGEREF _Toc482532739 \h   HYPERLINK \l "_Toc482532740"  System.Web.Config  PAGEREF _Toc482532740 \h   HYPERLINK \l "_Toc482532741"  2.3.1 Extensibility: Section Handlers  PAGEREF _Toc482532741 \h   HYPERLINK \l "_Toc482532742"  COR Security Policy  PAGEREF _Toc482532742 \h   HYPERLINK \l "_Toc482532743"  Configuration in Beta 1  PAGEREF _Toc482532743 \h   HYPERLINK \l "_Toc482532744"  Configuration system features  PAGEREF _Toc482532744 \h   HYPERLINK \l "_Toc482532745"  3.1.1 Reading, writing, querying URT system configuration:  PAGEREF _Toc482532745 \h   HYPERLINK \l "_Toc482532746"  3.1.2 Programming model for configuration:  PAGEREF _Toc482532746 \h   HYPERLINK \l "_Toc482532747"  3.1.3 Manageability through WMI  PAGEREF _Toc482532747 \h   HYPERLINK \l "_Toc482532748"  Benefits of configuration system approach  PAGEREF _Toc482532748 \h   HYPERLINK \l "_Toc482532749"  3.2.1 Text-based configuration  PAGEREF _Toc482532749 \h   HYPERLINK \l "_Toc482532750"  3.2.2 Remote, text-based configuration  PAGEREF _Toc482532750 \h   HYPERLINK \l "_Toc482532751"  3.2.3 Simple, efficient access through strongly typed classes  PAGEREF _Toc482532751 \h   HYPERLINK \l "_Toc482532752"  3.2.4 Generic consumers  PAGEREF _Toc482532752 \h   HYPERLINK \l "_Toc482532753"  3.2.5 ADO+ Data Binding/Data Designer support  PAGEREF _Toc482532753 \h   HYPERLINK \l "_Toc482532754"  3.2.6 Command-line scriptability (through WMI provider)  PAGEREF _Toc482532754 \h   HYPERLINK \l "_Toc482532755"  3.2.7 Exposure to WMI-enabled management tools  PAGEREF _Toc482532755 \h   HYPERLINK \l "_Toc482532756"  3.2.8 Access through WMI+  PAGEREF _Toc482532756 \h   HYPERLINK \l "_Toc482532757"  3.2.9 Programmatic remote administration through WMI  PAGEREF _Toc482532757 \h   HYPERLINK \l "_Toc482532758"  3.2.10 Extensibility  PAGEREF _Toc482532758 \h   HYPERLINK \l "_Toc482532759"  3.2.11 Configuration system for app developers  PAGEREF _Toc482532759 \h   HYPERLINK \l "_Toc482532760"  Revision History  PAGEREF _Toc482532760 \h  Overall URT Configuration Inventory, by Feature Area COR (Lightning) Config.cfg / <exe_modulename>.cfg Every Application Domain can have a configuration file, that lives in the root directory of the application domain.  If the host does not explicitly specify an application configuration file name, Fusion will automatically look for an <Appbase>\config.cfg file. => StevenPr/AlanShi This configuration information is accessible through the URT Configuration System (System.Configuration).    <AppDomain        PrivatePath="bin;bin2;foo"        SharedPath="http://sharedpath;bin"        ShadowCopy="True"     />    <BindingMode>       <AppBindingMode Mode="normal"/>    </BindingMode>    <BindingPolicy>       <BindingRedir Name="g_SglAsm_SglMod1.dll"                     Originator="8e47bf1a5ed0ec84"                     Version="*" VersionNew="3.3.3.3"                     UseLatestBuildRevision="no"/>    </BindingPolicy>    <Assemblies>       <CodeBaseHint Name="g_SglAsm_SglMod1.dll"                     Originator="8e47bf1a5ed0ec84"                     Version="3.3.3.3"                     CodeBase="http://codebasehint/foo.dll"/>    </Assemblies> Details in   HYPERLINK "http://comrtime/specs/admin/versioning.doc"  http://comrtime/specs/admin/versioning.doc Need sample code here! Do we want an AppDomainSelector? machine.cfg This configuration file resides in %windir%\complus\<build#>\config. It can contain all the entries defined in 1.1.1, which will be used as machine-wide binding/download policy. The machine configuration file can be accessed through the URT Configuration System (System.Configuration). The location of the machine configuration file can be obtained through System.Configuration.ConfigManager.GetMachineConfigDirectory. Need sample code! Do we want a LocalMachineSelector? security.cfg This configuration file resides in ???. It can not be accessed through the URT Configuration System. <Permission class= System.Security.Permissions.EnvironmentPermission <Read> ;FILES</Read> <Write>ACCESS; My;var </Write> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileDialogPermission <Read>c:\Temp<Read/> <Append>c:\Temp<Append/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileIOPermission <Read>C:\Temp;D:\MyFiles\document.doc<Read/>   <Append/>D:\MyFiles\document.doc</Append>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.IsostorePermission <Limit>160000</Limit> <CanRoam/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.NetIOPermission <NetPermission Host= www.microsoft.com  Ports=  Access= <NetPermission Host= localhost  Ports=  Access= Read,Write,Accept,Listen,Open <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.RegistryPermission <Read> some keys,values separated by semicolon</Read>  <Append></Append> <Write></Write> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.SecurityPermission <Execution/>  <UnmanagedCode/>  <SkipVerification/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.UIPermission <SafeTopLevelWindows/>  <AllClipboard/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <!-- Custom permission example --> <Permission class= MyApp.Permissions.MyDBPermission <DB Name= PayRecords  Access= <VersionTag>XMLNotationV1</VersionTag> </Permission> <PermissionSet class= System.Security.NamedPermissionSet> <Permission   class= System.Security.Permissions.SecurityPermission <SafeTopLevelWindows/>  <AllClipboard/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileIOPermission <Unrestricted/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission   class= System.Security.Permissions.SecurityPermission <Execution/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Name>MyPermissionSet</Name> <Description>Allows clipboard and some Windows UI as well as full file IO and execurion of code</Description>  </PermissionSet> <CodeGroup class="System.Security.Policy.CodeGroup"> <IMembershipCondition class="System.Security.Policy.ZoneMembershipCondition">         <Zone>Trusted</Zone> <PermissionSet class="System.Security.NamedPermissionSet">                <Name>ForInternet</Name> </PermissionSet> </IMembershipCondition> <CodeGroup class="System.Security.Policy.CodeGroup"> <IMembershipCondition class="System.Security.Policy.ZoneMembershipCondition"> <Zone>Untrusted</Zone> <PermissionSet class="System.Security.NamedPermissionSet">                  <Name>Nothing</Name> </PermissionSet>                </IMembershipCondition> </CodeGroup> </CodeGroup> Details in   HYPERLINK "http://comrtime/specs/Security/securityadmin.doc"  http://comrtime/specs/Security/securityadmin.doc Need to track down remoting config for Beta 1! ASP+ / Managed Properties config.web: This configuration file can reside in the application root directory of an ASP+ application or in the %windir%\complus\<build#>\ directory. Should this be in the Config sub-directory to avoid accidental access to binaries? Configuration information in this file can be accessed through System.Web.Configuration or System.Configuration or   at runtime   through System.ASP.HttpRequest. Need to make sure the schema is up-to-date. => MarkusH/RajeshMi Need sample code! Need to sync with XSP team on samples/demos/test!      <httpmodules> <add type="System.Web.State.CookielessSessionModule" /> <add type="System.Web.OutputCacheModule" /> <add type= System.Web.State.SessionStateModule <add type= ScottGu.dll#FooClass      </httpmodules>      <httphandlers> <add verb=  path= Foobar.Scott  type= Foobar.dll#Foobar.Scott <add verb=  path= Foobar.Baz  type= Foobar.dll#Foobar.Baz      </httphandlers>       <httphandlerfactories> <add verb= GET,POST,PUT  path="*.aspx" type="System.Web.Pages.PageFactory" /> <add verb=  path="*.scottgu" type="Scottgu.dll#ScottGuFactory" /> <add verb=  path="*.asax" type="System.Web.RestrictedResourceHandler" />       </httphandlerfactories>      <sessionstate inproc=  cookieless="true" timeout="20" server="localhost" port="42424"/>      <globalization requestencoding= us-ascii  responseencoding= iso-8859-1      <compilation>           <compilers defaultlanguage=   <compiler language=  extension=  type= MSVSA.dll#Microsoft.VB.Compiler   <compiler language=  extension= .cool  type= COOL.dll#Microsoft.COOL.Compiler   <compiler language=  extension=  type=  COOL.dll#Microsoft.COOL.Compiler           </compilers>           <assemblies>   <add assembly= Microsoft.WFC.dll   <add assembly= ADODB.dll   <add assembly="*" />           </assemblies>      </compilation>      <tracing enabled= false  requestlimit=  pageoutput=     <security>           <authentication mode= Cookie                <cookie cookie= 401kApp  loginurl= /login.aspx  decryptionkey= 1!#$$                      <credentials passwordformat=                          <user name=  password= GASDFSA9823423BSD                          <user name=  password= ZA#$34343443BSD44                          <user name=  password= IFSKDSJFSLKFJKDLS##                      </credentials>                </cookie>    <roles>                       <role name= Admin                            <user name=                            <user name=                       </role>                       <role name= Peasant                            <user name=                       </role>               </roles>           </authentication>           <authorization>     <allow roles= Admins           </authorization>           <identity>     <impersonation enable= false     <codeaccess permissionset= foo.xml           </identity>     </security>     <processmodel  enable= timeout= idletimeout= shutdowntimeout= requestlimit= requestqueuelimit= memorylimit= usecpuaffinity=     <browsercaps> <result type="System.Web.HttpBrowserCapabilities" /> <use var="HTTP_USER_AGENT" />      browser=Unknown      version=0.0      majorver=0      minorver=0      frames=false      tables=false <filter>        <case match="Windows 95|Win95">                  platform=Win95        </case>        <case match="Windows NT|WinNT">                  platform=WinNT        </case> </filter>     </browsercaps>  HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta1.doc"  http://urtframeworks/specs/xsp/configuration_beta1.doc  for details. NetClasses Need to track this down. Configuration APIs System.Configuration Can read and write COR AppDomain/Binding policy. Can technically read and write all ASP+ section handlers, except for browsercaps. Can not read COR security policy. Selectors public abstract class System.Configuration.Selector { String ToString(); String Prefix { get; }; P3: Remove , use selector s Type instead. public class System.Configuration.URLSelector : System.Configuration.Selector { URLSelector(String url);  // supported URLs:  HYPERLINK "http://<argument"  http://<argument  HYPERLINK "file://<argument"  file://<argument String Argument; String Prefix { get; }; String ToString(); P3: Add  Prefix  property to URLSelector class; remove Type public class System.Configuration.FileSelector : System.Configuration.Selector { FileSelector(String FileName); // UNC path String Prefix {get ;} ;  // returns   HYPERLINK "file://<argument"  file://<argument String FileName {get; set;} ; // returns Path String ToString();  // returns  file:// +Path P3: Add file selector class. public class System.Configuration.AppDomainSelector : System.Configuration.Selector { AppDomain(); String Prefix { get ; } ; // returns  appdomain String ToString(); // returns  appdomain:// P3: Add app domain selector class. public class System.Configuration.LocalMachineSelector : System.Configuration.Selector { LocalMachineSelector(); String Prefix { get ; }; // returns  localmachine String ToString(); // returns  localmachine:// P3: Add local machine selector class. public enum System.Configuration.QueryCellOp { Equal   public class System.Configuration.QueryCell { public int Index; public QueryCellOp Operator; public Object Value; public class System.Configuration.ConfigQuerySelector : System.Configuration.Selector { public ConfigQueryQuerySelector(); // Takes a query string (without  query://  prefix) public ConfigQuerySelector(String Query);  public ConfigQuerySelector(String Query, String FileNameSelector);  public ConfigQuerySelector(String Query, Selector Selector);  P4: Add support for using property names instead of indexes to QuerySelector P6: Add support for query cell string parsing to QuerySelector. Px: Add support for  SELECT *  syntax to QuerySelector. public String FileName{ get; }; // Shortcut for specifying  Selector=<selector.ToString>  as a query cell public String Selector Selector { get; set;}; P3: Change  FileName Selector  on QuerySelector class  P3: support  Selector  as a query cell property name P4: (Internal) Support ConfigType as a query cell and property on the query selector public String Query { get; };  // returns the query string (without the  query://  prefix public QueryCell this[int Index]{ get; set; } public void Add(QueryCell cell); public void Add(int Index, QueryCellOp Operator, Object Value); public void Remove(int nIndex); public int Count; public override String ToString();  // returns: query://<querystringcell> // <querystring> := <querycells> // <querycells> := <querycell> [ AND <querycell> ] // <querycell> := <propname>   <value> @FileName=  <path> String Prefix { get; }; // returns  query P3: Add  Prefix  to query selector class public class System.Configuration.NullSelector : System.Configuration.Selector { NullSelector(); String Prefix { get ; } ; // returns  String ToString(); // returns  null:// Generic Access (IConfigItem/IConfigCollection) interface IConfigItem : IList { // fixed-size list: can t Add/Remove object this[String PropertyName]; object this[int PropertyIndex]; int Count; String ConfigType { get; set}; // set only allowed if not frozen P6: Derive IConfigItem from IList: implement applicable IList methods Selector Selector { get; set}; // set only allowed if not frozen IConfigCollection Collection; // IList methods Boolean Contains(object value);  // returns true iff any of the properties is equal to value: prop.Equals(value)==true. int IndexOf(object value); // returns the index of the property with the lowest index equal to value  Boolean IsReadOnly; Boolean IsSynchronized; Object SyncRoot; void CopyTo(Array array, int index); IEnumerator GetEnumerator(); // IList methods, not applicabable to fixed-size lists: int Add(Object value); void Clear(); void Insert(int index, object value); void Remove(object value); void RemoveAt(int index); interface IConfigCollection : IList { P6: Derive IConfigCollection from IList: implement applicable IList methods IConfigItem this[int Index]; IConfigItem this[String Key]; int Count; String ConfigType {get;set} ; Selector Selector {get; set}; // set only allowed when not frozen. IConfigItem FindByKey(String Key); IConfigItem FindByKey(Object[] Key); // IList methods int IndexOf(IConfigItem item); Boolean Contains(IConfigItem item); Boolean IsReadOnly; Boolean IsSynchronized; Object SyncRoot; void CopyTo(Array array, int index); IEnumerator GetEnumerator(); // Only usable if los=Write was specified void Add(IConfigItem item); void RemoveAt(int Index); void Remove(IConfigItem item); void Insert(int Index, IConfigItem item); void Clear(); P6: Rename  IConfigCollection.Delete  method to  RemoveAt Px: Add RemoveByKey to IConfigCollection void RemoveByKey(String Key); void RemoveByKey(Object[] Key); Read/Write APIs (Config Manager) Design considerations APIs on Config Manager vs. Selector Selector ConfigManager Code: new selector and call get on it New selector, pass to config manager Config Manager not exposed (one less class) One more class to document New approach Reviewed/tested approach Closer to managed properties model, new WMI models (Whistler, scopes, WMI+) Closer to current WMI models For Beta 1: leave on ConfigManager, mainly due to dev/test cost considerations. Insert/Update vs. single Put method Some stores require the distinction. Native config system currently does. WMI offers the option as a flag on a single Put method. For Beta 1: Single Put method with flag. Batch updates /   method Currently can t mix inserts, updates and deletes in a single file/store update operation. Punt for Beta 1 Query vs. Enumeration (aka QuerySelector vs. QueryClass) Main problem is confusion of concepts for people trying to do simple things. For Beta 1: address by renaming QuerySelector to ConfigQuery, but leave it as inheriting from Selector. public class System.Configuration.LevelOfService { public static int None =  0x00000000; // Read-Only public static int Reserved =  0x00000001; public static int Write =  0x00000002; public static int Read =  0x0001; public static int Write =  0x0002; public static int Delete =  0x0004; // not used in B1 public static int Empty = 0x0008; // not used in B1 public static int NoValidation =  0x0010; public static int NoInheritance =  0x0020; public static int DoNotCacheResult =  0x0040; // not implemented in B1 public static int BypassCache =  0x0080; // not implemented in B1 public static int UseBaseCollection = 0x0100; public static int DoNotApplyDefaults = 0x0200; public class System.Configuration.PutFlags { public static int UpdateOnly = 0x00000001; public static int CreateOnly =  0x00000002; class System.Configuration.ConfigManager { public static IConfigCollection Get(String configType, String Sel); // Sel: must have a prefix corresponding to a selector (file:, appdomain:, query:) // if no prefix, treat as  file: // los: defaults to 0 (read-only) // If the selector has a non-null, non-empty ConfigType property, the configtype   // parameter must be either identical or NULL or an empty string public static IConfigCollection Get(String configType, String Ssel, int los); public static IConfigCollection Get(String configType, Selector sel); public static IConfigCollection Get(String configType, Selector sel, int los); // returns an item in a singleton collection public static IConfigItem GetItem(String configType, String Pathsel); public static IConfigItem GetItem(String configType, String Path sel, int los); public static IConfigItem GetItem(String configType, Selector sel); public static IConfigItem GetItem(String configType, Selector sel, int los); // returns a property from an item in a singleton collection public static Object GetProperty(String configType, String sel,  String PropertyName); public static Object GetProperty(String configType, Selector sel,  String PropertyName); public static void WritePut(String selector, IConfigCollection cc, Flags f); // Can only perform updates. Will fail if any item in the collection does not // already exist. public static void WritePut(Selector selector, IConfigCollection cc, Flags int flags); // Fflags: CreateOnly or UpdateOnly. May support CreateOrUpdate for Beta 2. // - PutFlags.CreateOnly: fails if any item in the collection already exists // - PutFlags.UpdateOnly: fails if any item in the collection does not already //   exist. public static void WriteItemPutItem(String selector, IConfigItem ci, Flags f); public static void WriteItemPutItem(Selector selector, IConfigItem ci, int Fflags f); public static void WritePropertyPutProperty(String configType, String selector,  String PropertyName, Object Value); public static void WritePropertyPutProperty(String configType, Selector selector,  String PropertyName, Object Value); public static void Delete(IConfigCollection cc); public static void DeleteItem(IConfigItem ci); // Resets the property to it s default value public static void DeleteProperty(String configType, String sel, String PropertyName); public static void DeleteProperty(String configType, Selector sel, String PropertyName); // Methods for deletion without prior read: public static void Delete(String ConfigType, String sel); public static void Delete(String ConfigType, Selector sel); // Selector must provide at least a ConfigType, often also a Selector property public static void Delete(String sel); public static void Delete(Selector sel); public static IConfigCollection GetEmptyCollection(String configType); public static IConfigItem GetEmptyItem(String configType); Examples: AppDomainSelector ad = new AppDomainSelector(); IConfigItem appdomainconfig = ConfigManager.GetItem("AppDomain"); Boolean bShadowCopy = (Boolean) appdomainconfig["ShadowCopy"]; appdomainconfig["ShadowCopy"]=False; Ad.WriteItem("AppDomain", appdomainconfig); IConfigCollection bindingpolicies = ad.Get("BindingPolicy"); foreach (IConfigItem bindingpolicy in bindingpolicies) { String name = (String) bindingpolicy["Name"]; String Version  = (String) bindingpolicy["Version"]; IConfigItem bindingpolicy = ad.GetEmptyItem("BindingPolicy"); Bindingpolicy["Name"]="MyAssembly"; Bindingpolicy["Version"]="1.1.3.0"; bindingpolicies.Add(bindingpolicy); ad.Write("BindingPolicy", bindingpolicies); ADO+ Data Adaptor There will be no data adapter in Beta 1.What exactly are the demo scenarios we enable with this? (Sample only!) We need to change the build order to build config after DNA, so that we can use the data set in our build. public static void Load(DataSet ds, String configType, Selector sel, int los); public static void Update(DataSet ds); Example: AppDomainSelector ad = new AppDomainSelector(); DataSet data = new DataSet(); ad.Load(data, "BindingPolicy"); DataTable bindingpolicies = data.Tables["BindingPolicy"]; foreach (DataRow bindingpolicy in Bindingpolicies.Rows) { String name= (String) bindingpolicy["Name"]; String version= (String) bindingpolicy["Version"]; Strongly typed accessor classes class System.Configuration.RuntimeSystem.AppDomainConfigItem : IConfigItem { String PrivatePath; String SharedPath; Boolean ShadowCopy; class BindingModeConfigItem {}; class BindingPolicyConfigItem {}; class AssembliesConfigItem {}; class WindowsInstallerConfigItem {}; Examples: AppDomainSelector ad = new AppDomainSelector(); AppDomainConfigItem appdomainconfig = ad.GetItem("AppDomain"); Boolean bShadowCopy = appdomainconfig.ShadowCopy; appdomainconfig.ShadowCopy=False; ad.WriteItem("AppDomain", appdomainconfig); BindingPolicyConfigCollection bindingpolicies = ad.Get("BindingPolicy"); foreach (bindingpolicy in bindingpolicies) { String name = bindingpolicy.Name; String Version  = bindingpolicy.Version; BindingPolicyConfigItem bindingpolicy = ad.GetEmptyItem("BindingPolicy"); bindingpolicy.Name="MyAssembly"; bindingpolicy.Version="1.1.3.0"; bindingpolicies.Add(bindingpolicy); ad.Write("BindingPolicy", bindingpolicies); Interceptors Metabase Hierarchy Interceptor P34: Compute merge hierarchy for XSP host. (MarkusH/sample) Shell Hierarchy Interceptor P34: Compute merge hierarchy for EXE host. (MarkusH/sample) Merge Interceptors PropertyOverride ListAppend ListPrepend ListMerge Extensibility Schema P52: Allow for extensible schema: Read XML schema in table dispenser etc. Interceptors Remove mwiring.xml public interface IConfigReader { Object Read(String configType, Selector selector, int los, Object currentObject); enum ConfigWriterFlags { Insert = 1, Update = 2, Delete = 3 interface IConfigWriter { IConfigCollection Write(String configType, Selector sel, IConfigCollection cc, ConfigWriterFlags flags); // Both configType and sel may be NULL, in which case the cc s ConfigType/Selector must be used // if flags==ConfigWriterFlags.Delete, cc can be NULL, in which case both configType and sel must be non-NULL: all items that match the configType/sel will be deleted. // An interceptor may return a modified (or even unmodified) IConfigCollection, if // it is part of an interceptor chain (i.e. performs validation etc. without  // actually storing items) P5: Add support for (custom) write interceptors. public interface IConfigMerger { Object Merger(Object parent, Object child, String ConfigType, Selector selector, int los); public struct RequestParams{ public String configType; public Selector selector; public int los; public interface IConfigTransformer { RequestParams Transform(String configType, Selector selector, int los); Native WMI Provider Details see   HYPERLINK "http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc"  http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc WMI+   HYPERLINK "http://appcenter/feature_teams/complus2/specs/"  http://appcenter/feature_teams/complus2/specs  and http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc. System.Web.Config class System.Web.HttpContext { HttpConfigRecord GetCompleteConfig(); HttpConfigRecord GetCompleteConfig(String path); Object GetContext(String name); Object GetContext(String name, String path); Extensibility: Section Handlers interface System.Web.Config.IConfigSectionHandler { ConfigOutput Create (Object parent, ConfigInput[] input, String path); Registered in config.web file:      <configsections> <add name="httpmodules" type="System.Web.Config.HttpModuleConfigHandler      </configsections> COR Security Policy Permission classes, policy classes etc. Configuration in Beta 1 The goals of the configuration system support in Beta 1 is to  Facilitate gathering customer feedback on the overall URT config offering. Demonstrate to URT teams that the configuration system is real and provides many features "for free". Configuration system features Reading, writing, querying URT system configuration: Binding Policy AppDomain policy XSP config NOT covered:  Code access security Remoting config JIT/Debugging config Benefits: target application authors, not management tool authors Minimal number of  lines of code  / concepts for app authors Strongly typed classes In-process Programming model for configuration: Custom schema   XCOPY deployability Custom resolution: hierarchies, merges, stores   modularity for provider authoring Manageability through WMI Cover management tools through WMI and WMI+. WMI+: through native WMI provider to native config system only! Benefits of configuration system approach We (MarkusH) will provide a set of samples that illustrate the following benefits of the configuration system. These sample will be part of the COM+ 2.0 SDK. Text-based configuration Sample/Demo: Assembly version problems An app uses V1 of an assembly. V2 comes along and breaks the app upon installation. Open the config file for the app in notepad, add a line to force the app to bind against V1 of the assembly. The app works. Remote, text-based configuration Sample/Demo: The assembly versioning demo. The problem is fixed by connecting to the machine from a Linux box and editing the config file. Simple, efficient access through strongly typed classes Sample 1: Assembly binding policy configuration (as EXE). Sample 2: ASP+ <processmodel> configuration (as ASP+ app?) These samples will use the strongly typed accessor classes to illustrate: Compile-time type checking Auto-complete in the IDE Ability to read and write relatively complex XML files through a few lines of code. Generic consumers Sample: Configuration Browser (as ASP+ app?) This sample will use the IConfigItem/IConfigCollection interfaces to illustrate: Discoverability of configuration through schema Navigation through nested configuration (if ASP+ <security> can be accessed) Ability to write generic configuration UI ADO+ Data Binding/Data Designer support Sample: Binding Policy in the Data grid This sample will use the ADO+ Data Adaptor to illustrate: The ability to do data binding against configuration information. The ability to discover configuration information through the VS7 data browser. The ability to do simultaneous updates to multiple pieces of configuration information (if supported). Command-line scriptability (through WMI provider) This depends on the availability/quality of the WMI provider. MarkusH following up with TravisM. Sample: VBS script to fix assembly version problem Scenario above: Customer calls PSS. PSS sends a VBS script in e-mail. Customer clicks on the script and the app starts working. The sample uses the native WMI provider to illustrate: The lack of managed-code command-line script engines in VS7/COM+ 2.0. The benefit of a WMI provider for configuration information, and the scriptability of WMI. Exposure to WMI-enabled management tools Sample: CIM browser? Working with TravisM (WMI) to get a third-party WMI app that is (or could be made) COM+ 2.0 aware. If this doesn't work, we'll have to use the generic WMI/CIM browser This sample illustrates how The configuration system makes COM+ 2.0 config accessible to the WMI world (at no extra cost for the developer). Access through WMI+ Programmatic remote administration through WMI Sample: CIM browser This sample illustrates how The configuration system enables programmatic remote access to URT configuration information (at no extra cost for the developer). Extensibility This depends on us providing a schema extensibility mechanism; unknown cost at this time. We could use an embedded schema in the config file and change the table dispenser to fall back to the XML interceptor if it doesn't find schema through the fixed interceptor  Better to have customers ask for this feature (it's pretty obvious). Sample: Licensing limit of simultaneous users? Sample: Window Positions? Sample: MSMQ / DSN configuration? These samples would illustrate how Configuration is part of the core programming model for COM+ 2.0. Developers can get all the benefits of configuration "for free". Configuration system for app developers Guide devs towards recommended way of doing config. Get benefits (appcenter repl, wmi, APIs, text-based admin etc.). Rules/guidelines for schema? App-specific  island ? Suggested schema? Logical/Physical  mapper : adapt an app to a specific environment (AC 2.0). Revision History April 14, 2000 Rev 0.1 (MarkusH). April 18, 2000 Rev 0.2 (MarkusH): Added NullSelector, changed FileSelector.Path to FileName. May 1, 2000 Rev 0.3 (MarkusH): Added Selector and ConfigType property to QuerySelector, constructor with Selector to QuerySelector. Added IConfigCollection.RemoveByKey. Added URLSelector, making FileSelector second priority. Added query string parsing support/defined query string syntax (including configtype/selector). Change Selector.Type back to Prefix string. Added ConfigType/Selector to IConfigItem. Added Selector property to IConfigCollection. Change ConfigManager.Write to  , added ConfigManager.Delete methods. Removed DataAdaptor for Beta 1. Added MB/Shell hierarchy interceptors. Added schema/interceptor extensibility. May 1, 2000 Rev 0.4 (MarkusH): Incorporated/captured feedback from spec review: query vs. enum, APIs on config manager vs. selector, Put vs Insert/Update, batch updates, feature list for Beta 1. Updated priorities of issues. May 2, 2000 Rev 0.5 (MarkusH): Clarified that there are two flavors of the   methods, with and without flags. Added definition of PutFlags. Added Delete methods that take a ConfigType in addition to a Selector.  May 9, 2000 Rev 0.6 (MarkusH): Changed  Remove RemoveAt . Made  ConfigType  on ConfigQuery and  Select * from <configtype>  a lower priority (P4). Derived IConfigCollection and IConfigItem from IList (P4). Added IConfigWriter definition. Page   PAGE   NUMPAGES  LEF0J mfmfm {t{t{ hsLEF hgLEF htLEF hfLEF hoLEF hnLEF5 nLEF\ hnLEF hsLEF5 sLEF\ hrLEF5 sLEF\ hrLEF huLEF htLEF hqLEF hsLEF hpLEF
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urt configuration system architecture.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft COM+ 2.0 Configuration System Architecture Title _PID_HLINKSCOM+ 2.0 Configuration System Architecture Markus Horstmann This document describes the architecture of the COM+ 2.0 configuration system, including the configuration manager, configuration objects and configuration interceptors. Refer to the COM+ 2.0 Configuration System specification for an introduction to using or extending the configuration system.  COM+ Template Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @HP DeskJet 720C Series LPT1: HPFDJC06 HP DeskJet 720C Series HP DeskJet 720C Series HP DeskJet 720C Series LPT1: HP DeskJet 720C Series HP DeskJet 720C Series LPT1:ID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  COM+ 2.0 Configuration System Architecture November 14, 1999, Draft Rev 0.8  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the architecture of the COM+ 2.0 configuration system, including the configuration manager, configuration objects and configuration interceptors. Refer to the COM+ 2.0 Configuration System specification for an introduction to using or extending the configuration system. TOC \o "1-3" Goals  PAGEREF _Toc467269478 \h  Requirements  PAGEREF _Toc467269479 \h  Configuration Manager  PAGEREF _Toc467269480 \h  Concepts  PAGEREF _Toc467269481 \h  3.1.1 Configuration Type: ConfigType  PAGEREF _Toc467269482 \h  3.1.2 Configuration location: Selector  PAGEREF _Toc467269483 \h  Configuration Manager Class  PAGEREF _Toc467269484 \h  3.2.1 Caching  PAGEREF _Toc467269485 \h  Behavior information  PAGEREF _Toc467269486 \h  Configuration Objects  PAGEREF _Toc467269487 \h  Configuration Schema  PAGEREF _Toc467269488 \h  4.1.1 Collections  PAGEREF _Toc467269489 \h  4.1.2 Items  PAGEREF _Toc467269490 \h  4.1.3 Primary Key  PAGEREF _Toc467269491 \h  4.1.4 Item Name  PAGEREF _Toc467269492 \h  4.1.5 Relations  PAGEREF _Toc467269493 \h  4.1.6 Obtaining Schema Information  PAGEREF _Toc467269494 \h  Configuration Item and Configuration Collection  PAGEREF _Toc467269495 \h  4.2.1 Configuration Item: IConfigItem interface  PAGEREF _Toc467269496 \h  4.2.2 Configuration Collection: IConfigCollection interface  PAGEREF _Toc467269497 \h  4.2.3 Base Configuration Objects  PAGEREF _Toc467269498 \h  4.2.4 Strongly typed Configuration Objects  PAGEREF _Toc467269499 \h  4.2.5 Custom Configuration Objects  PAGEREF _Toc467269500 \h  Arbitrary Custom Objects in the Configuration Manager  PAGEREF _Toc467269501 \h  Configuration Interceptors  PAGEREF _Toc467269502 \h  Read operations  PAGEREF _Toc467269503 \h  Write operations  PAGEREF _Toc467269504 \h  Methods in details  PAGEREF _Toc467269505 \h  Typical usage patterns for Configuration Interceptors  PAGEREF _Toc467269506 \h  5.4.1 Single interceptor for a Key/Protocol combination  PAGEREF _Toc467269507 \h  5.4.2 1 of n  interceptors for a Key/Protocol combination  PAGEREF _Toc467269508 \h  5.4.3 Chain of n interceptors for a Key/Protocol combination  PAGEREF _Toc467269509 \h  5.4.4 Hierarchy Interceptors  PAGEREF _Toc467269510 \h  5.4.5 Merge Interceptors  PAGEREF _Toc467269511 \h  5.4.6 Storage Interceptors  PAGEREF _Toc467269512 \h  Generally useful Interceptors  PAGEREF _Toc467269513 \h  5.5.1 Native Catalog Storage Interceptor  PAGEREF _Toc467269514 \h  5.5.2 Schema Validation Interceptor  PAGEREF _Toc467269515 \h  Administrative Interfaces  PAGEREF _Toc467269516 \h  Utility Classes  PAGEREF _Toc467269518 \h  Related Specs  PAGEREF _Toc467269519 \h  Open Issues  PAGEREF _Toc467269520 \h  Revision History  PAGEREF _Toc467269521 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Goals Please refer to the overview presentation on   HYPERLINK "http://appcenter/config/Slides/URT%20Configuration.ppt"  http://appcenter/config/Slides/URT%20Configuration.ppt  for the high level goals of the URT configuration system. Requirements Please refer to the requirements document on   HYPERLINK "http://appcenter/config/specs/URT1/URTConfigSysReq.htm"  http://appcenter/config/specs/URT1/URTConfigSysReq.htm  for a detailed list of requirements, broken up by consuming URT team.  Configuration Manager The Configuration Manager orchestrates discovery, retrieval, caching and update of configuration information. It is the core of an extensible architecture in which all specific functionality is implemented in the form of   mostly reusable   modules called Interceptors. Concepts In order to identify a specific piece of configuration information, two concepts are introduced: the ConfigurationType  and the Selector. Configuration Type: ConfigType The Configuration Type  (short Config Type) indicates the type of configuration information.  Examples:  Applications ScriptMaps Permissions Version Policies Configuration location: Selector In many cases, multiple instances of configuration information exist for a given Config Type, for example the Config Type  Application  may have an instance for the  401K App  and another instance for the  Payroll App When requesting configuration information the caller indicates the instance(s) of configuration for a specific Config Type using a  Selector . This selector is dependent on and scoped by the Config Type. The selector is often a URL, but whoever defines the Config Type is free to define one or more arbitrary URI s or even custom objects as selectors for this Config Type. The only limitation on the Selector is that it must have a protocol prefix.  In order to enable more efficient handling of selectors (pre-parsing of protocol prefix, handling of complex queries etc.), an abstract Selector class is defined: public abstract class System.Config.Selector {   public String  Protocol { abstract get;} The Configuration Manager is able to handle arbitrary classes derived from the Selector class.  However, some of its methods have special knowledge of the UrlSelector class: public class System.Config.URLSelector : Selector {   public  URLSelector(String s);   public String  Protocol{ override get };   public String  Argument{ get, set };   public bool  IsRootURL{ get, set };   public override String ToString(); class System.Config.UrlSelector : Selector { public:  UrlSelector(String s);  override String ToString(); String Protocol { override get, set };  String Argument { get, set }; Need to change code to UrlSelector (lower-case "rl") to conform to URT naming conventions. Another selector class, which is commonly used by administrative interfaces, is given here merely as an example to motivate the choice of introducing Selectors as objects: // Syntax:  configquery:<name1><op><value1>;<name2><op><value2> public enum System.Config.QueryCellOp { Equal,  NotEqual };  public class System.Config.QueryCell { String  Name; QueryCellOp  Operator; Object  Value; class System.Config.QuerySelector : Selector {   public:  enum QueryCellOp { Equal,  NotEqual };   struct QueryCell { String  Name; QueryCellOp  Operator; String  Value; public QuerySelector();   public QuerySelector(String s);   public String Protocol { override get; set };   public String FileName { get; set };   public String  override  ToString();   public  QueryCell  this[int Index] { get; set};    public void Add(QueryCell cell);   public void  Add(int Index, QueryCellOp Operator, Object Value){   public void Remove(int nIndex);   public int  Count { get }; Will callers typically have the URL as a single string, or will the prefix already be available separately? In the latter case, it might be good to provide a method with two separate parameters (Protocol, Selector) to avoid parsing/allocations. Configuration Manager Class  The Configuration Manager Class provides a simple set of functions to consumers of configuration information. Consumers range from administrative tools to the system runtimes themselves. enum System.Config.LevelOfService { Read =  0x0001; Write =  0x0002; Delete =  0x0004; Empty = 0x0008; NoValidation =  0x0010; NoInheritance =  0x0020; DoNotCacheResult =  0x0040; BypassCache =  0x0080; // others Need to validate this list! class System.Config.ConfigManager { public:  Object Get(String ConfigType, String selector, LevelOfService LoS);  Object Get(String ConfigType, Selector selector, LevelOfService LoS);  // The first flavor of the Get method assumes that the selector string is a UrlSelector.   // For all other selectors, the caller must create/cast to desired Selector class and  // call the second flavor of the Get method . Admin/Write methods are not currently implemented!  // Admin interfaces are not currently implemented  // IAdminCollection GetAdmin(String ConfigType, String selector, LevelOfService LoS);  // IAdminCollection GetAdmin(String ConfigType, Selector selector, LevelOfService LoS); // void Write(IAdminCollection Config); // void Write(IAdminCollection Config, LevelOfService los); // Utility methods primarily for use by interceptors  Object GetEmptyConfigCollection(String ConfigType, Selector selector, LevelOfService LoS);  Object GetEmptyConfigItem (String ConfigType, Selector selector, LevelOfService LoS);  Bool IsObjectCached(String ConfigType, Selector selector, LevelOfService LoS); Caching The Configuration Manager caches results of previous requests based on ConfigType and Selector. The LevelOfService parameter controls the caching behavior of a request. All objects returned from the cache must be read-only, in order to guarantee consistency of the running system. How exactly do we invalidate the cache? Do we have separate read and write caches? Do we even need a write cache? Can we use the XSP cache classes? Should wiring/meta indicate the possible/default caching behaviors for a config type? Behavior Wiring information The Configuration Manager uses the behavior Wiring information to determine how to return a representation of the configuration information being requested. The wiring behavior information maps a combination of ConfigType and Selector to a chain of managed classes that is to be invoked in order to render a configuration object. The Configuration Manager invokes each class in the chain of managed classes in order until one of the classes indicates that it has returned a fully rendered configuration object. These chained managed classes are referred to as Configuration Interceptors and are described in detail below. Example: <InterceptorWiring  ConfigType= Applications  Protocol=  InterceptorOrder =               InterceptorClass =  System.Config.Core.FileNameInterceptor               InterceptorType="Reader" /> <InterceptorWiring  ConfigType= Applications  Protocol=  InterceptorOrder =               InterceptorClass =  System.Config.Core.ComplibInterceptor              InterceptorType="Reader" /> Should we allow more than one chain for a type/selector combination to facilitate consumers with different rendering requirements for the same config information? Examples: runtime vs. admin, two different runtimes (DT/XSP) with different perf/access requirements. Behavior Wiring information is described in more detail in the   HYPERLINK "http://appcenter/config/specs/urt1/Schema & Behavior.doc"  Schema & Behavior specification section   REF _Ref465510285 \r   REF _Ref465510238 \p \h  below Configuration Objects Configuration objects provide an in-memory representation of configuration information, tuned to the requirements of the primary consumer of the configuration information. Configuration objects are returned by the Configuration Manager  and  GetEmpty  methods and consumed by the  Write  methods. Although the Configuration Interceptors invoked by the configuration manager can return any managed class, the requirements of administrative tools for a generic representation of configuration information can only be satisfied if the configuration object implements the generic configuration object interfaces defined below and thus provides a Configuration Schema for the configuration information. Configuration Schema The schema for configuration objects is typically described in an XML-data document. The format of the XML-data representation of configuration schemas is defined in the XML schema definition document ( HYPERLINK "http://appcenter/config/specs/urt1/Schema & Behavior.doc" http://appcenter/config/specs/urt1/Schema & Behavior.doc Collections Like XML Data, the schema represents configuration information as groups of typed and named properties. A group of properties is in turn named using a string, which corresponds to the Config Type as defined above. Example 1: Config Type:  Application Properties:   (String),  Location  (String),  AppEnabled  (Bool) Example 2: Config Type:  Machine Policy Properties:  JITCompiler  (enum ( Standard JIT Econo JIT CodeBufferMax  (DWORD) Items Some Config Types may have only a single instance (Example 2 above: there is only one  JITCompiler  property on a given machine), while others by nature contain many different instances (Example 1 above: Each application has a different  Location  etc.). These instances are hereafter referred to as  Configuration Items  or short  Items , a set of Configuration Items is referred to as a  Configuration Collection  or short  Collection TODO: add description of PublicRowName etc.  Primary Key In order to distinguish between different Items belonging to a specific Config Type, the schema declares one or more properties in the group as establishing the identity of the item. This set of properties is hereafter referred to as the  Primary Key  of the Config Type (the definition) or the  Primary Key  of the Item (the specific set of values). The Primary Key is often specified as part of the Selector to request a single instance of configuration information for a given Config Type. Example 1: Primary key:  Location Example 2: Primary key: N/A. Item Name Often, an Item must be referred to in a human readable form. In order to address this requirement, the schema designates one of the properties as the   of an Item. The property establishing the Name may or may not be part of the Primary Key, but should be  sufficiently unique  (for UI purposes) across different Item instances. Relations Often, two Config Types are related to each other, in the sense that the Items in one Config Type contain references to the Items in another Config Type, typically by listing the values of the Primary Key of these Items. The schema can capture these relations between Config Types to facilitate navigation between Config Types in administrative tools and to enable consistency checks. Obtaining Schema Information The schema for a given Config Type can be retrieved through the Configuration Manager, by using the Config Type  System.Config.Schema , and using the Config Type for which the schema is to be retrieved as the Selector string. Should this be the Config Type for schema? What s the Selector prefix? Example (using strongly typed Configuration Objects, see Section   REF _Ref463772039 \n \p \h  4.2.4 below  for details): SchemaCollection Schema=ConfigManager.Get( System.Config.Schema Applications for (int i=0; I<Schema.Count(); i++) Console.WriteLine(Schema[i].Name+ +Schema[i].Type+ // Resulting output: //    Name (String) Location (String) AppEnabled (Bool) Similarly, the Config Type  System.Config.Relations  retrieves relationship information: RelationCollection Relation=ConfigManager.Get( System.Config.Relation Applications For details on the available properties in the Schema and Relations collections, please refer to the XML schema definition document. Configuration Item and Configuration Collection The concepts defined by the schema (Config Type, Item Collection, Item) are expressed in the form of interfaces, in order to ensure that all configuration information can be accessed by administrative tools in a generic manner.   Configuration Item: IConfigItem interface public interface System.Config.IConfigItem : ICloneable {  Object this[int PropertyIndex] {get,set};  // the value of a Property Count {get}; // the number of properties  void Freeze(); // Makes the item read-only  bool IsFrozen { get }; // indicates if the item is read-only TODO: add detailed description of all the methods Should we make access to related config types obligatory? Configuration Collection: IConfigCollection interface public interface System.Config.IConfigCollection : ICloneable {  void  Add(IConfigItem Item);  // Adds an Item to the Collection  IConfigItem this[int Index] {get,set}; // Retrieves the Item   void Insert(int Index, IConfigItem Item); // Inserts an Item at position Index  void Remove(int Index);  // Removes an Item IndexOf(IConfigItem Item); // retrieves the index of a config item  void Clear();  // Removes all Items from the Collection  Count {get};  void  Freeze(); // makes the collection read-only  bool IsFrozen(); // indicates if the collection is read-only TODO: add detailed description of all the methods Need to sync up with new IList interface. Should we use code access security to protect the system from untrusted callers (i.e Clone before returning a cached config object)? How do we expose the schema itself for totally generic/late bound consumers? Of course  Schema ) just works but we may want an easier mechanism to discover properties, maybe on the collection object? Should we make access to related config types obligatory? A Config Collection that contains a single Config Item can be implicitly cast into a Config Item object. This enables intuitive coding for queries that always return a single Config Item (Example: query by full primary key). Can we make this cast part of the interface definition?  Base Configuration Objects The Configuration System provides a standard implementation of both Configuration Collection and Item objects: class System.Config.BaseConfigItem : IConfigItem, ICollectionICloneable public BaseConfigItem(LevelOfService losint ObjectCount); // all IConfigItem / ICollection methods class System.Config.BaseConfigCollection : IConfigCollection, ICollection public BaseConfigCollection(LevelOfService los); // all IConfigCollection / ICollection methods The Base Configuration Objects require that a Config Type be provided (via the IConfigCollection.ConfigType field), and that a schema for this Config Type be available through the Configuration Manager. If the behavior Wiring information does not specify a class to be used for a specific Config Type, the configuration manager returns Base Configuration Objects upon requests for this Config Type. Level Of Service The valid flags for Configuration Objects and their semantics are: LevelOfService Collection Allow reading of data Allow reading of data Write Allow changes to property values Allow addition of items Delete Invalid (Exception) Allow deletion of items from a collection NoValidation Performs no validation of property changes against edit rules in the schema Performs no validation of referential integrity (Primary Key semantics are still enforced) All other flags Invalid (Exception) Invalid (Exception) Do we want to use LoS for this or should we define another enumeration? TODO: need to spec out the exact semantics for property and relation validation. Strongly typed Configuration Objects The Configuration System generates two managed classes for each Config Type defined in the schema: A Configuration Item class with name  <ConfigType>Config  and a Configuration Collection class with name  <ConfigType>Collection . The Item class has fields for each of the properties and the fields are typed according to the type of the property. The Collection class has overridden methods for every method in IConfigCollection that uses IConfigItem, using the Item collection class instead of IConfigItem. <ConfigType> should really be the  PublicRowName PublicTableName . Need to update schema section accordingly. The generated classes derive from the ConfigItem and ConfigCollection base classes respectively. The behavior Wiring information for this Config Type must indicate the name of the Item and Collection class so that the Configuration Manager can instantiate and return the correct class(es). Generating Strongly Typed Configuration Objects The Configuration System provides a class (name and methods tbd) that generates strongly typed Configuration Objects for a specific Config Type. The classes are generated into a regular assembly (a DLL), that can be deployed as any other COM+ 2.0 class. The assembly must be within the assembly resolution scope of the Application Domain in which the Configuration Manager is invoked. A command line utility is provided that enables creating the objects at build time, typically at schema compilation time. Although technically feasible, no requirements are known to generate these objects automatically (on the fly) upon request. Custom Configuration Objects Any class that implements the IConfigItem or the IConfigCollection interfaces can be used with the Configuration System. Most interceptors interact with the Configuration Objects only through these interfaces. However it is possible to write specific interceptors that interact with Custom Configuration through arbitrary custom interfaces and methods. Custom configuration objects can derive from the Base Configuration Objects, the Strongly typed Configuration Objects or simply implement the IConfigItem/IConfigCollection interfaces in whichever way they see fit. Need to test that the generic interceptors work with arbitrary IConfigItem/IConfigCollection implementations. Should we provide utility classes that make it easy to add validation functionality to custom IConfig* implementations? If many scenarios require storing config information in completely customized/optimized data representations, this may be a good approach. Another approach is to provide a rich set of base config object implementations that provide common data structures. Should we allow custom objects to be instantiated from a config collection instead of forcing them to also be the collection object? Arbitrary Custom Objects in the Configuration Manager It is possible to use arbitrary objects (i.e. not implementing IConfigItem or IConfigCollection) within the Configuration System. Many standard interceptors may not work with these objects, but the Configuration Manager is largely agnostic of specific signatures of the objects returned from the last interceptor in the chain. Specifically caching of request results works also for arbitrary objects. Administrative tools will not be able to deal with arbitrary objects, nor is it guaranteed that the configuration information that these objects represent can be discovered via schema. Need to test that arbitrary objects work. How can we ensure that arbitrary objects in the cache are read-only? Configuration Interceptors The behavior Wiring information defines a chain of interceptors to be used for each Config Type. The Configuration Manager invokes the interceptors for Get and Write requests. Interceptors are stateless classes, i.e. they do not retain any invocation-specific state between method invocations. The Configuration Manager will create one or more interceptor instances and reuse them as it sees fit. The interceptors are responsible for their own synchronization. Interceptors must provide a default constructor. We really only use one instance at this time. Will we ever want to use more than one? Do we need/want to support a wiring flag that indicates that an interceptor wants to be stateful? Singleton interceptors (i.e. guaranteed at most one instance per app domain)? interface System.Config.Interceptors.IConfigReaderInterceptor {  Object Read( String ConfigType, Selector Selector, LevelOfService LoS, Object currentPreviousObjectConfig, // for chained interceptors: config read by previous // interceptor. NULL for store interceptors //interface System.Config.Interceptors.IConfigWriterInterceptor { //void  Write(IAdminCollectionObject adminConfigCollection, LevelOfService Los); Write interceptors are not currently implemented. public struct System.Config.Interceptors.RequestParams{ public String configType; public Selector selector; public LevelOfService los; interface System.Config.Interceptors.IConfigTransformerInterceptor {    voidRequestParams  Transform(ByRef String ConfigTypeKey, ByRef Selector Selector, ByRef LevelOfService LoS);  Should we use a struct as a return value instead of using ByRef? These method names are still under discussion. Should we split these into separate interfaces and refer to the resulting interceptor types more formally? Read operations A read operation read (i.e. an invocation of ConfigManager.Get or ConfigManager.GetEmpty) consists of three separate stages: A transform stage, in which zero or more interceptors can modify Config Type, Selector and LevelOfService before any data is retrieved. A read stage, in which at most one interceptor creates an initial, typically writeable Config Object and typically populates it with configuration data. A validation stage, in which zero or more interceptors can validate or modify the initial Config Object Need a better term for  validate , since these interceptors can do much more than just validation The behaviorWiring information for a Config Type declares the stages in which an interceptor is to participate.  The Configuration Manager controls the read operation and performs the three stages in order. In each of the stages the Configuration Manager only invokes interceptors that match the Config Type and Selector prefix being requested. It first invokes the interceptors for the Transform stage, in the order indicated in the Wiring behavior information. After invoking each interceptor it validates if the Config Type or Selector have changed, and if either have changed, it restarts the read operation for the new Config Type / Selector. If the Transform stage is completed without Config Type/Selector changes, the Configuration Manager invokes the interceptors that are marked to participate in the Read stage, again in the order indicated in the wiring behavior information.  As soon as one of the interceptor returns a Config Object, the Configuration Manager finishes the Read stage. If none of the interceptors return a Config Object, the entire read operation fails and the Configuration Manager raises an exception. The Configuration Manager then invokes the interceptors marked to participate in the Validation stage, again in the order indicated in the Wiring behavior information. After the Validation stage, the Configuration Manager sets the Selector and Config Type on the resulting Config Object (iff the Config Object implements the IConfigCollection or IConfigItem interface). If the LevelOfService indicates read-only, the Config Manager then converts the Config Object into read-only (by calling the ConvertToReadOnly method), before adding it to its cache (again obeying the LevelOfService). Write operations Need to add description of write details. Tbw (Stages: Transform, Validate, Write) Methods in details Need to describe the methods and their parameters. Typical usage patterns for Configuration Interceptors Need to fill these in. Single interceptor for a Key/Protocol combination 1 of n  interceptors for a Key/Protocol combination Chain of n interceptors for a Key/Protocol combination Hierarchy Interceptors Merge Interceptors Storage Interceptors Generally useful Interceptors Native Catalog Storage Interceptor This interceptor allows the managed config manager to obtain information from the native catalog. This is used to bootstrap the managed config system without the need to port the existing native interceptors (XML, CLB etc.). Schema Validation Interceptor This interceptor can be used in the validation stage to validate the contents of a config collection against the schema constraints for the config type, i.e. primary key, edit rules, relations to other collections etc.  Administrative Interfaces This section is just a collection of thoughts/fragments. Need to flesh out. The interfaces use the following class to facilitate handling of Primary Keys: class System.Config.ItemKey {  ItemKey(String PrimaryKey); // String of the form  <Name>=<Value>;<Name>=<Value>;...  Implicit op (String PrimaryKey);  Object [String Name] [get,set];  String ToString(); Can/should we use a Dictionary class instead? Is this class merely derived from Dictionary? public interface System.Config.IAdminItem {  ItemKey  PrimaryKey [get]; // the values of the properties making up the // Primary Key of the Item  String Name {get}; // the value of the Name property of the Item  Object this[String PropertyName] {get,set}; public interface System.Config.IAdminCollection {  void  Add(IConfigDataItem Item);  // Adds an Item to the Collection  IConfigItem  Add(ItemKey PrimaryKey);  // Adds a new Item to the Collection, // setting the Primary Key to the values  // in  PrimaryKey  IConfigItem this[ItemKey PrimaryKey]; // Retrieves the Item whose Primary // Key matches  PrimaryKey  void Remove(ItemKey PrimaryKey);  // Removes the Item matching  PrimaryKey // from the Collection (or marks the Item for  // deletion, if LevelOfService & Delete). // In either case, the deleted Item is not visible through the standard // collection methods, only through the  GetDeletedItems  enumerator.  void Remove(IConfigItem Item); // Removes the   from the Collection // (or marks it for deletion)  void Clear();  // Removes all Items from the Collection  // (or marks them for deletion)  String ConfigType [get, set]; // Config Type of all Items in this Collection  String Selector [get, set];  // Selector used to retrieve the Collection Count();  IEnumerator  GetEnumerator(bool AllowRemove);  IEnumerator  GetChangeList (bool AllowRemove); // Returns the Items that have been // marked for deletion using on of the Remove methods or the Clear method  IConfigCollection GetRelated(String RelatedConfigType, ItemKey PrimaryKey);  // Retrieves the Collection related to the Item  PrimaryKey  in this Collection  IConfigCollection GetRelated(String RelatedConfigType, IConfigItem Item); // Retrieves the Collection related to the Item   in this Collection  Object Clone(); // Creates an independent Clone of the Collection object Wiring Information Details Wiring information is defined in the form of a Configuration Collection. The schema for the wiring information is as follows: <CollectionMeta InternalName="Wiring" PublicRowName="Wiring">  <PropertyMeta InternalName="ConfigType"  Type="WSTR" MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="InterceptorOrder"  Type="UI4"  MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="Protocol"  Type="WSTR" MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="Interceptor"  Type="WSTR"   <PropertyMeta InternalName="InterceptorStages" Type="UI4"     <EnumMeta InternalName="Read" Value="0x0001" />    <EnumMeta InternalName="Write"     Value="0x0002    <EnumMeta InternalName="Transform" Value="0x0004" />    <EnumMeta InternalName="Validate"  Value="0x0008" />    <EnumMeta InternalName="Merge"     Value="0x0010" />  </PropertyMeta>  <PropertyMeta InternalName= Flags  Type=    <EnumMeta InternalName="ApplyDuringRead" Value="0x0001" />    <EnumMeta InternalName="ApplyDuringWrite"     Value="0x0002    <EnumMeta InternalName="ApplyWhenNoValidation" Value="0x0004" /> </PropertyMeta> </CollectionMeta> This is not the final wiring schema. Utility Classes Need to define these. PrimaryKeyFromItem (ConfigType, IConfigItem) NameOfItem(ConfigType, IConfigItem) ValidateCollection GetPropertyIndexFromName Related Specs Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 4, 1999 Rev 0.1 (MarkusH): Created. October 13, 1999 Rev 0.2 (MarkusH): Updated to reflect current state of discussions: Key -> Config Type, Selector object, Transform/Read/Write/Validate, clarified read/write stages, castability of singleton collections into items, added rudimentary caching section. October 18, 1999 Rev 0.3 (MarkusH): Trimmed down IConfigCollection/Item interfaces. Moved other functionality to IAdminCollection/Item interfaces. Added Selector, URLSelector, QuerySelector class details. Added section on utility classes. October 20, 1999 Rev 0.4 (MarkusH): Added Count/IsFrozen methods to IConfigItem. October 22, 1999 Rev 0.5 (MarkusH): Added IsObjectCached and GetEmptyConfigCollection/Item methods. Added Clone method to config objects (Merge interceptor needs to clone the parent config). Changed interceptor methods, factored into separate interfaces. Added RequestContext object to support intermediate result registration for merge interceptors. Added InterceptorStages to wiring info. Changed of classes capitalization to mixed case (UrlSelector). Added clarification that interceptors are stateless. October 25, 1999 Rev 0.6 (MarkusH): Moved RequestContext to implementation detail section in Hierarchy/merge spec. Added Flags property for wiring info section. Clarified Selector base class and selector handling. Added section on generally useful interceptors. Changed title to  URT Config System Architecture November 2, 1999 Rev 0.7 (MarkusH): Incorporated initial feedback: custom methods for runtime consumers on separate objects?; Selector object overhead. IList interface. November 14, 1999 Rev 0.8 (MarkusH): Changed Wiring to Behavior. Updated classes/interfaces to reflect implementation.  The ConfigType was previously referred to as the  , but this terminology was multiply overloaded (Primary Key, ICollection method etc.).  In fact, the configuration system treats the schema information as just another piece of configuration information, and obtains it through the exact same extensibility mechanisms that apply to other configuration information. Only the  schema for the schema  is hard coded in most parts of the Configuration System. The Configuration System uses this flexibility to compile a core schema - that is known to the system at  ship time into a compact, binary representation stored inside the system binaries themselves. Other schema information is merged with the core schema using the standard configuration system mechanisms.  Even though typically the incoming config object is just modified and returned, an interceptor can also choose to create a new config object and populate it in whatever way it sees fit, including copying data from the incoming config object. Page   PAGE   NUMPAGES  o~h~aWa x;&0J x;&cH x;&cH
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\old\config beta 1 workitems.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. P3: Remove , use prefix instead TitleP3: Remove , use prefix instead Markus Horstmann Normal.dot Markus Horstmann Microsoft Word 9.0bjbjU Feature (done) P1: Check in schema for ASP+ config. Write (done) P1: ConfigManager: Change Write to Put. Add PutItem, PutProperty. P1: Add Delete methods to config manager. P1: Add  ConfigType  and  Selector  property  to IConfigItem P1: Add  Selector  to IConfigCollection Programming model (5/16) P2: Allow for extensible schema: Read XML schema in table dispenser etc. Query vs. Selector cleanup (5/19) P3: Change  FileName Selector  on QuerySelector class  P3: Support  Selector  as a query cell property name P3: Add  Prefix  to query selector class P3: Remove , use selector s Type instead. P3: Add  Prefix  property to URLSelector class; remove Type P3: Add file selector class. P3: Add app domain selector class. P3: Add local machine selector class. Query usability P4: Add support for using property names instead of property indexes to QuerySelector P4: (Internal) Support ConfigType as a query cell and property on the query selector Hierarchy Interceptors P4: Compute merge hierarchy for XSP host. (MarkusH) P4: Compute merge hierarchy for EXE host. (MarkusH) P5: Add support for custom write interceptors. P5: Make InterceptorType part of the PK of MWIRING. Px: Write to a merged view: always write to innermost config file. Px: Retrieve file list for a merged view? Convenience P6: Derive IConfigItem from IList: implement applicable IList methods P6: Derive IConfigCollection from IList: implement applicable IList methods P6: Add support for query cell string parsing to QuerySelector. P6: Rename  IConfigCollection.Delete  method to  RemoveAt Px: Add RemoveByKey to IConfigCollection Px: clean up LevelOfService enum values Px: Add support for  SELECT *  syntax to QuerySelector. DataAdaptor P7: Load/Update methods: do as sample => MarkusH
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\urtconfigurationrecipe.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Introduction Title _PID_GUIDIntroduction Robert Craig Normal.dot Robert Craig Microsoft Word 8.0S5&,S6S5&+S6URT Configuration Recipe  (a.k.a. Making A Bunch of Silos Look Like One Product) Robert Craig Microsoft Confidential  TOC \o "1-3"  Introduction  PAGEREF _Toc453518200 \h  Part I: Ducttape  PAGEREF _Toc453518201 \h  The Configuration Manager  PAGEREF _Toc453518202 \h  The Cook-Down Process  PAGEREF _Toc453518203 \h  The XML-based Configuration Files  PAGEREF _Toc453518204 \h  Introduction (a.k.a. Why Text?  Why Binary?  Why Both?) The plan moving forward is to express configuration in text-based configuration files.  These text-based files become the  database of record  for configuration on a system.  Text-based configuration is attractive for numerous reasons: Configuration can be altered simply by editting text files: learning an api and writing code is not necessary. Configuration can be easily copied from one computer to another. Configuration can easily be backed up and restored. Configuration can manipulated remotely from extremely thin clients via tools as telnet. Configuration can be checked into a source control system as part of a development effort. Changes to configuration can be easily diff ed provided a history of snap-shots are maintained. Of course, a purely text-based configuration approach has various problems too: Not all configuration required by the underlying system can be expressed in text. The performance of reading configuration from text totally sucks. The performance of reading configuration from multiple text files sucks more. Each time configuration is read from text, that configuration must be fully validated. A user can totally cripple a system with innocent mistakes. Implementation/computer-specific configuration should not be exposed to users (provided it can be derived). To retain the advantages of text-based configuration and balance out the disadvantages, we employ a cookdown process, where text-based configuration is validated and cooked into one or more efficient, compact, binary, persisted caches.  The key design points of this cookdown model include: Text-based configuration is the  database of record The text-based configuration does not expose  implementation-specific  configuration which is derivable from implementation-agnostic configuration. Cooking the text-based configuration into the cooked-down format does full validation as part of the cooking. The cooked-down format is produced exclusively from the text format.  The cooked down format cannot itself be otherwise re-configured.   The cooked down format is not exposed to customers except via an encapsulating api. A cookdown process which fails because the configuration is totally bogus never results in the invalidation of a previous good cookdown. The details of this cookdown process and when it happens is encapsulated from the runtime system consuming the configuration. The runtime system consuming configuration only consumes from the cooked-down format. The cooked-down format consumed by the runtime system is always guaranteed to be  correct .  This means that vast volumes of code attempting to deal with bogus-ness need not be scattered throughout the runtime system. This cookdown approach retains the advantages of a text-based configuration approach and corrects the disadvantages: Configuration not expressible in text is still consumable by the runtime system. The performance of reading configuration text and reading from multiple files can be vastly improved. The process of performance improvements is encapsulated from the runtime system. Configuration validation only occurs during cookdown and cookdown need not happen each time configuration must be read. A user cannot cripple the system with bogus configuration provided a previously good cooking exists. Implementation- and computer-specific internal configuration is not exposed to users. Simple tables are used to both implement and encapsulate this cookdown process.  They encapsulate validation and transformation logic.  They also serve up the cooked configuration to the runtime system.  Because they encapsulate storage, callers are insulated from storage dependencies.  The runtime system sees the expected configuration.  Users can alter configuration either via editing text directly or via a helpful api.  This approach allows the runtime system to focus on being a runtime system, while the configuration system does its job. Part I: Ducttape The Configuration Manager (a.k.a. Encapsulating Configuration Further) The configuration manager (config_manager.cxx) encapsulates the process of extracting configuration for sites, application pools, and applications from the metabase and feeding that configuration into the ul-and-worker manager in the kernel.  When the ducttape service starts, the configuration manager is initialized.  Within this initialization, the configuration manager feeds the configuration for all application pools (one at a time), then all sites (one at a time), then all applications in each site (one at a time) into the ul-and-worker manager. The configuration manager is currently tied to the metabase.  It also implements a lot of validation logic.  The goal is to encapsulate this code from configuration storage, the cookdown process, and validation logic.  Here is a proposed code snippet which accomplishes this encapsulation via simple tables (error handling omitted): #define cAPPPOOLS_BASEVERSION #define cSITES_BASEVERSION #define cAPPS_BASEVERSION static const ULONG aiAppPoolColumns [] = {  iAPPPOOL_NAME,  iAPPPOOL_PERIODIC_RESTART_TIME, iAPPPOOL_PERIODIC_RESTART_REQUESTS, iAPPPOOL_MAXPROCESSES, iAPPPOOL_PINGING, iAPPPOOL_IDLETIMEOUT, iAPPPOOL_RAPIDFAIL_PROTECTION static const ULONG cAppPoolColumns = sizeof (aiAppPoolColumns) / sizeof (ULONG); static const ULONG cmaxAppPoolColumns = iAPPPOOL_RAPIDFAIL_PROTECTION + 1; static const ULONG aiSiteColumns [] = {  iSITE_ID,  iSITE_BINDINGS static const ULONG cSiteColumns = sizeof (aiSiteColumns) / sizeof (ULONG); static const ULONG cmaxSiteColumns = iSITE_BINDINGS + 1; static const ULONG aiAppColumns [] = {  iAPP_SITE,  iAPP_APPPOOL, iAPP_URL static const ULONG cAppColumns = sizeof (aiAppColumns) / sizeof (ULONG); static const ULONG cmaxAppColumns = iAPP_URL + 1; CComPtr<ISimpleTableDispenser2> pISTDisp; ULONG cBaseVersion; ULONG HRESULT CComPtr<ISimpleTableRead2> pISTAppPools; void* apvAppPoolValues [cmaxApppoolColumns]; WCHAR* wszAppPoolName; APP_POOL_CONFIG AppPoolConfig; CComPtr<ISimpleTableRead2> pISTSites; void* apvSiteValues [cmaxSiteColumns]; ULONG* acbSiteValues [cmaxSiteColumns]; CComPtr<ISimpleTableRead2> pISTApps; void* apvAppValues [cmaxAppColumns]; hr = GetSimpleTableDispenser (ePRODUCT_URT, fST_LOS_READONLY, &pISTDisp); hr = pISTDisp->GetTable ( didURTGLOBAL, tidAPPPOOLS,  0, 0, eST_QUERYFORMAT_CELLS, fST_LOS_COOK, (void**) &pISTAppPools #ifdef _DEBUG hr = pISTAppPools->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cAPPPOOLS_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTAppPools->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTAppPools->GetColumnValues (cAppPoolColumns, aiAppPoolColumns, NULL, apvAppPoolValues); wszAppPoolName = (WCHAR*) apvAppPoolValues[iAPPPOOL_NAME]; AppPoolConfig.PeriodicProcessRestartPeriodInMinutes = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PERIODIC_RESTART_TIME])); AppPoolConfig. PeriodicProcessRestartRequestCount = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PERIODIC_RESTART_REQUESTS])); AppPoolConfig.MaxSteadyStateProcessCount = ((ULONG)*(apvAppPoolValues[iAPPPOOL_MAXPROCESSES])); AppPoolConfig.PingingEnabled = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PINGING])); AppPoolConfig.IdleTimeoutInMinutes = ((ULONG)*(apvAppPoolValues[iAPPPOOL_IDLETIMEOUT])); AppPoolConfig.RapidFailProtectionEnabled = ((ULONG)*(apvAppPoolValues[iAPPPOOL_RAPIDFAIL_PROTECTION])); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateAppPool (wszAppPoolName, &AppPoolConfig); hr = pISTDisp->GetTable ( didURTGLOBAL, tidSITES,  0, 0, eST_QUERYFORMAT_CELLS, fST_LOS_COOK, (void**) &pISTSites #ifdef _DEBUG hr = pISTSites->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cSITES_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTSites->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTSites->GetColumnValues (cSiteColumns, aiSiteColumns, acbSiteValues, apvSiteValues); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateAppPool ( ((ULONG)*(apvSiteValues[iSITE_ID])), (BYTE*) apvSiteValues[iSITE_BINDINGS], acbSiteValues [iSITE_BINDINGS] hr = pISTDisp->GetTable ( didURTGLOBAL, tidAPPS,  0, 0, eST_QUERYFORMAT_CELLS, 0, (void**) &pISTApps #ifdef _DEBUG hr = pISTApps->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cAPPS_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTApps->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTApps->GetColumnValues (cAppColumns, aiAppColumns, NULL, apvAppValues); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateApplication ( ((DWORD)*(apvAppValues[iAPP_SITE])), (WCHAR*) apvAppValues[iAPP_URL], (WCHAR*) apvAppValues[iAPP_APPPOOL] Here is a brief description of what the code snippet above does.  First note that 3 simple tables are used: the sites, apppools, and apps tables.  No query is specified in GetTable for any of the tables, meaning that all sites, all app pools, and all apps respectively are retrieved. For each table, the expected base version is verified in debug builds using GetTableMeta.  This is required to insure none of the expected columns were re-ordered or removed. For each table, we navigate to each row (ie: each app pool, site, or app) with MoveToRowByIndex.  For each row, we retrieve all column values of interest with GetColumnValues.  Values of interest are appropriate cast or copied, and the configuration for each row is passed into the ul-and-worker manager. The Cook-Down Process (a.k.a. Under the Covers) So far as the configuration manager is concerned, all sites, app pools, and apps are extracted from the persisted cooked cache via simple tables.  What happens under the covers though?  Basically, when the cooked cache is read, we want allow for the opportunity to re-cook the cache if the configuration changed.  All the configuration manager does to indicate this behavior is specify the fST_LOS_COOK level-of-service.  The cook-down magic occurs in the table s implementation dispenser, which is invoked during the binding process within the GetTable calls. In general, if the text-based configuration has not changed, the configuration is simply served directly from the cooked cache.  Here is the algorithm used: If fST_LOS_COOK is not provided, just fetch the configuration from the cooked cache.  Otherwise: If the cooked cache does not exist (ie: either this is a clean product installation or it was deleted), cook the configuration from the database-of-record into version 1 of the cooked cache and store the date-time stamp of the database-of-record, then serve up the configuration from the cooked cache.  Otherwise: Check the database-of-record against the date-time stamp in the cooked cache, and if it changed, begin a new cookdown process into a new version of the cooked cache: If the cookdown succeeds, eliminate the old cache, and serve up the configuration from the new cache, again recording the date-time stamp. If the cookdown fails catastrophically, discard the new cache, update the date-time stamp in the old cache, and serve up the configuration from the old cache. Otherwise, if the date-time stamp is still current, simply serve up the information from the persisted cache. During the cookdown, rich validation of the configuration occurs, as well as any necessary transformations and expansions.  Problems with the configuration for individual sites, app pools, or apps are logged in detail.  If the problem is severe enough, the particular site, app pool, or app does not get cooked and therefore does not appear at runtime.  Only for catastrophic problems is the cookdown abandoned entirely. The XML-based Configuration Files (a.k.a. Show Me The Text!) Here are snippets of the relevant configuration files.  Note that properties which are optional and which were omitted are properly defaulted. Sites configuration (from one or more *.sites files located at the well-known root): <SitesConfiguration xmlns="x-schema:SitesConfiguration.Schema"> <SiteConfiguration Name= MySite PathRoot= c:\mysite <Binding Sting= </SiteConfiguration> </SitesConfiguration> Application pools configuration (from one *.apppools file located at the well-known root): <ApplicationPoolsConfiguration xmlns="x-schema:ApplicationPoolsConfiguration.Schema"> <ApplicationPoolConfiguration Name= MyPool RestartTime= MaxProcesses= Pinging= </ApplicationPoolsConfiguration> Application configuration (from multiple *.appcfg files distributed throughout the file system): <ApplicationsConfiguration xmlns="x-schema:ApplicationsConfiguration.Schema"> <ApplicationConfiguration Name= MyApp ApplicationPool= MyPool </ApplicationsConfiguration> Sites configuration can be kept in 1 to n files, where n is the number of sites.  Any .sites file can have one or more sites configurations.  One factor in the decision of how few or how many .sites files to have is security.  (For example, assume 10 sites.  If each were owned by a different person/group, each site configuration should be in its own file so that it can be secured such that only the owner(s) and system administrator can change it.  If the same group owned 7 sites, the configuration for those 7 sites could all be in one file.) <todo/> Discuss security of XML files and CLB Validation Rules And Transformation Logic (a.k.a. !!!) <todo/> PAGE   PAGE   ~vnfc`Z }ztqnkheb_\YV
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\info\old\project 42 administrative framework.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Project 42 Administrative Framework Title _PID_HLINKSProject 42 Administrative Framework Markus Horstmann This document describes the overall architecture for meta-data required by the different parts of URT 1.0. It also describes the actual meta-data attributes for each of the different URT consumers. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  Project 42 Administrative Framework July 16, 1999 Draft Rev 0.7a  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the overall architecture for meta-data required by the different parts of URT 1.0. It also describes - at a high level - the actual meta-data attributes for each of the different URT attribute consumers. TOC \o "1-3" Introduction  PAGEREF _Toc456767064 \h  Guiding Principles  PAGEREF _Toc456767065 \h  Scenarios  PAGEREF _Toc456767066 \h  Web Application ( Parcel Delivery  aka FedEx)  PAGEREF _Toc456767067 \h  Standalone Client App (  PAGEREF _Toc456767068 \h  Browser  PAGEREF _Toc456767069 \h  Object Remoting/Messaging  PAGEREF _Toc456767070 \h  3.4.1 Client to Server  PAGEREF _Toc456767071 \h  3.4.2 Server to Server  PAGEREF _Toc456767072 \h  3.4.3 Cross-Process ( ActiveX EXE  PAGEREF _Toc456767073 \h  Requirements  PAGEREF _Toc456767074 \h  URT 1.0 Administrative Framework  PAGEREF _Toc456767075 \h  Attribute Containers  PAGEREF _Toc456767076 \h  5.1.1 Machine Configuration  PAGEREF _Toc456767077 \h  5.1.2 Site Definition  PAGEREF _Toc456767078 \h  5.1.3 Site Configuration  PAGEREF _Toc456767079 \h  5.1.4 Application Configuration  PAGEREF _Toc456767080 \h  5.1.5 Application Definition  PAGEREF _Toc456767081 \h  5.1.6 Directory  PAGEREF _Toc456767082 \h  5.1.7 Assembly  PAGEREF _Toc456767083 \h  5.1.8 Module  PAGEREF _Toc456767084 \h  Attributed Entities  PAGEREF _Toc456767085 \h  5.2.1 Machine  PAGEREF _Toc456767086 \h  5.2.2 Virtual Site  PAGEREF _Toc456767087 \h  5.2.3 Application Pool  PAGEREF _Toc456767088 \h  5.2.4 Application  PAGEREF _Toc456767089 \h  5.2.5 Assembly  PAGEREF _Toc456767090 \h  5.2.6 Directory  PAGEREF _Toc456767091 \h  5.2.7 Virtual Directory  PAGEREF _Toc456767092 \h  5.2.8 Page / File  PAGEREF _Toc456767093 \h  5.2.9 Module  PAGEREF _Toc456767094 \h  5.2.10 Class  PAGEREF _Toc456767095 \h  5.2.11 Interface  PAGEREF _Toc456767096 \h  5.2.12 Method  PAGEREF _Toc456767097 \h  Container Relationships  PAGEREF _Toc456767098 \h  5.3.1 Containment  PAGEREF _Toc456767099 \h  5.3.2 Inheritance and Override Rules  PAGEREF _Toc456767100 \h  Implementing the Framework: Catalog  PAGEREF _Toc456767101 \h  Configuration APIs  PAGEREF _Toc456767102 \h  Storage Abstraction: Simple Tables and Table Dispensers  PAGEREF _Toc456767103 \h  6.2.1 Table Schema  PAGEREF _Toc456767104 \h  6.2.2 Table Dispenser / Wiring Database  PAGEREF _Toc456767105 \h  6.2.3 Data Tables  PAGEREF _Toc456767106 \h  6.2.4 Logic Tables  PAGEREF _Toc456767107 \h  Runtime APIs  PAGEREF _Toc456767108 \h  Attributes  PAGEREF _Toc456767109 \h  DuctTape  PAGEREF _Toc456767110 \h  7.1.1 M4 Implementation plans  PAGEREF _Toc456767111 \h  7.1.2 Scenario 2: Application Config  PAGEREF _Toc456767112 \h   PAGEREF _Toc456767113 \h  7.2.1 Resource Constraints:  PAGEREF _Toc456767114 \h  7.2.2 Location Settings:  PAGEREF _Toc456767115 \h  7.2.3 Security Settings:  PAGEREF _Toc456767116 \h  7.2.4 Application Runtime Settings:  PAGEREF _Toc456767117 \h  7.2.5 Misc Configuration Settings:  PAGEREF _Toc456767118 \h  7.2.6 ISV Licensing Restrictions  PAGEREF _Toc456767119 \h  Runtime (Lightning)  PAGEREF _Toc456767120 \h  7.3.1 Application Domain & Application Config  PAGEREF _Toc456767121 \h  7.3.2 Assembly Cache (Fusion)  PAGEREF _Toc456767122 \h  7.3.3 Context  PAGEREF _Toc456767123 \h  7.3.4 Channels  PAGEREF _Toc456767124 \h  7.3.5 Security  PAGEREF _Toc456767125 \h  7.3.6 Component Categories?  PAGEREF _Toc456767126 \h  7.3.7 COM Interop  PAGEREF _Toc456767127 \h  7.3.8 Custom Registrar?  PAGEREF _Toc456767128 \h  7.3.9 File Extensions/MIME Types?  PAGEREF _Toc456767129 \h  WebObjects  PAGEREF _Toc456767130 \h  7.4.1 Remoting  PAGEREF _Toc456767131 \h  7.4.2 Naming Service (WONS)  PAGEREF _Toc456767132 \h  7.4.3 Transactions  PAGEREF _Toc456767133 \h  7.4.4 Object Persistence  PAGEREF _Toc456767134 \h  7.4.5 Eventing  PAGEREF _Toc456767135 \h  7.4.6 Example: COM+ 1.0 Attributes  PAGEREF _Toc456767136 \h  Distributed Message Bus (Messaging)  PAGEREF _Toc456767137 \h  7.5.1 Server side  PAGEREF _Toc456767138 \h  7.5.2 Client side  PAGEREF _Toc456767139 \h  7.5.3 Publish/Subscribe  PAGEREF _Toc456767140 \h  IIS 5.0  PAGEREF _Toc456767141 \h  7.6.1 Application Roots?  PAGEREF _Toc456767142 \h  7.6.2 Virtual Directories?  PAGEREF _Toc456767143 \h  Fusion Settings  PAGEREF _Toc456767144 \h   PAGEREF _Toc456767145 \h  7.8.1 Managed Properties  PAGEREF _Toc456767146 \h  7.8.2 Others?  PAGEREF _Toc456767147 \h  Others  PAGEREF _Toc456767148 \h  7.9.1  PAGEREF _Toc456767149 \h  7.9.2 XML Parser?  PAGEREF _Toc456767150 \h  7.9.3 Net Classes?  PAGEREF _Toc456767151 \h  7.9.4  PAGEREF _Toc456767152 \h  7.9.5 IMDB?  PAGEREF _Toc456767153 \h  Related Specs  PAGEREF _Toc456767154 \h  Open Issues  PAGEREF _Toc456767155 \h  Revision History  PAGEREF _Toc456767156 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Introduction As all reasonably rich platforms, the Project 42/URT platform consists of a set of technologies that are designed and developed by independent teams, often on different schedules and usually with different backgrounds and scenarios in mind. In order to avoid the fragmentation of the current Windows 2000/WinDNA platform, it is necessary to coordinate the different technologies in terms of the programming model(s), as well as the administrative model. This document is concerned about the latter. Guiding Principles simplicity for the administrator, zero-administration for the end-user  zero registration, "XCOPY" deployment  text based configuration files, Notepad editable  uniform model across all URT features  uniform, simple (scriptable), remoteable configuration API (read/write)  application isolation: make applications discoverable and replicatable ("XCOPY *.* /s") Scenarios Need to drive app model(s) to closure! -> MaryKir Web Application ( Parcel Delivery  aka FedEx) A web application has a single application configuration file that always resides in the root directory of the web application. URL Namespace File System  HYPERLINK "http://updserver"  http://updserver C:\wwwroot\updserver Updserver.cfg /Tracking \Tracking Tracking.XSP Tracking.XSP /Order \Order Order.XSP Order.XSP Order_Template.HTML Order.DLL Tracking.DLL Standalone Client App ( The assumption in this document is that a single application configuration file is deployed in the same directory as the EXE and the configuration file name can be derived from the EXE file name (i.e.  foo.exe.cfg Browser Object Remoting/Messaging Client to Server Server to Server Cross-Process ( ActiveX EXE Requirements Support replication Can shared assemblies be exported/redistributed out of the assembly cache? Support  XCOPY  deployment (aka zero-registration) Support secure, application-local storage of sensitive information (passwords etc.). The meta-data interface must accommodate changes to the meta-data schema without requiring a recompile of catalog infrastructure, runtime interfaces, admin interfaces or consumers. The runtime interfaces must be easy/efficient to use for common usage scenarios, i.e. not requiring multiple requests and negotiations/discovery steps for activation. Extensibility for URT Context properties and their attributes  Third party extensibility (app specific settings) Third party extensibility for infrastructure (?) Is this a requirement for URT? URT 1.0 Administrative Framework The URT 1.0 Administrative Framework is built around three top-level concepts: Attribute: a named value, potentially arbitrarily complex. Entity: an entity to which one or more attributes can be applied. Container: a physical location at which attributes are stored. Attribute Containers Attribute containers represent the different physical locations in which attributes are actually stored. The URT 1.0 Administrative Framework distinguishes between different attribute containers. Are there other containers? Per-user? Policy per assembly cache? Machine Configuration Some attributes can be specified for all application on a machine. Some of these attributes provide default values in case an application does not specify a value. Other attributes configure entities that exist only once per machine. Machine level attributes should be avoided whenever possible, because as soon as two application require different values for a machine level attribute, customers are forced to use two separate machines. Site Definition IIS / Ducttape have the concept of a site, that establishes a root URL to use for a set of file system directories and applications. In a typical administrative scenario, a machine administrator (example:  ) creates one or more sites for use by site/application administrators. The machine administrator often wants to specify certain attributes (ex. Bandwidth throttling) that the site/app administrator cannot modify. This needs more discussion with Ducttape / XSP. Site Configuration The Site Config file provides a clean way for the site/application administrator to specify site level attributes, without having access to the machine wide  site directory  and the site definition file. Application Configuration An application in the most general form is defined as the collection of code and it s data running in a URT Application Domain. Hosting environments like XSP, Browsers and the Win32 EXE  Loader  establish application scope by creating an application domain. In many scenarios, a root assembly and all its dependencies do not fully define an application. In XSP/scripting scenarios for example, a script is dynamically compiled and executed without ever formally being authored as an assembly. Every application domain has exactly one configuration file that carries all the configurable attributes for any assemblies that might get loaded into the application domain. The configuration file location is determined at application domain creation time as an explicit parameter to the application domain creation API. Need to get this into the appdomain API! The configuration file is an XML file that can be freely edited using arbitrary tools (including text editors like NotePad). Is there really a one-to-one relationship to Application/Application Domain? Can we provide programmatic control over app configuration to the app domain creator? Through general purpose APIs? In certain dynamic hosting scenarios (Scripting etc.) assemblies are created in memory and on the fly. It wouldn t make sense to force a temporary config file for these cases Is this a separate file from the fusion settings file and the WFC Managed Properties files? How does the configuration file get created? How does the configuration file get updated when new assemblies are copied into the  Application ? In most scenarios updates to the config file should not be required unless the new assembly needs to be configured! How do we secure the configuration file? Signing? File system security? Most scenarios can not require signing of the config file Application Definition Do we need the concept of an application definition that captures the immutable aspects of an app? Is this just a regular assembly (manifest) that is marked (or even implicitly treated) as the root of an application (domain)? It must be possible to add assemblies to an app without explicitly adding them to neither app definition nor app config file! How does an application tie into the assembly cache dependency tracking/refcounting? Directory In web scenarios, certain attributes can be specified to apply to all files in a directory. The directory container holds these attributes. Do we need dedicated physical containers for directories or are directory attributes specified in the application container? Where do file attributes get specified? NTFS file streams have been proposed as one mechanism Are directories always scoped within an application?  Assembly Assemblies group one or more modules into a single logical unit. Every module must be in an assembly as the names of all entities in a module are scoped by the name of the assembly. Assemblies and assembly attributes are generated by development tools and cannot be configured. However, many assembly attributes are merged with and validated against configuration information of the hosting application domain. In URT 1.0, assembly meta-data is stored in a Component Library ( Assembly Manifest ). The Component Library can be stored inside a Win32 PE image or left as a stand-alone file. More details on   HYPERLINK "http://lightning/Specs/admin/Default.htm"  http://lightning/Specs/admin/Default.htm It has been agreed that there are no assembly level configuration files. However, some documents still talk about these Module Attributes can be stored within the module that carries the attributed entities. Modules and module attributes are generated by development tools. Again, module attributes cannot be configured, but do get merged with and validated against configuration information. In URT 1.0, module meta-data is stored in a Component Library inside a PE image. More details on   HYPERLINK "http://lightning/Specs/Formats/default.htm"  http://lightning/Specs/Formats/default.htm Attributed Entities Attributes apply to one or more entities, whose semantics they modify. This section lists the logical entities that can be attributed in Project 42. Are there more entities? Need to add detail for each entity. Each logical entity corresponds to a logical tables (in some case more than one) in the catalog. The attributes associated with each entity correspond to the columns in this table. The actual rows in the table are typically the result of a merge of the attributes as specified in one or more physical containers. Section   REF _Ref456167495 \r \h   talks more about container relationships and merge semantics. Machine Virtual Site Application Pool Application Assembly Directory Virtual Directory Page / File Module Always scoped within an assembly. Class Always scoped within an assembly. Interface Interface Definition Scoped within an assembly. Interface Implementation Scoped within a class. Method Method Definition Scoped within an interface definition. Method Implementation Scoped within a class or an interface implementation. Container Relationships The merge follows specific semantics, which often depend on the attribute itself, the container that it is specified in or the way it is specified. The catalog provides a set of common merge semantics, which can be selected declaratively at different levels (global schema, in the configuration file itself, in a parent configuration file). The catalog infrastructure is also extensible using multiple mechanisms (custom virtual tables, table interceptors etc.). These mechanisms can be used to implement arbitrary merge semantics. Do we need to provide third-party extensibility for merge semantics in URT V1? Do we need to generalize containment relationships? Do we need to generalize inheritance between containers? Containment Machine Config contains  Site Config Site Config contains Application Config Application Config contains Application Definition (may be implicit) Application Definition contains Assembly Assembly contains  Module Inheritance and Override Rules Along the containment hierarchy of the different containers, some attributes can be inherited from parent to child while others can be inherited from child to parent. Inheritable attributes can be marked as  Final: Containers that are lower in the inheritance graph cannot modify the attribute. Overridable: Containers that are lower in the inheritance graph can freely override the attribute; effectively the attribute represents a default value. Constrainable: Containers that are lower in the inheritance graph can only constrain the attribute. Example: Bandwidth throttling specified at the site level can only be reduced at the application level. Do we unify Fusion  inheritance  with IIS/Ducttape inheritance? Likely not, but how do we rationalize this for the dev/admin? XSP proposes an attribute merging mechanism similar to the Apache Module mechanism. Implementing the Framework: Catalog In order to ensure a common approach to configuration, all URT features will consume any configurable attributes through a common configuration infrastructure, the URT Catalog. Configuration APIs Configuration files can obviously be created through arbitrary means, as they are text files and their format is fully documented. In addition, the URT Catalog provides higher-level configuration APIs that allow read/write access to configuration files and other storage containers. The Configuration APIs are designed for use by administrative tools. They will be broadly documented ( Platform SDK ). The AS 2.0 Administrative Tools are written exclusively to the configuration APIs. All attributes will be exposed through a single set of APIs. The catalog team owns defining and implementing this API.  The configuration APIs allow queries and enumeration over all configuration data. They also provide validated write access to configuration data. The configuration APIs also allow secure remote access to configuration data. The configuration API is exposed as a set of managed classes. Refer to   HYPERLINK "http://appsrv/asconfig/specs/urt1/AppServerConfigRequirements.doc"  http://appsrv/asconfig/specs/urt1/AppServerConfigRequirements.doc  for more details. The configuration API builds on the lower level configuration system, which is why all URT configuration must be exposed through the catalog infrastructure. Binaries also carry fixed meta-data, which is provided by the developer (and the development tools). Development tools use low-level meta-data creation APIs when generating modules and assemblies. The meta-data creation APIs will be publicly documented, but probably in a limited fashion  ( tools developer SDK ). The runtime team owns the module and assembly meta-data creation APIs (IMetaDataEmit*, see   HYPERLINK "http://lightning/Specs/Formats/default.htm"  http://lightning/Specs/Formats/default.htm  for details). Storage Abstraction: Simple Tables and Table Dispensers The URT Catalog is built around a relational database abstraction. All configuration information is broken into a set of tables.  For details refer to the implementation spec at   HYPERLINK "http://appsrv/asconfig/specs/urt1/simpletablesV2.doc"  http://appsrv/asconfig/specs/urt1/simpletablesV2.doc Table Schema All tables are described with rich schema information. In addition to standard table/column/type information, the schema carries other information, including hints to the (generic) configuration APIs, such as allowable values for an attribute, enumerations, relations between tables etc. Every table has a unique name (a Table ID). Table Dispenser / Wiring Database The table dispenser maps queries to a specific COM component (hereafter called a table implementation) that will render the contents of the table as described in the schema, in whatever way it sees fit. The mapping mechanism is fully customizable using custom table dispensers, and can consider: The table ID being requested. The query being passed in. The level of service (read-only, read-write, remote etc.) being requested. Any arbitrary criteria the custom table dispenser sees fit. For a given table, multiple implementations may exist; for example if a client requests read-only access, an in-process implementation may be chosen, while for write access a transactional implementation running in a protected system process may be chosen. The standard table dispenser allows selection of table implementations based on table ID and level of service. It uses the wiring database to map TableID/Level of Service to specific table implementations. Data Tables Some table implementations are physical tables, i.e. they are immediately backed by some persistent store and perform only minimal - mainly syntactic - validation of the data.  The catalog team provides a set of data table implementations, which include  XML data table CompLib data table RegDB data table Data tables under consideration are: IIS meta base data table Registry data table Internal URT teams can write their own data tables and plug them into the catalog framework using the catalog s wiring database. Logic Tables Other table implementations do not serve data with a direct physical representation but are merely logical tables (also called virtual tables): they are created as the result of applying some form of custom logic to one or more physical tables. Like data tables, logic tables are also implemented as COM components. Examples of such custom logic are:  Joins of hard-coded attributes (class meta-data) with configuration information into a single  Class  table.  Merges of configuration attributes along a containment hierarchy.  Calculation of internally required information based on a set of publicly exposed attributes. Validation of semantic consistency of attributes. Internal URT teams can write their own logic tables and combine them with data tables or other logic tables in a generic way using the catalog s wiring database, or in a completely customized way. A key goal of the catalog architecture is to keep the configuration logic separate from the consuming (system runtime) code, in order to Allow the config APIs and the UI to be driven of the same logic as the system, Enable the system to adapt to changes in the configuration logic by changing a well-isolated body of code, Enable the system to adapt to changes in the underlying store. Runtime APIs The system runtimes that consume configuration information will typically want to transform the relational data into specific, in-memory representations, that are optimized for a specific usage pattern. Often, consumers will want to cache this in-memory representation for the lifetime of a process. Currently, it is up to each consumer to build their runtime API set on top of the catalog s table abstraction and implement their own in-memory caching (if needed). Who writes the runtime interfaces for each of the consumers? Each consumer? The app server admin team? What pieces (caching, persistence of preprocessed attributes) are common across all runtime interfaces and should be provided by the catalog team? In URT 1.0, the catalog - including all data and logic tables - is implemented in unmanaged code. However, the table dispenser and table access interfaces are exposed as a set of managed code interfaces. Logic table implementers can of course invoke managed code if required. Attributes In order to further facilitate synergy between the different users of catalog technology, this section tracks the high-level config and attributes requirements for each of the URT teams. This section focuses on configurable attributes, but includes development time attributes whenever those need to be merged with or validated against configurable attributes.  DuctTape  Items with a  are to be supported in the initial M4 catalog drop (6/21) to DuctTape. Attribute Logical Entity Physical Container String Application Pool Machine *PeriodicRestartTime DWORD Application Pool Machine *PeriodicRestartRequestTimeOut DWORD Application Pool Machine *MaxProcessCount DWORD Application Pool Machine *PingingEnabled DWORD Application Pool Machine *IdleTimeout Application Pool Machine MaxSimultaneousRequests Application Pool Machine PingInterval Application Pool Machine CPUAffinity Application Pool Machine *ServerBindings MULTI_SZ Metabase:  ip-address:ip-port:host-name UL: "[http|https]://[ip-address|host-name|*]:ip-port" Virtual Site Machine *SecureServerBindings MULTI_SZ Virtual Site Machine String Virtual Site Machine Bandwidth Throttling Virtual Site Machine Caching Policy? Class? Application? Config? Assembly? Module? Page?? SingleProcess? Indicates if more than one process can host this app Application Application *ApplicationPath This attribute maps an application to a VirtualSite (common URL prefix) String Application Machine *ApplicationPool String Application Machine M4 Implementation plans  Scenario 1: Machine config Preliminary implementation spec/plan (from RCraig): The plan is to deliver the necessary code for scenario #1 by 6/21/99, immediately thereafter to convert the config manager code to use it, and demonstrate the scenario in a private build derived from a good ducttape M3 snapshot. Scenario #1 is: Specify all site, app pool, and app information consumed by the config manager in XML. The config manager code is revised to fetch all information from simple tables, which always pulls from a persisted cache. Under the covers... The first time the server is started, the XML config is validated and cooked into a persisted cache (CLB1) which also retains a date/time stamp of the XML file. The second time the server is started, provided the XML is not changed (according to the date/time stamp), the config comes from the persisted cache. The third time it starts, assuming the XML has changed, the XML is cooked again into CLB2.  Assuming validation succeeds, CLB1 is removed. The fourth time, assume the XML config for a particular site is hosed.  During the validation process, appropriate logging occurs, and the cookdown process succeeds, producing CLB3, which is however missing the hosed site.  (Do we keep CLB2?) The fifth time, the XML config is totally hosed.  During the validation process, since cooking CLB4 fails, CLB4 goes away, and the config is served up from CLB3. [Seth Pollack]  should log an event in this case. Schedule and dates to be established for scenario #2 and #3.  Scenario #2 will involve adding an app by copying its files into the directory tree.  Scenario #3 will involve change notification while the system is up and running on a per site and apppool basis. [Seth Pollack]  or per app. Scenario 2: Application Config Do we require that all UL configuration be read in at UL startup time? Are there mechanisms for on-demand reading? How do we do (incremental) updates to configuration? What are the performance/scalability implications (incremental runtime hits vs. cost of pre-calc)? What are the implications of allowing on-disk and in-use/cooked down configurations to be out of sync? Replication (does replication fail? Use the cooked down config? The potentially flaky on-disk config?), PSS (troubleshooting implications). Ducttape/XSP configuration file structure Global configuration All machine-wide configuration information is stored in a single, well-known directory location (i.e.  c:\inetpub Global Policy The global configuration file ( c:\inetpub\global.cfg ) defines the default policy for all sites and all applications, directories and files on a machine. Site Definition A set of site definition files ( c:\inetpub\*.sitedef ) define the virtual sites on a machine.  Each site definition file establishes one or more virtual sites ( server binding , root directory), defines the name of the site configuration file if any, defines global policy for all apps, directories and files in the site. The site definition file can limit the set of applications in the site by listing the locations in which application configuration files can be stored. The locations are specified in the form of a search path; each part of the search path can be  A relative path to a specific application configuration file. A relative path to a directory under which to search for application configuration files. The site definition file can limit the set of virtual directory configuration files by listing the locations in which vdir configuration files can be stored. The locations are specified in the form of a search path, that follows the same rules as the application search path. Site Configuration A site can have a site configuration file ( c:\inetpub\wwwroot\mysite\mysite.sitecfg ), which allows the machine administrator to delegate some of the site configuration to a separate site administrator. There can be at most one site configuration file for a site; it must reside in the site s root directory and the site configuration file name must be explicitly specified in the site definition file.  The site configuration file configures a site within the limits of the global policy and the site definition. The site configuration file can specify and refine the policy for all apps/dirs/files in the site. The site configuration file can refine the application and vdir search paths specified in the site definition file. Application Configuration Each application has exactly one application configuration file ( c:\inetpub\wwwroot\mysite\myapp\myapp.appcfg , or  c:\inetpub\wwwroot\mysite\mysite.appcfg ). A directory can have at most one application configuration file. Unless the site definition or site configuration file s application search path indicates a path to a specific application configuration file, the application configuration file must have the same root name as the directory in which it resides and must carry the .appcfg file extension. This avoids problems introduced by maliciously or carelessly adding arbitrary files with a  .appcfg  file extension to a directory. The application configuration file establishes the scope of an application within both the UNC and URL name spaces. The location of the application configuration file determines the root URL/UNC path for the application. URL/UNC paths that share a common prefix with the root URL/UNC path of the application, and do not share a longer common prefix with any other application s URL/UNC path are said to be within the scope of the application. The application configuration file provides configuration for an application within the policy defined by the global, site definition and site configuration files (if any). An application does NOT inherit any settings from any application configuration files that reside in a parent directory outside of the scope of the application. All items (DLLs, scripts etc.) that reside in a directory within the scope of an application do inherit the application configuration from the application configuration file in the root of the application. The application configuration file specifies the location(s) in which the URT searches for privately installed assemblies. The location(s) for private assemblies are specified in the form of a search path; each part of the search path can be  A relative path to a directory under which to search for assemblies. The relative path must point to a directory within the scope of the application. An absolute path to a directory under which to search for assemblies. To avoid fragility introduced by search path order, only the first directory in the search path may contain assemblies with simple names. Virtual Directory Configuration *.vdircfg   establishes exactly one virtual directory. More than one per directory. By default, file name is used as the relative URL for the vdir, can be overridden in the .vdircfg file. Directory and File Configuration .dircfg   configures a directory. One per directory. Can exclude sub-directories from URL namespace. Can exclude individual files from URL namespace. Can mention specific .dircfg files in sub-directories. Can specify file config for individual files or groups of files (wildcard). .filecfg   configures one file. For each file, <file>.<ext>.filecfg is used first Processing the Configuration Files GaryBu proposes to do directive based processing rather than declarative/relational merging. The information contained in the configuration files is parsed into a set of logical tables: Global Sites Applications Virtual Directories Directories Files The Global table is a direct representation of the global configuration file. The Sites table is computed as a merge of the following files: Global Site Definition Site Configuration The Applications table is computed as a merge of the following files: Global Site Definition Site Configuration Application Configuration The Virtual Directories table is computed as a merge of the following files: Global Site Definition Site Configuration Virtual Directory Configuration (recursion here) The Directories table is computed as a merge of the following files: Global Site Definition Site Configuration Directory Configuration (recursion here) The Files table is computed as a merge of the following files: Global Site Definition Site Configuration Directory Configuration (recursion here) File Configuration Each configuration file indicates the context for each attribute (= into which of the logical tables the attribute should be merged). Using XML this could be expressed by defining an additional table (call them  config file tables ) corresponding to each of the logical tables, and scoping the attributes within these tables. Controlling the merging process This part is currently under design/discussion, together with the directives based config proposal. The merging process can be further controlled via additional tags on individual attributes.  Each attribute can be tagged using one of the following options: Final : differing values in subsequent configuration files are ignored (warning logged). This is the default. Specializable : subsequent configuration files can only specify values that further specialize this value (Examples: MaxBandwidth at the site def level, can be reduced, but not expanded at the site config level). Overrideable : subsequent configuration files can completely replace this value. : this attribute should be added to a multi-value attribute. Remove : this attribute should be removed from a multi-value attribute. Custom_Merge : a URT class (or a catalog logic table) is invoked to perform the merge. The name of the class is specified in the tag. Aliases for commonly used classes can be declared in any configuration file. Input to the class is the set of logical tables as parsed so far and the configuration file to be merged into them. Output is a new set of logical tables. In XML these tags could be expressed as additional, optional columns in the config file tables, using the attribute name as a root name and appending  _merge , i.e.  We need a better way to express tags in XML. <site MaxBandWidth=1000 MaxBandWidth_merge= final <file  ScriptMap= ScriptMap_merge= Remove In SiteCfg: <application MyDSN= server=\\mysql;uid=xyz;pwd=blah MyDSN_merge= myassembly#DSNMerge In AppCfg: <application MyDSN= database=Customer MyDSN_merge= myassembly#DSNMerge Result: MyDSN= server=\\mysql;database=Customer;database=Customer;uid=xyz;pwd=blah Based on preliminary info from ScottGu. Physical container association (= dev vs. admin) by MarkusH. Do we want directive-based config? How do we configure pipeline modules? Do we need third-party extensibility for pipeline modules? Attribute Logical Entity Physical Container Cache Size Tbd (MB) Application App Config App Def (minimum size) Session State Size Tbd (MB) Application App Config App Def? (Minimum size)  Assembly? (hint: required size per session) Session State Timeout Tbd (minutes) Application App Config MaxExecutionTimeout Tbd (seconds) Application App Config App Def? (Minimum timeout) Session State Provider Tbd (Machine & Port) Application App Config App Def? (functionality required?) Application Root Directory Application App Config (implicy in location!) Application Assembly Cache Application App Config? App Def (relative path) Site (Default? Valid locations to choose from?) App Sandboxing Settings How does this relate to trust grant in assembly cache? Application App Config User Roles Application? App Def App Config? (Add more roles) Authorization Accounts Application App Config Application Class Application App Def Pipeline Modules Application Debug vs. Retail Application App Config? Automatic Application Restart Application App Config? Automatic Failure Recovery Application App Def? Extension/Verb Mapping to IHTTPHandlerFactories Application App Def? Administrator Contact String Application App Config? Default Script Language Application App Def? Custom Error Messages Application App Def? Site? Debugging Settings (Security) Application App Config? Output Buffering Application App Config? Resource Constraints: Cache Size -- Total amount of cache space (in Mb) available to the app Session State Size -- Total amount of session state storage (in Mb.) to use with session state Session State Timeout -- Default timeout (in mins) for session state Max Execution Timeout -- Number of seconds request is allowed to run before COM+ automatically kills it (protects against infinite loops, runnaway requests, etc) Location Settings: Session State Provider -- Machine and port of session state provider Application Root Directory -- Specifies the root filesystem directory of the application Application Assembly Cache -- Filesystem directory containing the application assembly cache Security Settings: App Sandboxing Settings -- Security restrictions for app (file system + network access, etc) User Roles -- List of application roles that accounts will be mapped to Authorization Accounts -- Differents accounts (NTLM, SQL, Text File) to map to roles Application Runtime Settings: Application Class -- Code that handles module events (onSessionStart, OnApplicationStart, etc). Pipeline Modules -- Modules (and their ordering) within the pipeline Debug vs. Retail -- Indicates whether debug or retail binaries + compilation should be used Automatic Application Restart -- Amount of time (or number of requests) that should elapse before application automatically cycles itself (ala Apache) Automatic Failure Recovery -- Number of times an application can fail within a 30 second window before server assumes a serious problem is happening and stops trying to restart  Extension/Verb Mapping to IHTTPHandlerFactories -- Allows multiple extension types to be handled (.soap, .page, etc) Misc Configuration Settings: Administrator Details -- Contact information for administrator (email, pager, etc) for automatic notification of problems/issues Default Script Language -- Default language compiler for declarative file format Custom Error Messages -- What error messages should be displayed when specific errors occur Debugging Settings -- Restrictions/ACLs for debugging apps  Output Buffering -- Specifies whether buffering is on or off by default ISV Licensing Restrictions (From ScottGu) Some other XSP Application settings that I've been thinking of include ISV Licensing restrictions -- restrictions on the maximum number of active sessions, web-farm support (how many machines allowed in a cluster), maximum number of individual users (restrict security database), etc.  Note that these would all be settings that would not be administerable by a customer -- only the origionating software vendor. These are likely candidates for an (immutable, signed) application definition file. We d need some rudimentary mechanism to disallow usage of the assemblies (or XSP files?) in such an app without a proper app definition file. It probably doesn t have to be bullet proof (see COM/ActiveX Control licensing mechanism: proof of intent is sufficient). Runtime (Lightning) Most runtime attributes - except for some context related attributes - are specified at development time and are created and consumed using the  HYPERLINK "http://comrtime/Specs/Formats/COR Metadata Interfaces.doc" IMetaDataEmit and IMetaDataImport interfaces What about the reg keys defined in   HYPERLINK "http://comrtime/Specs/Miscellaneous/regkeys_used_in_com.htm"  http://comrtime/Specs/Miscellaneous/regkeys_used_in_com.htm Application Domain & Application Config Need to be able to attach configuration to an application domain! -> CraigSi/StevenPr Assembly Cache (Fusion) Should the assembly cache be accessible via config APIs/catalog? Context Waiting for context and activation specs from the VOS and app model teams. -> GopalK, ShawnWoo/SatishT URT Context requirements: System Context policies (Tx, Sync etc.) must have developer friendly attribute syntax System Context policies must be replaceable by third parties Context policies and their parameters can be specified by the developer (= compiled into the module) or by an application integrator/administrator (= in the application configuration file) It must be possible to add arbitrary third party context policies and their parameters Do we special case the system context policies (to make them  friendly ) or do we provide a general mechanism to abstract policy internals from the attributes? It must be possible to override (some) developer specified attributes in the app config file. Which attributes must be overridable? It must be possible to enforce override rules between developer specified attributes and configured attributes. It must be possible to validate consistency between different context attributes (i.e. tx and sync etc.). What are these rules/validations? Who codes them? Channels It must be possible to enumerate all the channels/endpoints on which to listen for a given machine It must be possible to select certain channels as part of the application configuration. It must be possible to specify endpoints for preinstalled channels as part of the application configuration (per app). It must be possible to configure channels/endpoints at the machine level (policy: turn of all HTTP channels). It must be possible to add new channels as part of an application or on a machine wide basis. A Component Category-style approach is being proposed, but this mechanism doesn t allow specifying parameters (endpoints etc.). Can this be another  binding  in the .global or .site file? If we use the  cookdown  mechanism for channel/context config, what are the performance requirements? Do we need an additional layer of caching or can the  regdb cache  be used directly? What is the mechanism to bootstrap a listener for non-Ducttape protocols? Security => LorenK Attribute Logical Entity Physical Container Permission Class Interface Method Module Application? Permission Reference  (in code? declarative?) Module Group Reference (in code? declarative?) Module Group Machine Application? Config Machine? Application? GroupMember Collection of User Identities and Groups Group PermissionGrant Collection of Permissions Group Application? Config Machine User Identity Assembly Trusted Bool? Assembly Machine? Certificate Trust Certificate Machine? How common will new permissions be? Do only infrastructure providers write new permissions or does each application define a set of permission, in replacement of   one aspect of   MTS/COM+ 1.0 security roles? How can permissions be versioned? Are permissions scoped in any way? It seems to be a requirement to have permissions that span applications. How are groups named/scoped? How are user identities stored/named/scoped? Do we need to capture dependencies between permissions, i.e.  cash withdrawal  requires  database access How do we provide MTS-style declarative security? Auto-gen a permission for each class/method? Would this require (administrative) structure/hierarchy on permissions? Do we need policy on permissions? (LorenK) COM+ 1.0 Role-based Security This section expresses the COM+ 1.0 role-based security attributes in the URT 1.0 administrative framework. It is merely meant to be an illustration of attribute usage for those familiar with COM+ 1.0 role-based security. Attribute Logical Entity Physical Container [Role Definition] [String, scoped by assembly] Application [implied: superset of all role references and role access attributes in the application] Role Reference String Class Module Role Access String Class Interface Method Module Role Membership Collection of User Identities/Groups Application Config Role Alias (?) String + Collection of Roles Application Assembly (?) Config Security Enabled Application Class Config Role-base Security required Assembly Assembly Role Definition Roles are a development time abstraction for security principals. At deployment time, roles are associated with real security principals, like Windows NT user accounts or user groups. Roles are defined at development time. Their visibility is scoped by an application (domain). Roles are named by the developer using simple, unstructured strings. At deployment time and runtime, role names are disambiguated using the assembly identity that defined the role string. Roles can only be defined through Role Access and Role Reference attributes in a module. Roles can only be associated with classes, interfaces or methods through Role Access attributes in a module. Do we need a mechanism to enable role definition/assignment at the assembly or configuration level? Role Access This attributes indicates that the system is to allow access to a class, interface or method to members of a specified role. Multiple roles can be granted access to a particular class, interface or method. Role permissions are cumulative:  If a role is granted access to a class, members of this role can access all methods in this class.  If a role is granted access to an interface, members of this role can access all methods in this interface. Do we need to worry about fields and statics? Assumption: fields   yes, statics   no. Likely depends on remoteability of fields/statics. Role Access attributes can only be specified at the module level (= module compilation time!). Role Reference This attribute indicates that the implementation of a class performs programmatic checks if the current caller is a member of one or more specific roles. The class will typically behave differently depending on the role membership of the caller. Role References can only be applied to classes, not individual interfaces or methods. Expressing a role membership does not automatically grant access role members access to the class; this must be done through an additional Role Access attribute. Role Reference attributes can only be specified at the module level (= module compilation time!). Role Alias (?) A Role Alias combines one or more developer-defined roles into a single role for administrative purposes. Role Aliases   just a like Role Definitions   are scoped by an application (domain). A developer-defined role can be a member of at most one Role Alias.  If a developer-defined role is a member of a role alias, no role membership can be defined for the developer-defined role; the system treats all members of the role alias as members of the developer-defined role. Do we really want/need this mechanism? Role Membership The Role Membership attribute maps one or more security principals (example: NT user accounts or groups) to a Role Definition or a Role Alias. Role Membership attributes can only be specified in the Application Configuration (= Application Domain). Component Categories? A mechanism to categorize assemblies/classes is being defined. Should this be available through config APIs/catalog? COM Interop All COM interop attributes are specified at development time and are captured in the   HYPERLINK "http://comrtime/Specs/Interop/Default.htm"  COM Interop specification Need to confirm with DennisAn. OLE clipboard formats? Short User Name? Icons? ProgID etc? COMCAT? Custom Registrar? File Extensions/MIME Types? WebObjects Remoting Waiting for Remoting spec from app model team. -> ShawnWoo/SatishT RemoteServerName, library vs. server app? Activation Key concepts:  Level objects Level object Properties (= interceptors) Activators Activation Messages A hierarchy of level objects needs to be established. For each level object, the set of properties must be determined:  the set of properties is established dynamically, based on specific activation requests.  It is interesting to specify a fixed set of properties.  Each property can have it s own set of configurable parameter (Property bag? String?). For each level object, the set of activators must be determined: The set of activators is established dynamically, based on specific activation requests. One of the activators is special and handles the  FindOrCreate  functionality for the level. How does the runtime determine if a class should be  activated  vs. just created (remoteable flag in assembly meta-data?)? Naming Service (WONS) The Web Object Naming Service provides a distributed location service. Where is the line between config and WONS? Does WONS go through catalog for it s internal config needs? How do WONS APIs and config APIs relate/complement each other? Transactions Waiting for Transaction spec from app model team. -> ShawnWoo/SatishT Assumption: The tx attributes will be identical for the COM+ 1.0 tx attributes. This attribute indicates if   and if so in which way   the implementation of a class depends on automatic transactions for correctness. Attribute Logical Entity Physical Container Transaction Enum: Supported, Required, Requires New, Not supported, Not Specified Class Module Transaction Timeout DWORD Class Will this be per class or per app? Config [Default Transaction Timeout] DWORD Class Module [Assembly/App?] Default Transaction Timeout DWORD Machine Machine If the value is  not specified  the registration system will assume that the component will ignore transactions in the context but will not interact with any transaction protected resource (value  Transaction Ignored NoVote Must run in callers context Synchronization? Is this provided by the runtime team (CBrumme)? Waiting for spec from App model team -> ShawnWoo. Attribute Logical Entity Physical Container Synchronization Enum: Supported, Required, Requires New, Not supported, Not Specified Class Module Object Persistence Eventing Example: COM+ 1.0 Attributes Process Attributes Attribute Logical Entity Physical Container Process-level Security Required? Application Config Authentication Level? Application Config Do we need a dev time attribute? Impersonation Level? Application Config Do we need a dev time attribute? Identity? String Application Config Would  Interactive User  be a dev time attribute? Identity Password? String Application Config (LSA!) Shutdown? DWORD Process Config Disable Changes? Application Config Debugger path? String Process Config Enable CRM? Process Module This should become  Requires CRM Enabled 3GB support? Process Just-In-Time Activation (JITA) Waiting for JITA spec from WebObjects team. -> ShawnWoo/SatishT . It looks like there will be no JITA in URT 1.0. Just-in-Time Activation enables the system to do proactive state management for classes to which callers maintain long-lived references. In order to support JITA, a class must call state management functions (SetComplete, SetAbort) or use the Auto Done attribute to inform the system when any internal state an instance of a class might carry can be safely discarded ( the instance has become stateless Attribute Logical Entity Physical Container JIT Activation Enum (Supported, Not Supported, Not Specified) Class Module Auto Done Method Module JIT Activation Does the concept of a class  not supporting  JITA make sense? If the class never calls the state management APIs, it will still behave correctly Do we need a concept of  requiring JITA  (or better: requiring deletion) for cases where a class does not guarantee state cleanup if it is reused for the same or other callers?  Auto Done This method-level attribute indicates the system that upon return from a call to this method, the class instance can be considered stateless. The Auto Done attribute can only be specified in a module (= at compilation time). Object Pooling It looks like there will be no Object Pooling in URT 1.0. Object Pooling allows class instances to be reused for different callers. It is often used in conjunction with JIT Activation. A class that supports Object Pooling guarantees that any state that it maintains when being reused for a different caller is safe (i.e. does not leak confidential state like credit card numbers, does not violate the atomicity rule of transaction etc.). Attribute Logical Entity Physical Container Object Pooling Enum (Supported, Not Supported, Not Specified) Class Module Object Pooling Enabled Class Config Object Pool Size Min/Max DWORD, DWORD Class Config Do we need to support specifying default values in the module/assembly? Object Pool Creation Timeout DWORD Class Config Do we need to support specifying a default value in the module/assembly? Object Constructor String? Waiting for spec from App model team -> ShawnWoo Will this be subsumed by WFC s Managed Properties? Attribute Logical Entity Physical Container Object Constructor Enum (Supported, Required, Not Supported, Not Specified) Class Module Object Construction Enabled Class Config Object Constructor String String Class Config Tracking? Waiting for spec from App model team -> ShawnWoo Attribute Logical Entity Physical Container Tracking Enabled Class Config Queuing? Waiting for spec from App model team -> ShawnWoo Attribute Logical Entity Physical Container Queuing Enum (Supported, Not supported, Not specified) Interface Do we need this at method/class level? Module Queuing Enabled Application Interface Config Listener Enabled Application Config Exception Class ClassRef Class Module Load balancing (?) Will this be supported in URT 1.0? This attributes indicates if a class can be used as part of a load-balancing cluster. In order to support load-balancing a class must not rely on any machine specific state between instance creations, and can not share any state with other classes in the same module, process or machine, which is not accessible to other instances of these classes.  Attribute Logical Entity Physical Container Load balancing Enum (Supported, Not supported, Not specified) Class Module Load balancing Enabled Machine Class Config Context Attribute Logical Entity Physical Container Must be activated in caller s context Class Module Distributed Messaging Bus Bricks vs. Activators Path, PathManager? Durable Channels? Server side In URT 1.0, messaging will exclusively use the universal listener (Ducttape) on the server side. Very likely the proposed Ducttape file structure will meet messaging requirements. Messaging endpoints map to URLs in the Ducttape world. How do XSP and Messaging relate? Are they layered? How does Ducttape choose one or the other if not? How does an admin/dev specify which one they want? Additional logical entities are: Endpoint (=URLs) Brick Path (of Bricks) How does the path relate to XSP pipeline and Remoting level objects?  Channel An initial bootstrap scenario (FedEx messaging demo) for messaging/catalog integration drives the following attributes: Need to incorporate more requirements, like message types and inheritance. Attribute Logical Entity Physical Container Channel Name String? Channel Durable Channel InboundPath Foreign key -> Path Channel OutboundPath Foreign key -> Path Channel SendToURL String Channel [SourceURL] String Channel Implicit Channel Timeout DWORD? Channel Message Timeout DWORD? Channel PathID QoS (aggregated) PathID URL? Machine?  PathName String? URL? Machine?  Quality of Service Flags? Strings? URL? Machine?  PathID Configured Brick URL? Machine?  BrickName Assembly/classref? Configured Brick URL? Machine?  BrickParameters Name/Value pairs? Configured Brick URL? Machine? Order DWORD? Configured Brick URL? Machine?  Quality of Service consists of multiple values that can be or d together. For each endpoint (URL), multiple QoS can be specified. Message Types: incoming and outgoing. In V1 likely just a collection of strings (URIs?). Path of Server Bricks: internal to the server! QoS is related to Brick path, but one cannot necessarily just be derived from the other. Some validation can be performed (i.e. declared QoS is actually supported by the brick path).  For ease of administration inheritance can be interesting (a requirement for Pub/Sub, see below). Securing which classes are allowed to run as bricks is interesting, although likely a V2 feature (we didn't discuss this, but Lescek mentioned it at the URTSec meeting). What is the scalability/performance requirement for channels? How many channels per machine? How often do durable channels get updated? => Scot Boyd Are transient channels stored through catalog mechanisms? Depends on performance requirements for V1. What store will be used for durable channels? RCraig. Depends on perf requirements for V1. Client side For the initial scenario the same server attributes seem to be sufficient. How do we attach paths/channels/endpoint config to client apps? EXEs? WebApps? Browser? Need to be able to discover endpoints and their (public) attributes. Likely via naming service. Unclear if endpoints need to be externally configurable on the client side. This is definitely a remoting requirement, but not currently a messaging requirement. URTMsg (DCole?) to follow up with the remoting team. Publish/Subscribe We briefly touched Pub/Sub, but didn't go into much detail. In V1, subscriptions will be stored on the server only (= broker always lives on the server). Subscription by URL prefix is a Pri 1 requirement (aka inherit subscriptions from parent URL nodes). IIS 5.0 Current plan for URT 1.0 seems to be that XSP must run on both IIS 5.0 and Ducttape/ universal listener. It may be necessary to map some of the ducttape/XSP config back into the metabase Application Roots? Virtual Directories? Fusion Settings (= Application specific configuration information). => HariKris Are we going to have both Fusion settings and managed properties in URT 1.0? -> HariKris (Fusion), StefanPh (WFC) Is there a single settings file per application? How does the settings file get created? Managed Properties Need to engage with Cdias/ StefanPh. WFC Managed Properties (  HYPERLINK "http://vs/documents/cdias/managedproperties.doc"  http://vs/documents/cdias/managedproperties.doc ) are a mechanism to store arbitrary configuration state for COM+ Classes.  Server WFC uses managed properties to store configuration for system elements like Queue Components. Should these be stored in the same XML file as the configuration file? Same as settings file? Do these participate in (persistent) caching of attributes? How do these related to Fusion settings? What is the admin UI for managed properties? Should the system configuration aspects of managed properties be changed to use the URT admin framework? Others? Others DataLink admin? -> LaraD/PatD XML Parser? Net Classes? Can we assume that COM+ 1.0 Admin will be used? IMDB? Can we assume that COM+ 1.0 Admin will be used? Related Specs This document does not define the URT application model, although the scenarios, attributes and other concepts described in this document are closely related to the URT application model. Refer to ? -> MaryKir This document does not describe the Project42 configuration APIs. Refer to the Project 42 Configuration API Requirements spec for more details (location tbd). This document does not describe the Project42 catalog infrastructure. For details refer to the implementation specs on   HYPERLINK "http://appsrv/asconfig"  http://appsrv/asconfig , specifically   HYPERLINK "http://appsrv/ASConfig/specs/urt1/simpletablesV2.doc"  http://appsrv/ASConfig/specs/urt1/simpletablesV2.doc Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History May 17, 1999 Rev 0.1 (MarkusH): Created. May 19, 1999 Rev 0.2 (MarkusH): Added Attribute vs. Container vs. Entity matrix. Added more potential consumers. Added more details to container/entity/attribute terminology. May 24, 1999 Rev 0.3 (MarkusH): Added preliminary info about URT Security. May 27, 1999 Rev 0.4 (MarkusH): Added preliminary Ducttape attributes, including initial attribute set for M4 drop. Added Ducttape entities (app pool, virtual site, page). Added M4 scenario for Ducttape. Clarified COM+ 1.0 attributes used as examples. June 3, 1999 Rev 0.5 (MarkusH): Added preliminary XSP attributes. Added Site Config container. June 8, 1999 Rev 0.6 (MarkusH): Added preliminary notes on Ducttape/XSP site configuration. Incorporated feedback from XSP: clarified that HTML templates are optional; clarified that config manifest does not have to be signed; clarified that an assembly does not need to be  registered  in app config/definition in order to work; added ISV Licensing attributes.  July 13, 1999 Rev 0.7 (MarkusH): Added issue around in-use and actual config getting out of sync. Added info on context and channel config. Added info on messaging config. Updated XSP/Ducttape scenarios/issues. Fleshed out the introduction/framework/catalog sections. Added section about naming service. July 16, 1999 Rev 0.7a (MarkusH): Clarified that messaging is a top-level feature, not thought of as part of WebObjects. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\appcenter\wmi\the application center wmi provider.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation The Application Center WMI Provider TitleThe Application Center WMI Provider Murat Ersan Normal AS Test Organization Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags PlaceName urn:schemas-microsoft-com:office:smarttags placeewp/Rf n3B,3 M7[8(u{D XTTXNe Qj:f:[Microsoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6Pages Page-1 _VPID_ALTERNATENAMES _VPID_PREVIEWS _PID_LINKBASEmurateVisio (TM) Drawing rial@ ingdz otype So Symbol 7AOY@; 6Pu`k tKf*2| iW?i?{4 $YkU1 $q$qZ JrKq@obd 2oaoa /'/9/K/]/o/ aB?T?f?x? .e_OqO #_5_G_ Y_k_}_ AoSoeowo QN3L/^/p/ WOiO{O o&o8oJo d-prn-12 \CORP006 ?Letter /*/</N/`/r/ &?8?J4 winspo \\red -prn-12\ CORP0066 NPI6325?32:RAW ?550J3 292KU A+7G0 _H7 _2_ plicatio n Center  WMI Pro vider Q?c?u? 8OJO\OnO )FkConfig urZcSyste m (IST L ayer)soU FlSAI Iba ceptoro r Servic )_;_M___. P?b?t? min.exe O O2O -eRu- 2['&? \&d70=k'n?80  /%/7/I/  yq`)Ufu/CF Uf]w)} O"O4OFO OjO|OJ Guide TheDoc Page-1 ure Form Visio 90 Connector Visio 00 Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80 Basic Basic ShadowMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6Pages Masters Page-1 Dynamic connector Inheritance Generalization Arrow Master.4 Inheritance.5 Master.6 Master.7 _VPID_ALTERNATENAMES _VPID_PREVIEWS _PID_LINKBASEsuzanacVisio (TM) Drawing Hz)Ik Arial Wingdz notype SWort Symbol pG/Y&4 2AJY;; GTfYi tFf-| =OOOaOsO@ iR?d? /%&k/ N!T0;U P?b?t?y q _2_D_ D-PRN-12 \CORP006 LettCer </N/`/r/ ?&?8?J4 winspo \\RED -PRN-12\ CORP0066 NPI6325?32:RAW onnector This c onnector  automat ically r outes be tween th e shap Vis_SE.c hm!#20)@ `7Cop yright 1 Corporat ion.  Al l ;Bs res erved. ?.g;2 L|z), ~z)1f UML Bac kground  Add-on /CMD=10 #K2&F7 neraliza tion Arr/ow {aT!T!UK D112.chm !#31521 `7Cop yright 1 Corpor   All   reserve (NA9% 6@T!S 22F4C22B -64D5-4B C1-8B17- 32AA040D D928} Indicate s a clas Rship be tweenJ moore g specR  e?lement hapes,s Uml,M uk{ap Vie&ws.. aDList  the dia grams co ntaining  views inary AsOsoci 9%aKc ug=!; Displa y Se&man5t &y Op` r edit Propert&sie `9Copy right  1998 Vis io Corpo ration.   All  reserved-.f Backgrou nd Add-o =1001 zAa%? eralizat ion Arro Vis_D 112.chm! #31521 `7Copy right 19 `io C orpor  All  reservedO. *`d6, "-B(vAa% RaRaSR !~RG!G!hb7 2F4C22B- 64D5-4BC 1-8B17-3 2AA040DD?928} ndicates  a classsift ship bet weenz mor7e g ement cesh_apes, Vi?e&ws.. aDList t he diagr ams cont aining   views o is Bin ary Asso gi1,+ Display  Se&mant E `rs]# /0/B/ #&y Op r edit Propert&sie Backgrou nd Add-o =1001 zAa%? eralizat ion Arro Vis_D 112.chm! #31521 `7Copy right 19 `io C orpor  All  reservedO. *`d6, "-B(vAa% RaRaSR !~RG!G!hb7 2F4C22B- 64D5-4BC 1-8B17-3 2AA040DD?928} ndicates  a classsift ship bet weenz mor7e g ement cesh_apes, Vi?e&ws.. aDList t he diagr ams cont aining   views o is Bin ary Asso gi1,+ Display  Se&mant E `rs]# /0/B/ #&y Op r edit Propert&sie 4C~Fg  Backgro und Add- D=1001 neraliza tion Arr/ow a~1~1gK D112.chm !#31521 `7Cop yright 1 Corpor   All   reserve ,Nak)@ $60#2  -@(`A_% 65 &2S <a<a=R hRE!E!Rb7 2F4C22B- 64D5-4BC 1-8B17-3 2AA040DD?928} Indicate s a clas bship be tween moore g  e?lement hapes,6 Vie&ws.. aDList  the dia grams co ntaining  views inary AsOsoci Displ ay Se&makntT 9#&y Op# r edit@ dB:$od4h Propert&sieP  pc!"_ 9/K#.j z)E8w z)w*9 7z)Yo 4C~Fg  Backgro und Add- D=1001 neraliza tion Arr/ow a~1~1gK D112.chm !#31521 `7Cop yright 1 Corpor   All   reserve  -@(`A_% 56 &2S <a<a=R hRE!E! `&{22 F4C22B-6 4D5-4BC1 -8B17-32 AA040DD9 ndicates  a classsif ship bet mor7e g ement cesh_apes, Vie&ws.. aDList  the dia grams co ntaining  views inary AsOsoci Displ ay Se&maknt &y Op r edit Propert&sie 0B?T? #"#0z {+)A7 W{)4; z)RDP xz)NU .u(sU X4D1c7D1T801 c705X4 `:,1T8 Conne D1D1a _$_c1 a*%7f;/BRb CAcMeth odHelperC TYOkO ?_Q_c_u_  UE?oQi foxoz rovid3  `zpI /'F4/ F/X/j/|/ O.O@OROdOvO CMeth odHelper oIJ$o6o lusterSv?csUtil <ONO`OrB '_9_K_]_o_ M}ientD eployj IsufS /&/8/ {+)z7 :\suzana c\wmi\Wm iProvide rMethodI mplement ation.vs Guide TheDoc Page-1 ure Form Connector mic conn?ector Inheritance ralizati?on.15 UMLShapeType bjectGUI UMLError BeginAngle resOptio UMLVersion escripti visKeywords visVersion riminato ralizati on Arrow ritance. ritance. DqWz) ;{)PV _z)5CY The Application Center WMI Provider Overview: The Application Center WMI provider implementation will be based on the .NET WMI provider implementation. This provider interacts with the Config System to retrieve and persist data from the data source. The main pieces of the implementation will be the provider, the Config System, and the interceptors (mainly the ASAI Interceptor).  EMBED Visio.Drawing.6   The WMI provider: The AC WMI provider is an instance and method provider.  Following are the methods that the provider needs to implement. All of these methods exist on two interfaces: IWbemProviderInit, IWbemServices. IWbemProviderInit::Initialize: Any type of WMI provider needs to implement this method. This method will be used to perform the provider-wide initializations. The AC WMI  provider will store the namespace pointers during this time. Since the current plan is to have two namespaces this method will be called twice. The provider would need to keep track of both namespaces. IWbemServices::GetObjectAsync:  This method is used to retrieve an instance based on it path. When a client requests an object using the following statement: Set MemberObj = GetObject( winmgmts:root/ MicrosoftApplicationCenter/Cluster/ClusterMember.Guid= MuratE22GUID WMI will call into the ApplicationCenter provider s GetObjectAsync method. To serve the instance back to WMI, the provider will need to get this object from the config system. This corresponds to getting a row from a table, more specifically, getting the row from the ClusterMember table where the Guid column (the primary key of the table) has the value  MuratE22GUID The code will look something like: pISTDisp->GetTable(..,  ClusterMemberTable, .., &pISTClusterMember); pISTClusterMember->GetRowIndexByIdentity(pvPrimaryKey, &dwRow); pISTClusterMember->GetColumnValues(dwRow, &pvValues); or a query on the GetTable call can be used, if the underlying interceptor has query support. Once the property values are retrieved, they are converted to a form that WMI can understands. This is done via creating a WMI object and setting its properties using VARIANTs. It is the Config System s responsibility to figure out that the ClusterMember table is a table served by the ASAI interceptor. The provider code has no knowledge that the data is coming from ASAI. One could easily change the underlying wiring schema and the data could be read from an XML file. IWbemServices::PutInstanceAsync:  A client uses this method to create a new instance or update the properties of an existing instance. The following client code will create a new instance: Set AppClass = GetObject( winmgmts:root/MsftApplicationCenter/Cluster/Application Set NewApp = AppClass.SpawnInstance_() NewApp.GUID = <Some Guid> NewApp.Name =  MyApp NewApp.Put_(); The following will update an existing instance: Set ExistingApp = GetObject( winmgmts:root/MsftApplicationCenter/Cluster/Application.Guid= <someGuid ExistingApp.Name =  MyAppWithNewName ExistingApp.Put_(); In either case WMI will call into the PutInstanceAsync method of the provider. The provider will need to get the corresponding Config table, either add a new row or get the existing row that corresponds to this instance and set the properties of this row.  IWbemServices::DeleteInstanceAsync:  This method is called when a client deletes an instance. The provider would need to  get the Config table that corresponds to the WMI class of the instance being deleted.  Delete the instance from the table. IWbemServices::CreateInstanceEnumAsync:  This method is called when a clients wants to get all the instances of a class. To handle this request the provider would need to: Get the Config table that corresponds to the WMI class Get all the instances of this table. Provide them to WMI. IWbemServices::ExecQueryAsync:  This method is called when the client tries to get a collection of instances given a query. The provider will Decide whether the query can be handled by the config system, if not let WMI do the query filtering. Provide the query to the Config system while getting the corresponding table. Get all the instances of this table. (all instances should satisfy the query) Provide them to WMI. IWbemServices::ExecMethodAsync:  This method is called when the client wants to execute a method defined in one of the AC WMI classes. This method is the one that has the least interaction with the Config System as it is not "method-aware". Some parts of the method execution can still be done in a schema driven manner: - Given the class and method name, finding the correct method to execute; - Converting input parameters to a form that the implementation would accept and   doing some minor validations, and - Generating method definitions to the mof file automatically  This requires us to have schema for method and parameters. Initially we will have these as arrays of structures which we will translate into the Config schema. The schema for method and parameters will look like this: Method Class Method Method Locator Description Parameter Class Method Name  Type(in/out) Index Flags (optional) The Application Center and .Net WMI providers will share a common base class that can make use of the schema. Also, any sort of generic parameter validation and conversion will be pushed to the base class. Each provider will have subclasses that have the actual implementations of the methods. The Application Center subclass will make calls to wrapper classes, that  encapsulate calls to cluster services and ASAI. These wrapper classes are independent from the provider and can also be called by other clients, like a wizard or command-line tool.  The following diagram shows the interaction between the classes mentioned:  EMBED Visio.Drawing.6   Class CMethodHelper   Abstract base class that has the purpose of implementing the generic tasks of a method provider like figuring out which implemented function knows how to handle a method execution request received by the provider.   This class knows how to perform these generic tasks but it doesn t store any information that is specific to a single provider. It gets the information from the schema described above, but the information in the schema will be populated in derived classes.  Will be used by the .NET and AC wmi provider. Class CacMethodHelper - This class derives from CMethodHelper. It will implement the actual methods of the AC provider, making calls to wrapper classes that do the   work. It will also populate member variables (the array of structures previously mentioned) with the AC provider method schema so that the generic functions in the base class can call the corresponding method when the provider receives a request to execute a method. Class CacClusterSvcsUtil   This utility class will be used to encapsulate the calls to cluster services when executing tasks like creating a cluster, adding members, etc. Class CAcClientDeploy   This class is used by the AC deployment wizard and command-line tool to create and manage deployments. It will be also used in the provider, but some changes may be needed (depending on the changes, we may implement the new functionalities in a derived class). Depending on the amount of work needed before calling the wrapper classes, it can be helpful to have another layer between CAcMethodHelper and the wrapper classes. The need for these classes is still under investigation. The Asai Interceptor: An interceptor is a component that the Config system uses to retrieve data from different data stores. The config system creates an abstraction layer over all the interceptors so that a consumer only uses a single mechanism to manipulate the data, i.e., the IST interfaces (the main Config system interfaces) An interceptor can be implemented using the interceptor plug-in features, i.e., by creating a component that implements the  An interceptor plug-in needs to implement three main methods. 1. Intercept: Main goal: Given the table name figure out how to get the data from and to ASAI. Given a table name, figure out where in the ASAI hierarchy you can find the data for this table. The interceptor would need to know the namespace as well. The table contents might be different depending on the namespace the table is requested from. E.g. the contents of the Application table in the Cluster namespace will be different than the contents of the same table in the Local namespace. The first would contain the Applications that the cluster contains, the second would contain the Applications on the member. The caller can specify the WMI namespace as part of the query. E.g. if one wants to enumerate all the Applications on the local machine, he'd need to call: STQueryCell aLocalNamespaceQuery[] = { {L"Local",  eST_OP_EQUAL,  iST_CELL_LOCATION,  DBTYPE_WSTR,  ULONG cQueryCells = sizeof(aLocalNamespaceQuery) / sizeof(aLocalNamespaceQuery[0]) pIDispenser->GetTable(L"ApplicationCenter", L"MicrosoftAC_Applications, aLocalNamespaceQuery, cQueryCells,  , &pILocalApps); The ASAI interceptor can use an ASAI wiring table to figure out the ASAI path to retrieve the data from. The wiring table could tell where to get the information from given a tablename and a namespace. TableName Namespace ASAI Path ASAI class AC_DeploymentJob eCluster \Cluster\Deployments Depolyment AC_DeploymentJob eLocal \ServerObj\Deployments Deployment The schema also needs to store the mapping from Config column names to ASAI property names, similar to the metabase schema that maps names to metabase ids. Currently the WMI property names match exactly to Config schema names which will be stored in the InternalName of COLUM_META and the ASAI names will be stored in the PublicName column.(which according to Stephen is why PublicName was invented for) This method may cache the schema for further access in PopulateCache and UpdateStore.  2. OnPopulateCache: Main goal: Fill in the cache for this table from ASAI. Since the Intercept method has figured out which path to read the data from, this method simply gets the ASAI collection and iterates through all the objects in the collection and fills in the cache (buffer). The calls to GetCollection should be encapsulated such that when we need to provide queries to ASAI we can do  CoCreateInstance(CLSID_ASAI, &pIASAI); pIASAI->GetCollection(<ASAI path>, &pICol); pICol->get_Count(&cObjects); pICol->NextEx(cObjects, varPropNames <property names we care about for this table>, saValues); pICol->get_Item(I, &pIObj); for each Object in the collection if the class of Object != <ASAI class> continue; for each property of this object (needs to be stored while intercepting) get the property value. we can also verify that the property type is what we expect and even do a type conversion. set the value in the config cache. 3. OnUpdateStore: Main goal: Persist entries in the cache to ASAI. CoCreateInstance(CLSID_ASAI, &pIASAI); pIASAI->GetCollection(<ASAI path>, &pICol); For each object in the write cache: if object is added pICol->Add(<name of object>, &pIObj); for each property of this table (needs to be stored while intercepting) get the property from the cache  get the ASAI property name pIObj->put_values(<ASAI prop name array><corresponding value array>); pIObj->Save() else if object is updated get the object guid from the cache. pICol->Seek(object_guid, &pIObj) for each property of this table (needs to be stored while intercepting) if the property value changed (which will always be the case since WMI doesn't provide details) get the property from the cache  get the ASAI property name pIObj->put_values(<ASAI prop name array><corresponding value array>); pIObj->Save() else if object is deleted get the object guid from the cache. pICol->Remove(ObjGuid); From Config to ASAI (The Wiring) For the Config system to get their data from the ASAI hierarchy there needs to be  wiring  information that the interceptor can make use of. Following are the classes that will make use of the ASAI interceptor. For each class there will be two sections, one for each namespace. Each section will tell how the data will be read and written to ASAI. MicrosoftAC_Cluster: Cluster namespace:  ASAI collection: \Objects ASAI class: Cluster Local namespace: Not available. MicrosoftAC_ClusterMember: Cluster namespace:  ASAI collection: \Objects=Cluster\Cluster ASAI class: no filter necessary Local namespace: Not all properties will be available, only the ones exposed by the ASAI Server object. ASAI path: \Objects ASAI class: Server MicrosoftAC_DeploymentJobs: Cluster namespace:  ASAI path: \Objects\Deployments ASAI class: no filter necessary Local namespace: ASAI collection: \Objects=Server\Deployments ASAI class: no filter necessary MicrosoftAC_Applications: Cluster namespace:  ASAI path: \Objects\Applications Local namespace: ASAI collection: \Objects=Server\Applications ASAI class: no filter necessary. MicrosoftAC_Resource: Cluster namespace:  ASAI path: \Objects\Applications\Resources Local namespace: ASAI path: \Objects=Server\Applications\Resources Issues: ASAI doesn't have much of a transaction concept. Only multiple changes to the same ASAI object can be transacted using the Save method. However transactions within multiple objects or a collection is not supported. Issues: How else can I refer to the Config System. {lYFYFYFYF{l{l gdlvO l{l{eTF gd:F+ {wld{U gd4aR }k}k}g`Q ymy]QEm] gd0Rx ~ocTPLT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\appcenter\wmi\common\acprov\changes.txt ===
Common		    	     AC
^^^^^^^^^^^^^^^^^^^^^	^^^^^^^^^^^^^^^^^^^^
maindll.cpp		localconstants.h
			providerguids.h
classfactory.cpp
instanceprovider.cpp
impersonate.cpp


1 - rename netframeworkprov.h to providerguids.h
2 - change the guid name from CLSID_CNetProviderFactory to CLSID_CProvider
3 - dropped the NET_ from the localconstants.h
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\core\catinproc\catwire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:catalog.xms">
	<TRANSFORMER_META>
		<TransformerWiring TF_Protocol="file" TF_Type="FileTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="iis" TF_Type="WebHierarchyTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="shell" TF_Type="ShellTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="config" TF_Type="ConfigTransformer" DllName="Catalog.dll"/>
	</TRANSFORMER_META>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\core\catinproc_iiscfg\iiswire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:IISCfg.xms">
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\core\catinproc_appcenter\appcenterwire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:AppCenterCfg.xms">
	<ASAI_META>
		<AsaiWiring CollectionName="MicrosoftAC_Cluster"							Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterCoreSettings"				Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterCLBSettings"					Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterSynchronizationSettings"		Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMonitoringSettings"			Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterLoggingSettings"				Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterRequestForwardingSettings"	Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterNLBSettings"					Namespace="Cluster"		AsaiPath="Objects"	AsaiClass="Cluster"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMember"						Namespace="Cluster"		AsaiPath="Objects=Cluster\Cluster"	AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMember"						Namespace="Local"		AsaiPath="%s"		AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberPersistentSettings"	Namespace="Cluster"		AsaiPath="Cluster"	AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberPersistentSettings"	Namespace="Local"		AsaiPath="%s"		AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberNLBSettings" 			Namespace="Cluster"		AsaiPath="Cluster"	AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberNLBSettings"			Namespace="Local"		AsaiPath="%s"		AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberACTReplayFilterSettings" Namespace="Cluster"	AsaiPath="Cluster"	AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_ClusterMemberACTReplayFilterSettings" Namespace="Local"		AsaiPath="%s"		AsaiClass="Member"/>

		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJob"                      Namespace="Cluster"	    AsaiPath="Deployments"	    AsaiClass="Deployment"/>
		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJob"                      Namespace="Local"		AsaiPath="Cluster\%s\Deployments"	AsaiClass="Deployment"/>
		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJobSettings"              Namespace="Cluster"	    AsaiPath="Cluster\Deployments"	    AsaiClass="Deployment"/>
		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJobSettings"              Namespace="Local"		AsaiPath="Cluster\%s\Deployments"	AsaiClass="Deployment"/>

		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJobTarget"                Namespace="Cluster"	    AsaiPath="Cluster\Deployments\*\Target"	    AsaiClass="Target"/>
		<AsaiWiring CollectionName="MicrosoftAC_DeploymentJobTarget"                Namespace="Local"		AsaiPath="Cluster\%s\Deployments\*\Target"	AsaiClass="Target"/>

		<AsaiWiring CollectionName="MicrosoftAC_Application"                        Namespace="Cluster"	    AsaiPath="Objects\Applications"	    AsaiClass="Application"/>
		<AsaiWiring CollectionName="MicrosoftAC_Application"                        Namespace="Local"		AsaiPath="Objects=Server\Applications"	AsaiClass="Application"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_FileSystem"     Namespace="Cluster"	    AsaiPath="Objects\Applications\*\Resources"	    AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_FileSystem"     Namespace="Local"		AsaiPath="Cluster\%s\Applications\*\Resources"	AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_Registry"       Namespace="Cluster"	    AsaiPath="Objects\Applications\*\Resources"	    AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_Registry"       Namespace="Local"		AsaiPath="Cluster\%s\Applications\*\Resources"	AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_DataSourceName" Namespace="Cluster"	    AsaiPath="Objects\Applications\*\Resources"	    AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_DataSourceName" Namespace="Local"		AsaiPath="Cluster\%s\Applications\*\Resources"	AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_COMPlusApplication" Namespace="Cluster"	AsaiPath="Objects\Applications\*\Resources"	    AsaiClass="Resource"/>
		<AsaiWiring CollectionName="MicrosoftAC_ApplicationResource_COMPlusApplication" Namespace="Local"	AsaiPath="Cluster\%s\Applications\*\Resources"	AsaiClass="Resource"/>

		<AsaiWiring CollectionName="MicrosoftAC_RequestForwardingTarget"            Namespace="Cluster"	    AsaiPath="Cluster"	AsaiClass="Member"/>
		<AsaiWiring CollectionName="MicrosoftAC_RequestForwardingTarget"            Namespace="Local"		AsaiPath="%s"		AsaiClass="Member"/>
	</ASAI_META>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\core\catinproc_testcfg\testdbwire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:cfgtest.xms">
    <AllTypesFXD_Nullable>
        <FXDRowNullable C_ID="1" C_Boolean="true" C_Bool="on" C_Enum="FirstEnum" C_Flag="One,Two" C_UI4="1" C_int32="2" C_BYTES="ab" C_String="first row" C_WSTR="FIRST ROW"/>
        <FXDRowNullable C_ID="2" />
    </AllTypesFXD_Nullable>

    <AllTypesFXD_PK>
        <FXDRowPK C_Boolean="true"   C_Enum="FirstEnum" C_Flag="One,Two" C_UI4="1" C_int32="2" C_BYTES="ab" C_String="first row" />
        <FXDRowPK C_Boolean="false"  C_Enum="FirstEnum" C_Flag="One,Two" C_UI4="1" C_int32="2" C_BYTES="ab" C_String="first row" />
    </AllTypesFXD_PK>

    <AllTypesFXD_Default>
        <FXDRowDefault C_ID="1" C_Boolean="false" C_Bool="false" C_Enum="FirstEnum"  C_Flag="One" C_UI4="1" C_int32="1" C_BYTES="ab" C_String="first row"  C_WSTR="first row"/>
        <FXDRowDefault C_ID="2" C_Boolean="true"  C_Bool="true" C_Enum="SecondEnum" C_Flag="Two" C_UI4="2" C_int32="2" C_BYTES="ab" C_String="second row" C_WSTR="second row"/>
    </AllTypesFXD_Default>

   <OneColumnFXD>
        <FXDRowOneColumn C_ID="1" />
        <FXDRowOneColumn C_ID="2" />
    </OneColumnFXD>

    <AllFlagsFXD>
        <FXDRowFlags C_Boolean="true" C_Bool="true" C_Enum="FirstEnum" C_Flag="One" C_StartNum="1" C_EndNum="10" C_RangeNum="5"
          C_LegalSet="bde" C_IllegalSet="fgh" C_PK="1" C_NotNull="xxx" C_MultiString="string1|string2" C_ExpandString="%windir%"/>
    </AllFlagsFXD>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\core\catinproc_urtcfg\urtwire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:netCfg.xms">
	<TRANSFORMER_META>
		<TransformerWiring TF_Protocol="file" TF_Type="FileTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="iis" TF_Type="WebHierarchyTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="shell" TF_Type="ShellTransformer" DllName="Catalog.dll"/>
		<TransformerWiring TF_Protocol="config" TF_Type="ConfigTransformer" DllName="Catalog.dll"/>
	</TRANSFORMER_META>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\inc\appcentermeta.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:CatMeta.xms">

    <DatabaseMeta           InternalName="ACFIXED">
        <ServerWiring       Interceptor="Core_FixedInterceptor"/>
        <Collection     InternalName="ASAI_META" PublicRowName="AsaiWiring"    MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="CollectionName"   Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="Namespace"        Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="AsaiPath"         Type="WSTR"/>
            <!--        (MohitS) ToDo Add AsaiRightPath for Associations -->
            <Property   InternalName="AsaiClass"        Type="WSTR"/>
        </Collection>
        <Collection     InternalName="CLUSTERSERVICES_META" PublicRowName="ClusterServicesWiring" MetaFlags="INTERNAL"    MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="CollectionName"   Type="WSTR" MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
        </Collection>
        <Collection     InternalName="MOFGEN_META"  PublicRowName="MofGenMeta"  MetaFlags="INTERNAL"    MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="CollectionName"   Type="WSTR" MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="BaseClass"        Type="WSTR"/>
        </Collection>
    </DatabaseMeta>

    <DatabaseMeta           InternalName="AppCenter">
        <ServerWiring   Interceptor ="AppCenter_ASAIInterceptor"/>
        <Collection         InternalName="MicrosoftAC_Cluster">
            <Property       InternalName="GUID"                 Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ControllerName"       Type="WSTR"/>
            <Property       InternalName="Name"                 Type="WSTR"/>
            <Property       InternalName="Caption"              Type="WSTR"/>
            <Property       InternalName="Description"          Type="WSTR"/>
            <Property       InternalName="ClusterState"         Type="UI4">
                <Enum       InternalName="Unknown"              Value="1"/>
                <Enum       InternalName="Other"                Value="2"/>
                <Enum       InternalName="Online"               Value="3"/>
                <Enum       InternalName="Offline"              Value="4"/>
                <Enum       InternalName="Degraded"             Value="5"/>
                <Enum       InternalName="Unavailable"          Value="6"/>
            </Property>
            <Property       InternalName="Interconnect"         Type="WSTR"/>
            <Property       InternalName="InterconnectAddress"  Type="WSTR"/>
            <Property       InternalName="MaxNumberOfNodes"     Type="UI4"/>
            <Property       InternalName="TypeFlags"            Type="UI4">
                <Flag       InternalName="ClusterGroup"                 Value=" 1"/>
                <Flag       InternalName="WebCluster"                   Value=" 2"/>
                <Flag       InternalName="COMPlusApplicationCluster"    Value=" 4"/>
                <Flag       InternalName="COMPlusRoutingCluster"        Value=" 8"/>
                <Flag       InternalName="StagingCluster"               Value="16"/>
                <Flag       InternalName="MonitoringCluster"            Value="32"/>
            </Property>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterCoreSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ReliableNameResolutionEnabled"    Type="BOOL"/>
            <Property       InternalName="TimeSynchronizationEnabled"       Type="BOOL"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterCLBSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterSynchronizationSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="AutoSynchronizationInterval"      Type="DBTIMESTAMP"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterMonitoringSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterLoggingSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="PerformanceLoggingEnabled"        Type="BOOL"/>
            <Property       InternalName="EventLogCleanupInterval"          Type="DBTIMESTAMP"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterRequestForwardingSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="RFFilterInstalled"                Type="BOOL"/>
            <Property       InternalName="RequestForwardingEnabled"         Type="BOOL"/>
            <Property       InternalName="SessionCoherency"                 Type="UI4">
                <Enum       InternalName="Disabled"         Value="1"/>
                <Enum       InternalName="Enabled"          Value="2"/>
                <Enum       InternalName="AspSitesOnly"     Value="3"/>
            </Property>
            <Property       InternalName="FrontPageForwardingEnabled"       Type="BOOL"/>
            <Property       InternalName="DAVForwardingEnabled"             Type="BOOL"/>
            <Property       InternalName="HTLMAdminForwardingEnabled"       Type="BOOL"/>
            <Property       InternalName="EventLogCleanupInterval"          Type="DBTIMESTAMP"/>
            <Property       InternalName="Interconnect"                     Type="WSTR"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterNLBSettings">
            <Property       InternalName="GUID"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ClusterIPs"                       Type="MULTISZ"/>
            <Property       InternalName="ClusterIPsSubnetMasks"            Type="MULTISZ"/>
            <Property       InternalName="Affinity"                         Type="UI4">
                <Enum       InternalName="None"             Value="1"/>
                <Enum       InternalName="Single"           Value="2"/>
                <Enum       InternalName="Class_C"          Value="3"/>
            </Property>
            <Property       InternalName="UnicastMode"                      Type="BOOL"/>
       </Collection>
       <Collection          InternalName="MicrosoftAC_ClusterMember">
            <Property       PublicName="GUID"                       InternalName="ObjectID"       Type="WSTR"   MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       PublicName="Name"                       InternalName="DisplayName"    Type="WSTR"/>
            <Property       PublicName="ClusterName"                InternalName="ProductVersion" Type="WSTR"/>
            <Property       InternalName="IsController"                                         Type="BOOL"/>
            <Property       PublicName="ReachableFromController"    InternalName="Alive"          Type="UI4">
                <Enum       InternalName="ReachableFromControllerUnknown" Value="1"/>
                <Enum       InternalName="Reachable"            Value="2"/>
                <Enum       InternalName="Unreachable"          Value="3"/>
            </Property>
            <Property       PublicName="SynchronizationState"       InternalName="Replicating"    Type="UI4">
                <Enum       InternalName="SynchronizationStateError"    Value="1"/>
                <Enum       InternalName="SynchronizationStateUnknown"  Value="2"/>
                <Enum       InternalName="SynchronizationStateDisabled" Value="3"/>
                <Enum       InternalName="Idle"                         Value="4"/>
                <Enum       InternalName="Synchronizing"                Value="5"/>
            </Property>
            <Property       PublicName="OnlineStatus"               InternalName="Online"         Type="UI4">
                <Enum       InternalName="OnlineStatusError"    Value="1"/>
                <Enum       InternalName="OnlineStatusUnknown"  Value="2"/>
                <Enum       InternalName="OnlineStatusDisabled" Value="3"/>
                <Enum       InternalName="Online"               Value="4"/>
                <Enum       InternalName="Offline"              Value="5"/>
                <Enum       InternalName="Draining"             Value="6"/>
                <Enum       InternalName="Suspended"            Value="7"/>
            </Property>
            <Property       PublicName="HealthStatus"               InternalName="MonitorStatus"  Type="UI4">
                <Enum       InternalName="Good"                 Value="1"/>
                <Enum       InternalName="Reset"                Value="2"/>
                <Enum       InternalName="Info"                 Value="3"/>
                <Enum       InternalName="HealthStatusDisabled" Value="4"/>
                <Enum       InternalName="ScheduledOut"         Value="5"/>
                <Enum       InternalName="HealthStatusUnknown"  Value="6"/>
                <Enum       InternalName="NoData"               Value="7"/>
                <Enum       InternalName="Warning"              Value="8"/>
                <Enum       InternalName="Critical"             Value="9"/>
            </Property>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterMemberPersistentSettings">
            <Property       InternalName="ClusterMemberGUID"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Roles"                                Type="MULTISZ"/>
            <Property       InternalName="ManagementNICIDs"                     Type="MULTISZ"/>
            <Property       InternalName="LoadBalancingNICIDs"                  Type="MULTISZ"/>
            <Property       InternalName="AutoSynchronizationEnabled"           Type="BOOL"/>
            <Property       InternalName="EnableLoadBalancingOnStartup"         Type="BOOL"/>
            <Property       InternalName="CheckHealthStatusBeforeComingOnline"  Type="BOOL"/>
       </Collection>
       <Collection         InternalName="MicrosoftAC_ClusterMemberNLBSettings">
            <Property       InternalName="ClusterMemberGUID"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="DedicatedIP"                          Type="WSTR"/>
            <Property       InternalName="DedicatedIPSubnetMask"                Type="WSTR"/>
            <Property       InternalName="Weight"                               Type="UI4"/>
        </Collection>
        <Collection         InternalName="MicrosoftAC_ClusterMemberACTReplayFilterSettings">
            <Property       InternalName="ClusterMemberGUID"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Enabled"                              Type="BOOL"/>
       </Collection>
       <Collection          InternalName="MicrosoftAC_CLBTarget">
            <Property       InternalName="Name"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Caption"                          Type="WSTR"/>
       </Collection>
       <Collection          InternalName="MicrosoftAC_RequestForwardingTarget">
            <Property       InternalName="ServerGUID"                       Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="IPAddress"                        Type="WSTR"/>
            <Property       InternalName="Name"                             Type="WSTR"/>
            <Property       InternalName="Caption"                          Type="WSTR"/>
       </Collection>
       <Collection         InternalName="MicrosoftAC_DeploymentJob">
            <Property       InternalName="GUID"                                 Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Name"                                 Type="WSTR"/>
            <Property       InternalName="Caption"                              Type="WSTR"/>
            <Property       InternalName="Description"                          Type="WSTR"/>
            <Property       InternalName="Owner"                                Type="WSTR"/>
            <Property       InternalName="JobStatus"                            Type="WSTR"/>
            <Property       InternalName="StartTime"                            Type="DBTIMESTAMP"/>
            <Property       InternalName="ElapsedTime"                          Type="DBTIMESTAMP"/>
            <Property       InternalName="StopTime"                             Type="DBTIMESTAMP"/>
            <Property       InternalName="LastDeployed"                         Type="DBTIMESTAMP"/>
            <Property       InternalName="TotalItemCount"                       Type="UI4"/>
            <Property       InternalName="TotalItemSize"                        Type="UI4"/>
            <Property       InternalName="TotalWarnings"                        Type="UI4"/>
            <Property       InternalName="TotalErrors"                          Type="UI4"/>
            <Property       InternalName="InternalJobID"                        Type="WSTR"/>
            <Property       InternalName="DeploymentJobState"                   Type="UI4">
                <Enum       InternalName="Error"                Value="1"/>
                <Enum       InternalName="Unknown"              Value="2"/>
                <Enum       InternalName="Scanning"             Value="3"/>
                <Enum       InternalName="Transferring"         Value="4"/>
                <Enum       InternalName="Committing"           Value="5"/>
            </Property>
        </Collection>
       <Collection         InternalName="MicrosoftAC_DeploymentJobSettings">
            <Property       InternalName="DeploymentJobGUID"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Caption"                              Type="WSTR"/>
            <Property       InternalName="ReplicateACLs"                        Type="BOOL"/>
            <Property       InternalName="ReplicateIPSiteBindings"              Type="BOOL"/>
            <Property       InternalName="DeployAllApplications"                Type="BOOL"/>
            <Property       InternalName="DeployComPlusApplications"            Type="BOOL"/>
            <Property       InternalName="ShutDownIIS"                          Type="BOOL"/>
            <Property       InternalName="Persist"                              Type="BOOL"/>
            <Property       InternalName="IsFullSync"                           Type="BOOL"/>
        </Collection>
       <Collection          InternalName="MicrosoftAC_DeploymentJobTarget">
            <Property       InternalName="Name"                             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Caption"                          Type="WSTR"/>
       </Collection>
       <Collection         InternalName="MicrosoftAC_Application">
            <Property       InternalName="GUID"                                 Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="Name"                                 Type="WSTR"/>
            <Property       InternalName="Caption"                              Type="WSTR"/>
            <Property       InternalName="Description"                          Type="WSTR"/>
        </Collection>
       <Collection         InternalName="MicrosoftAC_ApplicationResource_FileSystem">
            <Property       InternalName="ResourcePath"                         Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ResourceFriendlyPath"                 Type="WSTR"/>
        </Collection>
       <Collection         InternalName="MicrosoftAC_ApplicationResource_Registry">
            <Property       InternalName="ResourcePath"                         Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ResourceFriendlyPath"                 Type="WSTR"/>
        </Collection>
       <Collection         InternalName="MicrosoftAC_ApplicationResource_DataSourceName">
            <Property       InternalName="ResourcePath"                         Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ResourceFriendlyPath"                 Type="WSTR"/>
        </Collection>
       <Collection         InternalName="MicrosoftAC_ApplicationResource_COMPlusApplication">
            <Property       InternalName="ResourcePath"                         Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ResourceFriendlyPath"                 Type="WSTR"/>
        </Collection>
       <Collection         InternalName="MicrosoftAC_ApplicationResource_IIS">
            <Property       InternalName="ResourcePath"                         Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="ResourceFriendlyPath"                 Type="WSTR"/>
        </Collection>

    </DatabaseMeta>
</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\inc\catmeta_core.xml ===
<?xml version ="1.0"?>
<MetaData   xmlns="x-schema:CatMeta.xms">


    <DatabaseMeta           InternalName="META">                    
        <ServerWiring       Interceptor="Core_FixedPackedInterceptor"/>
        <Collection         InternalName="COLUMNMETA"   PublicName="Property"   MetaFlags="INTERNAL NOLISTENING">
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="Index"                    Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Type"                     Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Enum       InternalName="Boolean"                  Value="19"      />
                <Enum       InternalName="Bool"                     Value="19"      />
                <Enum       InternalName="StrictBool"               Value="19"      />
                <Enum       InternalName="Enum"                     Value="19"      />
                <Enum       InternalName="Flag"                     Value="19"      />
                <Enum       InternalName="int32"                    Value="19"      />
                <Enum       InternalName="ByteBracketBracket"       Value="128"     PublicName="Byte[]"/>
                <Enum       InternalName="String"                   Value="130"     />
                <Enum       InternalName="UI4"                      Value="19"      />
                <Enum       InternalName="GUID"                     Value="72"      />
                <Enum       InternalName="BYTES"                    Value="128"     />
                <Enum       InternalName="WSTR"                     Value="130"     />
                <Enum       InternalName="DBTIMESTAMP"              Value="135"     />
                <Enum       InternalName="DWORD_METADATA"           Value="19"      PublicName="DWORD"                    />
                <Enum       InternalName="STRING_METADATA"          Value="130"     PublicName="STRING"                   />
                <Enum       InternalName="BINARY_METADATA"          Value="128"     PublicName="BINARY"                   />
                <Enum       InternalName="EXPANDSZ_METADATA"        Value="130"     PublicName="EXPANDSZ"                 />
                <Enum       InternalName="MULTISZ_METADATA"         Value="130"     PublicName="MULTISZ"                  />
                <Enum       InternalName="BOOL_BITMASK"             Value="19"      />
                <Enum       InternalName="MIMEMAP"                  Value="130"     />
                <Enum       InternalName="IPSECLIST"                Value="128"     />
                <Enum       InternalName="NTACL"                    Value="128"     />
                <Enum       InternalName="HTTPERRORS"               Value="130"     />
                <Enum       InternalName="HTTPHEADERS"              Value="130"     />
                <Enum       InternalName="XMLBLOB"                  Value="130"     />
            </Property>
            <Property       InternalName="Size"                     Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="PRIMARYKEY"               Value="        1"/>
                <Flag       InternalName="FOREIGNKEY"               Value="        2"/>
                <Flag       InternalName="NAMECOLUMN"               Value="        4"/>
                <Flag       InternalName="NAVCOLUMN"                Value="        8"/>
                <Flag       InternalName="DIRECTIVE"                Value="       16"/>
                <Flag       InternalName="BOOL"                     Value="       32"/>
                <Flag       InternalName="FLAG"                     Value="       64"/>
                <Flag       InternalName="ENUM"                     Value="      128"/>
                <Flag       InternalName="WRITENEVER"               Value="      256"/>
                <Flag       InternalName="WRITEONCHANGE"            Value="      512"/>
                <Flag       InternalName="WRITEONINSERT"            Value="     1024"/>
                <Flag       InternalName="NOTPUBLIC"                Value="     2048"/>
                <Flag       InternalName="NOTDOCD"                  Value="     4096"/>
                <Flag       InternalName="PUBLICREADONLY"           Value="     8192"/>
                <Flag       InternalName="PUBLICWRITEONLY"          Value="    16384"/>
                <!--Flag       InternalName="INSERTDEFAULT"            Value="    32768"/-->
                <Flag       InternalName="INSERTGENERATE"           Value="    65536"/>
                <Flag       InternalName="INSERTUNIQUE"             Value="   131072"/>
                <Flag       InternalName="INSERTPARENT"             Value="   262144"/>
                <Flag       InternalName="NOTNULLABLE"              Value="   524288"/>
                <Flag       InternalName="FIXEDLENGTH"              Value="  1048576"/>
                <Flag       InternalName="HASNUMERICRANGE"          Value="  2097152"/>
                <Flag       InternalName="LEGALCHARSET"             Value="  4194304"/>
                <Flag       InternalName="ILLEGALCHARSET"           Value="  8388608"/>
                <Flag       InternalName="NOTPERSISTABLE"           Value=" 16777216"/>
                <Flag       InternalName="MULTISTRING"              Value=" 33554432"/>
                <Flag       InternalName="EXPANDSTRING"             Value=" 67108864"/>
                <Flag       InternalName="UNKNOWNSIZE"              Value="134217728"/>
                <Flag       InternalName="VARIABLESIZE"             Value="268435456"/>
                <Flag       InternalName="CASEINSENSITIVE"          Value="536870912"/>
                <Flag       InternalName="TOLOWERCASE"              Value="1073741824"/>
            </Property>                                           
            <Property       InternalName="DefaultValue"             Type="BYTES"    />
            <Property       InternalName="FlagMask"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="StartingNumber"           Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="EndingNumber"             Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="-1"/>
            <Property       InternalName="CharacterSet"             Type="WSTR"     />
            <Property       InternalName="SchemaGeneratorFlags"     Type="UI4"      MetaFlags="NOTNULLABLE" PublicName="MetaFlagsEx">
                <Flag       InternalName="CACHE_PROPERTY_MODIFIED"  Value="         1"/>
                <Flag       InternalName="CACHE_PROPERTY_CLEARED"   Value="         2"/>
                <!-- EXTENDEDTYPE0,EXTENDEDTYPE1,EXTENDEDTYPE2 & EXTENDEDTYPE3 are used to describe IISSynID -->
                <!-- The Property's type is mapped to a SynID as follows:                                    -->
                <!-- DWORD         1                                                                         -->
                <!-- STRING        2                                                                         -->
                <!-- EXPANDSZ      3                                                                         -->
                <!-- MULTISZ       4                                                                         -->
                <!-- BINARY        5                                                                         -->
                <!-- BOOL          6                                                                         -->
                <!-- BOOL_BITMASK  7                                                                         -->
                <!-- MIMEMAP       8                                                                         -->
                <!-- IPSECLIST     9                                                                         -->
                <!-- NTACL        10                                                                         -->
                <!-- HTTPERRORS   11                                                                         -->
                <!-- HTTPHEADERS  12                                                                         -->
                <!-- So I've reserved 4 bits (which are inferred, they shouldn't be specified in ColumnMeta).-->
                <!-- To map from MetaFlagsEx to SynID:  SynID=(MetaFlagsEx>>2)&0x0F;  This macro is defined  -->
                <!-- in CatMeta.h: SynIDFromMetaFlagsEx(MetaFlagsEx) ((MetaFlagsEx>>2)&0x0F)                 -->
                <Flag       InternalName="EXTENDEDTYPE0"                          Value="         4"/>
                <Flag       InternalName="EXTENDEDTYPE1"                          Value="         8"/>
                <Flag       InternalName="EXTENDEDTYPE2"                          Value="        16"/>      
                <Flag       InternalName="EXTENDEDTYPE3"                          Value="        32"/>      
                <Flag       InternalName="PROPERTYISINHERITED"                    Value="        64"/>
                <Flag       InternalName="USEASPUBLICROWNAME"                     Value="       128"/>
                <!-- EXTENDED properties are shipped properties that have been       -->
                <!-- modified.  This flag is NOT mutually exclusive from USERDEFINED -->
                <!-- as it is in TableMeta (because MetaFlagsEx can be overridden)   -->
                <Flag       InternalName="EXTENDED"                               Value="       256"/>
                <!-- MANDATORY is an ADSI requirement and is NOT enforced by IST     -->
                <Flag       InternalName="MANDATORY"                              Value="       512"/>
                <!-- USERDEFINED properties are defined by the user                  -->
                <!-- this flag should never be set in the meta file, it is inferred. -->
                <Flag       InternalName="USERDEFINED"                            Value="      1024"/>
                <Flag       InternalName="WAS_NOTIFICATION"                       Value="      2048"/>
                <!-- XMLBLOB indicates that the column does not exist as an attribute, but rather as the     -->
                <!-- entire element and its contents.  XMLBLOB columns may NOT be primary keys.              -->
                <Flag       InternalName="XMLBLOB"                                Value="      4096"/>
                <Flag       InternalName="HIDDEN"                                 Value="     65536"/>
                <Flag       InternalName="WAS_NOTIFICATION_ON_NO_CHANGE_IN_VALUE" Value="      8192"/>
                <Flag       InternalName="VALUEINCHILDELEMENT"                    Value="     16384"/>
            </Property>
            <Property       InternalName="ID"                       Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="UserType"                 Type="UI4"      MetaFlags="NOTNULLABLE">
                <Enum       InternalName="UNKNOWN_UserType"         Value="  0"/>
                <Enum       InternalName="IIS_MD_UT_SERVER"         Value="  1"/>
                <Enum       InternalName="IIS_MD_UT_FILE"           Value="  2"/>
                <Enum       InternalName="IIS_MD_UT_WAM"            Value="100"/>
                <Enum       InternalName="ASP_MD_UT_APP"            Value="101"/>
            </Property>
            <Property       InternalName="Attributes"               Type="UI4"      MetaFlags="NOTNULLABLE">
                <Flag       InternalName="NO_ATTRIBUTES"       Value="  0"/>
                <Flag       InternalName="INHERIT"             Value="  1"/>
                <Flag       InternalName="PARTIAL_PATH"        Value="  2"/>
                <Flag       InternalName="SECURE"              Value="  4"/>
                <Flag       InternalName="REFERENCE"           Value="  8"/>
                <Flag       InternalName="VOLATILE"            Value=" 16"/>
                <Flag       InternalName="ISINHERITED"         Value=" 32"/>
                <Flag       InternalName="INSERT_PATH"         Value=" 64"/>
                <Flag       InternalName="LOCAL_MACHINE_ONLY"  Value="128"/>
            </Property>
            <Property       InternalName="Description"               Type="WSTR"     />
            <Property       InternalName="PublicColumnName"          Type="WSTR"     />
            <QueryMeta      InternalName="AllColumns"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllColumnsInATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AColumnInATable"          CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AColumnInATable"          CellName="Index"        Operator="EQUAL"                />
            <IndexMeta      InternalName="ByName"                   ColumnInternalName="Table"          MetaFlags="UNIQUE"  />
            <IndexMeta      InternalName="ByName"                   ColumnInternalName="InternalName"   MetaFlags="UNIQUE"  />
            <IndexMeta      InternalName="ByID"                     ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByID"                     ColumnInternalName="ID"                                 />
        </Collection>                                                
        <Collection         InternalName="DATABASEMETA" PublicName="DatabaseMetas"  MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="InternalName"             Type="WSTR"     Size="32"                               MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="BaseVersion"              Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="ExtendedVersion"          Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="CountOfTables"            Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="Description"            Type="WSTR"                     />
            <QueryMeta      InternalName="AllDatabases"             MetaFlags="ALL" />
            <QueryMeta      InternalName="ADatabase"                CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>                                                
        <Collection         InternalName="INDEXMETA"    PublicName="IndexMetas"     MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="ColumnIndex"              Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="ColumnInternalName"       Type="WSTR"     MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="UNIQUE"                   Value="     1"  />
                <Flag       InternalName="SORTED"                   Value="     2"  />
            </Property>
            <QueryMeta      InternalName="AllIndexes"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllIndexesOfATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AnIndexOfATable"          CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AnIndexOfATable"          CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="TABLEMETA"    PublicName="Collection"     MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="Database"                 Type="WSTR"     Size="32"                               MetaFlags="CASEINSENSITIVE"/>
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="PublicRowName"            Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="BaseVersion"              Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="ExtendedVersion"          Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="NameColumn"               Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="NavColumn"                Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="CountOfColumns"           Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE" >
                <Flag       InternalName="INTERNAL"                 Value="       1"  />
                <Flag       InternalName="NOLISTENING"              Value="       2"  />
                <Flag       InternalName="RELATIONINTEGRITY"        Value="       4"  />
                <Flag       InternalName="ROWINTEGRITY"             Value="       8"  />
                <Flag       InternalName="HASUNKNOWNSIZES"          Value="      16"  />
                <Flag       InternalName="NOPUBLICINSERT"           Value="      32"  />
                <Flag       InternalName="NOPUBLICUPDATE"           Value="      64"  />
                <Flag       InternalName="NOPUBLICDELETE"           Value="     128"  />
                <Flag       InternalName="REQUIRESQUERY"            Value="     256"  />
                <Flag       InternalName="HASDIRECTIVES"            Value="     512"  />
                <Flag       InternalName="STOREDELTAS"              Value="    1024"  />
                <Flag       InternalName="AUTOGENITEMCLASS"         Value="    2048"  />
                <Flag       InternalName="AUTOGENCOLLECTIONCLASS"   Value="    4096"  />
                <Flag       InternalName="OVERRIDEITEMCLASS"        Value="    8192"  />
                <Flag       InternalName="OVERRIDECOLLECTIONCLASS"  Value="   16384"  />
                <Flag       InternalName="NAMEVALUEPAIRTABLE"       Value="   32768"  />
                <Flag       InternalName="HIDDEN"                   Value="   65536"  />
                <!-- OVERWRITEALLROWS means that, when UpdateSotre is called, the entire contents of the table are wiped out, and are    -->
                <!-- replaced my the contents in the Write Cache.  This means, a single row Delete will result in the entire table being -->
                <!-- deleted.  A single row insert will result in a table containing only that row.  And Updates are NOT allowed.        -->
                <!-- These kinds of table may NOT be queried by anything but Special query cells (Because what does it mean to insert two-->
                <!-- rows to a table containing five rows; but only one matches the query?  Do we wipe out the five rows and insert the  -->
                <!-- two?  Or do we only delete the one row that matches the query, then insert the two?  We'll avoid this confusion by  -->
                <!-- only allowing queries when the table is requested as Read only.                                                     -->
                <Flag       InternalName="OVERWRITEALLROWS"         Value="  131072"  />
            </Property>                                           
            <Property       InternalName="SchemaGeneratorFlags"     Type="UI4"      MetaFlags="NOTNULLABLE" PublicName="MetaFlagsEx">
                <Flag       InternalName="EMITXMLSCHEMA"            Value="         1"/>
                <Flag       InternalName="EMITCLBBLOB"              Value="         2"/>
                <Flag       InternalName="ISCONTAINED"              Value="         4"/>
                <Flag       InternalName="NOTSCOPEDBYTABLENAME"     Value="         8"/>
                <Flag       InternalName="GENERATECONFIGOBJECTS"    Value="        16"/>
                <Flag       InternalName="NOTABLESCHEMAHEAPENTRY"   Value="        32"/>
                <!-- CONTAINERCLASS is used by the metabase.  It is inferred as true -->
                <!-- when the ContainerClassList is not NULL                         -->
                <Flag       InternalName="CONTAINERCLASS"           Value="        64"/>
                <!-- EXTENDED properties are shipped properties that have been       -->
                <!-- modified.  This flag is mutually exclusive from USERDEFINED     -->
                <Flag       InternalName="EXTENDED"                 Value="       256"/>
                <!-- USERDEFINED properties are defined by the user                  -->
                <!-- this flag should never be set in the meta file, it is inferred. -->
                <Flag       InternalName="USERDEFINED"              Value="      1024"/>
            </Property>                                       
            <Property       InternalName="ConfigItemName"           PublicName="ItemClass"  Type="WSTR"     />
            <Property       InternalName="ConfigCollectionName"     PublicName="ItemCollection" Type="WSTR"     />
            <Property       InternalName="PublicRowNameColumn"      Type="UI4"      />
            <Property       InternalName="ContainerClassList"       Type="WSTR"     />
            <Property       InternalName="Description"              Type="WSTR"     />
            <Property       InternalName="ChildElementName"         Type="WSTR"     />
            <QueryMeta      InternalName="AllTables"                MetaFlags="ALL" />
            <QueryMeta      InternalName="AllTablesInADatabase"     CellName="Database"     Operator="EQUAL"                />
            <QueryMeta      InternalName="ATablesInADatabase"       CellName="Database"     Operator="EQUAL"                />
            <QueryMeta      InternalName="ATablesInADatabase"       CellName="InternalName" Operator="EQUAL"                />
        </Collection>                                                
        <Collection         InternalName="TAGMETA"      PublicName="TagMetas"       MetaFlags ="INTERNAL NOLISTENING"        >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="ColumnIndex"              Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Value"                    Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="ID"                       Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <QueryMeta      InternalName="AllTags"                  MetaFlags="ALL" />
            <QueryMeta      InternalName="AllTagsInATables"         CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AllTagsInAColumn"         CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AllTagsInAColumn"         CellName="ColumnIndex"  Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="ColumnIndex"  Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="InternalName" Operator="EQUAL"                />
            <IndexMeta      InternalName="ByTableAndTagNameOnly"    ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByTableAndTagNameOnly"    ColumnInternalName="InternalName"                       />
            <IndexMeta      InternalName="ByTableAndColumnIndexOnly" ColumnInternalName="Table"                             />
            <IndexMeta      InternalName="ByTableAndColumnIndexOnly" ColumnInternalName="ColumnIndex"                       />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="Table"                      />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="ColumnIndex"                />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="InternalName"               />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="Table"                     />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="ColumnIndex"               />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="Value"                     />
            <IndexMeta      InternalName="ByTableAndTagIDOnly"      ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByTableAndTagIDOnly"      ColumnInternalName="ID"                                 />
        </Collection>                                                
        <Collection         InternalName="RELATIONMETA" PublicName="RelationMeta"  MetaFlags="INTERNAL NOLISTENING" MetaFlagsEx="GENERATECONFIGOBJECTS" ItemClass="System.Configuration.Schema.RelationMeta"         >
            <Property       InternalName="PrimaryTable"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="PrimaryColumns"           Type="BYTES"    Size="-1" MetaFlags="NOTNULLABLE"       />
            <Property       InternalName="ForeignTable"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="ForeignColumns"           Type="BYTES"    Size="-1" MetaFlags="NOTNULLABLE"       />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="CASCADEDELETE"            Value="1"       />
                <Flag       InternalName="PRIMARYREQUIRED"          Value="2"       />
                <Flag       InternalName="USECONTAINMENT"           Value="4"       />
                <Flag       InternalName="CONTAINASSIBLING"         Value="8"       />
                <Flag       InternalName="HIDDEN"                   Value="65536"       />
            </Property>
            <QueryMeta      InternalName="AllRelations"             MetaFlags="ALL" />
            <QueryMeta      InternalName="RelationsOfAPrimaryTable" CellName="PrimaryTable" Operator="EQUAL"                />
            <QueryMeta      InternalName="ARelationOfAPrimaryTable" CellName="PrimaryTable" Operator="EQUAL"                />
            <QueryMeta      InternalName="ARelationOfAPrimaryTable" CellName="ForeignTable" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="QUERYMETA"    PublicName="QueryMeta"     MetaFlags="INTERNAL NOLISTENING" MetaFlagsEx="GENERATECONFIGOBJECTS" ItemClass="System.Configuration.Schema.QueryMeta"         >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Index"                    Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="CellName"                 Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="Operator"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="EQUAL">
                <Enum       InternalName="EQUAL"                    Value="0"       />
                <Enum       InternalName="NOTEQUAL"                 Value="1"       />
            </Property>
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="ALL"                      Value="1"       />
                <Flag       InternalName="ANY"                      Value="2"       />
            </Property>
            <QueryMeta      InternalName="AllQueries"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllQueriesOfATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AQueryOfATable"           CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AQueryOfATable"           CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="SERVERWIRINGMETA"  PublicName="ServerWiring"   MetaFlags="INTERNAL NOLISTENING">
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="Order"                    Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="ReadPlugin"               Type="UI4"      MetaFlags="NOTNULLABLE"                  >
            <!-- Readplugin Enums start at 1000 -->
                <Enum       InternalName="RPNone"                                   Value="0"       />
                <Enum       InternalName="RPDucttape_CFGValidationPlugin"           Value="1001"       />
                <Enum       InternalName="RPTracer"   Value="1002"       />
                <Enum       InternalName="AddRemoveClearReadPlugin"   Value="1003"       />
            </Property>
            <Property       InternalName="ReadPluginDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="WritePlugin"              Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <!-- WritePlugin Enums start at 2000 -->
                <Enum       InternalName="WPNone"                                   Value="0"       />
                <Enum       InternalName="WPTracer"           Value="2001"       />
                <Enum       InternalName="AddRemoveClearWritePlugin"   Value="2002"       />
            </Property>
            <Property       InternalName="WritePluginDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="Interceptor"              Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <!-- Interceptor Enums start at 0 -->
                <Enum       InternalName="NoInterceptor"                            Value="0"       />
                <Enum       InternalName="TableDispenser"                           Value="1"       />
                <Enum       InternalName="Core_FixedInterceptor"                    Value="2"       />
                <Enum       InternalName="Core_ComplibInterceptor"                  Value="3"       />
                <Enum       InternalName="Core_XMLInterceptor"                      Value="4"       />
                <Enum       InternalName="Core_EventInterceptor"                    Value="5"       />
                <Enum       InternalName="Core_MemoryInterceptor"                   Value="6"       />
                <Enum       InternalName="Core_MergeDirectivesInterceptor"          Value="7"       />
                <Enum       InternalName="Core_AssemblyInterceptor"                 Value="8"       />
                <Enum       InternalName="Core_AssemblyInterceptor2"                Value="9"       />
                <Enum       InternalName="Core_FixedPackedInterceptor"              Value="10"      />
                <Enum       InternalName="Ducttape_FileNameInterceptor"             Value="11"      />
                <Enum       InternalName="WebServer_ValidationInterceptor"          Value="12"      />
                <Enum       InternalName="Ducttape_WriteInterceptor"                Value="13"      />
                <Enum       InternalName="Core_MetabaseInterceptor"                 Value="14"      />
                <Enum       InternalName="Core_MetabaseDifferencingInterceptor"     Value="15"      />
                <Enum       InternalName="Core_MetaMergeInterceptor"                Value="16"      />
                <Enum       InternalName="Core_DetailedErrorInterceptor"            Value="17"      />
                <Enum       InternalName="Core_MergeInterceptor"                    Value="18"      />
                <Enum       InternalName="AppCenter_ASAIInterceptor"                Value="19"      />
            </Property>
            <Property       InternalName="InterceptorDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="First" >
                <Flag       InternalName="First"                    Value="1"       />
                <Flag       InternalName="Next"                     Value="2"       />
                <Flag       InternalName="Last"                     Value="4"       />
                <Flag       InternalName="NoNext"                   Value="8"       />
                <Flag       InternalName="WireOnWriteOnly"          Value="16"      />
                <Flag       InternalName="WireOnReadWrite"          Value="32"      />
                <Flag       InternalName="ReadOnly"                 Value="64"      />
            </Property>
            <Property       InternalName="Locator"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="Reserved"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="Merger"               Type="UI4"
MetaFlags="NOTNULLABLE"   >
                        
                <!-- Merger Enums start at 3000 -->
                <Enum   InternalName="ListAppend"       Value="3001"       /> 
                <Enum   InternalName="PropertyOverride" Value="3002"       /> 
                <Enum   InternalName="ListMerge"        Value="3003"       /> 
            </Property>
            <Property       InternalName="MergerDLLName" Type="WSTR"     MetaFlags="CASEINSENSITIVE" />
        </Collection>
    </DatabaseMeta>
    <DatabaseMeta           InternalName="ERRORS">
        <ServerWiring       Interceptor="Core_DetailedErrorInterceptor"/>
        <Collection         InternalName="DETAILEDERRORS"           PublicName="DetailedErrors"     MetaFlags="INTERNAL NOLISTENING">
            <!--ErrorID is a generated unique identifier-->
            <Property       InternalName="ErrorID"                  Type="UI4"      MetaFlags="NOTPERSISTABLE PRIMARYKEY INSERTGENERATE"/>
            <!--Description is the message string WITH the insertions strings added in-->
            <Property       InternalName="Description"              Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="Date"                     Type="WSTR"     />
            <Property       InternalName="Time"                     Type="WSTR"     />
            <Property       InternalName="SourceModuleName"         Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <!--MessageString is the entry from the MC file WITHOUT the insertion strings (the %1,%2 etc are still in the MessageString)-->
            <Property       InternalName="MessageString"            Type="WSTR"     />
            <!--CategoryString is the category from the MC file, ReportEvent maps the Category to its string; but other logger may need this-->
            <Property       InternalName="CategoryString"           Type="WSTR"     />
            <!--Source is the Source that appears in the NT EventLog.  It's usually just the Product ID followed by ' Config' (i.e. 'IIS Config')-->
            <Property       InternalName="Source"                   Type="WSTR"     MetaFlags="NOTNULLABLE"     DefaultValue="COM+ Config"/>
            <Property       InternalName="Type"                     Type="UI4"      MetaFlags="NOTNULLABLE"     DefaultValue="ERROR">
                <Enum       InternalName="SUCCESS"                  Value="0"       />
                <Enum       InternalName="ERROR"                    Value="1"       />
                <Enum       InternalName="WARNING"                  Value="2"       />
                <Enum       InternalName="INFORMATION"              Value="4"       />
                <Enum       InternalName="AUDIT_SUCCESS"            Value="8"       />
                <Enum       InternalName="AUDIT_FAILURE"            Value="16"      />
            </Property>
            <Property       InternalName="Category"                 Type="UI4"      />
            <!--User comes from the Windows API GetUserName-->
            <Property       InternalName="User"                     Type="WSTR"     />
            <!--Computer comes from the Windows API GetComputerName-->
            <Property       InternalName="Computer"                 Type="WSTR"     />
            <!--Data is used to provide an array of bytes that might be userful in diagnosing a problem-->
            <Property       InternalName="Data"                     Type="BYTES"    />
            <!--Event is the event number as defined in the MC file, that corresponds to the event message-->
            <Property       InternalName="Event"                    Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <!-- All Detailed error must have an entry in the MC file (corresponding to the Event).  The MC message must contain a place for
                 exactly 5 strings (no more / no less).  The first four string (denoted by %1 %2 %3 %4) will be filled with the columns:
                 String1, String2, String3, String4.  The fifth string will be filled with each of the column PublicNames (located after String4)
                 followed by a colon and its value and a newline character. -->
            <Property       InternalName="String1"                  Type="WSTR"     />
            <Property       InternalName="String2"                  Type="WSTR"     />
            <Property       InternalName="String3"                  Type="WSTR"     />
            <Property       InternalName="String4"                  Type="WSTR"     />
            <Property       InternalName="String5"                  Type="WSTR"     />
            <!--ErrorCode is usually just an HRESULT-->
            <Property       InternalName="ErrorCode"                Type="UI4"      />
            <!--Interceptor is a numeric indication of which Interceptor generated the error.  This could be mapped to a string by looking it up in ServerWiringMeta-->
            <Property       InternalName="Interceptor"              Type="UI4"      />
            <!--InterceptorSource is usually the C++ source code filename.  It should NOT be reported in FREE builds.-->
            <Property       InternalName="InterceptorSource"        Type="WSTR"     />
            <Property       InternalName="OperationType"            Type="UI4"      DefaultValue="Unspecified">
                <Enum       InternalName="Unspecified"              Value="0"       />
                <Enum       InternalName="Populate"                 Value="1"       />
                <Enum       InternalName="UpdateStore"              Value="2"       />
            </Property>
            <Property       InternalName="Table"                    Type="WSTR"     />
            <!--ConfigurationSource is the XML config file name-->
            <Property       InternalName="ConfigurationSource"      Type="WSTR"     />
            <!--Row is usually either the Row in the table (in the case if UpdateStore errors), or the file line number (in the case of Populate errors)-->
            <Property       InternalName="Row"                      Type="UI4"      />
            <!--Column (see Row)-->
            <Property       InternalName="Column"                   Type="UI4"      />
            <!--MajorVersion is the IIS Metabase MajorVersion.  It could be overloaded to mean the Table BaseVersion or whatever makes sense-->
            <Property       InternalName="MajorVersion"             Type="UI4"      />
            <Property       InternalName="MinorVersion"             Type="UI4"      />
        </Collection>
    </DatabaseMeta>

    <DatabaseMeta           InternalName="PACKEDSCHEMA">
        <ServerWiring       Interceptor="Core_FixedPackedInterceptor"/>
        <Collection         InternalName="COLLECTION_META"          MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="TABLEMETA"/>
        <Collection         InternalName="PROPERTY_META"            MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="COLUMNMETA"/>
        <Collection         InternalName="SERVERWIRING_META"        MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="SERVERWIRINGMETA"/>
        <Collection         InternalName="TAG_META"                 MetaFlags ="INTERNAL NOLISTENING"   InheritsPropertiesFrom="TAGMETA"/>
    </DatabaseMeta>

   <DatabaseMeta           InternalName="CONFIGSYS">
        <ServerWiring       Interceptor="Core_XMLInterceptor"/>
        <Collection         InternalName="ManagedWiring"    PublicName="InterceptorWiring"   MetaFlagsEx="EMITXMLSCHEMA"    PublicRowName="Intercept" MetaFlags="INTERNAL" >
            <Property       InternalName="ConfigType"               Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Protocol"                 Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Order"                    Type="UI4"      MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="InterceptorClass"         Type="WSTR"     />
            <Property       InternalName="InterceptorType"          Type="UI4"      MetaFlags="NOTNULLABLE" >
                <Enum       InternalName="Reader"                   Value="     1"  />
                <Enum       InternalName="Writer"                   Value="     2"  />
                <Enum       InternalName="Transformer"              Value="     3"  />
                <Enum       InternalName="Merger"                   Value="     4"  />
                <Enum       InternalName="Validator"                Value="             5" />
            </Property>
            <Property       InternalName="InterceptorFlags"         Type="UI4"      />
            <QueryMeta      InternalName="All"                      MetaFlags="ALL" />
        </Collection>                                                                

        <Collection         InternalName="SchemaFiles"                            MetaFlagsEx="EMITXMLSCHEMA GENERATECONFIGOBJECTS"    PublicRowName="SchemaFile" ItemClass="System.Configuration.Schema.SchemaFile"         >
            <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Path"                     Type="WSTR"                                     />
            <QueryMeta      InternalName="All"                      MetaFlags="ALL" />
        </Collection>                                                                
    </DatabaseMeta>

    <DatabaseMeta           InternalName="MEMORY">
        <ServerWiring       Interceptor="Core_MemoryInterceptor"/>
        <Collection         InternalName="MEMORY_SHAPEABLE" MetaFlags="INTERNAL">
            <QueryMeta      InternalName="All"                      MetaFlags="ALL"                                     />
        </Collection>
    </DatabaseMeta>
    <DatabaseMeta   InternalName="FIXED">
	    <ServerWiring       Interceptor="Core_FixedInterceptor"/>
		<Collection     InternalName="TRANSFORMER_META" PublicRowName="TransformerWiring"    MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
			<ServerWiring       Interceptor="Core_FixedInterceptor"/>
            <Property   InternalName="TF_Protocol"  Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="TF_Type"      Type ="UI4"      MetaFlags="NOTNULLABLE">
                <!-- Transformer Enum starts at 4000 --> 
                <Enum    InternalName="FileTransformer" Value="4000"/>
                <Enum    InternalName="WebHierarchyTransformer" Value="4001"/>
                <Enum    InternalName="AppDomainTransformer" Value="4002"/>
                <Enum    InternalName="LocalMachineTransformer" Value="4003"/>
                <Enum    InternalName="ConfigTransformer" Value="4004"/>
                <Enum    InternalName="ShellTransformer" Value="4005"/>
            </Property>
            <Property   InternalName="DllName"      Type="WSTR"/>
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
		<Collection     InternalName="ASAI_META" PublicRowName="AsaiWiring"    MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="CollectionName"	Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="Namespace"		Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="AsaiPath"			Type="WSTR"/>
            <Property   InternalName="AsaiClass"		Type="WSTR"/>
		</Collection>
    </DatabaseMeta>
    <DatabaseMeta   InternalName="MOFGENERATOR">
        <ServerWiring       Interceptor="Core_XMLInterceptor"/>
        <Collection     InternalName="ASSOC_META"   PublicRowName="Association"  MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="Type"     Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="TableName"    Type ="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
        </Collection>
    </DatabaseMeta>
    

    <RelationMeta   PrimaryTable="DATABASEMETA"     PrimaryColumns="InternalName"       ForeignTable="TABLEMETA"                ForeignColumns="Database"                />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="COLUMNMETA"               ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="QUERYMETA"                ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="INDEXMETA"                ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="COLUMNMETA"       PrimaryColumns="Table Index"        ForeignTable="INDEXMETA"                ForeignColumns="Table ColumnIndex"             />
    <RelationMeta   PrimaryTable="COLUMNMETA"       PrimaryColumns="Table Index"        ForeignTable="TAGMETA"                  ForeignColumns="Table ColumnIndex"       />

</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\inc\iismeta.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:CatMeta.xms">

	<DatabaseMeta           InternalName ="METABASE">
		<ServerWiring       Interceptor  ="Core_XMLInterceptor"/>
		<Collection         InternalName ="MetabaseBaseClass"               MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HIDDEN" >
			<Property       InternalName ="Location"                        ID="9989"	Type="WSTR"   MetaFlags="PRIMARYKEY"/>
		</Collection>
		<Collection         InternalName ="IIsConfigObject"                 MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HIDDEN" >
			<Property	InternalName ="KeyType"								ID="1002"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"						MetaFlags="PRIMARYKEY"		DefaultValue=""/>
			<Property	InternalName ="AdminACL"							ID="6027"	Type="NTACL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE | REFERENCE"		MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>				
			<Property	InternalName ="AdminACLBin"							ID="6286"	Type="BINARY"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE | REFERENCE"		MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="AdminEmail"							ID="45060"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>
			<Property	InternalName ="AdminName"							ID="45061"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>
			<Property	InternalName ="AdminServer"							ID="2115"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1"/>
			<Property	InternalName ="AllowAnonymous"						ID="5005"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AllowClientPosts"					ID="45062"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="AllowControlMsgs"					ID="45064"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="AllowFeedPosts"						ID="45063"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="AllowKeepAlive"						ID="6038"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AllowPathInfoForScriptMappings"		ID="2095"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AlwaysUseSsl"						ID="36924"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AnonymousOnly"						ID="5006"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AnonymousPasswordSync"				ID="6022"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AnonymousUserName"					ID="6020"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="AnonymousUserPass"					ID="6021"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="AppAllowClientDebug"					ID="7019"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AppAllowDebugging"					ID="7018"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AppFriendlyName"						ID="2102"	Type="STRING"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="AppIsolated"							ID="2104"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue="2"	EndingNumber="0"/>
			<Property	InternalName ="AppOopRecoverLimit"					ID="2110"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AppPackageID"						ID="2106"	Type="STRING"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue=""/>	
			<Property	InternalName ="AppPackageName"						ID="2107"	Type="STRING"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue=""/>	
			<Property	InternalName ="AppPoolFriendlyName"					ID="9019"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="NO_ATTRIBUTES"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"/>
			<Property	InternalName ="AppPoolId"							ID="9101"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlags="CASEINSENSITIVE" MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"/>
			<Property	InternalName ="AppPoolIdentityType"					ID="9021"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"						            DefaultValue="0"   />
			<Property	InternalName ="AppPoolCommand"					    ID="9026"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="VOLATILE"                           MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION WAS_NOTIFICATION_ON_NO_CHANGE_IN_VALUE"               StartingNumber="1"   EndingNumber="2"/>
			<Property	InternalName ="AppPoolState"					    ID="9027"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="VOLATILE"                           MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								StartingNumber="1"   EndingNumber="4"/>
			<Property	InternalName ="AppPoolAutoStart"					ID="9028"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"               DefaultValue="1"   />
			<Property	InternalName ="AppRoot"								ID="2103"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue=""/>	
			<Property	InternalName ="AppWamClsid"							ID="2105"	Type="STRING"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ArticleTableFile"					ID="45158"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="AspAllowOutOfProcComponents"			ID="7014"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspAllowSessionState"				ID="7011"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspBufferingOn"						ID="7000"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspCodepage"							ID="7016"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AspDiskTemplateCacheDirectory"		ID="7036"	Type="EXPANDSZ"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"			DefaultValue="%Windir%\System32\inetsrv\ASP Compiled Templates"/>	
			<Property	InternalName ="AspEnableApplicationRestart"			ID="7027"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspEnableAspHtmlFallback"			ID="7021"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AspEnableChunkedEncoding"			ID="7022"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspEnableParentPaths"				ID="7008"	Type="BOOL"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspEnableTypelibCache"				ID="7023"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspErrorsToNTLog"					ID="7024"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AspExceptionCatchEnable"				ID="7015"	Type="BOOL"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspKeepSessionIDSecure"				ID="7043"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1"	/>
			<Property	InternalName ="AspLCID"								ID="7042"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AspLogErrorRequests"                 ID="7001"	Type="BOOL"	    UserType="IIS_MD_UT_WAM"		Attributes="INHERIT"    					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspMaxDiskTemplateCacheFiles"		ID="7040"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
            <Property   InternalName ="AspPartitionID"                      ID="7048"   Type="STRING"   UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                   DefaultValue=""/>
            <Property   InternalName ="AspSxsName"                          ID="7049"   Type="STRING"   UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                   DefaultValue=""/>
			<Property	InternalName ="AspProcessorThreadMax"				ID="7025"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="10"	EndingNumber="0"/>
			<Property	InternalName ="AspQueueConnectionTestTime"			ID="7028"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="3"	EndingNumber="0"/>
			<Property	InternalName ="AspQueueTimeout"						ID="7013"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspRequestQueueMax"					ID="7026"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="500"	EndingNumber="0"/>
			<Property	InternalName ="AspScriptEngineCacheMax"				ID="7005"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="120"	EndingNumber="0"/>
			<Property	InternalName ="AspScriptErrorMessage"				ID="7003"	Type="STRING"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="An error occurred on the server when processing the URL. Please contact the system administrator."/>	
			<Property	InternalName ="AspScriptErrorSentToBrowser"			ID="7002"	Type="BOOL"		UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspScriptFileCacheSize"				ID="7004"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspScriptLanguage"					ID="7012"	Type="STRING"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="Vbscript"/>	
			<Property	InternalName ="AspScriptTimeout"					ID="7006"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="90"	EndingNumber="0"/>
			<Property	InternalName ="AspSessionMax"						ID="7029"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspSessionTimeout"					ID="7007"	Type="DWORD"	UserType="ASP_MD_UT_APP"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="10"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateEnabled"				ID="7030"	Type="BOOL"		UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateLoadHigh"				ID="7035"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="90"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateLoadLow"				ID="7034"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="75"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateSleepDelay"				ID="7032"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="100"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateSleepMax"				ID="7033"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="50"	EndingNumber="0"/>
			<Property	InternalName ="AspThreadGateTimeSlice"				ID="7031"	Type="DWORD"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1000"	EndingNumber="0"/>
			<Property	InternalName ="AspTrackThreadingModel"				ID="7020"	Type="BOOL"		UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="AuthTurnList"						ID="36966"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="StandardAppModeEnabled"			    ID="9203"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	                                                MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"				                    DefaultValue="1"                  />
			<Property	InternalName ="BadMailDirectory"					ID="36909"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="CacheControlCustom"					ID="6043"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="CacheControlMaxAge"					ID="6042"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CacheControlNoCache"					ID="6041"	Type="BOOL"		UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CacheISAPI"							ID="6034"	Type="BOOL"		UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="CalLimitHttpError"					ID="2133"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="403"	EndingNumber="0"/>
			<Property	InternalName ="CalReserveTimeout"					ID="2131"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="600"	EndingNumber="0"/>
			<Property	InternalName ="CalSSLReserveTimeout"				ID="2132"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="600"	EndingNumber="0"/>
			<Property	InternalName ="CalVcPerConnect"						ID="2130"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="6"	EndingNumber="0"/>
			<Property	InternalName ="CertCheckMode"						ID="2160"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CGITimeout"							ID="6033"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="300"		EndingNumber="0"/>
			<Property	InternalName ="ChangeNumber"						ID="9997"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	/>
			<Property	InternalName ="ClientPostHardLimit"					ID="45165"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ClientPostSoftLimit"					ID="45166"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ClusterEnabled"						ID="1025"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CollectionComment"					ID="9990"	Type="STRING"	UserType="IIS_MD_UT_SERVER"												MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="ConnectionTimeout"					ID="1013"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="900"	EndingNumber="2147483647"/>
			<Property	InternalName ="ContentIndexed"						ID="6039"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPUAction"						    ID="9022"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	EndingNumber="3"/>
			<Property	InternalName ="CPUAppEnabled"						ID="2141"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="CPUCGIEnabled"						ID="2140"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="CPULimit"							ID="9023"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	EndingNumber="100000"/>
			<Property	InternalName ="CPUCGILimit"							ID="2148"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULimitLogEvent"					ID="2149"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULimitPause"						ID="2152"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULimitPriority"					ID="2150"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULimitProcStop"					ID="2151"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULimitsEnabled"					ID="2143"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CPULoggingInterval"					ID="2145"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="60"	EndingNumber="0"/>
			<Property	InternalName ="CPUResetInterval"					ID="2144"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="5"	EndingNumber="1440"/>
			<Property	InternalName ="CreateCGIWithNewConsole"				ID="6036"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="CreateProcessAsUser"					ID="6035"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="CSideEtrnDomains"					ID="36968"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="CustomErrorDescriptions"				ID="2120"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="DefaultDoc"							ID="6006"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="default.htm"/>	
			<Property	InternalName ="DefaultDocFooter"					ID="6009"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="DefaultDomain"						ID="36908"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="DefaultLogonDomain"					ID="6012"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="DefaultModeratorDomain"				ID="45065"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="DirectoryLevelsToScan"				ID="1022"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="2"	EndingNumber="0"/>
			<Property	InternalName ="DisablePublishing"					ID="9025"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="DisableNewNews"						ID="45068"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="DisableSocketPooling"				ID="1029"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="DisallowOverlappingRotation"			ID="9015"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"					                  DefaultValue="0"    />
			<Property	InternalName ="DisallowRotationOnConfigChange"		ID="9018"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                   DefaultValue="0"    />
			<Property	InternalName ="DomainRouting"						ID="36920"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"								DefaultValue=""/>	
			<Property	InternalName ="DoMasquerade"						ID="36913"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="DontLog"								ID="6023"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="DownlevelAdminInstance"				ID="1021"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="DropDirectory"						ID="36882"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="HistoryMajorVersionNumber"	        ID="9994"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"/>
			<Property	InternalName ="XMLSchemaTimeStamp"	                ID="9992"	Type="BINARY"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"/>
			<Property	InternalName ="BINSchemaTimeStamp"	                ID="9991"	Type="BINARY"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"/>
			<Property	InternalName ="EnableHistory"						ID="9996"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="EnableDocFooter"						ID="6010"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="EnableEditWhileRunning"				ID="9998"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="EnableReverseDns"					ID="6029"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="EnableReverseDnsLookup"				ID="36884"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="EtrnDays"							ID="36918"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ExitMessage"							ID="5001"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="FeedPostHardLimit"					ID="45167"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="FeedPostSoftLimit"					ID="45168"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="FeedReportPeriod"					ID="45180"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="FilterDescription"					ID="2045"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="FilterEnabled"						ID="2043"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="FilterLoadOrder"						ID="2040"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="FilterPath"							ID="2041"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="FilterState"							ID="2042"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="FrontPageWeb"						ID="2072"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="FtpDirBrowseShowLongDate"			ID="5010"	Type="BOOL"	    UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="FullyQualifiedDomainName"			ID="36935"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="BannerMessage"					    ID="5011"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="UserIsolationMode"			        ID="5012"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					            DefaultValue="0" EndingNumber="2"/>
			<Property	InternalName ="FtpLogInUtf8"					    ID="5013"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					            DefaultValue="0"/>
			<Property	InternalName ="GreetingMessage"						ID="5002"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="GroupHelpFile"						ID="45156"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="GroupListFile"						ID="45157"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="GroupVarListFile"					ID="45182"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>
			<Property	InternalName ="HeaderWaitTimeout"				    ID="9204"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"						    MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	/>
			<Property	InternalName ="HcCacheControlHeader"				ID="2211"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="max-age=86400"/>	
			<Property	InternalName ="HcCompressionBufferSize"				ID="2223"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="8192"	EndingNumber="0"/>
			<Property	InternalName ="HcCompressionDirectory"				ID="2210"	Type="EXPANDSZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"			DefaultValue="%Windir%\IIS Temporary Compressed Files"/>	
			<Property	InternalName ="HcCompressionDll"					ID="2237"	Type="EXPANDSZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"			DefaultValue=""/>	
			<Property	InternalName ="HcCreateFlags"						ID="2243"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="HcDoDiskSpaceLimiting"				ID="2216"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="HcDoDynamicCompression"				ID="2213"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="HcDoOnDemandCompression"				ID="2215"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="HcDoStaticCompression"				ID="2214"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="HcDynamicCompressionLevel"			ID="2241"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="HcExpiresHeader"						ID="2212"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="HcFileExtensions"					ID="2238"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="HcFilesDeletedPerDiskFree"			ID="2225"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="256"	EndingNumber="0"/>
			<Property	InternalName ="HcIoBufferSize"						ID="2222"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="8192"	EndingNumber="0"/>
			<Property	InternalName ="HcMaxDiskSpaceUsage"					ID="2221"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1000000"	EndingNumber="0"/>
			<Property	InternalName ="HcMaxQueueLength"					ID="2224"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1000"	EndingNumber="0"/>
			<Property	InternalName ="HcMimeType"							ID="2239"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="HcMinFileSizeForComp"				ID="2226"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="256"	EndingNumber="0"/>
			<Property	InternalName ="HcNoCompressionForHttp10"			ID="2217"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="HcNoCompressionForProxies"			ID="2218"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="HcNoCompressionForRange"				ID="2219"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="HcOnDemandCompLevel"					ID="2242"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="10"	EndingNumber="0"/>
			<Property	InternalName ="HcPriority"							ID="2240"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="HcScriptFileExtensions"				ID="2244"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="HcSendCacheHeaders"					ID="2220"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="HistoryTableFile"					ID="45159"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="HonorClientMsgIds"					ID="45058"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="HopCount"							ID="36886"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="10"	EndingNumber="0"/>
			<Property	InternalName ="HttpCustomHeaders"					ID="6004"	Type="MULTISZ"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="HttpErrors"							ID="6008"	Type="MULTISZ"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="HttpExpires"							ID="6002"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="D, 0x15180"/>"	
			<Property	InternalName ="HttpPics"							ID="6003"	Type="MULTISZ"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="HttpRedirect"						ID="6011"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="IdleTimeout"							ID="9005"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"              DefaultValue="10"           EndingNumber="4294967"/>
			<Property	InternalName ="IgnoreTranslate"						ID="3008"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ImapClearTextProvider"				ID="49375"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDefaultDomain"					ID="49368"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsAccount"						ID="49383"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsBindType"						ID="49379"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsDataDirectory"					ID="49377"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsDefaultMailRoot"				ID="49378"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsHost"							ID="49381"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsNamingContext"					ID="49382"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsPassword"						ID="49384"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapDsSchemaType"					ID="49380"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapExpireDelay"						ID="49370"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1440"	EndingNumber="0"/>
			<Property	InternalName ="ImapExpireMail"						ID="49373"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ImapExpireStart"						ID="49371"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ImapMailExpirationTime"				ID="49153"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ImapRoutingDll"						ID="49369"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ImapRoutingSources"					ID="49366"	Type="MULTISZ"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"								DefaultValue=""/>	
			<Property	InternalName ="ImapRoutingTableType"				ID="49376"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="LDAP"/>	
			<Property	InternalName ="ImapServiceVersion"					ID="49652"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="InProcessIsapiApps"					ID="2073"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="IPSecurity"							ID="6019"	Type="IPSECLIST"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT | REFERENCE"				MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="LimitRemoteConnections"				ID="36926"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="ListFile"							ID="45172"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LocalRetryAttempts"					ID="36896"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="48"	EndingNumber="0"/>
			<Property	InternalName ="LocalRetryInterval"					ID="36897"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="60"	EndingNumber="0"/>
			<Property	InternalName ="LogAnonymous"						ID="5007"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="LogCustomPropertyDataType"			ID="4505"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="LogCustomPropertyHeader"				ID="4502"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LogCustomPropertyID"					ID="4503"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="LogCustomPropertyMask"				ID="4504"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="LogCustomPropertyName"				ID="4501"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LogCustomPropertyServicesString"		ID="4506"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue="W3Svc | MSFTPSvc | SmtpSvc | NNTPSvc"/>	
			<Property	InternalName ="LogFileDirectory"					ID="4001"	Type="EXPANDSZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="%Windir%\System32\LogFiles"/>	
			<Property	InternalName ="LogFileLocaltimeRollover"			ID="4015"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"								MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	/>
			<Property	InternalName ="LogFilePeriod"						ID="4003"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="1"	EndingNumber="4"/>
			<Property	InternalName ="LogFileTruncateSize"					ID="4004"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="2000000"	EndingNumber="4294967295"/>
			<Property	InternalName ="LogInUTF8"						    ID="9206"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"					                DefaultValue="0"	/>
			<Property	InternalName ="LogModuleId"							ID="4005"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LogModuleList"						ID="4012"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="NCSA Common Log File Format, Microsoft IIS Log File Format, W3C Extended Log File Format"/>	
			<Property	InternalName ="LogModuleUiId"						ID="4006"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LogNonAnonymous"						ID="5008"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="LogOdbcDataSource"					ID="4007"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="HTTPLOG"/>	
			<Property	InternalName ="LogOdbcPassword"						ID="4010"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="LogOdbcTableName"					ID="4008"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="InternetLog"/>	
			<Property	InternalName ="LogOdbcUserName"						ID="4009"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="InternetAdmin"/>	
			<Property	InternalName ="LogonMethod"							ID="6013"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="3"	EndingNumber="3"/>
			<Property	InternalName ="LogPluginClsid"						ID="4011"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="LogType"								ID="4000"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="1"	EndingNumber="1"/>
			<Property	InternalName ="MasqueradeDomain"					ID="36912"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="MetabaseComments"					ID="9990"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	                                                MetaFlagsEx="CACHE_PROPERTY_MODIFIED"               DefaultValue="10"/>
			<Property	InternalName ="MaxErrorFiles"						ID="9988"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	                                                MetaFlagsEx="CACHE_PROPERTY_MODIFIED"               DefaultValue="10"/>
			<Property	InternalName ="MaxHistoryFiles"						ID="9995"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	                                                MetaFlagsEx="CACHE_PROPERTY_MODIFIED"               DefaultValue="10"/>
			<Property	InternalName ="MaxBandwidth"						ID="1000"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="4294967295"	/>
			<Property	InternalName ="MaxBandwidthBlocked"					ID="1003"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="MaxBatchedMessages"					ID="36871"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="MaxClientsMessage"					ID="5003"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="MaxConnections"						ID="1014"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	/>
			<Property	InternalName ="MaxEndpointConnections"				ID="1024"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="MaxGlobalBandwidth"					ID="9201"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	/>
			<Property	InternalName ="MaxGlobalConnections"				ID="9202"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="4294967295"	/>
			<Property	InternalName ="MaxMessageSize"						ID="36891"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="33554432"	EndingNumber="0"/>
			<Property	InternalName ="MaxOutConnections"					ID="36894"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="MaxOutConnectionsPerDomain"			ID="36925"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="MaxProcesses"						ID="9003"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="1"    EndingNumber="4294967"/>
			<Property	InternalName ="MaxRecipients"						ID="36895"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="100"	EndingNumber="0"/>
			<Property	InternalName ="MaxSearchResults"					ID="45181"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="MaxSessionSize"						ID="36892"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="268435456"	EndingNumber="0"/>
			<Property	InternalName ="MaxSmtpLogonErrors"					ID="36945"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4"	EndingNumber="0"/>
			<Property	InternalName ="MD_0"											ID="0"	Type="STRING"	UserType="UNKNOWN_UserType"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_1001"											ID="1001"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="PostmasterName"										ID="36916"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    />
			<Property	InternalName ="PostmasterEmail"										ID="36917"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    />
			<Property	InternalName ="LocalDomains"										ID="36919"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    />
			<Property	InternalName ="ShutdownLatency"									ID="45070"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"	DefaultValue="0" EndingNumber="0"/>
			<Property	InternalName ="MD_APP_LAST_OUTPROC_PID"							ID="2108"	Type="STRING"	UserType="IIS_MD_UT_WAM"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_AUTH_CHANGE_URL"								ID="2060"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_AUTH_EXPIRED_UNSECUREURL"						ID="2067"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_AUTH_EXPIRED_URL"								ID="2061"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_AUTH_NOTIFY_PWD_EXP_URL"						ID="2062"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_AUTH_NOTIFY_PWS_EXP_UNSECUREURL"				ID="2069"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_ETAG_CHANGENUMBER"							ID="2039"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_IISADMIN_EXTENSIONS"							ID="1028"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_ISM_ACCESS_CHECK"								ID="6269"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_METADATA_ID_REGISTRATION"						ID="1030"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"    MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MD_SERVER_CAPABILITIES"							ID="1103"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="ServerCommand"								    ID="1012"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"										MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION WAS_NOTIFICATION_ON_NO_CHANGE_IN_VALUE"/>
			<Property	InternalName ="MD_SERVER_PLATFORM"								ID="1100"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	MetaFlagsEx="HIDDEN"	/>
			<Property	InternalName ="MajorIIsVersionNumber"							ID="1101"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	/>
			<Property	InternalName ="MinorIIsVersionNumber"							ID="1102"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	/>
			<Property	InternalName ="MimeMap"								ID="6015"	Type="MIMEMAP"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="MinFileKbSec"				        ID="9205"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	/>
			<Property	InternalName ="ModeratorFile"						ID="45160"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="MSDOSDirOutput"						ID="5004"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="NetLogonWorkstation"					ID="2065"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="NntpCommandLogMask"					ID="45067"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="NewsDropDirectory"					ID="45176"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="NewsFailedPickupDirectory"			ID="45174"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="NewsPickupDirectory"					ID="45173"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="NntpServiceVersion"					ID="45175"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="NntpUucpName"						ID="45170"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="NotDeletable"						ID="2116"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="NTAuthenticationProviders"			ID="6032"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="OrphanAction"						ID="9016"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"/>
			<Property	InternalName ="OrphanActionExe"						ID="9031"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"/>
			<Property	InternalName ="OrphanActionParams"  				ID="9032"	Type="STRING"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"/>
			<Property	InternalName ="OrphanWorkerProcess"					ID="9009"	Type="BOOL"	   UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"     />
			<Property	InternalName ="PasswordCacheTTL"					ID="2064"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="600"	EndingNumber="0"/>
			<Property	InternalName ="PasswordExpirePrenotifyDays"			ID="2063"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="Path"								ID="3001"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="PeriodicRestartRequests"				ID="9002"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="10000"	EndingNumber="4294967"/>
			<Property	InternalName ="PeriodicRestartSchedule"				ID="9020"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="PeriodicRestartTime"					ID="9001"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="60"	EndingNumber="4294967"/>
			<Property	InternalName ="PeriodicRestartConnections"			ID="9104"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="10000"	EndingNumber="0"/>
			<Property	InternalName ="PeriodicRestartMemory"				ID="9024"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"   EndingNumber="4294967"/>
			<Property	InternalName ="PickupDirectory"						ID="36880"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="PingingEnabled"						ID="9004"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="4294967295"  />
			<Property	InternalName ="PingInterval"						ID="9013"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="300" StartingNumber="1" EndingNumber="4294967"/>
			<Property	InternalName ="PingResponseTime"				    ID="9014"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"	                                DefaultValue="60"  StartingNumber="1" EndingNumber="4294967"/>
			<Property	InternalName ="PoolIdcTimeout"						ID="6037"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="Pop3ClearTextProvider"				ID="41182"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DefaultDomain"					ID="41176"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsAccount"						ID="41190"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsBindType"						ID="41186"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsDataDirectory"					ID="41184"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsDefaultMailRoot"				ID="41185"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsHost"							ID="41188"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsNamingContext"					ID="41189"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsPassword"						ID="41191"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3DsSchemaType"					ID="41187"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3ExpireDelay"						ID="41178"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1440"	EndingNumber="0"/>
			<Property	InternalName ="Pop3ExpireMail"						ID="41181"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="Pop3ExpireStart"						ID="41179"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="Pop3MailExpirationTime"				ID="40961"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="Pop3RoutingDll"						ID="41177"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="Pop3RoutingSources"					ID="41174"	Type="MULTISZ"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"								DefaultValue=""/>	
			<Property	InternalName ="Pop3RoutingTableType"				ID="41183"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="LDAP"/>	
			<Property	InternalName ="Pop3ServiceVersion"					ID="41460"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="PrettyNamesFile"						ID="45178"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="NntpClearTextProvider"				ID="45179"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ProcessNTCRIfLoggedOn"				ID="2070"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="PutReadSize"							ID="6046"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="8192"	EndingNumber="0"/>
			<Property	InternalName ="QueueDirectory"						ID="36875"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RapidFailProtection"                 ID="9006"   Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="4294967295"  />
			<Property	InternalName ="RapidFailProtectionInterval"         ID="9029"   Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="10"  StartingNumber="1"/>
			<Property	InternalName ="RapidFailProtectionMaxCrashes"       ID="9030"   Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="5"  StartingNumber="1"/>
			<Property	InternalName ="Realm"								ID="6001"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RedirectHeaders"						ID="6044"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RelayForAuth"						ID="36973"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="RelayIpList"							ID="36970"	Type="IPSECLIST"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT | REFERENCE"				MetaFlagsEx="CACHE_PROPERTY_MODIFIED"		/>
			<Property	InternalName ="RemoteRetryAttempts"					ID="36898"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="48"	EndingNumber="0"/>
			<Property	InternalName ="RemoteRetryInterval"					ID="36899"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="60"	EndingNumber="0"/>
			<Property	InternalName ="RemoteSmtpPort"						ID="36914"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="25"	EndingNumber="0"/>
			<Property	InternalName ="RemoteSmtpSecurePort"				ID="36929"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="465"	EndingNumber="0"/>
			<Property	InternalName ="RemoteTimeout"						ID="36921"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="RevocationFreshnessTime"				ID="2161"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="86400"	/>
			<Property	InternalName ="RevocationURLRetrievalTimeout"		ID="2162"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	/>		
			<Property	InternalName ="RouteAction"							ID="36946"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="RouteActionString"					ID="36947"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RoutePassword"						ID="36949"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RouteUserName"						ID="36948"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RoutingDll"							ID="36883"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="RoutingSources"						ID="36910"	Type="MULTISZ"	UserType="IIS_MD_UT_WAM"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"								DefaultValue=""/>	
			<Property	InternalName ="RunAsLocalSystem"					ID="9010"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="1"  />
			<Property	InternalName ="SaslLogonDomain"						ID="36940"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ScriptMaps"							ID="6014"	Type="MULTISZ"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="SecureBindings"						ID="2021"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="SendBadTo"							ID="36923"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SendNdrTo"							ID="36922"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="ServerAutoStart"						ID="1017"	Type="BOOL"		UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="4294967295"	/>
			<Property	InternalName ="ServerBindings"						ID="1023"	Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"								DefaultValue=""/>	
			<Property	InternalName ="ServerComment"						ID="1015"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="ServerListenBacklog"					ID="1019"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="40"	EndingNumber="0"/>
			<Property	InternalName ="ServerListenTimeout"					ID="1020"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="120"	/>
			<Property	InternalName ="ServerSize"							ID="1018"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="ServerState"							ID="1016"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="VOLATILE"							MetaFlagsEx="CACHE_PROPERTY_CLEARED WAS_NOTIFICATION"									DefaultValue="4"	/>
			<Property	InternalName ="SessionKey"							ID="9999"	Type="BINARY"	UserType="IIS_MD_UT_SERVER"	/>
			<Property	InternalName ="ShouldDeliver"						ID="36881"	Type="BOOL" 	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="1"	EndingNumber="0"/>
			<Property	InternalName ="ShutdownTimeLimit"					ID="9012"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="60"	StartingNumber="1" EndingNumber="4294967"/>
			<Property	InternalName ="SmartHost"							ID="36906"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmartHostType"						ID="36905"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SMPAffinitized"						ID="9007"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="0"    />
			<Property	InternalName ="SMPProcessorAffinityMask"			ID="9008"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                                  DefaultValue="4294967295"   />
			<Property	InternalName ="SmtpAdvQueueDll"						ID="36987"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpAuthTimeout"						ID="37006"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpBdatTimeout"						ID="37005"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpClearTextProvider"				ID="36942"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpCommandLogMask"					ID="36864"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpConnectTimeout"					ID="37001"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDataTimeout"						ID="37004"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDsAccount"						ID="36957"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsBindType"						ID="36953"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsDataDirectory"					ID="36951"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsDefaultMailRoot"				ID="36952"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsDomain"						ID="36993"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsFlags"							ID="37024"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDsHost"							ID="36955"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsNamingContext"					ID="36956"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDSNLanguageID"					ID="37022"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDSNOptions"						ID="37021"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDsPassword"						ID="36958"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsPort"							ID="37023"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDsSchemaType"					ID="36954"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpDsUseCat"						ID="36994"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpFlushMailFile"					ID="36866"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpHeloTimeout"						ID="37012"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpInboundCommandSupportOptions"	ID="36998"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="7697601"	EndingNumber="0"/>
			<Property	InternalName ="SmtpLocalDelayExpireMinutes"			ID="37017"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="60"	EndingNumber="0"/>
			<Property	InternalName ="SmtpLocalNDRExpireMinutes"			ID="37018"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="2880"	EndingNumber="0"/>
			<Property	InternalName ="SmtpMailFromTimeout"					ID="37002"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpOutboundCommandSupportOptions"	ID="36999"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="7697601"	EndingNumber="0"/>
			<Property	InternalName ="SmtpRcptToTimeout"					ID="37003"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpRemoteDelayExpireMinutes"		ID="37019"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="60"	EndingNumber="0"/>
			<Property	InternalName ="SmtpRemoteNDRExpireMinutes"			ID="37020"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="2880"	EndingNumber="0"/>
			<Property	InternalName ="SmtpRemoteProgressiveRetry"			ID="36996"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpRemoteRetryThreshold"			ID="36995"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="3"	EndingNumber="0"/>
			<Property	InternalName ="SmtpRoutingTableType"				ID="36950"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="LDAP"/>	
			<Property	InternalName ="SmtpRsetTimeout"						ID="37010"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpSaslTimeout"						ID="37007"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SmtpServer"							ID="45059"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="SmtpServiceVersion"					ID="36931"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue="0"	EndingNumber="0"        StartingNumber="1"/>
			<Property	InternalName ="SmtpTurnTimeout"						ID="37009"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SSIExecDisable"						ID="6028"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="SSLCertHash"							ID="5506"	Type="BINARY"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"			DefaultValue=""/>	
			<Property	InternalName ="SSLStoreName"						ID="5511"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_CLEARED"													DefaultValue=""/>	
			<Property	InternalName ="SslUseDsMapper"						ID="5519"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="StartupTimeLimit"					ID="9011"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                    MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                   DefaultValue="30"   StartingNumber="1" EndingNumber="4294967"/>
			<Property	InternalName ="AppPoolQueueLength"				    ID="9017"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"		Attributes="INHERIT"                    MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"                   DefaultValue="3000" StartingNumber="1" EndingNumber="4294967295"/>
			<Property	InternalName ="UNCAuthenticationPassThrough"		ID="3006"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="UNCPassword"							ID="3003"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="UNCUserName"							ID="3002"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="UploadReadAheadSize"					ID="6045"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="49152"	EndingNumber="0"/>
			<Property	InternalName ="UseDigestSSP"						ID="6047"	Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="UseHostName"							ID="2066"	Type="BOOL"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="0"	EndingNumber="0"/>
			<Property	InternalName ="VrDriverClsid"					    ID="46156"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="VrDriverProgid"					    ID="46157"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FsPropertyPath"					    ID="46158"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="VrUseAccount"					    ID="46160"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                   EndingNumber="0"/>
			<Property	InternalName ="VrDoExpire"							ID="46161"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"  EndingNumber="0" DefaultValue="0"/>
			<Property	InternalName ="ExMdbGuid"					        ID="46162"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="VrOwnModerator"					    ID="46163"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                       EndingNumber="0"/>
			<Property	InternalName ="ArticleTimeLimit"                    ID="45056" Type="DWORD"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                   EndingNumber="0"/>
			<Property	InternalName ="HistoryExpiration"                   ID="45057" Type="DWORD"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                   EndingNumber="0"/>
			<Property	InternalName ="NewsCrawlerTime"                     ID="45069" Type="DWORD"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED" EndingNumber="0"/>
			<Property	InternalName ="NntpOrganization"                    ID="45171" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="SmtpUseTcpDns"				        ID="36997"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDotStuffPickupDirFiles"		    ID="37030"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDomainValidationFlags"  	        ID="36992"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                   DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpSSLRequireTrustedCA"		        ID="37025"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpSSLCertHostnameValidation"       ID="37026"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="MaxMailObjects"   	                ID="36873"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                   DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ShouldPickupMail"                    ID="36876"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="MaxDirChangeIOSize"                  ID="36878"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="NameResolutionType"                  ID="36885"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="MaxSmtpErrors"                       ID="36887"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ShouldPipelineIn"                    ID="36902"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ShouldPipelineOut"                   ID="36901"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="ConnectResponse"					    ID="36907"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="UpdatedFQDN"                         ID="36936"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="UpdatedDefaultDomain"                ID="36937"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="EtrnSubdomains"                      ID="36938"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpMaxRemoteQThreads"               ID="36964"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpDisableRelay"                    ID="36974"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpHeloNoDomain"                    ID="36981"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpMailNoHelo"                      ID="36982"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpAqueueWait"                      ID="36990"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="AddNoHeaders"                        ID="37000"	Type="BOOL"	    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="SmtpEventlogLevel"                   ID="37027"	Type="DWORD"    UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"					DefaultValue="4294967295"	EndingNumber="0"/>
			<Property	InternalName ="FeedServerName"                    ID="45456" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedType"                          ID="45457" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedNewsgroups"                    ID="45458" Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedSecurityType"                  ID="45459" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedAuthenticationType"            ID="45460" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedAccountName"                   ID="45461" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedPassword"                      ID="45462" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="SECURE"							    MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedStartTimeHigh"                 ID="45463" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedStartTimeLow"                  ID="45464" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedInterval"                      ID="45465" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedAllowControlMsgs"              ID="45466" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedCreateAutomatically"           ID="45467" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedDisabled"                      ID="45468" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedDistribution"                  ID="45469" Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedConcurrentSessions"            ID="45470" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedMaxConnectionAttempts"         ID="45471" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedUucpName"                      ID="45472" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedTempDirectory"                 ID="45473" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedNextPullHigh"                  ID="45474" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedNextPullLow"                   ID="45475" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedPeerTempDirectory"             ID="45476" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="FeedPeerGapSize"                   ID="45477" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedOutgoingPort"                  ID="45478" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedFeedpairId"                    ID="45479" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedHandshake"                     ID="45480" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedAdminError"                    ID="45481" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="FeedErrParmMask"                   ID="45482" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="ExpireSpace"                       ID="45656" Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="ExpireTime"                        ID="45657" Type="DWORD"   UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0"/>
			<Property	InternalName ="ExpireNewsgroups"                  ID="45658" Type="MULTISZ"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="ExpirePolicyName"                  ID="45659" Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
			<Property	InternalName ="DoStaticCompression"               ID="2256" Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0" DefaultValue="0"/>
			<Property	InternalName ="DoDynamicCompression"              ID="2255" Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0" DefaultValue="0"/>
			<Property	InternalName ="WAMUserName"							ID="7501"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="WAMUserPass"							ID="7502"	Type="STRING"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT | SECURE"					MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue=""/>	
			<Property	InternalName ="Win32Error"							ID="1099"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="VOLATILE"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="0"	/>
			<Property	InternalName ="XoverTableFile"						ID="45161"	Type="STRING"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue=""/>	
			<Property	InternalName ="StopListening"					    ID="9987"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="VOLATILE"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION HIDDEN"									DefaultValue="0"	/>
			<Property	InternalName ="DavEnabled"                        ID="2153" Type="BOOL"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"     EndingNumber="0" DefaultValue="TRUE"/>
			<Property       InternalName ="AccessFlags"						ID="6016"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="AccessRead"			EndingNumber="0">
				<Flag       InternalName ="AccessExecute"							Value="4"			ID="6209"	/>
				<Flag       InternalName ="AccessSource"							Value="16"			ID="6282"	/>
				<Flag       InternalName ="AccessRead"								Value="1"			ID="6207"	/>
				<Flag       InternalName ="AccessWrite"								Value="2"			ID="6208"	/>
				<Flag       InternalName ="AccessScript"							Value="512"			ID="6211"	/>
				<Flag       InternalName ="AccessNoRemoteExecute"					Value="1024"		ID="6232"	/>
				<Flag       InternalName ="AccessNoRemoteRead"						Value="4096"		ID="6231"	/>
				<Flag       InternalName ="AccessNoRemoteWrite"						Value="1024"		ID="6230"	/>
				<Flag       InternalName ="AccessNoRemoteScript"					Value="16384"		ID="6233"	/>
			</Property>
			<Property       InternalName ="AccessSSLFlags"					ID="6030"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"					EndingNumber="0">
				<Flag       InternalName ="AccessSSL"								Value="8"			ID="6213"	/>
				<Flag       InternalName ="AccessSSL128"							Value="256"			ID="6217"	/>
				<Flag       InternalName ="AccessSSLNegotiateCert"					Value="32"			ID="6214"	/>
				<Flag       InternalName ="AccessSSLRequireCert"					Value="64"			ID="6215"	/>
				<Flag       InternalName ="AccessSSLMapCert"						Value="128"			ID="6216"	/>
			</Property>
			<Property       InternalName ="AuthFlags"						ID="6000"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="AuthAnonymous"		EndingNumber="0">
				<Flag       InternalName ="AuthBasic"								Value="2"			ID="6219"	/>
				<Flag       InternalName ="AuthAnonymous"							Value="1"			ID="6218"	/>
				<Flag       InternalName ="AuthNTLM"								Value="4"			ID="6220"	/>
				<Flag       InternalName ="AuthMD5"									Value="16"			ID="6221"	/>
			</Property>
			<Property       InternalName ="AuthPersistence"					ID="6031"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="AuthPersistSingleRequest"	EndingNumber="0">
				<Flag       InternalName ="AuthPersistSingleRequest"				Value="64"			ID="6283"	/>
			</Property>
			<Property       InternalName ="CPULoggingMask"					ID="4507"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="CPULoggingEnabled"			EndingNumber="0"> 
				<Flag       InternalName ="CPULoggingEnabled"						Value="2147483648"	ID="6281"	/>
				<Flag       InternalName ="CPUEnableEvent"							Value="1"			ID="6273"	/>
				<Flag       InternalName ="CPUEnableProcType"						Value="2"			ID="6274"	/>
				<Flag       InternalName ="CPUEnableUserTime"						Value="4"			ID="6275"	/>
				<Flag       InternalName ="CPUEnableKernelTime"						Value="8"			ID="6276"	/>
				<Flag       InternalName ="CPUEnablePageFaults"						Value="16"			ID="6277"	/>
				<Flag       InternalName ="CPUEnableTotalProcs"						Value="32"			ID="6278"	/>
				<Flag       InternalName ="CPUEnableActiveProcs"					Value="64"			ID="6279"	/>
				<Flag       InternalName ="CPUEnableTerminatedProcs"				Value="128"			ID="6280"	/>
			</Property>
			<Property       InternalName ="CPULoggingOptions"				ID="2146"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="CPUEnableAllProcLogging"	EndingNumber="0">
				<Flag       InternalName ="CPUEnableAllProcLogging"					Value="1"			ID="6270"	/>
				<Flag       InternalName ="CPUEnableCGILogging"						Value="2"			ID="6271"	/>
				<Flag       InternalName ="CPUEnableAppLogging"						Value="4"			ID="6272"	/>
			</Property>
			<Property       InternalName ="DirBrowseFlags"					ID="6005"	Type="DWORD"	UserType="IIS_MD_UT_FILE"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="DirBrowseShowDate | DirBrowseShowTime | DirBrowseShowSize | DirBrowseShowExtension | EnableDefaultDoc"			EndingNumber="0">
				<Flag       InternalName ="EnableDirBrowsing"						Value="2147483648"	ID="6205"	/>
				<Flag       InternalName ="DirBrowseShowDate"						Value="2"			ID="6200"	/>
				<Flag       InternalName ="DirBrowseShowTime"						Value="4"			ID="6201"	/>
				<Flag       InternalName ="DirBrowseShowSize"						Value="8"			ID="6202"	/>
				<Flag       InternalName ="DirBrowseShowExtension"					Value="16"			ID="6203"	/>
				<Flag       InternalName ="DirBrowseShowLongDate"					Value="32"			ID="6204"	/>
				<Flag       InternalName ="EnableDefaultDoc"						Value="1073741824"	ID="6206"	/>
			</Property>
			<Property       InternalName ="FilterFlags"						ID="2044"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"													DefaultValue="0"					EndingNumber="0">
				<Flag       InternalName ="NotifySecurePort"						Value="1"			ID="6253"	/>
				<Flag       InternalName ="NotifyNonSecurePort"						Value="2"			ID="6254"	/>
				<Flag       InternalName ="NotifyReadRawData"						Value="32768"		ID="6255"	/>
				<Flag       InternalName ="NotifyPreProcHeaders"					Value="16384"		ID="6256"	/>
				<Flag       InternalName ="NotifyAuthentication"					Value="8192"		ID="6257"	/>
				<Flag       InternalName ="NotifyUrlMap"							Value="4096"		ID="6258"	/>
				<Flag       InternalName ="NotifyAccessDenied"						Value="2048"		ID="6259"	/>
				<Flag       InternalName ="NotifySendResponse"						Value="64"			ID="6260"	/>
				<Flag       InternalName ="NotifySendRawData"						Value="1024"		ID="6261"	/>
				<Flag       InternalName ="NotifyLog"								Value="512"			ID="6262"	/>
				<Flag       InternalName ="NotifyEndOfRequest"						Value="128"			ID="6263"	/>
				<Flag       InternalName ="NotifyEndOfNetSession"					Value="256"			ID="6264"	/>
				<Flag       InternalName ="NotifyOrderHigh"							Value="524288"		ID="6265"	/>
				<Flag       InternalName ="NotifyOrderMedium"						Value="262144"		ID="6266"	/>
				<Flag       InternalName ="NotifyOrderLow"							Value="131072"		ID="6267"	/>
				<Flag       InternalName ="NotifyAuthComplete"						Value="67108864"	ID="6290"	/>
				<Flag       InternalName ="NotifyExtensionTrigger"					Value="33554432"	ID="6291"	/>
			</Property>
			<Property       InternalName ="LogExtFileFlags"					ID="4013"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="INHERIT"							MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"													DefaultValue="LogExtFileTime | LogExtFileClientIp | LogExtFileMethod | LogExtFileUriStem | LogExtFileHttpStatus"			EndingNumber="0">
				<Flag       InternalName ="LogExtFileDate"							Value="1"			ID="6234"	/>
				<Flag       InternalName ="LogExtFileHost"                          Value="1048576"     ID="6287"   />
				<Flag       InternalName ="LogExtFileTime"							Value="2"			ID="6235"	/>
				<Flag       InternalName ="LogExtFileClientIp"						Value="4"			ID="6236"	/>
				<Flag       InternalName ="LogExtFileUserName"						Value="8"			ID="6237"	/>
				<Flag       InternalName ="LogExtFileSiteName"						Value="16"			ID="6238"	/>
				<Flag       InternalName ="LogExtFileComputerName"					Value="32"			ID="6239"	/>
				<Flag       InternalName ="LogExtFileServerIp"						Value="64"			ID="6240"	/>
				<Flag       InternalName ="LogExtFileMethod"						Value="128"			ID="6241"	/>
				<Flag       InternalName ="LogExtFileUriStem"						Value="256"			ID="6242"	/>
				<Flag       InternalName ="LogExtFileUriQuery"						Value="512"			ID="6243"	/>
				<Flag       InternalName ="LogExtFileHttpStatus"					Value="1024"		ID="6244"	/>
				<Flag       InternalName ="LogExtFileWin32Status"					Value="2048"		ID="6245"	/>
				<Flag       InternalName ="LogExtFileBytesSent"						Value="4096"		ID="6246"	/>
				<Flag       InternalName ="LogExtFileBytesRecv"						Value="8192"		ID="6247"	/>
				<Flag       InternalName ="LogExtFileTimeTaken"						Value="16384"		ID="6248"	/>
				<Flag       InternalName ="LogExtFileServerPort"					Value="32768"		ID="6249"	/>
				<Flag       InternalName ="LogExtFileUserAgent"						Value="65536"		ID="6250"	/>
				<Flag       InternalName ="LogExtFileCookie"						Value="131072"		ID="6251"	/>
				<Flag       InternalName ="LogExtFileReferer"						Value="262144"		ID="6252"	/>
				<Flag       InternalName ="LogExtFileProtocolVersion"				Value="524288"		ID="6268"	/>
			</Property>
			<Property		InternalName ="PasswordChangeFlags" 						ID="2068"	Type="DWORD"		UserType="IIS_MD_UT_SERVER" 	Attributes="INHERIT"   MetaFlagsEx="CACHE_PROPERTY_MODIFIED"	EndingNumber="0">
				<Flag		InternalName ="AuthChangeUnsecure"							Value="1"       ID="6292"   />
				<Flag		InternalName ="AuthChangeDisable"							Value="2"       ID="6293"   />
				<Flag		InternalName ="AuthAdvNotifyDisable"						Value="4"       ID="6294"   />
			</Property>
			<Property       InternalName ="ServerConfigFlags"				ID="1027"	Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED"													DefaultValue="0"					EndingNumber="0">
				<Flag       InternalName ="ServerConfigSSL40"						Value="1"			ID="6223"	/>
				<Flag       InternalName ="ServerConfigSSL128"						Value="2"			ID="6224"	/>
				<Flag       InternalName ="ServerConfigSSLAllowEncrypt"				Value="4"			ID="6225"	/>
				<Flag       InternalName ="ServerConfigAutoPWSync"					Value="8"			ID="6226"	/>
			</Property>
            <Property       InternalName ="AspAppServiceFlags"              ID="7044"   Type="DWORD"    UserType="ASP_MD_UT_APP"    Attributes="INHERIT"     MetaFlagsEx="CACHE_PROPERTY_MODIFIED" DefaultValue="0">
                <Flag       InternalName ="AspEnableTracker"                        Value="1"           ID="7045"   />
                <Flag       InternalName ="AspEnableSxs"                            Value="2"           ID="7046"   />
                <Flag       InternalName ="AspUsePartition"                         Value="4"           ID="7047"   />
            </Property>	                                                 		
		</Collection>
		<Collection         InternalName ="IIsInheritedProperties"	InheritsPropertiesFrom="IIsConfigObject" MetaFlags="HIDDEN" >
		</Collection>
		<Collection         InternalName ="IIsObject"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsComputer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsWebService,IIsFtpService,IIsMimeMap,IIsNntpService,IIsSmtpService,IIsPop3Service,IIsImapService"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages global metabase properties that determine how IIS operates" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidthBlocked"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_1001"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:EnableHistory"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxHistoryFiles"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:EnableEditWhileRunning"/>
		</Collection>
		<Collection         InternalName ="IIsWebService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsWebInfo,IIsWebServer,IIsFilters,IIsApplicationPools"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages inheritable metabase properties for Web sites and Web virtual directories." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IgnoreTranslate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowKeepAlive"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CertCheckMode"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DownlevelAdminInstance"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateTimeSlice"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NetLogonWorkstation"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseHostName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PutReadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordExpirePrenotifyDays"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordCacheTTL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordChangeFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCAuthenticationPassThrough"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ProcessNTCRIfLoggedOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowPathInfoForScriptMappings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:InProcessIsapiApps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGILimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitLogEvent"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitPriority"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitProcStop"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitPause"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitsEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAppEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGIEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SslUseDsMapper"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSLStoreName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CalVcPerConnect"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CalLimitHttpError"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CalReserveTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CalSSLReserveTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_AUTH_CHANGE_URL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_AUTH_EXPIRED_URL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_AUTH_NOTIFY_PWD_EXP_URL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_AUTH_EXPIRED_UNSECUREURL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_AUTH_NOTIFY_PWS_EXP_UNSECUREURL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_APP_LAST_OUTPROC_PID"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_ETAG_CHANGENUMBER"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AdminServer"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StandardAppModeEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxGlobalBandwidth"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxGlobalConnections"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinFileKbSec"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HeaderWaitTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogInUTF8"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DavEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationFreshnessTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationURLRetrievalTimeout"/>
		</Collection>
		<Collection         InternalName ="IIsFtpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFtpInfo,IIsFtpServer"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages the metabase properties that control FTP sites and FTP virtual directories."  >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogNonAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExitMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:GreetingMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxClientsMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MSDOSDirOutput"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DownlevelAdminInstance"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:BannerMessage"/>
		</Collection>
		<Collection         InternalName ="IIsWebServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsCertMapper,IIsFilters,IIsWebVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages metabase properties that apply to a specific Web virtual server, and to set inheritable metabase properties for virtual directories, Web directories, and Web files." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowKeepAlive"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IgnoreTranslate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CertCheckMode"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateTimeSlice"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NetLogonWorkstation"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseHostName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PutReadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordExpirePrenotifyDays"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordCacheTTL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordChangeFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidthBlocked"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCAuthenticationPassThrough"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitsEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULoggingMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGILimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitLogEvent"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitPriority"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitProcStop"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimitPause"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAppEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGIEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NotDeletable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSLStoreName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ProcessNTCRIfLoggedOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowPathInfoForScriptMappings"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerCommand"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_ISM_ACCESS_CHECK"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DavEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationFreshnessTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationURLRetrievalTimeout"/>
		</Collection>
		<Collection         InternalName ="IIsFtpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages metabase properties that apply to a specific FTP server and to set inheritable metabase properties for FTP virtual directories." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogNonAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExitMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:GreetingMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxClientsMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MSDOSDirOutput"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:BannerMessage"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:UserIsolationMode"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FtpLogInUtf8"/>
		</Collection>
		<Collection         InternalName ="IIsWebFile"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY"    Description="Manages metabase key values that apply to a file in a Web directory for a Web server." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCAuthenticationPassThrough"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IgnoreTranslate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PutReadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAppEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGIEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DavEnabled"/>
		</Collection>
		<Collection         InternalName ="IIsWebDirectory"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsWebDirectory,IIsWebVirtualDir,IIsWebFile,IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Is used to set metabase properties that apply to one or more Web directories for a Web server." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IgnoreTranslate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PutReadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCAuthenticationPassThrough"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAppEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGIEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateTimeSlice"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DavEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
		</Collection>
		<Collection         InternalName ="IIsWebVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsWebDirectory,IIsWebFile,IIsWebVirtualDir,IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" Description="Manages metabase properties that apply to one or all virtual directories for a Web site." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IgnoreTranslate"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PutReadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCAuthenticationPassThrough"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAppEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CPUCGIEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateTimeSlice"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateSleepMax"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspThreadGateLoadHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DavEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
		</Collection>
		<Collection         InternalName ="IIsFtpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsFtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"     Description="Manages metabase properties that apply to one or all FTP virtual directories for an FTP server." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
		</Collection>
		<Collection         InternalName ="IIsFilter"    ContainerClassList="IIsCompressionScheme"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterPath"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterDescription"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
		</Collection>
		<Collection         InternalName ="IIsFilters"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFilter,IIsCompressionSchemes"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FilterLoadOrder"/>
		</Collection>
		<Collection         InternalName ="IIsCompressionScheme"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDynamicCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoStaticCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoOnDemandCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcFileExtensions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcScriptFileExtensions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcMimeType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcPriority"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDynamicCompressionLevel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcOnDemandCompLevel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcCreateFlags"/>
		</Collection>
		<Collection         InternalName ="IIsCompressionSchemes"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsCompressionScheme"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcCacheControlHeader"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcExpiresHeader"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDynamicCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoStaticCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoOnDemandCompression"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDiskSpaceLimiting"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForHttp10"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForProxies"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForRange"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcSendCacheHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcMaxDiskSpaceUsage"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcIoBufferSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionBufferSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcMaxQueueLength"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcFilesDeletedPerDiskFree"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HcMinFileSizeForComp"/>
		</Collection>
		<Collection         InternalName ="IIsCertMapper"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY"    Description="Maps client certificates to Windows user accounts." >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsMimeMap"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
		</Collection>
		<Collection         InternalName ="IIsLogModules"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsLogModule,IIsCustomLogModule"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
		</Collection>
		<Collection         InternalName ="IIsLogModule"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleId"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleUiId"/>
		</Collection>
		<Collection         InternalName ="IIsCustomLogModule"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyHeader"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyDataType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyServicesString"/>
		</Collection>
		<Collection         InternalName ="IIsWebInfo"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerConfigFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CustomErrorDescriptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminServer"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
		</Collection>
		<Collection         InternalName ="IIsFtpInfo"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
		</Collection>
		<Collection         InternalName ="IIsNntpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpInfo,IIsNntpServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HonorClientMsgIds"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServer"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminEmail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowClientPosts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowFeedPosts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowControlMsgs"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultModeratorDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NntpCommandLogMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableNewNews"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostHardLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostSoftLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostHardLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostSoftLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedReportPeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSearchResults"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NntpServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownLatency"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ArticleTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HistoryExpiration"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NewsCrawlerTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:GroupVarListFile"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
		</Collection>
		<Collection         InternalName ="IIsNntpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpVirtualDir,IIsNntpRebuild,IIsNntpSessions,IIsNntpFeeds,IIsNntpExpiration,IIsNntpGroups"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HonorClientMsgIds"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServer"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminEmail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowClientPosts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowFeedPosts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowControlMsgs"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultModeratorDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NntpCommandLogMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableNewNews"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostHardLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostSoftLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostHardLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostSoftLimit"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NewsPickupDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NewsFailedPickupDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NewsDropDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedReportPeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSearchResults"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NntpUucpName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NntpServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:GroupHelpFile"			MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:GroupListFile"			MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ArticleTableFile"		MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HistoryTableFile"		MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ListFile"			    MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ModeratorFile"			MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:XoverTableFile"		MetaFlagsEx="MANDATORY"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PrettyNamesFile"		MetaFlagsEx="MANDATORY"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:GroupVarListFile"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ArticleTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HistoryExpiration"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NewsCrawlerTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownLatency"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NntpOrganization"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NntpClearTextProvider"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
		</Collection>
		<Collection         InternalName ="IIsNntpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:VrDoExpire"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:VrUseAccount"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:VrOwnModerator"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:VrDriverProgid"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FsPropertyPath"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ExMdbGuid"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:VrDriverClsid"/>
		</Collection>
		<Collection         InternalName ="IIsNntpInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpInfo,IIsSmtpServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDnsLookup"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldDeliver"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AlwaysUseSsl"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LimitRemoteConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHostType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DoMasquerade"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpPort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpSecurePort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HopCount"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnectionsPerDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMessageSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSessionSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRecipients"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryAttempts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryAttempts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnDays"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBatchedMessages"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHost"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FullyQualifiedDomainName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DropDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:BadMailDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PickupDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:QueueDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MasqueradeDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SendNdrTo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SendBadTo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingSources"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DomainRouting"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SaslLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteProgressiveRetry"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalDelayExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalNDRExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteDelayExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteNDRExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteRetryThreshold"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNLanguageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAdvQueueDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpInboundCommandSupportOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpOutboundCommandSupportOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpCommandLogMask"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpFlushMailFile"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpConnectTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailFromTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRcptToTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDataTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpBdatTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAuthTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSaslTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpTurnTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRsetTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloTimeout"/>
			<Property     		InheritsPropertiesFrom ="IIsConfigObject:LocalDomains"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpUseTcpDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDotStuffPickupDirFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDomainValidationFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLRequireTrustedCA"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLCertHostnameValidation"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMailObjects"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPickupMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxDirChangeIOSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NameResolutionType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSmtpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineIn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineOut"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectResponse"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedFQDN"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedDefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnSubdomains"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMaxRemoteQThreads"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDisableRelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloNoDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailNoHelo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAqueueWait"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AddNoHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpEventlogLevel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpVirtualDir,IIsSmtpRoutingSource,IIsSmtpDomain,IIsSmtpSessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDnsLookup"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldDeliver"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AlwaysUseSsl"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LimitRemoteConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHostType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DoMasquerade"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpPort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpSecurePort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:HopCount"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnectionsPerDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMessageSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSessionSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRecipients"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryAttempts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryAttempts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnDays"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBatchedMessages"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHost"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FullyQualifiedDomainName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DropDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:BadMailDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PickupDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:QueueDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MasqueradeDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SendNdrTo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SendBadTo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingSources"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DomainRouting"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SaslLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteProgressiveRetry"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalDelayExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalNDRExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteDelayExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteNDRExpireMinutes"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteRetryThreshold"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNLanguageID"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpInboundCommandSupportOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpOutboundCommandSupportOptions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpConnectTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailFromTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRcptToTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDataTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpBdatTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAuthTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSaslTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpTurnTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRsetTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PostmasterName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PostmasterEmail"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LocalDomains"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpUseTcpDns"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDotStuffPickupDirFiles"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDomainValidationFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLRequireTrustedCA"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLCertHostnameValidation"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMailObjects"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPickupMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxDirChangeIOSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NameResolutionType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSmtpErrors"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineIn"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineOut"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectResponse"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedFQDN"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedDefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnSubdomains"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMaxRemoteQThreads"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDisableRelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloNoDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailNoHelo"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAqueueWait"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AddNoHeaders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpEventlogLevel"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpDomain"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsSmtpDomain"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteActionString"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthTurnList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:CSideEtrnDomains"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpRoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRoutingTableType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDataDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDefaultMailRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsBindType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsSchemaType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsHost"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsNamingContext"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsAccount"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsUseCat"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsPort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsFlags"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
		</Collection>
		<Collection         InternalName ="IIsPop3Service"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3Info,IIsPop3Server"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingSources"/>
		</Collection>
		<Collection         InternalName ="IIsPop3Server"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3VirtualDir,IIsPop3RoutingSource,IIsPop3Sessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingSources"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
		</Collection>
		<Collection         InternalName ="IIsPop3VirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3VirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
		</Collection>
		<Collection         InternalName ="IIsPop3RoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingTableType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsDataDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsDefaultMailRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsBindType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsSchemaType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsHost"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsNamingContext"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsAccount"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsPassword"/>
		</Collection>
		<Collection         InternalName ="IIsPop3Info"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
		</Collection>
		<Collection         InternalName ="IIsImapService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapInfo,IIsImapServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingSources"/>
		</Collection>
		<Collection         InternalName ="IIsImapServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapVirtualDir,IIsImapRoutingSource,IIsImapSessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapServiceVersion"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireDelay"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapClearTextProvider"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDefaultDomain"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingDll"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingSources"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
		</Collection>
		<Collection         InternalName ="IIsImapVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
		</Collection>
		<Collection         InternalName ="IIsImapRoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingTableType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsDataDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsDefaultMailRoot"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsBindType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsSchemaType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsHost"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsNamingContext"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsAccount"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsPassword"/>
		</Collection>
		<Collection         InternalName ="IIsImapInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
		</Collection>
		<Collection         InternalName ="IIsNntpRebuild"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsNntpSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsNntpFeeds"    ContainerClassList="IIsNntpFeed"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FeedPeerTempDirectory"/>
		</Collection>
		<Collection         InternalName ="IIsNntpFeed"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedServerName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNewsgroups"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedSecurityType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAuthenticationType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAccountName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPassword"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedStartTimeHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedStartTimeLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAllowControlMsgs"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedCreateAutomatically"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedDisabled"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedDistribution"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedConcurrentSessions"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedMaxConnectionAttempts"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedUucpName"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedTempDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNextPullHigh"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNextPullLow"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPeerTempDirectory"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPeerGapSize"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedOutgoingPort"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedFeedpairId"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedHandshake"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAdminError"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:FeedErrParmMask"/>
		</Collection>
		<Collection         InternalName ="IIsNntpExpiration"    ContainerClassList="IIsNntpExpire"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsNntpExpire"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireSpace"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireTime"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireNewsgroups"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:ExpirePolicyName"/>
		</Collection>
		<Collection         InternalName ="IIsNntpGroups"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsSmtpSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsPop3Sessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection         InternalName ="IIsImapSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection 		InternalName ="IIS_FTP_TEMPLATE"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
		</Collection>
		<Collection 		InternalName ="IIS_FTP_TEMPLATESETTINGS"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
		</Collection>
		<Collection 		InternalName ="IIS_WEB_TEMPLATE"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
		</Collection>
		<Collection 		InternalName ="IIS_WEB_TEMPLATESETTINGS"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
		</Collection>
		<Collection 		InternalName ="IIS_ADMIN"	 InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_IISADMIN_EXTENSIONS"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_METADATA_ID_REGISTRATION"/>
		</Collection>
		<Collection 		InternalName ="IIS_EVENTMANAGER"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MD_0"/>
		</Collection>
		<Collection 		InternalName ="IIS_ROOT"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
		</Collection>
		<Collection 		InternalName ="IIS_Global"		InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SessionKey"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ChangeNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HistoryMajorVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HistoryMinorVersionNumber"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:XMLSchemaTimeStamp"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:BINSchemaTimeStamp"/>
		</Collection>
		<Collection 		InternalName ="IIsSmtpAlias"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection 		InternalName ="IIsSmtpDL"		InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection 		InternalName ="IIsSmtpUser"		InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
		</Collection>
		<Collection 		InternalName ="IIsStreamFilter"	InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
		</Collection>
		<Collection 		InternalName ="IIsApplicationPool"	MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"   ContainerClassList="" InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolFriendlyName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartRequests"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxProcesses"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolQueueLength"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPULimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolIdentityType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartMemory"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolCommand"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolState"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolAutoStart"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartSchedule"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartConnections"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
		</Collection>
		<Collection 		InternalName ="IIsApplicationPools"	MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsApplicationPool,IIsStreamFilter"  InheritsPropertiesFrom="MetabaseBaseClass" >
			<Property		InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartRequests"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxProcesses"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolQueueLength"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPULimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolIdentityType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartMemory"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisablePublishing"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolAutoStart"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartSchedule"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartConnections"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
		</Collection>

		<Collection 		InternalName ="MBProperty" MetaFlags="HIDDEN" >
			<Property		InternalName ="Name"						Type="WSTR"	 MetaFlags="PRIMARYKEY"/>
			<Property		InternalName ="Type"						Type="UI4">
				<Enum		InternalName ="DWORD"						Value="1"/>
				<Enum		InternalName ="STRING"						Value="2"/>
				<Enum		InternalName ="BINARY"						Value="3"/>
				<Enum		InternalName ="EXPANDSZ"					Value="4"/>
				<Enum		InternalName ="MULTISZ" 					Value="5"/>
			</Property>
			<Property		InternalName ="Attributes"					Type="UI4"  DefaultValue="NO_ATTRIBUTES">
				<Flag		InternalName ="NO_ATTRIBUTES"				Value="0"/>
				<Flag		InternalName ="INHERIT" 					Value="1"/>
				<Flag		InternalName ="PARTIAL_PATH"				Value="2"/>
				<Flag		InternalName ="SECURE"						Value="4"/>
				<Flag		InternalName ="REFERENCE"					Value="8"/>
				<Flag		InternalName ="VOLATILE"					Value="16"/>
				<Flag		InternalName ="ISINHERITED" 				Value="32"/>
				<Flag		InternalName ="INSERT_PATH" 				Value="64"/>
				<Flag		InternalName ="LOCAL_MACHINE_ONLY"			Value="128"/>
			</Property>
			<Property		InternalName ="Value"						Type="BYTES"/>
			<Property		InternalName ="Location"					Type="WSTR"	 MetaFlags="PRIMARYKEY"/>
			<Property		InternalName ="ID"							Type="UI4"	/>
			<Property		InternalName ="UserType"					Type="UI4"	 DefaultValue="UNKNOWN_UserType">
				<Enum		InternalName ="UNKNOWN_UserType"			Value="0"	/>
				<Enum		InternalName ="IIS_MD_UT_SERVER"			Value="1"	/>
				<Enum		InternalName ="IIS_MD_UT_FILE"				Value="2"	/>
				<Enum		InternalName ="IIS_MD_UT_WAM"				Value="100"	/>
				<Enum		InternalName ="ASP_MD_UT_APP"				Value="101"	/>
			</Property>
			<Property		InternalName ="LocationID"					Type="UI4"	 MetaFlags="NOTPERSISTABLE"/>
			<Property		InternalName ="Group"						Type="UI4"	 MetaFlags="PRIMARYKEY">
				<Enum		InternalName ="IIsConfigObject"/>
				<Enum		InternalName ="IIsObject"/>
				<Enum		InternalName ="IIsComputer"/>
				<Enum		InternalName ="IIsWebService"/>
				<Enum		InternalName ="IIsFtpService"/>
				<Enum		InternalName ="IIsWebServer"/>
				<Enum		InternalName ="IIsFtpServer"/>
				<Enum		InternalName ="IIsWebFile"/>
				<Enum		InternalName ="IIsWebDirectory"/>
				<Enum		InternalName ="IIsWebVirtualDir"/>
				<Enum		InternalName ="IIsFtpVirtualDir"/>
				<Enum		InternalName ="IIsFilter"/>
				<Enum		InternalName ="IIsFilters"/>
				<Enum		InternalName ="IIsCompressionScheme"/>
				<Enum		InternalName ="IIsCompressionSchemes"/>
				<Enum		InternalName ="IIsCertMapper"/>
				<Enum		InternalName ="IIsMimeMap"/>
				<Enum		InternalName ="IIsLogModule"/>
				<Enum		InternalName ="IIsLogModules"/>
				<Enum		InternalName ="IIsCustomLogModule"/>
				<Enum		InternalName ="IIsWebInfo"/>
				<Enum		InternalName ="IIsFtpInfo"/>
				<Enum		InternalName ="IIsNntpService"/>
				<Enum		InternalName ="IIsNntpServer"/>
				<Enum		InternalName ="IIsNntpVirtualDir"/>
				<Enum		InternalName ="IIsNntpInfo"/>
				<Enum		InternalName ="IIsSmtpService"/>
				<Enum		InternalName ="IIsSmtpServer"/>
				<Enum		InternalName ="IIsSmtpVirtualDir"/>
				<Enum		InternalName ="IIsSmtpDomain"/>
				<Enum		InternalName ="IIsSmtpRoutingSource"/>
				<Enum		InternalName ="IIsSmtpInfo"/>
				<Enum		InternalName ="IIsPop3Service"/>
				<Enum		InternalName ="IIsPop3Server"/>
				<Enum		InternalName ="IIsPop3VirtualDir"/>
				<Enum		InternalName ="IIsPop3RoutingSource"/>
				<Enum		InternalName ="IIsPop3Info"/>
				<Enum		InternalName ="IIsImapService"/>
				<Enum		InternalName ="IIsImapServer"/>
				<Enum		InternalName ="IIsImapVirtualDir"/>
				<Enum		InternalName ="IIsImapRoutingSource"/>
				<Enum		InternalName ="IIsImapInfo"/>
				<Enum		InternalName ="IIsNntpRebuild"/>
				<Enum		InternalName ="IIsNntpSessions"/>
				<Enum		InternalName ="IIsNntpFeeds"/>
				<Enum		InternalName ="IIsNntpFeed"/>
				<Enum		InternalName ="IIsNntpExpire"/>
				<Enum		InternalName ="IIsNntpExpiration"/>
				<Enum		InternalName ="IIsNntpGroups"/>
				<Enum		InternalName ="IIsSmtpSessions"/>
				<Enum		InternalName ="IIsPop3Sessions"/>
				<Enum		InternalName ="IIsImapSessions"/>
				<Enum		InternalName ="IIS_Global"/>
				<Enum		InternalName ="IIS_ROOT"/>
				<Enum		InternalName ="IIS_FTP_TEMPLATE"/>
				<Enum		InternalName ="IIS_FTP_TEMPLATESETTINGS"/>
				<Enum		InternalName ="IIS_WEB_TEMPLATE"/>
				<Enum		InternalName ="IIS_WEB_TEMPLATESETTINGS"/>
				<Enum		InternalName ="IIS_ADMIN"/>
				<Enum		InternalName ="IIS_EVENTMANAGER"/>
				<Enum		InternalName ="IIsSmtpAlias"/>
				<Enum		InternalName ="IIsSmtpDL"/>
				<Enum		InternalName ="IIsSmtpUser"/>
				<Enum		InternalName ="IIsStreamFilter"/>
				<Enum		InternalName ="IIsApplicationPool"/>
				<Enum		InternalName ="IIsApplicationPools"/>
				<Enum		InternalName ="IIsInheritedProperties"/>
				<Enum		InternalName ="Custom"/>
			</Property>
			<ServerWiring	Interceptor ="Core_MetabaseInterceptor"/>
		</Collection>
		<Collection 		InternalName ="MBPropertyDiff" MetaFlags="HIDDEN" >
			<Property		InheritsPropertiesFrom ="MBProperty:Name"/>
			<Property		InheritsPropertiesFrom ="MBProperty:Type"/>
			<Property		InheritsPropertiesFrom ="MBProperty:Attributes"/>
			<Property		InheritsPropertiesFrom ="MBProperty:Value"/>
			<Property		InheritsPropertiesFrom ="MBProperty:Location"/>
			<Property		InheritsPropertiesFrom ="MBProperty:ID"/>
			<Property		InheritsPropertiesFrom ="MBProperty:UserType"/>
			<Property		InheritsPropertiesFrom ="MBProperty:LocationID"/>
			<Property		InternalName ="Directive"					Type="UI4"	>
				<Enum		InternalName="Insert"						Value="1"	/>
				<Enum		InternalName="Update"						Value="2"	/>
				<Enum		InternalName="Delete"						Value="3"	/>
				<Enum		InternalName="DeleteNode"					Value="4"	/>
			</Property>
			<Property		InheritsPropertiesFrom ="MBProperty:Group"/>
			<ServerWiring	Interceptor ="Core_MetabaseDifferencingInterceptor"/>
		</Collection>
	</DatabaseMeta> 

	<DatabaseMeta			InternalName="IIS">
		<ServerWiring		Interceptor="Core_XMLInterceptor"/>

		<Collection 		InternalName="APPPOOLS" 										MetaFlags="STOREDELTAS" MetaFlagsEx="EMITCLBBLOB">
			<Property		InternalName="AppPoolID"						Type="WSTR" 	MetaFlags="PRIMARYKEY CASEINSENSITIVE"		/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartRequests"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxProcesses"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RunAsLocalSystem"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolQueueLength"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolFriendlyName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartSchedule"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolIdentityType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUAction"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPULimit"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartMemory"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolCommand"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolState"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolAutoStart"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_WriteInterceptor"		Locator="0" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="0" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="0" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection 		InternalName="SITES"											MetaFlags="STOREDELTAS" MetaFlagsEx="EMITCLBBLOB">
			<Property		InternalName="SiteID"							Type="UI4"		MetaFlags="PRIMARYKEY"					/>
			<Property		InternalName="Bindings" 						Type="BYTES"	/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerCommand"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FilterFlags"/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_WriteInterceptor"		Locator="1" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="1" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="1" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection 		InternalName="APPS" 											MetaFlags="STOREDELTAS" MetaFlagsEx="EMITCLBBLOB"		>
			<Property		InternalName="AppRelativeURL"					Type="WSTR" 	MetaFlags="PRIMARYKEY CASEINSENSITIVE"	/>
			<Property		InternalName="SiteID"							Type="UI4"		MetaFlags="PRIMARYKEY"					/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_WriteInterceptor"		Locator="2" 	MetaFlags="First WireOnReadWrite"			/>
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="2" 	MetaFlags="First WireOnReadWrite"			/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="2" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection 		InternalName="GlobalW3SVC"										MetaFlags="STOREDELTAS" MetaFlagsEx="EMITCLBBLOB"		>
			<Property	    InternalName ="MaxGlobalBandwidth"				MetaFlags="PRIMARYKEY"  ID="9201"	    Type="DWORD"	UserType="IIS_MD_UT_SERVER"	Attributes="NO_ATTRIBUTES"						MetaFlagsEx="CACHE_PROPERTY_MODIFIED WAS_NOTIFICATION"									DefaultValue="4294967295"	/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MaxGlobalConnections"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:StandardAppModeEnabled"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:FilterFlags"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:HeaderWaitTimeout"/>
			<Property		InheritsPropertiesFrom ="IIsConfigObject:MinFileKbSec"/>
			<Property       InheritsPropertiesFrom ="IIsConfigObject:LogInUTF8"/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_WriteInterceptor"		Locator="3" 	MetaFlags="First WireOnReadWrite"			/>
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="3" 	MetaFlags="First WireOnReadWrite"			/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="3" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection 		InternalName="CHANGENUMBER" 									 MetaFlags="STOREDELTAS" MetaFlagsEx="EMITCLBBLOB"		 >
			<Property		InternalName="ChangeNumber" 					Type="UI4"		 MetaFlags="PRIMARYKEY"/>
			<Property	    InternalName="TimeStamp"	                    Type="BINARY"    />
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="4" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="4" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection 		InternalName="SESSIONKEY" 										MetaFlagsEx="EMITCLBBLOB"		 >
			<Property		InternalName="SessionKey" 						Type="BYTES"	MetaFlags="PRIMARYKEY"/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Ducttape_FileNameInterceptor" 	Locator="5" 	MetaFlags="First WireOnReadWrite"/>
			<ServerWiring	Interceptor ="Core_ComplibInterceptor"			Locator="5" 	MetaFlags="First WireOnReadWrite"/>
		</Collection>
		<Collection			InternalName="Dirs"											MetaFlagsEx="EMITXMLSCHEMA"
							PublicName="DirList"										PublicRowName="Dir"
							ItemClass="System.Configuration.ASP.DirListConfigItem"				>
			<Property		InternalName="URL"								Type="WSTR" 	MetaFlags="PRIMARYKEY"					/>
			<Property		InternalName="Dir"								Type="WSTR" 	/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Core_XMLInterceptor"				Locator="0" 	/>
		</Collection>
		<Collection 		InternalName="VDir" 							MetaFlagsEx="EMITXMLSCHEMA"
							PublicName="VDirList"							PublicRowName="VDir"
							ItemClass="System.Configuration.ASP.VDirListConfigItem" 			>
			<Property		InternalName="ParentURL"						Type="WSTR" 	MetaFlags="PRIMARYKEY"/>
			<Property		InternalName="ChildRelURL"						Type="WSTR" 	/>
			<Property		InternalName="VDir" 							Type="WSTR" 	/>
			<QueryMeta		InternalName="All"								MetaFlags="ALL" />
			<ServerWiring	Interceptor ="Core_XMLInterceptor"				Locator="0" 	/>
		</Collection>
	</DatabaseMeta>

	<RelationMeta	PrimaryTable="SITES"			PrimaryColumns="SiteID" 			ForeignTable="APPS" 					ForeignColumns="SiteID" 				 /> 

</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\inc\netcfgschema.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:CatMeta.xms">
    <DatabaseMeta           InternalName="NetFrameworkv1">
	<ServerWiring Interceptor="Core_MergeInterceptor" Merger="PropertyOverride" />
	<ServerWiring       Interceptor="Core_XMLInterceptor"/>


    <!-- CLR configuration -->

        <Collection         InternalName="startup"         PublicName="startup"   PublicRowName="startup" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection             InternalName ="requiredRuntime"  PublicName="requiredRuntime" PublicRowName="requiredRuntime"
                 MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME GENERATECONFIGOBJECTS"
                 Description="Used by the CLR shim to identify the version of runtime required by a specific application. This setting overrides the default which is stored in the registry."
								    >
                 <Property          InternalName ="version"     Type="WSTR"     MetaFlags="" DefaultValue="" />

                 <Property          InternalName ="key1"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
                 <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

        <Collection         InternalName="runtime"         PublicName="runtime"   PublicRowName="runtime" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection             InternalName ="gcConcurrent"  PublicName="gcConcurrent" PublicRowName="gcConcurrent"
                 MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME GENERATECONFIGOBJECTS"
                 Description="Determines if CLR Garbage Collection should run concurrently or non-concurrently."
								    >
                 <Property          InternalName ="enabled"     Type="BOOL"     MetaFlags="" />

                 <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                 <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="assemblyBinding"         PublicName="assemblyBinding"   PublicRowName="assemblyBinding" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                 <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection             InternalName ="probing"  PublicName="probing" PublicRowName="probing"
                     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME"
                     Description="Tells the runtime where to probe for additional private assemblies."
								        >
                     <!-- this is really a multi-string attribute of semicolon separated paths -->
                     <Property       InternalName="privatePath"      Type="WSTR"      MetaFlags="" Description="Specifies multiple sub folders to the app that contain assemblies. Semicolon delimited relative paths." />

                     <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                     <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
                     <Property          InternalName ="key3"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
 
                     <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                <Collection             InternalName ="publisherPolicy"  PublicName="publisherPolicy" PublicRowName="publisherPolicy" Description="Specifies whether or not publisher policy stored in the GAC should be applied to the entire application or a specific dependency."
                     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                     <Property       InternalName="apply"      Type="BOOL" Description="Specifies whether or not to use the publisher policy. Defaults to true."  DefaultValue="true" />

                     <Property          InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                     <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
                     <Property          InternalName ="key3"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                     <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>


                <Collection             InternalName ="dependentAssembly"  PublicName="dependentAssembly" PublicRowName="dependentAssembly"
                     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME GENERATECONFIGOBJECTS"   ChildElementName="assemblyIdentity"
                                        >
                         <Property       InternalName="name"            Type="WSTR"      MetaFlags="PRIMARYKEY" MetaFlagsEx="VALUEINCHILDELEMENT"  Description="Specifies the name of the dependency." />
                         <Property       InternalName="publicKeyToken"  Type="WSTR"      MetaFlags="PRIMARYKEY" MetaFlagsEx="VALUEINCHILDELEMENT"  DefaultValue="" Description="Contains a hex value that specifies the strong name for this dependency." />
                         <Property       InternalName="culture"         Type="WSTR"      MetaFlags="PRIMARYKEY" MetaFlagsEx="VALUEINCHILDELEMENT"  DefaultValue="" Description="Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (&lt;language&gt;-&lt;country/region&gt;)" />

                         <Property       InternalName="version"         Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                         <Property       InternalName ="key2"           Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
 
                     <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                        <Collection     InternalName="bindingRedirect" PublicRowName="bindingRedirect" MetaFlagsEx="EMITXMLSCHEMA GENERATECONFIGOBJECTS NOTSCOPEDBYTABLENAME" PublicName="bindingRedirect" 
                                Description="Redirects requests for one version of an assembly to another version." >
                            <Property   InternalName = "oldVersion"               Type="WSTR" MetaFlags="PRIMARYKEY" Description="Specifies the version of the dependency that was originally requested." />
                            <Property   InternalName = "newVersion"               Type="WSTR" MetaFlags="" Description="Specifies the version of the dependency to use instead of the requested version." />

                             <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                             <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
                             <Property          InternalName ="id"       Type="UI4"     MetaFlags="PRIMARYKEY" DefaultValue="1" /> 
                             <Property       InternalName="name"      Type="WSTR"      MetaFlags="PRIMARYKEY" Description="Specifies the name of the dependency." />
                             <Property       InternalName="publicKeyToken"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" Description="Contains a hex value that specifies the strong name for this dependency." />
                             <Property       InternalName="culture"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" Description="Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (&lt;language&gt;-&lt;country/region&gt;)" />

                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                        <Collection     InternalName="codeBase" PublicRowName="codeBase" MetaFlagsEx="EMITXMLSCHEMA GENERATECONFIGOBJECTS NOTSCOPEDBYTABLENAME" PublicName="codeBase" 
                                Description="Indicates where a specific version of a dependent assembly can be found." >
                            <Property   InternalName = "version"               Type="WSTR" MetaFlags="PRIMARYKEY" Description="Specifies the version of the dependency for which this codebase applies." />
                            <Property   InternalName = "href"               Type="WSTR" Description="Specifies the url where this version of the dependency can be located for installation." />

                             <Property       InternalName="runtimeVersion"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                             <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />
                             <Property          InternalName ="id"       Type="UI4"     MetaFlags="PRIMARYKEY" DefaultValue="1" /> 
                             <Property       InternalName="name"      Type="WSTR"      MetaFlags="PRIMARYKEY" Description="Specifies the name of the dependency." />
                             <Property       InternalName="publicKeyToken"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" Description="Contains a hex value that specifies the strong name for this dependency." />
                             <Property       InternalName="culture"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" Description="Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (&lt;language&gt;-&lt;country/region&gt;)" />

                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

            <Collection             InternalName ="developerSettings"  PublicName="developerSettings" PublicRowName="developerSettings" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" 
                    Description="Tells the runtime if the development mode binding policy should be enabled." >
                 <Property          InternalName ="developerInstallation"   Type="BOOL"     MetaFlags="" DefaultValue="0" Description="A value of true enables the development mode binding policy. False uses regular binding policy (default)." />
                 <Property          InternalName ="BindingCompliance"       Type="BOOL"     MetaFlags="" DefaultValue="0" Description="" />
                 <Property          InternalName ="finalizeOnEEShutdown"    Type="BOOL"     MetaFlags="" DefaultValue="0" Description="" />
                 <Property          InternalName ="breakOnEELoad"           Type="BOOL"     MetaFlags="" DefaultValue="0" Description="" />

                 <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                 <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>


<!-- not in Beta 1

        <Collection     InternalName="WINDOWSINSTALLERTABLE" PublicRowName="Install" MetaFlagsEx="EMITXMLSCHEMA" PublicName="WindowsInstaller">
                <Property   InternalName = "Context"                    Type="WSTR" MetaFlags="PRIMARYKEY"/>
        </Collection>                        

-->

<!-- CLR code access security -->
        <Collection         InternalName="mscorlib"         PublicName="mscorlib"   PublicRowName="mscorlib" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

        <Collection         InternalName="security"         PublicName="security"   PublicRowName="security" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>


        <Collection         InternalName="PolicyLevel"     PublicName="policy"   PublicRowName="PolicyLevel"   MetaFlagsEx="">
            <Property       InternalName="version"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
        </Collection>

            <!-- BUGBUG: security schema is spec'd as <SecurityClasses friendlyname="type"/> -->
            <Collection         InternalName="securityClasses"         PublicName="SecurityClasses"   PublicRowName="SecurityClass" MetaFlagsEx="" >
                <Property       InternalName="Name"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                <Property       InternalName="Description"              Type="WSTR"      MetaFlags="" />
            
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="PolicyVersion"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <!-- TODO: nested codegroups! -->
            <Collection         InternalName="codeGroup"     PublicName="CodeGroup"   PublicRowName="CodeGroup"   MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                <Property       InternalName="value" PublicName="value" Type="XMLBLOB"      />
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="PolicyVersion"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
            </Collection>


                <Collection         InternalName="IMembershipCondition"     PublicName="IMembershipCondition"   PublicRowName="IMembershipCondition"   MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                    <Property       InternalName="className"                  Type="WSTR" PublicColumnName="class"     MetaFlags="" />
                    <Property       InternalName="version"                  Type="WSTR"     MetaFlags="" />
                    <Property       InternalName="Site"                     Type="WSTR"     MetaFlags="" Description="For SiteMembershipCondition" />
                    <Property       InternalName="x509Certificate"          Type="WSTR"     MetaFlags="" Description="For PublishedMembershipCondition" />
                    <Property       InternalName="PublicKeyBlob"                      Type="WSTR"     MetaFlags="" Description="For StrongNameMembershipCondition" />
                    <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="" Description="For StrongNameMembershipCondition" />
                    <Property       InternalName="AssemblyVersion"          Type="WSTR"     MetaFlags="" Description="For StrongNameMembershipCondition" />
                    <Property       InternalName="Url"                      Type="WSTR"     MetaFlags="" Description="For URLMembershipCondition" />
                    <Property       InternalName="Zone"                     Type="WSTR"     MetaFlags="" Description="For ZoneMembershipCondition" />
                    <Property       InternalName="HashValue"                Type="WSTR"     MetaFlags="" Description="For HashMembershipCondition" />
                    <Property       InternalName="HashAlgorithm"            Type="WSTR"     MetaFlags="" Description="For HashMembershipCondition" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="PolicyVersion"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
                </Collection>


            <Collection         InternalName="FullTrustAssembly"     PublicName="FullTrustAssemblies" PublicRowName="IMembershipCondition"  MetaFlagsEx="">
                <Property       InternalName="class" PublicName="className" PublicColumnName="class"                   Type="WSTR"     MetaFlags="PRIMARYKEY" />
                <Property       InternalName="version"                  Type="WSTR"     MetaFlags="" />
                <Property       InternalName="PublicKeyBlob"                      Type="WSTR"     MetaFlags="PRIMARYKEY" Description="For StrongNameMembershipCondition" />
                <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" Description="For StrongNameMembershipCondition" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="PolicyVersion"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
            </Collection>

            <Collection         InternalName="NamedPermissionSet"     PublicName="NamedPermissionSets" PublicRowName="PermissionSet"  MetaFlagsEx="">
                <Property       InternalName="className" PublicName="type" Type="WSTR" PublicColumnName="class"     MetaFlags="" />
                <Property       InternalName="version"                  Type="WSTR"     MetaFlags="" />
                <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                <Property       InternalName="Description"              Type="WSTR"     MetaFlags="" />
                <Property       InternalName="Unrestricted"             Type="BOOL"  MetaFlags="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="PolicyVersion"              Type="WSTR"     MetaFlags="PRIMARYKEY" />
            </Collection>

                <Collection         InternalName="Permission"     PublicName="Permission" PublicRowName="IPermission"  MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                    <Property       InternalName="className" PublicName="className" PublicColumnName="class" Type="WSTR"     MetaFlags="PRIMARYKEY" />
                    <Property       InternalName="version"                  Type="WSTR"     MetaFlags="" />
                    <Property       InternalName="Unrestricted"             Type="BOOL"  MetaFlags="" Description="For Environment,FileDialog, FileIO permission" />
                    <Property       InternalName="Read"                     Type="WSTR"     MetaFlags="" Description="For Environment,FileIO permission" />
                    <Property       InternalName="Write"                    Type="WSTR"     MetaFlags="" Description="For Environment,FileIO permission" />
                    <Property       InternalName="Append"                   Type="WSTR"     MetaFlags="" Description="For FileIO permission" />

                    <Property       InternalName="UserQuota"                Type="UI4"      MetaFlags="" Description="For IsolatedStorage permission" />
                    <Property       InternalName="Expiry"                   Type="WSTR"     MetaFlags="" Description="For IsolatedStorage permission" />
                    <Property       InternalName="Allowed"                  Type="WSTR"     MetaFlags="" Description="For IsolatedStorage permission" />

                    <Property       InternalName="Flags"                    Type="WSTR"     MetaFlags="" />

                    <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="PolicyVersion"              Type="WSTR"     MetaFlags="PRIMARYKEY" />
                </Collection>

                    <Collection         InternalName="ConnectAccess"     PublicName="ConnectAccess" PublicRowName="ConnectAccess"  MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                        <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="PolicyVersion"              Type="WSTR"     MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="className" PublicName="className" PublicColumnName="class" Type="WSTR"     MetaFlags="PRIMARYKEY" />
                    </Collection>

                        <Collection         InternalName="URI"     PublicName="URI" PublicRowName="URI"  MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                            <Property       InternalName="uri"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="PolicyVersion"              Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="className" PublicName="className" PublicColumnName="class" Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        </Collection>

                        <Collection         InternalName="EndPoint"     PublicName="EndPoint" PublicRowName="ENDPOINT"  MetaFlagsEx="NOTSCOPEDBYTABLENAME">
                            <Property       InternalName="host"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="protocol"                 Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="port"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="PolicyVersion"              Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="className" PublicName="className" PublicColumnName="class" Type="WSTR"     MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        </Collection>


<!-- per XSP config spec: -->

        <Collection         InternalName="configSections"         PublicName="configSections"   PublicRowName="configSections" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection         InternalName="section"         PublicName="section"   PublicRowName="section"   MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="section"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="type"             Type="WSTR"  />
                <Property       InternalName="allowDefinition"               Type="int32"      MetaFlags="" DefaultValue="Everywhere">
                    <Enum InternalName="Everywhere" Value="1" />
                    <Enum InternalName="MachineOnly" Value="2" />
                    <Enum InternalName="MachineToApplication" Value="3" />
                </Property>
                <Property       InternalName="allowLocation"  Type="StrictBool" DefaultValue="true" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="sectionGroup"         PublicName="sectionGroup"   PublicRowName="sectionGroup" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection         InternalName="sectionInGroup"         PublicName="sectionInGroup"   PublicRowName="section"   MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                    <Property       InternalName="type"             Type="WSTR"  />
                    <Property       InternalName="allowDefinition"               Type="int32"      MetaFlags="" DefaultValue="Everywhere">
                        <Enum InternalName="Everywhere" Value="1" />
                        <Enum InternalName="MachineOnly" Value="2" />
                        <Enum InternalName="MachineToApplication" Value="3" />
                    </Property>
                    <Property       InternalName="allowLocation"  Type="StrictBool" DefaultValue="true" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="groupName"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                <Collection         InternalName="sectionGroup2"         PublicName="sectionGroup2"   PublicRowName="sectionGroup2" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="groupName1"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="sectionInGroup2"         PublicName="sectionInGroup2"   PublicRowName="section"   MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="type"             Type="WSTR"  />
                        <Property       InternalName="allowDefinition"               Type="int32"      MetaFlags="" DefaultValue="Everywhere">
                            <Enum InternalName="Everywhere" Value="1" />
                            <Enum InternalName="MachineOnly" Value="2" />
                            <Enum InternalName="MachineToApplication" Value="3" />
                        </Property>
                        <Property       InternalName="allowLocation"  Type="StrictBool" DefaultValue="true" />

                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="groupName1"            Type="WSTR" MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="groupName2"            Type="WSTR" MetaFlags="PRIMARYKEY" />
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                        <Collection         InternalName="sectionGroup3"         PublicName="sectionGroup3"   PublicRowName="sectionGroup3" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                            <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="groupName1"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="groupName2"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                            <Collection         InternalName="sectionInGroup3"         PublicName="sectionInGroup3"   PublicRowName="section"   MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                                <Property       InternalName="name"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                                <Property       InternalName="type"             Type="WSTR"  />
                                <Property       InternalName="allowDefinition"               Type="int32"      MetaFlags="" DefaultValue="Everywhere">
                                    <Enum InternalName="Everywhere" Value="1" />
                                    <Enum InternalName="MachineOnly" Value="2" />
                                    <Enum InternalName="MachineToApplication" Value="3" />
                                </Property>
                                <Property       InternalName="allowLocation"  Type="StrictBool" DefaultValue="true" />

                                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                                <Property       InternalName="groupName1"             Type="WSTR" MetaFlags="PRIMARYKEY" />
                                <Property       InternalName="groupName2"            Type="WSTR" MetaFlags="PRIMARYKEY" />
                                <Property       InternalName="groupName3"            Type="WSTR" MetaFlags="PRIMARYKEY" />
                                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                            </Collection>




        <Collection         InternalName="system_web"         PublicName="system_web"   PublicRowName="system.web" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection         InternalName="httpModules"         PublicName="httpModules"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="name"             Type="WSTR" MetaFlags="" />
                <Property       InternalName="type"             Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="httpHandlers"         PublicName="httpHandlers"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="verb"                 Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="path"                 Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="type"                 Type="WSTR"  DefaultValue="" />
                <Property       InternalName="validate"             Type="WSTR"  DefaultValue="true" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

    <!-- looks like this is not in Beta 2 anymore. Confirming with ScottGu
            <Collection         InternalName="httphandlerfactories" PublicName="httphandlerfactories" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="4" />
                </Property>
                <Property       InternalName="verb"                 Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="path"                 Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="type"                 Type="WSTR"     DefaultValue="" />
                <Property       InternalName="phase"                Type="UI4"      DefaultValue="1" />

                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>
    -->

            <Collection         InternalName="sessionState"         PublicName="sessionState"   PublicRowName="sessionState" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="mode"               Type="int32"      MetaFlags="" DefaultValue="inproc">
                    <Enum InternalName="off" Value="1" />
                    <Enum InternalName="InProc" Value="2" />
                    <Enum InternalName="StateServer" Value="3" />
                    <Enum InternalName="SqlServer" Value="4" />
                </Property>
                <Property       InternalName="stateConnectionString"           Type="WSTR"      DefaultValue=""/>
                <Property       InternalName="sqlConnectionString"           Type="WSTR"      DefaultValue=""/>
                <Property       InternalName="cookieless"           Type="StrictBool"      DefaultValue="false"/>
                <Property       InternalName="timeout"              Type="int32"      DefaultValue="20"/>

                <Property       InternalName="key1"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="globalization"         PublicName="globalization"   PublicRowName="globalization" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="requestEncoding"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
                <Property       InternalName="responseEncoding"     Type="WSTR"      DefaultValue=""/>
                <Property       InternalName="fileEncoding"         Type="WSTR"      DefaultValue=""/>
                <Property       InternalName="culture"              Type="WSTR"      DefaultValue=""/>
                <Property       InternalName="uiCulture"            Type="WSTR"      DefaultValue=""/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property          InternalName ="key2"     Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00" />

                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>


            <Collection         InternalName="compilation"         PublicName="compilation"   PublicRowName="compilation" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="debug"            Type="StrictBool"     MetaFlags="" DefaultValue="false"/>
                <Property       InternalName="defaultLanguage"      Type="WSTR"     MetaFlags="" DefaultValue=""/>
                <Property       InternalName="explicit"      Type="StrictBool"     MetaFlags="" DefaultValue="false"/>
                <Property       InternalName="batch"      Type="StrictBool"     MetaFlags="" DefaultValue="false"/>
                <Property       InternalName="batchTimeout"      Type="int32"     MetaFlags="" DefaultValue="30"/>
                <Property       InternalName="numRecompilesBeforeAppRestart"      Type="int32"     MetaFlags="" DefaultValue="30"/>
                <Property       InternalName="strict"      Type="StrictBool"     MetaFlags="" DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>


                <Collection         InternalName="compilers"         PublicName="compilers"   PublicRowName="compiler" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
                    <Property       InternalName="language"             Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="extension"            Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="type"                 Type="WSTR"      DefaultValue=""/>
                    <Property       InternalName="compilerOptions"      Type="WSTR"      />
		            <Property       InternalName="warningLevel"         Type="int32"     />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                <Collection         InternalName="assemblies"         PublicName="assemblies"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>


                    <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                        <Enum       InternalName="add"                  Value="0" />
                        <Enum       InternalName="remove"               Value="1" />
                        <Enum       InternalName="clear"                Value="2" />
                    </Property>
                    <Property       InternalName="assembly"             Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

    <!-- not in Product anymore?
                <Collection         InternalName="namespaces"         PublicName="namespaces"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>

                    <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                        <Enum       InternalName="add"                  Value="0" />
                        <Enum       InternalName="remove"               Value="1" />
                        <Enum       InternalName="clear"                Value="2" />
                    </Property>
                    <Property       InternalName="namespace"             Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>
    -->

            <Collection         InternalName="web_trace"         PublicName="web_trace"   PublicRowName="trace" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="enabled"              Type="StrictBool"      MetaFlags="" DefaultValue="false"/>
                <Property       InternalName="requestLimit"         Type="UI4"       DefaultValue="10"/>
                <Property       InternalName="pageOutput"           Type="StrictBool"      DefaultValue="false"/>
                <Property       InternalName="traceMode"           Type="UI4"       DefaultValue="SortByTime">
                    <Enum       InternalName="SortByTime"           Value="1" />
                    <Enum       InternalName="SortByCategory"       Value="2" />
                </Property>
                <Property       InternalName="localOnly"           Type="StrictBool"      DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

    <!-- begin security -->

                <Collection         InternalName="authentication"         PublicName="authentication"   PublicRowName="authentication" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="mode"              Type="UI4"       MetaFlags="" DefaultValue="Windows">
                        <Enum       InternalName="None"                     Value="0" />
                        <Enum       InternalName="Windows"                  Value="1" />
                        <Enum       InternalName="Forms"                    Value="2" />
                        <Enum       InternalName="Passport"                 Value="3" />
                    </Property>

                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="forms"         PublicName="forms"   PublicRowName="forms" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
					    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                        <Property       InternalName="name"         Type="WSTR"      MetaFlags="" DefaultValue=".ASPXAUTH"/>
                        <Property       InternalName="loginUrl"     Type="WSTR"      MetaFlags="" DefaultValue=""/>
                        <Property       InternalName="protection"      Type="int32"      MetaFlags="" DefaultValue="All">
                            <Enum InternalName="All"        Value="0"/>
                            <Enum InternalName="None"       Value="2"/>
                            <Enum InternalName="Encryption" Value="3"/>
                            <Enum InternalName="Validation" Value="3"/>
                        </Property>
                        <Property       InternalName="timeout"      Type="int32"     MetaFlags="" DefaultValue="60"/>
                        <Property       InternalName="path"         Type="WSTR"      MetaFlags="" DefaultValue=""/>

                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                       <Collection          InternalName="credentials"         PublicName="credentials"   PublicRowName="credentials" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <!--       <Property       InternalName="loginurl"            Type="WSTR"      MetaFlags="" DefaultValue=""/>  not in B1? -->
                <!--        <Property       InternalName="credentialfile"      Type="WSTR"      MetaFlags="" DefaultValue=""/> not in B1? -->
                            <Property       InternalName="passwordFormat"      Type="int32"      MetaFlags="" DefaultValue="Clear">
                                <Enum InternalName="Clear" Value="1"/>
                                <Enum InternalName="SHA1" Value="2"/>
                                <Enum InternalName="MD5" Value="3"/>
                            </Property>
					        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					        <Property       InternalName="key4"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                           <Collection          InternalName="user"         PublicName="user"   PublicRowName="user" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                                <Property       InternalName="name"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                                <Property       InternalName="password"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
							    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
							    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
							    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
							    <Property       InternalName="key4"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                            </Collection>

                    <Collection         InternalName="passport"         PublicName="passport"   PublicRowName="passport" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
					    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="redirectUrl"  Type="WSTR"       MetaFlags="" DefaultValue="internal"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>


                <Collection         InternalName="authorization"            PublicName="authorization"      MetaFlagsEx="EMITXMLSCHEMA GENERATECONFIGOBJECTS" >
	                <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	                <ServerWiring       Interceptor="Core_XMLInterceptor"/>
                    <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                        <Enum       InternalName="allow"                  Value="0" />
                        <Enum       InternalName="deny"                   Value="1" />
                    </Property>
    <!--                <Property       InternalName="verbs"                    Type="WSTR"     MetaFlags="MULTISTRING TOLOWERCASE PRIMARYKEY"/> -->
                    <Property       InternalName="roles"                    Type="WSTR"     DefaultValue="" />
                    <Property       InternalName="users"                    Type="WSTR"     MetaFlags="" DefaultValue="" />

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

               <Collection         InternalName="identity"         PublicName="identity"   PublicRowName="identity" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="impersonate"    Type="StrictBool"      MetaFlags="" DefaultValue="false"/>
                    <Property       InternalName="userName"         Type="WSTR"      MetaFlags="" DefaultValue=""/>
                    <Property       InternalName="password"         Type="WSTR"      MetaFlags="" DefaultValue=""/>

                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                 <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
               </Collection>

    <!-- not in spec! not in Beta 2?
                    <Collection         InternalName="codeaccess"         PublicName="codeaccess"   PublicRowName="codeaccess" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="permissionset"              Type="WSTR"       MetaFlags="" />

					    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
					    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>
    -->

    <!-- end security -->

            <Collection         InternalName="web_iisFilter"      PublicName="iisFilter"    PublicRowName="iisFilter"     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="enableCookielessSessions" Type="StrictBool"     />

                <Property       InternalName="key1"                  Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="processModel"      PublicName="processModel"    PublicRowName="processModel"     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="enable"               Type="StrictBool"     />
                <Property       InternalName="timeout"              Type="WSTR"   DefaultValue="infinite" />
                <Property       InternalName="idleTimeout"          Type="WSTR"   DefaultValue="infinite" />
                <Property       InternalName="shutdownTimeout"      Type="WSTR"   DefaultValue="5"        />
                <Property       InternalName="requestLimit"         Type="WSTR"   DefaultValue="infinite" />
                <Property       InternalName="requestQueueLimit"    Type="WSTR"    DefaultValue="infinite" />
                <Property       InternalName="restartQueueLimit"    Type="WSTR"    DefaultValue="infinite" />
                <Property       InternalName="memoryLimit"          Type="WSTR"   DefaultValue="infinite" />
                <Property       InternalName="cpuMask"              Type="WSTR"    DefaultValue=""  />
                <Property       InternalName="webGarden"            Type="StrictBool"   DefaultValue="true"     />
                <Property       InternalName="userName"             Type="WSTR"   DefaultValue="" />
                <Property       InternalName="password"             Type="WSTR"   DefaultValue="" />
                <Property       InternalName="logLevel"             Type="WSTR"   DefaultValue="errors" />
                <Property       InternalName="clientConnectedCheck" Type="WSTR"   DefaultValue="0:00:05" />

                <Property       InternalName="key1"                  Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="customErrors"         PublicName="customErrors"   PublicRowName="customErrors" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
			    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
			    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="mode"              Type="UI4"       MetaFlags="" DefaultValue="On">
                    <Enum       InternalName="On"                       Value="0" />
                    <Enum       InternalName="Off"                      Value="1" />
                    <Enum       InternalName="RemoteOnly"               Value="2" />
                </Property>
                <Property       InternalName="defaultRedirect"             Type="WSTR" DefaultValue="" />
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection         InternalName="error"         PublicName="error"   PublicRowName="error" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="statusCode"              Type="WSTR"      MetaFlags="" DefaultValue=""/>
                    <Property       InternalName="redirect"             Type="WSTR"         DefaultValue="" />

			        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
			        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>


            <Collection         InternalName="pages"         PublicName="pages"   PublicRowName="pages" MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="buffer"           Type="StrictBool"      MetaFlags="" DefaultValue="true"/>
                <Property       InternalName="enableSessionState"              Type="UI4"      DefaultValue="true">
                    <Enum       InternalName="false"                    Value="0" />
                    <Enum       InternalName="true"                     Value="1" />
                    <Enum       InternalName="ReadOnly"                 Value="2" />
                </Property>
                <Property       InternalName="enableViewState"           Type="StrictBool"      MetaFlags="" DefaultValue="true"/>
                <Property       InternalName="enableViewStateMac"        Type="StrictBool"      MetaFlags="" DefaultValue="true"/>
                <Property       InternalName="pageBaseType"              Type="WSTR"      MetaFlags="" DefaultValue=""/>
                <Property       InternalName="userControlBaseType"       Type="WSTR"      MetaFlags="" DefaultValue=""/>
                <Property       InternalName="autoEventWireup"           Type="StrictBool"      MetaFlags="" DefaultValue="true"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="httpRuntime"         PublicName="httpRuntime"   PublicRowName="httpRuntime" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
			    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                <Property       InternalName="executionTimeout"              Type="UI4"       MetaFlags="" />
                <Property       InternalName="maxRequestLength"              Type="UI4"       MetaFlags="" />
                <Property       InternalName="useFullyQualifiedRedirectUrl"  Type="StrictBool"      MetaFlags="" />
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="machineKey"         PublicName="machineKey"   PublicRowName="machineKey" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="validationKey"           Type="WSTR"      MetaFlags="" DefaultValue="autogenerate"/>
                <Property       InternalName="decryptionKey"           Type="WSTR"      DefaultValue="autogenerate"/>
                <Property       InternalName="validation"              Type="UI4"      DefaultValue="SHA1">
                    <Enum       InternalName="SHA1"                  Value="1" />
                    <Enum       InternalName="MD5"                   Value="2" />
                    <Enum       InternalName="3DES"                  Value="3" />
                </Property>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="securityPolicy"         PublicName="securityPolicy"   PublicRowName="trustLevel" MetaFlagsEx="EMITXMLSCHEMA" >
                <Property       InternalName="name"                 Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="policyFile"           Type="WSTR"      DefaultValue=""/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

    <!-- per http://urtframeworks/specs/xsp/xsphosting.doc -->
            <Collection         InternalName="trust"      PublicName="trust"    PublicRowName="trust"     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="level"                  Type="WSTR"     MetaFlags="" />
                <Property       InternalName="originUrl"              Type="WSTR"     MetaFlags="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"      />
            </Collection>


            <Collection         InternalName="clientTarget"        PublicName="clientTarget"   MetaFlagsEx="" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	     	    <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="alias"                Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="userAgent"            Type="WSTR"  />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="browserCaps"         PublicName="browserCaps"   PublicRowName="browserCaps" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="value"           Type="XMLBLOB"      MetaFlags="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>



       <Collection         InternalName="webControls"         PublicName="webControls"   PublicRowName="webControls" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="clientScriptsLocation"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
       </Collection>

<!-- begin web services -->
       <Collection         InternalName="webServices"         PublicName="webServices"   PublicRowName="webServices" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
       </Collection>

            <Collection         InternalName="protocols"        PublicName="protocols"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="name"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>
<!--
            <Collection         InternalName="returnWriterTypes"        PublicName="returnWriterTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="parameterReaderTypes"        PublicName="parameterReaderTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="protocolReflectorTypes"        PublicName="protocolReflectorTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
		    <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="mimeReflectorTypes"        PublicName="mimeReflectorTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="protocolImporterTypes"        PublicName="protocolImporterTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="mimeImporterTypes"        PublicName="mimeImporterTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="protocolInfoTypes"        PublicName="protocolInfoTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="mimeInfoTypes"        PublicName="mimeInfoTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="referenceResolverTypes"        PublicName="referenceResolverTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>
-->

            <Collection         InternalName="soapExtensionTypes"        PublicName="soapExtensionTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="primary"               Type="StrictBool"     MetaFlags="" DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="soapExtensionReflectorTypes"        PublicName="soapExtensionReflectorTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="primary"               Type="StrictBool"     MetaFlags="" DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="soapExtensionImporterTypes"        PublicName="soapExtensionImporterTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="primary"               Type="StrictBool"     MetaFlags="" DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="serviceDescriptionFormatExtensionTypes"        PublicName="serviceDescriptionFormatExtensionTypes"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="type"              Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="primary"               Type="StrictBool"     MetaFlags="" DefaultValue="false"/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

           <Collection         InternalName="wsdlHelpGenerator"         PublicName="wsdlHelpGenerator"   PublicRowName="wsdlHelpGenerator" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="href"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
           </Collection>
<!-- end web services -->

        <Collection         InternalName="system_diagnostics"         PublicName="system_diagnostics"   PublicRowName="system.diagnostics" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection         InternalName="switches"        PublicName="switches"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="name"                Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="value"              Type="WSTR"  />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

    	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="trace"      PublicName="trace"    PublicRowName="trace"     MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="autoflush"               Type="StrictBool"     />
                <Property       InternalName="indentsize"              Type="UI4"   />

                <Property       InternalName="key1"                  Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="assert"      PublicName="assert"    PublicRowName="assert"     MetaFlagsEx="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="assertuienabled"               Type="StrictBool" DefaultValue="false"    />
                <Property       InternalName="logfilename"              Type="WSTR"   DefaultValue="" />

                <Property       InternalName="key1"                  Type="WSTR"     MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
	        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="listeners"         PublicName="listeners"   MetaFlagsEx="EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>
                <Property       InternalName="name"                 Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="type"                 Type="WSTR"     DefaultValue="" />
                <Property       InternalName="initializeData"             Type="WSTR"  DefaultValue="" />

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>



        <Collection         InternalName="appSettings"        PublicName="appSettings"   MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
	        <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	        <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
          <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                <Enum       InternalName="add"                  Value="0" />
                <Enum       InternalName="remove"               Value="1" />
                <Enum       InternalName="clear"                Value="2" />
            </Property>
            <Property       InternalName="key"                Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property       InternalName="value"              Type="WSTR"  />
	    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>


        <Collection         InternalName="location"      PublicName="location"    PublicRowName="location"     MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="path"                  Type="WSTR"     MetaFlags="PRIMARYKEY" DefaultValue="." />
            <Property       InternalName="allowOverride"                  Type="StrictBool"     />
	    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>



        <Collection         InternalName="system_windows_forms"         PublicName="system_windows_forms"   PublicRowName="system.windows.forms" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="jitDebugging"      Type="StrictBool"      MetaFlags="PRIMARYKEY" DefaultValue="false"/>

            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>


<!-- System.Remoting (per http://comrtime/specs/remoting/Configuration.doc) -->

        <Collection         InternalName="system_runtime_remoting"         PublicName="system_runtime_remoting"   PublicRowName="system.runtime.remoting" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>

            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection         InternalName="application"         PublicName="application"   PublicRowName="application" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="name"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection         InternalName="lifetime"         PublicName="lifetime"   PublicRowName="lifetime" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                    <Property       InternalName="leaseTime"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
                    <Property       InternalName="sponsorshipTimeOut"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
                    <Property       InternalName="renewOnCallTime"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
                    <Property       InternalName="leaseManagerPollTime"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                <Collection         InternalName="service"         PublicName="service"   PublicRowName="service" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="service_wellknown"         PublicName="service_wellknown"   PublicRowName="wellknown" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="mode"      Type="UI4"      MetaFlags="" >
                            <Enum InternalName="singleton"    Value="1" />
                            <Enum InternalName="singlecall"    Value="2" />
                        </Property>
                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="objectUri"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
    

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                    <Collection         InternalName="service_activated"         PublicName="service_activated"   PublicRowName="activated" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                        <Collection         InternalName="service_activated_lifetime"         PublicName="service_activated_lifetime"   PublicRowName="lifetime" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                            <Property       InternalName="leaseTime"      Type="WSTR"      MetaFlags="" DefaultValue=""/>
                            <Property       InternalName="RenewOnCallTime"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

                            <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                <Collection         InternalName="client"         PublicName="client"   PublicRowName="client" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="url"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
					<Property		InternalName="displayName" Type="WSTR" />

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="client_wellknown"         PublicName="client_wellknown"   PublicRowName="wellknown" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="url"      Type="WSTR"      MetaFlags="" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="clienturl"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                    <Collection         InternalName="client_activated"         PublicName="client_activated"   PublicRowName="activated" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="clienturl"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                <Collection         InternalName="channel"         PublicName="channels"   PublicRowName="channel" MetaFlagsEx="" ItemClass="channel" >
<!-- Flavor 1: definition in app config file -->
                    <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                    <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                    <Property       InternalName="displayName"      Type="WSTR"      MetaFlags="" DefaultValue=""/>

<!-- Flavor 2: reference to channel template -->
                    <Property       InternalName="ref" PublicName="reference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
<!--                <Property       InternalName="port"      Type="WSTR"      MetaFlags="" /> -->
<!--                <Property       InternalName="name"      Type="WSTR"      MetaFlags="" DefaultValue=""/> -->

                    <Property       InternalName="name"      Type="WSTR"      MetaFlags="" DefaultValue="" /> <!-- for HttpChannel, TcpChannel / TcpClient / TcpServerChannel, not useful on channeltemplates -->
                    <Property       InternalName="priority"      Type="UI4"      MetaFlags="" DefaultValue="1" /> <!-- for HttpChannel, TcpChannel / TcpClient / TcpServerChannel -->
                    <Property       InternalName="clientconnectionlimit"      Type="UI4"      MetaFlags="" DefaultValue="2" /> <!-- for HttpChannel, HttpClientChannel -->
                    <Property       InternalName="proxyname"      Type="WSTR"      MetaFlags="" DefaultValue="" /> <!-- for HttpChannel, HttpClientChannel -->
                    <Property       InternalName="proxyport"      Type="UI4"      MetaFlags="" DefaultValue="0" /> <!-- for HttpChannel, HttpClientChannel -->

                    <Property       InternalName="listen"               Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel -->
                    <Property       InternalName="suppresschanneldata"  Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel, TcpChannel / TcpServerChannel -->
                    <Property       InternalName="useipaddress"         Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel, TcpChannel / TcpServerChannel -->
                    <Property       InternalName="rejectremoterequests" Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for TcpChannel / TcpServerChannel -->

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="clientProviders"         PublicName="clientProviders"   PublicRowName="clientProviders" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                        <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                        <Property       InternalName="channelRef" PublicName="channelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
    
                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                        <Collection         InternalName="clientProvider"         PublicName="clientProvider"   PublicRowName="provider" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                            <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="reference"   PublicName="reference" PublicColumnName="ref"   Type="WSTR"       MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="channelRef" PublicName="channelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                        <Collection         InternalName="clientFormatter"         PublicName="clientFormatter"   PublicRowName="formatter" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                            <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="reference"   PublicName="reference" PublicColumnName="ref"   Type="WSTR"       MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="channelRef" PublicName="ChannelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                    <Collection         InternalName="serverProviders"         PublicName="serverProviders"   PublicRowName="serverProviders" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >

                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                        <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                        <Property       InternalName="channelRef" PublicName="channelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                        <Collection         InternalName="serverProvider"         PublicName="serverProvider"   PublicRowName="provider" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                            <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="reference"   PublicName="reference" PublicColumnName="ref"   Type="WSTR"       MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="channelRef" PublicName="channelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

                        <Collection         InternalName="serverFormatter"         PublicName="serverFormatter"   PublicRowName="formatter" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                            <Property       InternalName="type"      Type="WSTR"      MetaFlags="PRIMARYKEY" />
                            <Property       InternalName="reference"   PublicName="reference" PublicColumnName="ref"   Type="WSTR"       MetaFlags="PRIMARYKEY" />

                            <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <Property       InternalName="channelType"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="port"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="channelRef" PublicName="channelReference" PublicColumnName="ref"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                            <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                        </Collection>

            <Collection         InternalName="channeltemplate"         PublicName="channels"   PublicRowName="channel" MetaFlagsEx="" ItemClass="channeltemplate" >
                <Property       InternalName="id"        Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                <Property       InternalName="type"      Type="WSTR"      MetaFlags="" DefaultValue="" />

                <Property       InternalName="name"      Type="WSTR"      MetaFlags="" DefaultValue="" /> <!-- for HttpChannel, TcpChannel / TcpClient / TcpServerChannel, not useful on channeltemplates -->
                <Property       InternalName="priority"      Type="UI4"      MetaFlags="" DefaultValue="1" /> <!-- for HttpChannel, TcpChannel / TcpClient / TcpServerChannel -->
                <Property       InternalName="clientconnectionlimit"      Type="UI4"      MetaFlags="" DefaultValue="2" /> <!-- for HttpChannel, HttpClientChannel -->
                <Property       InternalName="proxyname"      Type="WSTR"      MetaFlags="" DefaultValue="" /> <!-- for HttpChannel, HttpClientChannel -->
                <Property       InternalName="proxyport"      Type="UI4"      MetaFlags="" DefaultValue="0" /> <!-- for HttpChannel, HttpClientChannel -->

                <Property       InternalName="listen"               Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel -->
                <Property       InternalName="port"                 Type="UI4"      MetaFlags="" DefaultValue="0" /> <!-- for HttpChannel, HttpServerChannel, TcpChannel / TcpServerChannel -->
                <Property       InternalName="suppresschanneldata"  Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel, TcpChannel / TcpServerChannel -->
                <Property       InternalName="useipaddress"         Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for HttpChannel, HttpServerChannel, TcpChannel / TcpServerChannel -->
                <Property       InternalName="rejectremoterequests" Type="StrictBool"      MetaFlags="" DefaultValue="false" /> <!-- for TcpChannel / TcpServerChannel -->

                <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

<!-- channelSinkProvider templates -->
            <Collection         InternalName="channelSinkProviderTemplate" PublicName="channelSinkProviders"   PublicRowName="channelSinkProviders" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection         InternalName="clientProviderTemplates"         PublicName="clientProviderTemplates"   PublicRowName="clientProviders" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="clientProviderTemplate"         PublicName="clientProviderTemplate"   PublicRowName="provider" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="id"        Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                    <Collection         InternalName="clientFormatterTemplate"         PublicName="clientFormatterTemplate"   PublicRowName="formatter" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="id"               Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="type"             Type="WSTR"      MetaFlags="" />
                        <Property       InternalName="includeversions"  Type="StrictBool"      MetaFlags="" DefaultValue="false" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                <Collection         InternalName="serverProviderTemplates"         PublicName="serverProviderTemplates"   PublicRowName="serverProviders" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>

                    <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                    <Collection         InternalName="serverProviderTemplate"         PublicName="serverProviderTemplate"   PublicRowName="provider" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="id"        Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

                    <Collection         InternalName="serverFormatterTemplate"         PublicName="serverFormatterTemplate"   PublicRowName="formatter" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                        <Property       InternalName="id"        Type="WSTR"      MetaFlags="PRIMARYKEY" />
                        <Property       InternalName="type"      Type="WSTR"      MetaFlags="" />
                        <Property       InternalName="includeversions"  Type="StrictBool"      MetaFlags="" DefaultValue="false" />

                        <Property       InternalName="version"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                        <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                        <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                    </Collection>

<!-- end System.Remoting -->


<!-- begin mobile web (provided by danlehen) -->
        <Collection InternalName="mobileControls" PublicName="mobileControls" PublicRowName="mobileControls" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property InternalName="allowCustomAttributes" Type="StrictBool" />
            <Property InternalName="sessionStateHistorySize" Type="UI4" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property InternalName="key2" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL" />
        </Collection>


        <Collection InternalName="mobileDevices" PublicName="mobileDevices" PublicRowName="device" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="predicateClass" Type="WSTR" />
            <Property InternalName="predicateMethod" Type="WSTR" />
            <Property InternalName="pageAdapter" Type="WSTR" />
            <Property InternalName="inheritsFrom" Type="WSTR" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property InternalName="key2" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
        </Collection>

        <Collection InternalName="mobileControlBindings" PublicName="mobileControlBindings" PublicRowName="control" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA NOTSCOPEDBYTABLENAME" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="adapter" Type="WSTR" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property InternalName="key2" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <Property InternalName="deviceName" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue=""/>
        </Collection>
 
        <Collection InternalName="mobileDeviceFilters" PublicName="deviceFilters" PublicRowName="filter" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="type" Type="WSTR" />
            <Property InternalName="method" Type="WSTR" />
            <Property InternalName="compare" Type="WSTR" />
            <Property InternalName="argument" Type="WSTR" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL" />
        </Collection>

    <!-- AUI notification services (provided by danlehen) -->

        <Collection InternalName="DeviceInfoProviders" PublicName="deviceInfoProviders" PublicRowName="deviceInfoProvider" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="type" Type="WSTR" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL" />
        </Collection>

        <Collection InternalName="RenderingProviders" PublicName="renderingProviders" PublicRowName="renderingProvider" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="type" Type="WSTR" />
            <Property InternalName="default" Type="StrictBool" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL" />
        </Collection>

        <Collection InternalName="TransportProviders" PublicName="transportProviders" PublicRowName="transportProvider" MetaFlagsEx="GENERATECONFIGOBJECTS EMITXMLSCHEMA" >
            <Property InternalName="name" Type="WSTR" MetaFlags="PRIMARYKEY" DefaultValue="" />
            <Property InternalName="type" Type="WSTR" />
            <Property InternalName="key1" Type="WSTR" MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL" />
        </Collection>


<!-- end mobile web -->
 

    <!-- Netclasses config -->
        <Collection         InternalName="system_net"         PublicName="system_net"   PublicRowName="system.net" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
            <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
            <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
        </Collection>

            <Collection         InternalName="defaultProxy"         PublicName="defaultProxy"   PublicRowName="defaultProxy" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

                <Collection         InternalName="proxy"         PublicName="proxy"   PublicRowName="proxy" MetaFlagsEx="NOTSCOPEDBYTABLENAME" >
                    <Property       InternalName="key3"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="bypassonlocal"         Type="StrictBool"      MetaFlags="" />
                    <Property       InternalName="usesystemdefault"      Type="StrictBool"      MetaFlags="" />
                    
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

                <Collection         InternalName="bypassList"         PublicName="bypassList"   MetaFlagsEx="EMITXMLSCHEMA" >
	                <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	                <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                    <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                        <Enum       InternalName="add"                  Value="0" />
                        <Enum       InternalName="remove"               Value="1" />
                        <Enum       InternalName="clear"                Value="2" />
                    </Property>

                    <Property       InternalName="address"         Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue="" />
                    
                    <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                    <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
                </Collection>

            <Collection         InternalName="webRequestModule"         PublicName="webRequestModules"   MetaFlagsEx="EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>

                <Property       InternalName="prefix"      Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="type"        Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
               

                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="authenticationModule"         PublicName="authenticationModules"   MetaFlagsEx="EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>

                <Property       InternalName="type"        Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>

            <Collection         InternalName="connectionManagement"         PublicName="connectionManagement"   MetaFlagsEx="EMITXMLSCHEMA" >
	            <ServerWiring Interceptor="Core_MergeInterceptor" Merger="ListMerge" />
	            <ServerWiring Interceptor="Core_XMLInterceptor" ReadPlugin="AddRemoveClearReadPlugin" WritePlugin="AddRemoveClearWritePlugin"/>
                <Property       InternalName="Directive"            Type="UI4"      MetaFlags="DIRECTIVE PRIMARYKEY" MetaFlagsEx="USEASPUBLICROWNAME">
                    <Enum       InternalName="add"                  Value="0" />
                    <Enum       InternalName="remove"               Value="1" />
                    <Enum       InternalName="clear"                Value="2" />
                </Property>

                <Property       InternalName="address"          Type="WSTR"      MetaFlags="PRIMARYKEY" DefaultValue=""/>
                <Property       InternalName="maxconnection"    Type="UI4"      MetaFlags="PRIMARYKEY" DefaultValue="0" />
                <Property       InternalName="key2"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <Property       InternalName="key1"      Type="WSTR"      MetaFlags="PRIMARYKEY NOTPERSISTABLE" DefaultValue="00"/>
                <QueryMeta         InternalName="QueryByFile"           CellName="__FILE" Operator="EQUAL"                />
            </Collection>


    </DatabaseMeta>


<!-- CLR definitions -->
    <RelationMeta   PrimaryTable="startup"   PrimaryColumns="key1"    ForeignTable="requiredRuntime"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    
    <RelationMeta   PrimaryTable="runtime"   PrimaryColumns="version"    ForeignTable="gcConcurrent"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="runtime"   PrimaryColumns="version"    ForeignTable="assemblyBinding"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>

        <RelationMeta   PrimaryTable="assemblyBinding"   PrimaryColumns="version key2"    ForeignTable="probing"     ForeignColumns="version key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="assemblyBinding"   PrimaryColumns="version key2"    ForeignTable="publisherPolicy"     ForeignColumns="version key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="assemblyBinding"   PrimaryColumns="version key2"    ForeignTable="dependentAssembly"     ForeignColumns="version key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="dependentAssembly"   PrimaryColumns="version key2 name publicKeyToken culture"    ForeignTable="bindingRedirect"     ForeignColumns="version key2 name publicKeyToken culture"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="dependentAssembly"   PrimaryColumns="version key2 name publicKeyToken culture"    ForeignTable="codeBase"     ForeignColumns="runtimeVersion key2 name publicKeyToken culture"  MetaFlags="USECONTAINMENT"/>

        <RelationMeta   PrimaryTable="runtime"   PrimaryColumns="version"    ForeignTable="developerSettings"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>

    <!-- Code access security -->
    <RelationMeta   PrimaryTable="mscorlib"   PrimaryColumns="key1"    ForeignTable="security"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="security"   PrimaryColumns="key1 key2"    ForeignTable="PolicyLevel"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="PolicyLevel"   PrimaryColumns="key1 key2 version"    ForeignTable="securityClasses"     ForeignColumns="key1 key2 PolicyVersion"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="PolicyLevel"   PrimaryColumns="key1 key2 version"    ForeignTable="codeGroup"     ForeignColumns="key1 key2 PolicyVersion"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="codeGroup"   PrimaryColumns="key1 key2 PolicyVersion"    ForeignTable="IMembershipCondition"     ForeignColumns="key1 key2 PolicyVersion"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="PolicyLevel"   PrimaryColumns="key1 key2 version"    ForeignTable="FullTrustAssembly"     ForeignColumns="key1 key2 PolicyVersion"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="PolicyLevel"   PrimaryColumns="key1 key2 version"    ForeignTable="NamedPermissionSet"     ForeignColumns="key1 key2 PolicyVersion"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="NamedPermissionSet"   PrimaryColumns="key1 key2 PolicyVersion Name"    ForeignTable="Permission"     ForeignColumns="key1 key2 PolicyVersion Name"  MetaFlags="USECONTAINMENT"/>
                    <RelationMeta   PrimaryTable="Permission"   PrimaryColumns="key1 key2 PolicyVersion Name className"    ForeignTable="ConnectAccess"     ForeignColumns="key1 key2 PolicyVersion Name className"  MetaFlags="USECONTAINMENT"/>
                        <RelationMeta   PrimaryTable="ConnectAccess"   PrimaryColumns="key1 key2 PolicyVersion Name className key3"    ForeignTable="URI"     ForeignColumns="key1 key2 PolicyVersion Name className key3"  MetaFlags="USECONTAINMENT"/>
                        <RelationMeta   PrimaryTable="ConnectAccess"   PrimaryColumns="key1 key2 PolicyVersion Name className key3"    ForeignTable="EndPoint"     ForeignColumns="key1 key2 PolicyVersion Name className key3"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="configSections"   PrimaryColumns="key1"    ForeignTable="section"       ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="configSections"   PrimaryColumns="key1"    ForeignTable="sectionGroup"  ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="sectionGroup"   PrimaryColumns="key1 name"    ForeignTable="sectionInGroup"  ForeignColumns="key1 groupName"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="sectionGroup"   PrimaryColumns="key1 name"    ForeignTable="sectionGroup2"  ForeignColumns="key1 groupName1"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="sectionGroup2"   PrimaryColumns="key1 name groupName1"    ForeignTable="sectionInGroup2"  ForeignColumns="key1 groupName2 groupName1"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="sectionGroup2"   PrimaryColumns="key1 name groupName1"    ForeignTable="sectionGroup3"  ForeignColumns="key1 groupName2 groupName2"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="sectionGroup3"   PrimaryColumns="key1 name groupName1 groupName2"    ForeignTable="sectionInGroup3"  ForeignColumns="key1 groupName3 groupName2 groupName1"  MetaFlags="USECONTAINMENT"/>

    <!-- XSP collections -->
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="httpModules"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="httpHandlers"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="sessionState"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="globalization"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="compilation"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="compilation"   PrimaryColumns="key1 key2"    ForeignTable="compilers"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="compilation"   PrimaryColumns="key1 key2"    ForeignTable="assemblies"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="web_trace"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="authentication"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="authentication"   PrimaryColumns="key1 key2"    ForeignTable="forms"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="forms"   PrimaryColumns="key1 key2 key3"    ForeignTable="credentials"     ForeignColumns="key1 key2 key3"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="credentials"   PrimaryColumns="key1 key2 key3 key4"    ForeignTable="user"     ForeignColumns="key1 key2 key3 key4"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="authentication"   PrimaryColumns="key1 key2"    ForeignTable="passport"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="authorization"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="identity"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="processModel"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="web_iisFilter"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="customErrors"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="customErrors"   PrimaryColumns="key1 key2"    ForeignTable="error"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="pages"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="httpRuntime"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="machineKey"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="securityPolicy"    ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="trust"    ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="clientTarget"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="browserCaps"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="webControls"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_web"   PrimaryColumns="key1"    ForeignTable="webServices"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="protocols"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
<!--
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="returnWriterTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="parameterReaderTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="protocolReflectorTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="mimeReflectorTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="protocolImporterTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="mimeImporterTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="protocolInfoTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="mimeInfoTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="referenceResolverTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
-->
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="soapExtensionTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="soapExtensionReflectorTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="soapExtensionImporterTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>

        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="serviceDescriptionFormatExtensionTypes"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="webServices"   PrimaryColumns="key1 key2"    ForeignTable="wsdlHelpGenerator"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_diagnostics"   PrimaryColumns="key1"    ForeignTable="switches"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_diagnostics"   PrimaryColumns="key1"    ForeignTable="trace"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_diagnostics"   PrimaryColumns="key1"    ForeignTable="assert"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_diagnostics"   PrimaryColumns="key1"    ForeignTable="listeners"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>

    <!-- System.Remoting -->
    <RelationMeta   PrimaryTable="system_runtime_remoting"   PrimaryColumns="version"    ForeignTable="application"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="application"   PrimaryColumns="version key1"    ForeignTable="lifetime"     ForeignColumns="version key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="application"   PrimaryColumns="version key1"    ForeignTable="service"     ForeignColumns="version key1"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="service"   PrimaryColumns="version key1 key2"    ForeignTable="service_wellknown"     ForeignColumns="version key1 key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="service"   PrimaryColumns="version key1 key2"    ForeignTable="service_activated"     ForeignColumns="version key1 key2"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="service_activated"   PrimaryColumns="version key1 key2 type"    ForeignTable="service_activated_lifetime"     ForeignColumns="version key1 key2 type"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="application"   PrimaryColumns="version key1"    ForeignTable="client"     ForeignColumns="version key1"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="client"   PrimaryColumns="version key1 url"    ForeignTable="client_wellknown"     ForeignColumns="version key1 clienturl"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="client"   PrimaryColumns="version key1 url"    ForeignTable="client_activated"     ForeignColumns="version key1 clienturl"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="application"   PrimaryColumns="version key1"    ForeignTable="channel"     ForeignColumns="version key1"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="channel"   PrimaryColumns="version key1 type port ref"    ForeignTable="clientProviders"     ForeignColumns="version key1 channelType port channelRef"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="clientProviders"   PrimaryColumns="version key1 channelType port channelRef key2"    ForeignTable="clientProvider"     ForeignColumns="version key1 channelType port channelRef key2"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="clientProviders"   PrimaryColumns="version key1 channelType port channelRef key2"    ForeignTable="clientFormatter"     ForeignColumns="version key1 channelType port channelRef key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="channel"   PrimaryColumns="version key1 type port ref"    ForeignTable="serverProviders"     ForeignColumns="version key1 channelType port channelRef"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="serverProviders"   PrimaryColumns="version key1 channelType port channelRef key2"    ForeignTable="serverProvider"     ForeignColumns="version key1 channelType port channelRef key2"  MetaFlags="USECONTAINMENT"/>
                <RelationMeta   PrimaryTable="serverProviders"   PrimaryColumns="version key1 channelType port channelRef key2"    ForeignTable="serverFormatter"    ForeignColumns="version key1 channelType port channelRef key2"  MetaFlags="USECONTAINMENT"/>

    <RelationMeta   PrimaryTable="system_runtime_remoting"   PrimaryColumns="version"    ForeignTable="channeltemplate"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_runtime_remoting"   PrimaryColumns="version"    ForeignTable="channelSinkProviderTemplate"     ForeignColumns="version"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="channelSinkProviderTemplate"   PrimaryColumns="version key2"    ForeignTable="clientProviderTemplates"     ForeignColumns="version key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="clientProviderTemplates"   PrimaryColumns="version key2 key3"    ForeignTable="clientProviderTemplate"     ForeignColumns="version key2 key3"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="clientProviderTemplates"   PrimaryColumns="version key2 key3"    ForeignTable="clientFormatterTemplate"     ForeignColumns="version key2 key3"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="channelSinkProviderTemplate"   PrimaryColumns="version key2"    ForeignTable="serverProviderTemplates"     ForeignColumns="version key2"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="serverProviderTemplates"   PrimaryColumns="version key2 key3"    ForeignTable="serverProviderTemplate"     ForeignColumns="version key2 key3"  MetaFlags="USECONTAINMENT"/>
            <RelationMeta   PrimaryTable="serverProviderTemplates"   PrimaryColumns="version key2 key3"    ForeignTable="serverFormatterTemplate"     ForeignColumns="version key2 key3"  MetaFlags="USECONTAINMENT"/>

    <!-- Mobile Devices (provided by DanLehen) -->
    <RelationMeta PrimaryTable="system_web" PrimaryColumns="key1" ForeignTable="mobileControls" ForeignColumns="key1" MetaFlags="USECONTAINMENT"/>
        <RelationMeta PrimaryTable="mobileControls" PrimaryColumns="key1 key2" ForeignTable="mobileDevices" ForeignColumns="key1 key2" MetaFlags="USECONTAINMENT"/>
            <RelationMeta PrimaryTable="mobileDevices" PrimaryColumns="key1 key2 name" ForeignTable="mobileControlBindings" ForeignColumns="key1 key2 deviceName" MetaFlags="USECONTAINMENT"/>
    <RelationMeta PrimaryTable="system_web" PrimaryColumns="key1" ForeignTable="mobileDeviceFilters" ForeignColumns="key1" MetaFlags="USECONTAINMENT"/>

    <RelationMeta PrimaryTable="system_web" PrimaryColumns="key1" ForeignTable="TransportProviders" ForeignColumns="key1" MetaFlags="USECONTAINMENT"/>
    <RelationMeta PrimaryTable="system_web" PrimaryColumns="key1" ForeignTable="RenderingProviders" ForeignColumns="key1" MetaFlags="USECONTAINMENT"/>
    <RelationMeta PrimaryTable="system_web" PrimaryColumns="key1" ForeignTable="DeviceInfoProviders" ForeignColumns="key1" MetaFlags="USECONTAINMENT"/>

 


    <!-- Netclasses -->
    <RelationMeta   PrimaryTable="system_net"   PrimaryColumns="key1"    ForeignTable="defaultProxy"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="defaultProxy"   PrimaryColumns="key1 key2"    ForeignTable="proxy"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
        <RelationMeta   PrimaryTable="defaultProxy"   PrimaryColumns="key1 key2"    ForeignTable="bypassList"     ForeignColumns="key1 key2"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_net"   PrimaryColumns="key1"    ForeignTable="webRequestModule"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_net"   PrimaryColumns="key1"    ForeignTable="authenticationModule"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>
    <RelationMeta   PrimaryTable="system_net"   PrimaryColumns="key1"    ForeignTable="connectionManagement"     ForeignColumns="key1"  MetaFlags="USECONTAINMENT"/>



</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\inc\testdbmeta.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:CatMeta.xms">

    <!-- The test team is using this database in most of the tests -->

    <DatabaseMeta           InternalName="TESTDB" BaseVersion="2" ExtendedVersion="2">

    <!-- We specify the wiring to each colection -->
    <ServerWiring       Interceptor="Core_XMLInterceptor"/>

       <Collection          InternalName="AllTypesXML_Nullable" PublicRowName="XMLRowNullable" MetaFlagsEx="EMITXMLSCHEMA">

	    <!-- This a XML table, with one Nullable-column per type -->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <!-- We don't have the following types because they are not been used: 
                    - DBTIMESTAMP, GUID
                And these are internal use:
                    - DWORD_METADATA, STRING_METADATA, BINARY_METADATA, EXPANDSZ_METADATA, MULTISZ_METADATA
            -->
            <Property       InternalName="C_ID"           Type="int32"    MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="C_Boolean"      Type="Boolean"/>
            <Property       InternalName="C_Bool"         Type="Bool"/>
            <Property       InternalName="C_Enum"         Type="Enum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <!-- We are using default value -->
            <Property       InternalName="C_Flag"         Type="Flag"     DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"/>
            <Property       InternalName="C_int32"        Type="int32"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"/>
            <Property       InternalName="C_String"       Type="String"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesCLB_Nullable" MetaFlagsEx="EMITCLBBLOB">

            <!-- This a CLB table, with one Nullable-column per type -->
            <ServerWiring   Interceptor ="Core_ComplibInterceptor"          Locator="0"/>

            <Property       InternalName="C_ID"           Type="int32"    MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="C_Boolean"      Type="Boolean"/>
            <Property       InternalName="C_Bool"         Type="Bool"/>
            <Property       InternalName="C_Enum"         Type="Enum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"/>
            <Property       InternalName="C_int32"        Type="int32"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"/>
            <Property       InternalName="C_String"       Type="String"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesFXD_Nullable" PublicRowName="FXDRowNullable" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a Fixed table, with one Nullable-column per type -->
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>

            <Property       InternalName="C_ID"           Type="int32"    MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="C_Boolean"      Type="Boolean"/>
            <Property       InternalName="C_Bool"         Type="Bool"/>
            <Property       InternalName="C_Enum"         Type="Enum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"/>
            <Property       InternalName="C_int32"        Type="int32"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"/>
            <Property       InternalName="C_String"       Type="String"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesXML_PK" PublicRowName="XMLRowPK" MetaFlagsEx="EMITXMLSCHEMA">
            <!-- This a XML table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <Property       InternalName="C_Boolean"      Type="Boolean"    MetaFlags="PRIMARYKEY"    DefaultValue="0"/>
            <Property       InternalName="C_Bool"         Type="Bool"       MetaFlags="PRIMARYKEY"    DefaultValue="0"/>
            <Property       InternalName="C_Enum"         Type="Enum"       MetaFlags="PRIMARYKEY"    DefaultValue="FirstEnum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag"       MetaFlags="PRIMARYKEY"    DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"        MetaFlags="PRIMARYKEY"    DefaultValue="15"/>
            <Property       InternalName="C_int32"        Type="int32"      MetaFlags="PRIMARYKEY"    DefaultValue="-15"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"      MetaFlags="PRIMARYKEY"    DefaultValue="abcdef"/>
            <Property       InternalName="C_String"       Type="String"     MetaFlags="PRIMARYKEY"    DefaultValue="fedcba"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"       MetaFlags="PRIMARYKEY"    DefaultValue="FEDCBA"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesCLB_PK1" MetaFlagsEx="EMITCLBBLOB">

            <!-- This a CLB table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor ="Core_ComplibInterceptor"          Locator="1"/>

            <Property       InternalName="C_Boolean"      Type="Boolean"    MetaFlags="PRIMARYKEY"    DefaultValue="0"/>
            <Property       InternalName="C_Enum"         Type="Enum"       MetaFlags="PRIMARYKEY"    DefaultValue="FirstEnum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag"       MetaFlags="PRIMARYKEY"    DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"        MetaFlags="PRIMARYKEY"    DefaultValue="15"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>
        </Collection>

        <Collection         InternalName="AllTypesCLB_PK2" MetaFlagsEx="EMITCLBBLOB">

            <!-- This a CLB table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor ="Core_ComplibInterceptor"          Locator="2"/>

            <Property       InternalName="C_int32"        Type="int32"      MetaFlags="PRIMARYKEY"    DefaultValue="-15"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"      MetaFlags="PRIMARYKEY"    DefaultValue="abcdef"/>
            <Property       InternalName="C_String"       Type="String"     MetaFlags="PRIMARYKEY"    DefaultValue="fedcba"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"       MetaFlags="PRIMARYKEY"    DefaultValue="FEDCBA"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>
        </Collection>

        <Collection         InternalName="AllTypesFXD_PK" PublicRowName="FXDRowPK" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a Fixed table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>

            <Property       InternalName="C_Boolean"      Type="Boolean"    MetaFlags="PRIMARYKEY"    DefaultValue="0"/>
            <Property       InternalName="C_Bool"         Type="Bool"       MetaFlags="PRIMARYKEY"    DefaultValue="0"/>
            <Property       InternalName="C_Enum"         Type="Enum"       MetaFlags="PRIMARYKEY"    DefaultValue="FirstEnum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag"       MetaFlags="PRIMARYKEY"    DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"        MetaFlags="PRIMARYKEY"    DefaultValue="15"/>
            <Property       InternalName="C_int32"        Type="int32"      MetaFlags="PRIMARYKEY"    DefaultValue="-15"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"      MetaFlags="PRIMARYKEY"    DefaultValue="abcdef"/>
            <Property       InternalName="C_String"       Type="String"     MetaFlags="PRIMARYKEY"    DefaultValue="fedcba"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"       MetaFlags="PRIMARYKEY"    DefaultValue="FEDCBA"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesXML_Default" PublicRowName="XMLRowDefault" MetaFlagsEx="EMITXMLSCHEMA">
            <!-- This a XML table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <Property       InternalName="C_ID"           Type="int32"      MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="C_Boolean"      Type="Boolean"    DefaultValue="0"/>
            <Property       InternalName="C_Bool"         Type="Bool"       DefaultValue="0"/>
            <Property       InternalName="C_Enum"         Type="Enum"       DefaultValue="FirstEnum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag"       DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"        DefaultValue="15"/>
            <Property       InternalName="C_int32"        Type="int32"      DefaultValue="-15"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"      DefaultValue="abcdef"/>
            <Property       InternalName="C_String"       Type="String"     DefaultValue="fedcba"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"       DefaultValue="FEDCBA"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllTypesFXD_Default" PublicRowName="FXDRowDefault" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a Fixed table, with one column per type, all columns make the primary key -->
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>

            <Property       InternalName="C_ID"           Type="int32"      MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="C_Boolean"      Type="Boolean"    DefaultValue="0"/>
            <Property       InternalName="C_Bool"         Type="Bool"       DefaultValue="0"/>
            <Property       InternalName="C_Enum"         Type="Enum"       DefaultValue="FirstEnum">
                <Enum       InternalName="FirstEnum"      Value="1"/>
                <Enum       InternalName="SecondEnum"     Value="2"/>
                <Enum       InternalName="ThirdEnum"      Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"         Type="Flag"       DefaultValue="One|Two">
                <Flag       InternalName="One"            Value="1"/>
                <Flag       InternalName="Two"            Value="2"/>
                <Flag       InternalName="Four"           Value="4"/>
            </Property>
            <Property       InternalName="C_UI4"          Type="UI4"        DefaultValue="15"/>
            <Property       InternalName="C_int32"        Type="int32"      DefaultValue="-15"/>
            <Property       InternalName="C_BYTES"        Type="BYTES"      DefaultValue="abcdef"/>
            <Property       InternalName="C_String"       Type="String"     DefaultValue="fedcba"/>
            <Property       InternalName="C_WSTR"         Type="WSTR"       DefaultValue="FEDCBA"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"            MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="OneColumnXML" PublicRowName="XMLRowOneColumn" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a XML table, with one column only -->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <Property       InternalName="C_ID"         Type="int32"    MetaFlags="PRIMARYKEY"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"          MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="OneColumnCLB" MetaFlagsEx="EMITCLBBLOB">

            <!-- This a CLB table, with one column only -->
            <ServerWiring   Interceptor ="Core_ComplibInterceptor"          Locator="3"/>

            <Property       InternalName="C_ID"         Type="int32"    MetaFlags="PRIMARYKEY"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"          MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="OneColumnFXD" PublicRowName="FXDRowOneColumn" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a Fixed table, with one column only -->
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>

            <Property       InternalName="C_ID"         Type="int32"    MetaFlags="PRIMARYKEY"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"          MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllFlagsXML" PublicRowName="XMLRowFlags" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a XML table, with one column per possible MetaFlag -->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <!-- We don't have the following flags because the are set by 
                catutil (?):
                    - FOREIGNKEY, UNKNOWNSIZE, VARIABLESIZE

                These flags, we don't know the meaning:
                    - NAMECOLUMN, NAVCOLUMN, DIRECTIVE, WRITENEVER, WRITEONCHANGE,
                    WRITEONINSERT, NOTPUBLIC, NOTDOCD, PUBLICREADONLY, PUBLICWRITEONLY,
                    INSERTDEFAULT, INSERTGENERATE, INSERTUNIQUE, INSERTPARENT

                These flags aren't implemented (?)
                    - CASEINSENSITIVE, TOLOWERCASE

                How do I use this FIXEDLENGTH?
            -->

            <Property       InternalName="C_Boolean"       Type="Boolean"/>    <!-- BOOL -->
            <Property       InternalName="C_Bool"          Type="Bool"/>    <!-- BOOL -->
            <Property       InternalName="C_Enum"          Type="Enum">    <!-- ENUM -->
                <Enum       InternalName="FirstEnum"       Value="1"/>        
                <Enum       InternalName="SecondEnum"      Value="2"/>        
                <Enum       InternalName="ThirdEnum"       Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"          Type="Flag">            <!-- FLAG -->
                <Flag       InternalName="One"             Value="1"/>
                <Flag       InternalName="Two"             Value="2"/>
                <Flag       InternalName="Four"            Value="4"/>
            </Property>
            <Property       InternalName="C_StartNum"      Type="int32"     StartingNumber="1"/>    <!-- HASNUMERICRANGE -->
            <Property       InternalName="C_EndNum"        Type="int32"     EndingNumber="10"/>
            <Property       InternalName="C_RangeNum"      Type="int32"     StartingNumber="1"   EndingNumber = "10"/>
            <Property       InternalName="C_LegalSet"      Type="String"    CharacterSet="abcde" MetaFlags = "LEGALCHARSET"/>
            <Property       InternalName="C_IllegalSet"    Type="String"    CharacterSet="abcde" MetaFlags = "ILLEGALCHARSET"/>
            <Property       InternalName="C_NotPersit"     Type="UI4"       MetaFlags = "NOTPERSISTABLE"/>
            <Property       InternalName="C_PK"            Type="UI4"       MetaFlags = "PRIMARYKEY"/>
            <Property       InternalName="C_NotNull"       Type="String"    MetaFlags = "NOTNULLABLE"/>
            <Property       InternalName="C_MultiString"   Type="String"    MetaFlags = "MULTISTRING"/>
            <Property       InternalName="C_ExpandString"  Type="String"    MetaFlags = "EXPANDSTRING"/>

            <!-- We can query any column -->
            <QueryMeta        InternalName="All"           MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllFlagsCLB" MetaFlagsEx="EMITCLBBLOB">
            <!-- This a CLB table, with one column per possible MetaFlag -->
            <ServerWiring   Interceptor ="Core_ComplibInterceptor"          Locator="4"/>

            <Property       InternalName="C_Boolean"       Type="Boolean"/>    <!-- BOOL -->
            <Property       InternalName="C_Bool"          Type="Bool"/>    <!-- BOOL -->
            <Property       InternalName="C_Enum"          Type="Enum">    <!-- ENUM -->
                <Enum       InternalName="FirstEnum"       Value="1"/>        
                <Enum       InternalName="SecondEnum"      Value="2"/>        
                <Enum       InternalName="ThirdEnum"       Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"          Type="Flag">            <!-- FLAG -->
                <Flag       InternalName="One"             Value="1"/>
                <Flag       InternalName="Two"             Value="2"/>
                <Flag       InternalName="Four"            Value="4"/>
            </Property>
            <Property       InternalName="C_StartNum"      Type="int32"     StartingNumber="1"/>    <!-- HASNUMERICRANGE -->
            <Property       InternalName="C_EndNum"        Type="int32"     EndingNumber="10"/>
            <Property       InternalName="C_RangeNum"      Type="int32"     StartingNumber="1"   EndingNumber = "10"/>
            <Property       InternalName="C_LegalSet"      Type="String"    CharacterSet="abcde" MetaFlags = "LEGALCHARSET"/>
            <Property       InternalName="C_IllegalSet"    Type="String"    CharacterSet="abcde" MetaFlags = "ILLEGALCHARSET"/>
            <Property       InternalName="C_NotPersit"     Type="UI4"       MetaFlags = "NOTPERSISTABLE"/>
            <Property       InternalName="C_PK"            Type="UI4"       MetaFlags = "PRIMARYKEY"/>
            <Property       InternalName="C_NotNull"       Type="String"    MetaFlags = "NOTNULLABLE"/>
            <Property       InternalName="C_MultiString"   Type="String"    MetaFlags = "MULTISTRING"/>
            <Property       InternalName="C_ExpandString"  Type="String"    MetaFlags = "EXPANDSTRING"/>

            <!-- We can query any column -->
            <QueryMeta        InternalName="All"           MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="AllFlagsFXD"  PublicRowName="FXDRowFlags" MetaFlagsEx="EMITXMLSCHEMA">
            <!-- This a Fixed table, with one column per possible MetaFlag -->
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>

            <Property       InternalName="C_Boolean"       Type="Boolean"/>    <!-- BOOL -->
            <Property       InternalName="C_Bool"          Type="Bool"/>    <!-- BOOL -->
            <Property       InternalName="C_Enum"          Type="Enum">    <!-- ENUM -->
                <Enum       InternalName="FirstEnum"       Value="1"/>        
                <Enum       InternalName="SecondEnum"      Value="2"/>        
                <Enum       InternalName="ThirdEnum"       Value="3"/>
            </Property>
            <Property       InternalName="C_Flag"          Type="Flag">            <!-- FLAG -->
                <Flag       InternalName="One"             Value="1"/>
                <Flag       InternalName="Two"             Value="2"/>
                <Flag       InternalName="Four"            Value="4"/>
            </Property>
            <Property       InternalName="C_StartNum"      Type="int32"     StartingNumber="1"/>    <!-- HASNUMERICRANGE -->
            <Property       InternalName="C_EndNum"        Type="int32"     EndingNumber="10"/>
            <Property       InternalName="C_RangeNum"      Type="int32"     StartingNumber="1"   EndingNumber = "10"/>
            <Property       InternalName="C_LegalSet"      Type="String"    CharacterSet="abcde" MetaFlags = "LEGALCHARSET"/>
            <Property       InternalName="C_IllegalSet"    Type="String"    CharacterSet="abcde" MetaFlags = "ILLEGALCHARSET"/>
            <Property       InternalName="C_NotPersit"     Type="UI4"       MetaFlags = "NOTPERSISTABLE"/>
            <Property       InternalName="C_PK"            Type="UI4"       MetaFlags = "PRIMARYKEY"/>
            <Property       InternalName="C_NotNull"       Type="String"    MetaFlags = "NOTNULLABLE"/>
            <Property       InternalName="C_MultiString"   Type="String"    MetaFlags = "MULTISTRING"/>
            <Property       InternalName="C_ExpandString"  Type="String"    MetaFlags = "EXPANDSTRING"/>

            <!-- We can query any column -->
            <QueryMeta        InternalName="All"           MetaFlags="ALL"/>

        </Collection>

        <Collection         InternalName="PublicColumnNameXML" PublicRowName="XMLRowPublicColumnName" MetaFlagsEx="EMITXMLSCHEMA">

            <!-- This a XML table that tests PublicColumnName-->
            <ServerWiring   Interceptor="Core_XMLInterceptor"/>

            <Property       InternalName="C_ID"      PublicName="C_ID"      PublicColumnName="C_ID"      Type="int32"    MetaFlags="PRIMARYKEY"/>
            <Property       InternalName="className" PublicName="className" PublicColumnName="class"     Type="String"/>
            <Property       InternalName="CBoolean"  PublicName="CBool"     PublicColumnName="C_Boolean" Type="Boolean"/>
            <Property       InternalName="cUI4"      PublicName="C_UI4"                                  Type="UI4"/>
            <Property       InternalName="CString"                          PublicColumnName="C_String"  Type="String"/>
            <Property       InternalName="C_WSTR"                                                        Type="WSTR"/>

            <!-- We can query any column -->
            <QueryMeta      InternalName="All"          MetaFlags="ALL"/>

        </Collection>

    </DatabaseMeta>

</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\plugins\directives\sample3.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:D:\catalog42\drop\x86CHK\Catalog42\catalog.xms">

<FavoriteColors>
	<FavoriteColor Command="FinalAdd" Color="Black" />
	<FavoriteColor Command="Clear" Color="*" />
</FavoriteColors>

<ScriptMaps>
	<ScriptMap Directive="del" Extension=".htm" Executable="zoo.dll" />
	<ScriptMap Directive="addfinal" Extension=".htm" Executable="foo.dll" />
	<ScriptMap Directive="delfinal" Extension=".htx" Executable="*" />
</ScriptMaps>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\plugins\directives\sample4.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:D:\catalog42\drop\x86CHK\Catalog42\catalog.xms">

<FavoriteColors>
	<FavoriteColor Command="Remove" Color="Black" />
	<FavoriteColor Command="Add" Color="Red" />
</FavoriteColors>

<ScriptMaps>
	<ScriptMap Directive="clear" Extension="*" Executable="*" />
	<ScriptMap Directive="add" Extension=".htx" Executable="bar.dll" />
</ScriptMaps>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\plugins\directives\sample2.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:D:\catalog42\drop\x86CHK\Catalog42\catalog.xms">

<FavoriteColors>
	<FavoriteColor Command="Add" Color="Blue" />
	<FavoriteColor Command="Add" Color="Green" />
	<FavoriteColor Command="Add" Color="Red" />
</FavoriteColors>

<ScriptMaps>
	<ScriptMap Directive="del" Extension=".htm" Executable="foo.dll" />
	<ScriptMap Directive="add" Extension=".htm" Executable="zoo.dll" />
	<ScriptMap Directive="del" Extension=".htx" Executable="bar.dll" />
</ScriptMaps>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\plugins\directives\sample1.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:D:\catalog42\drop\x86CHK\Catalog42\catalog.xms">

<FavoriteColors>
	<FavoriteColor Command="FinalRemove" Color="Red" />
	<FavoriteColor Command="Add" Color="White" />
</FavoriteColors>

<ScriptMaps>
	<ScriptMap Directive="addfinal" Extension=".asp" Executable="asp.dll" />
	<ScriptMap Directive="add" Extension=".htm" Executable="foo.dll" />
	<ScriptMap Directive="add" Extension=".htx" Executable="bar.dll" />
</ScriptMaps>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\stores\asaitable\algo.txt ===
AI.PopulateCache
PC_TO
TO.Init(StartingPath, DynamicPath, this)
TO.Traverse()





AI.UpdateStore
US_TO
TO.Init(StartingPath, DynamicPath, this)
TO.Traverse()









class TO
{
    Init();
    Traverse();
    virtual ProcessCollection();
}

class PC_TO : TO
{
}

class US_TO : TO
{
}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\stores\xmltable\comcatdata.xml ===
<?xml version ="1.0"?>
<XMLDataStore xmlns="x-schema:ComCatData.Schema">
    <!--GUID guid=""     id=""/-->

    <GUID guid="A9D563FF-BC65-11D2-B7F5-00C04F7978BE"     id="clsidSDTCLB"/>
    <GUID guid="2F94D7B0-BF63-11D1-A6A2-00C04FB9988E"     id="clsidSDTENDPOINTS"/>
    <GUID guid="A9D56401-BC65-11D2-B7F5-00C04F7978BE"     id="clsidSDTFXD"/>
    <GUID guid="22EE26E5-2289-11D2-8F43-00C04FC2E0C7"     id="clsidSDTIMetaData"/>
    <GUID guid="BF981FDD-B743-11D1-A69A-00C04FB9988E"     id="clsidSDTMACHINESETTINGS"/>
    <GUID guid="7669CAD6-BDEC-11D1-A6A0-00C04FB9988E"     id="clsidSDTPROTOCOLS"/>
    <GUID guid="A9397D66-3ED3-11D1-8D99-00C04FC2E0C7"     id="clsidSDTREG"/>
    <GUID guid="B8029A76-F43E-11D2-BABC-00C04F68DDC0"     id="clsidSDTXML"/>
    <GUID guid="E846F0A0-D367-11D1-8286-00A0C9231C29"     id="clsidSLTAPP"/>
    <GUID guid="D5C66BE1-C209-11D1-8DEC-00C04FC2E0C7"     id="clsidSLTCOMS"/>
    <GUID guid="B4B3AECB-DFD6-11D1-9DAA-00805F85CFE3"     id="clsidSLTCOMSCLIENT"/>
    <GUID guid="94426DE2-3211-11D2-A0DB-00C04F8EDCEE"     id="clsidSLTClust"/>
    <GUID guid="1D0482E4-57E7-11D2-B10D-00805FC73204"     id="clsidSLTIMDB"/>
    <GUID guid="5DC41690-C6A6-11D1-9D35-006008B0E5CA"     id="clsidSLTROLECONFIG"/>
    <GUID guid="5DC41694-C6A6-11D1-9D35-006008B0E5CA"     id="clsidSLTROLESBYCLSID"/>
    <GUID guid="5DC41691-C6A6-11D1-9D35-006008B0E5CA"     id="clsidSLTROLEDEFINITION"/>
    <GUID guid="5DC41693-C6A6-11D1-9D35-006008B0E5CA"     id="clsidSLTROLESBYINTERFACE"/>
    <GUID guid="5DC41692-C6A6-11D1-9D35-006008B0E5CA"     id="clsidSLTROLESBYMETHOD"/>
    <GUID guid="A9D56402-BC65-11D2-B7F5-00C04F7978BE"     id="clsidSLTSHP"/>
    <GUID guid="92AD68AB-17E0-11D1-B230-00C04FB9473F"     id="clsidSTCLIENT"/>
    <GUID guid="BDC31734-08A1-11D3-BABE-00C04F68DDC0"     id="didAPP_PRIVATE"/>
    <GUID guid="793017CD-22B8-11D2-8F43-00C04FC2E0C7"     id="didAPPDU"/>
    <GUID guid="6E38D3C3-C2A7-11D1-8DEC-00C04FC2E0C7"     id="didCOMCLASSIC"/>
    <GUID guid="6E38D3C4-C2A7-11D1-8DEC-00C04FC2E0C7"     id="didCOMSERVICES"/>
    <GUID guid="6E38D3C2-C2A7-11D1-8DEC-00C04FC2E0C7"     id="didMEMORY"/>
    <GUID guid="8697B2C0-9C0A-11D1-9D22-006008B0E5CA"     id="didSTD_DBWIRING"/>
    <GUID guid="AD4DB950-5637-11D2-8B93-00C04FD7A924"     id="tidAPPDU_CLASSROLES"/>
    <GUID guid="AD4DB951-5637-11D2-8B93-00C04FD7A924"     id="tidAPPDU_INTERFACEROLES"/>
    <GUID guid="AD4DB952-5637-11D2-8B93-00C04FD7A924"     id="tidAPPDU_METHOD"/>
    <GUID guid="D495F321-AF37-11D1-8B7E-00C04FD7A924"     id="tidAPPLICATION"/>
    <GUID guid="6E38D3C7-C2A7-11D1-8DEC-00C04FC2E0C7"     id="tidCOMCLASSIC_CLASSES"/>
    <GUID guid="42816F21-5329-11D2-8B93-00C04FD7A924"     id="tidCOMCLASSIC_FILEEXT"/>
    <GUID guid="3A059540-1751-11D2-8B91-00C04FD7A924"     id="tidCOMCLASSIC_IIDS"/>
    <GUID guid="42816F22-5329-11D2-8B93-00C04FD7A924"     id="tidCOMCLASSIC_MIMETYPE"/>
    <GUID guid="BCD79B13-0DDA-11D2-8A9A-00A0C96B9BB4"     id="tidCOMCLASSIC_PROGIDS"/>
    <GUID guid="2DAF1D50-BD53-11D1-8280-00A0C9231C29"     id="tidCOMPUTERLIST"/>
    <GUID guid="16E44571-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_APLICATION_EXPORT"/>
    <GUID guid="6E38D3C8-C2A7-11D1-8DEC-00C04FC2E0C7"     id="tidCOMSERVICES_CLASSES"/>
    <GUID guid="16E44573-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_CLASSES_EXPORT"/>
    <GUID guid="6E38D3CA-C2A7-11D1-8DEC-00C04FC2E0C7"     id="tidCOMSERVICES_CLASSES_INTERNAL"/>
    <GUID guid="D13B72C6-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_CLASSINTERFACE"/>
    <GUID guid="16E44574-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_CLASSINTERFACE_EXPORT"/>
    <GUID guid="D13B72C5-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_CLASSITFDISPID"/>
    <GUID guid="16E44576-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_CLASSITFDISPID_EXPORT"/>
    <GUID guid="D13B72C4-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_CLASSITFMETHOD"/>
    <GUID guid="16E44575-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_CLASSITFMETHOD_EXPORT"/>
    <GUID guid="16E44572-DF8C-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_DLLNAMES_EXPORT"/>
    <GUID guid="61436565-EE01-11D1-BFE4-00C04FB9988E"     id="tidCOMSERVICES_ENDPOINTS"/>
    <GUID guid="CD331D10-C739-11D1-9D35-006008B0E5CA"     id="tidCOMSERVICES_LT_ROLECONFIG"/>
    <GUID guid="CD331D11-C739-11D1-9D35-006008B0E5CA"     id="tidCOMSERVICES_LT_ROLEDEFINITION"/>
    <GUID guid="CD331D12-C739-11D1-9D35-006008B0E5CA"     id="tidCOMSERVICES_LT_ROLESBYCLSID"/>
    <GUID guid="CD331D13-C739-11D1-9D35-006008B0E5CA"     id="tidCOMSERVICES_LT_ROLESBYINTERFACE"/>
    <GUID guid="CD331D14-C739-11D1-9D35-006008B0E5CA"     id="tidCOMSERVICES_LT_ROLESBYMETHOD"/>
    <GUID guid="61436562-EE01-11D1-BFE4-00C04FB9988E"     id="tidCOMSERVICES_MACHINESETTINGS"/>
    <GUID guid="61436563-EE01-11D1-BFE4-00C04FB9988E"     id="tidCOMSERVICES_PROTOCOLS"/>
    <GUID guid="D13B72C1-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_ROLECONFIG"/>
    <GUID guid="3DB6D401-DFC6-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_ROLECONFIG_EXPORT"/>
    <GUID guid="7397ED00-C68B-11D1-9D34-006008B0E5CA"     id="tidCOMSERVICES_ROLEDEFINITION"/>
    <GUID guid="3DB6D402-DFC6-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_ROLEDEFINITION_EXPORT"/>
    <GUID guid="D13B72C2-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_ROLESDCACHE"/>
    <GUID guid="3DB6D403-DFC6-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_ROLESDCACHE_EXPORT"/>
    <GUID guid="D13B72C3-C426-11D1-8507-006008B0E79D"     id="tidCOMSERVICES_ROLESET"/>
    <GUID guid="3DB6D404-DFC6-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_ROLESET_EXPORT"/>
    <GUID guid="1DE5A441-CF10-11D1-8B87-00C04FD7A924"     id="tidCOMSERVICES_SERVICES"/>
    <GUID guid="C3148981-AF46-11D1-8B7E-00C04FD7A924"     id="tidCUSTOMACTIVATOR"/>
    <GUID guid="C59CE481-C28E-11D1-A014-0000F81E84F8"     id="tidIMDBDATASOURCES"/>
    <GUID guid="C59CE482-C28E-11D1-A014-0000F81E84F8"     id="tidIMDBTABLES"/>
    <GUID guid="F61ACE00-BD4F-11D1-8280-00A0C9231C29"     id="tidLOCALCOMPUTER"/>
    <GUID guid="6E38D3C5-C2A7-11D1-8DEC-00C04FC2E0C7"     id="tidMEMORY_SHAPEABLE"/>
    <GUID guid="5C46995D-D7E9-11D1-8E16-00C04FC2E0C7"     id="tidMETA"/>
    <GUID guid="5C46995E-D7E9-11D1-8E16-00C04FC2E0C7"     id="tidMETA_EXTENDED"/>
    <GUID guid="B7EEEA91-B3B9-11D1-8B7E-00C04FD7A924"     id="tidSERVERGROUP"/>
    <GUID guid="A7A0FFB0-98D4-11D1-9D22-006008B0E5CA"     id="tidSTD_BASICCLIENTWIRING"/>
    <GUID guid="A7A0FFB1-98D4-11D1-9D22-006008B0E5CA"     id="tidSTD_BASICSERVERWIRING"/>
    <GUID guid="AEEF82F1-9849-11D1-9D22-006008B0E5CA"     id="tidSTD_DBWIRING"/>
    <GUID guid="A23FD460-BEBB-11D1-9D32-006008B0E5CA"     id="tidSTD_DTDDLL"/>
    <GUID guid="EC127050-A89A-11D1-9D26-006008B0E5CA"     id="tidSTD_DWIDDETECT"/>
    <GUID guid="40E36B4D-03EC-11D3-BABE-00C04F68DDC0"     id="tidStephensTestTable"/>
    <GUID guid="F6793A78-0805-11D3-BABE-00C04F68DDC0"     id="tidStephensTestTable2"/>
    

    <SimpleDataTable xmlns="x-schema:tidSTD_DBWIRING.Schema" tidGuidID="_AEEF82F1-9849-11D1-9D22-006008B0E5CA_"     tidInternalName="tidSTD_DBWIRING">
        <!--            DID=idref               DWTABLEDISPENSER=idref          DWTABLELOCATOR=string   FLAGS=ui4           DEFAULTCLIENTDISPENSER=idref           DEFAULTSERVERDISPENSER=idref                DEFAULTCLIENTLOCATOR=string     DEFAULTSERVERLOCATOR=string     DEFAULTCATSRVIID=idref-->
        <SimpleRowData  DID="didSTD_DBWIRING"   DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="1048576"     DEFAULTCLIENTDISPENSER="clsidSTCLIENT" DEFAULTSERVERDISPENSER="clsidSDTXML"        DEFAULTCLIENTLOCATOR=""/>
        <SimpleRowData  DID="didCOMSERVICES"    DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="269484032"   DEFAULTCLIENTDISPENSER="clsidSTCLIENT" DEFAULTSERVERDISPENSER="clsidSDTREG"        DEFAULTCLIENTLOCATOR=""/>
        <SimpleRowData  DID="didCOMCLASSIC"     DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="1048576"     DEFAULTCLIENTDISPENSER="clsidSTCLIENT" DEFAULTSERVERDISPENSER="clsidSDTREG"        DEFAULTCLIENTLOCATOR=""/>
        <SimpleRowData  DID="didMEMORY"         DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="1048576"     DEFAULTCLIENTDISPENSER="clsidSTCLIENT"                                             DEFAULTCLIENTLOCATOR=""/>
        <SimpleRowData  DID="didAPPDU"          DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="0"           DEFAULTCLIENTDISPENSER="clsidSTCLIENT" DEFAULTSERVERDISPENSER="clsidSDTIMetaData"  DEFAULTCLIENTLOCATOR=""/>
        <SimpleRowData  DID="didAPP_PRIVATE"    DWTABLEDISPENSER="clsidSDTXML"                          FLAGS="0"           DEFAULTCLIENTDISPENSER="clsidSTCLIENT" DEFAULTSERVERDISPENSER="clsidSDTXML"        DEFAULTCLIENTLOCATOR=""/>
    </SimpleDataTable>

    <SimpleDataTable xmlns="x-schema:tidSTD_BASICCLIENTWIRING.Schema" tidGuidID="_A7A0FFB0-98D4-11D1-9D22-006008B0E5CA_"     tidInternalName="tidSTD_BASICCLIENTWIRING">
        <!--            TID=idref                       DTDISPENSER=idref   DTLOCATOR=string    LTDISPENSER=idref                   FLAGS=ui4           CATSRVIID=idref-->
        <SimpleRowData  TID="tidCOMSERVICES_CLASSES"                                            LTDISPENSER="clsidSLTCOMSCLIENT"    FLAGS="268435456"/>
    </SimpleDataTable>

    <SimpleDataTable xmlns="x-schema:tidSTD_BASICSERVERWIRING.Schema" tidGuidID="_A7A0FFB1-98D4-11D1-9D22-006008B0E5CA_"     tidInternalName="tidSTD_BASICSERVERWIRING">
        <!--            TID=idref                                    DTDISPENSER=idref          DTLOCATOR=string                                               LTDISPENSER=idref                      FLAGS=ui4          -->
        <SimpleRowData  TID="tidMEMORY_SHAPEABLE"                                                                                                              LTDISPENSER="clsidSLTSHP"              FLAGS="269484032"  />
        <SimpleRowData  TID="tidMETA"                                DTDISPENSER="clsidSDTXML"                                                                                                        FLAGS="0"          />
        <SimpleRowData  TID="tidMETA_EXTENDED"                       DTDISPENSER="clsidSDTFXD"                                                                                                        FLAGS="0"          />
        <SimpleRowData  TID="tidCOMSERVICES_CLASSES"                                                                                                           LTDISPENSER="clsidSLTCOMS"             FLAGS="269484032"  />
        <SimpleRowData  TID="tidCOMSERVICES_CLASSES_INTERNAL"        DTDISPENSER="clsidSDTCLB"  DTLOCATOR="4"                                                                                         FLAGS="0"          />
        <SimpleRowData  TID="tidCOMCLASSIC_CLASSES"                                             DTLOCATOR="2\\SOFTWARE\\Classes\\CLSID"                                                               FLAGS="0"          />
        <SimpleRowData  TID="tidCOMCLASSIC_PROGIDS"                                             DTLOCATOR="2\\SOFTWARE\\Classes"                                                                      FLAGS="0"          />
        <SimpleRowData  TID="tidCOMCLASSIC_IIDS"                                                DTLOCATOR="2\\SOFTWARE\\Classes\\Interface"                                                           FLAGS="0"          />
        <SimpleRowData  TID="tidCOMCLASSIC_FILEEXT"                                             DTLOCATOR="2\\SOFTWARE\\Classes"                                                                      FLAGS="0"          />
        <SimpleRowData  TID="tidCOMCLASSIC_MIMETYPE"                                            DTLOCATOR="2\\SOFTWARE\\Classes\\MIME\\Database\\Content Type"                                        FLAGS="0"          />

        <SimpleRowData TID="tidCUSTOMACTIVATOR"                     DTDISPENSER="clsidSDTCLB"  DTLOCATOR="2"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLESDCACHE"             DTDISPENSER="clsidSDTCLB"  DTLOCATOR="7"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidAPPLICATION"                         DTDISPENSER="clsidSDTCLB"  DTLOCATOR="0"                                                  LTDISPENSER="clsidSLTAPP"              FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSINTERFACE"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="10"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSITFMETHOD"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="8"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSITFDISPID"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="9"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLECONFIG"              DTDISPENSER="clsidSDTCLB"  DTLOCATOR="6"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLEDEFINITION"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="5"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLESET"                 DTDISPENSER="clsidSDTCLB"  DTLOCATOR="11"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_SERVICES"                DTDISPENSER="clsidSDTCLB"  DTLOCATOR="12"                                                                                        FLAGS="0"          />

        <SimpleRowData TID="tidLOCALCOMPUTER"                       DTDISPENSER="clsidSDTCLB"  DTLOCATOR="3"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidCOMPUTERLIST"                        DTDISPENSER="clsidSDTCLB"  DTLOCATOR="1"                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidSERVERGROUP"                         DTDISPENSER="clsidSDTCLB"  DTLOCATOR="15"                                                 LTDISPENSER="clsidSLTClust"            FLAGS="0"          />
        <SimpleRowData TID="tidIMDBDATASOURCES"                     DTDISPENSER="clsidSDTCLB"  DTLOCATOR="13"                                                 LTDISPENSER="clsidSLTIMDB"             FLAGS="0"          />
        <SimpleRowData TID="tidIMDBTABLES"                          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="14"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_LT_ROLECONFIG"                                                                                                     LTDISPENSER="clsidSLTROLECONFIG"       FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_LT_ROLEDEFINITION"                                                                                                 LTDISPENSER="clsidSLTROLEDEFINITION"   FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_LT_ROLESBYMETHOD"                                                                                                  LTDISPENSER="clsidSLTROLESBYMETHOD"    FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_LT_ROLESBYINTERFACE"                                                                                               LTDISPENSER="clsidSLTROLESBYINTERFACE" FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_LT_ROLESBYCLSID"                                                                                                   LTDISPENSER="clsidSLTROLESBYCLSID"     FLAGS="269484032"  />

        <SimpleRowData TID="tidCOMSERVICES_APLICATION_EXPORT"       DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a0"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSES_EXPORT"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a1"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSINTERFACE_EXPORT"   DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a2"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSITFMETHOD_EXPORT"   DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a4"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_CLASSITFDISPID_EXPORT"   DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a3"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLECONFIG_EXPORT"       DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a6"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLEDEFINITION_EXPORT"   DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a5"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLESDCACHE_EXPORT"      DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a7"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_ROLESET_EXPORT"          DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a8"                                                                                        FLAGS="0"          />
        <SimpleRowData TID="tidCOMSERVICES_DLLNAMES_EXPORT"         DTDISPENSER="clsidSDTCLB"  DTLOCATOR="a9"                                                                                        FLAGS="0"          />

        <SimpleRowData TID="tidCOMSERVICES_MACHINESETTINGS"                                                                                                   LTDISPENSER="clsidSDTMACHINESETTINGS"  FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_PROTOCOLS"                                                                                                         LTDISPENSER="clsidSDTPROTOCOLS"        FLAGS="269484032"  />
        <SimpleRowData TID="tidCOMSERVICES_ENDPOINTS"                                                                                                         LTDISPENSER="clsidSDTENDPOINTS"        FLAGS="269484032"  />
        <SimpleRowData TID="tidAPPDU_CLASSROLES"                                                                                                                                                     FLAGS="0"          />
        <SimpleRowData TID="tidAPPDU_INTERFACEROLES"                                                                                                                                                 FLAGS="0"          />
        <SimpleRowData TID="tidAPPDU_METHOD"                                                                                                                                                         FLAGS="0"          />
        <SimpleRowData TID="tidStephensTestTable"                   DTDISPENSER="clsidSDTXML"                                                                                                        FLAGS="0"          />
    </SimpleDataTable>

    <SimpleDataTable xmlns="x-schema:tidSTD_DWIDDETECT.Schema" tidGuidID="_EC127050-A89A-11D1-9D26-006008B0E5CA_"     tidInternalName="tidSTD_DWIDDETECT">
        <!--            FILEEXTENSION=string    DETECTIONORDER=ui4      DWDETECTOR=idref-->
        <SimpleRowData  FILEEXTENSION="reg"     DETECTIONORDER="0"      DWDETECTOR="clsidSDTREG"/>
    </SimpleDataTable>

    <SimpleDataTable xmlns="x-schema:tidSTD_DTDDLL.Schema" tidGuidID="_A23FD460-BEBB-11D1-9D32-006008B0E5CA_"     tidInternalName="tidSTD_DTDDLL">
        <!--            CLSID=idref                         DLL=string-->
        <SimpleRowData  CLSID="clsidSDTFXD"                 DLL="CatInPro.dll"/>
        <SimpleRowData  CLSID="clsidSDTREG"                 DLL="CatInPro.dll"/>
        <SimpleRowData  CLSID="clsidSLTCOMS"                DLL="clbcatq.dll"/>
        <SimpleRowData  CLSID="clsidSLTSHP"                 DLL="clbcatq.dll"/>
        <SimpleRowData  CLSID="clsidSDTCLB"                 DLL="clbcatq.dll"/>
        <SimpleRowData  CLSID="clsidSTCLIENT"               DLL="stclient.dll"/>
        <SimpleRowData  CLSID="clsidSLTAPP"                 DLL="clbcatex.dll"/>
        <SimpleRowData  CLSID="clsidSLTIMDB"                DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTROLECONFIG"          DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTROLEDEFINITION"      DLL="catsrvut.dll"/>

        <SimpleRowData  CLSID="clsidSLTROLESBYMETHOD"       DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTROLESBYINTERFACE"    DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTROLESBYCLSID"        DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTCOMSCLIENT"          DLL="clbcatq.dll"/>
        <SimpleRowData  CLSID="clsidSDTMACHINESETTINGS"     DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSDTPROTOCOLS"           DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSDTENDPOINTS"           DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSLTClust"               DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSDTIMetaData"           DLL="catsrvut.dll"/>
        <SimpleRowData  CLSID="clsidSDTXML"                 DLL="CatInPro.dll"/>
    </SimpleDataTable>
</XMLDataStore>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\stores\xmltable\comcatmeta.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:ComCatMeta.Schema">

    <TableMetaFlag      Flag="fST_TABLEMETA_NOFLGAS"        Value="0"  />
    <TableMetaFlag      Flag="fST_TABLEMETA_INTERNAL"       Value="1"  />
    <TableMetaFlag      Flag="fST_TABLEMETA_NOLISTENING"    Value="2"  />
    <TableMetaFlag      Flag="fST_TABLEMETA_NEEDSINTEGRITY" Value="4"  />
    <TableMetaFlag      Flag="fST_TABLEMETA_ROWINTEGRITY"   Value="8"  />
    <TableMetaFlag      Flag="fST_TABLEMETA_DONOTDEPLOY"    Value="16" />
    <TableMetaFlag      Flag="fST_TABLEMETA_UNKNOWNSIZES"   Value="32" />
    <TableMetaFlag      Flag="fST_TABLEMETA_NOPUBLICINSERT" Value="64" />
    <TableMetaFlag      Flag="fST_TABLEMETA_NOPUBLICUPDATE" Value="128"/>
    <TableMetaFlag      Flag="fST_TABLEMETA_NOPUBLICDELETE" Value="256"/>
                              
    <ColumnMetaFlag     Flag="fST_COLUMN_NOFLAGS"           Value="0"/>
    <ColumnMetaFlag     Flag="fST_COLUMN_PRIMARYKEY"        Value="1"/>
    <ColumnMetaFlag     Flag="fST_COLUMN_NOTNULLABLE"       Value="2"/>
    <ColumnMetaFlag     Flag="fST_COLUMN_FIXEDLENGTH"       Value="4"/>
    <ColumnMetaFlag     Flag="fST_COLUMN_NOTPERSISTABLE"    Value="8"/>
    <ColumnMetaFlag     Flag="fST_COLUMN_INDEX"             Value="16"/>

    <DatabaseMeta       didInternalName="didAPP_PRIVATE"    didGuid="BDC31734-08A1-11D3-BABE-00C04F68DDC0"  didVersion="0"  didPublicName=""/>
    <DatabaseMeta       didInternalName="didAPPDU"          didGuid="793017CD-22B8-11D2-8F43-00C04FC2E0C7"  didVersion="0"  didPublicName=""/>
    <DatabaseMeta       didInternalName="didCOMCLASSIC"     didGuid="6E38D3C3-C2A7-11D1-8DEC-00C04FC2E0C7"  didVersion="0"  didPublicName=""/>
    <DatabaseMeta       didInternalName="didCOMSERVICES"    didGuid="6E38D3C4-C2A7-11D1-8DEC-00C04FC2E0C7"  didVersion="0"  didPublicName=""/>
    <DatabaseMeta       didInternalName="didMEMORY"         didGuid="6E38D3C2-C2A7-11D1-8DEC-00C04FC2E0C7"  didVersion="0"  didPublicName=""/>
    <DatabaseMeta       didInternalName="didSTD_DBWIRING"   didGuid="8697B2C0-9C0A-11D1-9D22-006008B0E5CA"  didVersion="0"  didPublicName=""/>

    <TableMeta          tidInternalName="tidAPPDU_INTERFACEPROP"                        tidGuidID="_3B58F352-9495-11D2-8B9A-00C04FD7A924_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_CLASSES"                        tidGuidID="_6E38D3C8-C2A7-11D1-8DEC-00C04FC2E0C7_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_COMSERVERS"                     tidGuidID="_8C5FF4B7-2DD3-11D2-8041-00C04FB9988E_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_INTERFACES"                     tidGuidID="_0E9E62C9-32AE-11D2-8F4C-00C04FC2E0C7_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_LT_ROLECONFIG"                  tidGuidID="_CD331D10-C739-11D1-9D35-006008B0E5CA_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_LT_ROLEDEFINITION"              tidGuidID="_CD331D11-C739-11D1-9D35-006008B0E5CA_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_LT_ROLESBYCLSID"                tidGuidID="_CD331D12-C739-11D1-9D35-006008B0E5CA_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_LT_ROLESBYINTERFACE"            tidGuidID="_CD331D13-C739-11D1-9D35-006008B0E5CA_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_LT_ROLESBYMETHOD"               tidGuidID="_CD331D14-C739-11D1-9D35-006008B0E5CA_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_PUBLISHERPROPERTIES_EXPORT"     tidGuidID="_5D67251A-B7D4-11D2-B121-00805FC73204_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidCOMSERVICES_SUBSCRIBERPROPERTIES_EXPORT"    tidGuidID="_5D67251B-B7D4-11D2-B121-00805FC73204_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidEVENTCLASSES"                               tidGuidID="_5A84E822-7277-11D2-9029-3078302C2030_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidMETA"                                       tidGuidID="_5C46995D-D7E9-11D1-8E16-00C04FC2E0C7_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidMETA_EXTENDED"                              tidGuidID="_5C46995E-D7E9-11D1-8E16-00C04FC2E0C7_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidMEMORY_SHAPEABLE"                           tidGuidID="_6E38D3C5-C2A7-11D1-8DEC-00C04FC2E0C7_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidPUBLISHERPROPERTIES"                        tidGuidID="_5A84E824-7277-11D2-9029-3078302C2030_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidSUBSCRIPTIONS"                              tidGuidID="_5A84E823-7277-11D2-9029-3078302C2030_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidSUBSCRIBERPROPERTIES"                       tidGuidID="_5A84E825-7277-11D2-9029-3078302C2030_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidTRANSIENTSUBSCRIPTIONS"                     tidGuidID="_0B202DFD-CC4B-11D2-B121-00805FC73204_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidTRANSIENTSUBSCRIBERPROPERTIES"              tidGuidID="_E617DED4-E2E7-11D2-B123-00805FC73204_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
    <TableMeta          tidInternalName="tidTRANSIENTPUBLISHERPROPERTIES"               tidGuidID="_E617DED5-E2E7-11D2-B123-00805FC73204_"  tidVersion="0"  NameColumn="0"   NavColumn="0"    tidPublicName=""/>
                                                                                                                                                                                                                                      
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_6E38D3C7-C2A7-11D1-8DEC-00C04FC2E0C7_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMCLASSIC_CLASSES"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="InprocServer32"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ThreadingModel"                    dbType="WSTR"   cbSize="24"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="ProgID"                            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="VIProgID"                          dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_BCD79B13-0DDA-11D2-8A9A-00A0C96B9BB4_"  didInternalName="didCOMCLASSIC"     tidInternalName="tidCOMCLASSIC_PROGIDS"/>
        <ColumnMeta     colInternalName="ProgID"                            dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_3A059540-1751-11D2-8B91-00C04FD7A924_"  didInternalName="didCOMCLASSIC"     tidInternalName="tidCOMCLASSIC_IIDS"    />
        <ColumnMeta     colInternalName="IID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="PSC32"                             dbType="GUID"/>
        <ColumnMeta     colInternalName="TLBID"                             dbType="GUID"/>
        <ColumnMeta     colInternalName="TLBVERSION"                        dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>                                           
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_42816F21-5329-11D2-8B93-00C04FD7A924_"  didInternalName="didCOMCLASSIC"     tidInternalName="tidCOMCLASSIC_FILEEXT"/>
        <ColumnMeta     colInternalName="FileExtension"                     dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="ProgID"                            dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_42816F22-5329-11D2-8B93-00C04FD7A924_"  tidInternalName="tidCOMCLASSIC_MIMETYPE"/>
        <ColumnMeta     colInternalName="MimeTypeString"                    dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_6E38D3CA-C2A7-11D1-8DEC-00C04FC2E0C7_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSES_INTERNAL"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="APPLID"                            dbType="GUID"/>
        <ColumnMeta     colInternalName="ImplCLSID"                         dbType="GUID"/>
        <ColumnMeta     colInternalName="VersionMajor"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionMinor"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionBuild"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionSubBuild"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Locale"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ClsCtx"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Transaction"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Syncronization"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="LoadBalanced"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IISIntrinsics"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="COMTIIntrinsics"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="JITActivation"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RoleBasedSecurityEnabled"          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RoleSetID"                         dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="MinPoolSize"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="MaxPoolSize"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CreationTimeout"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ConstructString"                   dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ClassFlags"                        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DefaultInterface"                  dbType="GUID"/>
        <ColumnMeta     colInternalName="NoSetCompleteEtAlOption"           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SavedProgID"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RegistrarCLSID"                    dbType="GUID"/>
        <ColumnMeta     colInternalName="ExceptionClass"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IsSelfRegComponent"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SelfReg_InprocServer"              dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_ThreadingModel"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SelfReg_ProgID"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_Description"               dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_VIProgID"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="VbDebuggingFlags"                  dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsEventClass"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="PublisherID"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="MultiInterfacePublisherFilterCLSID" dbType="GUID"/>
        <ColumnMeta     colInternalName="AllowInprocSubscribers"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="FireInParalel"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SavedThreadingModel"               dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SavedSelfRegVIProgID"              dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C6-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSINTERFACE"/>
        <TableMeta      tidGuidID="_16E44574-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSINTERFACE_EXPORT" />
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="IID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="NAME"                              dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="RoleSetID"                         dbType="GUID"/>
        <ColumnMeta     colInternalName="IsDispatchable"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsQueueable"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsQueueingSupported"               dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C5-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSITFDISPID"/>
        <TableMeta      tidGuidID="_16E44576-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSITFDISPID_EXPORT"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="IID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DispID"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C4-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSITFMETHOD"/>
        <TableMeta      tidGuidID="_16E44575-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSITFMETHOD_EXPORT"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="IID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="MethodIndex"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="RoleSetID"                         dbType="GUID"/>
        <ColumnMeta     colInternalName="MethodName"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DispId"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Flags"                             dbType="UI4"/>
        <ColumnMeta     colInternalName="AutoComplete"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C1-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLECONFIG"/>
        <TableMeta      tidGuidID="_3DB6D401-DFC6-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLECONFIG_EXPORT"/>
        <ColumnMeta     colInternalName="Application"                       dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleMember"                        dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="UserSID"                           dbType="BYTES"  cbSize="43"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_7397ED00-C68B-11D1-9D34-006008B0E5CA_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLEDEFINITION"/>
        <TableMeta      tidGuidID="_3DB6D402-DFC6-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLEDEFINITION_EXPORT"/>
        <ColumnMeta     colInternalName="Application"                       dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C2-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLESDCACHE"/>
        <TableMeta      tidGuidID="_3DB6D403-DFC6-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLESDCACHE_EXPORT"/>
        <ColumnMeta     colInternalName="Application"                       dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D13B72C3-C426-11D1-8507-006008B0E79D_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLESET"/>
        <TableMeta      tidGuidID="_3DB6D404-DFC6-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ROLESET_EXPORT"/>
        <ColumnMeta     colInternalName="RoleSetID"                         dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Application"                       dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_1DE5A441-CF10-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_SERVICES"/>
        <ColumnMeta     colInternalName="ApplOrProcessId"                   dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Service_CLSID"                     dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_4B718B54-B629-11D2-B120-00805FC73204_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_SUBSCRIPTIONS_EXPORT"/>
        <ColumnMeta     colInternalName="SubscriptionID"                    dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SubscriptionName"                  dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="EventClassID"                      dbType="GUID"/>
        <ColumnMeta     colInternalName="MethodName"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SubscriberCLSID"                   dbType="GUID"/>
        <ColumnMeta     colInternalName="PerUser"                           dbType="UI4"/>
        <ColumnMeta     colInternalName="UserName"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Enabled"                           dbType="UI4"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="MachineName"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="PublisherID"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="InterfaceID"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="FilterCriteria"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Subsystem"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SubscriberMoniker"                 dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Queued"                            dbType="UI4"/>
        <ColumnMeta     colInternalName="SubscriberInterface"               dbType="BYTES"  cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_C59CE481-C28E-11D1-A014-0000F81E84F8_"  didInternalName="didCOMSERVICES"    tidInternalName="tidIMDBDATASOURCES"/>
        <ColumnMeta     colInternalName="DATA_SOURCE"                       dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="OLEDB_PROVIDER_NAME"               dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SERVER"                            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DATABSE"                           dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="PROVIDER_SPECIFIC_PROPERTY"        dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_C59CE482-C28E-11D1-A014-0000F81E84F8_"  didInternalName="didCOMSERVICES"    tidInternalName="tidIMDBTABLES"/>
        <ColumnMeta     colInternalName="NAME"                              dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DATA_SOURCE"                       dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="LOAD_BLOB_AT_START"                dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_D495F321-AF37-11D1-8B7E-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidAPPLICATION"/>
        <TableMeta      tidGuidID="_16E44571-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_APLICATION_EXPORT"/>
        <ColumnMeta     colInternalName="ApplIDPK"                          dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="ApplName"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Flags"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ServerName"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ProcessType"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CommandLine"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ServiceName"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RunAsUserType"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RunAsUser"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="AccessPermission"                  dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IsSystem"                          dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
        <ColumnMeta     colInternalName="Authentication"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ShutdownAfter"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RunForever"                        dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
        <ColumnMeta     colInternalName="Password"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Activation"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Changeable"                        dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
        <ColumnMeta     colInternalName="Deleteable"                        dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
        <ColumnMeta     colInternalName="CreatedBy"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="QueueBlob"                         dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="RoleBasedSecuritySupported"        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RoleBasedSecurityEnabled"          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="ImpersonationLevel"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="AuthenticationCapability"          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CRMEnabled"                        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Enable3GigSupport"                 dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsQueued"                          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="QCListenerEnabled"                 dbType="WSTR"   cbSize="4"      ColumnMetaFlags="fST_COLUMN_FIXEDLENGTH"/>
        <ColumnMeta     colInternalName="EventsEnabled"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ProcessFlags"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ThreadMax"                         dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsProxyApp"                        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CRMLogFile"                        dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_C3148981-AF46-11D1-8B7E-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCUSTOMACTIVATOR"/>
        <ColumnMeta     colInternalName="CustomActivatorPK"                 dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="StagePK"                           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="OrderPK"                           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ActivatorCLSID"                    dbType="GUID"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_F61ACE00-BD4F-11D1-8280-00A0C9231C29_"  didInternalName="didCOMSERVICES"    tidInternalName="tidLOCALCOMPUTER"/>
        <ColumnMeta     colInternalName="Name"                              dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="TransactionTimeout"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RemoteComponentInstallPath"        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="PackageInstallPath"                dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ResourcePoolingEnabled"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ReplicationShare"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RemoteServerName"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IMDBMemorySize"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBReservedBlobMemory"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBConnections"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBLoadTablesDynamically"         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IsRouter"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="EnableDCOM"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DefaultAuthenticationLevel"        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DefaultImpersonationLevel"         dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="EnableSecurityTracking"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ActivityTimeout"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBEnabled"                       dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_AD4DB950-5637-11D2-8B93-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidAPPDU_CLASSROLES"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_AD4DB951-5637-11D2-8B93-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidAPPDU_INTERFACEROLES"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_AD4DB952-5637-11D2-8B93-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidAPPDU_METHOD"/>
        <ColumnMeta     colInternalName="MethodName"                        dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="RoleName"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="AutoDone"                          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_61436562-EE01-11D1-BFE4-00C04FB9988E_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_MACHINESETTINGS"/>
        <ColumnMeta     colInternalName="SERVERNAME"                        dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="TransactionTimeout"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="PackageInstallPath"                dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ResourcePoolingEnabled"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ReplicationShare"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RemoteServerName"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IMDBMemorySize"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBReservedBlobMemory"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IMDBLoadTablesDynamically"         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IsRouter"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="EnableDCOM"                        dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DefaultAuthenticationLevel"        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DefaultImpersonationLevel"         dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="EnableSecurityTracking"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="EnableCIS"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="EnableSecureReferences"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="PortsInternetAvailable"            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="UseInternetPorts"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Ports"                             dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DefaultAccessPermission"           dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="DefaultLaunchPermission"           dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="IMDBEnabled"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RpcProxyEnabled"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="OperatingSystem"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_61436563-EE01-11D1-BFE4-00C04FB9988E_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_PROTOCOLS"/>
        <ColumnMeta     colInternalName="Entry"                             dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Order"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_61436565-EE01-11D1-BFE4-00C04FB9988E_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_ENDPOINTS"/>
        <ColumnMeta     colInternalName="Column0"                           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Column1"                           dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Column2"                           dbType="GUID"/>
        <ColumnMeta     colInternalName="Column3"                           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_2DAF1D50-BD53-11D1-8280-00A0C9231C29_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMPUTERLIST"/>
        <ColumnMeta     colInternalName="Name"                              dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_B7EEEA91-B3B9-11D1-8B7E-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidSERVERGROUP"/>
        <ColumnMeta     colInternalName="SERVERNAME"                        dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_16E44573-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_CLASSES_EXPORT"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="InprocServer32"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ThreadingModel"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ProgID"                            dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="Description"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="VIProgID"                          dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="APPLID"                            dbType="GUID"/>
        <ColumnMeta     colInternalName="ImplCLSID"                         dbType="GUID"/>
        <ColumnMeta     colInternalName="VersionMajor"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionMinor"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionBuild"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="VersionSubBuild"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Locale"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ClsCtx"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Transaction"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="Syncronization"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="LoadBalanced"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IISIntrinsics"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="COMTIIntrinsics"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="JITActivation"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="RoleBasedSecurityEnabled"          dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SecurityDescriptor"                dbType="BYTES"  cbSize="-1"/>
        <ColumnMeta     colInternalName="RoleSetID"                         dbType="GUID"/>
        <ColumnMeta     colInternalName="MinPoolSize"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="MaxPoolSize"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CreationTimeout"                   dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="ConstructString"                   dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ClassFlags"                        dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DefaultInterface"                  dbType="GUID"/>
        <ColumnMeta     colInternalName="NoSetCompleteEtAlOption"           dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SavedProgID"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="RegistrarCLSID"                    dbType="GUID"/>
        <ColumnMeta     colInternalName="ExceptionClass"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="IsSelfRegComponent"                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SelfReg_InprocServer"              dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_ThreadingModel"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SelfReg_ProgID"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_Description"               dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="SelfReg_VIProgID"                  dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="VbDebuggingFlags"                  dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="IsEventClass"                      dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="PublisherID"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="MultiInterfacePublisherFilterCLSID" dbType="GUID"/>
        <ColumnMeta     colInternalName="AllowInprocSubscribers"            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="FireInParalel"                     dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="SavedThreadingModel"               dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_16E44572-DF8C-11D1-8B87-00C04FD7A924_"  didInternalName="didCOMSERVICES"    tidInternalName="tidCOMSERVICES_DLLNAMES_EXPORT"/>
        <ColumnMeta     colInternalName="ApplicationID"                     dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DllName"                           dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
    </ColumnMetaTable>

    <ColumnMetaTable>
        <TableMeta      tidGuidID="_AEEF82F1-9849-11D1-9D22-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_DBWIRING" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="DID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DWTABLEDISPENSER"                  dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DWTABLELOCATOR"                    dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="FLAGS"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DEFAULTCLIENTDISPENSER"            dbType="GUID"/>
        <ColumnMeta     colInternalName="DEFAULTSERVERDISPENSER"            dbType="GUID"/>
        <ColumnMeta     colInternalName="DEFAULTCLIENTLOCATOR"              dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DEFAULTSERVERLOCATOR"              dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="DEFAULTCATSRVIID"                  dbType="GUID"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_A7A0FFB0-98D4-11D1-9D22-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_BASICCLIENTWIRING" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="TID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DTDISPENSER"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="DTLOCATOR"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="LTDISPENSER"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="FLAGS"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="CATSRVIID"                         dbType="GUID"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_A7A0FFB1-98D4-11D1-9D22-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_BASICSERVERWIRING" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="TID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DTDISPENSER"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="DTLOCATOR"                         dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="LTDISPENSER"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="FLAGS"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_A7A0FFB9-98D4-11D1-9D22-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_EXTENDEDCLIENTWIRING"/>
        <TableMeta      tidGuidID="_A7A0FFBA-98D4-11D1-9D22-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_EXTENDEDSERVERWIRING"/>
        <ColumnMeta     colInternalName="TID"                               dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="LTDISPENSER"                       dbType="GUID"/>
        <ColumnMeta     colInternalName="ORDER"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_EC127050-A89A-11D1-9D26-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_DWIDDETECT" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="FILEEXTENSION"                     dbType="WSTR"   cbSize="-1"      ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DETECTIONORDER"                    dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="DWDETECTOR"                        dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_A23FD460-BEBB-11D1-9D32-006008B0E5CA_"  didInternalName="didSTD_DBWIRING"   tidInternalName="tidSTD_DTDDLL" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="CLSID"                             dbType="GUID"                   ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="DLL"                               dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="HINST"                             dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTPERSISTABLE fST_COLUMN_NOTNULLABLE"/>
        <ColumnMeta     colInternalName="PROCADDRESS"                       dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_NOTPERSISTABLE fST_COLUMN_NOTNULLABLE"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_62B69542-D7E5-11D2-B1D2-00C04FB950F6_"  tidInternalName="tidTBLNAMESPACEIDS" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="ID"                                dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="LogicalName"                       dbType="WSTR"   cbSize="-1"/>
        <ColumnMeta     colInternalName="ParentID"                          dbType="UI4"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_62B69543-D7E5-11D2-B1D2-00C04FB950F6_"  tidInternalName="tidTBLNODEPROPERTYBAGINFO" emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="NodeID"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="PropertyName"                      dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="PropertyValue"                     dbType="WSTR"   cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_62B69544-D7E5-11D2-B1D2-00C04FB950F6_"  tidInternalName="tidTBLNODEOBJECTBAGINFO"   emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="NodeID"                            dbType="UI4"                    ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="ObjectName"                        dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="ObjectBLOB"                        dbType="BYTES"  cbSize="-1" />
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta      tidGuidID="_134B49D4-0987-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLASSEMBLYSETTING"   emitXMLSchema="1"/>
        <TableMeta      tidGuidID="_CA755B5E-0E32-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLSETTINGTMP1"       emitXMLSchema="1"/>
        <TableMeta      tidGuidID="_CA755B5F-0E32-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLSETTINGTMP2"       emitXMLSchema="1"/>
        <TableMeta      tidGuidID="_CA755B60-0E32-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLSETTINGTMP3"       emitXMLSchema="1"/>
        <TableMeta      tidGuidID="_CA755B61-0E32-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLSETTINGTMP4"       emitXMLSchema="1"/>
        <TableMeta      tidGuidID="_CA755B62-0E32-11D3-8AD3-00C04F7978BE_"  tidInternalName="tidTBLSETTINGTMP5"       emitXMLSchema="1"/>
        <ColumnMeta     colInternalName="Name"                              dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta     colInternalName="Type"                              dbType="UI4"/>
        <ColumnMeta     colInternalName="Flag"                              dbType="UI4"/>
        <ColumnMeta     colInternalName="Value"                             dbType="BYTES"  cbSize="-1"/>
    </ColumnMetaTable>
    <ColumnMetaTable>
        <TableMeta tidGuidID="_0A7F40C6-149F-11D3-B1ED-00C04FB950F6_"       tidInternalName="tidTBLSIMPLESETTING"       emitXMLSchema="1"     tidVersion="2"/>
        <ColumnMeta colInternalName="Name"                                  dbType="WSTR"   cbSize="-1"     ColumnMetaFlags="fST_COLUMN_PRIMARYKEY"/>
        <ColumnMeta colInternalName="Flag"                                  dbType="UI4" />
        <ColumnMeta colInternalName="Value"                                 dbType="WSTR"   cbSize="-1" />
    </ColumnMetaTable>
</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\test\testcookdown\apppool.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:catalog.xms">

      <TableAppPool>
         <!--      
                  AppPoolID               = string
                  PeriodicRestartTime     = ui4
                  PeriodicRestartRequests = ui4
                  MaxProcesses            = ui4
                  PingingEnabled          = ui4
                  IdleTimeout             = ui4
                  RapidFailProtection     = ui4
                  AppPath                 = string
         -->
         <AppPool      
                  AppPoolID               = "AppPool21"
                  PeriodicRestartTime     = "211"
                  PeriodicRestartRequests = "212"
                  MaxProcesses            = "213"
                  PingingEnabled          = "214"
                  IdleTimeout             = "115"
                  RapidFailProtection     = "216"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool22"
                  PeriodicRestartTime     = "221"
                  PeriodicRestartRequests = "222"
                  MaxProcesses            = "223"
                  PingingEnabled          = "224"
                  IdleTimeout             = "125"
                  RapidFailProtection     = "226"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool23"
                  PeriodicRestartTime     = "231"
                  PeriodicRestartRequests = "232"
                  MaxProcesses            = "233"
                  PingingEnabled          = "234"
                  IdleTimeout             = "135"
                  RapidFailProtection     = "236"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool24"
                  PeriodicRestartTime     = "241"
                  PeriodicRestartRequests = "242"
                  MaxProcesses            = "243"
                  PingingEnabled          = "244"
                  IdleTimeout             = "145"
                  RapidFailProtection     = "246"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool25"
                  PeriodicRestartTime     = "251"
                  PeriodicRestartRequests = "252"
                  MaxProcesses            = "253"
                  PingingEnabled          = "254"
                  IdleTimeout             = "155"
                  RapidFailProtection     = "256"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool27"
                  PeriodicRestartTime     = "271"
                  PeriodicRestartRequests = "272"
                  MaxProcesses            = "273"
                  PingingEnabled          = "274"
                  IdleTimeout             = "175"
                  RapidFailProtection     = "276"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool28"
                  PeriodicRestartTime     = "281"
                  PeriodicRestartRequests = "282"
                  MaxProcesses            = "283"
                  PingingEnabled          = "284"
                  IdleTimeout             = "185"
                  RapidFailProtection     = "286"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool29"
                  PeriodicRestartTime     = "291"
                  PeriodicRestartRequests = "292"
                  MaxProcesses            = "293"
                  PingingEnabled          = "294"
                  IdleTimeout             = "195"
                  RapidFailProtection     = "296"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool30"
                  PeriodicRestartTime     = "301"
                  PeriodicRestartRequests = "302"
                  MaxProcesses            = "303"
                  PingingEnabled          = "304"
                  IdleTimeout             = "305"
                  RapidFailProtection     = "306"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool31"
                  PeriodicRestartTime     = "311"
                  PeriodicRestartRequests = "312"
                  MaxProcesses            = "313"
                  PingingEnabled          = "314"
                  IdleTimeout             = "315"
                  RapidFailProtection     = "316"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool32"
                  PeriodicRestartTime     = "211"
                  PeriodicRestartRequests = "212"
                  MaxProcesses            = "213"
                  PingingEnabled          = "214"
                  IdleTimeout             = "115"
                  RapidFailProtection     = "216"
                  AppPath                 = "%systemroot%\xspdt"
         />
      </TableAppPool>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\test\testmngdist\apppool.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:catalog.xms">

      <TableAppPool>
         <!--      
                  AppPoolID               = string
                  PeriodicRestartTime     = ui4
                  PeriodicRestartRequests = ui4
                  MaxProcesses            = ui4
                  PingingEnabled          = ui4
                  IdleTimeout             = ui4
                  RapidFailProtection     = ui4
                  AppPath                 = string
         -->
         <AppPool      
                  AppPoolID               = "AppPool21"
                  PeriodicRestartTime     = "211"
                  PeriodicRestartRequests = "212"
                  MaxProcesses            = "213"
                  PingingEnabled          = "214"
                  IdleTimeout             = "115"
                  RapidFailProtection     = "216"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool22"
                  PeriodicRestartTime     = "221"
                  PeriodicRestartRequests = "222"
                  MaxProcesses            = "223"
                  PingingEnabled          = "224"
                  IdleTimeout             = "125"
                  RapidFailProtection     = "226"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool23"
                  PeriodicRestartTime     = "231"
                  PeriodicRestartRequests = "232"
                  MaxProcesses            = "233"
                  PingingEnabled          = "234"
                  IdleTimeout             = "135"
                  RapidFailProtection     = "236"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool24"
                  PeriodicRestartTime     = "241"
                  PeriodicRestartRequests = "242"
                  MaxProcesses            = "243"
                  PingingEnabled          = "244"
                  IdleTimeout             = "145"
                  RapidFailProtection     = "246"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool25"
                  PeriodicRestartTime     = "251"
                  PeriodicRestartRequests = "252"
                  MaxProcesses            = "253"
                  PingingEnabled          = "254"
                  IdleTimeout             = "155"
                  RapidFailProtection     = "256"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool27"
                  PeriodicRestartTime     = "271"
                  PeriodicRestartRequests = "272"
                  MaxProcesses            = "273"
                  PingingEnabled          = "274"
                  IdleTimeout             = "175"
                  RapidFailProtection     = "276"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool28"
                  PeriodicRestartTime     = "281"
                  PeriodicRestartRequests = "282"
                  MaxProcesses            = "283"
                  PingingEnabled          = "284"
                  IdleTimeout             = "185"
                  RapidFailProtection     = "286"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool29"
                  PeriodicRestartTime     = "291"
                  PeriodicRestartRequests = "292"
                  MaxProcesses            = "293"
                  PingingEnabled          = "294"
                  IdleTimeout             = "195"
                  RapidFailProtection     = "296"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool30"
                  PeriodicRestartTime     = "301"
                  PeriodicRestartRequests = "302"
                  MaxProcesses            = "303"
                  PingingEnabled          = "304"
                  IdleTimeout             = "305"
                  RapidFailProtection     = "306"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool31"
                  PeriodicRestartTime     = "311"
                  PeriodicRestartRequests = "312"
                  MaxProcesses            = "313"
                  PingingEnabled          = "314"
                  IdleTimeout             = "315"
                  RapidFailProtection     = "316"
                  AppPath                 = "%systemroot%\xspdt"
         />
         <AppPool      
                  AppPoolID               = "AppPool32"
                  PeriodicRestartTime     = "211"
                  PeriodicRestartRequests = "212"
                  MaxProcesses            = "213"
                  PingingEnabled          = "214"
                  IdleTimeout             = "115"
                  RapidFailProtection     = "216"
                  AppPath                 = "%systemroot%\xspdt"
         />
      </TableAppPool>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\test\testcookdown\expected.log ===
MachineConfigDirectory = D:\WINNT\XSPDT
Creating CONFIG_MANAGER
Calling Initialize
Initialize succeeded
Displaying from Cooked Down CLB
Displaying APPPOOLS Table
	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool21
	Column 2: 211
	Column 3: 212
	Column 4: 213
	Column 5: 1
	Column 6: 115
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool22
	Column 2: 221
	Column 3: 222
	Column 4: 223
	Column 5: 1
	Column 6: 125
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool23
	Column 2: 231
	Column 3: 232
	Column 4: 233
	Column 5: 1
	Column 6: 135
	Column 7: 0
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool24
	Column 2: 241
	Column 3: 242
	Column 4: 243
	Column 5: 0
	Column 6: 145
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool25
	Column 2: 251
	Column 3: 252
	Column 4: 253
	Column 5: 1
	Column 6: 155
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool27
	Column 2: 271
	Column 3: 272
	Column 4: 273
	Column 5: 1
	Column 6: 175
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool28
	Column 2: 281
	Column 3: 282
	Column 4: 283
	Column 5: 0
	Column 6: 185
	Column 7: 0
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool29
	Column 2: 291
	Column 3: 292
	Column 4: 293
	Column 5: 1
	Column 6: 195
	Column 7: 0
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: AppPool32
	Column 2: 211
	Column 3: 212
	Column 4: 213
	Column 5: 0
	Column 6: 115
	Column 7: 1
	Column 8: 0
	Column 9: -1
	Column 10: 1
	Column 11: 0
	Column 12: 0

Displaying SITES Table
	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 301
	Column 2: AppPool21
	Column 3: D:\WINNT\XSPDT
	Column 4:740068 700074 2f003a 66002f 6f006f 63002e 6d006f 55002f 4c0052 720050 330065 310031 2f0000 520055 50004c 650072 310033 31 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 302
	Column 2: AppPool22
	Column 3: D:\WINNT\XSPDT
	Column 4:740068 700074 2f003a 55002f 4c0052 720050 330065 320032 550000 4c0052 720050 330065 32 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 303
	Column 2: AppPool23
	Column 3: D:\WINNT\XSPDT
	Column 4:520055 50004c 650072 330033 0 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 305
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:55002f 4c0052 720050 330065 35 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 306
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:520055 50004c 650072 360033 0 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 307
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:520055 50004c 650072 370033 0 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 308
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:520055 50004c 650072 380033 0 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 309
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:520055 50004c 650072 390033 0 

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: 310
	Column 2: AppPool32
	Column 3: D:\WINNT\XSPDT
	Column 4:740068 700074 2f003a 55002f 4c0052 720050 330065 300031 0 

Displaying APPLICATIONLIST Table
	Column 0: 302
	Column 1: /App2/
	Column 2: AppPool32

	Column 0: 305
	Column 1: /App2/
	Column 2: AppPool21

Displaying BINDINGS Table
	Column 0: 301
	Column 1: http://foo.com/URLPre311

	Column 0: 301
	Column 1: /URLPre311

	Column 0: 302
	Column 1: http://URLPre322

	Column 0: 302
	Column 1: URLPre32

	Column 0: 303
	Column 1: URLPre33

	Column 0: 305
	Column 1: /URLPre35

	Column 0: 306
	Column 1: URLPre36

	Column 0: 307
	Column 1: URLPre37

	Column 0: 308
	Column 1: URLPre38

	Column 0: 309
	Column 1: URLPre39

	Column 0: 310
	Column 1: http://URLPre310

Displaying APPS Table
	Column 0: NULL
	Column 1: /
	Column 2: 301
	Column 3: AppPool21
	Column 4: 120
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 302
	Column 3: AppPool22
	Column 4: 121
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 303
	Column 3: AppPool23
	Column 4: 122
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 305
	Column 3: AppPool32
	Column 4: 123
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 306
	Column 3: AppPool32
	Column 4: 124
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 307
	Column 3: AppPool32
	Column 4: 125
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 308
	Column 3: AppPool32
	Column 4: 126
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 309
	Column 3: AppPool32
	Column 4: 127
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 310
	Column 3: AppPool32
	Column 4: 128
	Column 5: 1

	Column 0: NULL
	Column 1: /
	Column 2: 311
	Column 3: AppPool32
	Column 4: 119
	Column 5: 1

Displaying FILETIME Table
	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: APPPOOLS
	Column 2: 598074358
	Column 3: 29304427

	Column 0: D:\WINNT\XSPDT\MACHINE.CFG
	Column 1: SITES
	Column 2: 598074358
	Column 3: 29304427

	Column 0: D:\WINNT\XSPDT\CONFIG.CFG
	Column 1: APPS
	Column 2: -630114472
	Column 3: 29300406

Displaying FILETIMEPARENT Table
	Column 0: APPS
	Column 1: SITES
	Column 2: D:\WINNT\XSPDT\MACHINE.CFG
	Column 3: 598074358
	Column 4: 29304427

Displaying COLUMNMETA Table
Finished displaying from Cooked Down CLB
Deleting CONFIG_MANAGER
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\test\testmngdist\expected.log ===
Creating ConfigurationDispenser
Calling ConfigurationDispenser::GetConfigurationCollection on APPPOOL Collection in APPPOOL.XML
Calling ConfigurationDispenser::GetConfigurationCollection COLUMNMETA Collection in WIRING
Calling ConfigurationDispenser::GetConfigurationCollection 2nd time on COLUMNMETA Collection in WIRING
Calling ConfigurationDispenser::GetConfigurationCollection on APPPOOL Collection in APPPOOL.CLB
Calling GetConfigurationCollection::GetCollectionMeta
Version     :0
Table Flags :0
Row Count   :11
Column Count:12
Calling GetConfigurationCollection::GetPropertyValues on all rows
Calling GetConfigurationCollection::GetPropertyMeta on all rows
--------------------------
   ROW: 0
--------------------------
Column   :1
  Value  :AppPool21
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :211
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :212
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :213
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :214
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :115
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :216
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 1
--------------------------
Column   :1
  Value  :AppPool22
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :221
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :222
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :223
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :224
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :125
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :226
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
Single Column   :1
Single Value    :221
Two  Column   :5
Value    :125
Two Column   :7
Value    :null
--------------------------
   ROW: 2
--------------------------
Column   :1
  Value  :AppPool23
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :231
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :232
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :233
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :234
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :135
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :236
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 3
--------------------------
Column   :1
  Value  :AppPool24
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :241
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :242
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :243
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :244
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :145
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :246
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 4
--------------------------
Column   :1
  Value  :AppPool25
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :251
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :252
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :253
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :254
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :155
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :256
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 5
--------------------------
Column   :1
  Value  :AppPool27
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :271
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :272
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :273
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :274
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :175
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :276
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 6
--------------------------
Column   :1
  Value  :AppPool28
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :281
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :282
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :283
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :284
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :185
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :286
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 7
--------------------------
Column   :1
  Value  :AppPool29
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :291
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :292
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :293
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :294
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :195
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :296
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 8
--------------------------
Column   :1
  Value  :AppPool30
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :301
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :302
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :303
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :304
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :305
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :306
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 9
--------------------------
Column   :1
  Value  :AppPool31
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :311
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :312
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :313
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :314
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :315
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :316
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
--------------------------
   ROW: 10
--------------------------
Column   :1
  Value  :AppPool32
  fMeta  :130
  dbType :268959745
Column   :2
  Value  :211
  fMeta  :19
  dbType :1048576
Column   :3
  Value  :212
  fMeta  :19
  dbType :1048576
Column   :4
  Value  :213
  fMeta  :19
  dbType :1048576
Column   :5
  Value  :214
  fMeta  :19
  dbType :1048576
Column   :6
  Value  :115
  fMeta  :19
  dbType :1048576
Column   :7
  Value  :216
  fMeta  :19
  dbType :1048576
Column   :8
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :9
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :10
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :11
  Value  :null
  fMeta  :19
  dbType :1048576
Column   :12
  Value  :null
  fMeta  :19
  dbType :1048576
End of rows
Calling GetConfigurationCollection::GetConfigurationObjectID on a given Configuration object.
The ConfigurationObjectID is: 1
Calling GetConfigurationCollection::GetPropertyValues on all rows in Column Meta
--------------------------
   ROW: 0
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 1
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Index
  Value  :Index
Column   :4
  Value  :Index
  Value  :Index
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 2
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959744
  Value  :268959744
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 3
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 4
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572992
  Value  :1572992
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 5
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :Size
  Value  :Size
Column   :4
  Value  :Size
  Value  :Size
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 6
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :MetaFlags
  Value  :MetaFlags
Column   :4
  Value  :MetaFlags
  Value  :MetaFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :536870911
  Value  :536870911
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 7
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :DefaultValue
  Value  :DefaultValue
Column   :4
  Value  :DefaultValue
  Value  :DefaultValue
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 8
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :FlagMask
  Value  :FlagMask
Column   :4
  Value  :FlagMask
  Value  :FlagMask
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 9
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :StartingNumber
  Value  :StartingNumber
Column   :4
  Value  :StartingNumber
  Value  :StartingNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 10
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :EndingNumber
  Value  :EndingNumber
Column   :4
  Value  :EndingNumber
  Value  :EndingNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 11
--------------------------
Column   :1
  Value  :COLUMNMETA
  Value  :COLUMNMETA
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :CharacterSet
  Value  :CharacterSet
Column   :4
  Value  :CharacterSet
  Value  :CharacterSet
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 12
--------------------------
Column   :1
  Value  :DATABASEMETA
  Value  :DATABASEMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :32
  Value  :32
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 13
--------------------------
Column   :1
  Value  :DATABASEMETA
  Value  :DATABASEMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 14
--------------------------
Column   :1
  Value  :DATABASEMETA
  Value  :DATABASEMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :BaseVersion
  Value  :BaseVersion
Column   :4
  Value  :BaseVersion
  Value  :BaseVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 15
--------------------------
Column   :1
  Value  :DATABASEMETA
  Value  :DATABASEMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :ExtendedVersion
  Value  :ExtendedVersion
Column   :4
  Value  :ExtendedVersion
  Value  :ExtendedVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 16
--------------------------
Column   :1
  Value  :DATABASEMETA
  Value  :DATABASEMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :CountOfTables
  Value  :CountOfTables
Column   :4
  Value  :CountOfTables
  Value  :CountOfTables
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 17
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Database
  Value  :Database
Column   :4
  Value  :Database
  Value  :Database
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :32
  Value  :32
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 18
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 19
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 20
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :PublicRowName
  Value  :PublicRowName
Column   :4
  Value  :PublicRowName
  Value  :PublicRowName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959744
  Value  :268959744
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 21
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :BaseVersion
  Value  :BaseVersion
Column   :4
  Value  :BaseVersion
  Value  :BaseVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 22
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :ExtendedVersion
  Value  :ExtendedVersion
Column   :4
  Value  :ExtendedVersion
  Value  :ExtendedVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 23
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :NameColumn
  Value  :NameColumn
Column   :4
  Value  :NameColumn
  Value  :NameColumn
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 24
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :NavColumn
  Value  :NavColumn
Column   :4
  Value  :NavColumn
  Value  :NavColumn
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 25
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :CountOfColumns
  Value  :CountOfColumns
Column   :4
  Value  :CountOfColumns
  Value  :CountOfColumns
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 26
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :MetaFlags
  Value  :MetaFlags
Column   :4
  Value  :MetaFlags
  Value  :MetaFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :1023
  Value  :1023
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 27
--------------------------
Column   :1
  Value  :TABLEMETA
  Value  :TABLEMETA
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :SchemaGeneratorFlags
  Value  :SchemaGeneratorFlags
Column   :4
  Value  :SchemaGeneratorFlags
  Value  :SchemaGeneratorFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :15
  Value  :15
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 28
--------------------------
Column   :1
  Value  :TAGMETA
  Value  :TAGMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 29
--------------------------
Column   :1
  Value  :TAGMETA
  Value  :TAGMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :ColumnIndex
  Value  :ColumnIndex
Column   :4
  Value  :ColumnIndex
  Value  :ColumnIndex
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 30
--------------------------
Column   :1
  Value  :TAGMETA
  Value  :TAGMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 31
--------------------------
Column   :1
  Value  :TAGMETA
  Value  :TAGMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 32
--------------------------
Column   :1
  Value  :TAGMETA
  Value  :TAGMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 33
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 34
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 35
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 36
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :ColumnIndex
  Value  :ColumnIndex
Column   :4
  Value  :ColumnIndex
  Value  :ColumnIndex
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 37
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :ColumnInternalName
  Value  :ColumnInternalName
Column   :4
  Value  :ColumnInternalName
  Value  :ColumnInternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959744
  Value  :268959744
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 38
--------------------------
Column   :1
  Value  :INDEXMETA
  Value  :INDEXMETA
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :MetaFlags
  Value  :MetaFlags
Column   :4
  Value  :MetaFlags
  Value  :MetaFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :7
  Value  :7
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 39
--------------------------
Column   :1
  Value  :RELATIONMETA
  Value  :RELATIONMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :PrimaryTable
  Value  :PrimaryTable
Column   :4
  Value  :PrimaryTable
  Value  :PrimaryTable
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 40
--------------------------
Column   :1
  Value  :RELATIONMETA
  Value  :RELATIONMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PrimaryColumns
  Value  :PrimaryColumns
Column   :4
  Value  :PrimaryColumns
  Value  :PrimaryColumns
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :403177472
  Value  :403177472
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 41
--------------------------
Column   :1
  Value  :RELATIONMETA
  Value  :RELATIONMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ForeignTable
  Value  :ForeignTable
Column   :4
  Value  :ForeignTable
  Value  :ForeignTable
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 42
--------------------------
Column   :1
  Value  :RELATIONMETA
  Value  :RELATIONMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :ForeignColumns
  Value  :ForeignColumns
Column   :4
  Value  :ForeignColumns
  Value  :ForeignColumns
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :403177472
  Value  :403177472
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 43
--------------------------
Column   :1
  Value  :RELATIONMETA
  Value  :RELATIONMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :MetaFlags
  Value  :MetaFlags
Column   :4
  Value  :MetaFlags
  Value  :MetaFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :7
  Value  :7
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 44
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 45
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :InternalName
  Value  :InternalName
Column   :4
  Value  :InternalName
  Value  :InternalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 46
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PublicName
  Value  :PublicName
Column   :4
  Value  :PublicName
  Value  :PublicName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959748
  Value  :268959748
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 47
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Index
  Value  :Index
Column   :4
  Value  :Index
  Value  :Index
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 48
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :CellName
  Value  :CellName
Column   :4
  Value  :CellName
  Value  :CellName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 49
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :Operator
  Value  :Operator
Column   :4
  Value  :Operator
  Value  :Operator
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572992
  Value  :1572992
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 50
--------------------------
Column   :1
  Value  :QUERYMETA
  Value  :QUERYMETA
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :MetaFlags
  Value  :MetaFlags
Column   :4
  Value  :MetaFlags
  Value  :MetaFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572928
  Value  :1572928
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :3
  Value  :3
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 51
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Database
  Value  :Database
Column   :4
  Value  :Database
  Value  :Database
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :32
  Value  :32
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 52
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :DefaultServerInterceptor
  Value  :DefaultServerInterceptor
Column   :4
  Value  :DefaultServerInterceptor
  Value  :DefaultServerInterceptor
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 53
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :DefaultServerReadPlugin
  Value  :DefaultServerReadPlugin
Column   :4
  Value  :DefaultServerReadPlugin
  Value  :DefaultServerReadPlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 54
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :DefaultServerWritePlugin
  Value  :DefaultServerWritePlugin
Column   :4
  Value  :DefaultServerWritePlugin
  Value  :DefaultServerWritePlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 55
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :DefaultServerLocator
  Value  :DefaultServerLocator
Column   :4
  Value  :DefaultServerLocator
  Value  :DefaultServerLocator
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 56
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :DefaultServerFlags
  Value  :DefaultServerFlags
Column   :4
  Value  :DefaultServerFlags
  Value  :DefaultServerFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 57
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :DefaultClientInterceptor
  Value  :DefaultClientInterceptor
Column   :4
  Value  :DefaultClientInterceptor
  Value  :DefaultClientInterceptor
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 58
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :DefaultClientReadPlugin
  Value  :DefaultClientReadPlugin
Column   :4
  Value  :DefaultClientReadPlugin
  Value  :DefaultClientReadPlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 59
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :DefaultClientWritePlugin
  Value  :DefaultClientWritePlugin
Column   :4
  Value  :DefaultClientWritePlugin
  Value  :DefaultClientWritePlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 60
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :DefaultClientLocator
  Value  :DefaultClientLocator
Column   :4
  Value  :DefaultClientLocator
  Value  :DefaultClientLocator
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 61
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :DefaultClientFlags
  Value  :DefaultClientFlags
Column   :4
  Value  :DefaultClientFlags
  Value  :DefaultClientFlags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 62
--------------------------
Column   :1
  Value  :PERDATABASEW
  Value  :PERDATABASEW
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :PerTableWiringNeeded
  Value  :PerTableWiringNeeded
Column   :4
  Value  :PerTableWiringNeeded
  Value  :PerTableWiringNeeded
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 63
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 64
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Interceptor
  Value  :Interceptor
Column   :4
  Value  :Interceptor
  Value  :Interceptor
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 65
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :InterceptorType
  Value  :InterceptorType
Column   :4
  Value  :InterceptorType
  Value  :InterceptorType
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572993
  Value  :1572993
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 66
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :InterceptorOrder
  Value  :InterceptorOrder
Column   :4
  Value  :InterceptorOrder
  Value  :InterceptorOrder
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 67
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :ReadPlugin
  Value  :ReadPlugin
Column   :4
  Value  :ReadPlugin
  Value  :ReadPlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 68
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :WritePlugin
  Value  :WritePlugin
Column   :4
  Value  :WritePlugin
  Value  :WritePlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 69
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :Flags
  Value  :Flags
Column   :4
  Value  :Flags
  Value  :Flags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 70
--------------------------
Column   :1
  Value  :CLIENTSIDEW
  Value  :CLIENTSIDEW
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :Locator
  Value  :Locator
Column   :4
  Value  :Locator
  Value  :Locator
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 71
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Table
  Value  :Table
Column   :4
  Value  :Table
  Value  :Table
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 72
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Interceptor
  Value  :Interceptor
Column   :4
  Value  :Interceptor
  Value  :Interceptor
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 73
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :InterceptorType
  Value  :InterceptorType
Column   :4
  Value  :InterceptorType
  Value  :InterceptorType
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572993
  Value  :1572993
Column   :8
  Value  :System.Byte[]
  Value  :System.Byte[]
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 74
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :InterceptorOrder
  Value  :InterceptorOrder
Column   :4
  Value  :InterceptorOrder
  Value  :InterceptorOrder
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 75
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :ReadPlugin
  Value  :ReadPlugin
Column   :4
  Value  :ReadPlugin
  Value  :ReadPlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 76
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :WritePlugin
  Value  :WritePlugin
Column   :4
  Value  :WritePlugin
  Value  :WritePlugin
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 77
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :Flags
  Value  :Flags
Column   :4
  Value  :Flags
  Value  :Flags
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 78
--------------------------
Column   :1
  Value  :SERVERSIDEW
  Value  :SERVERSIDEW
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :Locator
  Value  :Locator
Column   :4
  Value  :Locator
  Value  :Locator
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 79
--------------------------
Column   :1
  Value  :MAPPINGW
  Value  :MAPPINGW
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SimpleObject
  Value  :SimpleObject
Column   :4
  Value  :SimpleObject
  Value  :SimpleObject
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 80
--------------------------
Column   :1
  Value  :MAPPINGW
  Value  :MAPPINGW
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :DLL
  Value  :DLL
Column   :4
  Value  :DLL
  Value  :DLL
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959744
  Value  :268959744
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 81
--------------------------
Column   :1
  Value  :MAPPINGW
  Value  :MAPPINGW
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :LoadAsNeeded
  Value  :LoadAsNeeded
Column   :4
  Value  :LoadAsNeeded
  Value  :LoadAsNeeded
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572864
  Value  :1572864
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 82
--------------------------
Column   :1
  Value  :WONSIDS
  Value  :WONSIDS
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :NodeId
  Value  :NodeId
Column   :4
  Value  :NodeId
  Value  :NodeId
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 83
--------------------------
Column   :1
  Value  :WONSIDS
  Value  :WONSIDS
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 84
--------------------------
Column   :1
  Value  :WONSIDS
  Value  :WONSIDS
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ParentId
  Value  :ParentId
Column   :4
  Value  :ParentId
  Value  :ParentId
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 85
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :NodeId
  Value  :NodeId
Column   :4
  Value  :NodeId
  Value  :NodeId
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 86
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :AttributeName
  Value  :AttributeName
Column   :4
  Value  :AttributeName
  Value  :AttributeName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 87
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :AttributeType
  Value  :AttributeType
Column   :4
  Value  :AttributeType
  Value  :AttributeType
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 88
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :AttributeClass
  Value  :AttributeClass
Column   :4
  Value  :AttributeClass
  Value  :AttributeClass
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 89
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Int32Value
  Value  :Int32Value
Column   :4
  Value  :Int32Value
  Value  :Int32Value
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 90
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :StringValue
  Value  :StringValue
Column   :4
  Value  :StringValue
  Value  :StringValue
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 91
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :ObjectValue
  Value  :ObjectValue
Column   :4
  Value  :ObjectValue
  Value  :ObjectValue
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 92
--------------------------
Column   :1
  Value  :WONSATTRIBUTES
  Value  :WONSATTRIBUTES
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :AttrMetaInfo
  Value  :AttrMetaInfo
Column   :4
  Value  :AttrMetaInfo
  Value  :AttrMetaInfo
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048736
  Value  :1048736
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 93
--------------------------
Column   :1
  Value  :TBLNAMESPACEIDS
  Value  :TBLNAMESPACEIDS
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :ID
  Value  :ID
Column   :4
  Value  :ID
  Value  :ID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 94
--------------------------
Column   :1
  Value  :TBLNAMESPACEIDS
  Value  :TBLNAMESPACEIDS
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :LogicalName
  Value  :LogicalName
Column   :4
  Value  :LogicalName
  Value  :LogicalName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 95
--------------------------
Column   :1
  Value  :TBLNAMESPACEIDS
  Value  :TBLNAMESPACEIDS
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ParentID
  Value  :ParentID
Column   :4
  Value  :ParentID
  Value  :ParentID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 96
--------------------------
Column   :1
  Value  :TBLNODEPROPERTYBAGINFO
  Value  :TBLNODEPROPERTYBAGINFO
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :NodeID
  Value  :NodeID
Column   :4
  Value  :NodeID
  Value  :NodeID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 97
--------------------------
Column   :1
  Value  :TBLNODEPROPERTYBAGINFO
  Value  :TBLNODEPROPERTYBAGINFO
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PropertyName
  Value  :PropertyName
Column   :4
  Value  :PropertyName
  Value  :PropertyName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 98
--------------------------
Column   :1
  Value  :TBLNODEPROPERTYBAGINFO
  Value  :TBLNODEPROPERTYBAGINFO
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PropertyValue
  Value  :PropertyValue
Column   :4
  Value  :PropertyValue
  Value  :PropertyValue
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 99
--------------------------
Column   :1
  Value  :TBLNODEOBJECTBAGINFO
  Value  :TBLNODEOBJECTBAGINFO
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :NodeID
  Value  :NodeID
Column   :4
  Value  :NodeID
  Value  :NodeID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 100
--------------------------
Column   :1
  Value  :TBLNODEOBJECTBAGINFO
  Value  :TBLNODEOBJECTBAGINFO
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :ObjectName
  Value  :ObjectName
Column   :4
  Value  :ObjectName
  Value  :ObjectName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 101
--------------------------
Column   :1
  Value  :TBLNODEOBJECTBAGINFO
  Value  :TBLNODEOBJECTBAGINFO
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ObjectBLOB
  Value  :ObjectBLOB
Column   :4
  Value  :ObjectBLOB
  Value  :ObjectBLOB
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 102
--------------------------
Column   :1
  Value  :TBLCONFIGMANAGER
  Value  :TBLCONFIGMANAGER
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Key
  Value  :Key
Column   :4
  Value  :Key
  Value  :Key
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 103
--------------------------
Column   :1
  Value  :TBLCONFIGMANAGER
  Value  :TBLCONFIGMANAGER
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 104
--------------------------
Column   :1
  Value  :TBLCONFIGMANAGER
  Value  :TBLCONFIGMANAGER
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :IntValue
  Value  :IntValue
Column   :4
  Value  :IntValue
  Value  :IntValue
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 105
--------------------------
Column   :1
  Value  :TBLCONFIGMANAGER
  Value  :TBLCONFIGMANAGER
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :StrValue
  Value  :StrValue
Column   :4
  Value  :StrValue
  Value  :StrValue
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 106
--------------------------
Column   :1
  Value  :TBLCONFIGMANAGER
  Value  :TBLCONFIGMANAGER
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :ObjValue
  Value  :ObjValue
Column   :4
  Value  :ObjValue
  Value  :ObjValue
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 107
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :4
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 108
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 109
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PeriodicRestartTime
  Value  :PeriodicRestartTime
Column   :4
  Value  :PeriodicRestartTime
  Value  :PeriodicRestartTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 110
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :PeriodicRestartRequests
  Value  :PeriodicRestartRequests
Column   :4
  Value  :PeriodicRestartRequests
  Value  :PeriodicRestartRequests
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 111
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :MaxProcesses
  Value  :MaxProcesses
Column   :4
  Value  :MaxProcesses
  Value  :MaxProcesses
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 112
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :PingingEnabled
  Value  :PingingEnabled
Column   :4
  Value  :PingingEnabled
  Value  :PingingEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 113
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :IdleTimeout
  Value  :IdleTimeout
Column   :4
  Value  :IdleTimeout
  Value  :IdleTimeout
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 114
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :RapidFailProtection
  Value  :RapidFailProtection
Column   :4
  Value  :RapidFailProtection
  Value  :RapidFailProtection
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 115
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :SMPAffinitized
  Value  :SMPAffinitized
Column   :4
  Value  :SMPAffinitized
  Value  :SMPAffinitized
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 116
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :SMPAffProcMask
  Value  :SMPAffProcMask
Column   :4
  Value  :SMPAffProcMask
  Value  :SMPAffProcMask
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 117
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :AppPoolEnabled
  Value  :AppPoolEnabled
Column   :4
  Value  :AppPoolEnabled
  Value  :AppPoolEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 118
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :OrphanWorkerProcess
  Value  :OrphanWorkerProcess
Column   :4
  Value  :OrphanWorkerProcess
  Value  :OrphanWorkerProcess
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 119
--------------------------
Column   :1
  Value  :APPPOOLS
  Value  :APPPOOLS
Column   :2
  Value  :12
  Value  :12
Column   :3
  Value  :RunAsLocalSystem
  Value  :RunAsLocalSystem
Column   :4
  Value  :RunAsLocalSystem
  Value  :RunAsLocalSystem
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 120
--------------------------
Column   :1
  Value  :SITES
  Value  :SITES
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :4
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 121
--------------------------
Column   :1
  Value  :SITES
  Value  :SITES
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 122
--------------------------
Column   :1
  Value  :SITES
  Value  :SITES
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :DefaultAppPoolID
  Value  :DefaultAppPoolID
Column   :4
  Value  :DefaultAppPoolID
  Value  :DefaultAppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 123
--------------------------
Column   :1
  Value  :SITES
  Value  :SITES
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :HomeDirectory
  Value  :HomeDirectory
Column   :4
  Value  :HomeDirectory
  Value  :HomeDirectory
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 124
--------------------------
Column   :1
  Value  :SITES
  Value  :SITES
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Bindings
  Value  :Bindings
Column   :4
  Value  :Bindings
  Value  :Bindings
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 125
--------------------------
Column   :1
  Value  :APPS
  Value  :APPS
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :4
  Value  :SrcCFGFile
  Value  :SrcCFGFile
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 126
--------------------------
Column   :1
  Value  :APPS
  Value  :APPS
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :AppURL
  Value  :AppURL
Column   :4
  Value  :AppURL
  Value  :AppURL
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 127
--------------------------
Column   :1
  Value  :APPS
  Value  :APPS
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 128
--------------------------
Column   :1
  Value  :APPS
  Value  :APPS
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 129
--------------------------
Column   :1
  Value  :APPS
  Value  :APPS
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :AppEnabled
  Value  :AppEnabled
Column   :4
  Value  :AppEnabled
  Value  :AppEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 130
--------------------------
Column   :1
  Value  :APPLICATIONLIST
  Value  :APPLICATIONLIST
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 131
--------------------------
Column   :1
  Value  :APPLICATIONLIST
  Value  :APPLICATIONLIST
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :RelativeAppURL
  Value  :RelativeAppURL
Column   :4
  Value  :RelativeAppURL
  Value  :RelativeAppURL
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 132
--------------------------
Column   :1
  Value  :APPLICATIONLIST
  Value  :APPLICATIONLIST
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 133
--------------------------
Column   :1
  Value  :BINDINGS
  Value  :BINDINGS
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 134
--------------------------
Column   :1
  Value  :BINDINGS
  Value  :BINDINGS
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 135
--------------------------
Column   :1
  Value  :FILETIME
  Value  :FILETIME
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :FileName
  Value  :FileName
Column   :4
  Value  :FileName
  Value  :FileName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 136
--------------------------
Column   :1
  Value  :FILETIME
  Value  :FILETIME
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :TableID
  Value  :TableID
Column   :4
  Value  :TableID
  Value  :TableID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 137
--------------------------
Column   :1
  Value  :FILETIME
  Value  :FILETIME
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :LowDateTime
  Value  :LowDateTime
Column   :4
  Value  :LowDateTime
  Value  :LowDateTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 138
--------------------------
Column   :1
  Value  :FILETIME
  Value  :FILETIME
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :HighDateTime
  Value  :HighDateTime
Column   :4
  Value  :HighDateTime
  Value  :HighDateTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 139
--------------------------
Column   :1
  Value  :FILETIMEPARENT
  Value  :FILETIMEPARENT
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :TableID
  Value  :TableID
Column   :4
  Value  :TableID
  Value  :TableID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 140
--------------------------
Column   :1
  Value  :FILETIMEPARENT
  Value  :FILETIMEPARENT
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :ParentTableID
  Value  :ParentTableID
Column   :4
  Value  :ParentTableID
  Value  :ParentTableID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 141
--------------------------
Column   :1
  Value  :FILETIMEPARENT
  Value  :FILETIMEPARENT
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ParentFileName
  Value  :ParentFileName
Column   :4
  Value  :ParentFileName
  Value  :ParentFileName
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 142
--------------------------
Column   :1
  Value  :FILETIMEPARENT
  Value  :FILETIMEPARENT
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :LowDateTime
  Value  :LowDateTime
Column   :4
  Value  :LowDateTime
  Value  :LowDateTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 143
--------------------------
Column   :1
  Value  :FILETIMEPARENT
  Value  :FILETIMEPARENT
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :HighDateTime
  Value  :HighDateTime
Column   :4
  Value  :HighDateTime
  Value  :HighDateTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 144
--------------------------
Column   :1
  Value  :APPPOOL_HLP
  Value  :APPPOOL_HLP
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 145
--------------------------
Column   :1
  Value  :APPPOOL_HLP
  Value  :APPPOOL_HLP
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :AppCFGFile
  Value  :AppCFGFile
Column   :4
  Value  :AppCFGFile
  Value  :AppCFGFile
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 146
--------------------------
Column   :1
  Value  :SITE_HLP
  Value  :SITE_HLP
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 147
--------------------------
Column   :1
  Value  :SITE_HLP
  Value  :SITE_HLP
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :AppCFGFile
  Value  :AppCFGFile
Column   :4
  Value  :AppCFGFile
  Value  :AppCFGFile
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 148
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 149
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PeriodicRestartTime
  Value  :PeriodicRestartTime
Column   :4
  Value  :PeriodicRestartTime
  Value  :PeriodicRestartTime
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 150
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :PeriodicRestartRequests
  Value  :PeriodicRestartRequests
Column   :4
  Value  :PeriodicRestartRequests
  Value  :PeriodicRestartRequests
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 151
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :MaxProcesses
  Value  :MaxProcesses
Column   :4
  Value  :MaxProcesses
  Value  :MaxProcesses
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 152
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :PingingEnabled
  Value  :PingingEnabled
Column   :4
  Value  :PingingEnabled
  Value  :PingingEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 153
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :IdleTimeout
  Value  :IdleTimeout
Column   :4
  Value  :IdleTimeout
  Value  :IdleTimeout
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 154
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :RapidFailProtection
  Value  :RapidFailProtection
Column   :4
  Value  :RapidFailProtection
  Value  :RapidFailProtection
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 155
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :SMPAffinitized
  Value  :SMPAffinitized
Column   :4
  Value  :SMPAffinitized
  Value  :SMPAffinitized
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 156
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :SMPAffProcMask
  Value  :SMPAffProcMask
Column   :4
  Value  :SMPAffProcMask
  Value  :SMPAffProcMask
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 157
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :AppPoolEnabled
  Value  :AppPoolEnabled
Column   :4
  Value  :AppPoolEnabled
  Value  :AppPoolEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 158
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :OrphanWorkerProcess
  Value  :OrphanWorkerProcess
Column   :4
  Value  :OrphanWorkerProcess
  Value  :OrphanWorkerProcess
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 159
--------------------------
Column   :1
  Value  :APPPOOL_CFG
  Value  :APPPOOL_CFG
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :RunAsLocalSystem
  Value  :RunAsLocalSystem
Column   :4
  Value  :RunAsLocalSystem
  Value  :RunAsLocalSystem
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 160
--------------------------
Column   :1
  Value  :SITES_CFG
  Value  :SITES_CFG
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 161
--------------------------
Column   :1
  Value  :SITES_CFG
  Value  :SITES_CFG
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :DefaultAppPoolID
  Value  :DefaultAppPoolID
Column   :4
  Value  :DefaultAppPoolID
  Value  :DefaultAppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 162
--------------------------
Column   :1
  Value  :SITES_CFG
  Value  :SITES_CFG
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :HomeDirectory
  Value  :HomeDirectory
Column   :4
  Value  :HomeDirectory
  Value  :HomeDirectory
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 163
--------------------------
Column   :1
  Value  :APPS_CFG
  Value  :APPS_CFG
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :AppEnabled
  Value  :AppEnabled
Column   :4
  Value  :AppEnabled
  Value  :AppEnabled
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 164
--------------------------
Column   :1
  Value  :APPLICATIONLIST_CFG
  Value  :APPLICATIONLIST_CFG
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 165
--------------------------
Column   :1
  Value  :APPLICATIONLIST_CFG
  Value  :APPLICATIONLIST_CFG
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :RelativeAppURL
  Value  :RelativeAppURL
Column   :4
  Value  :RelativeAppURL
  Value  :RelativeAppURL
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 166
--------------------------
Column   :1
  Value  :APPLICATIONLIST_CFG
  Value  :APPLICATIONLIST_CFG
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :AppPoolID
  Value  :AppPoolID
Column   :4
  Value  :AppPoolID
  Value  :AppPoolID
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 167
--------------------------
Column   :1
  Value  :BINDINGS_CFG
  Value  :BINDINGS_CFG
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :SiteID
  Value  :SiteID
Column   :4
  Value  :SiteID
  Value  :SiteID
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572867
  Value  :1572867
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 168
--------------------------
Column   :1
  Value  :BINDINGS_CFG
  Value  :BINDINGS_CFG
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 169
--------------------------
Column   :1
  Value  :Colors
  Value  :Colors
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Color
  Value  :Color
Column   :4
  Value  :Color
  Value  :Color
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959753
  Value  :268959753
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 170
--------------------------
Column   :1
  Value  :Colors
  Value  :Colors
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Command
  Value  :Command
Column   :4
  Value  :Command
  Value  :Command
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048720
  Value  :1048720
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 171
--------------------------
Column   :1
  Value  :Scriptmaps
  Value  :Scriptmaps
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Extension
  Value  :Extension
Column   :4
  Value  :Extension
  Value  :Extension
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959753
  Value  :268959753
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 172
--------------------------
Column   :1
  Value  :Scriptmaps
  Value  :Scriptmaps
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Executable
  Value  :Executable
Column   :4
  Value  :Executable
  Value  :Executable
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 173
--------------------------
Column   :1
  Value  :Scriptmaps
  Value  :Scriptmaps
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Directive
  Value  :Directive
Column   :4
  Value  :Directive
  Value  :Directive
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048720
  Value  :1048720
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 174
--------------------------
Column   :1
  Value  :APPBINDINGMODETABLE
  Value  :APPBINDINGMODETABLE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Mode
  Value  :Mode
Column   :4
  Value  :Mode
  Value  :Mode
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 175
--------------------------
Column   :1
  Value  :BINDINGREDIRTABLE
  Value  :BINDINGREDIRTABLE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 176
--------------------------
Column   :1
  Value  :BINDINGREDIRTABLE
  Value  :BINDINGREDIRTABLE
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PK
  Value  :PK
Column   :4
  Value  :PK
  Value  :PK
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 177
--------------------------
Column   :1
  Value  :BINDINGREDIRTABLE
  Value  :BINDINGREDIRTABLE
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Version
  Value  :Version
Column   :4
  Value  :Version
  Value  :Version
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 178
--------------------------
Column   :1
  Value  :BINDINGREDIRTABLE
  Value  :BINDINGREDIRTABLE
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :VersionNew
  Value  :VersionNew
Column   :4
  Value  :VersionNew
  Value  :VersionNew
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 179
--------------------------
Column   :1
  Value  :BINDINGREDIRTABLE
  Value  :BINDINGREDIRTABLE
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :NoPublisherPolicy
  Value  :NoPublisherPolicy
Column   :4
  Value  :NoPublisherPolicy
  Value  :NoPublisherPolicy
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 180
--------------------------
Column   :1
  Value  :CODEBASETABLE
  Value  :CODEBASETABLE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 181
--------------------------
Column   :1
  Value  :CODEBASETABLE
  Value  :CODEBASETABLE
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :PK
  Value  :PK
Column   :4
  Value  :PK
  Value  :PK
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 182
--------------------------
Column   :1
  Value  :CODEBASETABLE
  Value  :CODEBASETABLE
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Version
  Value  :Version
Column   :4
  Value  :Version
  Value  :Version
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 183
--------------------------
Column   :1
  Value  :CODEBASETABLE
  Value  :CODEBASETABLE
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :CodeBase
  Value  :CodeBase
Column   :4
  Value  :CodeBase
  Value  :CodeBase
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 184
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 185
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Originator
  Value  :Originator
Column   :4
  Value  :Originator
  Value  :Originator
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 186
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :HashAlgId
  Value  :HashAlgId
Column   :4
  Value  :HashAlgId
  Value  :HashAlgId
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 187
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Title
  Value  :Title
Column   :4
  Value  :Title
  Value  :Title
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 188
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Description
  Value  :Description
Column   :4
  Value  :Description
  Value  :Description
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 189
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :Alias
  Value  :Alias
Column   :4
  Value  :Alias
  Value  :Alias
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 190
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 191
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :MajorVersion
  Value  :MajorVersion
Column   :4
  Value  :MajorVersion
  Value  :MajorVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 192
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :MinorVersion
  Value  :MinorVersion
Column   :4
  Value  :MinorVersion
  Value  :MinorVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 193
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :RevisionNumber
  Value  :RevisionNumber
Column   :4
  Value  :RevisionNumber
  Value  :RevisionNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 194
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :BuildNumber
  Value  :BuildNumber
Column   :4
  Value  :BuildNumber
  Value  :BuildNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 195
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :Locale
  Value  :Locale
Column   :4
  Value  :Locale
  Value  :Locale
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 196
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :12
  Value  :12
Column   :3
  Value  :Processor
  Value  :Processor
Column   :4
  Value  :Processor
  Value  :Processor
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 197
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :13
  Value  :13
Column   :3
  Value  :OS
  Value  :OS
Column   :4
  Value  :OS
  Value  :OS
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 198
--------------------------
Column   :1
  Value  :ASSEMBLY
  Value  :ASSEMBLY
Column   :2
  Value  :14
  Value  :14
Column   :3
  Value  :Configuration
  Value  :Configuration
Column   :4
  Value  :Configuration
  Value  :Configuration
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 199
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Token
  Value  :Token
Column   :4
  Value  :Token
  Value  :Token
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 200
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Alias
  Value  :Alias
Column   :4
  Value  :Alias
  Value  :Alias
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 201
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Originator
  Value  :Originator
Column   :4
  Value  :Originator
  Value  :Originator
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 202
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 203
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :HashValue
  Value  :HashValue
Column   :4
  Value  :HashValue
  Value  :HashValue
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 204
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :ExecutionLocationToken
  Value  :ExecutionLocationToken
Column   :4
  Value  :ExecutionLocationToken
  Value  :ExecutionLocationToken
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 205
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 206
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :7
  Value  :7
Column   :3
  Value  :MajorVersion
  Value  :MajorVersion
Column   :4
  Value  :MajorVersion
  Value  :MajorVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 207
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :8
  Value  :8
Column   :3
  Value  :MinorVersion
  Value  :MinorVersion
Column   :4
  Value  :MinorVersion
  Value  :MinorVersion
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 208
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :9
  Value  :9
Column   :3
  Value  :RevisionNumber
  Value  :RevisionNumber
Column   :4
  Value  :RevisionNumber
  Value  :RevisionNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 209
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :10
  Value  :10
Column   :3
  Value  :BuildNumber
  Value  :BuildNumber
Column   :4
  Value  :BuildNumber
  Value  :BuildNumber
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 210
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :11
  Value  :11
Column   :3
  Value  :Locale
  Value  :Locale
Column   :4
  Value  :Locale
  Value  :Locale
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 211
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :12
  Value  :12
Column   :3
  Value  :Processor
  Value  :Processor
Column   :4
  Value  :Processor
  Value  :Processor
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 212
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :13
  Value  :13
Column   :3
  Value  :OS
  Value  :OS
Column   :4
  Value  :OS
  Value  :OS
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 213
--------------------------
Column   :1
  Value  :ASSEMBLYREF
  Value  :ASSEMBLYREF
Column   :2
  Value  :14
  Value  :14
Column   :3
  Value  :Configuration
  Value  :Configuration
Column   :4
  Value  :Configuration
  Value  :Configuration
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 214
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 215
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Description
  Value  :Description
Column   :4
  Value  :Description
  Value  :Description
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 216
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ImplementationToken
  Value  :ImplementationToken
Column   :4
  Value  :ImplementationToken
  Value  :ImplementationToken
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 217
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :TypeDefToken
  Value  :TypeDefToken
Column   :4
  Value  :TypeDefToken
  Value  :TypeDefToken
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 218
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :ExecutionLocationToken
  Value  :ExecutionLocationToken
Column   :4
  Value  :ExecutionLocationToken
  Value  :ExecutionLocationToken
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 219
--------------------------
Column   :1
  Value  :COMTYPE
  Value  :COMTYPE
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 220
--------------------------
Column   :1
  Value  :FILE
  Value  :FILE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Token
  Value  :Token
Column   :4
  Value  :Token
  Value  :Token
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 221
--------------------------
Column   :1
  Value  :FILE
  Value  :FILE
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 222
--------------------------
Column   :1
  Value  :FILE
  Value  :FILE
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :HashValue
  Value  :HashValue
Column   :4
  Value  :HashValue
  Value  :HashValue
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 223
--------------------------
Column   :1
  Value  :FILE
  Value  :FILE
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 224
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 225
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Description
  Value  :Description
Column   :4
  Value  :Description
  Value  :Description
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 226
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :ImplementationToken
  Value  :ImplementationToken
Column   :4
  Value  :ImplementationToken
  Value  :ImplementationToken
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 227
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :OffSet
  Value  :OffSet
Column   :4
  Value  :OffSet
  Value  :OffSet
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 228
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :MIMEType
  Value  :MIMEType
Column   :4
  Value  :MIMEType
  Value  :MIMEType
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 229
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :5
  Value  :5
Column   :3
  Value  :Locale
  Value  :Locale
Column   :4
  Value  :Locale
  Value  :Locale
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 230
--------------------------
Column   :1
  Value  :RESOURCE
  Value  :RESOURCE
Column   :2
  Value  :6
  Value  :6
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 231
--------------------------
Column   :1
  Value  :EXECUTIONLOCATION
  Value  :EXECUTIONLOCATION
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Token
  Value  :Token
Column   :4
  Value  :Token
  Value  :Token
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 232
--------------------------
Column   :1
  Value  :EXECUTIONLOCATION
  Value  :EXECUTIONLOCATION
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 233
--------------------------
Column   :1
  Value  :EXECUTIONLOCATION
  Value  :EXECUTIONLOCATION
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Description
  Value  :Description
Column   :4
  Value  :Description
  Value  :Description
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 234
--------------------------
Column   :1
  Value  :EXECUTIONLOCATION
  Value  :EXECUTIONLOCATION
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Location
  Value  :Location
Column   :4
  Value  :Location
  Value  :Location
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 235
--------------------------
Column   :1
  Value  :EXECUTIONLOCATION
  Value  :EXECUTIONLOCATION
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 236
--------------------------
Column   :1
  Value  :TBLASSEMBLYSETTING
  Value  :TBLASSEMBLYSETTING
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 237
--------------------------
Column   :1
  Value  :TBLASSEMBLYSETTING
  Value  :TBLASSEMBLYSETTING
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 238
--------------------------
Column   :1
  Value  :TBLASSEMBLYSETTING
  Value  :TBLASSEMBLYSETTING
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 239
--------------------------
Column   :1
  Value  :TBLASSEMBLYSETTING
  Value  :TBLASSEMBLYSETTING
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 240
--------------------------
Column   :1
  Value  :TBLSETTINGTMP1
  Value  :TBLSETTINGTMP1
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 241
--------------------------
Column   :1
  Value  :TBLSETTINGTMP1
  Value  :TBLSETTINGTMP1
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 242
--------------------------
Column   :1
  Value  :TBLSETTINGTMP1
  Value  :TBLSETTINGTMP1
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 243
--------------------------
Column   :1
  Value  :TBLSETTINGTMP1
  Value  :TBLSETTINGTMP1
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 244
--------------------------
Column   :1
  Value  :TBLSETTINGTMP2
  Value  :TBLSETTINGTMP2
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 245
--------------------------
Column   :1
  Value  :TBLSETTINGTMP2
  Value  :TBLSETTINGTMP2
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 246
--------------------------
Column   :1
  Value  :TBLSETTINGTMP2
  Value  :TBLSETTINGTMP2
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 247
--------------------------
Column   :1
  Value  :TBLSETTINGTMP2
  Value  :TBLSETTINGTMP2
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 248
--------------------------
Column   :1
  Value  :TBLSETTINGTMP3
  Value  :TBLSETTINGTMP3
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 249
--------------------------
Column   :1
  Value  :TBLSETTINGTMP3
  Value  :TBLSETTINGTMP3
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 250
--------------------------
Column   :1
  Value  :TBLSETTINGTMP3
  Value  :TBLSETTINGTMP3
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 251
--------------------------
Column   :1
  Value  :TBLSETTINGTMP3
  Value  :TBLSETTINGTMP3
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 252
--------------------------
Column   :1
  Value  :TBLSETTINGTMP4
  Value  :TBLSETTINGTMP4
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 253
--------------------------
Column   :1
  Value  :TBLSETTINGTMP4
  Value  :TBLSETTINGTMP4
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 254
--------------------------
Column   :1
  Value  :TBLSETTINGTMP4
  Value  :TBLSETTINGTMP4
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 255
--------------------------
Column   :1
  Value  :TBLSETTINGTMP4
  Value  :TBLSETTINGTMP4
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 256
--------------------------
Column   :1
  Value  :TBLSETTINGTMP5
  Value  :TBLSETTINGTMP5
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 257
--------------------------
Column   :1
  Value  :TBLSETTINGTMP5
  Value  :TBLSETTINGTMP5
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 258
--------------------------
Column   :1
  Value  :TBLSETTINGTMP5
  Value  :TBLSETTINGTMP5
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 259
--------------------------
Column   :1
  Value  :TBLSETTINGTMP5
  Value  :TBLSETTINGTMP5
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 260
--------------------------
Column   :1
  Value  :TBLSIMPLESETTING
  Value  :TBLSIMPLESETTING
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 261
--------------------------
Column   :1
  Value  :TBLSIMPLESETTING
  Value  :TBLSIMPLESETTING
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 262
--------------------------
Column   :1
  Value  :TBLSIMPLESETTING
  Value  :TBLSIMPLESETTING
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268435456
  Value  :268435456
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 263
--------------------------
Column   :1
  Value  :TEST1
  Value  :TEST1
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :Name
  Value  :Name
Column   :4
  Value  :Name
  Value  :Name
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 264
--------------------------
Column   :1
  Value  :TEST1
  Value  :TEST1
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :Type
  Value  :Type
Column   :4
  Value  :Type
  Value  :Type
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 265
--------------------------
Column   :1
  Value  :TEST1
  Value  :TEST1
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Flag
  Value  :Flag
Column   :4
  Value  :Flag
  Value  :Flag
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 266
--------------------------
Column   :1
  Value  :TEST1
  Value  :TEST1
Column   :2
  Value  :3
  Value  :3
Column   :3
  Value  :Value
  Value  :Value
Column   :4
  Value  :Value
  Value  :Value
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 267
--------------------------
Column   :1
  Value  :TEST1
  Value  :TEST1
Column   :2
  Value  :4
  Value  :4
Column   :3
  Value  :Boolean
  Value  :Boolean
Column   :4
  Value  :Boolean
  Value  :Boolean
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048736
  Value  :1048736
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 268
--------------------------
Column   :1
  Value  :NormalTable
  Value  :NormalTable
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :String
  Value  :String
Column   :4
  Value  :String
  Value  :String
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 269
--------------------------
Column   :1
  Value  :NormalTable
  Value  :NormalTable
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :UI4
  Value  :UI4
Column   :4
  Value  :UI4
  Value  :UI4
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 270
--------------------------
Column   :1
  Value  :NormalTable
  Value  :NormalTable
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Bytes
  Value  :Bytes
Column   :4
  Value  :Bytes
  Value  :Bytes
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 271
--------------------------
Column   :1
  Value  :NoParentTable
  Value  :NoParentTable
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :String
  Value  :String
Column   :4
  Value  :String
  Value  :String
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959745
  Value  :268959745
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 272
--------------------------
Column   :1
  Value  :NoParentTable
  Value  :NoParentTable
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :UI4
  Value  :UI4
Column   :4
  Value  :UI4
  Value  :UI4
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1048576
  Value  :1048576
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 273
--------------------------
Column   :1
  Value  :NoParentTable
  Value  :NoParentTable
Column   :2
  Value  :2
  Value  :2
Column   :3
  Value  :Bytes
  Value  :Bytes
Column   :4
  Value  :Bytes
  Value  :Bytes
Column   :5
  Value  :128
  Value  :128
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :402653184
  Value  :402653184
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 274
--------------------------
Column   :1
  Value  :ContainedTable
  Value  :ContainedTable
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :UI4
  Value  :UI4
Column   :4
  Value  :UI4
  Value  :UI4
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 275
--------------------------
Column   :1
  Value  :ContainedTable
  Value  :ContainedTable
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :String
  Value  :String
Column   :4
  Value  :String
  Value  :String
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 276
--------------------------
Column   :1
  Value  :NoParentContainedTable
  Value  :NoParentContainedTable
Column   :2
  Value  :0
  Value  :0
Column   :3
  Value  :UI4
  Value  :UI4
Column   :4
  Value  :UI4
  Value  :UI4
Column   :5
  Value  :19
  Value  :19
Column   :6
  Value  :4
  Value  :4
Column   :7
  Value  :1572865
  Value  :1572865
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
--------------------------
   ROW: 277
--------------------------
Column   :1
  Value  :NoParentContainedTable
  Value  :NoParentContainedTable
Column   :2
  Value  :1
  Value  :1
Column   :3
  Value  :String
  Value  :String
Column   :4
  Value  :String
  Value  :String
Column   :5
  Value  :130
  Value  :130
Column   :6
  Value  :-1
  Value  :-1
Column   :7
  Value  :268959747
  Value  :268959747
Column   :8
  Value  :null
  Value  :null
Column   :9
  Value  :0
  Value  :0
Column   :10
  Value  :0
  Value  :0
Column   :11
  Value  :-1
  Value  :-1
Column   :12
  Value  :null
  Value  :null
End of rows
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\urt\samples\configviewer\readme_files\filelist.xml ===
<xml xmlns:o="urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef="../ReadMe.htm"/>
 <o:File HRef="image001.png"/>
 <o:File HRef="filelist.xml"/>
</xml>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\urt\samples\configviewer\interceptors.xml ===
<?xml version="1.0"?>
<configuration>

    <!-- This file is used by the configuration viewer sample to initialize the machine configuration file on first run -->

    <InterceptorWiring>
        <!-- interceptors for ASP configuration -->
        <Intercept ConfigType="configsections" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="configsections" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="httpmodules" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="httpmodules" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="httphandlers" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="httphandlers" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="httphandlerfactories" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="httphandlerfactories" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="sessionstate" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="sessionstate" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="globalization" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="globalization" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="compilation" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="compilation" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="compilers" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="compilers" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="assemblies" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="assemblies" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="trace" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="trace" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="security" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="security" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="authentication" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="authentication" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="cookie" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="cookie" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="credentials" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="credentials" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="user" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="user" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="passport" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="passport" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="authorization" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="authorization" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="identity" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="identity" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="impersonation" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="impersonation" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>
    
        <Intercept ConfigType="codeaccess" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="codeaccess" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="customerrors" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="customerrors" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="myweb" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="myweb" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="webcontrols" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="webcontrols" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="webservices" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="webservices" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="protocolTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="protocolTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="returnWriterTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="returnWriterTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="parameterReaderTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="parameterReaderTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="protocolReflectorTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="protocolReflectorTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="mimeReflectorTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="mimeReflectorTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="protocolImporterTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="protocolImporterTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="mimeImporterTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="mimeImporterTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="protocolInfoTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="protocolInfoTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="mimeInfoTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="mimeInfoTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="referenceResolverTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="referenceResolverTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="discoverySearchPatternTypes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="discoverySearchPatternTypes" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="sdlHelpGenerator" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="sdlHelpGenerator" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="iisfilter" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="iisfilter" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="processmodel" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="processmodel" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <Intercept ConfigType="appsettings" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="appsettings" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.ListMerge" InterceptorType="Merger"/>

        <Intercept ConfigType="location" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyInterceptor" InterceptorType="Transformer"/>
        <Intercept ConfigType="location" Protocol="list" Order="2" InterceptorClass="System.Configuration.Interceptors.PropertyOverride" InterceptorType="Merger"/>

        <!-- ConfigViewer sample -->
  	    <Intercept ConfigType="NavigationNodes" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="NavigationNodes" Protocol="null" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="NavigationNodes" Protocol="query" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="NavigationNodes" Protocol="webservice" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>

		<Intercept ConfigType="ConfigurationFileLocations" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigurationFileLocations" Protocol="null" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigurationFileLocations" Protocol="query" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigurationFileLocations" Protocol="webservice" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>

		<Intercept ConfigType="ConfigFileHierarchy" Protocol="http" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigFileHierarchy" Protocol="null" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigFileHierarchy" Protocol="query" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>
		<Intercept ConfigType="ConfigFileHierarchy" Protocol="webservice" Order="1" InterceptorClass="Microsoft.Configuration.Samples.WebHierarchyLocationInterceptor, Microsoft.Configuration.Samples.WebHierarchyInterceptor, Ver=0.0.0.0, Loc=&quot;&quot;, SN=null" InterceptorType="Reader"/>

	</InterceptorWiring>

</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\urt\wmi\cat2mof\associations.xml ===
<?xml version ="1.0"?>
<configuration>
	<ASSOC_META>
		<Association Type="WebApplication" TableName="assemblies"/>
		<Association Type="WebApplication" TableName="authentication"/>
		<Association Type="WebApplication" TableName="authorization"/>
		<Association Type="WebApplication" TableName="browserCaps"/>
		<Association Type="WebApplication" TableName="channel"/>
		<Association Type="WebApplication" TableName="client"/>
		<Association Type="WebApplication" TableName="client_activated"/>
		<Association Type="WebApplication" TableName="clientProvider"/>
		<Association Type="WebApplication" TableName="clientProviders"/>
		<Association Type="WebApplication" TableName="clientTarget"/>
		<Association Type="WebApplication" TableName="client_wellknown"/>
		<Association Type="WebApplication" TableName="compilation"/>
		<Association Type="WebApplication" TableName="compilers"/>
		<Association Type="WebApplication" TableName="configSections"/>
		<Association Type="WebApplication" TableName="credentials"/>
		<Association Type="WebApplication" TableName="customErrors"/>
		<Association Type="WebApplication" TableName="developerSettings"/>
		<Association Type="WebApplication" TableName="error"/>
		<Association Type="WebApplication" TableName="forms"/>
		<Association Type="WebApplication" TableName="globalization"/>
		<Association Type="WebApplication" TableName="httpHandlers"/>
		<Association Type="WebApplication" TableName="httpRuntime"/>
		<Association Type="WebApplication" TableName="identity"/>
		<Association Type="WebApplication" TableName="machineKey"/>
		<Association Type="WebApplication" TableName="pages"/>
		<Association Type="WebApplication" TableName="passport"/>
		<Association Type="WebApplication" TableName="probing"/>
		<Association Type="WebApplication" TableName="processModel"/>
		<Association Type="WebApplication" TableName="protocols"/>
		<Association Type="WebApplication" TableName="publisherPolicy"/>
		<Association Type="WebApplication" TableName="section"/>
		<Association Type="WebApplication" TableName="sectionGroup"/> 
		<Association Type="WebApplication" TableName="sectionInGroup"/>
		<Association Type="WebApplication" TableName="securityPolicy"/>
		<Association Type="WebApplication" TableName="serverProvider"/>
		<Association Type="WebApplication" TableName="serverFormatter"/>
		<Association Type="WebApplication" TableName="service_activated"/>
		<Association Type="WebApplication" TableName="service_activated_lifetime"/>
		<Association Type="WebApplication" TableName="serviceDescriptionFormatExtensionTypes"/>
		<Association Type="WebApplication" TableName="service_wellknown"/>
		<Association Type="WebApplication" TableName="sessionState"/>
		<Association Type="WebApplication" TableName="soapExtensionTypes"/>
		<Association Type="WebApplication" TableName="soapExtensionImporterTypes"/>
		<Association Type="WebApplication" TableName="soapExtensionReflectorTypes"/>
		<Association Type="WebApplication" TableName="switches"/>
		<Association Type="WebApplication" TableName="system_diagnostics"/>
		<Association Type="WebApplication" TableName="system_runtime_remoting"/>
		<Association Type="WebApplication" TableName="system_web"/>
		<Association Type="WebApplication" TableName="trace"/>
		<Association Type="WebApplication" TableName="trust"/>
		<Association Type="WebApplication" TableName="user"/>
		<Association Type="WebApplication" TableName="webControls"/>
		<Association Type="WebApplication" TableName="webServices"/>
		<Association Type="WebApplication" TableName="wsdlHelpGenerator"/>
		<Association Type="WebApplication" TableName="appSettings"/>
		<Association Type="WebApplication" TableName="location"/>
		<Association Type="WebApplication" TableName="application"/>
		<Association Type="WebApplication" TableName="lifetime"/>
		<Association Type="WebApplication" TableName="service"/>
		<Association Type="WebApplication" TableName="serverProviders"/>
		<Association Type="WebApplication" TableName="channeltemplate"/>
		<Association Type="WebApplication" TableName="channelSinkProviderTemplate"/>
		<Association Type="WebApplication" TableName="clientProviderTemplates"/>
		<Association Type="WebApplication" TableName="clientProviderTemplate"/>
		<Association Type="WebApplication" TableName="clientFormatterTemplate"/>
		<Association Type="WebApplication" TableName="serverProviderTemplates"/>
		<Association Type="WebApplication" TableName="serverProviderTemplate"/>
		<Association Type="WebApplication" TableName="serverFormatterTemplate"/>
		<Association Type="WebApplication" TableName="mobileControls"/>
		<Association Type="WebApplication" TableName="mobileDevices"/>
		<Association Type="WebApplication" TableName="mobileControlBindings"/>
		<Association Type="WebApplication" TableName="mobileDeviceFilters"/>
		<Association Type="WebApplication" TableName="DeviceInfoProviders"/>
		<Association Type="WebApplication" TableName="RenderingProviders"/>
		<Association Type="WebApplication" TableName="TransportProviders"/>
		<Association Type="WebApplication" TableName="system_net"/>
		<Association Type="WebApplication" TableName="defaultProxy"/>
		<Association Type="WebApplication" TableName="proxy"/>
		<Association Type="WebApplication" TableName="bypassList"/>
		<Association Type="WebApplication" TableName="webRequestModule"/>
		<Association Type="WebApplication" TableName="authenticationModule"/>
		<Association Type="WebApplication" TableName="connectionManagement"/>
	</ASSOC_META>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\atl30\license.txt ===
END-USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE

ACTIVEX(tm) TEMPLATE LIBRARY

IMPORTANT-READ CAREFULLY: This Microsoft End-User License Agreement ("EULA")
is a legal agreement between you (either an individual or a single entity) and
Microsoft Corporation for the Microsoft software product identified above,
which includes computer software and associated media and printed materials,
and may include "online" or electronic documentation ("SOFTWARE PRODUCT" or
"SOFTWARE"). By installing, copying, or otherwise using the SOFTWARE PRODUCT,
you agree to be bound by the terms of this EULA.
 
SOFTWARE PRODUCT LICENSE

The SOFTWARE PRODUCT is protected by copyright laws and international
copyright treaties, as well as other intellectual property laws and treaties.
The SOFTWARE PRODUCT is licensed, not sold.

1.  GRANT OF LICENSE. This EULA grants you the following rights:

a. You may use an unlimited number of copies of the Microsoft Software
 Product identified above on an unlimited number of  computers for your
 personal use.	The SOFTWARE is in "use" on a computer when it is loaded into
 temporary memory (i.e., RAM) or installed into permanent memory (e.g., hard
 disk, CD-ROM, or other storage device) of that computer. However,
 installation on a network server for the sole purpose of internal
 distribution to one or more other computer(s) shall not constitute "use" for
 which a separate license is required, provided you have a separate license
 for each computer to which the SOFTWARE is distributed.

b. Solely with respect to electronic documents included with the SOFTWARE,
you may make an unlimited number of copies (either in hardcopy or electronic
form), provided that such copies shall be used only for internal purposes and
are not republished or distributed to any third party.

2. OWNERSHIP.	Except as expressly licensed to you in this Agreement,
Microsoft retains all right, title and interest in and to the SOFTWARE
PRODUCT; provided, however, that, subject to the license grant in Section 1.a
and Microsoft's ownership of the underlying SOFTWARE PRODUCT, you shall own
all right, title and interest in and to any Derivative Technology of the
Product created by or for you.

3. COPYRIGHT. All title and copyrights in and to the SOFTWARE PRODUCT
(including but not limited to any images, photographs, animations, video,
audio, music, text, and "applets" incorporated into the SOFTWARE PRODUCT), the
accompanying printed materials, and any copies of the SOFTWARE PRODUCT are
owned by Microsoft or its suppliers. The SOFTWARE PRODUCT is protected by
copyright laws and international treaty provisions. Therefore, you must treat
the SOFTWARE PRODUCT like any other copyrighted material exce t that you may
either (a) make one copy of the SOFTWARE PRODUCT solely for backup or archival
purposes or (b) install the SOFTWARE PRODUCT on a single computer provided you
keep the original solely for backup or archival purposes. You may not copy the
printed materials accompanying the SOFTWARE PRODUCT.

4.  DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS. 

a. Limitations on Reverse Engineering, Decompilation, and Disassembly.	You
may not reverse engineer, decompile, or disassemble the SOFTWARE, except and
only to the extent that such activity is expressly permitted by applicable law
notwithstanding this limitation.

b.  Rental. You may not rent or lease the SOFTWARE PRODUCT. 

c. Software Transfer. You may permanently transfer all of your rights under
this EULA, provided that you retain no copies, you transfer all of the
SOFTWARE PRODUCT (including all component parts, the media and printed
materials, any upgrades, this EULA, and, if applicable, the Certificate of
Authenticity), and the recipient agrees to the terms of this EULA.

d. Termination. Without prejudice to any other rights, Microsoft may
terminate this EULA if you fail to comply with the terms and conditions of
this EULA. In such event, you must destroy all copies of the SOFTWARE PRODUCT.

5.  REDISTRIBUTABLE COMPONENTS. 

a. Sample Code.  In addition to the rights granted in Section 1, Microsoft
grants you the right to use and modify the source code version of those
portions of the SOFTWARE designated as "Sample Code" ("SAMPLE CODE") for the
sole purposes of designing, developing, and testing your software product(s),
and to reproduce and distribute the SAMPLE CODE, along with any modifications
thereof, only in object code form , provided that you comply with Section 5.c.

b. Redistributable Code. In addition to the rights granted in Section 1,
Microsoft grants you a nonexclusive royalty-free right to reproduce and
distribute the object code version of any portion  of the SOFTWARE, along with
any modifications thereof, EXCEPT those files listed in the SOFTWARE file
NOREDIST.TXT ("REDISTRIBUTABLE SOFTWARE"), provided you comply with Section
5.c.

c. Redistribution Requirements. If you redistribute the SAMPLE CODE or
REDISTRIBUTABLE SOFTWARE (collectively, "REDISTRIBUTABLES") you agree to: (i)
distribute the REDISTRIBUTABLES in object code only in conjunction with and as
a part of a software application product developed by you which adds
significant and primary functionality to the SOFTWARE; (ii) not use
Microsoft's name, logo, or trademarks to market your software application
product; (iii) include a valid copyright notice on your software product ;
(iv) indemnify, hold harmless, and defend Microsoft from and against any
claims or lawsuits, including attorney's fees, that arise or result from the
use or distribution of your software application product; (v) not permit
further distribution of the REDISTRIBUTABLES by your end user. Contact
Microsoft for the applicable royalties due and other licensing terms for all
other uses and/or distribution of the REDISTRIBUTABLES.

6. U.S. GOVERNMENT RESTRICTED RIGHTS. THE SOFTWARE PRODUCT AND DOCUMENTATION
ARE PROVIDED WITH RESTRICTED RIGHTS. USE, DUPLICATION, OR DISCLOSURE BY THE
GOVERNMENT IS SUBJECT TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH (C)(1)(II)
OF THE RIGHTS IN TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS
252.227-7013 OR SUBPARAGRAPHS (C)(1) AND (2) OF THE COMMERCIAL COMPUTER
SOFTWARE-RESTRICTED RIGHTS AT 48 CFR 52.227-19, AS APPLICABLE. MANUFACTURER IS
MICROSOFT CORPORATION/ONE MICROSOFT WAY/REDMOND, WA 98052-6 99.

MISCELLANEOUS

If you acquired this product in the United States, this EULA is governed by
the laws of the State of Washington. 

If you acquired this product in Canada, this EULA is governed by the laws of
the Province of Ontario, Canada. Each of the parties hereto irrevocably
attorns to the jurisdiction of the courts of the Province of Ontario and
further agrees to commence any litigation which may arise hereunder in the
courts located in the Judicial District of York, Province of Ontario. 

If this product was acquired outside the United States, then local law may
apply.

Should you have any questions concerning this EULA, or if you desire to
contact Microsoft for any reason, please contact the Microsoft subsidiary
serving your country, or write: Microsoft Sales Information Center/One
Microsoft Way/Redmond, WA 98052-6399.

If you have a specific question regarding the licensing of redistributables,
you may call the Microsoft Technical Sales Information Team at (800) 426-9400
(United States only) or send inquiries via fax to:	Microsoft Visual C++
Licensing Administrator, (206) 936-7329 (United States).[MAS1]

LIMITED WARRANTY

LIMITED WARRANTY. Except with respect to the REDISTRIBUTABLES, which are
provided "as is," without warranty of any kind, Microsoft warrants that (a)
the SOFTWARE PRODUCT will perform substantially in accordance with the
accompanying written materials for a period of ninety (90) days from the date
of receipt, and (b) any hardware accompanying the SOFTWARE PRODUCT will be
free from defects in materials and workmanship under normal use and service
for a period of one (1) year from the date of receipt. Some sta tes and
jurisdictions do not allow limitations on duration of an implied warranty, so
the above limitation may not apply to you. To the extent allowed by applicable
law, implied warranties on the SOFTWARE PRODUCT and hardware, if any, are
limited to ninety (90) days and one year, respectively.

CUSTOMER REMEDIES. Microsoft's and its suppliers' entire liability and your
exclusive remedy shall be, at Microsoft's option, either (a) return of the
price paid, or (b) repair or replacement of the SOFTWARE PRODUCT or hardware
that does not meet Microsoft's Limited Warranty and which is returned to
Microsoft with a copy of your receipt. This Limited Warranty is void if
failure of the SOFTWARE PRODUCT or hardware has resulted from accident, abuse,
or misapplication. Any replacement SOFTWARE PRODUCT or hardw are will be
warranted for the remainder of the original warranty period or thirty (30)
days, whichever is longer. Outside the United States, neither these remedies
nor any product support services offered by Microsoft are available without
proof of purchase from an authorized international source.

NO OTHER WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW,
MICROSOFT AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES, EITHER EXPRESS OR
IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE, WITH REGARD TO THE SOFTWARE PRODUCT, AND
ANY ACCOMPANYING HARDWARE. THIS LIMITED WARRANTY GIVES YOU SPECIFIC LEGAL
RIGHTS. YOU MAY HAVE OTHERS, WHICH VARY FROM STATE/JURISDICTION TO
STATE/JURISDICTION.

NO LIABILITY FOR CONSEQUENTIAL DAMAGES. TO THE MAXIMUM EXTENT PERMITTED BY
APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY
SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING,
WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS)
ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE PRODUCT, EVEN IF
MICROSOFT HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. BECAUSE SOME
STATES AND JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY
FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO
YOU.

Si vous avez acquis votre produit Microsoft au CANADA, la garantie limite
suivante vous concerne :

GARANTIE LIMITEE

GARANTIE LIMITEE - Sauf pour celles du REDISTRIBUTABLES, qui sont fournies
"comme telles", sans aucune garantie quelle qu'elle soit, Microsoft garantit
que (a) la performance du LOGICIEL sera substantiellement en conformit avec
le(s) manuel(s) de produits qui accompagne(nt) le LOGICIEL pour une priode de
quatre-vingt-dix (90) jours  compter de la date de rception ; et (b) tout
matriel fourni par Microsoft accompagnant le LOGICIEL sera exempt de dfaut
de matire premire ou de vice de fabrication dans des conditions normales
d'utilisation et d'entretien pour une priode d'un an  compter de la date de
rception. Toute garantie implicite concernant le LOGICIEL et le matriel est
limite  quatre-vingt-dix (90) jours et un (1) an, respectivement.

RECOURS DU CLIENT - La seule obligation de Microsoft et votre recours exclusif
seront, au choix de Microsoft, soit (a) le remboursement du prix pay ou (b)
la rparation ou le remplacement du LOGICIEL ou du matriel qui n'est pas
conforme  la Garantie Limite de Microsoft et qui est retourn  Microsoft
avec une copie de votre reu. Cette Garantie Limite est nulle si le dfaut du
LOGICIEL ou du matriel est caus par un accident, un traitement abusif ou une
mauvaise application. Tout LOGICIEL de remplacem ent sera garanti pour le
reste de la priode de garantie initiale ou pour trente (30) jours, selon
laquelle de ces deux priodes est la plus longue.

AUCUNE AUTRE GARANTIE - MICROSOFT DESAVOUE TOUTE AUTRE GARANTIE, EXPRESSE OU
IMPLICITE, Y COMPRIS MAIS NE SE LIMITANT PAS AUX GARANTIES IMPLICITES DU
CARACTERE ADEQUAT POUR LA COMMERCIALISATION OU UN USAGE PARTICULIER EN CE QUI
CONCERNE LE LOGICIEL, LE(S) MANUEL(S) DE PRODUITS, LA DOCUMENTATION ECRITE ET
TOUT MATERIEL QUI L'ACCOMPAGNENT. CETTE GARANTIE LIMITEE VOUS ACCORDE DES
DROITS JURIDIQUES SPECIFIQUES. PAS D'OBLIGATION POUR LES DOMMAGES INDIRECTS -
MICROSOFT OU SES FOURNISSEURS N'AURONT D'OBLIGATION EN AUCUNE CIRCONSTANCE
POUR TOUT AUTRE DOMMAGE QUEL QU'IL SOIT (Y COMPRIS, SANS LIMITATION, LES
DOMMAGES ENTRAINES PAR LA PERTE DE BENEFICES, L'INTERRUPTION DES AFFAIRES, LA
PERTE D'INFORMATION COMMERCIALE OU TOUTE AUTRE PERTE PECUNIAIRE) DECOULANT DE
L'UTILISATION OU DE L'IMPOSSIBILITE D'UTILISATION DE CE PRODUIT MICROSOFT, ET
CE, MEME SI MICROSOFT A ETE AVISE DE LA POSSIBILITE DE TELS DOMMAGES. EN TOUT
CAS, LA SEULE OBLIGATION DE MICROSOFT EN VERTU DE TOUTE DISPOSITION DE CETTE
CONVENTION SE LIMITERA AU MONTANT EN FAIT PAYE PAR VOUS POUR LE LOGICIEL.

La prsente Convention est rgie par les lois de la province d'Ontario,
Canada. Chacune des parties  la prsente reconnat irrvocablement la
comptence des tribunaux de la province d'Ontario et consent  instituer tout
litige qui pourrait dcouler de la prsente auprs des tribunaux situs dans
le district judiciaire de York, province d'Ontario.

Au cas o vous auriez des questions concernant cette licence ou que vous
dsiriez vous mettre en rapport avec Microsoft pour quelque raison que ce
soit, veuillez contacter la succursale Microsoft desservant votre pays, dont
l'adresse est fournie dans ce produit, ou crire  : Microsoft Sales
Information Center, One Microsoft Way, Redmond, Washington 98052-6399.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\src\readme.txt ===
========================================================================
    C# CLASS LIBRARY : WmiClient Project Overview
========================================================================

AppWizard has created this WmiClient class library for you.  

This file contains a summary of what you will find in each of the files that
make up your WmiClient project.

WmiClient.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main DLL source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\src\todo.txt ===
1. Context object should fire internal change notification events - ***DONE***

2. Connection cache? [AppCntr/Runtime RAID DCR #54319]

3. Enums - are they at the correct scope? 

4. Can all our Clone implementations have a "strongly typed" 
   override e.g. for ManagementObject

	object ICloneable.Clone ()
	ManagementObject Clone()

5. Can ManagementObject, Class etc. take a scope as a string

6. Make sure ToString and Equals are implemented consistently

7. What are the rules for overlapping paths in ManagamentObject,
   Class and Searcher constructors that take scope and path.
   ***Currently resolved as follows : if a scope is specified, it overrides any other scope specified in the path.***
   ***If no scope is specified, the scope used is the one specified in the path.***
   ***If the path is a relative path (no scope), the default scope path is used.***

8. SelectClassQuery is missing the (condition, propLIst) constructor - ***NO NEED BECAUSE SELECT CLASS DOESN't ALLOW PropList

9. Do we need a way to say - "have the ConnectionOptions leave the
    authn level and imp level at their currently assigned values"? ***DONE***

10. EnablePrivileges not working correctly yet.

11. Check all classes that we allow people to subclass, and make sure
    it is clear that they know exactly what they have to do when
    subclassing. (e.g. Parsing and Building queries)

12. When URT builds catch up in VS, check that the fix for interop
    marshaling of VT_DISPATCH|VT_ARRAY's works ok (45235)

13. Which objects are Component's. How do they appear in the IDE?

14. When URT builds catch up in VS, check whether we can dispense
    with the WBEMSinkDemultiplexor and use IWbemObjectSink directly
    with some attribution.

15. Dispense with wbemutilities_v1 by providing the wrappers manually. [AppCntr/Runtime RAID DCR #48803]

16. Dispense with wbemclient_v1 by providing the wrappers manually. [AppCntr/Runtime RAID DCR #48803]

17. Extended error objects: will need to supress HRESULTS->COMEXception 
    from interop and use PInvoke to get the error object. [AppCntr/Runtime RAID DCR #55369]

18. What to do with CaseInsensitiveHashTable? ***Resolved - this class was deprecated and we are not using it any more***

19. Security issues with running from ASP+ on NT4. Do we support this
    configuration? 

20. Possibly add an API to Searcher that returns a single object

21. Code-Access Security integration !! For v1.0 currently decided we do not need to do anything in this respect. 
	This is still pending some testing of remote scenarios with WinForms/WebForms to see how and whether this strategy
	limits WMI usage.

22. GetRelated constructors?? (assoc class vs. endpoint class) [AppCntr/Runtime RAID DCR #54545]

23. Support multiple enumerators on methods [AppCntr/Runtime RAID DCR #55371]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\asp+\processes\readme.txt ===
========================================================================
    C# WEB PROJECT : Processes Project Overview
========================================================================

AppWizard has created this Processes web project for you.  

This file contains a summary of what you will find in each of the files that
make up your Processes project.

Processes.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

WebForm1.aspx
    This is the main web form source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\asynctest1\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : ClientTest Project Overview
========================================================================

AppWizard has created this ClientTest console application for you.  

This file contains a summary of what you will find in each of the files that
make up your ClientTest application.


ClientTest.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\classcreate\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : ClassCreate Project Overview
========================================================================

AppWizard has created this ClassCreate console application for you.  

This file contains a summary of what you will find in each of the files that
make up your ClassCreate application.


ClassCreate.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\classenum\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : ClassEnum Project Overview
========================================================================

AppWizard has created this ClassEnum console application for you.  

This file contains a summary of what you will find in each of the files that
make up your ClassEnum application.


ClassEnum.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\collection1\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : Collection1 Project Overview
========================================================================

AppWizard has created this Collection1 console application for you.  

This file contains a summary of what you will find in each of the files that
make up your Collection1 application.


Collection1.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\compareto\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : CompareTo Project Overview
========================================================================

AppWizard has created this CompareTo console application for you.  

This file contains a summary of what you will find in each of the files that
make up your CompareTo application.


CompareTo.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\collectioncopyto\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : CollectionCopyTo Project Overview
========================================================================

AppWizard has created this CollectionCopyTo console application for you.  

This file contains a summary of what you will find in each of the files that
make up your CollectionCopyTo application.


CollectionCopyTo.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\delegatethrow\readme.txt ===
========================================================================
    C# WINDOWS APPLICATION : DelegateThrow Project Overview
========================================================================

AppWizard has created this DelegateThrow windows application for you.  

This file contains a summary of what you will find in each of the files that
make up your DelegateThrow application.


DelegateThrow.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

Form1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\deleteclass\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : DeleteClass Project Overview
========================================================================

AppWizard has created this DeleteClass console application for you.  

This file contains a summary of what you will find in each of the files that
make up your DeleteClass application.


DeleteClass.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\enuminstances\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : EnumInstances Project Overview
========================================================================

AppWizard has created this EnumInstances console application for you.  

This file contains a summary of what you will find in each of the files that
make up your EnumInstances application.


EnumInstances.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\enumprops\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : EnumProps Project Overview
========================================================================

AppWizard has created this EnumProps console application for you.  

This file contains a summary of what you will find in each of the files that
make up your EnumProps application.


EnumProps.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\eventwatcherasync\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : eventwatcherasync Project Overview
========================================================================

AppWizard has created this eventwatcherasync console application for you.  

This file contains a summary of what you will find in each of the files that
make up your eventwatcherasync application.


eventwatcherasync.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\eventwatcherpolling\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : eventwatcherpolling Project Overview
========================================================================

AppWizard has created this eventwatcherpolling console application for you.  

This file contains a summary of what you will find in each of the files that
make up your eventwatcherpolling application.


eventwatcherpolling.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\invokemethod\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : InvokeMethod Project Overview
========================================================================

AppWizard has created this InvokeMethod console application for you.  

This file contains a summary of what you will find in each of the files that
make up your InvokeMethod application.


InvokeMethod.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\invokemethodasync\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : InvokeMethodAsync Project Overview
========================================================================

AppWizard has created this InvokeMethodAsync console application for you.  

This file contains a summary of what you will find in each of the files that
make up your InvokeMethodAsync application.


InvokeMethodAsync.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\pathtest\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PathTest Project Overview
========================================================================

AppWizard has created this PathTest console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PathTest application.


PathTest.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\propertycopyto\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PropertyCopyTo Project Overview
========================================================================

AppWizard has created this PropertyCopyTo console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PropertyCopyTo application.


PropertyCopyTo.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\propertyqualifiersets\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PropQualSets Project Overview
========================================================================

AppWizard has created this PropQualSets console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PropQualSets application.


PropQualSets.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\queryinstances\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : QueryInstances Project Overview
========================================================================

AppWizard has created this QueryInstances console application for you.  

This file contains a summary of what you will find in each of the files that
make up your QueryInstances application.


QueryInstances.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\scopechange\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : ScopeChange Project Overview
========================================================================

AppWizard has created this ScopeChange console application for you.  

This file contains a summary of what you will find in each of the files that
make up your ScopeChange application.


ScopeChange.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\test1\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : Test1 Project Overview
========================================================================

AppWizard has created this Test1 console application for you.  

This file contains a summary of what you will find in each of the files that
make up your Test1 application.


Test1.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\traverserelations\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : TraverseRelations Project Overview
========================================================================

AppWizard has created this TraverseRelations console application for you.  

This file contains a summary of what you will find in each of the files that
make up your TraverseRelations application.


TraverseRelations.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\config\src\wmi\wmiclient\test\useridnullref\provider\readme.txt ===
TO install the provider:

1. Got to the (WINDOWS)\system32\wbem directory
2. Copy the userid.mof and userid.dll from here to that directory
3. run "mofcomp userid.mof"
4. run "regsvr32 userid.mof"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

bldinc		... place to build all generated header files
inc		... shared include files
lib		... shared lib files
import		... headers and libs snapshoted from other teams
sdk		... public include files and libraries
rtl		... user-mode runtime library
xsp		... xsp dll

http		... (henrysa)
ul		... universal listener (keithmo)
core		... core user-mode portion of web server (muralik)

misc		... chaos zone
prototypes	... prototypes go here
website		... the duct-tape web site goes here
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Dec 01, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core
     and details related to "Duct-Tape User-mode processes"

File            Description

README.txt      This file.

ap\             Admin Process
wp\             Worker Process
inc\            Include files for user-mode components
common\         Common shared DLLs/libraries
setup\          Setup related scripts 


Implementation Details

Contents:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

ap - IIS admin process components

was     ... web admin service
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

was - IIS Web Admin Service

dll         ... primary service dll sources
test        ... test app sources
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\dll\todo.txt ===
CODEWORK: Here are a number of things we need to do in WAS (and in IIS+
more generally in some cases) before ship:


Review all metabase settings we inherited from IIS5, to make sure we implement
them in IIS+ (or explicitly choose to punt). 

Rename everything (dlls, event source name, service name, etc.) to final 
product names.

Sync up iisutil sources to the final, shipping IIS5 sources from which they
were forked (has this already been done??).

Adjust all default configuration settings to the desired values for ship. This 
includes default values for settings read from the config store, but also values
for things that are hardwired in the code (low mem limits, etc.).

Review all strings that show to the customer, for example event log messages.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\dll\archive\createtoken\anontoken.txt ===
/***************************************************************************++

Routine Description:

    Spin up the actual process.

Arguments:

    None.

Return Value:

    HRESULT

--***************************************************************************/

HRESULT
WORKER_PROCESS::StartProcess(
    )
{

    BOOL Success = TRUE;
    HRESULT hr = S_OK;
    STARTUPINFO StartupInfo;
    PROCESS_INFORMATION ProcessInfo;
    STRU CommandLine;
    DWORD ReturnCode = 0;
    BOOL Impersonating = FALSE;
    

    ZeroMemory( &StartupInfo, sizeof( StartupInfo ) );
    StartupInfo.cb = sizeof( StartupInfo );

    ZeroMemory( &ProcessInfo, sizeof( ProcessInfo ) );


    //
    // Create the command line.
    //

    hr = CreateCommandLine( &CommandLine );

    if ( FAILED( hr ) )
    {

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Creating command line failed\n"
            ));

        goto exit;
    }


    //
    // Impersonate the anonymous token; in this way, the new process
    // will be created running as the anonymous token too.
    //

    Success = NtImpersonateAnonymousToken( GetCurrentThread() );

    if ( ! Success )
    {

        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Could not impersonate anonymous token\n"
            ));

        goto exit;

    }

    Impersonating = TRUE; 


    //
    // Create the actual process.
    //
    // We create the process suspended so that, if necessary, we can 
    // affinitize it to a particular processor.
    //

    Success = CreateProcess(
                    NULL,                   // program name (passed in command line)
                    CommandLine.QueryStr(), // command line
                    NULL,                   // process security attributes
                    NULL,                   // thread security attributes
                    FALSE,                  // handle inheritance flag
                    CREATE_SUSPENDED,       // creation flags
                    NULL,                   // environment block
#if WP_DIRECTORY_HACK
                    g_pCurrentDirectory->QueryStr(),
#else   // WP_DIRECTORY_HACK
                    NULL,                   // current directory name
#endif  // WP_DIRECTORY_HACK
                    &StartupInfo,           // STARTUPINFO
                    &ProcessInfo            // PROCESS_INFORMATION
                    );


    if ( ! Success )
    {

        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Could not create process\n"
            ));

        goto exit;

    }


    //
    // Stop impersonating.
    //

    Success = RevertToSelf();

    if ( ! Success )
    {

        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Could not revert to self\n"
            ));

        goto exit;

    }
    else
    {
        Impersonating = FALSE;
    }


    m_ProcessId = ProcessInfo.dwProcessId;
    m_ProcessHandle = ProcessInfo.hProcess;


    m_ProcessAlive = TRUE;


    IF_DEBUG( WEB_ADMIN_SERVICE )
    {
        DBGPRINTF((
            DBG_CONTEXT,
            "New worker process created (ptr: %p; pid: %lu)\n",
            this,
            m_ProcessId
            ));
    }


    //
    // If this worker process should be affinitized, do it now.
    //

    if ( m_ProcessAffinityMask )
    {

        IF_DEBUG( WEB_ADMIN_SERVICE )
        {
            DBGPRINTF((
                DBG_CONTEXT, 
                "Affinitizing new process with mask: %p\n",
                m_ProcessAffinityMask
                ));
        }


        Success = SetProcessAffinityMask(
                        m_ProcessHandle,        // handle to process
                        m_ProcessAffinityMask   // process affinity mask
                        );

        if ( ! Success )
        {

            hr = HRESULT_FROM_WIN32( GetLastError() );

            DPERROR((
                DBG_CONTEXT,
                hr,
                "Could not set process affinity mask\n"
                ));

            goto exit;

        }

    }


    //
    // Let the process run.
    //
    // Note that ResumeThread returns 0xFFFFFFFF to signal an error, or
    // the previous suspend count otherwise (which should always be one
    // in this case). 
    //

    ReturnCode = ResumeThread( ProcessInfo.hThread );

    if ( ReturnCode == 0xFFFFFFFF )
    {

        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Could not resume thread\n"
            ));

        goto exit;

    }
    else
    {
        DBG_ASSERT( ReturnCode == 1 );
    }


exit:

    if ( ProcessInfo.hThread != NULL )
    {
        DBG_REQUIRE( CloseHandle( ProcessInfo.hThread ) );
    }


    if ( Impersonating == TRUE )
    {
    
        //
        // Stop impersonating.
        //

        Success = RevertToSelf();

        if ( ! Success )
        {

            hr = HRESULT_FROM_WIN32( GetLastError() );

            DPERROR((
                DBG_CONTEXT,
                hr,
                "Could not revert to self\n"
                ));


            //
            // This is bad...
            //

        }
        else
        {
            Impersonating = FALSE;
        }

    }


    return hr;

}   // WORKER_PROCESS::StartProcess
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\dll\archive\createtoken\guesttoken.txt ===
/***************************************************************************++

Routine Description:

    Create a create a lower privilege security token that can be used for
    creating worker processes. 

Arguments:

    None.

Return Value:

    HRESULT

--***************************************************************************/

HRESULT
WEB_ADMIN_SERVICE::CreateNobbledToken(
    )
{

    HRESULT hr = S_OK;
    BOOL Success = TRUE;
    HANDLE GuestToken = NULL;
    HANDLE PrimaryToken = NULL;


    //
    // Get the token for the Guest account.
    //

    Success = LogonUser(
                    L"Guest",                   // user is Guest
                    L".",                       // look in local account database
                    L"",                        // no password
                    LOGON32_LOGON_NETWORK,      // logon as batch
                    LOGON32_PROVIDER_DEFAULT,   // default logon provider
                    &GuestToken                 // returned token
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Logon user failed\n"
            ));

        goto exit;
    }


    //
    // Duplicate the token in order to get a primary (as opposed to 
    // impersonation) token.
    //

    Success = DuplicateTokenEx(
                    GuestToken,                 // existing token
                    MAXIMUM_ALLOWED,            // access rights
                    NULL,                       // SECURITY_ATTRIBUTES
                    SecurityAnonymous,          // impersonation level
                    TokenPrimary,               // primary token
                    &PrimaryToken               // returned token
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Duplicate token failed\n"
            ));

        goto exit;
    }


    //
    // Success! Tuck away the new token.
    //

    DBG_ASSERT( m_NobbledToken == NULL );

    m_NobbledToken = PrimaryToken;
    
    PrimaryToken = NULL;


exit:

    if ( GuestToken != NULL )
    {
        DBG_REQUIRE( CloseHandle( GuestToken ) );
    }
    
    if ( PrimaryToken != NULL )
    {
        DBG_REQUIRE( CloseHandle( PrimaryToken ) );
    }


    return hr;

}   // WEB_ADMIN_SERVICE::CreateNobbledToken
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\dll\archive\createtoken\createtoken.txt ===
/***************************************************************************++

Routine Description:

    Create and cache the two tokens under which we might create worker 
    processes: the LocalSystem token, and a reduced privilege token. 

Arguments:

    None.

Return Value:

    HRESULT

--***************************************************************************/

HRESULT
WEB_ADMIN_SERVICE::CreateCachedWorkerProcessTokens(
    )
{

    HRESULT hr = S_OK;
    BOOL Success = TRUE;


    //
    // First, get and cache the LocalSystem token. For this, we simply
    // use our own process token (i.e. LocalSystem).
    //

    DBG_ASSERT( m_LocalSystemToken == NULL );

    Success = OpenProcessToken(
                    GetCurrentProcess(),                // handle to process
                    TOKEN_ALL_ACCESS,                   // desired access
                    &m_LocalSystemToken                 // returned token
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Opening process token failed\n"
            ));

        goto exit;
    }


    //
    // Now create the reduced privilege token.
    //

    //
    // First we must ensure that the token under which we are currently
    // running has the privilege to create new tokens.
    //

    hr = EnableCreateTokenPrivilege();

    if ( FAILED( hr ) )
    {
    
        DPERROR(( 
            DBG_CONTEXT,
            hr,
            "Enabling create token privilege failed\n"
            ));

        goto exit;
    }


    //
    // Now, go ahead and create the new reduced privilege token.
    //

    hr = CreateNobbledToken();

    if ( FAILED( hr ) )
    {
    
        DPERROR(( 
            DBG_CONTEXT,
            hr,
            "Creating nobbled token failed\n"
            ));

        goto exit;
    }


exit:

    return hr;

}   // WEB_ADMIN_SERVICE::CreateCachedWorkerProcessTokens



/***************************************************************************++

Routine Description:

    Adjust the token of this service process to ensure that we have the
    privilege to create other tokens. 

Arguments:

    None.

Return Value:

    HRESULT

--***************************************************************************/

HRESULT
WEB_ADMIN_SERVICE::EnableCreateTokenPrivilege(
    )
{

    HRESULT hr = S_OK;
    BOOL Success = TRUE;
    HANDLE TokenHandle = NULL;
    PTOKEN_PRIVILEGES pTokenPrivileges = NULL;
    ULONG RequiredLength = 0;
    ULONG i = 0;
    LUID CreateTokenLuid = { 0, 0 };


    //
    // Open the current process token.
    //

    Success = OpenProcessToken(
                     GetCurrentProcess(),               // ProcessHandle
                     TOKEN_QUERY                        // DesiredAccess
                        | TOKEN_ADJUST_PRIVILEGES,
                     &TokenHandle                       // TokenHandle
                     );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Opening process token failed\n"
            ));

        goto exit;
    }


    //
    // Lookup the create token privilege.
    //

    Success = LookupPrivilegeValue(
                    NULL,                               // lpSystemName
                    SE_CREATE_TOKEN_NAME,               // lpName
                    &CreateTokenLuid                    // lpLuid
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Looking up privilege value failed\n"
            ));

        goto exit;
    }


    //
    // Determine the required length of the privileges buffer.
    //

    Success = GetTokenInformation(
                    TokenHandle,                        // TokenHandle
                    TokenPrivileges,                    // TokenInformationClass
                    NULL,                               // TokenInformation
                    0,                                  // TokenInformationLength
                    &RequiredLength                     // ReturnLength
                    );
    
    
    DBG_ASSERT( ( ! Success ) && ( GetLastError() == ERROR_INSUFFICIENT_BUFFER ) );


    //
    // Allocate.
    //

    pTokenPrivileges = ( PTOKEN_PRIVILEGES ) GlobalAlloc( GMEM_FIXED, RequiredLength );

    if ( pTokenPrivileges == NULL )
    {
        hr = HRESULT_FROM_WIN32( ERROR_NOT_ENOUGH_MEMORY );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Allocating PTOKEN_PRIVILEGES failed\n"
            ));

        goto exit;
    }


    //
    // Now actually get it.
    //

    Success = GetTokenInformation(
                    TokenHandle,                        // TokenHandle
                    TokenPrivileges,                    // TokenInformationClass
                    ( PVOID ) pTokenPrivileges,         // TokenInformation
                    RequiredLength,                     // TokenInformationLength
                    &RequiredLength                     // ReturnLength
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Getting token information failed\n"
            ));

        goto exit;
    }


    //
    // Scan for the create token privilege and enable it.
    //

    for ( i = 0 ; i < pTokenPrivileges->PrivilegeCount ; i++ )
    {
        if ( RtlEqualLuid(
                &pTokenPrivileges->Privileges[i].Luid,
                &CreateTokenLuid
                ) )
        {
            pTokenPrivileges->Privileges[i].Attributes |= SE_PRIVILEGE_ENABLED;
            break;
        }
    }


    //
    // Write it back out.
    //

    Success = AdjustTokenPrivileges(
                    TokenHandle,                        // TokenHandle
                    FALSE,                              // DisableAllPrivileges
                    pTokenPrivileges,                   // NewState
                    0,                                  // BufferLength
                    NULL,                               // PreviousState
                    NULL                                // ReturnLength
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Adjusting token privileges failed\n"
            ));

        goto exit;
    }


exit:

    if ( TokenHandle != NULL )
    {
        DBG_REQUIRE( CloseHandle( TokenHandle ) );
    }

    if ( pTokenPrivileges != NULL )
    {
        DBG_REQUIRE( GlobalFree( pTokenPrivileges ) == NULL );
    }


    return hr;

}   // WEB_ADMIN_SERVICE::EnableCreateTokenPrivilege



/***************************************************************************++

Routine Description:

    Create a create a lower privilege security token that can be used for
    creating worker processes. 

Arguments:

    None.

Return Value:

    HRESULT

--***************************************************************************/

HRESULT
WEB_ADMIN_SERVICE::CreateNobbledToken(
    )
{

    HRESULT hr = S_OK;
    NTSTATUS Status = STATUS_SUCCESS;
    BOOL Success = TRUE;
    HANDLE TokenHandle = NULL;
    SECURITY_QUALITY_OF_SERVICE ImpersonationQos;
    OBJECT_ATTRIBUTES ObjectAttributes;
    LARGE_INTEGER Expiry;
    PSID pUserSid = NULL;
    PSID pGroupSid = NULL;
    PSID pPrimaryGroupSid = NULL;
    SID_IDENTIFIER_AUTHORITY NtAuthority = SECURITY_NT_AUTHORITY;
    SID_IDENTIFIER_AUTHORITY WorldAuthority = SECURITY_WORLD_SID_AUTHORITY;
    LUID ChangeNotifyLuid;
    LUID SystemAuthenticationLuid = SYSTEM_LUID;
    TOKEN_USER TokenUser;
    TOKEN_GROUPS TokenGroups;
    TOKEN_PRIMARY_GROUP TokenPrimaryGroup;
    TOKEN_PRIVILEGES TokenPrivileges;
    TOKEN_SOURCE TokenSource;


    //
    // Initialize the object attributes used by the token: anonymous,
    // with static tracking.
    //

    ImpersonationQos.Length = sizeof( ImpersonationQos );
    ImpersonationQos.ImpersonationLevel = SecurityImpersonation;
    ImpersonationQos.ContextTrackingMode = SECURITY_STATIC_TRACKING;
    ImpersonationQos.EffectiveOnly = TRUE;


    InitializeObjectAttributes(
        &ObjectAttributes,                          // ObjectAttributes
        NULL,                                       // ObjectName
        0,                                          // Attributes
        NULL,                                       // RootHandle
        NULL                                        // SecurityDescriptor
        );

    ObjectAttributes.SecurityQualityOfService = &ImpersonationQos;


    //
    // Create and initialize the user SID: LocalSystem.
    //

    Success = AllocateAndInitializeSid(
                    &NtAuthority,                   // pIdentifierAuthority
                    1,                              // nSubAuthorityCount
                    SECURITY_LOCAL_SYSTEM_RID,      // nSubAuthority0
                    0,                              // nSubAuthority1
                    0,                              // nSubAuthority2
                    0,                              // nSubAuthority3
                    0,                              // nSubAuthority4
                    0,                              // nSubAuthority5
                    0,                              // nSubAuthority6
                    0,                              // nSubAuthority7
                    &pUserSid                       // pSid
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Allocating and initializing SID failed\n"
            ));

        goto exit;
    }


    TokenUser.User.Sid = pUserSid;
    TokenUser.User.Attributes = 0;


    //
    // Create & initialize the group SID: Everyone.
    //

    Success = AllocateAndInitializeSid(
                    &WorldAuthority,                // pIdentifierAuthority
                    1,                              // nSubAuthorityCount
                    SECURITY_WORLD_RID,             // nSubAuthority0
                    0,                              // nSubAuthority1
                    0,                              // nSubAuthority2
                    0,                              // nSubAuthority3
                    0,                              // nSubAuthority4
                    0,                              // nSubAuthority5
                    0,                              // nSubAuthority6
                    0,                              // nSubAuthority7
                    &pGroupSid                      // pSid
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Allocating and initializing SID failed\n"
            ));

        goto exit;
    }


    TokenGroups.GroupCount = 1;
    TokenGroups.Groups[0].Sid = pGroupSid;
    TokenGroups.Groups[0].Attributes = SE_GROUP_ENABLED;


    //
    // Create & initialize the primary group SID: Everyone.
    //

    Success = AllocateAndInitializeSid(
                    &WorldAuthority,                // pIdentifierAuthority
                    1,                              // nSubAuthorityCount
                    SECURITY_WORLD_RID,             // nSubAuthority0
                    0,                              // nSubAuthority1
                    0,                              // nSubAuthority2
                    0,                              // nSubAuthority3
                    0,                              // nSubAuthority4
                    0,                              // nSubAuthority5
                    0,                              // nSubAuthority6
                    0,                              // nSubAuthority7
                    &pPrimaryGroupSid               // pSid
                 );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Allocating and initializing SID failed\n"
            ));

        goto exit;
    }


    TokenPrimaryGroup.PrimaryGroup = pPrimaryGroupSid;


    //
    // Create the privilege set for the new token: Change-Notify.
    //

    Success = LookupPrivilegeValue(
                    NULL,                           // lpSystemName
                    SE_CHANGE_NOTIFY_NAME,          // lpName
                    &ChangeNotifyLuid               // lpLuid
                    );

    if ( ! Success )
    {
        hr = HRESULT_FROM_WIN32( GetLastError() );

        DPERROR((
            DBG_CONTEXT,
            hr,
            "Looking up privilege value failed\n"
            ));

        goto exit;
    }


    TokenPrivileges.PrivilegeCount = 1;
    TokenPrivileges.Privileges[0].Luid = ChangeNotifyLuid;
    TokenPrivileges.Privileges[0].Attributes = 0;


    //
    // Create the token source.
    //

    //
    // CODEWORK What is the final source name that we wish to ship with? 
    //

    strcpy( TokenSource.SourceName, "URT" );
    TokenSource.SourceIdentifier = SystemAuthenticationLuid;


    //
    // No expiration.
    //

    Expiry.QuadPart = 0;


    //
    // Create the token.
    //

    Status = NtCreateToken(
                    &TokenHandle,                       // TokenHandle
                    TOKEN_ALL_ACCESS,                   // DesiredAccess
                    &ObjectAttributes,                  // ObjectAttributes
                    TokenPrimary,                       // TokenType
                    &SystemAuthenticationLuid,          // AuthenticationId
                    &Expiry,                            // ExpirationTime
                    &TokenUser,                         // User
                    &TokenGroups,                       // Groups
                    &TokenPrivileges,                   // Privileges
                    NULL,                               // Owner
                    &TokenPrimaryGroup,                 // PrimaryGroup
                    NULL,                               // DefaultDacl
                    &TokenSource                        // TokenSource
                    );

    if ( ! NT_SUCCESS ( Status ) )
    {
        hr = HRESULT_FROM_NT( Status );
    
        DPERROR(( 
            DBG_CONTEXT,
            hr,
            "Could not create token\n"
            ));

        goto exit;
    }


    //
    // Success!
    //


    DBG_ASSERT( m_NobbledToken == NULL );
    m_NobbledToken = TokenHandle;


exit:

    if ( pUserSid != NULL )
    {
        FreeSid( pUserSid );
    }

    if ( pGroupSid != NULL )
    {
        FreeSid( pGroupSid );
    }

    if ( pPrimaryGroupSid != NULL )
    {
        FreeSid( pPrimaryGroupSid );
    }

    if ( hr != S_OK )
    {
        if ( TokenHandle != NULL )
        {
            DBG_REQUIRE( CloseHandle( TokenHandle ) );
        }
    }


    return hr;

}   // WEB_ADMIN_SERVICE::CreateNobbledToken
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\ap\was\test\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

test - Web Admin Service test code

fakewp  ... temporary, fake worker process exe
upmbtodt... tool to upgrade an existing IIS metabase to duct-tape, by adding app pool information
w3control... tool to test the w3 site and app control interface
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\common\ipm\readme.txt ===
README.txt

Author:         Michael Courage     (MCourage)
Created:        08-Feb-1999

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core\common\ipm
     and details related to IIS InterProcess Messaging


File            Description

README.txt      This file.



Implementation Details:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\common\util\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 17, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core\common\util
     and details related to IIS Utilities Functions


File            Description

README.txt      This file.



Implementation Details:

Most of the files here were copied from elsewhere in the IIS source tree.
The code supports utility functions for the IIS User-mode processes.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\iiswp\readme.txt ===
There are two versions of iiswp,

Dev Version - iiswp.exe
Test Version - rwp.exe

rwp - Rogue Worker Process misbehaves in order to test the App Manager

The only difference between these two, from a source code point of view
is the #define TEST which is defined when building the test version

-SatishM
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\perfctrs\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

perfctrs - IIS performance counters components


Components
----------

1. Shared Memory Manager DLL (iissmm.dll)
        This is a COM inproc server for accessing the shared memory

2. Generic WMI High performance provider DLL (wmihpp.dll)
        This is a generic provider, all the class information is obtained from
        the shared memory using iissmm.dll. Every counter class that uses
        iissmm.dll can use this provider.

3. Sample counters implementation
        a) iisctrs.dll - 3 simple counters
	b) test programs for SM manager (tmgr.exe), reader (treader.exe),
           writer that increments counters (twriter.exe) and shared memory
           viewer (tviewer.exe).


Directory Structure
-------------------

wmihpp     -- WMI hiperf generic provider
iissmm     -- shared memory manager DLL
iisctrs    -- sample counters
   ctrsdef -- sample counters definition
   test    -- test/sample code for sample counters defined in ctrsdef
      tmgr      -- sample manager used for adding/deleting counter instances
      treader   -- sample counter reader
      twriter   -- sample counter writer (increments counters)
      tviewer   -- Shared memory viewer
inc -- common includes
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\perfctrs\iisctrs\ctrsdef\readme.txt ===
IIS Performance Counters
========================

This is a sample counters implementation (static library)
To provide your implementation change the .cxx, .h, and .mof files.


Setup
-------

1. mofcomp iisctrs.mof
2. make sure that the generic hiperf WMI provider is installed:
	-- regsvr32 wmihpp.dll


Running Perfmon
---------------

On Windows 2000 start perfmon with the /wmi switch:
C:/> perfmon /wmi
NOTE: to see counters in perfmon there has to be at least one instance
      of the counters (in testing use tmgr.exe to add/remove instances).


Testing/Sample code
-------------------

To test the perf system use the test programs in the ..\test subdirectory:

tsmgr    -- lets you add and remove instances of the perf class.
tviewer  -- lets you view the shared memory used for counters
twriter  -- increments counters
treader  -- lets you view counters (summarized from all SM data MMFs)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\perfctrs\iisctrs\test\readme.txt ===
IIS Performance Counters Test/Sample code
=========================================


Setup
-------

1. mofcomp iisctrs.mof
2. make sure that the generic hiperf WMI provider is installed:
	-- regsvr32 wmihpp.dll


Running Perfmon
---------------

On Windows 2000 start perfmon with the /wmi switch:
C:/> perfmon /wmi
NOTE: to see counters in perfmon there has to be at least one instance
      of the counters (in testing use tmgr.exe to add/remove instances).


Contents of this directory
--------------------------

tsmgr    -- lets you add and remove instances of the perf class.
tviewer  -- lets you view the shared memory used for counters
twriter  -- increments counters
treader  -- lets you view counters (summarized from all SM data MMFs)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\prfshmem\todo.txt ===
Performance Counters Shared Memory Todo List:

1)  Reader needs to be able to swap to the second piece of memory.
2)  Reader needs to care about version numbers.
3)  Wrap around of version numbers (skip zero).
4)  Any Reader Locking?
5)  Outline why WAS is safe without locking.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\w3ctrs\w3ctrs.ini ===
[info]
drivername=W3SVC
symbolfile=w3ctrs.h
trusted=

[languages]
009=English
000=Neutral

[objects]
W3_COUNTER_OBJECT_009_NAME=Web Service
W3_GLOBAL_COUNTER_OBJECT_009_NAME=Web Service Cache

[text]
W3_COUNTER_OBJECT_009_NAME=Web Service
W3_COUNTER_OBJECT_009_HELP=The Web Service object includes counters specific to the World Wide Web Publishing Service.

W3_BYTES_SENT_COUNTER_009_NAME=Total Bytes Sent
W3_BYTES_SENT_COUNTER_009_HELP=Total Bytes Sent is the number of data bytes that have been sent by the Web service.

W3_BYTES_SENT_PER_SEC_009_NAME=Bytes Sent/sec
W3_BYTES_SENT_PER_SEC_009_HELP=Bytes Sent/sec is the rate that data bytes are sent by the Web service.

W3_BYTES_RECEIVED_COUNTER_009_NAME=Total Bytes Received
W3_BYTES_RECEIVED_COUNTER_009_HELP=Total Bytes Received is the number of data bytes that have been received by the Web service.

W3_BYTES_RECEIVED_PER_SEC_009_NAME=Bytes Received/sec
W3_BYTES_RECEIVED_PER_SEC_009_HELP=Bytes Received/sec is the rate that data bytes are received by the Web service.

W3_BYTES_TOTAL_COUNTER_009_NAME=Total Bytes Transfered
W3_BYTES_TOTAL_COUNTER_009_HELP=Total bytes either received or sent by the Web service.

W3_BYTES_TOTAL_PER_SEC_009_NAME=Bytes Total/sec
W3_BYTES_TOTAL_PER_SEC_009_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the Web service.

W3_FILES_SENT_COUNTER_009_NAME=Total Files Sent
W3_FILES_SENT_COUNTER_009_HELP=Total Files Sent is the total number of files sent by the Web service (counted since service startup).

W3_FILES_SENT_SEC_009_NAME=Files Sent/sec
W3_FILES_SENT_SEC_009_HELP=The rate files are sent by the Web service.

W3_FILES_RECEIVED_COUNTER_009_NAME=Total Files Received
W3_FILES_RECEIVED_COUNTER_009_HELP=Total Files Received is the total number of files received by the Web service (counted since service startup).

W3_FILES_RECEIVED_SEC_009_NAME=Files Received/sec
W3_FILES_RECEIVED_SEC_009_HELP=The rate files are received by the Web service.

W3_FILES_TOTAL_COUNTER_009_NAME=Total Files Transferred
W3_FILES_TOTAL_COUNTER_009_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the Web service (counted since service startup).

W3_FILES_SEC_009_NAME=Files/sec
W3_FILES_SEC_009_HELP=The rate files are transferred, that is, sent and received by the Web service.

W3_CURRENT_ANONYMOUS_COUNTER_009_NAME=Current Anonymous Users
W3_CURRENT_ANONYMOUS_COUNTER_009_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the Web service.

W3_CURRENT_NONANONYMOUS_COUNTER_009_NAME=Current NonAnonymous Users
W3_CURRENT_NONANONYMOUS_COUNTER_009_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the Web service.

W3_TOTAL_ANONYMOUS_COUNTER_009_NAME=Total Anonymous Users
W3_TOTAL_ANONYMOUS_COUNTER_009_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the Web service (counted since service startup).

W3_ANONYMOUS_USERS_SEC_009_NAME=Anonymous Users/sec
W3_ANONYMOUS_USERS_SEC_009_HELP=The rate users are making anonymous connections using the Web service.

W3_TOTAL_NONANONYMOUS_COUNTER_009_NAME=Total NonAnonymous Users
W3_TOTAL_NONANONYMOUS_COUNTER_009_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the Web service (counted since service startup).

W3_NON_ANONYMOUS_USERS_SEC_009_NAME=NonAnonymous Users/sec
W3_NON_ANONYMOUS_USERS_SEC_009_HELP=The rate users are making non-anonymous connections using the Web service.

W3_MAX_ANONYMOUS_COUNTER_009_NAME=Maximum Anonymous Users
W3_MAX_ANONYMOUS_COUNTER_009_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the Web service (counted since service startup).

W3_MAX_NONANONYMOUS_COUNTER_009_NAME=Maximum NonAnonymous Users
W3_MAX_NONANONYMOUS_COUNTER_009_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the Web service (counted since service startup).

W3_CURRENT_CONNECTIONS_COUNTER_009_NAME=Current Connections
W3_CURRENT_CONNECTIONS_COUNTER_009_HELP=Current Connections is the current number of connections established with the Web service.

W3_MAX_CONNECTIONS_COUNTER_009_NAME=Maximum Connections
W3_MAX_CONNECTIONS_COUNTER_009_HELP=Maximum Connections is the maximum number of simultaneous connections established with the Web service.

W3_CONNECTION_ATTEMPTS_COUNTER_009_NAME=Total Connection Attempts (all instances)
W3_CONNECTION_ATTEMPTS_COUNTER_009_HELP=Total Connection Attempts is the number of connections that have been attempted using the Web service (counted since service startup).  This counter is for all instances listed.

W3_CONNECTION_ATTEMPTS_SEC_009_NAME=Connection Attempts/sec
W3_CONNECTION_ATTEMPTS_SEC_009_HELP=The rate that connections using the Web service are being attempted.

W3_LOGON_ATTEMPTS_COUNTER_009_NAME=Total Logon Attempts
W3_LOGON_ATTEMPTS_COUNTER_009_HELP=Total Logon Attempts is the number of logons that have been attempted using the Web service (counted since service startup).

W3_LOGON_ATTEMPTS_SEC_009_NAME=Logon Attempts/sec
W3_LOGON_ATTEMPTS_SEC_009_HELP=The rate that logons using the Web service are being attempted.

W3_TOTAL_OPTIONS_COUNTER_009_NAME=Total Options Requests
W3_TOTAL_OPTIONS_COUNTER_009_HELP=Total Options Requests is the number of HTTP requests using the OPTIONS method (counted since service startup).

W3_TOTAL_OPTIONS_SEC_009_NAME=Options Requests/sec
W3_TOTAL_OPTIONS_SEC_009_HELP=The rate HTTP requests using the OPTIONS method are made.

W3_TOTAL_GETS_COUNTER_009_NAME=Total Get Requests
W3_TOTAL_GETS_COUNTER_009_HELP=Total Get Requests is the number of HTTP requests using the GET method (counted since service startup).  Get requests are generally used for basic file retrievals or image maps, though they can be used with forms.

W3_TOTAL_GETS_SEC_009_NAME=Get Requests/sec
W3_TOTAL_GETS_SEC_009_HELP=The rate HTTP requests using the GET method are made.  Get requests are generally used for basic file retrievals or image maps, though they can be used with forms.

W3_TOTAL_POSTS_COUNTER_009_NAME=Total Post Requests
W3_TOTAL_POSTS_COUNTER_009_HELP=Total Post Requests is the number of HTTP requests using the POST method (counted since service startup).  Post requests are generally used for forms or gateway requests.

W3_TOTAL_POSTS_SEC_009_NAME=Post Requests/sec
W3_TOTAL_POSTS_SEC_009_HELP=The rate HTTP requests using the POST method are made.  Post requests are generally used for forms or gateway requests.

W3_TOTAL_HEADS_COUNTER_009_NAME=Total Head Requests
W3_TOTAL_HEADS_COUNTER_009_HELP=Total Head Requests is the number of HTTP requests using the HEAD method (counted since service startup).  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_HEADS_SEC_009_NAME=Head Requests/sec
W3_TOTAL_HEADS_SEC_009_HELP=The rate HTTP requests using the HEAD method are made.  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_PUTS_COUNTER_009_NAME=Total Put Requests
W3_TOTAL_PUTS_COUNTER_009_HELP=Total Put Requests is the number of HTTP requests using the PUT method (counted since service startup).

W3_TOTAL_PUTS_SEC_009_NAME=Put Requests/sec
W3_TOTAL_PUTS_SEC_009_HELP=The rate HTTP requests using the PUT method are made.

W3_TOTAL_DELETES_COUNTER_009_NAME=Total Delete Requests
W3_TOTAL_DELETES_COUNTER_009_HELP=Total Delete Requests is the number of HTTP requests using the DELETE method (counted since service startup).  Delete requests are generally used for file removals.

W3_TOTAL_DELETES_SEC_009_NAME=Delete Requests/sec
W3_TOTAL_DELETES_SEC_009_HELP=The rate HTTP requests using the DELETE method are made.  Delete requests are generally used for file removals.

W3_TOTAL_TRACES_COUNTER_009_NAME=Total Trace Requests
W3_TOTAL_TRACES_COUNTER_009_HELP=Total Trace Requests is the number of HTTP requests using the TRACE method (counted since service startup).  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_TRACES_SEC_009_NAME=Trace Requests/sec
W3_TOTAL_TRACES_SEC_009_HELP=The rate HTTP requests using the TRACE method are made.  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_MOVE_COUNTER_009_NAME=Total Move Requests
W3_TOTAL_MOVE_COUNTER_009_HELP=Total Move Requests is the number of HTTP requests using the MOVE method (counted since service startup).  Move requests are used for moving files and directories.

W3_TOTAL_MOVE_SEC_009_NAME=Move Requests/sec
W3_TOTAL_MOVE_SEC_009_HELP=The rate HTTP requests using the MOVE method are made.  Move requests are used for moving files and directories.

W3_TOTAL_COPY_COUNTER_009_NAME=Total Copy Requests
W3_TOTAL_COPY_COUNTER_009_HELP=Total Copy Requests is the number of HTTP requests using the COPY method (counted since service startup).  Copy requests are used for copying files and directories.

W3_TOTAL_COPY_SEC_009_NAME=Copy Requests/sec
W3_TOTAL_COPY_SEC_009_HELP=The rate HTTP requests using the COPY method are made.  Copy requests are used for copying files and directories.

W3_TOTAL_MKCOL_COUNTER_009_NAME=Total Mkcol Requests
W3_TOTAL_MKCOL_COUNTER_009_HELP=Total Mkcol Requests is the number of HTTP requests using the MKCOL method (counted since service startup).  Mkcol requests are used to create directories on the server.

W3_TOTAL_MKCOL_SEC_009_NAME=Mkcol Requests/sec
W3_TOTAL_MKCOL_SEC_009_HELP=The rate HTTP requests using the MKCOL method are made.  Mkcol requests are used to create directories on the server.

W3_TOTAL_PROPFIND_COUNTER_009_NAME=Total Propfind Requests
W3_TOTAL_PROPFIND_COUNTER_009_HELP=Total Propfind Requests is the number of HTTP requests using the PROPFIND method (counted since service startup).  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPFIND_SEC_009_NAME=Propfind Requests/sec
W3_TOTAL_PROPFIND_SEC_009_HELP=The rate HTTP requests using the PROPFIND method are made.  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPPATCH_COUNTER_009_NAME=Total Proppatch Requests
W3_TOTAL_PROPPATCH_COUNTER_009_HELP=Total Proppatch Requests is the number of HTTP requests using the PROPPATCH method (counted since service startup).  Proppatch requests set property values on files and directories.

W3_TOTAL_PROPPATCH_SEC_009_NAME=Proppatch Requests/sec
W3_TOTAL_PROPPATCH_SEC_009_HELP=The rate HTTP requests using the PROPPATCH method are made.  Proppatch requests set property values on files and directories.

W3_TOTAL_SEARCH_COUNTER_009_NAME=Total Search Requests
W3_TOTAL_SEARCH_COUNTER_009_HELP=Total Search Requests is the number of HTTP requests using the MS-SEARCH method (counted since service startup).  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_SEARCH_SEC_009_NAME=Search Requests/sec
W3_TOTAL_SEARCH_SEC_009_HELP=The rate HTTP requests using the MS-SEARCH method are made.  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_LOCK_COUNTER_009_NAME=Total Lock Requests
W3_TOTAL_LOCK_COUNTER_009_HELP=Total Lock Requests is the number of HTTP requests using the LOCK method (counted since service startup).  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_LOCK_SEC_009_NAME=Lock Requests/sec
W3_TOTAL_LOCK_SEC_009_HELP=The rate HTTP requests using the LOCK method are made.  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_UNLOCK_COUNTER_009_NAME=Total Unlock Requests
W3_TOTAL_UNLOCK_COUNTER_009_HELP=Total Unlock Requests is the number of HTTP requests using the UNLOCK method (counted since service startup).  Unlock requests are used to remove locks from files.

W3_TOTAL_UNLOCK_SEC_009_NAME=Unlock Requests/sec
W3_TOTAL_UNLOCK_SEC_009_HELP=The rate HTTP requests using the UNLOCK method are made.  Unlock requests are used to remove locks from files.

W3_TOTAL_OTHERS_COUNTER_009_NAME=Total Other Request Methods
W3_TOTAL_OTHERS_COUNTER_009_HELP=Total Other Request Methods is the number of HTTP requests that are not OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, MS-SEARCH, LOCK or UNLOCK methods (counted since service startup).  These may include LINK or other methods supported by gateway applications.

W3_TOTAL_OTHERS_SEC_009_NAME=Other Request Methods/sec
W3_TOTAL_OTHERS_SEC_009_HELP=The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, MS-SEARCH, LOCK or UNLOCK methods.  These may include LINK or other methods supported by gateway applications.

W3_TOTAL_REQUESTS_COUNTER_009_NAME=Total Method Requests
W3_TOTAL_REQUESTS_COUNTER_009_HELP=Total Method Requests is the number of all HTTP requests (counted since service startup).

W3_TOTAL_REQUESTS_SEC_009_NAME=Total Method Requests/sec
W3_TOTAL_REQUESTS_SEC_009_HELP=The rate all HTTP requests are made.

W3_TOTAL_CGI_REQUESTS_COUNTER_009_NAME=Total CGI Requests
W3_TOTAL_CGI_REQUESTS_COUNTER_009_HELP=Total Common Gateway Interface (CGI) requests are custom gateway executables (.exe) the administrator can install to add forms processing or other dynamic data sources.  CGI requests spawn a process on the server which can be a large drain on server resources.  The count is the total since service startup.

W3_CGI_REQUESTS_SEC_009_NAME=CGI Requests/sec
W3_CGI_REQUESTS_SEC_009_HELP=The rate of CGI requests that are simultaneously being processed by the Web service.

W3_TOTAL_BGI_REQUESTS_COUNTER_009_NAME=Total ISAPI Extension Requests
W3_TOTAL_BGI_REQUESTS_COUNTER_009_HELP=Total ISAPI Extension Requests are custom gateway Dynamic Link Libraries (.dll) the administrator can install to add forms processing or other dynamic data sources.  Unlike CGI requests, ISAPI requests are simple calls to a DLL library routine, thus they are better suited to high performance gateway applications.  The count is the total since service startup.

W3_BGI_REQUESTS_SEC_009_NAME=ISAPI Extension Requests/sec
W3_BGI_REQUESTS_SEC_009_HELP=The rate of ISAPI Extension requests that are simultaneously being processed by the Web service.

W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_009_NAME=Total Not Found Errors
W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_009_HELP=Total Not Found Errors is the number of requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.  The count is the total since service startup.

W3_TOTAL_NOT_FOUND_ERRORS_SEC_009_NAME=Not Found Errors/sec
W3_TOTAL_NOT_FOUND_ERRORS_SEC_009_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_LOCKED_ERRORS_COUNTER_009_NAME=Total Locked Errors
W3_TOTAL_LOCKED_ERRORS_COUNTER_009_HELP=Total Locked Errors is the number of requests that couldn't be satisfied by the server because the requested was locked.  These are generally reported as an HTTP 423 error code to the client.  The count is the total since service startup.

W3_TOTAL_LOCKED_ERRORS_SEC_009_NAME=Locked Errors/sec
W3_TOTAL_LOCKED_ERRORS_SEC_009_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document was locked.  These are generally reported as an HTTP 423 error code to the client.

W3_CURRENT_CGI_COUNTER_009_NAME=Current CGI Requests
W3_CURRENT_CGI_COUNTER_009_HELP=Current CGI Requests is the current number of CGI requests that are simultaneously being processed by the Web service.

W3_CURRENT_BGI_COUNTER_009_NAME=Current ISAPI Extension Requests
W3_CURRENT_BGI_COUNTER_009_HELP=Current ISAPI Extension Requests is the current number of Extension requests that are simultaneously being processed by the Web service.

W3_MAX_CGI_COUNTER_009_NAME=Maximum CGI Requests
W3_MAX_CGI_COUNTER_009_HELP=Maximum CGI Requests is the maximum number of CGI requests simultaneously processed by the Web service.

W3_MAX_BGI_COUNTER_009_NAME=Maximum ISAPI Extension Requests
W3_MAX_BGI_COUNTER_009_HELP=Maximum ISAPI Extension Requests is the maximum number of Extension requests simultaneously processed by the Web service.

W3_CURRENT_CAL_AUTH_COUNTER_009_NAME=Current CAL count for authenticated users
W3_CURRENT_CAL_AUTH_COUNTER_009_HELP=Current CAL count for authenticated users is the current count of licenses used simultaneously by the Web service for authenticated connections.

W3_MAX_CAL_AUTH_COUNTER_009_NAME=Maximum CAL count for authenticated users
W3_MAX_CAL_AUTH_COUNTER_009_HELP=Maximum CAL count for authenticated users is the maximum count of licenses used simultaneously by the Web service for authenticated connections.

W3_TOTAL_FAILED_CAL_AUTH_COUNTER_009_NAME=Total count of failed CAL requests for authenticated users
W3_TOTAL_FAILED_CAL_AUTH_COUNTER_009_HELP=Total count of failed CAL request for authenticated users is the number of HTTP requests that failed due to a license being unavailable for an authenticated user. The count is the total since service startup.

W3_CURRENT_CAL_SSL_COUNTER_009_NAME=Current CAL count for SSL connections
W3_CURRENT_CAL_SSL_COUNTER_009_HELP=Current CAL count for SSL connections is the current count of licenses used simultaneously by the Web service for SSL connections.

W3_MAX_CAL_SSL_COUNTER_009_NAME=Maximum CAL count for SSL connections
W3_MAX_CAL_SSL_COUNTER_009_HELP=Maximum CAL count for SSL connections is the maximum count of licenses used simultaneously by the Web service for SSL connections.

W3_TOTAL_FAILED_CAL_SSL_COUNTER_009_NAME=Total count of failed CAL requests for SSL connections
W3_TOTAL_FAILED_CAL_SSL_COUNTER_009_HELP=Total count of failed CAL requests for SSL connections is the total count of HTTP requests that failed due to a license being unavailable for SSL connections.

W3_ALLOWED_REQUESTS_COUNTER_009_NAME=Total Allowed Async I/O Requests
W3_ALLOWED_REQUESTS_COUNTER_009_HELP=Total requests allowed by bandwidth throttling settings (counted since service startup).

W3_BLOCKED_REQUESTS_COUNTER_009_NAME=Total Blocked Async I/O Requests
W3_BLOCKED_REQUESTS_COUNTER_009_HELP=Total requests temporarily blocked due to bandwidth throttling settings (counted since service startup).

W3_REJECTED_REQUESTS_COUNTER_009_NAME=Total Rejected Async I/O Requests
W3_REJECTED_REQUESTS_COUNTER_009_HELP=Total requests rejected due to bandwidth throttling settings (counted since service startup).

W3_CURRENT_BLOCKED_REQUESTS_COUNTER_009_NAME=Current Blocked Async I/O Requests
W3_CURRENT_BLOCKED_REQUESTS_COUNTER_009_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

W3_MEASURED_BANDWIDTH_COUNTER_009_NAME=Measured Async I/O Bandwidth Usage
W3_MEASURED_BANDWIDTH_COUNTER_009_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_NAME=Total blocked bandwidth bytes.
W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_HELP=Total blocked bandwidth bytes.

W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_NAME=Current blocked bandwidth bytes.
W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_HELP=Current blocked bandwidth bytes.

W3_SERVICE_UPTIME_COUNTER_009_NAME=Service Uptime
W3_SERVICE_UPTIME_COUNTER_009_HELP=Uptime for W3SVC Service or W3 sites.

W3_COUNTER_OBJECT_000_NAME=Web Service
W3_COUNTER_OBJECT_000_HELP=The Web Service object includes counters specific to the World Wide Web Publishing Service.

W3_BYTES_SENT_COUNTER_000_NAME=Total Bytes Sent
W3_BYTES_SENT_COUNTER_000_HELP=Total Bytes Sent is the number of data bytes that have been sent by the Web service.

W3_BYTES_SENT_PER_SEC_000_NAME=Bytes Sent/sec
W3_BYTES_SENT_PER_SEC_000_HELP=Bytes Sent/sec is the rate that data bytes are sent by the Web service.

W3_BYTES_RECEIVED_COUNTER_000_NAME=Total Bytes Received
W3_BYTES_RECEIVED_COUNTER_000_HELP=Total Bytes Received is the number of data bytes that have been received by the Web service.

W3_BYTES_RECEIVED_PER_SEC_000_NAME=Bytes Received/sec
W3_BYTES_RECEIVED_PER_SEC_000_HELP=Bytes Received/sec is the rate that data bytes are received by the Web service.

W3_BYTES_TOTAL_COUNTER_000_NAME=Total Bytes Transfered
W3_BYTES_TOTAL_COUNTER_000_HELP=Total bytes either received or sent by the Web service.

W3_BYTES_TOTAL_PER_SEC_000_NAME=Bytes Total/sec
W3_BYTES_TOTAL_PER_SEC_000_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the Web service.

W3_FILES_SENT_COUNTER_000_NAME=Total Files Sent
W3_FILES_SENT_COUNTER_000_HELP=Total Files Sent is the total number of files sent by the Web service (counted since service startup).

W3_FILES_SENT_SEC_000_NAME=Files Sent/sec
W3_FILES_SENT_SEC_000_HELP=The rate files are sent by the Web service.

W3_FILES_RECEIVED_COUNTER_000_NAME=Total Files Received
W3_FILES_RECEIVED_COUNTER_000_HELP=Total Files Received is the total number of files received by the Web service (counted since service startup).

W3_FILES_RECEIVED_SEC_000_NAME=Files Received/sec
W3_FILES_RECEIVED_SEC_000_HELP=The rate files are received by the Web service.

W3_FILES_TOTAL_COUNTER_000_NAME=Total Files Transferred
W3_FILES_TOTAL_COUNTER_000_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the Web service (counted since service startup).

W3_FILES_SEC_000_NAME=Files/sec
W3_FILES_SEC_000_HELP=The rate files are transferred, that is, sent and received by the Web service.

W3_CURRENT_ANONYMOUS_COUNTER_000_NAME=Current Anonymous Users
W3_CURRENT_ANONYMOUS_COUNTER_000_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the Web service.

W3_CURRENT_NONANONYMOUS_COUNTER_000_NAME=Current NonAnonymous Users
W3_CURRENT_NONANONYMOUS_COUNTER_000_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the Web service.

W3_TOTAL_ANONYMOUS_COUNTER_000_NAME=Total Anonymous Users
W3_TOTAL_ANONYMOUS_COUNTER_000_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the Web service (counted since service startup).

W3_ANONYMOUS_USERS_SEC_000_NAME=Anonymous Users/sec
W3_ANONYMOUS_USERS_SEC_000_HELP=The rate users are making anonymous connections using the Web service.

W3_TOTAL_NONANONYMOUS_COUNTER_000_NAME=Total NonAnonymous Users
W3_TOTAL_NONANONYMOUS_COUNTER_000_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the Web service (counted since service startup).

W3_NON_ANONYMOUS_USERS_SEC_000_NAME=NonAnonymous Users/sec
W3_NON_ANONYMOUS_USERS_SEC_000_HELP=The rate users are making non-anonymous connections using the Web service.

W3_MAX_ANONYMOUS_COUNTER_000_NAME=Maximum Anonymous Users
W3_MAX_ANONYMOUS_COUNTER_000_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the Web service (counted since service startup).

W3_MAX_NONANONYMOUS_COUNTER_000_NAME=Maximum NonAnonymous Users
W3_MAX_NONANONYMOUS_COUNTER_000_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the Web service (counted since service startup).

W3_CURRENT_CONNECTIONS_COUNTER_000_NAME=Current Connections
W3_CURRENT_CONNECTIONS_COUNTER_000_HELP=Current Connections is the current number of connections established with the Web service.

W3_MAX_CONNECTIONS_COUNTER_000_NAME=Maximum Connections
W3_MAX_CONNECTIONS_COUNTER_000_HELP=Maximum Connections is the maximum number of simultaneous connections established with the Web service.

W3_CONNECTION_ATTEMPTS_COUNTER_000_NAME=Total Connection Attempts
W3_CONNECTION_ATTEMPTS_COUNTER_000_HELP=Total Connection Attempts is the number of connections that have been attempted using the Web service (counted since service startup).

W3_CONNECTION_ATTEMPTS_SEC_000_NAME=Connection Attempts/sec
W3_CONNECTION_ATTEMPTS_SEC_000_HELP=The rate that connections using the Web service are being attempted.

W3_LOGON_ATTEMPTS_COUNTER_000_NAME=Total Logon Attempts
W3_LOGON_ATTEMPTS_COUNTER_000_HELP=Total Logon Attempts is the number of logons that have been attempted using the Web service (counted since service startup).

W3_LOGON_ATTEMPTS_SEC_000_NAME=Logon Attempts/sec
W3_LOGON_ATTEMPTS_SEC_000_HELP=The rate that logons using the Web service are being attempted.

W3_TOTAL_OPTIONS_COUNTER_000_NAME=Total Options Requests
W3_TOTAL_OPTIONS_COUNTER_000_HELP=Total Options Requests is the number of HTTP requests using the OPTIONS method (counted since service startup).

W3_TOTAL_OPTIONS_SEC_000_NAME=Options Requests/sec
W3_TOTAL_OPTIONS_SEC_000_HELP=The rate HTTP requests using the OPTIONS method are made.

W3_TOTAL_GETS_COUNTER_000_NAME=Total Get Requests
W3_TOTAL_GETS_COUNTER_000_HELP=Total Get Requests is the number of HTTP requests using the GET method (counted since service startup).  Get requests are generally used for basic file retrievals or image maps, though they can be used with forms.

W3_TOTAL_GETS_SEC_000_NAME=Get Requests/sec
W3_TOTAL_GETS_SEC_000_HELP=The rate HTTP requests using the GET method are made.  Get requests are generally used for basic file retrievals or image maps, though they can be used with forms.

W3_TOTAL_POSTS_COUNTER_000_NAME=Total Post Requests
W3_TOTAL_POSTS_COUNTER_000_HELP=Total Post Requests is the number of HTTP requests using the POST method (counted since service startup).  Post requests are generally used for forms or gateway requests.

W3_TOTAL_POSTS_SEC_000_NAME=Post Requests/sec
W3_TOTAL_POSTS_SEC_000_HELP=The rate HTTP requests using the POST method are made.  Post requests are generally used for forms or gateway requests.

W3_TOTAL_HEADS_COUNTER_000_NAME=Total Head Requests
W3_TOTAL_HEADS_COUNTER_000_HELP=Total Head Requests is the number of HTTP requests using the HEAD method (counted since service startup).  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_HEADS_SEC_000_NAME=Head Requests/sec
W3_TOTAL_HEADS_SEC_000_HELP=The rate HTTP requests using the HEAD method are made.  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_PUTS_COUNTER_000_NAME=Total Put Requests
W3_TOTAL_PUTS_COUNTER_000_HELP=Total Put Requests is the number of HTTP requests using the PUT method (counted since service startup).

W3_TOTAL_PUTS_SEC_000_NAME=Put Requests/sec
W3_TOTAL_PUTS_SEC_000_HELP=The rate HTTP requests using the PUT method are made.

W3_TOTAL_DELETES_COUNTER_000_NAME=Total Delete Requests
W3_TOTAL_DELETES_COUNTER_000_HELP=Total Delete Requests is the number of HTTP requests using the DELETE method (counted since service startup).  Delete requests are generally used for file removals.

W3_TOTAL_DELETES_SEC_000_NAME=Delete Requests/sec
W3_TOTAL_DELETES_SEC_000_HELP=The rate HTTP requests using the DELETE method are made.  Delete requests are generally used for file removals.

W3_TOTAL_TRACES_COUNTER_000_NAME=Total Trace Requests
W3_TOTAL_TRACES_COUNTER_000_HELP=Total Trace Requests is the number of HTTP requests using the TRACE method (counted since service startup).  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_TRACES_SEC_000_NAME=Trace Requests/sec
W3_TOTAL_TRACES_SEC_000_HELP=The rate HTTP requests using the TRACE method are made.  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_MOVE_COUNTER_000_NAME=Total Move Requests
W3_TOTAL_MOVE_COUNTER_000_HELP=Total Move Requests is the number of HTTP requests using the MOVE method (counted since service startup).  Move requests are used for moving files and directories.

W3_TOTAL_MOVE_SEC_000_NAME=Move Requests/sec
W3_TOTAL_MOVE_SEC_000_HELP=The rate HTTP requests using the MOVE method are made.  Move requests are used for moving files and directories.

W3_TOTAL_COPY_COUNTER_000_NAME=Total Copy Requests
W3_TOTAL_COPY_COUNTER_000_HELP=Total Copy Requests is the number of HTTP requests using the COPY method (counted since service startup).  Copy requests are used for copying files and directories.

W3_TOTAL_COPY_SEC_000_NAME=Copy Requests/sec
W3_TOTAL_COPY_SEC_000_HELP=The rate HTTP requests using the COPY method are made.  Copy requests are used for copying files and directories.

W3_TOTAL_MKCOL_COUNTER_000_NAME=Total Mkcol Requests
W3_TOTAL_MKCOL_COUNTER_000_HELP=Total Mkcol Requests is the number of HTTP requests using the MKCOL method (counted since service startup).  Mkcol requests are used to create directories on the server.

W3_TOTAL_MKCOL_SEC_000_NAME=Mkcol Requests/sec
W3_TOTAL_MKCOL_SEC_000_HELP=The rate HTTP requests using the MKCOL method are made.  Mkcol requests are used to create directories on the server.

W3_TOTAL_PROPFIND_COUNTER_000_NAME=Total Propfind Requests
W3_TOTAL_PROPFIND_COUNTER_000_HELP=Total Propfind Requests is the number of HTTP requests using the PROPFIND method (counted since service startup).  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPFIND_SEC_000_NAME=Propfind Requests/sec
W3_TOTAL_PROPFIND_SEC_000_HELP=The rate HTTP requests using the PROPFIND method are made.  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPPATCH_COUNTER_000_NAME=Total Proppatch Requests
W3_TOTAL_PROPPATCH_COUNTER_000_HELP=Total Proppatch Requests is the number of HTTP requests using the PROPPATCH method (counted since service startup).  Proppatch requests set property values on files and directories.

W3_TOTAL_PROPPATCH_SEC_000_NAME=Proppatch Requests/sec
W3_TOTAL_PROPPATCH_SEC_000_HELP=The rate HTTP requests using the PROPPATCH method are made.  Proppatch requests set property values on files and directories.

W3_TOTAL_SEARCH_COUNTER_000_NAME=Total Search Requests
W3_TOTAL_SEARCH_COUNTER_000_HELP=Total Search Requests is the number of HTTP requests using the MS-SEARCH method (counted since service startup).  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_SEARCH_SEC_000_NAME=Search Requests/sec
W3_TOTAL_SEARCH_SEC_000_HELP=The rate HTTP requests using the MS-SEARCH method are made.  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_LOCK_COUNTER_000_NAME=Total Lock Requests
W3_TOTAL_LOCK_COUNTER_000_HELP=Total Lock Requests is the number of HTTP requests using the LOCK method (counted since service startup).  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_LOCK_SEC_000_NAME=Lock Requests/sec
W3_TOTAL_LOCK_SEC_000_HELP=The rate HTTP requests using the LOCK method are made.  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_UNLOCK_COUNTER_000_NAME=Total Unlock Requests
W3_TOTAL_UNLOCK_COUNTER_000_HELP=Total Unlock Requests is the number of HTTP requests using the UNLOCK method (counted since service startup).  Unlock requests are used to remove locks from files.

W3_TOTAL_UNLOCK_SEC_000_NAME=Unlock Requests/sec
W3_TOTAL_UNLOCK_SEC_000_HELP=The rate HTTP requests using the UNLOCK method are made.  Unlock requests are used to remove locks from files.

W3_TOTAL_OTHERS_COUNTER_000_NAME=Total Other Request Methods
W3_TOTAL_OTHERS_COUNTER_000_HELP=Total Other Request Methods is the number of HTTP requests that are not OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, MS-SEARCH, LOCK or UNLOCK methods (counted since service startup).  These may include LINK or other methods supported by gateway applications.

W3_TOTAL_OTHERS_SEC_000_NAME=Other Request Methods/sec
W3_TOTAL_OTHERS_SEC_000_HELP=The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, MS-SEARCH, LOCK or UNLOCK methods.  These may include LINK or other methods supported by gateway applications.

W3_TOTAL_REQUESTS_COUNTER_000_NAME=Total Method Requests
W3_TOTAL_REQUESTS_COUNTER_000_HELP=Total Method Requests is the number of all HTTP requests (counted since service startup).

W3_TOTAL_REQUESTS_SEC_000_NAME=Total Method Requests/sec
W3_TOTAL_REQUESTS_SEC_000_HELP=The rate all HTTP requests are made.

W3_TOTAL_CGI_REQUESTS_COUNTER_000_NAME=Total CGI Requests
W3_TOTAL_CGI_REQUESTS_COUNTER_000_HELP=Total Common Gateway Interface (CGI) requests are custom gateway executables (.exe) the administrator can install to add forms processing or other dynamic data sources.  CGI requests spawn a process on the server which can be a large drain on server resources.  The count is the total since service startup.

W3_CGI_REQUESTS_SEC_000_NAME=CGI Requests/sec
W3_CGI_REQUESTS_SEC_000_HELP=The rate of CGI requests that are simultaneously being processed by the Web service.

W3_TOTAL_BGI_REQUESTS_COUNTER_000_NAME=Total ISAPI Extension Requests
W3_TOTAL_BGI_REQUESTS_COUNTER_000_HELP=Total ISAPI Extension Requests are custom gateway Dynamic Link Libraries (.dll) the administrator can install to add forms processing or other dynamic data sources.  Unlike CGI requests, ISAPI requests are simple calls to a DLL library routine, thus they are better suited to high performance gateway applications.  The count is the total since service startup.

W3_BGI_REQUESTS_SEC_000_NAME=ISAPI Extension Requests/sec
W3_BGI_REQUESTS_SEC_000_HELP=The rate of ISAPI Extension requests that are simultaneously being processed by the Web service.

W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_000_NAME=Total Not Found Errors
W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_000_HELP=Total Not Found Errors is the number of requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.  The count is the total since service startup.

W3_TOTAL_NOT_FOUND_ERRORS_SEC_000_NAME=Not Found Errors/sec
W3_TOTAL_NOT_FOUND_ERRORS_SEC_000_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_LOCKED_ERRORS_COUNTER_000_NAME=Total Locked Errors
W3_TOTAL_LOCKED_ERRORS_COUNTER_000_HELP=Total Locked Errors is the number of requests that couldn't be satisfied by the server because the requested was locked.  These are generally reported as an HTTP 423 error code to the client.  The count is the total since service startup.

W3_TOTAL_LOCKED_ERRORS_SEC_000_NAME=Locked Errors/sec
W3_TOTAL_LOCKED_ERRORS_SEC_000_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document was locked.  These are generally reported as an HTTP 423 error code to the client.

W3_CURRENT_CGI_COUNTER_000_NAME=Current CGI Requests
W3_CURRENT_CGI_COUNTER_000_HELP=Current CGI Requests is the current number of CGI requests that are simultaneously being processed by the Web service.

W3_CURRENT_BGI_COUNTER_000_NAME=Current ISAPI Extension Requests
W3_CURRENT_BGI_COUNTER_000_HELP=Current ISAPI Extension Requests is the current number of Extension requests that are simultaneously being processed by the Web service.

W3_MAX_CGI_COUNTER_000_NAME=Maximum CGI Requests
W3_MAX_CGI_COUNTER_000_HELP=Maximum CGI Requests is the maximum number of CGI requests simultaneously processed by the Web service.

W3_MAX_BGI_COUNTER_000_NAME=Maximum ISAPI Extension Requests
W3_MAX_BGI_COUNTER_000_HELP=Maximum ISAPI Extension Requests is the maximum number of Extension requests simultaneously processed by the Web service.

W3_CURRENT_CAL_AUTH_COUNTER_000_NAME=Current CAL count for authenticated users
W3_CURRENT_CAL_AUTH_COUNTER_000_HELP=Current CAL count for authenticated users is the current count of licenses used simultaneously by the Web service for authenticated connections.

W3_MAX_CAL_AUTH_COUNTER_000_NAME=Maximum CAL count for authenticated users
W3_MAX_CAL_AUTH_COUNTER_000_HELP=Maximum CAL count for authenticated users is the maximum count of licenses used simultaneously by the Web service for authenticated connections.

W3_TOTAL_FAILED_CAL_AUTH_COUNTER_000_NAME=Total count of failed CAL requests for authenticated users
W3_TOTAL_FAILED_CAL_AUTH_COUNTER_000_HELP=Total count of failed CAL request for authenticated users is the number of HTTP requests that failed due to a license being unavailable for an authenticated user. The count is the total since service startup.

W3_CURRENT_CAL_SSL_COUNTER_000_NAME=Current CAL count for SSL connections
W3_CURRENT_CAL_SSL_COUNTER_000_HELP=Current CAL count for SSL connections is the current count of licenses used simultaneously by the Web service for SSL connections.

W3_MAX_CAL_SSL_COUNTER_000_NAME=Maximum CAL count for SSL connections
W3_MAX_CAL_SSL_COUNTER_000_HELP=Maximum CAL count for SSL connections is the maximum count of licenses used simultaneously by the Web service for SSL connections.

W3_TOTAL_FAILED_CAL_SSL_COUNTER_000_NAME=Total count of failed CAL requests for SSL connections
W3_TOTAL_FAILED_CAL_SSL_COUNTER_000_HELP=Total count of failed CAL requests for SSL connections is the total count of HTTP requests that failed due to a license being unavailable for SSL connections.

W3_ALLOWED_REQUESTS_COUNTER_000_NAME=Total Allowed Async I/O Requests
W3_ALLOWED_REQUESTS_COUNTER_000_HELP=Total requests allowed by bandwidth throttling settings (counted since service startup).

W3_BLOCKED_REQUESTS_COUNTER_000_NAME=Total Blocked Async I/O Requests
W3_BLOCKED_REQUESTS_COUNTER_000_HELP=Total requests temporarily blocked due to bandwidth throttling settings (counted since service startup).

W3_REJECTED_REQUESTS_COUNTER_000_NAME=Total Rejected Async I/O Requests
W3_REJECTED_REQUESTS_COUNTER_000_HELP=Total requests rejected due to bandwidth throttling settings (counted since service startup).

W3_CURRENT_BLOCKED_REQUESTS_COUNTER_000_NAME=Current Blocked Async I/O Requests
W3_CURRENT_BLOCKED_REQUESTS_COUNTER_000_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

W3_MEASURED_BANDWIDTH_COUNTER_000_NAME=Measured Async I/O Bandwidth Usage
W3_MEASURED_BANDWIDTH_COUNTER_000_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_NAME=Total blocked bandwidth bytes.
W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_HELP=Total blocked bandwidth bytes.

W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_NAME=Current blocked bandwidth bytes.
W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_HELP=Current blocked bandwidth bytes.

W3_SERVICE_UPTIME_COUNTER_000_NAME=Service Uptime
W3_SERVICE_UPTIME_COUNTER_000_HELP=Uptime for W3SVC Service or W3 sites.

W3_GLOBAL_COUNTER_OBJECT_009_NAME=Web Service Cache
W3_GLOBAL_COUNTER_OBJECT_009_HELP=The Web Service Cache Counters object includes cache counters specific to the World Wide Web Publishing Service.

W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_009_NAME=Current Files Cached
W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_009_HELP=Current number of files whose content is in the cache for WWW service.

W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_009_NAME=Total Files Cached
W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_009_HELP=Total number of files whose content was ever added to the cache for WWW service.

W3_GLOBAL_FILE_CACHE_HITS_COUNTER_009_NAME=File Cache Hits
W3_GLOBAL_FILE_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the file cache.

W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_009_NAME=File Cache Misses
W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the file cache.

W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_009_NAME=File Cache Hits %
W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of File Cache Hits to total cache requests.

W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_009_NAME=File Cache Flushes
W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_009_HELP=File Cache Flushes since server startup.

W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_009_NAME=Current File Cache Memory Usage
W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_009_HELP=Current number of bytes used for file cache.

W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_009_NAME=Maximum File Cache Memory Usage
W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_009_HELP=Maximum number of bytes used for file cache.

W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_009_NAME=Active Flushed Entries
W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_009_HELP=Active Flushed Entries are cached file handles that will be closed when all current transfers complete.

W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_009_NAME=Total Flushed Files
W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_009_HELP=Total Flushed Files is the number of file handles that have been removed from the cache since service start up.

W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_009_NAME=Current URIs Cached
W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_009_HELP=URI information blocks currently in the cache for WWW service.

W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_009_NAME=Total URIs Cached
W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_009_HELP=Total number of URI information blocks ever added to the cache for WWW service.

W3_GLOBAL_URI_CACHE_HITS_COUNTER_009_NAME=URI Cache Hits
W3_GLOBAL_URI_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the URI cache.

W3_GLOBAL_URI_CACHE_MISSES_COUNTER_009_NAME=URI Cache Misses
W3_GLOBAL_URI_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the URI cache.

W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_009_NAME=URI Cache Hits %
W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of URI Cache Hits to total cache requests.

W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_009_NAME=URI Cache Flushes
W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_009_HELP=URI Cache Flushes since server startup.

W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_009_NAME=Total Flushed URIs
W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_009_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the cache since service start up.

W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_009_NAME=Current Metadata Cached
W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_009_HELP=Metadata information blocks currently in the cache for WWW service.

W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_009_NAME=Total Metadata Cached
W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_009_HELP=Total number of metadata information blocks ever added to the cache for WWW service

W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_009_NAME=Metadata Cache Hits
W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the Metadata cache.

W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_009_NAME=Metadata Cache Misses
W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the Metadata cache.

W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_009_NAME=Metadata Cache Hits %
W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of Metadata Cache Hits to total cache requests.

W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_009_NAME=Metadata Cache Flushes
W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_009_HELP=Metadata Cache Flushes since server startup.

W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_009_NAME=Total Flushed Metadata
W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_009_HELP=Total Flushed Metadata is the number of Metadata information blocks that have been removed from the cache since service start up.

W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_009_NAME=Kernel: Current URIs Cached
W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_009_HELP=URI information blocks currently in the cache by the http.sys kernel driver.

W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_009_NAME=Kernel: Total URIs Cached
W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_009_HELP=Total number of URI information blocks ever added to the cache by the http.sys kernel driver.

W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_009_NAME=Kernel: URI Cache Hits
W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the HTTP.SYS URI cache.

W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_009_NAME=Kernel: Uri Cache Hits/sec
W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_009_HELP=The rate of HTTP.SYS URI Cache hits per second.

W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_009_NAME=Kernel: URI Cache Misses
W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the HTTP.SYS URI cache.

W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_009_NAME=Kernel: URI Cache Hits %
W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of HTTP.SYS URI Cache Hits to total cache requests.

W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_009_NAME=Kernel: URI Cache Flushes
W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_009_HELP=HTTP.SYS URI Cache Flushes since server startup.

W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_009_NAME=Kernel: Total Flushed URIs
W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_009_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the HTTP.SYS cache since service start up.

W3_GLOBAL_COUNTER_OBJECT_000_NAME=Web Service Cache
W3_GLOBAL_COUNTER_OBJECT_000_HELP=The Web Service Cache Counters object includes cache counters specific to the World Wide Web Publishing Service.

W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_000_NAME=Current Files Cached
W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_000_HELP=Current number of files whose content is in the cache for WWW service.

W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_000_NAME=Total Files Cached
W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_000_HELP=Total number of files whose content was ever added to the cache for WWW service.

W3_GLOBAL_FILE_CACHE_HITS_COUNTER_000_NAME=File Cache Hits
W3_GLOBAL_FILE_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the file cache.

W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_000_NAME=File Cache Misses
W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the file cache.

W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_000_NAME=File Cache Hits %
W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of File Cache Hits to total cache requests.

W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_000_NAME=File Cache Flushes
W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_000_HELP=File Cache Flushes since server startup.

W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_000_NAME=Current File Cache Memory Usage
W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_000_HELP=Current number of bytes used for file cache.

W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_000_NAME=Maximum File Cache Memory Usage
W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_000_HELP=Maximum number of bytes used for file cache.

W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_000_NAME=Active Flushed Entries
W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_000_HELP=Active Flushed Entries are cached file handles that will be closed when all current transfers complete.

W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_000_NAME=Total Flushed Files
W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_000_HELP=Total Flushed Files is the number of file handles that have been removed from the cache since service start up.

W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_000_NAME=Current URIs Cached
W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_000_HELP=URI information blocks currently in the cache for WWW service.

W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_000_NAME=Total URIs Cached
W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_000_HELP=Total number of URI information blocks ever added to the cache for WWW service.

W3_GLOBAL_URI_CACHE_HITS_COUNTER_000_NAME=URI Cache Hits
W3_GLOBAL_URI_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the URI cache.

W3_GLOBAL_URI_CACHE_MISSES_COUNTER_000_NAME=URI Cache Misses
W3_GLOBAL_URI_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the URI cache.

W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_000_NAME=URI Cache Hits %
W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of URI Cache Hits to total cache requests.

W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_000_NAME=URI Cache Flushes
W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_000_HELP=URI Cache Flushes since server startup.

W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_000_NAME=Total Flushed URIs
W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_000_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the cache since service start up.

W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_000_NAME=Current Metadata Cached
W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_000_HELP=Metadata information blocks currently in the cache for WWW service.

W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_000_NAME=Total Metadata Cached
W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_000_HELP=Total number of Metadata information blocks ever added to the cache for WWW service

W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_000_NAME=Metadata Cache Hits
W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the Metadata cache.

W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_000_NAME=Metadata Cache Misses
W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the Metadata cache.

W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_000_NAME=Metadata Cache Hits %
W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of Metadata Cache Hits to total cache requests.

W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_000_NAME=Metadata Cache Flushes
W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_000_HELP=Metadata Cache Flushes since server startup.

W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_000_NAME=Total Flushed Metadata
W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_000_HELP=Total Flushed Metadata is the number of Metadata information blocks that have been removed from the cache since service start up.

W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_000_NAME=Kernel: Current URIs Cached
W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_000_HELP=URI information blocks currently in the cache by the http.sys kernel driver.

W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_000_NAME=Kernel: Total URIs Cached
W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_000_HELP=Total number of URI information blocks ever added to the cache by the http.sys kernel driver.

W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_000_NAME=Kernel: URI Cache Hits
W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the HTTP.SYS URI cache.

W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_000_NAME=Kernel: Uri Cache Hits/sec
W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_000_HELP=The rate of HTTP.SYS URI Cache hits per second.

W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_000_NAME=Kernel: URI Cache Misses
W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the HTTP.SYS URI cache.

W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_000_NAME=Kernel: URI Cache Hits %
W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of HTTP.SYS URI Cache Hits to total cache requests.

W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_000_NAME=Kernel: URI Cache Flushes
W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_000_HELP=HTTP.SYS URI Cache Flushes since server startup.

W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_000_NAME=Kernel: Total Flushed URIs
W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_000_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the HTTP.SYS cache since service start up.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\wp\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 9, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core\wp\
     and details related to IIS Worker Process.


File            Description

README.txt      This file.

inc\            Common include files within the Worker Process
util\           Utilities for IIS User-mode
proto\          Protocol Handling and UL interfaces
ulsim\          UL Simulator - a simple version
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\wp\modules\application\readme.txt ===
TTTThis is a readme.txt.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\wp\proto\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 30, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory wp\proto
     and details related to "Duct-Tape Worker Process"

File            Description

README.txt      This file.



Implementation Details

Contents:


Core Data Structures 
---------------------

UL_CONTROL_CHANNEL - Encapsulates UL Control Channel Functionality
ControlChannel.*

UL_APP_POOL - encapsulates the UL data channel. The default mode is ASYNC.
DataChannel.*

COMPLETION_PORT    - Encapsulate I/O Completion Port. May be replaced by RTL Thread Pool
cport.*

CP_CONTEXT         - Context Used by COMPLETION_PORT to make callbacks.
cport.*

WP_CONTEXT - context for the entire worker process. Is the main structure inside the worker 
             process. Inherits from CP_CONTEXT. Is a vertical container for all data 
             structures related to an App Pool - Completion Port, WP pool, Data Channel etc.
wptypes.hxx wpcontext.cxx

WP_CONFIG - Worker Process configuration - includes the commandline configuration
	and that supplied from the Admin Process
wptypes.hxx wpconfig.cxx


Data structures for Protocol Handling 
--------------------------------------
WORKER_REQUEST - maintains the data related to a single request being processed.
	1:1 correspondence with UL_HTTP_REQUEST
WORKER_CONNECTION - data related to the connection associated with a request.
	1:1 correspondence with UL_CONNECTION_ID
WORKER_REQUEST_POOL - maintains the pool of active WORKER_REQUESTS. It is mainly
	used for inspecting the state of objects, iterating through them and control
	at the shutdown time.
	
URI_DATA - all the metadata and lookup data related to a particular URI
URI_DATA_CACHE - transparent cache of all URI_DATA items. The cache will be 
	implemented using LKRHash and will be transparently populated and unloaded 
	without the users of URI_DATA knowing about the same.

Metadata/Configuration data structures
--------------------------------------
WEB_SERVICE_INSTANCE or WEB_SITE - maintains site related data within a worker
		process. If a site distributed across multiple processes, then there 
		will be multiple instances of the data structure one per referencing 
		process.
WEB_SITES_TABLE - table consisting of all loaded WEB_SITEs in this process.
	The sites table is concerned with site specific metadata.

WEB_SERVICE_STATISTICS - collection of performance counters and statistics data
	associated with a given control point (Sites or application).


Application related structures
-------------------------------
WEB_APPLICATION - data related the application within a given process.

WEB_APPLICATION_TABLE - table consisting of all loaded WEB_APPLICATIONS.
	The application table is interesting only from the point that we can store
	application related metadata inside this table. Plus ASP application 
	intrinsic will depend on this object for request processing.



	
I. Request processing scenarios and how:
-------------------------------------------

a) Simple HTTP/0.9 request.
 
Request
>>-------------
GET [uri]
>>------------
 
A new connection is established, request sent. UL will complete IO
for this item filling in a UL_HTTP_REQUEST. The steps are:
WORKER_REQUEST::ProcessRequest()
{
   Associate connID to a connection;
   Associate URI to URI_ITEM_DATA
   Forward request to the handler (if none, to default handler)
      Default Handler:
        Format SendResponse with associated file-item or error
        UlSendHttpResposne()
        Wait for Completion
}
On completion of request, the request object is recycled and connection
object is recycled if ref-count hits zero (which it will).


b) HTTP 1.0 & 1.1 request without Connection:Keep-Alive

These requests are handled identical to the HTTP/0.9 requests

c) HTTP 1.1 request with keep-alive

Request processing is identical to that for Simple case in (a).
However, we need to increment the ref-count on connection object and keep it 
alive till
 i) connection close is indicated by UL
 ii) a worker process level timeout forces a close operation.
 Of these we expect UL to do (i) which will force cleanup
    of connection objects.

d) HTTP/1.1 with pipelined requests
 Pipelining can result in multiple request objects created. Each request
object will associate itself with the connection object. We cannot handle
this case similar to what we did in 5.0. In IIS 5.0 we did not have and 
outstanding receive on the same connection till the request is processed
 => implicit serialization. However we will be notified of all these requests
one after another by multiple IO threads. 

We have two options to handle request processing here.
 i) Handle requests individually. We will need  have synchronization primitive
per client connection object. We can demand allocate and free synchronization
objects. However this can get really costly in terms of # sync objects.
 ii) Queue up requests per connection and handle the requests serially for
each connection. So when the previous request is completed, the processing
code will check to see if there are any pending requests for the
connection. If there are then these requests will be processed.

 Question: How does this synchronize with serialization at the session level?



II. Headers/Body in the chunks
------------------------------
UL permits us to specify data and header chunks separately in the
SendResponse. We also indicate the # header chunks and # data chunks. 

Qn: Does the usual \r\n\r\n sequence belong in last header chunk. And should
the user-mode stuff this in before calling UL?

Qn: What happens to auto-generated headers like: DATE, Expiry time etc.
Would UL decode the last header, walk back the \r\n\r\n combination and send 
out the appropriate header chunks?


III. Processing TRACE request
-----------------------------
Take the headers sent to us from UL and format it for send back appropriately.

Potentially UL would implement TRACE by itself. Mostly it should except in the case
where read-raw filters are installed. However it is best to leave this code in 
user-mode, to avoid UL code bloat.

Qn: UL_HTTP_REQUEST is missing the protocol version information. This is
required for TRACE and several other request processing engines (eg: ISAPI
DLLs).


IV. Synchronous IO operations
------------------------------
For synchronous IO operations if required from user-mode (Eg: ISAPI sync
write, sync read), we will submit IO operation without overlapped structure =>
API completes without overlapped completion. 


		

V. URI_DATA
------------
In the current IIS implementation we have three pieces of information that
interoperate to produce the output.
 a) URI - is the key 
 b) metadata associated with the URI for the request.
 b) Lookup results using the current request data & metadata.

URI_DATA will be the data strucutrue that will encompass all the metadata and
the lookup results for the currently requested URI item. The key will be URI
primarily. The request processor will consult this data structure to make
control decisions while processing the request. URI_DATA will cache all the
frequently used lookup results and canonicalization values, so that we get
maximal reuse of data across multiple requests.

URI_DATA will be transparently cached. The details of caching will be hidden
from the request processor.


Metabase and Storage+
---------------------

Storage+ will be built on MS Data Engine with an OLEDB front-end interface.
They will use OLEDB 2.5 extensions for communicating with Storage+

What does OLEDB2.5 offer for metabase?
1) Hierarchical way of looking at the data.
	Use IRow, IScopedOperations, and IDBCreateCommand
	
2) Row objects names are URLs
3) Direct-binding of OLEDB objects
4)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\core\wp\ulsim\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 25, 1998

Summary :
 This file describes the files in the directory wp\ulsim
     and details related to UL Simulator.


File            Description

README.txt      This file.



Contents:

        Purpose
        Build & Setup
        Implementation

Purpose:
--------
UL - Universal Listener is the kernel-mode HTTP engine that will power
next generation of IIS. Being kernel-mode means UL can easily crash machine
(blue screens) and hence is very damaging + slows down development.
ULSIM is a very simple minded simulator used for mapping UL APIs and 
providing almost identical user-mode interface for worker process.


Build & Setup:
--------------
Use wp\inc\ulsimapi.h instead of IIS\inc\ulapi.h -> to enable ULSIM stuff

set BUILD_FOR_ULSIM=1
 to build binaries using ULSIM

ULSIM.dll is the core DLL implementing the simulator functionality. 
Copy ULSIM.dll to the working directory of iiswp.exe

HKLM\System\CurrentControlSet\Services\IISWP\Parameters\UlSim 
        contains Ulsim configuration parameters

Implementation:
----------------
See ulsimapi.cxx for details
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\import\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

inc	        ... shared include files snapshoted from other teams
lib	        ... shared lib files snapshoted from other teams



Specific contents:

For the COM Catalog Config Store:
    lib\
        i386\
            Cat.lib   (Build 1928)
	    cat.pdb
        ia64\
	    cat.lib   (needs updating to 1928)
            cat.pdb

    inc\
        catalog.h     (Build 1928)
        catmeta.h
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\inc\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

inc -- shared include files directory
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\ipc.txt ===
Stateless URI-named IPC mechanism


HANDLE
IpcRegister(
    IN HANDLE Parent OPTIONAL,
    IN PWSTR pUrl,
    IN ULONG Flags
    );

typedef struct _IPC_MESSAGE
{
    ULONG UriLength;
    ULONG BufferLength;
    // WCHAR Uri[UriLength];
    // UCHAR Alignment[Varies];
    // UCHAR Buffer[BufferLength];

} IPC_MESSAGE, *PIPC_MESSAGE;

#define IPC_MESSAGE_TO_URI(pMessage)                                    \
    (PWCHAR)((pMessage) + 1)
    
#define IPC_MESSAGE_TO_BUFFER(pMessage)                                 \
    ALIGN_UP_POINTER((((PUCHAR)(pMessage)) + (pMessage)->UriLength), PVOID)


ULONG
IpcSendMessage(
    IN HANDLE IpcHandle,
    IN ULONG Flags,
    IN PIPC_MESSAGE pMessage,
    IN ULONG MessageLength
    );

ULONG
IpcReceiveMessage(
    IN HANDLE IpcHandle,
    IN ULONG Flags,
    OUT PIPC_MESSAGE pMessage,
    IN ULONG MessageLength,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );


??? Separate "scheme handlers" ???


??? App Pools & Config Groups ???
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\readme.txt ===
This is the SLM project for the IIS Rearchitecture Team

ul - Universal Listener

api         ... User-mode API into UL.SYS
drv         ... UL.SYS driver sources
test        ... User-mode test app sources
ulkd        ... Kernel Debugger extension DLL sources
tmpsetup    ... Temporary scripts to install/remove UL.SYS.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\drv\pooltag.txt ===
// This should correspond to the list of http.sys tags in .\config.h
// Please keep them in sync.
//
// Note: In-use tags are of the form "Ul??". Free tags are of the
// form "xl??"; i.e., the leading 'U' has been replaced with an 'x'.

#define UL_AUXILIARY_BUFFER_POOL_TAG        MAKE_TAG( 'BAlU' )
UlAB - http.sys Auxiliary Buffer

#define UL_APP_POOL_OBJECT_POOL_TAG         MAKE_TAG( 'OAlU' )
UlAO - http.sys App Pool Object

#define UL_APP_POOL_PROCESS_POOL_TAG        MAKE_TAG( 'PAlU' )
UlAP - http.sys App Pool Process

#define UL_APP_POOL_RESOURCE_TAG            MAKE_TAG( 'RAlU' )
UlAR - http.sys App Pool Resource

#define UL_BUFFER_IO_POOL_TAG               MAKE_TAG( 'OBlU' )
UlBO - http.sys Outstanding i/o

#define UL_CONTROL_CHANNEL_POOL_TAG         MAKE_TAG( 'CClU' )
UlCC - http.sys Control Channel

#define UL_CG_TREE_ENTRY_POOL_TAG           MAKE_TAG( 'EClU' )
UlCE - http.sys Config Group Tree Entry

#define UL_CG_TREE_HEADER_POOL_TAG          MAKE_TAG( 'HClU' )
UlCH - http.sys Config Group Tree Header

#define UL_CG_URL_INFO_POOL_TAG             MAKE_TAG( 'IClU' )
UlCI - http.sys Config Group URL Info

#define UL_CG_OBJECT_POOL_TAG               MAKE_TAG( 'JClU' )
UlCJ - http.sys Config Group Object Pool

#define UL_CHUNK_TRACKER_POOL_TAG           MAKE_TAG( 'KClU' )
UlCK - http.sys Chunk Tracker

#define UL_CG_LOGDIR_POOL_TAG               MAKE_TAG( 'LClU' )
UlCL - http.sys Config Group LogDir

#define UL_CONNECTION_POOL_TAG              MAKE_TAG( 'OClU' )
UlCO - http.sys Connection Pool

#define UL_CG_RESOURCE_TAG                  MAKE_TAG( 'qClU' )
UlCq - http.sys Config Group Resource

#define UL_CG_TIMESTAMP_POOL_TAG            MAKE_TAG( 'TClU' )
UlCT - http.sys Config Group Timestamp

#define UL_CONNECTION_COUNT_ENTRY_POOL_TAG  MAKE_TAG( 'YClU' )
UlCY - http.sys Connection Count Entry

#define UL_DEBUG_POOL_TAG                   MAKE_TAG( 'BDlU' )
UlDB - http.sys Debug

#define UL_DATE_HEADER_RESOURCE_TAG         MAKE_TAG( 'HDlU' )
UlDH - http.sys Date Header Resource

#define UL_DISCONNECT_OBJECT_POOL_TAG       MAKE_TAG( 'ODlU' )
UlDO - http.sys Disconnect Object

#define UL_DISCONNECT_RESOURCE_TAG          MAKE_TAG( 'qDlU' )
UlDq - http.sys Disconnect Resource

#define UL_DEFERRED_REMOVE_ITEM_POOL_TAG    MAKE_TAG( 'RDlU' )
UlDR - http.sys Deferred Remove Item

#define UL_DEBUG_THREAD_POOL_TAG            MAKE_TAG( 'TDlU' )
UlDT - http.sys Debug Thread Pool

#define UL_ENDPOINT_POOL_TAG                MAKE_TAG( 'PElU' )
UlEP - http.sys Endpoint

#define UL_FILE_CACHE_ENTRY_POOL_TAG        MAKE_TAG( 'CFlU' )
UlFC - http.sys File Cache Entry

#define URI_FILTER_CONTEXT_POOL_TAG         MAKE_TAG( 'cflU' )
Ulfc - http.sys Uri Filter Context

#define UL_NONCACHED_FILE_DATA_POOL_TAG     MAKE_TAG( 'DFlU' )
UlFD - http.sys Noncached File Data

#define UL_FILTER_PROCESS_POOL_TAG          MAKE_TAG( 'PFlU' )
UlFP - http.sys Filter Process

#define UL_FILTER_CHANNEL_POOL_TAG          MAKE_TAG( 'TFlU' )
UlFT - http.sys Filter Channel

#define UL_FULL_TRACKER_POOL_TAG            MAKE_TAG( 'UFlU' )
UlFU - http.sys Full Tracker

#define UX_FILTER_WRITE_TRACKER_POOL_TAG    MAKE_TAG( 'WFlU' )
UlFW - http.sys Filter Write Tracker

#define UL_HTTP_CONNECTION_POOL_TAG         MAKE_TAG( 'CHlU' )
UlHC - http.sys Http Connection

#define UL_HTTP_CONNECTION_RESOURCE_TAG     MAKE_TAG( 'qHlU' )
UlHq - http.sys Http Connection Resource

#define UL_INTERNAL_REQUEST_POOL_TAG        MAKE_TAG( 'RHlU' )
UlHR - http.sys Internal Request

#define UL_HASH_TABLE_POOL_TAG              MAKE_TAG( 'THlU' )
UlHT - http.sys Hash Table

#define HEADER_VALUE_POOL_TAG               MAKE_TAG( 'VHlU' )
UlHV - http.sys Header Value

#define UL_IRP_CONTEXT_POOL_TAG             MAKE_TAG( 'CIlU' )
UlIC - http.sys Irp Context

#define UL_CONN_ID_TABLE_POOL_TAG           MAKE_TAG( 'DIlU' )
UlID - http.sys Conn ID Table

#define UL_INTERNAL_RESPONSE_POOL_TAG       MAKE_TAG( 'RIlU' )
UlIR - http.sys Internal Response

#define UL_LARGE_ALLOC_TAG                  MAKE_TAG( 'ALlU' )
UlLA - http.sys Large Alloc

#define UL_LOG_DATA_BUFFER_POOL_TAG         MAKE_TAG( 'BLlU' )
UlLB - http.sys Log Data Buffer

#define UL_LOG_FIELD_POOL_TAG               MAKE_TAG( 'DLlU' )
UlLD - http.sys Log Field

#define UL_LOG_FILE_ENTRY_POOL_TAG          MAKE_TAG( 'FLlU' )
UlLF - http.sys Log File Entry

#define UL_LOG_GENERIC_POOL_TAG             MAKE_TAG( 'GLlU' )
UlLG - http.sys Log Generic

#define UL_LOG_FILE_BUFFER_POOL_TAG         MAKE_TAG( 'LLlU' )
UlLL - http.sys Log File Buffer

#define UL_LOG_LIST_RESOURCE_TAG            MAKE_TAG( 'RLlU' )
UlLR - http.sys Log List Resourc3

#define UL_NONPAGED_DATA_POOL_TAG           MAKE_TAG( 'PNlU' )
UlNP - http.sys Non-Paged Data

#define UL_NSGO_POOL_TAG                    MAKE_TAG( 'ONlU' )
UlNO - http.sys NSGO Pool

#define UL_OWNER_REF_POOL_TAG               MAKE_TAG( 'ROlU' )
UlOR - http.sys Owner RefTrace Signature

#define UL_OPAQUE_ID_TABLE_POOL_TAG         MAKE_TAG( 'TOlU' )
UlOT - http.sys Opaque ID Table

#define UL_APOOL_PROC_BINDING_POOL_TAG      MAKE_TAG( 'BPlU' )
UlPB - http.sys APool Proc Binding

#define UL_PIPELINE_POOL_TAG                MAKE_TAG( 'LPlU' )
UlPL - http.sys Pipeline

#define UL_TCI_FILTER_POOL_TAG              MAKE_TAG( 'FQlU' )
UlQF - http.sys TCI Filter

#define UL_TCI_GENERIC_POOL_TAG             MAKE_TAG( 'GQlU' )
UlQG - http.sys TCI Generic

#define UL_TCI_INTERFACE_POOL_TAG           MAKE_TAG( 'IQlU' )
UlQI - http.sys TCI Interface

#define UL_TCI_FLOW_POOL_TAG                MAKE_TAG( 'LQlU' )
UlQL - http.sys TCI Flow

#define UL_TCI_RESOURCE_TAG                 MAKE_TAG( 'RQlU' )
UlQR - http.sys TCI Resource

#define UL_TCI_TRACKER_POOL_TAG             MAKE_TAG( 'TQlU' )
UlQT - http.sys TCI Tracker

#define UL_TCI_WMI_POOL_TAG                 MAKE_TAG( 'WQlU' )
UlQW - http.sys TCI WMI

#define UL_RCV_BUFFER_POOL_TAG              MAKE_TAG( 'BRlU' )
UlRB - http.sys Receive Buffer

#define UL_REGISTRY_DATA_POOL_TAG           MAKE_TAG( 'DRlU' )
UlRD - http.sys Registry Data

#define UL_REQUEST_BODY_BUFFER_POOL_TAG     MAKE_TAG( 'ERlU' )
UlRE - http.sys Request Body Buffer

#define UL_REQUEST_BUFFER_POOL_TAG          MAKE_TAG( 'PRlU' )
UlRP - http.sys Request Buffer

#define UL_REF_REQUEST_BUFFER_POOL_TAG      MAKE_TAG( 'RRlU' )
UlRR - http.sys Request Buffer References

#define UL_NONPAGED_RESOURCE_POOL_TAG       MAKE_TAG( 'SRlU' )
UlRS - http.sys Non-Paged Resource

#define UL_REF_OWNER_TRACELOG_POOL_TAG      MAKE_TAG( 'TRlU' )
UlRT - http.sys Owner RefTraceLog PoolTag

#define UL_SIMPLE_STATUS_ITEM_TAG           MAKE_TAG( 'SSlU' )
UlSS - http.sys Simple Status

#define UL_SSL_CERT_DATA_POOL_TAG           MAKE_TAG( 'CSlU' )
UlSC - http.sys SSL Cert Data

#define UL_SECURITY_DATA_POOL_TAG           MAKE_TAG( 'DSlU' )
UlSD - http.sys Security Data

#define UL_SITE_COUNTER_ENTRY_POOL_TAG      MAKE_TAG( 'OSlU' )
UlSO - http.sys Site Counter Entry

#define UL_ADDRESS_POOL_TAG                 MAKE_TAG( 'ATlU' )
UlTA - http.sys Address Pool

#define UL_THREAD_TRACKER_POOL_TAG          MAKE_TAG( 'TTlU' )
UlTT - http.sys Thread Tracker

#define UL_URI_CACHE_ENTRY_POOL_TAG         MAKE_TAG( 'CUlU' )
UlUC - http.sys Uri Cache Entry

#define UL_HTTP_UNKNOWN_HEADER_POOL_TAG     MAKE_TAG( 'HUlU' )
UlUH - http.sys HTTP Unknown Header

#define URL_POOL_TAG                        MAKE_TAG( 'LUlU' )
UlUL - http.sys URL

#define UL_URLMAP_POOL_TAG                  MAKE_TAG( 'MUlU' )
UlUM - http.sys URL Map

#define UL_VIRTHOST_POOL_TAG                MAKE_TAG( 'HVlU' )
UlVH - http.sys Virtual Host

#define UL_WORK_CONTEXT_POOL_TAG            MAKE_TAG( 'CWlU' )
UlWC - http.sys Work Context

#define UL_WORK_ITEM_POOL_TAG               MAKE_TAG( 'IWlU' )
UlWI - http.sys Work Item

#define UL_ZOMBIE_RESOURCE_TAG              MAKE_TAG( 'RZlU' )
UlZR - http.sys Zombie Resource
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\cache.txt ===
Stuff that we need for a working cache:

7) check for If-* headers and other evil headers (like Translate)
8) logging
10) understand dates and etags for sending 304s.
11) default memory size algorithm

other good stuff:

1) perf counters
2) cache browsing api
3) more stats and instrumentation
4) better table size computations ( would like prime # of buckets ).
5) look-aside lists for frequently allocated resources
7) smarter config based (and tree) invalidation


Stuff to do in umode

3) use cache browse api
4) use handle based file chunks
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\ipc2.txt ===
Stateless URI-named IPC mechanism


HANDLE
IpcRegister(
    IN HANDLE Parent OPTIONAL,
    IN PWSTR pUrl,
    IN ULONG Flags
    );

typedef struct _IPC_MESSAGE
{
    ULONG UriLength;
    ULONG BufferLength;
    // WCHAR Uri[UriLength];
    // UCHAR Alignment[Varies];
    // UCHAR Buffer[BufferLength];

} IPC_MESSAGE, *PIPC_MESSAGE;

#define IPC_MESSAGE_TO_URI(pMessage)                                    \
    (PWCHAR)((pMessage) + 1)
    
#define IPC_MESSAGE_TO_BUFFER(pMessage)                                 \
    ALIGN_UP_POINTER((((PUCHAR)(pMessage)) + (pMessage)->UriLength), PVOID)


ULONG
IpcSendMessage(
    IN HANDLE IpcHandle,
    IN ULONG Flags,
    IN PIPC_MESSAGE pMessage,
    IN ULONG MessageLength
    );

ULONG
IpcReceiveMessage(
    IN HANDLE IpcHandle,
    IN ULONG Flags,
    OUT PIPC_MESSAGE pMessage,
    IN ULONG MessageLength,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );


??? Separate "scheme handlers" ???


??? App Pools & Config Groups ???
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\internal.txt ===
FSRTL:
    FsRtlMdlReadCompleteDev
    FsRtlMdlReadDev

Security:
    SeExports
    RtlAddAccessAllowedAce
    RtlCreateAcl
    RtlLengthSid
    RtlGetDaclSecurityDescriptor
    NtSetSecurityObject
    SeUnlockSubjectContext
    SeLockSubjectContext
    SeOpenObjectAuditAlarm
    SeFreePrivileges
    SeAppendPrivileges

Queues:
    KeInitializeQueue
    KeInsertQueue
    KeRemoveQueue

Thread/Context:
    KeSetIdealProcessorThread
    KeUnstackDetachProcess
    KeStackAttachProcess

Miscellaneous:
    IoGetBaseFileSystemDeviceObject
    ObOpenObjectByPointer
    ZwWaitForSingleObject
    ZwDeviceIoControlFile
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\contacts.txt ===
NT Contacts

    NTOSKRNL            - MarkL
    KERNEL32            - MarkL
    Sundown             - MarkL
    Security            - MikeHow
    Build Environment   - BryanT
    NTFS                - BrianAn, TomM, or MarkZ
    FSRTL               - TomM
    Debuggers           - AndreVa
    TDI                 - HenrySa
    TCPIP               - HenrySa or NkSrin
    Memory Manager      - LandyW
    Clusters            - MikeMas
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\km_issues.txt ===
1.  IRP Cancellation vs IRP Ownership vs IoCompleteRequest

    I need to recall/investigate and document the gory details
    surrounding IRP cancellation.

    Paul had an interesting idea: If we avoid touching the IRP after
    setting the cancel routine, can we get avoid holding a lock?

2.  PendingReturned vs IoMarkIrpPending vs STATUS_PENDING

    I need to recall/investigate and document the gory details
    surrounding the annoying Irp->PendingReturned flag, the
    IoMarkIrpPending( Irp ) routine, and the act of returning
    STATUS_PENDING from within an IRP handler.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\io.txt ===
IRP Cancellation

     1. An internal spinlock (ntoskrnl!IopCancelSpinLock) is always
        acquired before invoking a cancel routine. The previous IRQL
        can be found at pIrp->CancelIrql. The cancel routine MUST release
        the spinlock by calling IoReleaseCancelSpinLock() before returning.
        Code may call IoAcquireCancelSpinLock() as necessary, but don't
        party on it too much. It's a huge source of contention within the
        kernel.

     2. You can never complete an IRP that still has a non-NULL cancel
        routine pointer. You MUST set the cancel routine pointer to NULL
        before calling IoCompleteRequest().

     3. You cannot set a cancel routine and then pass the IRP to another
        driver. If you're going to pass the IRP to another driver (say, a
        lower-level driver) you MUST set the cancel routine to NULL before
        calling IoCallDriver().

     4. IoSetCancelRoutine() returns the previous cancel routine pointer.
        It's possible that you are in the midst of completing an IRP and
        call IoSetCancelRoutine() to set the cancel routine pointer to
        NULL, and IoSetCancelRoutine() returns NULL. This typically means
        that the cancel routine is running or about to run Real Soon Now.

     5. The pIrp->Cancel flag is set in IoCancelIrp() BEFORE the cancel
        routine pointer is extracted from the IRP and invoked.

     6. IoCancelIrp extracts the Irp using IoSetCancelRoutine(NULL) .  So
        you can detect if it has extracted your cancel routine by later
        calling IoSetCancelRoutine (which returns the previous value) .

     7. Drivers check pIrp->Cancel AFTER setting a CancelRoutine in order
        to detect the case of the Irp being cancelled while your setting
        the CancelRoutine.  If it is TRUE, using #4 above to detect if 
        IoCancelIrp knows about your CancelRoutine.  If it does not,
        you must complete the irp yourself.  An easy way to do this is 
        to manually call your CancelRoutine.

            IoSetCancelRoutine(pIrp, &CancelRoutine);

            if (pIrp->Cancel)
            {
                //
                // Irp was canceled.
                //

                // 
                // Did IoCancelIrp consume our CancelRoutine?
                //

                if (IoSetCancelRoutine( pIrp, NULL ) != NULL)
                {
                    //
                    // Nope.  This means our cancle routing will 
                    // NOT be called by IoCancelIrp.  We better call it
                    //
                
                    IoAcquireCancelSpinLock(&pIrp->CancelIrql);
                    CancelRoutine(g_pDeviceObject, pIrp);
                }

                //
                // do not use pIrp anymore
                //
            }
            else
            {
                // 
                // safe to queue pIrp.  If it is cancelled the CancelRoutine
                // will be called.
                //
            }
        

     7. x



Pending

     1. If you return STATUS_PENDING from an IOCTL handler, then you
        must first call IoMarkIrpPending().

     2. If you take an incoming IRP, build another stack location,
        and call IoCallDriver(), you must set a completion routine and
        the completion routine must propagate the pending flag:

            if( pIrp->PendingReturned )
            {
                IoMarkIrpPending( pIrp );
            }

     3. x
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\ipc.txt ===
ULONG
WINAPI
UlSubmitHttpRequest(
    IN HANDLE SomeDamnHandle,
    IN PUL_HTTP_REQUEST pRequest,
    OUT PUL_HTTP_RESPONSE pResponseBuffer,
    IN ULONG ResponseBufferLength,
    OUT PULONG pBytesReceived,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );


//
// Issues:
//
//      What if the response is too large for the supplied buffer?
//
//      What about entity body data (send & receive)?
//
//      Security?
//
//      What type of handle do we use? An App Pool hadnle seems
//          rather unnatural, but a Control Channel handle is
//          out of the question. Maybe we need an IPC handle?
//


ULONG
WINAPI
UlOpenIPC(
    OUT PHANDLE pIpcHandle,
    IN ULONG Options
    );
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\ideas.txt ===
Random thoughts, miscellaneous ramblings    -- keithmo, 11/30/98


1.  The user-mode interface to the open-file-handle-cache is problematic,
    especially regarding thread security context (impersonation). We can't
    use the IIS-style "match-the-thread-token-handle" technique, as the
    cache is accessible from multiple processes which may (probably will)
    have different handle values for the same security token. I suspect that
    we'd need to actually snapshot the security token whenever an new entry
    is inserted into the cache, then compare that snapshot with the incoming
    token when testing for a cache hit. Ugh.

    I say we yank the user-mode interface.


2.  The current thinking for the response-cache has "weak" references to
    the open-file-handle-cache. This allows open-file-handle-cache entries
    to come & go independently of the response-cache. I think we could
    simplify the implementation somewhat by "strengthening" this reference
    so that a response-cache entry becomes invalidated whenever any of
    the referenced open-file-handle-cache entries are invalidated. This
    could be useful as a cheap & easy filesystem "change notify" mechanism
    for user-mode worker processes. (See below.)


3.  Along the same lines as #2, it may be useful to allow "zero-length"
    byte ranges in UL_HTTP_RESPONSE structures. This would allow user-mode
    code to establish a relationship between a response-cache entry and
    an open-file-handle-cache entry solely for the purposes of invalidation.

    Imagine a response-cache entry representing the dynamic output from a
    .XSP file. The UL_HTTP_RESPONSE structure representing this response
    could contain a zero-length byte range referring to the source .XSP
    file. If the .XSP file was flushed from the open-file-handle-cache
    (say, due to an oplock break) then the user-mode process would receive
    a "normal" cache miss notification.


4.  It may be useful to provide a "notification type" value in the
    UL_HTTP_REQUEST returned by the UlReceiveHttpRequest() API. This
    value would give a "hint" indication for the reason the request
    was passed up to user-mode. Possible reasons include:

        response-cache miss - The incoming URL was *not* present in
            the response-cache.

        open-file-handle-cache miss - The incoming URL *was* present
            in the response-cache, but one or more of the referenced
            files were *not* present in the open-file-handle-cache.

        cache policy miss - The incoming URL *was* present in the
            response-cache, but the cache-control information set on
            the cache entry was incompatible with the incoming request.

        security - The incoming URL *was* present in the response-cache,
            but the cache entry is configured for a security provider
            requring user-mode intervention.

        etc, etc, etc


5.  Need to add a UlSendHttpResponseFromCache() API. This should take a
    UL_HTTP_REQUEST structure as returned by UlReceiveHttpRequest(), hit
    the response-cache, and send the cached response if successful. If
    the URL is not in the response-cache, then API fails with a
    distinguished error value.


6.  Probably need a UlReceiveEntityBody() API to read the "leftover" part
    of the entity body that could not fit into the original request
    buffer.


7.  User-mode worker processes issue one or more UlReceiveHttpRequest()
    APIs that pend if necessary, waiting for incoming requests. What
    happens if the supplied buffer is too small for the incoming request
    header?

    For each *process*, UL needs a separate queue of pending requests. This
    queue represents the set of requests for which either a) an attempt was
    made to deliver the request to user-mode but the supplied request buffer
    was too small, or b) unread entity body data is remaining.


8.  Need a mechanism to notify user-mode whenever an established connection
    is disconnected. This is especially useful for worker-processes that
    support the old ISAPI filter mechanism.

    Unfortunately, we cannot leverage the existing UlReadHttpRequest()
    API for these notifications. Consider a Web Garden in which multiple
    processes receive requests for a single connection. Which process
    gets the notification? The first? The last? All of them?

    We'll probably need a separate API for disconnect notifications.


9.  With the new handle-based app pool open/creation APIs, UL needs
    a reliable way to distinguish three separate open modes:

        1.  Open a control channel
        2.  Create a new app pool
        3.  Open an existing app pool

    The "control channel" cases can be distinguished from the "app pool"
    cases by the presence of the filename buffer in the FILE_OBJECT. If
    there is a name, it's an app pool, if not, it's a control channel.

    Distinguishing app pool "create" from "open" is a bit trickier. Some
    spelunking uncovered a way: The Disposition parameter to NtCreateFile()
    is propagated in the IRP_MJ_CREATE IRP, stuffed into the high byte of
    IO_STACK_LOCATION.Parameters.Create.Options.

    The creation becomes:

        if (pIrpSp->FileObject->FileName.Buffer == NULL)
        {
            //
            // Open a control channel.
            //

            status = UlpOpenControlChannel( pIrp, pIrpSp );
        }
        else
        {
            //
            // IO passes the creation disposition in the high byte of
            // the Options field. Extract & decode it.
            //

            switch ((pIrpSp->Parameters.Create.Options >> 24) & 0xFF)
            {
            case FILE_CREATE:
                //
                // Create a new app pool. This will fail if the app pool
                // already exists.
                //

                status = UlpCreateAppPool( pIrp, pIrpSp );
                break;

            case FILE_OPEN:
                //
                // Open an existing app pool. This will fail if the app
                // pool does not already exist.
                //

                status = UlpOpenAppPool( pIrp, pIrpSp );
                break;

            default:
                //
                // No need to be flexible here. Fail the request.
                //

                status = STATUS_INVALID_PARAMETER;
                break;
            }
        }

10. We still need to think carefully through the whole URL canonicalization
    mess. How do we canonicalize an incoming URL if there's no host
    header in the request?

    Henry has suggested a separate IP-address-to-host-name lookaside
    table in UL, configured by user-mode (probably the application
    manager).


11. We still need to define the exact contents of the UL_CACHE_POLICY
    structure (the one that defines the caching characteristis of
    a specific HTTP response).


12. The opaque ID package needs refinement. See objtable.c for one
    proposed solution.


13. UL needs a ton of bug fixes on its disconnect logic. The logic is
    related to the HTTP protocol version, the transfer encoding, and
    whether or not the data is streamed from user-mode:

        Version     Chunked                     Non-Chunked
        ~~~~~~~     ~~~~~~~             Non-Streamed        Streamed
                                        ~~~~~~~~~~~~        ~~~~~~~~

        0.9         N/A                 CLOSE               CLOSE

        1.0         N/A                 CLOSE IF !PC        CLOSE

        1.1         SEND EMPTY CHUNK,   CLOSE IF !PC        CLOSE
                    CLOSE IF !PC


14. We currently use Named Pipes (and MCourage's most-excellent IPM
    wrapper) for IPC between WAS and WP. This works great under NT,
    but Named Pipes are not supported on Win9x or WinCE.

    We could use anonymous pipes (via the CreatePipe() API). However,
    while anonymous pipes ARE supported under WinNT and Win9x, they're
    NOT supported under WinCE. This may not be a big deal (we probably
    won't have a robust process model under WinCE anyway). A bigger
    drawback to anonymous pipes is that they are synchronous only
    (no overlapped I/O). Yuck.

    After further investigation, it appears that we're almost totally
    hozed when it comes to IPC on WinCE. As near as I can tell, the
    only reasonable IPC mechanism available in WinCE is sockets...
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\nt4hack.txt ===
This file describes the internals of ul\drv\nt4hack.h that enable building
UL for NT5 and NT4.


1.  The symbol TARGET_NT4 is defined when building for NT4; it is not
    defined when building for NT5.


2.  A portion of the NT4 build environment must be used to build NT4-
    compatible drivers. This is necessary because:

        a.  _except_handler3 is part of the kernel-mode exception
            handling/dispatching mechanism.

        b.  All kernel-mode drivers link to ntoskrnl.lib. This is a
            hybrid link-library containing mostly import definitions
            for those routines exported by ntoskrnl.exe. This library
            also contains the actual implementations of a few routines.

        c.  The NT4 version of ntoskrnl.lib contains the actual
            _except_handler3 implemenation. As a result, each NT4 driver
            contains a copy of this _except_handler3 implementation.

        d.  The NT5 version of ntoskrnl.lib contains an import
            definition for _except_handler3. As a result, each NT5
            driver imports _except_handler3 from the kernel.

        e.  Since NT5 drivers import _except_handler3 from the kernel,
            and _except_handler3 is not exported from the NT4 kernel,
            then NT5 drivers will not load under NT4.


3.  When the build target is NT4, nt4hack.h manually #includes basetsd.h.
    This file is #included by ntdef.h in the NT5 build environment, but
    does not exist in the NT4 build environment. #including this file
    enables UL to use the pointer-size-neutral types (such as SIZE_T
    and ULONG_PTR), even on NT4 builds.


4.  nt4hack.h defines a few macros & constants newly introduced in the
    NT5 build environment. These include C_ASSERT, EXTERN_C, and
    ANSI_NULL.


5.  The function prototypes for ExInterlockedCompareExchange64() and
    InterlockedCompareExchange() differ between the NT4 and NT5 build
    environments. For NT4 they are defined as:

        NTKERNELAPI
        ULONGLONG
        FASTCALL
        ExInterlockedCompareExchange64(
            IN PULONGLONG Destination,
            IN PULONGLONG Exchange,
            IN PULONGLONG Comperand,
            IN PKSPIN_LOCK Lock
            );

        PVOID
        FASTCALL
        InterlockedCompareExchange(
            IN OUT PVOID *Destination,
            IN PVOID ExChange,
            IN PVOID Comperand
            );

    Under NT5 they are defined as:

        NTKERNELAPI
        LONGLONG
        FASTCALL
        ExInterlockedCompareExchange64(
            IN PLONGLONG Destination,
            IN PLONGLONG Exchange,
            IN PLONGLONG Comperand,
            IN PKSPIN_LOCK Lock
            );

        NTKERNELAPI
        LONG
        FASTCALL
        InterlockedCompareExchange(
            IN OUT PLONG Destination,
            IN LONG ExChange,
            IN LONG Comperand
            );

    nt4hack.h #defines UlInterlockedCompareExchange64() and
    UlInterlockedCompareExchange() with a few key type casts to ensure
    commonality between platforms.


6.  NT5 introduced the OBJ_KERNEL_HANDLE flag. This flag may be set in
    the Attributes field of the OBJECT_ATTRIBUTES structure used as a
    parameter for many NT APIs that create named objects. When an
    object is opened or created with this flag set, the object is created
    or opened using the security context of the calling thread, but the
    resulting handle is only valid in the system process. Since the handle
    is only valid in the system process, it is impossible for a user-mode
    process to close, duplicate, or otherwise manipulate the handle or
    the underlying object.

    This is a Good Thing. Unfortunately, NT4 does not support this flag.

    Fortunately, NT4 supports the KeAttachProcess() and KeDetachProcess()
    APIs. KeAttachProcess() allows a thread in one process to attach to
    the address space & handle table of another process. Any handles
    created while attached to another process are only valid in the
    context of the attached process.

    nt4hack.h hides these differences by defining:

        UL_KERNEL_HANDLE
        UlAttachToSystemProcess()
        UlDetachFromSystemProcess()
        UlCloseSystemHandle()

    Under NT4, UL_KERNEL_HANDLE is 0; under NT5 it is OBJ_KERNEL_HANDLE.
    UL sets this flag whenever initializing an OBJECT_ATTRIBUTES structure.

    Under NT4, UlAttachToSystemProcess() calls KeAttachProcess() to attach
    to the system process; under NT5 it is a no-op.

    Under NT4, UlDetachFromSystemProcess() calls KeDetachProcess(); under
    NT5 it is a no-op.

    UlCloseSystemHandle() calls UlAttachToSystemProcess(), ZwClose() to
    close the specified handle, then UlDetachFromSystemProcess(). So,
    under NT5, UlCloseSystemHandle() is basically a #define to ZwClose().
    Under NT4, it must attach before the close and detach afterwards.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\reference.txt ===
+------------------------------------------------------------+
 |                                                            |
 |                                                            v
 | /=================\                               /=================\
 | [                 ]                               [                 ]
 | [ HTTP_REQUEST    ]<--------------+               [ HTTP_CONNECTION ]
 | [ ~~~~~~~~~~~~    ]               |               [ ~~~~~~~~~~~~~~~ ]
 | [                 ]               |               [                 ]
 +-[ pHttpConn       ]               +---------------[ pRequest        ]
   [                 ]                               [                 ]
   [ ConnectionEntry ]<----------------------------->[ RequestHead     ]
   [                 ]                               [                 ]
   [ pHeaderBuffer   ]---------------+ +-------------[ pCurrentBuffer  ]
   [                 ]               | |             [                 ]
   [ pChunkBuffer    ]-------------+ | |          +->[ BufferHead      ]
   [                 ]             | | |          |  [                 ]
   \=================/             | | |          |  \=================/
                                   | | |          |           ^
                                   | | |          |           |
                                   v v v          |           |
                           /===================\  |           |
                           [                   ]  |           |
                           [ UL_REQUEST_BUFFER ]  |           |
                           [ ~~~~~~~~~~~~~~~~~ ]  |           |
                           [                   ]  |           |
                           [ ListEntry         ]<-+           |
                           [                   ]              |
                           [ pConnection       ]--------------+
                           [                   ]
                           \===================/
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\uri.txt ===
URI-reference = [ absoluteURI | relativeURI ] [ "#" fragment ]
absoluteURI   = scheme ":" ( hier_part | opaque_part )
relativeURI   = ( net_path | abs_path | rel_path ) [ "?" query ]

hier_part     = ( net_path | abs_path ) [ "?" query ]
opaque_part   = uric_no_slash *uric

uric_no_slash = unreserved | escaped | ";" | "?" | ":" | "@" |
                "&" | "=" | "+" | "$" | ","

net_path      = "//" authority [ abs_path ]
abs_path      = "/"  path_segments
rel_path      = rel_segment [ abs_path ]

rel_segment   = 1*( unreserved | escaped |
                    ";" | "@" | "&" | "=" | "+" | "$" | "," )

scheme        = alpha *( alpha | digit | "+" | "-" | "." )

authority     = server | reg_name

reg_name      = 1*( unreserved | escaped | "$" | "," |
                    ";" | ":" | "@" | "&" | "=" | "+" )

server        = [ [ userinfo "@" ] hostport ]
userinfo      = *( unreserved | escaped |
                   ";" | ":" | "&" | "=" | "+" | "$" | "," )

hostport      = host [ ":" port ]
host          = hostname | IPv4address
hostname      = *( domainlabel "." ) toplabel [ "." ]
domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum
toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
IPv4address   = 1*digit "." 1*digit "." 1*digit "." 1*digit
port          = *digit

path          = [ abs_path | opaque_part ]
path_segments = segment *( "/" segment )
segment       = *pchar *( ";" param )
param         = *pchar
pchar         = unreserved | escaped |
                ":" | "@" | "&" | "=" | "+" | "$" | ","

query         = *uric

fragment      = *uric

uric          = reserved | unreserved | escaped
reserved      = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "+" |
                "$" | ","
unreserved    = alphanum | mark
mark          = "-" | "_" | "." | "!" | "~" | "*" | "'" |
                "(" | ")"

escaped       = "%" hex hex
hex           = digit | "A" | "B" | "C" | "D" | "E" | "F" |
                        "a" | "b" | "c" | "d" | "e" | "f"

alphanum      = alpha | digit
alpha         = lowalpha | upalpha

lowalpha = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" |
           "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" |
           "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
upalpha  = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" |
           "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" |
           "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
digit    = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
           "8" | "9"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\parse.txt ===
Requirements for abstracting the parsing code out of UL:

    Functions exported by the parser:

        InitializeParser()
        ParseHttp()
        ParseChunkLength()


    Types used by the interface:

        HTTP_REQUEST

*           UL_HTTP_VERB        Verb
*           PUCHAR              pRawVerb
*           ULONG               RawVerbLength
*           ULONG               TotalRequestSize
*           struct {}           RawUrl
*           ULONG               PortInHost
*           LIST_ENTRY          UnknownHeaderList
*           ULONG               UnknownHeaderCount
*           ULONGLONG           BytesLeftInChunk
*           ULONG               LastChunk
*           PARSE_STATE         ParseState
*           UL_HTTP_VERSION     Version
*           HTTP_HEADER         Headers[]
*           ULONGLONG           ContentLength
*           ULONG               Chunked
*           struct {}           CookedUrl
            PHTTP_CONNECTION    pHttpConn   -- For UlIpAddressFromConnection



typedef struct _HTTP_PARSE_INFO
{
    //
    // Structure signature.
    //

    ULONG Signature;

    //
    // Current state of our parsing effort.
    //

    PARSE_STATE ParseState;

    //
    // Verb of this request.
    //

    UL_HTTP_VERB Verb;

    //
    // Request version.
    //

    UL_HTTP_VERSION Version;

    //
    // Array of headers we do know about.
    //

    HTTP_HEADER Headers[UlHeaderMaximum];

    //
    // Pointer to the raw verb, valid only if Verb == UlHttpVerbUnknown.
    //

    PUCHAR pRawVerb;

    //
    // Length of the raw verb.
    //

    ULONG RawVerbLength;

    //
    // Total bytes needed for this request, including string terminators.
    //

    ULONG TotalRequestSize;

    //
    // List of headers we don't know about.
    //

    LIST_ENTRY UnknownHeaderList;

    //
    // The number of "unknown" headers we have.
    //

    ULONG UnknownHeaderCount;

    //
    // The content length, if any.
    //

    ULONGLONG ContentLength;

    //
    // The number of bytes remaining in the current chunk.
    //

    ULONGLONG BytesLeftInChunk;

    //
    // Is this chunk encoded?
    //

    ULONG Chunked:1;
    ULONG :3;           // makes debugging easier

    //
    // Is this the last chunk?
    //

    ULONG LastChunk:1;
    ULONG :3;           // makes debugging easier

    //
    // Is the port number in the host?
    //

    ULONG PortInHost:1;
    ULONG :3;           // makes debugging easier

    struct
    {
        //
        // The raw URL.
        //
        // All of the following pointers point into pUrl.
        //

        PUCHAR pUrl;

        //
        // Host part, if any.
        //

        PUCHAR pHost;

        //
        // Pointer to the absolute path part.
        //

        PUCHAR pAbsPath;

        //
        // Length of the raw URL.
        //

        ULONG Length;

    } RawUrl;

    struct
    {
        //
        // The canonicalized, fully qualified URL.
        //
        // All of the following pointers point into pUrl.
        //

        PWSTR pUrl;

        //
        // Pointer to the host part.
        //

        PWSTR pHost;

        //
        // Pointer to the absolute path part.
        //

        PWSTR pAbsPath;

        //
        // Pointer to the query string, if any.
        //

        PWSTR pQueryString;

        //
        // The entire length (in bytes).
        //

        ULONG Length;

        //
        // The hash of the entire fully qualified URL.
        //

        ULONG Hash;

    } CookedUrl;

    //
    // Pointer to the local transport address for the network connection.
    //

    PTRANSPORT_ADDRESS pLocalAddress;

} HTTP_PARSE_INFO, *PHTTP_PARSE_INFO;


Imports needed by the parser:

    Pool stuff w/ usual debug support
    KeGetCurrentIrql()


#ifdef UL_KERNEL_RUNTIME
#define UL_GET_CURRENT_IRQL()   KeGetCurrentIrql()
#else
#define UL_GET_CURRENT_IRQL()   0

//
// Types stolen from ntos\inc\ex.h.
//

typedef enum _POOL_TYPE
{
    NonPagedPool,
    PagedPool,
    NonPagedPoolMustSucceed,
    DontUseThisType,
    NonPagedPoolCacheAligned,
    PagedPoolCacheAligned,
    NonPagedPoolCacheAlignedMustS,
    MaxPoolType

    // end_wdm
    ,
    //
    // Note these per session types are carefully chosen so that the appropriate
    // masking still applies as well as MaxPoolType above.
    //

    NonPagedPoolSession = 32,
    PagedPoolSession = NonPagedPoolSession + 1,
    NonPagedPoolMustSucceedSession = PagedPoolSession + 1,
    DontUseThisTypeSession = NonPagedPoolMustSucceedSession + 1,
    NonPagedPoolCacheAlignedSession = DontUseThisTypeSession + 1,
    PagedPoolCacheAlignedSession = NonPagedPoolCacheAlignedSession + 1,
    NonPagedPoolCacheAlignedMustSSession = PagedPoolCacheAlignedSession + 1,

} POOL_TYPE;

#endif


Pool tags used in the parser:
    HTTP_UNKNOWN_HEADER_POOL_TAG
    URL_POOL_TAG
    HEADER_VALUE_POOL_TAG


typedef
PVOID
(NTAPI * PFN_MEM_ALLOC)(
    IN POOL_TYPE PoolType,
    IN ULONG NumberOfBytes,
    IN ULONG Tag,
#if DBG
    ,
    IN PSTR pFileName,
    IN ULONG LineNumber
#endif
    );

typedef
VOID
(NTAPI * PFN_MEM_FREE)(
    IN PVOID pBuffer,
    IN ULONG Tag
    );

typedef
VOID
(NTAPI * PFN_ASSERT)(
    IN PVOID pFailedAssertion,
    IN PVOID pFileName,
    IN ULONG LineNumber,
    IN PSTR pMessage
    );

typedef struct _UL_PARSER_ENVIRONMENT
{
    PFN_MEM_ALLOC pAllocRoutine;
    PFN_MEM_FREE pFreeRoutine;
    PFN_ASSERT pAssertRoutine;
    ULONG UrlPoolTag;
    ULONG HeaderValuePoolTag;
    ULONG UnknownHeaderPoolTag;

} UL_PARSER_ENVIRONMENT, *PUL_PARSER_ENVIRONMENT;

NTSTATUS
UlInitializeParser(
    IN PUL_PARSER_ENVIRONMENT pEnvironment
    );

VOID
UlTerminateParser(
    VOID
    );

NTSTATUS
UlInitializeParseInfo(
    OUT PHTTP_PARSE_INFO pParseInfo,
    IN PTRANSPORT_ADDRESS pLocalAddress
    );

VOID
UlDestroyParseInfo(
    IN OUT PHTTP_PARSE_INFO pParseInfo
    );

NTSTATUS
UlParseHttp(
    IN OUT PHTTP_PARSE_INFO pParseInfo,
    IN PUCHAR pHttpRequest,
    IN ULONG HttpRequestLength,
    OUT PULONG pBytesTaken
    );

NTSTATUS
UlBuildUserRequest(
    OUT PUL_HTTP_REQUEST pHttpRequest,
    IN PHTTP_PARSE_INFO pParseInfo,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    IN UL_HTTP_REQUEST_ID RequestId,
    IN UL_URL_CONTEXT UrlContext,
    IN UL_REQUEST_REASON RequestReason
    );



    NTSTATUS status;
    UL_PARSER_ENVIRONMENT env;

#if DBG
    env.pAllocRoutine = &UlAllocatePool;
    env.pFreeRoutine = &UlFreePool;
#else
    env.pAllocRoutine = &ExAllocatePoolWithTag;
#if USE_FREE_POOL_WITH_TAG
    env.pFreeRoutine = &ExFreePoolWithTag;
#else
    env.pFreeRoutine = &UlpFreePoolWithTag;
#endif                      
#endif

    env.pAssertRoutine = &RtlAssert;
    env.UrlPoolTag = URL_POOL_TAG;
    env.HeaderValuePoolTag = HEADER_VALUE_POOL_TAG;
    env.UnknownHeaderPoolTag = HTTP_UNKNOWN_HEADER_POOL_TAG;

    status = UlInitializeParser( &env );

    if (!NT_SUCCESS(status))
    {
        // Oh no! ...
    }


#if DBG
#define UL_ALLOCATE_POOL(a,b,t,p)                                       \
    (g_Environment.pAllocRoutine)(                                      \
        (a),                                                            \
        (b),                                                            \
        (t),                                                            \
        (p)                                                             \
        )
#else
#define UL_ALLOCATE_POOL(a,b,t,p)                                       \
    (g_Environment.pAllocRoutine)(                                      \
        (a),                                                            \
        (b),                                                            \
        (t),                                                            \
        (p),                                                            \
        __FILE__,                                                       \
        __LINE__                                                        \
        )
#endif

#define UL_FREE_POOL(a,t)                                               \
    (g_Environment.pFreeRoutine)(                                       \
        (a),                                                            \
        (t)                                                             \
        )

#define UL_ASSERT(exp)                                                  \
    (g_Environment.pAssertRoutine)(                                     \
        #exp,                                                           \
        __FILE__,                                                       \
        __LINE__,                                                       \
        NULL                                                            \
        );
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\wdm_conflicts.txt ===
Other:
    OBJ_KERNEL_HANDLE

Mapped:
    MmMapLockedPagesSpecifyCache    -> MmMapLockedPages


Not Present:
    Resources:
        ExAcquireResourceExclusiveLite
        ExInitializeResourceLite
        ExDeleteResourceLite
        ExAcquireResourceSharedLite
        ExReleaseResourceLite

    FSRTL:
        FsRtlMdlReadCompleteDev
        FsRtlMdlReadDev

    Security:
        RtlMapGenericMask
        IoGetFileObjectGenericMapping
        SeExports
        RtlSetDaclSecurityDescriptor
        RtlAddAccessAllowedAce
        RtlCreateAcl
        RtlLengthSid
        RtlCreateSecurityDescriptor
        RtlGetDaclSecurityDescriptor
        NtSetSecurityObject
        SeUnlockSubjectContext
        SeAssignSecurity
        SeLockSubjectContext
        SeDeassignSecurity
        SeOpenObjectAuditAlarm
        SeFreePrivileges
        SeAppendPrivileges
        SeAccessCheck

    Queues:
        KeInitializeQueue
        KeInsertQueue
        KeRemoveQueue

    Thread/Context:
        IoSetThreadHardErrorMode
        KeSetIdealProcessorThread
        KeUnstackDetachProcess
        KeStackAttachProcess

    Miscellaneous:
        IoGetBaseFileSystemDeviceObject
        ObOpenObjectByPointer
        ZwWaitForSingleObject
        ZwDeviceIoControlFile
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\refcount.ppt ===
Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level HTTP_CONNECTION HTTP_REQUEST UL_CONNECTION [ TDI ] UL_APP_POOL_PROCESS UL_APP_POOL_OBJECT UL_CONFIG_GROUP_OBJECT g_AppPoolListHead pDemandStartIrp Ob HANDLE Ob HANDLE OPAQUE_ID_TABLE_ENTRY OPAQUE_ID_TABLE_ENTRY UlConnectionDisconnect UlConnectionDestroyed UlCancelRequestIo On-screen Show Microsoft Internal Times New Roman Default Design PowerPoint Presentation Fonts Used Design Template Slide Titles PowerPoint Presentation Paul McDaniel Paul McDaniel Microsoft PowerPoint Times New Roman HTTP_CONNECTION HTTP_REQUEST UL_CONNECTION [ TDI ] UL_APP_POOL_PROCESS UL_APP_POOL_OBJECT UL_CONFIG_GROUP_OBJECT AppPoolListHead pDemandStartIrp HANDLE HANDLE OPAQUE_ID_TABLE_ENTRY OPAQUE_ID_TABLE_ENTRY UlConnectionDisconnect UlConnectionDestroyed UlCancelRequestIoT "System Paul McDaniel
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\rawmeat.txt ===
//
// data associated with raw transport connections
//
typedef struct _UL_RAW_CONNECTION_INFO
{
    //
    // connection id
    //
    UL_HTTP_CONNECTION_ID ConnectionId;

    //
    // address info
    //
    USHORT RemoteAddressLength; // sizeof(UL_NETWORK_ADDRESS_xxx)
    USHORT RemoteAddressType;   // UL_NETWORK_ADDRESS_TYPE_xxx

    USHORT LocalAddressLength;  // sizeof(UL_NETWORK_ADDRESS_xxx)
    USHORT LocalAddressType;    // UL_NETWORK_ADDRESS_TYPE_xxx

    PVOID pRemoteAddress;       // points to a UL_NETWORK_ADDRESS_xxx
    PVOID pLocalAddress;        // points to a UL_NETWORK_ADDRESS_xxx

    //
    // initial data
    //
    ULONG InitialDataSize;      // size of initial data
    PVOID pInitialData;         // pointer to initial data
} UL_RAW_CONNECTION_INFO, *PUL_RAW_CONNECTION_INFO;

//
// Data computed during SSL handshake
//
typedef struct _UL_SSL_INFO
{
    USHORT                      ServerCertKeySize;
    USHORT                      ConnectionKeySize;
    PWCHAR                      pServerCertIssuer;
    ULONG                       ServerCertIssuerSize;
    PWCHAR                      pServerCertSubject;
    ULONG                       ServerCertSubjectSize;
    PUL_SSL_CLIENT_CERT_INFO    pClientCertInfo;

} UL_SSL_INFO, *PUL_SSL_INFO;

//
// Client certificate information
//
typedef struct _UL_SSL_CLIENT_CERT_INFO
{
    ULONG   CertEncodedSize;
    PUCHAR  pCertEncoded;
    ULONG   CertFlags;
    HANDLE  Token;

} UL_SSL_CLIENT_CERT_INFO, *PUL_SSL_CLIENT_CERT_INFO;

//
// for transfers between filters and upper levels
//
typedef enum _UL_FILTER_BUFFER_TYPE
{
    UlFilterBufferHttpStream,           // both directions    
    UlFilterBufferSslInitInfo,          // filter -> app
    UlFilterBufferSslClientCert,        // filter -> app
    UlFilterBufferSslClientCertAndMap,  // filter -> app
    UlFilterBufferSslRenegotiate        // app -> filter
}

typedef struct _UL_FILTER_BUFFER
{
    UL_FILTER_BUFFER_TYPE   BufferType;
    PUCHAR                  pBuffer;
    ULONG                   BufferSize;

} UL_FILTER_BUFFER, *PUL_FILTER_BUFFER;

//
// for adding filters to the control channel
//
// Used with: UlControlChannelFilterInformation
//            UlControlChannelLegacyFilterInformation
//
typedef struct _UL_CONTROL_CHANNEL_FILTER
{
    UL_PROPERTY_FLAGS Flags;
    HANDLE FilterHandle;

} UL_CONTROL_CHANNEL_FILTER, *PUL_CONTROL_CHANNEL_FILTER, ;


//
// API calls for SSL/Filter helper process
//
ULAPI_LINKAGE
ULONG
WINAPI
UlCreateFilter(
    OUT PHANDLE pFilterHandle,
    IN PCWSTR pFilterName,
    IN LPSECURITY_ATTRIBUTES pSecurityAttributes OPTIONAL,
    IN ULONG Options
    );

ULAPI_LINKAGE
ULONG
WINAPI
UlOpenFilter(
    OUT PHANDLE pFilterHandle,
    IN PCWSTR pFilterName,
    IN ULONG Options
    );

ULAPI_LINKAGE
ULONG
WINAPI
UlFilterAccept(
    IN HANDLE FilterHandle,
    OUT PUL_RAW_CONNECTION_INFO pRawConnectionInfo,
    IN ULONG RawConnectionInfoSize,
    OUT pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );

ULAPI_LINKAGE
ULONG
WINAPI
UlFilterClose(
    IN HANDLE FilterHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );

ULAPI_LINKAGE
ULONG
WINAPI
UlFilterRawRead(
    IN HANDLE FilterHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    OUT PVOID pBuffer,
    IN ULONG BufferSize,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );
     

ULAPI_LINKAGE
ULONG
WINAPI
UlFilterRawWrite(
    IN HANDLE FilterHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    IN PVOID pBuffer,
    IN ULONG BufferSize,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );


ULAPI_LINKAGE
ULONG
WINAPI
UlFilterAppRead(
    IN HANDLE FilterHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    OUT PUL_FILTER_BUFFER pBuffer,
    IN ULONG BufferSize
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );

ULAPI_LINKAGE
ULONG
WINAPI
UlFilterAppWrite(
    IN HANDLE FilterHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    IN PUL_FILTER_BUFFER pBuffer,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped OPTIONAL
    );


//
// Application pool calls for SSL
//

ULAPI_LINKAGE
ULONG
WINAPI
UlReceiveClientCertificate(
    IN HANDLE AppPoolHandle,
    IN UL_HTTP_CONNECTION_ID ConnectionId,
    IN ULONG Flags,
    OUT PUL_SSL_CLIENT_CERT_INFO pSslClientCertInfo,
    IN ULONG SslClientCertInfoSize,
    OUT PULONG pBytesReceived OPTIONAL,
    IN LPOVERLAPPED pOverlapped
    );
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\misc\uri-ipc.txt ===
Can we provide (in the NSP timeframe) a generic URI-based IPC mechanism for
NT5 (and, in future releases, NT4 & Win9x)? More importantly, can this
mechanism be leveraged by UL?

The goal here is to totally separate the "listening" and "dispatching"
functionality. We'll provide a general IPC mechanism that everyone can
use. It just so happens that three of the customers will be a) the listener,
b) the worker processes, and c) the WAS.

Consider a completely stateless IPC mechanism based on only three APIs:

    ULONG
    RegisterUri(
        OUT PHANDLE UriHandle,
        IN HANDLE ParentUri OPTIONAL,
        IN PWSTR pUri,
        IN ULONG Flags
        );

    ULONG
    SendMessage(
        IN HANDLE UriHandle,
        IN PWSTR pSourceSuffix OPTIONAL,
        IN PWSTR pTargetUri,
        IN PVOID pData,
        IN ULONG DataLength,
        OUT PULONG pBytesSent OPTIONAL,
        IN LPOVERLAPPED pOverlapped OPTIONAL
        );

    typedef struct _MESSAGE
    {
        ULONG SourceUriLength;
        ULONG TargetUriLength;
        ULONG DataLength;
        ULONG Reserved;

        // WCHAR SourceUri[SourceUriLength];
        // WCHAR TargetUri[TargetUriLength];
        // UCHAR Alignment[varies];
        // UCHAR Data[DataLength];

    } MESSAGE, *PMESSAGE;

    ULONG
    ReceiveMessage(
        IN HANDLE UriHandle,
        OUT PMESSAGE pMessageBuffer,
        IN ULONG MessageBufferLength,
        OUT PULONG pBytesReceived OPTIONAL,
        IN LPOVERLAPPED pOverlapped OPTIONAL
        );

A request/response API can be built on top of these three primitives:


    1.  Process 1: Creates new GUID -> GUID1

    2.  Process 1: Registers "ipc:/GUID1" -> REG1

                    3.  Process 2: Registers "http://foo" -> REG2

                    4.  Process 2: Posts ReceiveMessage( REG2 )

    5.  Process 1: Creates request ID (another GUID?) -> RID1

    6.  Process 1: SendMessage(
                        REG1,
                        "RID1",
                        "http://foo/bar/xyz.htm",
                        {request_blob}
                        );

    7.  Process 1: Posts ReceiveMessage( REG1 )

                    8.  Process 2: ReceiveMessage() completes with
                            SourceUri = "ipc:/GUID1/RID1"
                            TargetUri = "http://foo/bar/xyz.htm"
                            Data = {request_blob}

                    9.  Process 2: SendMessage(
                                        REG2,
                                        "bar/xyz.htm",      <- URI "stem"
                                        "ipc:/GUID1/RID1",  <- old source URI
                                        {response_blob}
                                        );

    10. Process 1: ReceiveMessage() completes with
            SourceUri = "http://foo/bar/xyz.htm"
            TargetUri = "ipc:/GUID1/RID1"
            Data = {response_blob}




08/23/1999  I don't think this totally stateless idea is going to work.
            Well, it *could* work, but it places way to much burden on the
            client & server writers to properly manage concepts like
            keep-alive and dead peer detection. I'm now thinking we should
            go to more of a handle-based mechanism with a sockets-like
            flavor.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\tmpsetup\readme.txt ===
This directory contains temporary scripts to install UL.SYS to and remove
UL.SYS from a test machine.

Note: These scripts require that REGINI.EXE and SC.EXE be on your path.

Note: These scripts just muck with the service controller and registry
settings; they don't actually copy UL.SYS onto your test machine. UL.SYS
must be copied to the %windir%\system32\drivers directory before use.

Execute INSTALL.BAT to install UL.SYS, REMOVE.BAT to remove it. Duh.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ul\ulperf\ulperf.ini ===
[info]
drivername=UL
symbolfile=ulctrs.h

[languages]
009=English
000=Neutral

[text]
UL_COUNTER_OBJECT_009_NAME=HTTP Config Groups
UL_COUNTER_OBJECT_009_HELP=The HTTP Config Groups object includes counters specific to the http driver (ul.sys).

UL_BYTES_SENT_COUNTER_009_NAME=Bytes Sent/sec
UL_BYTES_SENT_COUNTER_009_HELP=Bytes Sent/sec is the rate that data bytes are sent by this Config Group.

UL_BYTES_RECEIVED_COUNTER_009_NAME=Bytes Received/sec
UL_BYTES_RECEIVED_COUNTER_009_HELP=Bytes Received/sec is the rate that data bytes are received by this Config Group.

UL_CURRENT_CONNECTIONS_NUMBER_009_NAME=Current Connections
UL_CURRENT_CONNECTIONS_NUMBER_009_HELP=Current Connections is the total number of http connections made to this machine.

UL_CURRENT_REQUESTS_NUMBER_009_NAME=Current Requests
UL_CURRENT_REQUESTS_NUMBER_009_HELP=Current Requests is the total number of requests outstanding with this Config Group.

UL_QUEUED_REQUESTS_NUMBER_009_NAME=Queued Requests
UL_QUEUED_REQUESTS_NUMBER_009_HELP=Queued Requests is the total number of requests not yet delivered to any App Pools on this machine.

UL_ATTACHED_PROCESSES_NUMBER_009_NAME=Attached Processes
UL_ATTACHED_PROCESSES_NUMBER_009_HELP=Attached Processes is the total number of processes that are servicing the App Pool hosting this Config Group.




UL_COUNTER_OBJECT_000_NAME=HTTP Config Groups
UL_COUNTER_OBJECT_000_HELP=The HTTP Config Groups object includes counters specific to the http driver (ul.sys).

UL_BYTES_RECEIVED_COUNTER_000_NAME=Bytes Received/sec
UL_BYTES_RECEIVED_COUNTER_000_HELP=Bytes Received/sec is the rate that data bytes are received by this Config Group.

UL_BYTES_SENT_COUNTER_000_NAME=Bytes Sent/sec
UL_BYTES_SENT_COUNTER_000_HELP=Bytes Sent/sec is the rate that data bytes are sent by this Config Group.

UL_CURRENT_CONNECTIONS_NUMBER_000_NAME=Current Connections
UL_CURRENT_CONNECTIONS_NUMBER_000_HELP=Current Connections is the total number of http connections made to this machine.

UL_CURRENT_REQUESTS_NUMBER_000_NAME=Current Requests
UL_CURRENT_REQUESTS_NUMBER_000_HELP=Current Requests is the total number of requests outstanding with this Config Group.

UL_QUEUED_REQUESTS_NUMBER_000_NAME=Queued Requests
UL_QUEUED_REQUESTS_NUMBER_000_HELP=Queued Requests is the total number of requests not yet delivered to any App Pools on this machine.

UL_ATTACHED_PROCESSES_NUMBER_000_NAME=Attached Processes
UL_ATTACHED_PROCESSES_NUMBER_000_HELP=Attached Processes is the total number of processes that are servicing the App Pool hosting this Config Group.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\iisrearc\ulrtl\readme.txt ===
This is the SLM project for the IIS Rearchitecture Team

ulrtl - Shared kernel/user-mode library.

kernel      ... Builds the kernel-mode library (ulrtlk.lib)
user        ... Builds the user-mode library (ulrtlu.lib)


Rules for adding new routines to these libraries:

1.  Do not depend on anything defined in WINDOWS.H or anything that includes
    WINDOWS.H. Getting WINDOWS.H included in kernel-mode code is a complete
    pain and will not be allowed. Use the types & constants defined in NT.H,
    NTRTL.H, and NTURTL.H. If you need something that's not defined in these
    header files, dont include it in ULRTL.

2.  If you change anything related to ULRTL, remember to rebuild it for both
    kernel- and user-mode.

3.  If you change anything in ULRTL.H, remember to rebuild all kernel- and
    user-mode code that reference it.

4.  Kernel-mode routines can be tagged (through a pragma) as either paged or
    nonpaged. If you are not 100% sure of how to tag a new routine you're
    adding, leave it as nonpaged (the default) and add a CODEWORK comment
    so we know to revisit the routine later. Routines that are unnecessarily
    nonpaged lead to excessive nonpaged pool consumption, which is not good,
    but routines that are paged but should not be lead to random & mysterious
    blue-screens, which is worse.

5.  The kernel-mode driver is written in C, so there's no point in adding C++
    routines or classes to ULRTL.

6.  The memory allocation functions differ greatly between kernel- and user-
    mode, so do not directly reference these. For example, kernel-mode
    concepts such as pool type, tagging, and priority have no counterpart
    in user-mode.

7.  Synchronization primitives differ greatly between kernel- and user-mode,
    so do not directly reference these. For example, theres no such thing as
    a CRITICAL_SECTION in kernel-mode.

8.  There are a limited number of C Run Time functions available in kernel-
    mode, so beware. If you want the actual list of supported CRT functions,
    see \\kernel\razzle2\src\ntos\init\ntoskrnl.src and look for the section
    labeled ntcrt.lib (at the end of the file).
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\extcomp.ini ===
[ASP]
Location=..\..\ASP\*

[CRW]
Location=CRW
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\common\binplace.txt ===
iisperf.pmc   retail
logtemp.sql   retail
msacal70.ocx  retail
iisnts.chm    retail
iisntw.chm    retail
iissmmc.chm   retail
iispmmc.chm   retail
IIsApp.vbs    retail
iisback.vbs   retail
IIsCnfg.vbs   retail
IIsFtp.vbs    retail
IIsFtpdr.vbs  retail
IIsScHlp.wsc  retail
iisvdir.vbs   retail
iisweb.vbs    retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\help\iisnts\htm\tutorial\adrot2.txt ===
redirect /iishelp/iis/htm/tutorial/redirect.asp
width 180
height 180
border 1
*
/iishelp/iis/htm/tutorial/bayshore.JPG
http://www.microsoft.com
See the Great Northwest...with Exotic Excursions!
50

/iishelp/iis/htm/tutorial/nyc.JPG
http://www.microsoft.com
Big Deals in the Big Apple
10

/iishelp/iis/htm/tutorial/natpark.JPG
http://www.microsoft.com
National Parks Online Reservations
10

/iishelp/iis/htm/tutorial/rock.JPG
http://www.microsoft.com
World Wide Importers
10

/iishelp/iis/htm/tutorial/nzealand.JPG
http://www.microsoft.com
New Zealand Scenic Tours
10
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\help\iisnts\htm\tutorial\template\adrot.txt ===
redirect /iishelp/iis/htm/tutorial/redirect.asp
width 180
height 180
border 1
*
/iishelp/iis/htm/tutorial/nyc.JPG
http://www.microsoft.com
Big Deals in the Big Apple
35

/iishelp/iis/htm/tutorial/natpark.JPG
http://www.microsoft.com
National Parks Online Reservations
25

/iishelp/iis/htm/tutorial/rock.JPG
http://www.microsoft.com
World Wide Importers
15

/iishelp/iis/htm/tutorial/nzealand.JPG
http://www.microsoft.com
New Zealand Scenic Tours
25
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\help\iisnts\htm\tutorial\adrot.txt ===
redirect /iishelp/iis/htm/tutorial/redirect.asp
width 180
height 180
border 1
*
/iishelp/iis/htm/tutorial/nyc.JPG
http://www.microsoft.com
Big Deals in the Big Apple
35

/iishelp/iis/htm/tutorial/natpark.JPG
http://www.microsoft.com
National Parks Online Reservations
25

/iishelp/iis/htm/tutorial/rock.JPG
http://www.microsoft.com
World Wide Importers
15

/iishelp/iis/htm/tutorial/nzealand.JPG
http://www.microsoft.com
New Zealand Scenic Tours
25
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\admin\adminextn\readme.txt ===
Purpose:
--------
This sample shows how  you can add your custom DCOM interfaces to 
Internet Information Server (IIS) 
=================================

Installation Steps:
-------------------
1. Build the adminExtn.dll.
2. Call regsvr32.exe adminExtn.dll to set proper registry
3. Restart IISadmin Service
===========================================================
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\admin\mtbsmon\readme.txt ===
purpose:
-------
This is a c++ sample application that demonstrate the use of IIS admin base object's 
IMSAdminBaseSink interface
==========================

process description:
--------------------
1. The COM libraries is initialized as multithreaded apartment. 
2. The connection point interface pointer is obtained.
3. a sink object contructed and IConnectionPoint->Advise() called to establish notification relation.
4. waiting for event notification from IIS Metabase and print out event info.
5. call IConnectionPoint->Undvise() and release related interface
=================================================================
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\admin\simpleadsutil\readme.txt ===
Purpose:
--------
This sample shows how to access IIS meta base info through  ADSI from C++.
The sample code is simplified to serve as education purpose.
==========================================================================

functions:
----------
There are three type of commands. ENUM, GET and SET
ENUM command will recursively display each metabase entry and corresponding object type
GET command will display the given ADSI property value.
Set command will set the given ADSI property to given value.
===========================================================

Usage:
------
SimpleADSutil.exe <ENUM|GET|SET> <ADSPATH> [PropertyValue]

Sample:
	SimpleAdsutil.exe enum w3svc/1/root
	SimpleAdsutil.exe get w3svc/1/ServerBindings
	SimpleAdsutil.exe set w3svc/1/ServerBindings ":80:"
==========================================================
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\asp\components\tiprot.txt ===
%% #1
Don't run with scissors.

%% #1
%% // Additional line of comments 
%% // Yet another line of comments
<FONT FACE="ARIAL,HELVETICA" SIZE="2">
  Let a <h1>smile</h1> be your umbrella.
</FONT>

%% #1 
<IMG SRC="nts_iis.gif">
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\iis_as_process.txt ===
Running IIS as a Process Instead of a Service
---------------------------------------------

When debugging ISAPI applications, ISAPI filters, server components, or other code you are writing to run on top of IIS or PWS on Windows NT, it is sometimes convenient to run IIS as a process. This allows you to start inetinfo.exe from the command line or from inside your development tools, instead of managing it as an NT service, as happens by default.

Included in the IIS documentation is a page describing in detail how to run IIS as a process. To view this page, bring up the Product Documentation from the Start menu. Then in the tree control on the left side, open the following path:
Microsoft Internet Information Server
	Advanced Web Application Development
		Debugging Your Application
			Establishing a Debug Environment
The steps are described toward the bottom of this documentation page.

Since making all the registry changes (steps 2 through 5 in the documentation page mentioned above) is tedious, we have included here two .reg files that automate these steps, both for switching from service to process, and back.

You must still manually make the usrmgr changes described in step 1 of the page mentioned above. That is, use the User Manager for Domains administration tool (USRMGR) to add the Log on as Service, Act as part of the operating system and Generate security audits rights on the local computer to the NT account you will use when debugging. This only needs to be done once. 

In this directory are two .reg files:
IISProcess.reg -- use to switch IIS to run as a process
IISService.reg -- use to switch IIS back to running as a service

NOTE: These reg files assume that IIS is installed in the standard location, i.e. "c:\winnt\system32\inetsrv\inetinfo.exe". If that is not the case, modify the .reg files appropriately before using them.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\crypto\readme.txt ===
The crypto sample shows the basic encrpyt and decrypt functions.
The crypto sample consists one COM component 3 asp files.

The component has two methods. 
Encrypt() method take two input strings, one as data, one as key. 
	  The function return the hex representation of encrypted data.
			
Decrypt() method take two input strings, one as hex representation of 
           encrypted data, one as key, and it returns the decrypted data.


Clear Anonymous authentication permission on encrypt.asp and decrypt.asp 
from internet service manager.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\readme.txt ===
Multilingual Simple and Power Samples
                =====================================


Table of Contents
=================

    Overview
    Developing Components
    C++
    ATL
    Installation
    Directory List
    Usage
    Sample ASP scripts
    Support
    Change Notes


Overview
========

Here, for your edification, are two Active Server Pages components,
each implemented in two different environments: C++/ATL (Microsoft
ActiveX Template Library) and Microsoft Visual Basic 5.

The implementations are functionally equivalent.  Each implementation
should behave in exactly the same way.  Each implementation is written
in an idiomatic style to demonstrate the best way to implement the
component in that environment.

The Simple component has one method (myMethod) and one property
(myProperty), which can be both retrieved (get) and modified (set).
MyMethod converts a string to uppercase; myProperty is a string in the
object that can be get or set.  There is nothing ASP-specific about
the Simple component and, if desired, it could be used from any OLE
container.

The Power component (found in the \intermediate folder) is a superset
of the Simple component.  In addition to myMethod and myProperty, it 
has myPowerMethod and myPowerProperty (gettable but not settable), 
which demonstrate some ASP-specific features.  Two other standard but
optional ASP methods are also provided: OnStartPage and OnEndPage.  
These methods bracket the lifetime of a page.  OnStartPage is needed 
to gain access to the intrinsic ASP objects: Request, Response, 
Server, Application, and Session.

MyPowerMethod and myPowerProperty make use of the Request and Response
objects: Request to gain access to the ServerVariables collection and
thereby the ScriptName and the HttpUserAgent (user's browser)
variables; Response to write directly back to the user's browser.
MyPowerProperty returns the name of the ASP script from which it was
called.  MyPowerMethod writes a browser-dependent message back to the
user's browser; one for Microsoft Internet Explorer, a different one
for anything else.


Developing Components
=====================

You can develop ASP components in Visual C++, Visual J++, Visual
Basic, or any other language that builds ActiveX COM objects.

These samples are written for IIS 4.0.  You must have the latest
version of IIS to compile and use these components.  You must
also have installed Microsoft Transaction Server (part of the Windows
NT 4.0 Option Pack).


C++
===

The C++ samples require Microsoft Visual C++ 5.0 or newer along with
ATL (which comes with VC5).

If you get an error about "don't know how to make asptlb.h" for the
power samples, you will need to copy

	<InstallDir>\iissamples\sdk\include

to your include directory, \Program Files\DevStudio\VC\include.  
The default installation directory is C:\Inetpub.

Finally you must have the lastest version of MS Transaction Server
installed (part of Windows NT 4.0 Option Pack).  Add the include path 
and library path of MTX before any system directories under
Tools:Options....  So your include path might look like this:
c:\program files\mts\include;c:program files\devstudio\vc\include;...
(depending on where you have installed MTX).

If you intend to build from the command line, you must edit 
vcvars32.bat accordingly as well.


ATL
===

The ATL samples also requires the latest version of ATL (Microsoft
Active Template Library).  ATL ships with Visual C++ 5.0.

ATL is the recommended library for writing ASP and other ActiveX
components in C++:
    * produces small, fast, industrial-strength components ("lean and mean")
    * supports all COM threading models (single, apartment, free)
    * supports IDispatch interfaces
    * dual interfaces are easy
    * supports the OLE error mechanism
    * methods are called very quickly
    * fine control over COM features ("closer to the metal")
    * many other features

For ATL 2.0, in order to add a method or a property to a component, it
is necessary to modify the .idl, .h, and .cpp files by hand.  With ATL
2.1, the wizards in Visual C++ 5.0 automates much of this for you.

To create a new component with ATL:
    * Start a New Project Workspace in Developer Studio
    * Select ATL COM AppWizard
    * Enter the name and location of the project
    * Hit Create.
    * Accept the defaults and hit Finish.

Now that you've created the project, it's time to create a COM object
within the project.  In Visual C++ 5.0, you can go to the Insert menu
where you'll see New ATL Object... or you can right-click on the classes
in the ClassView pane, where you'll also see New ATL Object....

When the ATL Object Wizard pops up, you'll see two panes.  In the left
pane, click on Objects.  In the right pane, double-click on Simple Object.
If you have VC 5.0, you'll see a number of additional objects; click on
ActiveX Server Component instead.

The ATL Object Wizard Properties dialog will appear.  On the Names tab,
type in the short name of your object.  The other names will be filled in
automatically.  You can edit them if you wish.  It's quite likely that
you'll want to edit the Prog ID.

On the Attributes tab, you may want to change the Threading Model to Both.
You probably don't need to support Aggregation.  You ought to Support
ISupportErrorInfo.  The other attributes should not need to be changed.

On the ASP tab, you can enable OnStartPage and OnEndPage methods and select
which of the ASP intrinsic objects you want to use.  However, it is now
recommended that you use the Object Context (which doesn't require the
OnStartPage and OnEndPage methods) rather than the Scripting Context (which
is what OnStartPage supplies you with).  This allows you to create more
powerful application state objects.  All the samples that need it use the
Object Context rather than the scripting context.

Note the use of the ATL wrapper classes CComBSTR, CComVariant,
CComPtr, and CComQIPtr in the ATL samples to simplify management of
COM data types.


Installation
============

To install these sample components, you must first compile them with
Microsoft Visual C++.  Load the individual project files into VC++ 
and build the DLLs.  You can also build the DLLs by just typing 
"nmake" in the command line.  Running nmake in the top level directory
(the directory this file is in) will build both the simple and power
DLLs.

These components may not compile correctly unless you have the correct
header and library files.  You may need to copy all the header files
in ...\iissamples\sdk\include (default is C:\Inetpub\...) to your VC++ 
include directory.  In addition, you may need to copy the MTS header 
and library files to the VC++ include and library directory.  The MTS 
header files are located in ...\MTS\include (default is C:\Program 
Files\...) while the MTS library files are located in ...\MTS\lib.

*** NOTE: The MTS header and library files are not installed by 
default.  In most cases, you will need to install this using the 
Windows NT 4.0 Option Pack setup.

If you intend to run these components on a machine other than the one 
on which they are compiled, you will need to copy the DLLs to the 
target machine and
    regsvr32 /s /c SAMPLE.dll
(the samples will be registered automatically on the machine they're
built on).

If you have trouble registering components, you may be using the
wrong version of RegSvr32.exe.  Please use the version installed by
default in the directory \<winnt-directory>\system32\inetsrv.


Directory List
==============

Directory        Description
---------        -----------

 Simple          C++ ATL Simple Sample
 Intermediate    C++ ATL Power Sample


Usage
=====

To use the samples, simply call Server.CreateObject("IISSample.XXX")
to create the object, where "XXX" is one of
    C++ATLSimple     C++ATLPower
Then you may access the object's methods and properties from your ASP
script.  Read any of the sample ASP scripts to discover how to use the
objects.


Sample ASP scripts
==================

You must copy the sample ASP scripts to a virtual directory (it need
not be a virtual root) on the IIS Server where you have installed the
sample components before they will work.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe ActiveServerPages [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Change Notes
============

Version 1.0 Beta 1: February 1997
---------------------------------

First release.


Version 1.0 Beta 2: March 1997
------------------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Better comments in Power components.


Version 2.0 Beta 3: September 1997
----------------------------------

* Updated for IIS4.0
* Using IObjectContext instead of IScriptingContext.


Version 2.1: October 1997
-------------------------

* Modified for the IIS4.0 SDK release
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\intermediate\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\intermediate\readme.txt ===
C++ ATL Power Sample
                        ====================


Table of Contents
=================

    Overview
    File List
    Change Notes


Overview
========

This is the ATL (ActiveX Template Library) version of the Power
sample object for Active Server Pages.  It demonstrates how to write
a component that makes use of the intrinsic ASP objects.

Please read the top-level ReadMe for the Simple and Power (found in
the \intermediate folder) samples.

Look at CATLPwr.idl, Power.h, and Power.cpp to see how these
methods and properties are declared and implemented.


File List
=========

File             Description
----             -----------

 Power.cpp       the C++ source code for the power ATL component
 Power.h         declarations for CPower
 CATLPwr.idl     declaration of IPower, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 CATLPwr.mak     the Developer Studio makefile
 CATLPwr.cpp     )
 CATLPwr.def     )
 CATLPwr.dsp     )
 CATLPwr.rc      )
 PowerPS.def     } Generated by the ATL COM AppWizard
 PowerPS.mak     )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

 Context.cpp    )
 Context.h      ) Shared support classes

 CATLPwr.asp     Demonstrates the use of the ATL Power Sample object


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Fixed Developer Studio makefile problems.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Better comments.


Version 2: September 1997
-------------------------
Upgraded to IIS4.0


Version 2.1: October 1997
-------------------------
Modified for the IIS4.0 SDK release
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\mtxsample\readme.txt ===
IIS Samples : MTXSample			

The mtxsample sample shows how to perform a transaction.  It involves multiple database updates using MTS/COM. 
The mtxsample sample is very similar to the old MTS SDK VC sample, but instead of using a VB application as the client, we use ASP as the client.

The component has three objects:

BankVC.Account
BankVC.CreateTable
BankVC.MoveMoney


Instructions:

1. Use Visual C++ or cl.exe to build the component from the included source files.  Do not register the dll.

2. In Component Services Manager, under COM+ Applications, create a New Application.  Select "Create an empty application" called IIS Sample, and select the "Library application" radio button.

3. Under IIS Sample, right-click on Components, New Component, "Install new component(s)".
Enter the path to your BankVC.dll.

4. Under IIS Sample, Components, right-click on each object listed, select Properties, Transactions, and set the "Transaction support" as follows:
	BankVC.Account     -> Required
	BankVC.CreateTable -> Requires New
	BankVC.MoveMoney   -> Required

Note: Asp provides a transaction by default. If you do not want this sample to use the transaction control provided by ASP, set the "Transaction support" for BankVC.MoveMoney to Requires New.

5. Browse to BankVC.asp.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\simple\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\cpp\simple\readme.txt ===
C++ ATL Simple Sample
                        =====================


Table of Contents
=================

    Overview
    File List
    Change Notes


Overview
========

This is the ATL (ActiveX Template Library) version of the Simple
sample object for Active Server Pages.  It demonstrates how to write
a component that has straightforward methods and properties.

Please read the top-level ReadMe for the Simple and Power (found in
the \intermediate folder) samples.

Look at CATLSmpl.idl, Simple.h, and Simple.cpp to see how these
methods and properties are declared and implemented.


File List
=========

File             Description
----             -----------

 Simple.cpp      the C++ source code for the simple ATL component
 Simple.h        declarations for CSimple
 CATLSmpl.idl    declaration of ISimple, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 CATLSmpl.mak    the Developer Studio makefile
 CATLSmpl.cpp    )
 CATLSmpl.def    )
 CATLSmpl.dsp    )
 CATLSmpl.rc     )
 SmplPS.def      } Generated by the ATL COM AppWizard
 SmplPS.mak      )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

 CATLSmpl.asp    Demonstrates the use of the ATL Simple Sample object


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Fixed Developer Studio makefile problems.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).

Version 2: September 1997
-------------------------
Upgraded to IIS4.0


Version 2.1: October 1997
-------------------------
Modified for the IIS4.0 SDK release
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\vb\intermediate\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\vb\simple\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\vb\intermediate\readme.txt ===
Visual Basic 5 Power Sample
                     ===========================


Table of Contents
=================

    Overview
    File List
    Change Notes


Overview
========

This is the Visual Basic 5 version of the Power sample object for
Active Server Pages.  It demonstrates how to write a component that
makes use of the intrinsic ASP objects.

Please read the top-level ReadMe for all the Simple and Power samples.

Look at VB5Pwr.cls to see how these methods and properties are
declared and implemented.


File List
=========

File             Description
----             -----------

.\Source

 VB5Pwr.cls      the source code for the VB5 power component
 VB5Pwr.vbp      the project file

.\Samples

 VB5Pwr.asp      Demonstrates the use of the VB5 Power Sample object


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Better comments.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\vb\simple\readme.txt ===
Visual Basic 5 Power Sample
                     ===========================


Table of Contents
=================

    Overview
    File List
    Change Notes


Overview
========

This is the Visual Basic 5 version of the Power sample object for
Active Server Pages.  It demonstrates how to write a component that
makes use of the intrinsic ASP objects.

Please read the top-level ReadMe for all the Simple and Power samples.

Look at VB5Pwr.cls to see how these methods and properties are
declared and implemented.


File List
=========

File             Description
----             -----------

.\Source

 VB5Pwr.cls      the source code for the VB5 power component
 VB5Pwr.vbp      the project file

.\Samples

 VB5Pwr.asp      Demonstrates the use of the VB5 Power Sample object


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Better comments.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\iis_as_process.txt ===
Running IIS as a Process Instead of a Service
---------------------------------------------

When debugging ISAPI applications, ISAPI filters, server components, or other code you are writing to run on top of IIS or PWS on Windows NT, it is sometimes convenient to run IIS as a process. This allows you to start inetinfo.exe from the command line or from inside your development tools, instead of managing it as an NT service, as happens by default.

For information on this, please see ..\components\IIS_as_process.txt
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\java\samples\readme.txt ===
This directory contains test components for the Java ASP Component Framework, 
as well as ASP pages for you to use for working with the components.  To use, 
do the following:

1) Build these components using the latest Java SDK tools. If you are working 
   in VJ++, you will need to install the new compiler from the Java SDK. This 
   means copying jvc.exe, jps.dll, and msjvc.dll from the Java SDK installation 
   into your DevStudio\SharedIDE\bin directory. Also, make sure you set the 
   destination for the project (Project/settings/Output Directory) to the 
   %windir%\java\trustlib directory.

   Alternatively, you can use the pre-built .class files provided in this 
   directory. To do so, copy *.class to the %windir%\java\trustlib\IISSample
   directory.

2) Run regit.cmd, which will register your components with COM.  This
   assumes that javareg is on your path. Javareg comes with J++ and the Java
   SDK.

3) Register the dir that houses all of these .asp files as a vroot with IIS, 
   and mark it as scriptable.  This will allow you to run the asp files. There
   is a default.asp with links to the other .asp files.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\components\vb\readme.txt ===
Multilingual Simple and Power Samples
                =====================================


Table of Contents
=================

    Overview
    Developing Components
    Visual Basic 5
    Installation
    Directory List
    Usage
    Sample ASP scripts
    Support
    Change Notes


Overview
========

Here, for your edification, are two Active Server Pages components,
each implemented in two different environments: C++/ATL (Microsoft
ActiveX Template Library) and Microsoft Visual Basic 5.

The implementations are functionally equivalent.  Each implementation
should behave in exactly the same way.  Each implementation is written
in an idiomatic style to demonstrate the best way to implement the
component in that environment.

The Simple component has one method (myMethod) and one property
(myProperty), which can be both retrieved (get) and modified (set).
MyMethod converts a string to uppercase; myProperty is a string in the
object that can be get or set.  There is nothing ASP-specific about
the Simple component and, if desired, it could be used from any OLE
container.

The Power component (located in the \intermediate directory) is a 
superset of the Simple component.  In addition to myMethod and 
myProperty, it has myPowerMethod and myPowerProperty (gettable but not 
settable), which demonstrate some ASP-specific features.  Two other 
standard but optional ASP methods are also provided: OnStartPage and 
OnEndPage.  These methods bracket the lifetime of a page.  OnStartPage 
is needed to gain access to the intrinsic ASP objects: Request, 
Response, Server, Application, and Session.

MyPowerMethod and myPowerProperty make use of the Request and Response
objects: Request to gain access to the ServerVariables collection and
thereby the ScriptName and the HttpUserAgent (user's browser)
variables; Response to write directly back to the user's browser.
MyPowerProperty returns the name of the ASP script from which it was
called.  MyPowerMethod writes a browser-dependent message back to the
user's browser; one for Microsoft Internet Explorer, a different one
for anything else.


Developing Components
=====================

You can develop ASP components in Visual C++, Visual J++, Visual
Basic, or any other language that builds ActiveX COM objects.

These samples are written for IIS 4.0.  You must have the latest
version of IIS to compile and use these components.  You must
also have installed Microsoft Transaction Server (part of Windows NT
4.0 Option Pack).


Visual Basic 5
==============

These samples requires Visual Basic 5.0.
Follow these steps to build a project:

1) Open the .vbp file in Visual Basic.
2) From the File menu, select 'Make XXX dll...' and provide a dll name.

This procedure will build and register the sample component.


Installation
============

To install these sample components, you must first compile them with
Microsoft Visual Basic.  No binaries are supplied as these components 
are of interest only to developers.  If you intend to run these 
components on a machine other than the one on which they are compiled, 
you will need to copy the DLLs to the target machine and
    regsvr32 /s /c SAMPLE.dll
(the samples will be registered automatically on the machine they're
built on).

If you have trouble registering components, you may be using the
wrong version of RegSvr32.exe.  Please use the version installed by
default in the directory <winnt-dir>\system32\inetsrv.


Directory List
==============

Directory        Description
---------        -----------

 Simple          Visual Basic 5 Simple Sample
 Intermediate    Visual Basic 5 Power Sample


Usage
=====

To use the samples, simply call Server.CreateObject("IISSample.XXX")
to create the object, where "XXX" is one of
    VB5Simple        VB5Power
Then you may access the object's methods and properties from your ASP
script.  Read any of the sample ASP scripts to discover how to use the
objects.


Sample ASP scripts
==================

You must copy the sample ASP scripts to a virtual directory (it need
not be a virtual root) on the IIS Server where you have installed the
sample components before they will work.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe ActiveServerPages [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Change Notes
============

Version 1.0 Beta 1: February 1997
---------------------------------

First release.


Version 1.0 Beta 2: March 1997
------------------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Better comments in Power components.


Version 2.0 Beta 3: September 1997
----------------------------------

* Updated for IIS4.0
* Using IObjectContext instead of IScriptingContext.


Version 2.1: October 1997
-------------------------

* Modified for the IIS4.0 SDK release
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\chunk\readme.txt ===
CTETEST.DLL is a sample ISAPI HTTP Extension DLL to demonstrate Chunked 
Transfer Encoding. The Chunked Transfer Encoding modifies the body of a 
message in order to transfer it as a series of chunks, each with its own 
size indicator. Unlike "normal" HTTP file transfer, Chunked Transfer 
does not need to specify (or even know) the transfer length in advance. 
There is no "Content-Length:" header transferred. For complete details 
about Chunked Transfer Encoding, see section 3.6 "Transfer Codings" of 
the latest HTTP/1.1 specifications, available from 
http://www.w3.org/Protocols.


CTETEST.DLL sends the file specified on the query string. If no query 
string is present, or if the query string does not identify a readable 
file, CTETEST.DLL will return a plain text page describing its usage.

To install: 

Build the CTETEST.DSP project and copy the .DLL into virtual directory 
with "execute" permissions.

To run: 

Reference CTETEST.DLL file as a URL from the browser (currently only 
Microsoft Internet Explorer version 4.xx supports chunked encoding), 
specifying a URL on the query string.

For example, the following URL entered on the address line of Internet 
Explorer will transfer file SAMPLE.GIF, located in WWW root directory, 
encoded in 1024-byte chunks:

http://localhost/scripts/ctetest.dll?file=/sample.gif+chunksize=1024 


Disclaimer:

This sample is provided for the purpose of demonstrating an ISAPI 
extension. It has not been tested for use in a production environment 
and no support will be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\com\readme.txt ===
Description

InvokObjThreads is a sample ISAPI extension to demonstrate invoking a method from an ActiveX Automation Server. This sample creates and uses its own thread pool and work item queue to process the requests, thereby freeing up threads belonging to IIS that would have otherwise been used for the ISAPI..

Code Tour

Interaction with COM objects requires careful library and thread management because of the IIS thread pool architecture.

IIS maintains a pool of I/O threads that are used to service requests. These threads are also used to enter ISAPI filter and extension entry points, handling the callback functions. In the case of an out-of-process ISAPI, the threads are used up until the request is dispatched to the MTX instance responsible for handling the application. After either returning from the in-process ISAPI, or when the out-of-process request is handed off to MTX, the threads are returned to the thread pool.

The IIS thread that calls your initialization code in DllMain or GetExtensionVersion may not be the same thread that calls HttpExtensionProc. It's likely that different threads will call HttpExtensionProc from request to request. This architecture provides fast request processing on your Web server.

COM initialization, from CoInitialize or CoInitializeEx, affects the thread in which it's called. For this reason, you cannot initialize COM unless you uninitialize it before returning from your callback function. COM stores configuration information on a per-thread basis. When you call CoInitialize or CoInitializeEx, COM will use thread-local-storage to associate the information with the thread making the call.

As a result of this architecture, you have two design options to use COM from ISAPI:

You can do all of the initialization and uninitialization from within HttpExtensionProc for each request. This option forces initialization and uninitialization on each request. This causes performance to suffer, and leaves your code vulnerable to other ISAPI extensions that may have initialized COM on the IIS thread. CoInitialize and CoUninitialize need to be called in order. If one is called twice in a row, by different ISAPIs on the same thread, your users may see error 270. For more information on thread limitations, see the documentation on the MaxPoolThreads metabase key and the PoolThreadLimit metabase key. 
You can create your own thread pool and work item queue, initializing them once when the ISAPI extension is loaded. This option, demonstrated by the InvokObjThreads sample, is preferred. In a real-world scenario, the ISAPI developer needs to create a balance between the number of threads and the size of the queue to optimize performance. This balance is different for each ISAPI. If performance is poor, increase the number of threads or reduce the maximum queue size.  
Included with the project is an automation dll, GetUserName.dll. This is a simple ATL-based component with a single method, GetMyName(), which returns the user name for the context in which the component is running. The InvokObjThreads sample demonstrates creating an instance of the object from within an ISAPI extension, invoking the GetMyName() method, and returning the information to the browser. 

Important   This sample uses Microsoft specific compiler extensions included with Microsoft Visual C++, and requires version 5.0 of the compiler or later. If the sample is built using the VC++ debug build option, the sample will use OutputDebugString to report the status of the worker threads. This will help to demonstrate the behavior of the thread pool at run time.


To Install:

Build the InvokObjThreads.dsw project and copy the resulting
InvokObjThreads.dll file into a virtual directory containing
execute permissions.

Register GetUserName.dll with the following command line.  If you
do not do this, the browser will report error 800401f3:

   regsvr32 getusername.dll

To Run:

Reference the InvokObjThreads.dll file as a URL from a browser.  For
example, the following URL entered on the address line of
Internet Explorer will demonstrate the dll:

   http://<computername>/scripts/invokobjthreads.dll

Disclaimer:

This sample, and the included automation dll, is provided for the
purposes of demonstrating an ISAPI extension.  It has not been
tested for use in a production environment and no support will
be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\formdump\readme.txt ===
FORMDUMP - Form Decoder and Dumper, an Internet Information Server extension

NOTE: FORMDUMP has been revised from its first release

This sample is a Microsoft Internet Server extension, similar to CGI
extensions common to many internet servers.  FORMDUMP illustrates how
to write a DLL that can be used to obtain form data from a web
browser, and also how to build a reply to the form.

This version of FORMDUMP incorporates two new features useful in
exploring how forms are submitted.  The original version of FORMDUMP
is structured into two major parts: organizing inbound data
into a memory structure, and using that data to build a HTML page.
This version adds a dump of the server variables as well as the
security context in which the DLL thread runs in.

HttpExtensionProc does the following:

1. Sends the header of the HTML response
2. Parses inbound form fields and send them back as HTML
3. Determines the security context in which the thread is running,
   and return the domain and user as HTML
4. Uses GetServerVariable to retrieve all server variables, and
   send them back as HTML
5. Sends the footer of the HTML resoponse
6. Returns control to IIS

This version also adds an HtmlPrintf() function in html.h.

To build this sample, you must have the Internet SDK installed,
and the environment of your compiler properly set.  A Visual C++ 
4.0 makefile is included.

The following files are included in the sample:

FORMDUMP.CPP - The main source file and entry point for the DLL.

KEYS.CPP     - A set of reusable form data decoding functions.  They
               implement an interface that you can use in your own
               extension.

HTML.CPP     - A set of wrappers for common HTML features.  These
               wrappers can also be reused.

KEYS.H       - The header file for the external interface
               implemented in KEYS.CPP.

HTML.H       - The header file for all functions available in HTML.CPP.

FORMDUMP.DEF - The definition file (one is required for all Win32 DLLs).

FORMDUMP.MAK - A Visual C++ 4.0 make file.

MAKEFILE     - A generic make file


NOTE: The source files all have .CPP extensions, though they really don't
rely on any C++ specific features.  However, you can use C++ features,
and if you use any of these .CPP files, you do not need extern "C".

To Build the DLL
----------------

Simply run NMAKE in the directory containing FORMDUMP.CPP, KEYS.CPP, HTML.CPP,
and so on.  You must have the multi-threaded C Runtime libraries installed,
and your environment must point to:

PATH=C:\MSTOOLS\BIN;C:\COMPILER\BIN
INCLUDE=C:\MSTOOLS\INCLUDE;C:\INETSDK\INCLUDE
LIB=C:\MSTOOLS\LIB
WWWROOT=C:\INETSRV\WWWROOT
WWWSCRIPTS=C:\INETSRV\SCRIPTS

Where C:\MSTOOLS points to the Win32 SDK, C:\INETSDK points to the Internet
SDK, and C:\COMPILER points to your C++ compiler.

When setting WWWROOT and WWWSCRIPTS to your Internet Information Server
locations, use a local or mapped drive.  If you want to use UNC names, be
careful with using a $ in the name, because NMAKE will treat it as a macro.  
If you must have a $ in the environment variable, preceed it with two
carets (^^$) because both the command prompt and NMAKE will convert the
caret symbol.  Here is an example of how to map to \\myserver\c$: 

SET WWWROOT=\\myserver\C^^$\inetsrv\wwwroot

Another issue is the type of C Runtimes that are linked with the ISAPI 
extension. Make sure the DLL version of the C Runtimes is installed on your
server, in the SYSTEM32 directory.  For Visual C++, the DLLs are MSVCRT40.DLL
and MSVCR40D.DLL.  If these DLLs are not available, you will see error 500
when trying to access the DLL from a Web browser.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\io\asyncread\readme.txt ===
Asynchronous IO Support

ISAPI 1.0 support synchronous IO operations via callback 
methods ReadClient() and WriteClient(). The ability to 
support asynchronous operations is important; it frees 
up a server pool thread from being blocked to complete 
the IO operation. In addition, IIS server engine already 
has built in support to manage asynchronous IO operations 
using the completion ports and server thread pool. 

ISAPI 2.0 supports asynchronous write operation using 
the existing callback function WriteClient() with a special 
flag indicating that the operation has to be performed 
asynchronously. In addition, ISAPI 2.0 also provides a 
mechanism to request the server to transmit a file using 
the TransmitFile() .

ISAPI 3.0 supports asynchronous read operation from the 
client using ServerSupportFunction() with HSE_REQ_ASYNC_READ_CLIENT 
and a special flag indicating that the operation has to be 
performed asynchronously. In addition, the ISAPI application 
should submit a callback function and context by calling 
ServerSupportFunction() with HSE_REQ_IO_COMPLETION.

To use the areadcli.dll extension created by this directory, 
perform the following steps:

1) Create an IIS virtual root with execute permissions
2) Copy the isapi dlls into the directory
3) Point a browser at the virtual path

ie:	

	http://localhost/sdk/areadcli.dll


Disclaimer:

This sample is provided for the purposes of demonstrating an
ISAPI extension.  It has not been tested for use in a production
environment and no support will be provided for use in a
production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\io\asynctrans\readme.txt ===
FTRANS.dll - File Transfer using Asynchronous TransmitFile() inside ISAPI DLL

Overview
--------
FTRANS.DLL is a sample ISAPI Extension DLL to demonstrate Asynchronous 
TransmitFile functionality in the ISAPI interface. This dll illustrates
how one can use the ServerSupportFunction( HSE_REQ_TRANSMIT_FILE) option
to transmit an entire file from inside the ISAPI DLL. 

FTRANS.dll sends the file specified on the query string. It also converts
a virtual file-path (given in the URL name-space) into a physical file
name using the ServerSupportFunction( HSE_REQ_MAP_URL_TO_PATH) function.

Installation:
-------------
Build FTRANS.dll and copy the .dll into the virtual directory maked with
"execute" permissions.

To run: 
-------

Reference FTRANS.DLL file as a URL from the browser, 
specifying a file-name on the query string.

For example, the following URL entered on the address line of your browser
will transfer file SAMPLE.GIF, located in WWW root directory:

http://localhost/scripts/ftrans.dll?/sample.gif

Disclaimer:
-----------
This sample is provided for the purpose of demonstrating an ISAPI 
extension. It has not been tested for use in a production environment 
and no support will be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\io\asyncwrite\readme.txt ===
FWASYNC.dll - File Transfer using Asynchronous WriteClient() inside ISAPI DLL

Overview
--------
FWASYNC.DLL is a sample ISAPI Extension DLL to demonstrate Asynchronous 
WriteClient functionality in the ISAPI interface. This dll illustrates
how one can use the WriteClient() callback in the ECB to perform an
Asynchronous IO operation.

FWASYNC.dll sends the file specified on the query string. It also converts
a virtual file-path (given in the URL name-space) into a physical file
name using the ServerSupportFunction( HSE_REQ_MAP_URL_TO_PATH) function.
The ISAPI DLL setsup the callback context and function using the 
ServerSupportFunction( HSE_REQ_IO_COMPLETION) in the ECB.

Installation:
-------------
Build FWASYNC.dll and copy the .dll into the virtual directory maked with
"execute" permissions.

To run: 
-------

Reference FWASYNC.DLL file as a URL from the browser, 
specifying a file-name on the query string.

For example, the following URL entered on the address line of your browser
will transfer file SAMPLE.GIF, located in WWW root directory:

http://localhost/scripts/fwasync.dll?/sample.gif

Disclaimer:
-----------
This sample is provided for the purpose of demonstrating an ISAPI 
extension. It has not been tested for use in a production environment 
and no support will be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\keepalivewiththreads\readme.txt ===
This sample demonstrates how to maintain a Keep-Alive connection while using worker
threads in an ISAPI dll.  Please note the following points:

1. The way that this dll maintains the connection is in the following
line from WorkerFunction:

	dwState = HSE_STATUS_SUCCESS_AND_KEEP_CONN;
	pECB->ServerSupportFunction(pECB->ConnID, HSE_REQ_DONE_WITH_SESSION, &dwState, NULL, 0);

The passing of dwState is what tells IIS to keep the connection open.

2. A thread pool is used because if the thread that makes the above call
to server support function exits or is terminated, the connection will
be closed by IIS.  Using a thread pool avoids this. 

3. This dll creates a number of system objects, which are not
deallocated.  The presumption is that this dll will remain loaded until
the INETINFO.EXE process terminates; at which point these objects will
be released by the operating system.  However, if the WWW service is
stopped and restarted without the INETINFO.EXE process ending, these
objects will remain allocated, and new ones will be created when the dll
is reloaded.  If it is desired to implement this sample code in a
production environment, code to deallocate these objects should be added
in DllMain or TerminateExtension.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\io\syncwrite\readme.txt ===
FWRITE.dll - File Transfer using Synchronous WriteClient() inside ISAPI DLL

Overview
--------
FWRITE.DLL is a sample ISAPI Extension DLL to demonstrate Synchronous 
WriteClient functionality in the ISAPI interface. This dll illustrates
how one can use the WriteClient() callback in the ECB to perform an
Synchronous IO operation. It is intended for comparison against the
Asynchronous WriteClient() and Asynchronous TransmitFile() options.

FWRITE.dll sends the file specified on the query string. It also converts
a virtual file-path (given in the URL name-space) into a physical file
name using the ServerSupportFunction( HSE_REQ_MAP_URL_TO_PATH) function.

Installation:
-------------
Build FWRITE.dll and copy the .dll into the virtual directory maked with
"execute" permissions.

To run: 
-------

Reference FWRITE.DLL file as a URL from the browser, 
specifying a file-name on the query string.

For example, the following URL entered on the address line of your browser
will transfer file SAMPLE.GIF, located in WWW root directory:

http://localhost/scripts/fwrite.dll?/sample.gif

Disclaimer:
-----------
This sample is provided for the purpose of demonstrating an ISAPI 
extension. It has not been tested for use in a production environment 
and no support will be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\redirect\readme.txt ===
Description:

Redirect is a sample ISAPI extension to demonstrate redirecting
a request.  It redirects requests to a URL specified on the
query string.  If no query string is present, or if the query
string is not identified as a legal target for redirection,
Redirect.dll will return a page to the client with brief 
instructions for its use.

Redirections to a resource on the same server as the dll will
be handled by IIS and will be transparent to the browser.
Redirections to a resource on a different server will result
in an HTTP 302 response instructing the browser to obtain the 
resource from another location.

To Install:

Build the redirect.dsw project and copy the resulting Redirect.dll
file into a virtual directory containing execute permissions.

To Run:

Reference the Redirect.dll file as a URL from a browser, specifying
a URL on the query string.

For example, the following URL entered on the address line of
Internet Explorer will redirect the request to the specified
URL on a different server:

   http://server/scripts/Redirect.dll?http://server2/virtualdir/file.htm

The following URL entered on the address line will redirect the
request to the specified resource on the same server:

   http://server/scripts/Redirect.dll?/virtualdir/file.htm

Disclaimer:

This sample, and the included automation dll, is provided for the
purposes of demonstrating an ISAPI extension.  It has not been
tested for use in a production environment and no support will
be provided for use in a production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\extensions\servervariables\readme.txt ===
Description:

DumpVars is an ISAPI sample to demonstrate retrieving server
variables.  It uses GetServerVariable to get the value of each
server variable documented for IIS 4.0, and sends the list
of variables and values back to the client.

To Install:

Build the DumpVars.dsw project and copy the resulting
DumpVars.dll file into a virtual directory containing execute
permissions.

To Run:

Reference the DumpVars.dll file as a URL from a browser.  For
example, the following URL entered on the address line of
Internet Explorer will demonstrate the dll:

   http://server/scripts/dumpvars.dll

Disclaimer:

This sample is provided for the purposes of demonstrating an
ISAPI extension.  It has not been tested for use in a production
environment and no support will be provided for use in a
production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\filters\authfilt\readme.txt ===
Microsoft Internet Information Server
AuthFilt - A Filter for Advanced Authentication


AuthFilt demonstrates how to write an authentication filter based on an
external datasource. Authentication is the process of accepting or
denying a request from a client, so AuthFilt will be notified each time
an authentication request comes in. This sample uses a file
(c:\inetsrv\userdb.txt) to keep track of authorized users, but you might
modify this sample to access a database which holds user info.  The file
c:\inetsrv\userdb.txt does not exist.  Please look at Db.c to see how to
construct such a file and change the location of the file if you so desire.

For each authentication request, AuthFilt first looks in a cache of
recently authenticated users, and when that fails, AuthFilt looks in the
userdb.txt file. This shows an efficient way to authorize connections:
a cache allows the filter to quickly authenticate users, and because
each request comes in through the filter, speed is critical.

Steps to build the sample:

1. Type "nmake" at the command line in the AuthFilt directory.  If you 
   encounter problems with missing header files, make sure your INCLUDE
   variable points to the Win32 SDK include directory, the VC++ include
   directory, and the IIS 4.0 include directory.  Also, make sure LIB 
   variable points to the Win32 SDK lib directory.

OR

	Load the project file (Authfilt.dsp) into VC++ and build the project 
	by running the build AuthFilt.dll command.

2. Run the Internet Service Manager and add the AuthFilt.dll with a fully
   qualified path either as a global filter or a Website filter.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\psdksamp\isapi\filters\ckymunge\readme.txt ===
CkyMunge: ISAPI filter for ASP session state for cookieless browsers
  ====================================================================


Table of Contents
=================

    Overview
    Installation
    Build Notes
    Support
    Change Notes


Overview
========

This filter is a workaround that helps Active Server Pages deal with
browsers that don't understand cookies or that refuse to accept
cookies.  ASP uses the ASPSESSIONID cookie to maintain its session
state.  ASP expects the browser to send this cookie to the server with
every request that it makes.  The ASPSESSIONID cookie is unique to a
session.  Without it, ASP does not know which session the user owns and
it cannot keep the Session object up to date as the user moves from page
to page.

The CkyMunge filter works like this:

1. The filter receives a request for a particular URL.  If the
   headers of the request contain either a "Cookie: ASPSESSIONID=xxx"
   (IIS 3.0) header or a "Cookie: ASPSESSIONIDxxxxxxxx=xxx" (IIS 4.0)
   header, that ASPSESSIONID is recorded.  If the URL contains an
   encoded ASPSESSIONID (see step 2), the ASPSESSIONID is
   removed from the URL and a Cookie header is generated
   instead.  The ASPSESSIONID, if present, is recorded for this
   transaction.

2. CkyMunge filters all outgoing data.  When ASP sends out a page in
   response to the above request, CkyMunge removes the ASPSESSIONID
   Set-Cookie headers, if present (so that browsers with cookie
   warnings will have nothing to complain about), and munges any
   local, relative URLs embedded in the page (e.g., http:foo/bar.asp will
   become something like http:foo/bar.asp-ASP=PVZQGHUMEAYAHMFV).

3. If the user clicks on one of those modified URLs, the request
   comes back to the server (and filter) and step 1 starts all
   over again.

Notes:

* Filtering outgoing raw data is an expensive process.  Every
  single byte of data sent out by IIS must be streamed through
  the filter.  The filter goes to some pains to be smart about
  not unneccesarily processing data it's not interested in (such
  as GIFs), but there are unavoidable performance costs
  associated with IIS needing to copy all data from kernel memory to
  user memory.

  It is impossible to give an accurate prediction of how much
  performance will degrade on your server if the CkyMunge filter
  is installed.  On a lightly loaded server, the difference
  should not matter.  On a heavily loaded server, the
  performance might become unacceptable.

  It is up to you to measure the performance of your server both
  with and without the filter installed and see if the
  convenience of supporting users who won't accept cookies or
  users with old browsers outweighs the cost of poorer
  performance.

  User education may be a better solution in the long run.
      "The ASPSESSIONID cookie is not used to track longterm
      information about you.  The cookie is destroyed as soon
      as your browser shuts down and it is not stored on your
      machine.  It simply allows our webserver to keep track
      of what's in your shopping basket as you move from page
      to page in our application.

      "If your browser doesn't support cookies, we'd like to
      suggest that you upgrade to a newer one that does.  When
      you do, you'll enjoy our site much more because your
      browser will also support frames and tables and other
      newer features of HTML that we've made use of."

* If you elect not to install this filter, you can minimize the
  number of cookies sent by Active Server Pages in one of two ways:
    * Put something into the Session object:
        <% Session("something") = whatever %>
    * Put a global.asa into the virtual root for your
      application, with a do-nothing Session_OnStart subroutine.

  In IIS 4.0 and beyond, you can turn off session state (and hence
  cookies) entirely:
    * On an individual page, place
        <% @ EnableSessionState=False %>
      at the top of the page.
    * For an entire ASP application: Start the Internet Service Manager,
      select the website that you want to disable session state for,
      and open its Properties sheet.  On the Directory tab, select
      Configuration.  On the App Options tab, deselect Enable Session
      State.

* The filter has 3 modes: Off, On, and Smart.  In Off mode
  the filter does no work (a better way of turning it off would
  be to remove it from the list of filters).  In On mode, all
  URLs will be munged as normal and no cookies will be sent
  out.  In Smart mode, the filter will munge text and let cookies
  go out to the browser.  If the cookie comes back, it will
  stop munging URLs and use the cookies.  If the cookie doesn't
  come back, it will begin eating outgoing cookies and continue
  to munge URLs.  This will result in slightly better performance.
  The mode is controlled by a registry setting:
          HKEY_LOCAL_MACHINE\SYSTEM\
              Software\
                  Microsoft\
                      CkyMunge\
                          MungeMode (DWORD)

  A value of 0 is Off, 1 is On, and 2 is Smart.

* URLs will look ugly (http:foo/bar.asp-ASP=PVZQGHUMEAYAHMFV).
  Users can still bookmark them, however.  If the ASPSESSIONID
  is stale, the server will assign them a new session ID and
  start a new session.  If CkyMunge has been disabled in the
  meantime, then the URL will be unreachable.

* Only local, relative URLs are modified.  Absolute URLs are not
  modified (e.g., http://www.mycompany.com/foo/bar.asp).  Nor are
  local absolute URLS (e.g., http:/foo/bar.asp).  It is always good
  HTML style to use relative URLs wherever possible, to ensure
  location independence, so that moving a set of pages to a different
  server or a different directory will not require modification of
  the text.

* The filter does not work well with pure HTML pages (pages with
  an .HTM or .HTML extension) as the Set-Cookie header does not
  get sent out by IIS and hence the filter has no way of knowing how to
  modify any embedded URLs.  Rename your .HTM and .HTML pages to
  have a .ASP extension, even if they contain no server-side
  scripting.

* If you have some client-side scripting that dynamically
  constructs URLs in the user's browser (windows.navigate),
  these URLs will not be modified to contain the ASPSESSIONID.

* This filter is transparent to Active Server Pages.  It neither
  knows nor cares that the filter is present.


Installation
============

To install this on IIS 4.0 or IIS 5.0, you must:

    * Copy ckymunge.dll to somewhere suitable, such as \InetPub\Scripts
      or \Winnt\System32\InetSrv

    * Use the Internet Service Manager to add ckymunge.dll to the list
      of ISAPI filters to be used for your web site.  The Internet
      Service Manager is found in the Start Menu.

        Start\
            Programs\
                Administrative Tools\
                    Microsoft Internet Information Server\
                        Internet Service Manager

      Select the web server you wish to install this filter on and
      open its Properties sheet. Select on the ISAPI Filters tab and
      add the filter.

      If you have other filters installed, the order in which they are
      executed may become important.  Ckymunge is a medium-priority
      filter.

      You must stop and restart the Web server to load the new filter
      into memory.

    * By default, ASP transmits files to certain browsers (in
      particular, Internet Explorer 4.0 and later) using Transfer
      Chunk Encoding.  This is more efficient than sending the data as
      straight ASCII text.  However, the CkyMunge filter does not
      understand chunked encoding, so you must disable the encoding.

      IIS 4.0: Using the Registry Editor, add the following value
          HKEY_LOCAL_MACHINE\SYSTEM\
              CurrentControlSet\
                  Services\
                      W3SVC\
                          ASP\
                              Parameters\
                                  EnableChunkedEncoding = DWORD 0

      The value is not present by default and it defaults to 1.  As
      always, exercise great care when modifying the registry, as it is
      possible to do great damage to your system if you make a mistake.

      IIS 5.0: Use the adsutil script supplied in \InetPub\AdminScripts
      to modify the metabase.
          adsutil.vbs set w3svc/AspEnableChunkedEncoding False


Build Notes
===========

You can build this component with nmake at the command line.  Read the
Makefile for more details.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\sdksamp\asp\components\adrot.txt ===
Redirect http://localhost/IISSamples/sdk/asp/components/redirect.asp
width 88
height 31
border 1
*
nts_iis.gif
http://www.microsoft.com/ntserver/web/default.asp
Microsoft Internet Information Services
80
ie.gif
-
Microsoft Internet Explorer
20
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\img\sdksamp\asp\interaction\filelist.txt ===
Internet Information Services HomePage
"http://www.microsoft.com/ntserver/web"
Internet Explorer HomePage
"http://www.microsoft.com/windows/ie"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\inc\facility.txt ===
A range of FACILITY_INTERNET has been reserved for IIS components. IIS
components may use values between 0xc800 and 0xcbff in the "code" field
of an HRESULT.

Since there is no automated way to enforce this range (and protect against
duplicate codes) this text file tracks code usage. Whenever a new component
needs to allocate codes within the IIS range, please update this file.

.MC files used to generate HRESULTs allocated from this range should be of
the following format:

    SeverityNames=(Success=0x0,
                   CoError=0x2
                   )

    FacilityNames=(Internet=0xc
                  )

    Messageid=0xc??? Facility=Internet Severity=CoError SymbolicName=WHATEVER
    Language=English
    Your message goes here.
    .

Also, ensure the .MC file is compiled with "mc -o {other_switches}". The
-o switch tells MC.EXE to generate an "OLE-style" header file.


Range       Component       Path to .MC file
~~~~~       ~~~~~~~~~       ~~~~~~~~~~~~~~~~
c800-c80f   metadata.dll    iis\svcs\infocomm\metadata\interfac\mdmsg.mc
c810-cbff   {available}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\inc\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        28 July, 1995

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory internet\svcs\inc
     and details related to Internet Servers Common Headers


File            Description

README.txt      This file.
atq.h           Asyncronous Thread queue (ATQ) interface
buffer.hxx      BUFFER class for raw buffer objects
cachecfg.hxx    DISK cache configuration object
cpsock.h        Connection Packet Sockets interface
dbgutil.h       Debug utilities header (Template only)
eventlog.hxx    EVENT_LOG class for interfacing with event log module
fsconst.h       File system type constants
gsvcinfo.hxx    IGSVC_INFO Internet gateway service interface definition
igateway.hxx    Internet GATEWAY process interface
inetamsg.mc     Internet Svcs common dll message file
inetlog.w       Internet common Log interface
isvcinfo.hxx    ISVC_INFO  internet services common info interface
makefile
makefile.inc
mimemap.hxx     MIME_MAP class for MIME mapping
odbcconn.hxx    ODBC_CONNETION and other ODBC interface classes
parse.hxx       INET_PARSE module for parsing strings
pudebug.h       Program utility interface for debugging
sources         description file for NT Build
string.hxx      STRING class 
tcpcons.h       Internet services common constants defined.
tcpdata.h       Internet services common data
tcpdebug.h      Internet services (OLD ) debug interface (DEFUNCT)
tcpdll.hxx      Internet services include files header
tcpproc.h       Internet services procedures header
tscache.hxx     Internet Services Cache interface 
tsres.hxx       Internet services  resource class definition
tsunami.hxx     Internet Services TSUNAMI.LIB interface
tsvcinfo.hxx    Publishing services common interface 
xportcon.hxx    Internet services transport independent connections.


Implementation Details


Contents:

1. ISVC_INFO
2. Eventlog
3. RequestLog


1. ISVC_INFO:
        This is the common base class for all the Internet services. It
consists of information that is generic to all the services. The data consists
of 
  Supplied Data:
        ServiceName
        ServiceId
        Registry key name for parameters of service
        Module Name ( the dll name of service for resources)

  Internal Data:
        EventLog object
        Request Log Oject (InetLog)
        ModuleHandle
        fValid -- indicating if this object is valid
        tsLock -- resource lock
        AdminName name of administrator  (from registry)
        AdminEmail email for administrator (from registry)
        AdminComment comment about this server (from registry)


 From the ISVC_INFO object we derive two kinds of objects
        IGSVC_INFO  -- Internet Gateway service info object
        IPSVC_INFO  -- Internet Publishing service info object
  ( At present IPSVC_INFO is also called TSVC_INFO (old name))

 IPSVC_INFO:
        This object consists of common information for all Internet Publishing
services. Currently the services include Gopher, FTP and WWW services. The
data maintained by this object includes all those in ISVC_INFO and the
following:
  Supplied Data:
        Anonymous User Name
        Anonymous Password Secret Name
        Virtual Roots Secret Name
        Function pointer for initialization of service
        Function pointer for cleanup of service on termination
        
  Internal Data:
        fValid -- if this object is valid
        AnonymousUserToken
        tsCache - cache object for cached objects
        Accept IP address list ( from registry)
        Deny IP address list (from registry)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\last\iis_last_placefile.txt ===
admex.h         inetsrv\iissamp\sdk\include
        iadmw.h         inetsrv\iissamp\sdk\include
        iiis.h          inetsrv\iissamp\sdk\include
        iiscnfg.h       inetsrv\iissamp\sdk\include
        ilogobj.hxx     inetsrv\iissamp\sdk\include
        mdcommsg.h      inetsrv\iissamp\sdk\include
        mddefw.h        inetsrv\iissamp\sdk\include
        mdmsg.h         inetsrv\iissamp\sdk\include
        iadmext.h       inetsrv\iissamp\sdk\include
        asptlb.h        inetsrv\iissamp\sdk\include
        httpext.h       inetsrv\iissamp\sdk\include
        httpfilt.h      inetsrv\iissamp\sdk\include
	isrdns.lib      staxpt\iis\lib
	asp.tlb         staxpt\iis\inc
	keyring.h       staxpt\iis\inc
	wrapmb.h        staxpt\iis\inc
        wrapmb_a.lib    staxpt\iis\lib
        wrapmb_u.lib    staxpt\iis\lib
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\lkrhash\new.txt ===
2000/11
-------
* Refactored the code
* Public API
* C API
* Kernel-mode support
* Fixed a deadlock bug in the table lock. If you explicitly call
  Table::ReadLock and Table::WriteLock, you >need< this fix, or
  you will deadlock under stress.
* Fixed a bug in table compaction: until now, the table never
  actually compacted after elements were deleted, as the test
  for compaction always evaluated to `false'.
* Changed the signature of AddRefRecord. The second parameter is
  now an LK_ADDREF_REASON, instead of an int whose value is +1
  or -1. The reason code aids in debugging refcount leaks. If
  its value is negative, the refcount should be decremented;
  otherwise the refcount should be incremented.
* Changed behavior of ApplyIf locking: now locks one subtable
  at a time, instead of all subtables. Can use ReadLock or
  WriteLock to retain old behavior.
* Changed names and signatures of void LKRHashTableInit() and
  void LKRHashTableUninit(), to BOOL LKR_Initialize(DWORD) and
  void LKR_Terminate(), respectively.


2000/07/31
----------
* >REALLY< fixed the bug in Clear that left certain internal state
  variables in an inconsistent state. If you later
  inserted/deleted enough new records, LKRhash would AV. (The
  fix in the 2000/03/22 release did not work in all cases.)



2000/04/24
----------
* I added support for STL-style iterators
    * New iterators DO NOT LOCK the table or a bucket chain. In
      a multithreaded situation, it is YOUR responsibility to
      call WriteLock (or ReadLock) on the table before
      initializing any iterators, and to call WriteUnlock (or
      ReadUnlock) when you are finished.
    * The table provides begin() and end() methods. As the compiler
      isn't quite smart enough to realize that end() always
      returns a trivial empty iterator, a loop such as
	    MyTable::iterator iter;
	    for (iter = pTbl->begin();  iter != pTbl->end();  ++iter) ...
      is more efficiently expressed as
	    MyTable::iterator iter;
	    MyTable::iterator iterEnd = pTbl->end();
	    for (iter = pTbl->begin();  iter != iterEnd;  ++iter) ...
    * iterators can be pre- and post-incremented; i.e.:
	    ++iter and iter++
      Pre-increment is more efficient.
    * Table provides a constructor that accepts a range of
      iterators into another container.
    * Provides an Insert method that returns an iterator,
      pointing to the newly inserted record, or end() on
      failure.
    * Provides a Find method that returns an iterator pointing
      to the record with the passed-in key, or end() on
      failure.
    * Provides an EqualRange method that returns two iterators
      describing the range that contain all the records whose
      keys match the passed-in key. Until full support for
      multiple, identical keys is added, the range will contain
      either zero or one record(s).
    * Provides an Erase method that deletes the record pointed
      to by the iterator. Updates the iterator to point to the
      next record in the table.
    * Provides an Erase method that takes two iterators, which
      will delete all the records in the range described by the
      two iterators.
    * Unlike the old, deprecated iterators (CIterator), more
      than one iterator can be active at a time. It is best not
      to call the non-iterator insert/delete methods
      (InsertRecord, DeleteRecord, DeleteKey) while iterators
      are open, as the non-iterator methods can rebalance bucket
      chains, leading to invalid iterators, undercounting,
      and/or overcounting. This is true even if the table was
      WriteLocked, before the iterators were initialized. It is
      best to use the iterator Insert or Erase methods in such a
      case.
    * The iterators are reference-counted.

* I have provided an NTSD/CDB debugger extension, lkrdbg.dll,
  with one method, !lkrdbg.lkrhash:
    * !lkrhash -l[0-2] <addr>  will dump the hashtable at <addr>
			       at verbosity level l (default 0)
    * !lkrhash -g[0-2]	       will dump ALL hashtables at
			       at verbosity level l (default 0)
    * I have provided an easy-to-use customization mechanism in
      <lkrcust.h> to provide custom dumps for different
      hashtables. It's keyed off the pszName parameter used in
      the hashtable constructor. You can provide a custom dump
      routine for the table (to dump whatever other fields you
      might have added), as well as a custom dump routine for
      the record class stored by the hashtable. Provided three
      examples of customization, based on the samples.

* Fixed various build issues
    * All debug code is now bracketed with #ifdef IRTLDEBUG
      (instead of #ifdef _DEBUG). Currently equivalent, but you
      can control this in <irtldbg.h>
    * Fix all Unicode build issues. Code is now TCHAR-aware.
    * Added lkrhash.rc to provide a version resource

* Turned on `LKRhash' and `HashFn' namespaces by default. See readme.txt.
* Reorganized the samples into their own subtree.
* Removed more old code that used to be present so that I could
  test some changes (e.g., stuff bracketed by LKR_OLD_SEGMENT,
  LKR_SIGS_NODES, etc).
* Bucket Lock is once again CSmallSpinLock, unless
  LKR_DEPRECATED_ITERATORS is defined (off by default).
* Moved a lot of nested classes out of the table classes, to be
  top-level classes.
* Better compile-time and run-time assertions.



2000/03/22
----------
* Fixed a bug in Clear that left certain internal state variables
  in an inconsistent state. If you later inserted/deleted enough
  new records, LKRhash would AV.
* Changed BucketLock to CReaderWriterLock3 (recursive MRSW lock)
  to support certain scenarios, such as being able to call
  FindKey while enumerating with an old-style iterator. Slightly
  slower, but the speed improvements below more than compensate.
* Removed the 300-line example from the end of lkrhash.h. Now in
  hashtest.cpp, bracketed by SAMPLE_LKRHASH_TESTCLASS.
* Replaced TRACE macro with IRTLTRACE so as not to interfere with
  other TRACE macros (e.g., MFC's)
* Added dirs and sources files so that you can build LKRhash with
  the NT build environment.
* Added STATIC_ASSERT macro for compile-time assertions. The
  IRTLASSERT macro is still used for run-time assertions.
* Removed old code that used to be present so that I could test
  some changes (e.g., stuff bracketed by LKR_NEWCODE, LKR_MASK,
  LKR_SUBTABLE, LKR_COMPACT_DELETE, etc)
* Upped LK_DFLT_MAXLOAD to 6 (NODES_PER_CLUMP) to get better
  memory usage
* Added support for RockAll (not enabled by default)
* Turned CSegment into a concrete base class. Somewhat hacky but faster.
* Made the locks a little faster, esp. CReaderWriterLock3::IsWriteLocked
* Experimented with countdown loops (turned out to be slightly
  slower).
* Experimented with bitwise scrambling for subtable index
  calculation. Faster.
* Experimented with using a bitwise mask for subtable index
  calculation. Faster.
* Removed some inlines from lkrhash.h to improve modularity.
* Removed unimplemented Print methods.
* Bracketed global lists of hashtables with LKR_NO_GLOBAL_LIST.
* Reduced number of subtables to min(1, #CPUs) for LK_SMALL_TABLESIZE
  Was min(2, #CPUs). Max number of subtables is now 64.


1999/11/04
----------
* New reader-writer locks
* Smarter, faster simple spinlocks
* compact delete
* debugging support
* increased default load factor from 4.0 to 5.0 after reducing
  size of spinlock => reduced memory usage
* deprecated CIterator
* better error checking
* Win64 clean
* expose table locks => composition of operations
* global list
* faster hash scrambling function
* won't fail messily in low-memory situations
* fixed a race condition in some of the assertions
* enhanced test program
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\lkrhash\todo.txt ===
To-Do List for LKRhash
======================

TESTING
=======

* Write a C test, to directly test the C API. HashTest half does
  it, as it can use the public API and TypedHashTable.

* Build a publicly distributable test program, as a sample for
  customers. E.g., a dictionary component for ASP.

* hashtest: modify so that each thread can work on a completely
  separate hashtable, instead of sharing a global
  hashtable. This will allow us to discover the maximum possible
  scaling, which is probably less than the `ideal' scaling,
  #CPUs * 1-thread-perf.

* hashtest\kernel: split into driver and usermode test
  program. Usermode test program should take care of parsing the
  arguments and loading the test data into memory, then use an
  ioctl to pass it down to the kernel driver. The only code in
  the kernel driver,apart from LKRhash itself, should be the goo
  to crack the ioctl and DriverEntry. Usermode should print
  results.

* Better tests for ApplyIf family


KERNEL-MODE
===========

* kernel locks: should they block at all? consider implications
  if running on some usermode program's thread.

* Fix global objects in driver, including the global list of
  tables

* implement kernel-mode version of !lkrhash

* Think about running at DISPATCH_LEVEL instead of
  PASSIVE_LEVEL. Which functions should be pageable
  vs. non-pageable? Memory allocators? Lock types?

* Use <zwapi.h>?

* Memory allocation pool is a parameter for LKRhash
  public constructors, but it's ignored. Need virtual base for
  allocators? 

* DONE: Control debug spew: provide some way of setting
  g_fDebugOutputEnabled


LOCK IMPLEMENTATION
===================

* WriteLock: make all return a value instead of `void' that's
  passed into WriteUnlock. Ditto for ReadLock, etc. Needed for
  CKSpinLock and OldIrql. <sigh/>

* Put delays into the inner loop of the spins, to see if that
  reduces cache sloshing

* Enable per-class instrumentation for locks, as opposed to the
  current all-or-nothing system for per-lock
  instrumentation. Mostly present already, just needs a little
  factoring.

* Locks code. Move all member function implementations and enums
  into locks.cpp. Locks.h should be opaque declarations only.

* Rewrite a few key functions, such as CSmallSpinLock::WriteLock
  or CReaderWriterLock3::ReadOrWriteLock, in x86 assembler

* Build locks as a separate statically linked library

* Refcount the initialization/cleanup routines?

* Move CKSpinLock, CEResource, and CFastMutex into <Locks.h>

* DONE: Sprinkle KeEnterCriticalRegion (and KeLeaveCriticalRegion)
  in the various locks, to prevent APCs being delivered that might
  suspend the thread that holds the lock.


MISCELLANEOUS
=============

* Reduce the three versions of LKRhash in IIS6 to just this one.

* Currently, we key the number of subtables off LK_TABLESIZE
  times a function of the number of CPUs. However, we only need
  a lot of subtables under two circumstances: (a) many millions
  of elements (esp. on Win64, where total number of elements
  might exceed 2^32), or (b) high contention. There isn't
  necessarily a correlation between large table size and high
  contention. With the multi-reader locks, high contention only
  arises if there are a lot of insertions/deletions. If the
  table is not modified much after it's built, contention
  shouldn't be an issue and there's little advantage to having a
  lot of subtables.

* Provide a DeleteKey variant that returns a pointer to the
  record that is being removed from the table.

* Make AddRefRecord return the new reference count.

* Inline the array of pointers to subtables within
  CLKRHashTable, instead of dynamically allocating it.

* Inline _FindBucket by hand into Delete(Key|Record),
  InsertRecord, and Find(Key|Record).

* Factor out memory stuff into LKR-mem.cpp

* Add some instrumentation: #allocs, #expands, #contracts, etc.

* Add some flags to LKR_Initialize: default size, output
  tracing, etc

* Should ApplyIf(LKP_DELETE) call the Action function before
  deleting? Or add LKP_PERFORM_DELETE[_STOP]

* Add debug print routines for the other enumerations and for
  lock state to LKRhash.

* Experiment with having no bucket locks whatsoever, just
  subtable locks. This should make operations a little faster,
  but presumably will hurt multiprocessor scalability

* Implement fMultiKeys to provide support for multiple,
  identical keys. Needed for EqualRange, hash_multiset, and
  hash_multimap. See CLKRLinearHashTable::_InsertRecord for
  details on what needs to be changed.

* Provide implementations of the STL collection classes:
  hash_map, hash_set, hash_multimap, and hash_multiset. Must
  provide full implementation of STL iterator semantics
  (pair<key,value>)

* const_iterators for STL-style iterators

* consider providing some kind of implicit locking with
  STL-style iterators

* Add version.subversion number to CLKRLinearHashTable

* Build lkrhash as a separate statically linked library

* Better Statistics: #buckets, density, by subtable

* Experiment with new hash function from Paul Larson.

* Public API in LKR-hash.h: remove dependency on irtlmisc.h and
  irtldbg.h

* Use IsBadCodePtr to validate callback functions

* Make exception-safe. What happens if callback routines
  (AddRefRecord/ExtractKeys or ApplyIf) access violate (throw an
  SEH exception) or throw a C++ exception? Table and bucket
  locks won't be released, state variables may be corrupted,
  etc. LKRhash code should never throw any kind of exception

* Add some kind of auto object for readlocking or writelocking a
  table, so that the table automatically gets unlocked by
  auto-obj's destructor.

* Use auto_ptrs.

* Port to C# (Chris Tracy has started on this).
  Andre Rosenthal has started a port to Managed C++

* Make LKRhash available as a static library as well as a DLL

* DONE: break apart lkrhash.cpp: iterators, applyif, stats, etc

* DONE: Always step forward through all subtables, to avoid
  possible deadlock, when acquiring subtable locks

* DONE: Test new contraction algorithm.

* DONE: sublocks for ApplyIf

* DONE: Provide a C API wrapper
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\lkrhash\readme.txt ===
LKRhash: Larson-Krishnan-Reilly Hash Tables
===========================================

LKRhash is a fast, thread-safe, scalable, multiprocessor-friendly,
processor cache-friendly hashtable based on P.-A. Larson's linear hash
tables.  See lkrhash.h for details.

http://GeorgeRe/work/LKRhash/ is the official MS-internal
website for LKRhash. Please check there occasionally for
updates.

LKRhash can be redistributed to customers in binary format
only. Do not distribute the source outside of Microsoft.

Use VC 6.0 to build lkrhash.dsw.  This will build lkrhash.dll,
which contains the implementation of the hashtable, and
hashtest.exe, a test program.  To run, use
    .\release\hashtest.exe words.ini      (or files.ini)
(words.* and files.* can be found in data.zip)

Alternatively, if you're using the NT build environment, adapt
the `dirs' and `sources' files to your needs.

To make LKRhash work with other code, you'll need to
    #define USE_DEBUG_CRTS
before #including <irtldbg.h>, which is #included by <lkrhash.h>.
If you don't, you're likely to see a complaint from the compiler
that it can't find <pudebug.h>.

If you're using LKRhash in the same module where you're building
it, you'll need to add the following two lines to your .cpp files
before you include <lkrhash.h>
    #define DLL_IMPLEMENTATION
    #define IMPLEMENTATION_EXPORT
    #include <lkrhash.h>

Namespaces are now turned on by default. All functions declared
in <lkrhash.h> are declared in the `LKRhash' namespace, and all
functions declared in <hashfn.h> are in the `HashFn' namespace.
If you don't want this behavior, you'll need to add the following
two lines to your .cpp files before you include <lkrhash.h>
    #define __LKRHASH_NO_NAMESPACE__
    #define __HASHFN_NO_NAMESPACE__
    #include <lkrhash.h>
Alternatively, you can add the following
    using namespace LKRhash;
    using namespace HashFn;

LKRhash now comes with an NTSD debugger extension DLL,
lkrdbg. Since debugger extensions can't be used with msdev,
there's no msdev-style .dsp for lkrdbg. You'll have to build it
with the NT build environment (or build a makefile by hand). See
lkrdbg\readme.txt for more details.

/George V. Reilly  <GeorgeRe@microsoft.com>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\lkrhash\lkrdbg\readme.txt ===
LKRDBG is an NTSD debugger extension for LKRhash. You must
install it in a directory on your path, such as
%SystemRoot%\system32.

Help
====
!lkrdbg.help                help summary
!lkrdbg.help lkrhash        help on !lkrdbg.lkrhash

!lkrdbg.lkrhash
===============
!lkrhash [options] [<addr>] Dump LKRhash table at <addr>
    -g[0-2]                 Dumps global list of all the LKRhash tables
                            in the process, at verbosity level N
    -l[0-2] <addr>          Dump <addr> at verbosity level N
    -v <addr>               Dump <addr> very Verbosely

ToDo
====
Provide an extension mechanism for dumping different
instantiations of LKRhash differently
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\setup\imh6\dirmake.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\qfetools\spiisupd\readme.txt ===
The script in this directory is to be posted as part of a security bulletin for WinSE 7077.  What happens is that this script gets the list of error files from the iis.inf file in the %windir%\inf directory.  It then searches for the offending line of script code and replaces it.

It also fixes WinSE 12072, "Mis-spelling in online help -> sexual content" (Swedish W2K, file iiwacont.htm.)  The search text for this case is Swedish so this fix will not fire unless the entire line is found, which could only happen on a Swedish installation.  WinSE 15729 will include a fix which will cause this script to be run not only at SP2 install time, but also at IIS install time.  This will alleviate the need for service packs to include an entire replacement IIS CAB, at least for now.

It also fixes WinSE 16123, "ASP custom errors broken on SP2 GER rc", in which a "goto" keyword was inadvertently changed to "go to" in the file 500-100.asp.

The error files affected are:
400.htm
401-1.htm
401-2.htm
401-3.htm
401-4.htm
401-5.htm
403-1.htm
403-10.htm
403-11.htm
403-12.htm
403-13.htm
403-15.htm
403-16.htm
403-17.htm
403-2.htm
403-3.htm
403-4.htm
403-5.htm
403-6.htm
403-7.htm
403-8.htm
403-9.htm
403.htm
404-1.htm
404b.htm
405.htm
406.htm
407.htm
410.htm
412.htm
414.htm
500-100.asp
500-11.htm
500-12.htm
500-13.htm
500-14.htm
500-15.htm
500.htm
501.htm
502.htm
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\setup\imh6\readme.txt ===
info on things to watch out for when adding a file to iis
---------------------------------------------------------

Adding a binary file to iis

1. You have to change iisend.inx
   as well as iismid_*.inx
   as well as iisend_*.inx to make the file install

2. you'll have to change nt\inetsrv\iis\placefil.txt to make the file binplace to the binaries dir
   or nt\inetsrv\iis\placefil5.txt if it's for the iis51 built only binaries

3. you'll have to add the file to hardcode.lst
   (so that postbuild info on this file is created and so that localization knows that it must localizes this file)
   localization looks in this file to determine which files it needs to localize that are outside of the cabs...

4. You'll have to modify nt\mergedcomponents\setupinfs\layout.inx
   and make sure that the file gets downloaded during winnt32.exe for the right SKU (and only for those sku's!)

5. if the file is in regard to inetmgr, then adminpak needs to get notifed of any changes!

6. if the file is another counter then, have to investigate if it's a ia64 counter that needs to be installed in the syswow64 directory on ia64 machines!
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\setup\util\sldadd\iisdocpro.ini ===
[strings]

[sld_info]
Input_GUID={E66B49F6-4A35-4246-87E8-5C1A468315B5}
Input_BuildTypeMask=819
Input_Inf_FileName=%windir%\inf\iis_w.inf
Input_Inf_CopySections=iis_doc_install,iis_doc_install_wks
Input_Inf_SubstitutionSection=inf_dirid_substitutions
Output_AnsiFileName=iisdocpro.sld

[inf_dirid_substitutions]
32768=%11%\inetsrv
32769=%30%\inetpub\ftproot 
32770=%30%\inetpub\wwwroot
32771=%30%\inetpub\iissamples
32773=%30%\inetpub
32778=%10%\Java\TrustLib
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\setup\util\sldadd\iisdocsrv.ini ===
[strings]

[sld_info]
Input_GUID={E66B49F6-4A35-4246-87E8-5C1A468315B5}
Input_BuildTypeMask=819
Input_Inf_FileName=%windir%\inf\iis_s.inf
Input_Inf_CopySections=iis_doc_install,iis_doc_install_srv
Input_Inf_SubstitutionSection=inf_dirid_substitutions
Output_AnsiFileName=iisdocsrv.sld

[inf_dirid_substitutions]
32768=%11%\inetsrv
32769=%30%\inetpub\ftproot 
32770=%30%\inetpub\wwwroot
32771=%30%\inetpub\iissamples
32773=%30%\inetpub
32778=%10%\Java\TrustLib
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\staxinc\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the IIS. The first token on a line is the name of the DLL
; and the second token is the base virtual address, in hexidecimal. The third
; token is the maximum size of the DLL image file, including symbols.
;
; Virtual addresses from 0x68000000 to 0x68ffffff are reserved for the core
; IIS components.
;
; Virtual addresses from 0x67000000 to 0x67ffffff are reserved for IIS partner
; components.
;
; Any range marked _FREE_ is available for use.
;

usermode    0x01000000  0x60000000
admprox     0x68000000  0x00020000
admwprox    0x68020000  0x00020000
adrot       0x68040000  0x00020000

; *** deliberate sharing of address space ***
adsiis      0x68060000  0x00050000
adsiis_c    0x68060000  0x00050000
; *** deliberate sharing of address space ***

asp         0x680b0000  0x00090000
aspperf     0x68140000  0x00010000
authfilt    0x68150000  0x00010000
browscap    0x68160000  0x00020000
certmap     0x68180000  0x00040000
clusiis4    0x681c0000  0x00020000
cnfgprts    0x681e0000  0x00040000
coadmin     0x68220000  0x00020000
controt     0x68240000  0x00020000
convlog     0x68260000  0x00030000
counters    0x68290000  0x00020000
metautil    0x68e30000  0x00040000

; *** deliberate sharing of address space ***
festrcnv    0x682b0000  0x00010000
iisfecnv    0x682b0000  0x00010000
; *** deliberate sharing of address space ***

fscfg       0x682c0000  0x00040000
ftpctrs2    0x68300000  0x00010000
ftpmib      0x68310000  0x00010000
ftpsapi2    0x68320000  0x00010000
ftpsvc2     0x68330000  0x00040000
httpmib     0x68370000  0x00010000
httpodbc    0x68380000  0x00020000
iisadmin    0x683a0000  0x00010000
iischema    0x683b0000  0x00020000
iisclex4    0x683d0000  0x00030000
iiscrmap    0x68400000  0x00010000
iislog      0x68410000  0x00030000
iismap      0x68440000  0x00030000
iissuba     0x68470000  0x00010000
iissync     0x68480000  0x00010000
iisui       0x68490000  0x00060000
inetinfo    0x684f0000  0x00010000
inetins     0x68500000  0x00020000
w3ext       0x68520000  0x00040000
inetsloc    0x68560000  0x00020000
infoadmn    0x68580000  0x00010000
knfoadmn    0x68580000  0x00010000
infocomm    0x68590000  0x00070000
knfocomm    0x68590000  0x00070000
infoctrs    0x68600000  0x00010000
ipudll      0x68610000  0x00010000
isatq       0x68620000  0x00030000
ksatq       0x68620000  0x00030000
iscomlog    0x68650000  0x00020000
ism         0x68670000  0x00020000
iwrps       0x68690000  0x00010000
jscript     0x686a0000  0x00120000
keyring     0x687c0000  0x00040000
logui       0x68800000  0x00020000

; *** deliberate sharing of address space ***
lonsint     0x68820000  0x00010000
lonsiw95    0x68820000  0x00010000
; *** deliberate sharing of address space ***

md5filt     0x68830000  0x00020000
mdsync      0x68850000  0x00020000
mdutil      0x68870000  0x00020000
wam         0x68890000  0x00030000
myinfo      0x688c0000  0x00020000
nextlink    0x688e0000  0x00020000
nsepm       0x68900000  0x00020000
pagecnt     0x68920000  0x00020000
permchk     0x68940000  0x00010000
pwsdata     0x68950000  0x00010000
radrun      0x68960000  0x00060000
regsvr32    0x689c0000  0x00020000
gdapi       0x689e0000  0x00010000
ssinc       0x689f0000  0x00020000
sspifilt    0x68a10000  0x00020000
status      0x68a30000  0x00020000
tools       0x68a50000  0x00020000
vbscript    0x68a70000  0x000d0000
w3ctrs      0x68b40000  0x00010000
w3key       0x68b50000  0x00020000
w3scfg      0x68b70000  0x00080000
w3svapi     0x68bf0000  0x00010000
w3svc       0x68c00000  0x00070000
_FREE_      0x68c70000  0x00010000
wamps       0x68c80000  0x00010000
wamreg      0x68c90000  0x00020000
msacal70    0x68cb0000  0x00080000
getfile     0x68d50000  0x00020000
vsetup      0x68d50000  0x00020000

; *** deliberate sharing of address space ***
inetdbg     0x68d70000  0x00020000
w3dbg       0x68d70000  0x00020000
bfdkd       0x68d70000  0x00020000
afd2kd      0x68d70000  0x00020000
bfdctrs     0x68d70000  0x00020000
; *** deliberate sharing of address space ***

; *** deliberate sharing of address space ***
ftrans      0x68d90000  0x00020000
fwasync     0x68d90000  0x00020000
fwrite      0x68d90000  0x00020000
iisprobe    0x68d90000  0x00020000
favlist     0x68d90000  0x00020000
srch        0x68d90000  0x00020000
volresp     0x68d90000  0x00020000
ssinc       0x68d90000  0x00020000
sampfilt    0x68d90000  0x00020000
; *** deliberate sharing of address space ***

admexs      0x68db0000  0x00020000
admxprox    0x68dd0000  0x00020000
metadata    0x68df0000  0x00060000
wamregps    0x68e50000  0x00010000
billbord    0x68e60000  0x00020000
rpcref      0x68e80000  0x00020000
svcext      0x68ea0000  0x00010000
inetmgr     0x68eb0000  0x00080000
_FREE_      0x68f30000  0x00120000

; 0x67000000 to 0x67ffffff are reserved for IIS partner components
; Please recompute the _FREE_ marker when adding a new component

abmsg       0x67000000  0x00010000 
autorply    0x67010000  0x00020000 
cdonts 	    0x67030000  0x00090000 
dapi 	    0x670C0000  0x000C0000 
ddrop 	    0x67180000  0x00010000 
dsmsg 	    0x67190000  0x00080000 
heapdet     0x67220000  0x00010000 
imapapi     0x67230000  0x00010000 
imapctrs    0x67240000  0x00010000 
imapmib     0x67250000  0x00010000 
imapsvc     0x67260000  0x00090000
imsexp 	    0x672F0000  0x000B0000 
imsg 	    0x673A0000  0x00010000 
isrpc 	    0x673B0000  0x00010000 
libxds 	    0x673C0000  0x00030000 
mbxsink     0x67410000  0x00020000 
mesh 	    0x67430000  0x00030000 
mimefilt    0x67460000  0x00010000 
msoert 	    0x67470000  0x00020000 
nntpapi     0x67490000  0x00010000 
nntpctrs    0x674A0000  0x00010000 
nntpfilt    0x674B0000  0x00010000 
nntpmib     0x674C0000  0x00010000 
nntpsvc     0x67500000  0x00160000 
pop3api     0x67660000  0x00010000 
pop3ctrs    0x67670000  0x00010000 
pop3mib     0x67680000  0x00010000 
pop3svc     0x67690000  0x00060000
routeht     0x676F0000  0x00050000 
routeldp    0x67740000  0x00040000 
rwnh 	    0x67780000  0x00010000
scripto     0x67790000  0x00020000 
seo 	    0x677B0000  0x000A0000
seos 	    0x67850000  0x00020000 
smtpapi     0x67870000  0x00010000 
smtpctrs    0x67880000  0x00010000 
smtpmib     0x67890000  0x00010000 
smtpsvc     0x678A0000  0x00100000
exstrace    0x679A0000  0x00020000 
perfapi	    0x679C0000	0x00020000
_FREE_	    0x679E0000	0x00120000
 
; 0x67000000 to 0x67ffffff are reserved for components that run in MMC.
; Please recompute the _FREE_ marker when adding a new component

adsiisex    0x66000000  0x00010000
dt_ctrl     0x66010000  0x00010000
jpudll      0x66020000  0x00010000
nntpadm     0x66030000  0x00040000
smtpadm     0x66070000  0x00040000
pop3adm     0x660B0000  0x00030000
imapadm     0x660E0000  0x00030000

; *** deliberate sharing of address space ***
nntpsnap    0x66110000  0x00070000
mnntpsnp    0x66110000  0x00070000
smtpsnap    0x66180000  0x00090000
msmtpsnp    0x66180000  0x00090000
; *** deliberate sharing of address space ***

imapsnap    0x66210000  0x00060000
pop3snap    0x66270000  0x00060000
_FREE_	    0x662D0000	0x00060000

; Temporary DB stuff to be removed Real Soon Now.
dbnmpntw    0x69e00000  0x00020000
ds32gt      0x69e20000  0x00010000
msadcbps    0x69e30000  0x00050000
msadce      0x69e80000  0x00100000
msadcer     0x69f80000  0x00010000
msadcf      0x69f90000  0x00030000
msadco      0x69fc0000  0x00080000
msadcor     0x6a040000  0x00010000
msadcs      0x6a050000  0x00040000
msader15    0x6a090000  0x00010000
msado15     0x6a0a0000  0x000b0000
msador15    0x6a150000  0x000b0000
msadrh15    0x6a200000  0x00070000
mscpxl32    0x6a270000  0x00020000
msdadc      0x6a290000  0x00050000
msdaenum    0x6a2e0000  0x00020000
msdaer      0x6a300000  0x00020000
msdaerr     0x6a320000  0x00010000
msdasql     0x6a330000  0x000f0000
msdasqlr    0x6a420000  0x00020000
msdatl      0x6a440000  0x00040000
msdatt      0x6a480000  0x00030000
msorcl32    0x69f20000  0x00020000
ntwdblib    0x6a910000  0x00070000
odbc32      0x6a980000  0x00080000
odbc32gt    0x6aa00000  0x00010000
odbccp32    0x6aa10000  0x00010000
odbccp32    0x69fd0000  0x00020000
odbccr32    0x6aa20000  0x00160000
odbccu32    0x6ab80000  0x00160000
odbcint     0x69ff0000  0x00020000
odbctrac    0x6adb0000  0x00040000
sqlgui70    0x6adf0000  0x000a0000
sqlsrv32    0x6ae90000  0x000d0000
sqlsvc70    0x6af60000  0x00030000
windbver    0x6b0a0000  0x00020000
; Temporary DB stuff to be removed Real Soon Now.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\staxinc\build\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.

adsiisex.dll    retail
aqadmin.dll		retail
aqadmcli.exe	staxpt\utest
aqdbgext.dll    staxpt\debug
aqueue.dll      retail
c2test.exe      staxpt\utest
cachtest.exe    staxpt\utest
cachtstx.exe    staxpt\utest
cat.dll         retail
chkcab.cmd      staxpt\dump
ciutest.exe     staxpt\utest
ddrop.dll       retail
dirwatch.exe    staxpt\utest
drive.exe       retail
dt_ctrl.dll     retail
dumpmsg.exe     staxpt\debug
exifstst.exe    staxpt\utest
exstrace.dll    retail
fcachdll.dll    retail
staxmem.dll     retail
fcachtst.exe    staxpt\utest
fhashex.exe     staxpt\utest
hashctst.exe    staxpt\utest
heapdet.dll     staxpt\utest
heaptst.exe     staxpt\utest
histtest.exe    staxpt\utest
ims.lst         symbolcd\cablists
imsg.dll        retail
imsinsnt.dll    retail
infomsg.nws     staxpt
ins.lst         symbolcd\cablists
isrpc.dll       retail
mailmsg.dll     retail
makecab.cmd     staxpt\dump
makecab1.cmd    staxpt\dump
mimefilt.dll    retail
mmdbgext.dll    staxpt\debug
nntp.mib        retail
nntpadm.dll     retail
nntpapi.dll     retail
nntpbld.exe     retail
nntpctrs.dll    retail
nntpctrs.h      retail
nntpctrs.ini    retail
nntpdbg.dll		staxpt\debug
nntpdrv.dll     retail
nntpfilt.dll    retail
nntpfs.dll      retail
nntphdr.ddf     staxpt\dump
nntphdr.inf     staxpt\dump
nntpinf.csv     staxpt\dump
nntpmib.dll     retail
nntpsnap.dll    retail
nntpsvc.dll     retail
ntfsdrv.dll     retail
ntfsdrct.h		retail
ntfsdrct.ini	retail
perfapi.dll     retail
qrydb.dll       retail
qryobj.dll      retail
qryxlate.exe    staxpt\utest
regfilt.vbs     staxpt
regtrace.exe    retail
rwexe.exe       staxpt\utest
rwnh.dll        retail
rwnhdll.dll     staxpt\utest
rwutest.exe     staxpt\utest
seo.dll         retail
seos.dll        retail
smtp.mib        retail
smtpadm.dll     retail
smtpapi.dll     retail
smtpctrs.dll    retail
smtpctrs.h      retail
smtpctrs.ini    retail
smtpdbg.dll		staxpt\debug
smtphdr.ddf     staxpt\dump
smtphdr.inf     staxpt\dump
smtpinf.csv     staxpt\dump
smtpmd.exe      retail
smtpmib.dll     retail
smtpsnap.dll    retail
smtpsvc.dll     retail
snprfdll.dll	retail
testart.exe     staxpt\utest
testdll.dll     staxpt\utest
testff.exe      staxpt\utest
testfix.exe     staxpt\utest
testhash.exe    staxpt\utest
testprop.exe    staxpt\utest
testqry.exe     staxpt\utest
testvr.exe      staxpt\utest
timetest.exe    staxpt\utest
tptest.exe      staxpt\utest
xovertst.exe    staxpt\utest
xtest.exe       staxpt\utest

NNTP_Service_Srv_{AC7092C9-747F-46AC-AD81-63CC8F249673}.sld     mantis
SMTP_Service_Pro_{FC78D5AB-EA05-46A2-AD15-C58A01152B26}.sld     mantis
SMTP_Service_Srv_{CB4224F7-2A1D-4806-9599-07AF98396F69}.sld     mantis
Mime_filter_{B3F97AC6-FD67-4762-92F1-F626E517B007}.sld		mantis
NNTP_Service_Administration_{27E72AF4-926B-4C6D-B8DA-6F4016205523}.sld	mantis
SMTP_Service_Administration_{5F4B7384-0E2D-4057-B55F-08B39D4D3D43}.sld	mantis
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\bugs.txt ===
The entries here pertain to CODE CLARITY/FIXES that are not BIG enough
 to be RAIDED


Infocomm bug/wish list for 3.0

1.  The caching routines under common should have a way of knowing whether
handle caching has been disabled.   This is useful for knowing when to
enable/disable the CacheScavenger in fcache.cxx
By:  - JohnsonA  4/8/96
Fixed:

2.  The quota is not consistently charged with the size of file
caching objects.
By:  PhilliCh  4/8/96
Fixed:

3.  W3/FTP/possibly other services should use a cached token class explicitely
to store user access tokens. Fix security.cxx such that it gives out
CACHED_TOKEN pointers rather than converting it into HTOKEN
By:  PhilliCh & MuraliK  4/8/96
Fixed:

4.  Improve atq\sched.cxx to use GetTimer() (from svcs\irtl\timer.c) rather
than GetTickCount().
By: MuraliK  4/9/96
Fixed: Phillich, 4/9/96

5. Split out infocomm\cache\  to make a reusable cache module.
By: MuraliK  4/9/96

6. Split out svcs\w3\server\ssi (Server Side Includes) as a separate ISAPI
dll rather than integrating SSI in the server engine.
By: MuraliK  4/9/96

7. Split out ISAPI Application DLL interface from w3 service engine, to
generate separate piece of standalond code for easy modifications.
By: MuraliK  4/9/96

8. For AtqTransmitFileEx and AtqTransmitFile, we don't look at the
HighPart portion of liBytesInFile.
NOTE: we do not support HighPart in w3 as well ( i.e. we fail the request
if HighPart != 0 )
By: JohnsonA 4/9/96
Fixed:

9. For infocomm, we should find a way of removing the extra thread
in tsvcinfo/isvcinfo waiting for the shutdown event to occur.
By: JohnsonA 4/10/96
Fixed:

10. Use the cached security token in infocomm/services interface. Today we 
 cast the cached object to HANDLE hToken, which will cause confusion in service
 code about what this really is.
By: MuraliK 7/16/96
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\readme.txt ===
This directory contains the sources for Active Service Pages and the core SSO.

Directory	Purpose
asp		Source for Active Server Pages DLL
doc		Documents related to Active Server Pages
easp		Source for tools for encrypting Active Server Pages
lib		Library binaries peculiar to ASP
makevers	Source for version stamping tool. Update this when the version # changes
misc		Queries for Deanli Raid database
perfmon		Source for Active Server Pages Performance Monitoring DLL
sso		Source for core Server Side Objects (adrot, browscap, nextlink)
supplied	binaries peculiar to ASP supplied by other groups (vbscrpt, jscript, etc)
tools		source, binaries, and batch files for tools useful to building ASP.DLL


To build everything, just type 'build' or 'build -c' in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\aspcmp\browser\browscap.ini ===
;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Microsoft Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 1.x
[IE 1.5]
browser=IE
version=1.5
majorver=1
minorver=5
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 1.5; Windows NT)]
parent=IE 1.5
platform=WinNT

[Mozilla/1.22 (compatible; MSIE 1.5; Windows 95)]
parent=IE 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 2.x
[IE 2.0]
browser=IE
version=2.0
majorver=2
minorver=0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.1;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.1
minorver=#1
Frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.5;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5
minorver=#5

[Mozilla/2.0 (compatible; MSIE 2.5b;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5b
minorver=#5
beta=True

[Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)]
parent=IE 2.0
platform=Win95

[Mozilla/1.22 (compatible; MSIE 2.0c; Windows 95)]
parent=IE 2.0
platform=Win95
version=2.0c


[Mozilla/1.22 (compatible; MSIE 2.01; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.01
minorver=#01

[Mozilla/1.22 (compatible; MSIE 2.0d; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.0d


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x
[IE 3.0]
browser=IE
Version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
Crawler=False

[Mozilla/2.0 (compatible; MSIE 3.01; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0a; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
javaapplets=false
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows 95)]
parent=IE 3.0
platform=Win95
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows NT)]
parent=IE 3.0
platform=WinNT
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AOL 3.0; Windows 95)]
parent=IE 3.0
platform=Win95
AOL=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows 95)]
parent=IE 3.0
platform=Win95
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows NT)]
parent=IE 3.0
platform=WinNT
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; Win 32)]
parent=IE 3.0
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95) Modified]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95;*)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT;*)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0A; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Win32)]
parent=IE 3.0
platform=Win32
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;*)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT;*)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.1; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows 95)]
parent=IE 3.0
version=3.01
minorver=01
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows NT)]
parent=IE 3.0
version=3.01
minorver=01
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_PowerPC)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_68000)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=Mac68K

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win95

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x Authenticode update
[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows NT)]
minorver=02
version=3.02
parent=IE 3.0
platform=WinNT
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT
AK=true
AuthenticodeUpdate=a

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/2.0 (compatible; MSIE 3*)]
parent=IE 3.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x
[IE 4.0]
browser=IE
Version=4.0
majorver=4
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
crawler=False
cdf=True

;;ie 4 beta 1
[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True
cdf=False

;;ie 4 beta 2.  This is not a commitment to a beta 2, but is being provided as a placeholder if needed.
[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True

;;ie 4 final release
[Mozilla/4.0 (compatible; MSIE 4.0; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False
crawler=True

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0 (compatible; MSIE 4.*)]
parent=IE 4.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 5.0
[IE 5.0]
browser=IE
Version=5.0
majorver=5
minorver=0
frames=True
tables=True
cookies=True
backgroundsounds=True
vbscript=True
javaapplets=True
javascript=True
ActiveXControls=True
Win16=False
beta=True
AK=False
SK=False
AOL=False
Update=False

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 95*)]
parent=IE 5.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 98*)]
parent=IE 5.0
platform=Win98
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows NT*)]
parent=IE 5.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 2000*)]
parent=IE 5.0
platform=Win2000
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*)]
parent=IE 5.0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 6.0
[IE 6.0]
browser=IE
Version=6.0
majorver=#6
minorver=#0
frames=True
tables=True
cookies=True
backgroundsounds=True
vbscript=True
javaapplets=True
javascript=True
ActiveXControls=True
Win16=False
beta=True
AK=False
SK=False
AOL=False
Update=False

[Mozilla/4.0 (compatible; MSIE 6.*; Windows 95*)]
parent=IE 6.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*; Windows 98*)]
parent=IE 6.0
platform=Win98
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*; Windows NT*)]
parent=IE 6.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*)]
parent=IE 6.0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Pocket IE
[Microsoft Pocket Internet Explorer/0.6]
browser=PIE
Version=1.0
majorver=1
minorver=0
frames=FALSE
tables=TRUE
cookies=FALSE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE

[Mozilla/1.1 (compatible; MSPIE 1.1; Windows CE)]
browser=PIE
Version=1.1
majorver=1
minorver=1
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE


; Pocket PC (aka Rapier)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; 240x320)]
browser=Pocket IE
version=4.0
majorver=#4
minorver=#0
platform=Windows CE
width=240
height=320
cookies=TRUE
frames=TRUE
backgroundsounds=TRUE
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE

; Pocket PC (aka Merlin)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; PPC; JavaScript; 240x320)]
browser=Pocket IE
version=4.1      
majorver=#4
minorver=#1
platform=Windows CE
width=240
height=320
cookies=TRUE
frames=TRUE
backgroundsounds=TRUE
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE  

; Smartphone (aka Stinger)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; Smartphone; JavaScript; *)]
browser=Pocket IE
version=4.1
majorver=#4
minorver=#1
platform=Windows CE
cookies=TRUE     
frames=FALSE
backgroundsounds=TRUE   
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE   


;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Netscape Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x
[Netscape 4.00]
browser=Netscape
version=4.00
majorver=4
minorver=00
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=True

[Mozilla/4.0b1 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b1 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

[Mozilla/4.0b2 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b2 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0*]
parent=Netscape 4.00

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 3.x
[Netscape 3.01]
browser=Netscape
version=3.01
majorver=3
minorver=01
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.01Gold (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01Gold*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01 (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01b1 (Win95; I)]
parent=Netscape 3.01
platform=Win95
beta=True

[Mozilla/3.01b1 (WinNT; I)]
parent=Netscape 3.01
platform=WinNT
beta=True

[Mozilla/3.01b1 (Win16; I)]
parent=Netscape 3.01
platform=Win16
Win16=True
beta=True

[Mozilla/3.01b1 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K
beta=True

[Mozilla/3.01b1 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC
beta=True

[Netscape 3.0]
browser=Netscape
version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.0Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K


[Mozilla/3.0Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0Gold (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0Gold*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0 (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0b3 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True

[Mozilla/3.0b3 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b3 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b3Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True
Win16=True

[Mozilla/3.0b5 (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (WinNT; U)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b5Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5a (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0b5a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5a (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5aGold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5aGold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5aGold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5aGold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6a (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6a (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b8Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b8Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Netscape 2.0]
browser=Netscape
version=2.0
majorver=2
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
beta=False
Win16=False

[Mozilla/2.0 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (16bit; U)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (Windows; I; 32bit)]
parent=Netscape 2.0
platform=Windows


[Mozilla/2.01 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.01 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=TRue

[Mozilla/2.01 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01GoldA1 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01I (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.01I (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01I (WinNT; I)]
parent=Netscape 2.0
platform=WinNT


[Mozilla/2.02 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT



;;;;;;;;;;;;;;;;;;;;;;
;;; Oracle Browser ;;;
;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Oracle 1.x
[Oracle 1.5]
browser=Power Browser
version=1.5
majorver=1.5
minover=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE

[Mozilla/2.01 (Compatible) Oracle(tm) PowerBrowser(tm)/1.0a]
parent=Oracle 1.5
platform=Win95

;;;;;;;;;
; Opera ;
;;;;;;;;;

[Opera Common]
browser=Opera
version=3
majorver=3
minorver=60
platform=Win32
frames=True 
tables=True
cookies=True
backgroundsounds=True
vbscript=False
javascript=True
javaapplets=True
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False

[Opera 2.0]
parent=Opera Common
browser=Opera
version=2
majorver=2
minorver=0
javaapplets=False

[Mozilla/2.1 (compatible; Opera/2.12; Windows 3.1)]
parent=Opera 2.0
version=2.12
minorver=12
platform=Win16
Win16=True;

[Mozilla/2.1 (compatible; Opera/2.12; Windows*)]
parent=Opera 2.0
version=2.12
minorver=12

;  fallback
[Mozilla/2.* (compatible; Opera/2.*)]
parent=Opera 2.0
platform=unknown


[Opera 3.0]
parent=Opera Common
version=3
majorver=3
minorver=0
javaapplets=False

[Opera 3.21]
parent=Opera 3.0
version=3.21
majorver=3
minorver=21

[Mozilla/3.0 (compatible; Opera/3.0; Windows 3.1)*]
parent=Opera 3.0
platform=Win31

[Mozilla/3.0 (compatible; Opera/3.0; Windows*)*]
parent=Opera 3.0

[Mozilla/3.0 (compatible; Opera/3.0; Windows 3.1) 3.21*]
parent=Opera 3.21
platform=Win16
win16=true

[Mozilla/3.0 (compatible; Opera/3.0; Windows*) 3.21*]
parent=Opera 3.21

[Opera 3.50]
parent=Opera Common
version=3.50
majorver=3
minorver=50

[Opera 3.51]
parent=Opera Common
version=3.51
majorver=3
minorver=51

; Matches both Mozilla 3 and 4 (and others :-)

[Mozilla/?.0 (compatible; Opera/3.0; Windows 3.1) 3.50*]
parent=Opera 3.50
platform=Win16
Win16=True
javaapplets=False

[Mozilla/?.0 (compatible; Opera/3.0; Windows*) 3.50*]
parent=Opera 3.50

[Mozilla/?.0 (compatible; Opera/3.0;*) 3.50*]
parent=Opera 3.50
platform=unknown

[Mozilla/?.0 (compatible; Opera/3.0; Windows 3.1) 3.51*]
parent=Opera 3.51
platform=Win16
Win16=True
javaapplets=False

[Mozilla/?.0 (compatible; Opera/3.0; Windows*) 3.51*]
parent=Opera 3.51

[Mozilla/?.0 (compatible; Opera/3.0;*) 3.51*]
parent=Opera 3.51
platform=unknown

[Opera 3.60]
parent=Opera Common
version=3.60
majorver=3
minorver=60

[Opera unknown system]
parent=Opera 3.60
platform=unknown

[Mozilla/?.0 (Windows 3.1;US) Opera 3.60b* ]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False
beta=true

[Mozilla/?.0 (Windows*;US) Opera 3.60b* ]
parent=Opera 3.60
beta=true

[Mozilla/?.0 (*;US) Opera 3.60b* ]
parent=Opera 3.60
platform=unknown
beta=true

[Mozilla/?.0 (Windows 3.1;US) Opera 3.60*]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 3.60*]
parent=Opera 3.60

[Mozilla/?.0 (*;US) Opera 3.60*]
parent=Opera 3.60
platform=unknown

[Mozilla/?.0 (Windows 3.1;US) Opera 3.*]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 3.*]
parent=Opera 3.60

[Mozilla/?.0 (*;US) Opera 3.*]
parent=Opera 3.60
platform=unknown

[Opera 4.0]
parent=Opera Common
version=4
majorver=4
minorver=0

[Mozilla/?.0 (Windows 3.1;US) Opera 4*]
parent=Opera 4.0
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 4*]
parent=Opera 4.0

[Mozilla/?.0 (*;US) Opera 4*]
parent=Opera 4.0
platform=unknown

; Fallbacks

[Mozilla/?.0 (compatible; Opera/3.0;*)]
parent=Opera unknown system

[Mozilla/?.0 (*;US) Opera*]
parent=Opera unknown system

[*Opera*]
parent=Opera unknown system

;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Default Browser    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;
[*]
browser=Default
Version=0.0
majorver=#0
minorver=#0
frames=False 
tables=True
cookies=False 
backgroundsounds=False
vbscript=False
javascript=False
javaapplets=False
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False
AuthenticodeUpdate=
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\checkin.txt ===
How to run the smoke tests:

1) Ssync to this full directory tree
2) Create a virtual root on your machine called "smoke" pointing at 
c:\denali\checkin\smoke and another vroot called 'gsmoke' pointing at c:\denali\checkin\gsmoke.
The virtual roots must have Execute permissions turned 
on and must have Read permissions turned off
3) CD to \denali\checkin, and type "smoke <number of threads> [email]**".  If any test fails, it will show a 
line reading "<FILE>:FAIL".  In this case,  logs\<file>.log will have the full details 
of all the tests run.  You will need to correct your problem before checking in.
4) Attempt to shut down IIS.  If IIS fails to shut down after running the smoke 
test, then you have a failure (shutdown should be automatic at this point pass.bat tries
to shutdown w3svc).


** type in your email if you have special scripts from test to
run.  for instance: 'smoke 1 davek' will run all of the smoke scripts and then any special 
scripts in the 'davek' directory under \denali\checkin\smoke. 

it runs the special scripts through a .bat called davek.bat - 
this will be checked in and updated by test as needed.  there will also be a readme.txt
in your dir with notes from the tester.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\scr.txt ===
http://localhost/smoke/loopmath.asp?
http://localhost/smoke/helloasp.asp?
http://localhost/smoke/hellohtm.asp?
http://localhost/smoke/response.asp?
http://localhost/smoke/query113.asp?
http://localhost/smoke/form123.asp?
http://localhost/smoke/addhead1.asp?
http://localhost/smoke/session1.asp?
http://localhost/smoke/session2.asp?
http://localhost/smoke/session3.asp?
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\adrot.txt ===
WIDTH 440
HEIGHT 60
BORDER 1

*

/advworks/multimedia/images/ad_1.gif
http://www.microsoft.com
Astro Mt. Bike Company
100
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\nextlink.txt ===
nlmd1.asp	description1	comment1
nlmd2.asp	description2	comment2
snlink.asp	smoke	smoke
nlmd3.asp	description3	comment3
nlmd4.asp	description4	comment4
nlmd5.asp	description5	comment5
nlmd6.asp	description6	comment6
nlmd7.asp	description7	comment7
nlmd8.asp	description8	comment8
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\adrot2.txt ===
WIDTH 440
HEIGHT 60
BORDER 1

/aw/multimedia/images/ad_1.gif
http://www.microsoft.com
Astro Mt. Bike Company
100
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\readme.txt ===
see \wagtest\docs\smoke.txt for SMOKE setup instructions
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\browscap.ini ===
; Last update 16-Jun-97

;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Microsoft Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 1.x
[IE 1.5]
browser=IE
version=1.5
majorver=1
minorver=5
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 1.5; Windows NT)]
parent=IE 1.5
platform=WinNT

[Mozilla/1.22 (compatible; MSIE 1.5; Windows 95)]
parent=IE 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 2.x
[IE 2.0]
browser=IE
version=2.0
majorver=2
minorver=0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.1;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.1
minorver=#1
Frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.5;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5
minorver=#5

[Mozilla/2.0 (compatible; MSIE 2.5b;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5b
minorver=#5
beta=True

[Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)]
parent=IE 2.0
platform=Win95

[Mozilla/1.22 (compatible; MSIE 2.0c; Windows 95)]
parent=IE 2.0
platform=Win95
version=2.0c


[Mozilla/1.22 (compatible; MSIE 2.01; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.01
minorver=#01

[Mozilla/1.22 (compatible; MSIE 2.0d; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.0d


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x
[IE 3.0]
browser=IE
Version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
Crawler=False

[Mozilla/2.0 (compatible; MSIE 3.01; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0a; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
javaapplets=false
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows 95)]
parent=IE 3.0
platform=Win95
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows NT)]
parent=IE 3.0
platform=WinNT
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AOL 3.0; Windows 95)]
parent=IE 3.0
platform=Win95
AOL=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows 95)]
parent=IE 3.0
platform=Win95
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows NT)]
parent=IE 3.0
platform=WinNT
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; Win 32)]
parent=IE 3.0
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95) Modified]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95;*)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT;*)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0A; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Win32)]
parent=IE 3.0
platform=Win32
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;*)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT;*)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.1; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows 95)]
parent=IE 3.0
version=3.01
minorver=01
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows NT)]
parent=IE 3.0
version=3.01
minorver=01
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_PowerPC)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_68000)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=Mac68K

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x Authenticode update
[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows NT)]
minorver=02
version=3.02
parent=IE 3.0
platform=WinNT
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT
AK=true
AuthenticodeUpdate=a

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/2.0 (compatible; MSIE 3*)]
parent=IE 3.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x
[IE 4.0]
browser=IE
Version=4.0
majorver=4
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
crawler=False
cdf=True

;;ie 4 beta 1
[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True
cdf=False

;;ie 4 beta 2.  This is not a commitment to a beta 2, but is being provided as a placeholder if needed.
[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True

;;ie 4 final release
[Mozilla/4.0 (compatible; MSIE 4.0; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False
crawler=True

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0 (compatible; MSIE 4.*)]
parent=IE 4.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Pocket IE
[Microsoft Pocket Internet Explorer/0.6]
browser=PIE
Version=1.0
majorver=1
minorver=0
frames=FALSE
tables=TRUE
cookies=FALSE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE

[Mozilla/1.1 (compatible; MSPIE 1.1; Windows CE)]
browser=PIE
Version=1.1
majorver=1
minorver=1
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE


;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Netscape Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x
[Netscape 4.00]
browser=Netscape
version=4.00
majorver=4
minorver=00
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=True

[Mozilla/4.0b1 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b1 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

[Mozilla/4.0b2 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b2 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0*]
parent=Netscape 4.00

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 3.x
[Netscape 3.01]
browser=Netscape
version=3.01
majorver=3
minorver=01
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.01Gold (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01Gold*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01 (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01b1 (Win95; I)]
parent=Netscape 3.01
platform=Win95
beta=True

[Mozilla/3.01b1 (WinNT; I)]
parent=Netscape 3.01
platform=WinNT
beta=True

[Mozilla/3.01b1 (Win16; I)]
parent=Netscape 3.01
platform=Win16
Win16=True
beta=True

[Mozilla/3.01b1 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K
beta=True

[Mozilla/3.01b1 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC
beta=True

[Netscape 3.0]
browser=Netscape
version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.0Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K


[Mozilla/3.0Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0Gold (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0Gold*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0 (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0b3 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True

[Mozilla/3.0b3 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b3 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b3Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True
Win16=True

[Mozilla/3.0b5 (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (WinNT; U)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b5Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5a (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0b5a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5a (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5aGold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5aGold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5aGold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5aGold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6a (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6a (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b8Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b8Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Netscape 2.0]
browser=Netscape
version=2.0
majorver=2
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
beta=False
Win16=False

[Mozilla/2.0 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (16bit; U)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (Windows; I; 32bit)]
parent=Netscape 2.0
platform=Windows


[Mozilla/2.01 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.01 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=TRue

[Mozilla/2.01 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01GoldA1 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01I (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.01I (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01I (WinNT; I)]
parent=Netscape 2.0
platform=WinNT


[Mozilla/2.02 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT



;;;;;;;;;;;;;;;;;;;;;;
;;; Oracle Browser ;;;
;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Oracle 1.x
[Oracle 1.5]
browser=Power Browser
version=1.5
majorver=1.5
minover=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE

[Mozilla/2.01 (Compatible) Oracle(tm) PowerBrowser(tm)/1.0a]
parent=Oracle 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Default Browser    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;
[Default Browser Capability Settings]
browser=Default
Version=0.0
majorver=#0
minorver=#0
frames=False 
tables=True
cookies=False 
backgroundsounds=False
vbscript=False
javascript=False
javaapplets=False
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False
AuthenticodeUpdate=
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\gsmoke\gsmoke.txt ===
//http://localhost/gsmoke/t1.htm http://localhost/gsmoke/t1.asp?
http://localhost/gsmoke/ssess1.asp
http://localhost/gsmoke/ssess2.asp
http://localhost/gsmoke/ssess3.asp
http://localhost/gsmoke/ssess4.asp
http://localhost/gsmoke/ssess5.asp
http://localhost/gsmoke/sapp1.asp
http://localhost/gsmoke/sadrot.asp
http://localhost/gsmoke/sbuffer.asp
http://localhost/gsmoke/scollect.asp
http://localhost/gsmoke/sobjtag.asp
http://localhost/gsmoke/send.asp
http://localhost/gsmoke/shead.asp
http://localhost/gsmoke/shelloa.asp
http://localhost/gsmoke/sobjtag.asp
http://localhost/gsmoke/sobjtag2.asp
http://localhost/gsmoke/shelloh.asp
http://localhost/gsmoke/sinclude.asp
http://localhost/gsmoke/snlink.asp
http://localhost/gsmoke/sredirec.asp
http://localhost/gsmoke/sreqhead.asp
http://localhost/gsmoke/sresphed.asp
http://localhost/gsmoke/srespons.asp
http://localhost/gsmoke/surlhtml.asp
http://localhost/gsmoke/svb2java.asp
http://localhost/gsmoke/sbrcap.asp
http://localhost/gsmoke/sform.asp
http://localhost/gsmoke/squery.asp
//http://localhost/gsmoke/scookie.asp
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke\smoke.txt ===
http://localhost/smoke/sapp2.asp
//http://localhost/smoke/t1.htm http://localhost/smoke/t1.asp?
http://localhost/smoke/ssess1.asp
http://localhost/smoke/ssess2.asp
http://localhost/smoke/ssess5.asp
http://localhost/smoke/sadrot.asp
//http://localhost/gsmoke/sapp4.asp
//http://localhost/gsmoke/sectest.asp
//http://localhost/gsmoke/adosel.asp
//http://localhost/gsmoke/adoupd.asp
http://localhost/smoke/sbuffer.asp
http://localhost/smoke/scollect.asp
http://localhost/smoke/send.asp
http://localhost/smoke/shead.asp
http://localhost/smoke/shelloa.asp
http://localhost/smoke/shelloh.asp
http://localhost/smoke/sinclude.asp
http://localhost/smoke/snlink.asp
http://localhost/smoke/sredirec.asp
http://localhost/smoke/sreqhead.asp
http://localhost/smoke/sresphed.asp
http://localhost/smoke/srespons.asp
http://localhost/smoke/surlhtml.asp
http://localhost/smoke/svb2java.asp
http://localhost/smoke/sbrcap.asp
http://localhost/smoke/sform.asp
http://localhost/smoke/squery.asp
//http://localhost/smoke/scookie.asp
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\samples\newdata.txt ===
If I have seen farther than others, it is because I was
standing on the shoulder of giants.
        -- Isaac Newton
If I have not seen as far as others, it is because giants
were standing on my shoulders.
        -- Hal Abelson
In computer science, we stand on each other's feet.
        -- Brian K. Reed
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\samples\techsupp.txt ===
%% // Tech Support people
<a href="mailto:jsmith">John Smith</a>, Tech Lead
%%
<a href="mailto:bkidd">Billy (the) Kidd</a>, Trouble Shooter
%% #3	// Jane is full-time, so make her the likeliest to be chosen
<a href="mailto:jdoe">Jane Doe</a>, Product Support
%% // Scare 'em away.  Bwah ha ha!
Sorry.  Tech Support<br>
is<br>
on<br>
<b>Strike!</b>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\pagecnt\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\samples\fortunes.txt ===
%% #9
<pre>
                          (####)
                        (#######)
                      (#########)
                     (#########)
                    (#########)
                   (#########)
   __&__          (#########)
  /     \        (#########)   |\/\/\/|     /\ /\  /\               /\
 |       |      (#########)    |      |     | V  \/  \---.    .----/  \----.
 |  (o)(o)       (o)(o)(##)    |      |      \_        /       \          /
 C   .---_)    ,_C     (##)    | (o)(o)       (o)(o)  <__.   .--\ (o)(o) /__.
  | |.___|    /____,   (##)    C      _)     _C       /       \      ()    /
  |  \__/       \     (#)      |  ,___|     /____,   )  \      >   (C_)   <
  /_____\        |    | |       /  \       /----'    /___\____    /___\
 /_____/ \       OOOOOO        /____\          ooooo             /|   |\
/         \     /      \      /      \        /     \           /       \

Homer          Marge           Bart            Lisa            Baby Maggie

                                THE SIMPSONS
</pre>
%%
"The best thing is to look natural, but it takes makeup to look natural."<br>
                -- Calvin Klein
%%
"The ability of two men to put on gloves, stand toe-to-toe, and pummel each
 other into insensibility... is what separates us from the animals."<br>
                -- Jim, on Taxi
%%
"The Wright Bothers weren't the first to fly.
 They were just the first not to crash."
%%
After Goliath's defeat, giants ceased to command respect.<br>
                -- Freeman Dyson
%%
After adding two weeks to the schedule for unexpected delays, add two
more for the unexpected, unexpected delays.
%%
After all, it is only the mediocre who are always at their best.<br>
                -- Jean Giraudoux
%%
After being asked by a waitress if he wanted his pizza cut into four
slices or eight: "Better make it four. I don't think I can eat eight
pieces."<br>
                -- Yogi Berra
%%
After living in New York, you trust nobody, but you believe
everything.  Just in case.
%%
After the game the king and the pawn go in the same box.<br>
                -- Italian proverb
%%
Beware of Programmers who carry screwdrivers.<br>
                -- Leonard Brandwein
%%
Better to have loved a short girl, than never to have loved a tall.
%%
Besides a mathematical inclination, an exceptionally good mastery of
one's native tongue is the most vital asset of a competent programmer.<br>
                -- Edsger W. Dijkstra
%%
Being right too soon is socially unacceptable
%%
Being average is being the best of the worst, or the worst of the best.
%%
An unbreakable toy is useful for breaking other toys.<br>
                -- Van Roy
%%
I love deadlines.  I like the whooshing sound they make as
they fly by.<br>
                -- Douglas Adams
%%
Hanging is too good for a man who makes puns; he should be
drawn and quoted.<br>
                -- Fred Allen
%%
<b>Television</b>: the bland leading the bland.<br>
                -- (Anonymous)
%%
The price one pays for pursuing any profession, or calling,
is an intimate knowledge of its ugly side.<br>
                -- James Baldwin
%%
<b>Politeness</b>, n.  The most acceptable hypocrisy.<br>
                -- Ambrose Bierce
%%
The only thing necessary for the triumph of evil is for good
persons to do nothing.<br>
                -- Edmund Burke
%%
Computers are like Old Testament gods; lots of rules and no mercy.<br>
                -- Joseph Campbell
%%
And now, what will become of us without any barbarians?
Those people were a kind of solution.<br>
                -- C.P. Cavafy   
%%
Tell me and I forget.
Show me and I remember.
Let me do and I understand.<br>
                -- Confucius
%%
There has been opposition to every innovation in the
history of man, with the possible exception of the sword.<br>
                -- Benjamin Dana
%%
I have known a vast quantity of nonsense talked about bad
men not looking you in the face.  Don't trust that
conventional idea.  Dishonesty will stare honesty out of
countenance, any day in the week, if there is anything to
be got by it.<br>
                -- Charles Dickens
%%
Technology is a way of organizing the universe so that man
doesn't have to experience it.<br>
                -- Max Frisch
%%
Everything has been said before, but since nobody listens,
we have to keep going back and beginning again.<br>
                -- Andre Gide
%%
The Net interprets censorship as damage and routes around it.<br>
                -- John Gilmore
%%
Naturally the common people don't want war ...  but after
all it is the leaders of a country who determine policy, and
it is always a simple matter to drag the people along.  All
you have to do is tell them they are being attacked, and
denounce the pacifists for lack of patriotism and exposing
the country to danger.  It works the same in any country.<br>
                -- Hermann Goering
%%
There's no money in poetry, but there's no poetry in money either.<br>
-- Robert Graves
%%
I must not fear.  Fear is the mind-killer.  Fear is the
little-death that brings total obliteration.  I will face my
fear.  I will permit it to pass over me and through me.  And
when it has gone past I will turn the inner eye to see its
path.  Where the fear has gone there will be nothing.  Only I
will remain.<br>
                -- Frank Herbert<br>
                <i>Dune</i>, 1965
%%
Passionate hatred can give meaning and purpose to an empty life.<br>
                -- Eric Hoffer
%%
Something always takes longer than you think, even if you take
Hofstadters law into consideration.<br>
                -- Douglas Hofstadter
%%
Among economists, the real world is often a special case.<br>
                -- Horngren
%%
Take your life in your own hands, and what happens?  A
terrible thing: no one to blame.<br>
                -- Erica Jong
%%
In the long run we are all dead.<br>
                -- John Maynard Keynes
%%
The illegal we do immediately.  The unconstitutional takes a
little longer.<br>
                -- Henry Kissinger
%%
Being called a poetess brings out the terroristress in me.<br>
                -- Audre Lorde
%%
You don't stick a knife in a man's back nine inches and then
pull it out six inches and say you are making progress.<br>
                -- Malcolm X
%%
If I'd known how old I was going to get, I'd have taken
better care of myself.<br>
                -- George Meany 
%%
Someone:<br>
Oh tempura!  Oh morays!
<p>
A second:<br>
On my office door I have a cartoon by Larson that shows
a bunch of eels standing around, sipping cocktails.  The
caption is: Social morays.
<p>
A third:<br>
Ok, now everybody sing!<br>
"When an eel bites your leg<br>
And the pain makes you beg,<br>
That's a moray!"<br>
(Thank you Fusco Brothers)<br>
                -- (Clever folks)
%%
Oxymorons: student athlete, military intelligence, military
justice, mercy killing, pollution-free.<br>
                -- (Various sages over the ages)
%%
A burro is an ass.  A burrow is a hole in the ground.  As a
reporter, you are expected to know the difference.<br>
                -- (UPI Stylebook)
%%
Nobody believes the official spokesman ... but everybody
trusts an unidentified source.<br>
                -- Ron Nessen
%%
After all, what is your hosts' purpose in having a party?
Surely not for you to enjoy yourself; if that were their
sole purpose, they'd have simply sent champagne and women
over to your place by taxi.<br>
                -- P.J. O'Rourke
%%
I have often had the impression that, to penguins, man is
just another penguin -- different, less predictable,
occasionally violent, but tolerable company when he sits
still and minds his own business.<br>
                --  Bernard Stonehouse
%%
The nice thing about standards is that there are so many of
them to choose from.<br>
                -- Andy Tanenbaum
%%
Man invented language to satisfy his deep need to complain.<br>
                -- Lily Tomlin
%%
Niklaus Wirth has lamented that, whereas Europeans pronounce
his name correctly (Ni-klows Virt), Americans invariably
mangle it into (Nick-les Worth).  Which is to say that
Europeans call him by name, but Americans call him by value.<br>
                -- (Unknown)
%%
Documentation is the castor oil of programming; the
managers know it must be good because programmers hate
it so much.<br>
                -- Weinberg
%%
[Of chess:] It is important to realize that you cannot win
unless your opponent makes a mistake.  There is no possibility
of creating a win solely out of your own genius.<br>
                -- Ken Whyld
%%
Always forgive your enemies; nothing annoys them so much.<br>
                -- Oscar Wilde
%%
                        <b>HOW TO PROVE IT, PART 1</b>

<dl>
<dt>proof by example:</dt>
<dd>    The author gives only the case n = 2 and suggests that it
        contains most of the ideas of the general proof.</dd>

<dt>proof by intimidation:</dt>
<dd>    'Trivial'.</dd>

<dt>proof by vigorous handwaving:</dt>
<dd>    Works well in a classroom or seminar setting.</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 2</b>

<dl>
<dt>proof by cumbersome notation:</dt>
<dd>    Best done with access to at least four alphabets and special
        symbols.</dd>

<dt>proof by exhaustion:</dt>
<dd>    An issue or two of a journal devoted to your proof is useful.</dd>

<dt>proof by omission:</dt>
<dd>    'The reader may easily supply the details'<br>
        'The other 253 cases are analogous'<br>
        '...'</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 3</b>

<dl>
<dt>proof by obfuscation:</dt>
<dd>    A long plotless sequence of true and/or meaningless
        syntactically related statements.</dd>

<dt>proof by wishful citation:</dt>
<dd>    The author cites the negation, converse, or generalization of
        a theorem from the literature to support his claims.</dd>

<dt>proof by funding:</dt>
<dd>    How could three different government agencies be wrong?</dd>

<dt>proof by eminent authority:</dt>
<dd>    'I saw Karp in the elevator and he said it was probably NP-
        complete.'</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 4</b>

<dl>
<dt>proof by personal communication:</dt>
<dd>    'Eight-dimensional colored cycle stripping is NP-complete
        [Karp, personal communication].'</dd>

<dt>proof by reduction to the wrong problem:</dt>
<dd>    'To see that infinite-dimensional colored cycle stripping is
        decidable, we reduce it to the halting problem.'</dd>

<dt>proof by reference to inaccessible literature:</dt>
<dd>    The author cites a simple corollary of a theorem to be found
        in a privately circulated memoir of the Slovenian
        Philological Society, 1883.</dd>

<dt>proof by importance:</dt>
<dd>    A large body of useful consequences all follow from the
        proposition in question.</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 5</b>

<dl>
<dt>proof by accumulated evidence:</dt>
<dd>    Long and diligent search has not revealed a counterexample.</dd>

<dt>proof by cosmology:</dt>
<dd>    The negation of the proposition is unimaginable or
        meaningless. Popular for proofs of the existence of God.</dd>

<dt>proof by mutual reference:</dt>
<dd>    In reference A, Theorem 5 is said to follow from Theorem 3 in
        reference B, which is shown to follow from Corollary 6.2 in
        reference C, which is an easy consequence of Theorem 5 in
        reference A.</dd>

<dt>proof by metaproof:</dt>
<dd>    A method is given to construct the desired proof. The
        correctness of the method is proved by any of these
        techniques.</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 6</b>

<dl>
<dt>proof by picture:</dt>
<dd>    A more convincing form of proof by example. Combines well
        with proof by omission.</dd>

<dt>proof by vehement assertion:</dt>
<dd>    It is useful to have some kind of authority relation to the
        audience.</dd>

<dt>proof by ghost reference:</dt>
<dd>    Nothing even remotely resembling the cited theorem appears in
        the reference given.</dd>
</dl>
%%
                        <b>HOW TO PROVE IT, PART 7</b>

<dl>
<dt>proof by forward reference:</dt>
<dd>    Reference is usually to a forthcoming paper of the author,
        which is often not as forthcoming as at first.</dd>

<dt>proof by semantic shift:</dt>
<dd>    Some of the standard but inconvenient definitions are changed
        for the statement of the result.</dd>

<dt>proof by appeal to intuition:</dt>
<dd>    Cloud-shaped drawings frequently help here.</dd>
</dl>
%%
"I can't do anything to the death - doctor's orders."<br>
                -- Woody Allen, "Love and death"
%%
"I can't face the world in the morning.
 I must have coffee before I can speak."<br>
                -- Joseph Cotton in Shadow of a Doubt
%%
"I have two very rare photographs.  One is a picture of Houdini locking
 his keys in his car; the other is a rare photograph of Norman Rockwell
 beating up a child."<br>
                -- Steven Wright
%%
"I don't know the key to success, but the key to failure is to try
to please everyone."<br>
                -- Bill Cosby
%%
I know you believe you understand what you think I said.<br>
But I am not sure you realize that what you heard is not what I meant.<br>
                -- Anonymous
%%
If I have seen farther than others, it is because I was
standing on the shoulder of giants.
        -- Isaac Newton
If I have not seen as far as others, it is because giants
were standing on my shoulders.
        -- Hal Abelson
In computer science, we stand on each other's feet.
        -- Brian K. Reed
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\checkin\smoke.txt ===
//----------------------------------------------------------------------------
//
//	ASP SMOKE SUITE
//
//	Inproc:
//		smoke
//		gsmoke
//
//	OutofProc:
//		osmoke
//		ogsmoke	
//	
//----------------------------------------------------------------------------



//------ SMOKE ---------------------------------------------------------------

http://localhost/smoke/sess1.asp
http://localhost/smoke/sess2.asp
//http://localhost/smoke/aadosel.asp
//http://localhost/smoke/aadoupd.asp
//http://localhost/smoke/jaadosel.asp
//http://localhost/smoke/jaadoupd.asp
http://localhost/smoke/sadrot.asp
http://localhost/smoke/snlink.asp
http://localhost/smoke/sbrcap.asp
http://localhost/smoke/sbuffer.asp
http://localhost/smoke/scollect.asp
http://localhost/smoke/send.asp
http://localhost/smoke/shead.asp
http://localhost/smoke/shelloa.asp
http://localhost/smoke/shelloh.asp
http://localhost/smoke/sinclude.asp
http://localhost/smoke/sredirec.asp
http://localhost/smoke/sreqhead.asp
http://localhost/smoke/sresphed.asp
http://localhost/smoke/srespons.asp
http://localhost/smoke/surlhtml.asp
//http://localhost/smoke/svb2java.asp
http://localhost/smoke/sform.asp
http://localhost/smoke/squery.asp
http://localhost/smoke/scookie.asp
http://localhost/smoke/t1.asp http://localhost/smoke/t1.htm

//------ GSMOKE --------------------------------------------------------------

http://localhost/gsmoke/sapp1.asp
http://localhost/gsmoke/sapp2.asp
http://localhost/gsmoke/sbuffer.asp
http://localhost/gsmoke/scollect.asp
http://localhost/gsmoke/send.asp
http://localhost/gsmoke/shead.asp
http://localhost/gsmoke/shelloa.asp
http://localhost/gsmoke/shelloh.asp
http://localhost/gsmoke/sobjtag.asp
//http://localhost/gsmoke/sinclude.asp
http://localhost/gsmoke/sredirec.asp
//http://localhost/gsmoke/sreqhead.asp
http://localhost/gsmoke/sresphed.asp
http://localhost/gsmoke/srespons.asp
http://localhost/gsmoke/surlhtml.asp
//http://localhost/gsmoke/svb2java.asp
http://localhost/gsmoke/sbrcap.asp
http://localhost/gsmoke/sform.asp
http://localhost/gsmoke/squery.asp
http://localhost/gsmoke/scookie.asp
http://localhost/gsmoke/t1.asp http://localhost/gsmoke/t1.htm 

//------ OSMOKE --------------------------------------------------------------

http://localhost/osmoke/sess1.asp
http://localhost/osmoke/sess2.asp
//http://localhost/osmoke/aadosel.asp
//http://localhost/osmoke/aadoupd.asp
//http://localhost/osmoke/jaadosel.asp
//http://localhost/osmoke/jaadoupd.asp
http://localhost/osmoke/sadrot.asp
http://localhost/osmoke/snlink.asp
http://localhost/osmoke/sbrcap.asp
http://localhost/osmoke/sbuffer.asp
http://localhost/osmoke/scollect.asp
http://localhost/osmoke/send.asp
http://localhost/osmoke/shead.asp
http://localhost/osmoke/shelloa.asp
http://localhost/osmoke/shelloh.asp
http://localhost/osmoke/sinclude.asp
http://localhost/osmoke/sredirec.asp
http://localhost/osmoke/sreqhead.asp
http://localhost/osmoke/sresphed.asp
http://localhost/osmoke/srespons.asp
http://localhost/osmoke/surlhtml.asp
//http://localhost/osmoke/svb2java.asp
http://localhost/osmoke/sform.asp
http://localhost/osmoke/squery.asp
http://localhost/osmoke/scookie.asp
http://localhost/osmoke/t1.asp http://localhost/osmoke/t1.htm

//------ OGSMOKE -------------------------------------------------------------

http://localhost/ogsmoke/sapp1.asp
http://localhost/ogsmoke/sapp2.asp
http://localhost/ogsmoke/sbuffer.asp
http://localhost/ogsmoke/scollect.asp
http://localhost/ogsmoke/send.asp
http://localhost/ogsmoke/shead.asp
http://localhost/ogsmoke/shelloa.asp
http://localhost/ogsmoke/shelloh.asp
http://localhost/ogsmoke/sobjtag.asp
//http://localhost/ogsmoke/sinclude.asp
http://localhost/ogsmoke/sredirec.asp
//http://localhost/ogsmoke/sreqhead.asp
http://localhost/ogsmoke/sresphed.asp
http://localhost/ogsmoke/srespons.asp
http://localhost/ogsmoke/surlhtml.asp
//http://localhost/ogsmoke/svb2java.asp
http://localhost/ogsmoke/sbrcap.asp
http://localhost/ogsmoke/sform.asp
http://localhost/ogsmoke/squery.asp
http://localhost/ogsmoke/scookie.asp
http://localhost/ogsmoke/t1.asp http://localhost/ogsmoke/t1.htm
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\readme.txt ===
Content Rotator Component
                      =========================


Table of Contents
=================

    Overview
    Installation
    File List
    Sample ASP
    Build Notes
    Support
    Data Format
    Discussion of the Design
    Change Notes


Overview
========

The Content Rotator Component is an Active Server Pages component that
yields random selections of HTML from a data file.  It can be used for
such diverse applications as:
    * a tip-of-the-day generator
    * a random advertisement billboard
    * a poor man's load-balancing scheme for selecting email names of
      Tech Support people.


Installation
============

In order to use this component you must register it.  This will allow Active
Server Pages (ASP) Scripting Languages and other languages to make use of
the component.  ASP uses either the Server.CreateObject("ObjectName") syntax
or the <object id="myName" progid="ObjectName" runat="server"> syntax to
gain access to an object.  New objects can be made ready for use by
installing a new component.  Note: One component may contain more than one
object definition.

The following directions are to help you register the component for use:
 1. Use the Start menu, Programs option to start a Command Prompt
 2. Type the following:
	cd \InetPub\ASPSamp\Components\ContRot\DLL\i386
 3. Type:
	regsvr32 ContRot.dll
Note: you must register the component on each IIS server where you intend
to use it.

If you have trouble registering components, you may be using the wrong
version of RegSvr32.exe.  Please use the version installed by default in
the directory <InstallDir>\ASP\Cmpnts.  On Windows NT, the default
installation directory is \winnt\System32\Inetsrv.  On Windows 95, it is
\Program Files\WebSvr\System.

(If you rebuild the source code, the makefile will automatically reregister
the component for you.)

The following directions are to help you test the registered component:
 1. Use the Windows Explorer to copy all of the Sample files except
    global.asa from \InetPub\ASPSamp\Components\ContRot\Samples
    to \InetPub\ASPSamp\Samples.
 2. Copy global.asa to \InetPub\ASPSamp.  (Note: global.asa *must* be in a
    virtual root directory; the other files need not be.)
 3. In your browser, open http://localhost/ASPSamp/Samples/ContRot.htm
You must copy the sample files to a virtual directory; if you attempt to
examine them with a browser in the ContRot\Samples directory, ASP will not
execute the script.


File List
=========

File             Description
----             -----------

.\Source

 RotObj.cpp      the C++ source code for the content rotator component
 RotObj.h        declarations for CContentRotator
 ContRot.idl     declaration of IContentRotator, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 ContRot.mak     the Developer Studio makefile
 debug.cpp       useful debugging stubs
 debug.h         useful debugging macros and declarations for debug.cpp
 ContRot.cpp     )
 ContRot.def     )
 ContRot.mdp     )
 ContRot.rc      )
 ContRtPS.def    } Generated by the ATL COM AppWizard
 ContRtPS.mak    )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

.\Samples

 ContRot.htm     Explains how to use the Content Rotator
 global.asa      session object setup
 fortunes.asp    session-level object demonstration; refreshes automatically
 fortunes.txt    sample Content Schedule File for fortunes.asp
 ufortune.txt    Unicode version of fortunes.txt
 techsupp.asp    page-level object ChooseContent demonstration
 techsupp.txt    another sample Content Schedule File
 cr-proof.asp    demonstration of GetAllContent for proof-reading


Samples
=======

You will need to copy the sample files to a virtual directory on an
IIS Server.  Note that global.asa (and hence fortunes.asp and
techsupp.asp) will not work unless global.asa is in a virtual root.

There are two examples of using ChooseContent: one as a page-level
object (techsupp.asp) and one as a session-level object
(fortunes.asp).  Note that if you repeatedly refresh techsupp.asp, the
distribution of content that you will see will almost certainly not
match the weights specified in techsupp.txt.  If you look at
fortunes.asp, you will see that the distributions of fortunes is
correct.  See the Discussion of the Design section below for why this
is so.

If a user is likely to visit a page with a content rotator only once,
then it doesn't really matter whether it's a session-level object or
not.  If a user revisits a page several times within a few minutes,
which is quite likely if it's a key page they have to keep navigating
through, or if the same content rotator is used on multiple pages,
then it should be a session-level object.

Ufortune.txt is included only to demonstrate that the Content Rotator
really does work when it's built as a Unicode DLL and is of little
practical use.  You can use NT's notepad.exe to write files in Unicode
format: check "Save as Unicode" on the Save As dialog box.


Build Notes
===========

This sample requires Microsoft Visual C++ 4.2b or newer.  If you are using
VC 4.2, it is necessary that you upgrade to VC 4.2b, using the patch which
can be found at http://www.microsoft.com/visualc/patches/v4.2b/vc42b.htm
Note that this patch will not work with earlier or later versions of
Visual C++, only with VC 4.2.

This sample also requires ATL (Microsoft Active Template Library)
version 2.0 or newer.  ATL 2.1 ships with Visual C++ 5.0.  ATL 2.0 for
VC 4.2b can be downloaded from: http://www.microsoft.com/visualc/prodinfo/
You do not need the ATL Docs or Object Wizard Technology Preview to build
the registry access component, but you will probably find them useful.

If you get an error about "don't know how to make asptlb.h", you will
need to copy <InstallDir>\ASP\Cmpnts\AspTlb.h to your include
directory.

You can build this component with nmake at the command line.  Read
Makefile for more details.  You can also build it in Microsoft
Developer Studio, using the ContRot.mdp project.

The component can be built as ANSI or Unicode.  If you intend to
run it on Windows 95, build it as ANSI.  If you build it as a
Unicode DLL, all data files will need to be in Unicode format.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe Denali [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Data Format
===========

You can find examples of Content Schedule files in the Samples directory.


Discussion of the Design
========================

The Content Rotator is best used as a session-level object, rather
than a page-level object.  It caches the contents of the data file,
which gives you two benefits at the cost of using some more memory:
it's faster on second and subsequent invocations and you get much
better random distribution of the data, as it takes some care to
ensure that each entry is served up no more than its fair share of
times.

When it's used as a page-level object, you do not benefit from its
caching of the data.  More importantly, you are much more likely to
perceive a less random permutation of the data if you repeatedly
refresh the page.  This is because there is no way to ensure a
properly random distribution of the data if the Content Rotator object
is created afresh each time the page is visited.  See the Samples
directory for an example of how to use the Content Rotator as a
session-level object.

It is technically impossible to use the Content Rotator as an
application-level object (because application-level objects do not
receive the OnStartPage call which is needed to get a pointer to the
Server object so that its MapPath method can be called to translate
the virtual path of the data filename into a physical filesystem
path), or that would be the recommended way to use it.  It would be
very easy for you to change the ChooseContent and GetAllContent
methods to work with a physical data path.

The Page Counter sample component demonstrates an alternative method
of caching data between invocations.  The Page Counter DLL has a
global object (the Central Counter Manager) which tracks hits across
all pages and takes care of writing the data to persistent storage
periodically.  When a Page Counter object is created, it modifies the
global CCM as necessary.  Creating a global cache for the Content
Rotator would be more complicated because it would have to cache
multiple data files simultaneously.

Note that if you create a single content rotator object and you have
it use several data files on different pages, then the benefits of
caching the data are nullified.  Far better to create one object for
each datafile, especially if the datafile is used in more than one
place.

The discussion of critical sections in RotObj.cpp may also be of
interest.


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Type Library name changes
* Check for new returning NULL a la ATL itself
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\controt\samples\ufortune.txt ===
% %   # 9 
 
 < p r e > 
 
                                                     ( # # # # ) 
 
                                                 ( # # # # # # # ) 
 
                                             ( # # # # # # # # # ) 
 
                                           ( # # # # # # # # # ) 
 
                                         ( # # # # # # # # # ) 
 
                                       ( # # # # # # # # # ) 
 
       _ _ & _ _                     ( # # # # # # # # # ) 
 
     /           \                 ( # # # # # # # # # )       | \ / \ / \ / |           / \   / \     / \                               / \ 
 
   |               |             ( # # # # # # # # # )         |             |           |   V     \ /     \ - - - .         . - - - - /     \ - - - - . 
 
   |     ( o ) ( o )               ( o ) ( o ) ( # # )         |             |             \ _                 /               \                     / 
 
   C       . - - - _ )         , _ C           ( # # )         |   ( o ) ( o )               ( o ) ( o )     < _ _ .       . - - \   ( o ) ( o )   / _ _ . 
 
     |   | . _ _ _ |         / _ _ _ _ ,       ( # # )         C             _ )           _ C               /               \             ( )         / 
 
     |     \ _ _ /               \           ( # )             |     , _ _ _ |           / _ _ _ _ ,       )     \             >       ( C _ )       < 
 
     / _ _ _ _ _ \                 |         |   |               /     \               / - - - - '         / _ _ _ \ _ _ _ _         / _ _ _ \ 
 
   / _ _ _ _ _ /   \               O O O O O O                 / _ _ _ _ \                     o o o o o                           / |       | \ 
 
 /                   \           /             \             /             \                 /           \                       /               \ 
 
 
 
 H o m e r                     M a r g e                       B a r t                         L i s a                         B a b y   M a g g i e 
 
 
 
                                                                 T H E   S I M P S O N S 
 
 < / p r e > 
 
 % % 
 
 " T h e   b e s t   t h i n g   i s   t o   l o o k   n a t u r a l ,   b u t   i t   t a k e s   m a k e u p   t o   l o o k   n a t u r a l . " < b r > 
 
                                 - -   C a l v i n   K l e i n 
 
 % % 
 
 " T h e   a b i l i t y   o f   t w o   m e n   t o   p u t   o n   g l o v e s ,   s t a n d   t o e - t o - t o e ,   a n d   p u m m e l   e a c h 
 
   o t h e r   i n t o   i n s e n s i b i l i t y . . .   i s   w h a t   s e p a r a t e s   u s   f r o m   t h e   a n i m a l s . " < b r > 
 
                                 - -   J i m ,   o n   T a x i 
 
 % % 
 
 " T h e   W r i g h t   B o t h e r s   w e r e n ' t   t h e   f i r s t   t o   f l y . 
 
   T h e y   w e r e   j u s t   t h e   f i r s t   n o t   t o   c r a s h . " 
 
 % % 
 
 A f t e r   G o l i a t h ' s   d e f e a t ,   g i a n t s   c e a s e d   t o   c o m m a n d   r e s p e c t . < b r > 
 
                                 - -   F r e e m a n   D y s o n 
 
 % % 
 
 A f t e r   a d d i n g   t w o   w e e k s   t o   t h e   s c h e d u l e   f o r   u n e x p e c t e d   d e l a y s ,   a d d   t w o 
 
 m o r e   f o r   t h e   u n e x p e c t e d ,   u n e x p e c t e d   d e l a y s . 
 
 % % 
 
 A f t e r   a l l ,   i t   i s   o n l y   t h e   m e d i o c r e   w h o   a r e   a l w a y s   a t   t h e i r   b e s t . < b r > 
 
                                 - -   J e a n   G i r a u d o u x 
 
 % % 
 
 A f t e r   b e i n g   a s k e d   b y   a   w a i t r e s s   i f   h e   w a n t e d   h i s   p i z z a   c u t   i n t o   f o u r 
 
 s l i c e s   o r   e i g h t :   " B e t t e r   m a k e   i t   f o u r .   I   d o n ' t   t h i n k   I   c a n   e a t   e i g h t 
 
 p i e c e s . " < b r > 
 
                                 - -   Y o g i   B e r r a 
 
 % % 
 
 A f t e r   l i v i n g   i n   N e w   Y o r k ,   y o u   t r u s t   n o b o d y ,   b u t   y o u   b e l i e v e 
 
 e v e r y t h i n g .     J u s t   i n   c a s e . 
 
 % % 
 
 A f t e r   t h e   g a m e   t h e   k i n g   a n d   t h e   p a w n   g o   i n   t h e   s a m e   b o x . < b r > 
 
                                 - -   I t a l i a n   p r o v e r b 
 
 % % 
 
 B e w a r e   o f   P r o g r a m m e r s   w h o   c a r r y   s c r e w d r i v e r s . < b r > 
 
                                 - -   L e o n a r d   B r a n d w e i n 
 
 % % 
 
 B e t t e r   t o   h a v e   l o v e d   a   s h o r t   g i r l ,   t h a n   n e v e r   t o   h a v e   l o v e d   a   t a l l . 
 
 % % 
 
 B e s i d e s   a   m a t h e m a t i c a l   i n c l i n a t i o n ,   a n   e x c e p t i o n a l l y   g o o d   m a s t e r y   o f 
 
 o n e ' s   n a t i v e   t o n g u e   i s   t h e   m o s t   v i t a l   a s s e t   o f   a   c o m p e t e n t   p r o g r a m m e r . < b r > 
 
                                 - -   E d s g e r   W .   D i j k s t r a 
 
 % % 
 
 B e i n g   r i g h t   t o o   s o o n   i s   s o c i a l l y   u n a c c e p t a b l e 
 
 % % 
 
 B e i n g   a v e r a g e   i s   b e i n g   t h e   b e s t   o f   t h e   w o r s t ,   o r   t h e   w o r s t   o f   t h e   b e s t . 
 
 % % 
 
 A n   u n b r e a k a b l e   t o y   i s   u s e f u l   f o r   b r e a k i n g   o t h e r   t o y s . < b r > 
 
                                 - -   V a n   R o y 
 
 % % 
 
 I   l o v e   d e a d l i n e s .     I   l i k e   t h e   w h o o s h i n g   s o u n d   t h e y   m a k e   a s 
 
 t h e y   f l y   b y . < b r > 
 
                                 - -   D o u g l a s   A d a m s 
 
 % % 
 
 H a n g i n g   i s   t o o   g o o d   f o r   a   m a n   w h o   m a k e s   p u n s ;   h e   s h o u l d   b e 
 
 d r a w n   a n d   q u o t e d . < b r > 
 
                                 - -   F r e d   A l l e n 
 
 % % 
 
 < b > T e l e v i s i o n < / b > :   t h e   b l a n d   l e a d i n g   t h e   b l a n d . < b r > 
 
                                 - -   ( A n o n y m o u s ) 
 
 % % 
 
 T h e   p r i c e   o n e   p a y s   f o r   p u r s u i n g   a n y   p r o f e s s i o n ,   o r   c a l l i n g , 
 
 i s   a n   i n t i m a t e   k n o w l e d g e   o f   i t s   u g l y   s i d e . < b r > 
 
                                 - -   J a m e s   B a l d w i n 
 
 % % 
 
 < b > P o l i t e n e s s < / b > ,   n .     T h e   m o s t   a c c e p t a b l e   h y p o c r i s y . < b r > 
 
                                 - -   A m b r o s e   B i e r c e 
 
 % % 
 
 T h e   o n l y   t h i n g   n e c e s s a r y   f o r   t h e   t r i u m p h   o f   e v i l   i s   f o r   g o o d 
 
 p e r s o n s   t o   d o   n o t h i n g . < b r > 
 
                                 - -   E d m u n d   B u r k e 
 
 % % 
 
 C o m p u t e r s   a r e   l i k e   O l d   T e s t a m e n t   g o d s ;   l o t s   o f   r u l e s   a n d   n o   m e r c y . < b r > 
 
                                 - -   J o s e p h   C a m p b e l l 
 
 % % 
 
 A n d   n o w ,   w h a t   w i l l   b e c o m e   o f   u s   w i t h o u t   a n y   b a r b a r i a n s ? 
 
 T h o s e   p e o p l e   w e r e   a   k i n d   o f   s o l u t i o n . < b r > 
 
                                 - -   C . P .   C a v a f y       
 
 % % 
 
 T e l l   m e   a n d   I   f o r g e t . 
 
 S h o w   m e   a n d   I   r e m e m b e r . 
 
 L e t   m e   d o   a n d   I   u n d e r s t a n d . < b r > 
 
                                 - -   C o n f u c i u s 
 
 % % 
 
 T h e r e   h a s   b e e n   o p p o s i t i o n   t o   e v e r y   i n n o v a t i o n   i n   t h e 
 
 h i s t o r y   o f   m a n ,   w i t h   t h e   p o s s i b l e   e x c e p t i o n   o f   t h e   s w o r d . < b r > 
 
                                 - -   B e n j a m i n   D a n a 
 
 % % 
 
 I   h a v e   k n o w n   a   v a s t   q u a n t i t y   o f   n o n s e n s e   t a l k e d   a b o u t   b a d 
 
 m e n   n o t   l o o k i n g   y o u   i n   t h e   f a c e .     D o n ' t   t r u s t   t h a t 
 
 c o n v e n t i o n a l   i d e a .     D i s h o n e s t y   w i l l   s t a r e   h o n e s t y   o u t   o f 
 
 c o u n t e n a n c e ,   a n y   d a y   i n   t h e   w e e k ,   i f   t h e r e   i s   a n y t h i n g   t o 
 
 b e   g o t   b y   i t . < b r > 
 
                                 - -   C h a r l e s   D i c k e n s 
 
 % % 
 
 T e c h n o l o g y   i s   a   w a y   o f   o r g a n i z i n g   t h e   u n i v e r s e   s o   t h a t   m a n 
 
 d o e s n ' t   h a v e   t o   e x p e r i e n c e   i t . < b r > 
 
                                 - -   M a x   F r i s c h 
 
 % % 
 
 E v e r y t h i n g   h a s   b e e n   s a i d   b e f o r e ,   b u t   s i n c e   n o b o d y   l i s t e n s , 
 
 w e   h a v e   t o   k e e p   g o i n g   b a c k   a n d   b e g i n n i n g   a g a i n . < b r > 
 
                                 - -   A n d r e   G i d e 
 
 % % 
 
 T h e   N e t   i n t e r p r e t s   c e n s o r s h i p   a s   d a m a g e   a n d   r o u t e s   a r o u n d   i t . < b r > 
 
                                 - -   J o h n   G i l m o r e 
 
 % % 
 
 N a t u r a l l y   t h e   c o m m o n   p e o p l e   d o n ' t   w a n t   w a r   . . .     b u t   a f t e r 
 
 a l l   i t   i s   t h e   l e a d e r s   o f   a   c o u n t r y   w h o   d e t e r m i n e   p o l i c y ,   a n d 
 
 i t   i s   a l w a y s   a   s i m p l e   m a t t e r   t o   d r a g   t h e   p e o p l e   a l o n g .     A l l 
 
 y o u   h a v e   t o   d o   i s   t e l l   t h e m   t h e y   a r e   b e i n g   a t t a c k e d ,   a n d 
 
 d e n o u n c e   t h e   p a c i f i s t s   f o r   l a c k   o f   p a t r i o t i s m   a n d   e x p o s i n g 
 
 t h e   c o u n t r y   t o   d a n g e r .     I t   w o r k s   t h e   s a m e   i n   a n y   c o u n t r y . < b r > 
 
                                 - -   H e r m a n n   G o e r i n g 
 
 % % 
 
 T h e r e ' s   n o   m o n e y   i n   p o e t r y ,   b u t   t h e r e ' s   n o   p o e t r y   i n   m o n e y   e i t h e r . < b r > 
 
 - -   R o b e r t   G r a v e s 
 
 % % 
 
 I   m u s t   n o t   f e a r .     F e a r   i s   t h e   m i n d - k i l l e r .     F e a r   i s   t h e 
 
 l i t t l e - d e a t h   t h a t   b r i n g s   t o t a l   o b l i t e r a t i o n .     I   w i l l   f a c e   m y 
 
 f e a r .     I   w i l l   p e r m i t   i t   t o   p a s s   o v e r   m e   a n d   t h r o u g h   m e .     A n d 
 
 w h e n   i t   h a s   g o n e   p a s t   I   w i l l   t u r n   t h e   i n n e r   e y e   t o   s e e   i t s 
 
 p a t h .     W h e r e   t h e   f e a r   h a s   g o n e   t h e r e   w i l l   b e   n o t h i n g .     O n l y   I 
 
 w i l l   r e m a i n . < b r > 
 
                                 - -   F r a n k   H e r b e r t < b r > 
 
                                 < i > D u n e < / i > ,   1 9 6 5 
 
 % % 
 
 P a s s i o n a t e   h a t r e d   c a n   g i v e   m e a n i n g   a n d   p u r p o s e   t o   a n   e m p t y   l i f e . < b r > 
 
                                 - -   E r i c   H o f f e r 
 
 % % 
 
 S o m e t h i n g   a l w a y s   t a k e s   l o n g e r   t h a n   y o u   t h i n k ,   e v e n   i f   y o u   t a k e 
 
 H o f s t a d t e r s   l a w   i n t o   c o n s i d e r a t i o n . < b r > 
 
                                 - -   D o u g l a s   H o f s t a d t e r 
 
 % % 
 
 A m o n g   e c o n o m i s t s ,   t h e   r e a l   w o r l d   i s   o f t e n   a   s p e c i a l   c a s e . < b r > 
 
                                 - -   H o r n g r e n 
 
 % % 
 
 T a k e   y o u r   l i f e   i n   y o u r   o w n   h a n d s ,   a n d   w h a t   h a p p e n s ?     A 
 
 t e r r i b l e   t h i n g :   n o   o n e   t o   b l a m e . < b r > 
 
                                 - -   E r i c a   J o n g 
 
 % % 
 
 I n   t h e   l o n g   r u n   w e   a r e   a l l   d e a d . < b r > 
 
                                 - -   J o h n   M a y n a r d   K e y n e s 
 
 % % 
 
 T h e   i l l e g a l   w e   d o   i m m e d i a t e l y .     T h e   u n c o n s t i t u t i o n a l   t a k e s   a 
 
 l i t t l e   l o n g e r . < b r > 
 
                                 - -   H e n r y   K i s s i n g e r 
 
 % % 
 
 B e i n g   c a l l e d   a   p o e t e s s   b r i n g s   o u t   t h e   t e r r o r i s t r e s s   i n   m e . < b r > 
 
                                 - -   A u d r e   L o r d e 
 
 % % 
 
 Y o u   d o n ' t   s t i c k   a   k n i f e   i n   a   m a n ' s   b a c k   n i n e   i n c h e s   a n d   t h e n 
 
 p u l l   i t   o u t   s i x   i n c h e s   a n d   s a y   y o u   a r e   m a k i n g   p r o g r e s s . < b r > 
 
                                 - -   M a l c o l m   X 
 
 % % 
 
 I f   I ' d   k n o w n   h o w   o l d   I   w a s   g o i n g   t o   g e t ,   I ' d   h a v e   t a k e n 
 
 b e t t e r   c a r e   o f   m y s e l f . < b r > 
 
                                 - -   G e o r g e   M e a n y   
 
 % % 
 
 S o m e o n e : < b r > 
 
 O h   t e m p u r a !     O h   m o r a y s ! 
 
 < p > 
 
 A   s e c o n d : < b r > 
 
 O n   m y   o f f i c e   d o o r   I   h a v e   a   c a r t o o n   b y   L a r s o n   t h a t   s h o w s 
 
 a   b u n c h   o f   e e l s   s t a n d i n g   a r o u n d ,   s i p p i n g   c o c k t a i l s .     T h e 
 
 c a p t i o n   i s :   S o c i a l   m o r a y s . 
 
 < p > 
 
 A   t h i r d : < b r > 
 
 O k ,   n o w   e v e r y b o d y   s i n g ! < b r > 
 
 " W h e n   a n   e e l   b i t e s   y o u r   l e g < b r > 
 
 A n d   t h e   p a i n   m a k e s   y o u   b e g , < b r > 
 
 T h a t ' s   a   m o r a y ! " < b r > 
 
 ( T h a n k   y o u   F u s c o   B r o t h e r s ) < b r > 
 
                                 - -   ( C l e v e r   f o l k s ) 
 
 % % 
 
 O x y m o r o n s :   s t u d e n t   a t h l e t e ,   m i l i t a r y   i n t e l l i g e n c e ,   m i l i t a r y 
 
 j u s t i c e ,   m e r c y   k i l l i n g ,   p o l l u t i o n - f r e e . < b r > 
 
                                 - -   ( V a r i o u s   s a g e s   o v e r   t h e   a g e s ) 
 
 % % 
 
 A   b u r r o   i s   a n   a s s .     A   b u r r o w   i s   a   h o l e   i n   t h e   g r o u n d .     A s   a 
 
 r e p o r t e r ,   y o u   a r e   e x p e c t e d   t o   k n o w   t h e   d i f f e r e n c e . < b r > 
 
                                 - -   ( U P I   S t y l e b o o k ) 
 
 % % 
 
 N o b o d y   b e l i e v e s   t h e   o f f i c i a l   s p o k e s m a n   . . .   b u t   e v e r y b o d y 
 
 t r u s t s   a n   u n i d e n t i f i e d   s o u r c e . < b r > 
 
                                 - -   R o n   N e s s e n 
 
 % % 
 
 A f t e r   a l l ,   w h a t   i s   y o u r   h o s t s '   p u r p o s e   i n   h a v i n g   a   p a r t y ? 
 
 S u r e l y   n o t   f o r   y o u   t o   e n j o y   y o u r s e l f ;   i f   t h a t   w e r e   t h e i r 
 
 s o l e   p u r p o s e ,   t h e y ' d   h a v e   s i m p l y   s e n t   c h a m p a g n e   a n d   w o m e n 
 
 o v e r   t o   y o u r   p l a c e   b y   t a x i . < b r > 
 
                                 - -   P . J .   O ' R o u r k e 
 
 % % 
 
 I   h a v e   o f t e n   h a d   t h e   i m p r e s s i o n   t h a t ,   t o   p e n g u i n s ,   m a n   i s 
 
 j u s t   a n o t h e r   p e n g u i n   - -   d i f f e r e n t ,   l e s s   p r e d i c t a b l e , 
 
 o c c a s i o n a l l y   v i o l e n t ,   b u t   t o l e r a b l e   c o m p a n y   w h e n   h e   s i t s 
 
 s t i l l   a n d   m i n d s   h i s   o w n   b u s i n e s s . < b r > 
 
                                 - -     B e r n a r d   S t o n e h o u s e 
 
 % % 
 
 T h e   n i c e   t h i n g   a b o u t   s t a n d a r d s   i s   t h a t   t h e r e   a r e   s o   m a n y   o f 
 
 t h e m   t o   c h o o s e   f r o m . < b r > 
 
                                 - -   A n d y   T a n e n b a u m 
 
 % % 
 
 M a n   i n v e n t e d   l a n g u a g e   t o   s a t i s f y   h i s   d e e p   n e e d   t o   c o m p l a i n . < b r > 
 
                                 - -   L i l y   T o m l i n 
 
 % % 
 
 N i k l a u s   W i r t h   h a s   l a m e n t e d   t h a t ,   w h e r e a s   E u r o p e a n s   p r o n o u n c e 
 
 h i s   n a m e   c o r r e c t l y   ( N i - k l o w s   V i r t ) ,   A m e r i c a n s   i n v a r i a b l y 
 
 m a n g l e   i t   i n t o   ( N i c k - l e s   W o r t h ) .     W h i c h   i s   t o   s a y   t h a t 
 
 E u r o p e a n s   c a l l   h i m   b y   n a m e ,   b u t   A m e r i c a n s   c a l l   h i m   b y   v a l u e . < b r > 
 
                                 - -   ( U n k n o w n ) 
 
 % % 
 
 D o c u m e n t a t i o n   i s   t h e   c a s t o r   o i l   o f   p r o g r a m m i n g ;   t h e 
 
 m a n a g e r s   k n o w   i t   m u s t   b e   g o o d   b e c a u s e   p r o g r a m m e r s   h a t e 
 
 i t   s o   m u c h . < b r > 
 
                                 - -   W e i n b e r g 
 
 % % 
 
 [ O f   c h e s s : ]   I t   i s   i m p o r t a n t   t o   r e a l i z e   t h a t   y o u   c a n n o t   w i n 
 
 u n l e s s   y o u r   o p p o n e n t   m a k e s   a   m i s t a k e .     T h e r e   i s   n o   p o s s i b i l i t y 
 
 o f   c r e a t i n g   a   w i n   s o l e l y   o u t   o f   y o u r   o w n   g e n i u s . < b r > 
 
                                 - -   K e n   W h y l d 
 
 % % 
 
 A l w a y s   f o r g i v e   y o u r   e n e m i e s ;   n o t h i n g   a n n o y s   t h e m   s o   m u c h . < b r > 
 
                                 - -   O s c a r   W i l d e 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   1 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   e x a m p l e : < / d t > 
 
 < d d >         T h e   a u t h o r   g i v e s   o n l y   t h e   c a s e   n   =   2   a n d   s u g g e s t s   t h a t   i t 
 
                 c o n t a i n s   m o s t   o f   t h e   i d e a s   o f   t h e   g e n e r a l   p r o o f . < / d d > 
 
 
 
 < d t > p r o o f   b y   i n t i m i d a t i o n : < / d t > 
 
 < d d >         ' T r i v i a l ' . < / d d > 
 
 
 
 < d t > p r o o f   b y   v i g o r o u s   h a n d w a v i n g : < / d t > 
 
 < d d >         W o r k s   w e l l   i n   a   c l a s s r o o m   o r   s e m i n a r   s e t t i n g . < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   2 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   c u m b e r s o m e   n o t a t i o n : < / d t > 
 
 < d d >         B e s t   d o n e   w i t h   a c c e s s   t o   a t   l e a s t   f o u r   a l p h a b e t s   a n d   s p e c i a l 
 
                 s y m b o l s . < / d d > 
 
 
 
 < d t > p r o o f   b y   e x h a u s t i o n : < / d t > 
 
 < d d >         A n   i s s u e   o r   t w o   o f   a   j o u r n a l   d e v o t e d   t o   y o u r   p r o o f   i s   u s e f u l . < / d d > 
 
 
 
 < d t > p r o o f   b y   o m i s s i o n : < / d t > 
 
 < d d >         ' T h e   r e a d e r   m a y   e a s i l y   s u p p l y   t h e   d e t a i l s ' < b r > 
 
                 ' T h e   o t h e r   2 5 3   c a s e s   a r e   a n a l o g o u s ' < b r > 
 
                 ' . . . ' < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   3 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   o b f u s c a t i o n : < / d t > 
 
 < d d >         A   l o n g   p l o t l e s s   s e q u e n c e   o f   t r u e   a n d / o r   m e a n i n g l e s s 
 
                 s y n t a c t i c a l l y   r e l a t e d   s t a t e m e n t s . < / d d > 
 
 
 
 < d t > p r o o f   b y   w i s h f u l   c i t a t i o n : < / d t > 
 
 < d d >         T h e   a u t h o r   c i t e s   t h e   n e g a t i o n ,   c o n v e r s e ,   o r   g e n e r a l i z a t i o n   o f 
 
                 a   t h e o r e m   f r o m   t h e   l i t e r a t u r e   t o   s u p p o r t   h i s   c l a i m s . < / d d > 
 
 
 
 < d t > p r o o f   b y   f u n d i n g : < / d t > 
 
 < d d >         H o w   c o u l d   t h r e e   d i f f e r e n t   g o v e r n m e n t   a g e n c i e s   b e   w r o n g ? < / d d > 
 
 
 
 < d t > p r o o f   b y   e m i n e n t   a u t h o r i t y : < / d t > 
 
 < d d >         ' I   s a w   K a r p   i n   t h e   e l e v a t o r   a n d   h e   s a i d   i t   w a s   p r o b a b l y   N P - 
 
                 c o m p l e t e . ' < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   4 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   p e r s o n a l   c o m m u n i c a t i o n : < / d t > 
 
 < d d >         ' E i g h t - d i m e n s i o n a l   c o l o r e d   c y c l e   s t r i p p i n g   i s   N P - c o m p l e t e 
 
                 [ K a r p ,   p e r s o n a l   c o m m u n i c a t i o n ] . ' < / d d > 
 
 
 
 < d t > p r o o f   b y   r e d u c t i o n   t o   t h e   w r o n g   p r o b l e m : < / d t > 
 
 < d d >         ' T o   s e e   t h a t   i n f i n i t e - d i m e n s i o n a l   c o l o r e d   c y c l e   s t r i p p i n g   i s 
 
                 d e c i d a b l e ,   w e   r e d u c e   i t   t o   t h e   h a l t i n g   p r o b l e m . ' < / d d > 
 
 
 
 < d t > p r o o f   b y   r e f e r e n c e   t o   i n a c c e s s i b l e   l i t e r a t u r e : < / d t > 
 
 < d d >         T h e   a u t h o r   c i t e s   a   s i m p l e   c o r o l l a r y   o f   a   t h e o r e m   t o   b e   f o u n d 
 
                 i n   a   p r i v a t e l y   c i r c u l a t e d   m e m o i r   o f   t h e   S l o v e n i a n 
 
                 P h i l o l o g i c a l   S o c i e t y ,   1 8 8 3 . < / d d > 
 
 
 
 < d t > p r o o f   b y   i m p o r t a n c e : < / d t > 
 
 < d d >         A   l a r g e   b o d y   o f   u s e f u l   c o n s e q u e n c e s   a l l   f o l l o w   f r o m   t h e 
 
                 p r o p o s i t i o n   i n   q u e s t i o n . < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   5 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   a c c u m u l a t e d   e v i d e n c e : < / d t > 
 
 < d d >         L o n g   a n d   d i l i g e n t   s e a r c h   h a s   n o t   r e v e a l e d   a   c o u n t e r e x a m p l e . < / d d > 
 
 
 
 < d t > p r o o f   b y   c o s m o l o g y : < / d t > 
 
 < d d >         T h e   n e g a t i o n   o f   t h e   p r o p o s i t i o n   i s   u n i m a g i n a b l e   o r 
 
                 m e a n i n g l e s s .   P o p u l a r   f o r   p r o o f s   o f   t h e   e x i s t e n c e   o f   G o d . < / d d > 
 
 
 
 < d t > p r o o f   b y   m u t u a l   r e f e r e n c e : < / d t > 
 
 < d d >         I n   r e f e r e n c e   A ,   T h e o r e m   5   i s   s a i d   t o   f o l l o w   f r o m   T h e o r e m   3   i n 
 
                 r e f e r e n c e   B ,   w h i c h   i s   s h o w n   t o   f o l l o w   f r o m   C o r o l l a r y   6 . 2   i n 
 
                 r e f e r e n c e   C ,   w h i c h   i s   a n   e a s y   c o n s e q u e n c e   o f   T h e o r e m   5   i n 
 
                 r e f e r e n c e   A . < / d d > 
 
 
 
 < d t > p r o o f   b y   m e t a p r o o f : < / d t > 
 
 < d d >         A   m e t h o d   i s   g i v e n   t o   c o n s t r u c t   t h e   d e s i r e d   p r o o f .   T h e 
 
                 c o r r e c t n e s s   o f   t h e   m e t h o d   i s   p r o v e d   b y   a n y   o f   t h e s e 
 
                 t e c h n i q u e s . < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   6 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   p i c t u r e : < / d t > 
 
 < d d >         A   m o r e   c o n v i n c i n g   f o r m   o f   p r o o f   b y   e x a m p l e .   C o m b i n e s   w e l l 
 
                 w i t h   p r o o f   b y   o m i s s i o n . < / d d > 
 
 
 
 < d t > p r o o f   b y   v e h e m e n t   a s s e r t i o n : < / d t > 
 
 < d d >         I t   i s   u s e f u l   t o   h a v e   s o m e   k i n d   o f   a u t h o r i t y   r e l a t i o n   t o   t h e 
 
                 a u d i e n c e . < / d d > 
 
 
 
 < d t > p r o o f   b y   g h o s t   r e f e r e n c e : < / d t > 
 
 < d d >         N o t h i n g   e v e n   r e m o t e l y   r e s e m b l i n g   t h e   c i t e d   t h e o r e m   a p p e a r s   i n 
 
                 t h e   r e f e r e n c e   g i v e n . < / d d > 
 
 < / d l > 
 
 % % 
 
                                                 < b > H O W   T O   P R O V E   I T ,   P A R T   7 < / b > 
 
 
 
 < d l > 
 
 < d t > p r o o f   b y   f o r w a r d   r e f e r e n c e : < / d t > 
 
 < d d >         R e f e r e n c e   i s   u s u a l l y   t o   a   f o r t h c o m i n g   p a p e r   o f   t h e   a u t h o r , 
 
                 w h i c h   i s   o f t e n   n o t   a s   f o r t h c o m i n g   a s   a t   f i r s t . < / d d > 
 
 
 
 < d t > p r o o f   b y   s e m a n t i c   s h i f t : < / d t > 
 
 < d d >         S o m e   o f   t h e   s t a n d a r d   b u t   i n c o n v e n i e n t   d e f i n i t i o n s   a r e   c h a n g e d 
 
                 f o r   t h e   s t a t e m e n t   o f   t h e   r e s u l t . < / d d > 
 
 
 
 < d t > p r o o f   b y   a p p e a l   t o   i n t u i t i o n : < / d t > 
 
 < d d >         C l o u d - s h a p e d   d r a w i n g s   f r e q u e n t l y   h e l p   h e r e . < / d d > 
 
 < / d l > 
 
 % % 
 
 " I   c a n ' t   d o   a n y t h i n g   t o   t h e   d e a t h   -   d o c t o r ' s   o r d e r s . " < b r > 
 
                                 - -   W o o d y   A l l e n ,   " L o v e   a n d   d e a t h " 
 
 % % 
 
 " I   c a n ' t   f a c e   t h e   w o r l d   i n   t h e   m o r n i n g . 
 
   I   m u s t   h a v e   c o f f e e   b e f o r e   I   c a n   s p e a k . " < b r > 
 
                                 - -   J o s e p h   C o t t o n   i n   S h a d o w   o f   a   D o u b t 
 
 % % 
 
 " I   h a v e   t w o   v e r y   r a r e   p h o t o g r a p h s .     O n e   i s   a   p i c t u r e   o f   H o u d i n i   l o c k i n g 
 
   h i s   k e y s   i n   h i s   c a r ;   t h e   o t h e r   i s   a   r a r e   p h o t o g r a p h   o f   N o r m a n   R o c k w e l l 
 
   b e a t i n g   u p   a   c h i l d . " < b r > 
 
                                 - -   S t e v e n   W r i g h t 
 
 % % 
 
 " I   d o n ' t   k n o w   t h e   k e y   t o   s u c c e s s ,   b u t   t h e   k e y   t o   f a i l u r e   i s   t o   t r y 
 
 t o   p l e a s e   e v e r y o n e . " < b r > 
 
                                 - -   B i l l   C o s b y 
 
 % % 
 
 I   k n o w   y o u   b e l i e v e   y o u   u n d e r s t a n d   w h a t   y o u   t h i n k   I   s a i d . < b r > 
 
 B u t   I   a m   n o t   s u r e   y o u   r e a l i z e   t h a t   w h a t   y o u   h e a r d   i s   n o t   w h a t   I   m e a n t . < b r > 
 
                                 - -   A n o n y m o u s 
 
 % % 
 
 I f   I   h a v e   s e e n   f a r t h e r   t h a n   o t h e r s ,   i t   i s   b e c a u s e   I   w a s 
 
 s t a n d i n g   o n   t h e   s h o u l d e r   o f   g i a n t s . 
 
                 - -   I s a a c   N e w t o n 
 
 I f   I   h a v e   n o t   s e e n   a s   f a r   a s   o t h e r s ,   i t   i s   b e c a u s e   g i a n t s 
 
 w e r e   s t a n d i n g   o n   m y   s h o u l d e r s . 
 
                 - -   H a l   A b e l s o n 
 
 I n   c o m p u t e r   s c i e n c e ,   w e   s t a n d   o n   e a c h   o t h e r ' s   f e e t . 
 
                 - -   B r i a n   K .   R e e d 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\permchk\legal.txt ===
THE INFORMATION AND CODE PROVIDED HEREUNDER (COLLECTIVELY REFERRED TO
AS "SOFTWARE") IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN
NO EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES. SOME STATES DO NOT ALLOW THE EXCLUSION OR
LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES SO THE
FOREGOING LIMITATION MAY NOT APPLY.

This Software may be copied and distributed royalty-free subject to
the following conditions:

1. You must copy all Software without modification and must include
   all pages, if the Software is distributed without inclusion in your
   software product. If you are incorporating the Software in
   conjunction with and as a part of your software product which adds
   substantial value, you may modify and include portions of the
   Software.

2. You must place all copyright notices and other protective
   disclaimers and notices contained on the Software on all copies of
   the Software and your software product.

3. Unless the Software is incorporated in your software product which
   adds substantial value, you may not distribute this Software for
   profit.

4. You may not use Microsoft's name, logo, or trademarks to market
   your software product.

5. You agree to indemnify, hold harmless, and defend Microsoft and its
   suppliers from and against any claims or lawsuits, including
   attorneys' fees, that arise or result from the use or distribution
   of your software product and any modifications to the Software.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\pagecnt\readme.txt ===
Page Counter Component
                        ======================


Table of Contents
=================

    Overview
    Installation
    Usage
    File List
    Sample ASP
    Shortcomings
    Build Notes
    Support
    Registry Entries
    Data Format
    Change Notes


Overview
========

The Page Counter Component provides the functionality of a basic page
counter, sometimes called a 'Hit Counter', which is used to track the
number of hits to one or more HTML pages; i.e., the total number of
times that a page has been accessed by anyone anywhere.

This page counter is somewhat different from the typical counter in a
couple of key ways.  First, the page counter stores its array of pages
and their corresponding hit counts to disk periodically.  This
provides a persistent record of hit activity.  This data is read from
disk the first time the page counter dll is loaded, and it is written
back to disk when the page counter dll is unloaded.  This information
is also saved to disk at user-definable intervals based on the total
number of hits recorded by the counter.

A second difference is the way that the page counter tracks page hits.
The page counter uses a Central Counter Manager (CCM) to track and
persist all page hits on the server.  This CCM is implemented as a
global C++ object in the PageCnt.dll. This implementation allows all
the page hit information to be stored in a single text file.

Using the CCM to manage the table of page hit information has less
overhead than a solution that implements a page counter as a
page-level object, requiring a separate file (or registry entry or
database table entry) for each page.  Implementing this as an
application-level object would not work because there would be no call
to OnStartPage, which is needed both to increment the page's hit count
and to get the page's name from the ServerVariables collection.


Installation
============

In order to use this component you must register it.  This will allow Active
Server Pages (ASP) Scripting Languages and other languages to make use of
the component.  ASP uses either the Server.CreateObject("ObjectName") syntax
or the <object id="myName" progid="ObjectName" runat="server"> syntax to
gain access to an object.  New objects can be made ready for use by
installing a new component.  Note: One component may contain more than one
object definition.

The following directions are to help you register the component for use:
 1. Use the Start menu, Programs option to start a Command Prompt
 2. Type the following:
	cd \InetPub\ASPSamp\Components\PageCnt\DLL\i386
 3. Type:
	regsvr32 PageCnt.dll
Note: you must register the component on each IIS server where you intend
to use it.

If you have trouble registering components, you may be using the wrong
version of RegSvr32.exe.  Please use the version installed by default in
the directory <InstallDir>\ASP\Cmpnts.  On Windows NT, the default
installation directory is \winnt\System32\Inetsrv.  On Windows 95, it is
\Program Files\WebSvr\System.

(If you rebuild the source code, the makefile will automatically reregister
the component for you.)

The following directions are to help you test the registered component:
 1. Use the Windows Explorer to copy all of the Sample files from
    \InetPub\ASPSamp\Components\PageCnt\Samples to \InetPub\ASPSamp\Samples.
 2. In your browser, open http://localhost/ASPSamp/Samples/PageCnt.asp
You must copy the sample file to a virtual directory; if you attempt to
examine it with a browser in the PageCnt\Samples directory, ASP will not
execute the script.


Usage
=====

To use the Page Counter, simply call Server.CreateObject on the page
for which you want to track hits.  When the page is loaded and
CreateObject is called, ASP will automatically call the object's
OnStartPage method.  In OnStartPage the Page Counter object determines
what its PATH_INFO is and automatically increments its count with the
CCM.  If you want to output the current number of hits for this page,
call the Hits method for this object.  If you provide valid PATH_INFO
information to Hits, it will return the current count for the
specified page.  If you don't provide any PATH_INFO, Hits will return
the count for the current page.  In a similar manner, you may call the
Reset method to reset a page's count to zero.

See the accompanying documentation for more detail.


File List
=========

File             Description
----             -----------

.\Source

 ccm.cpp         the C++ source code for the central counter manager, CCM
 ccm.h           declarations for CCM
 PgCntObj.cpp    the C++ source code for the page counter component, CPgCntObj
 PgCntObj.h      declarations for CPgCntObj
 PgCnt.idl       the declaration of IPgCntObj, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 PageCnt.mak     the Developer Studio makefile
 debug.cpp       useful debugging stubs
 debug.h         useful debugging macros and declarations for debug.cpp
 CritSec.h       CRITICAL_SECTION wrapper
 Page.cpp        classes to manage the hit counts and the list of hit counts
 Page.h          declarations for CPage and CPageArray
 PgCnt.cpp       ) DllMain and Registration code
 PgCnt.def       )
 PageCnt.mdp     )
 PgCnt.rc        )
 PgCntPS.def     } Generated by the ATL COM AppWizard
 PgCntPS.mak     )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

.\Samples

 PageCnt.asp     Simple script demonstrating the use of the page counter


Samples
=======

You must copy the sample to a virtual directory (it need not be a
virtual root) on an IIS Server before it will work.


Shortcomings
============

The Page Counter component will not work well with a large number of
hit counters.  It would not be hard to rewrite Page.cpp to use a
better searching strategy, such as a hash table.  For really large
numbers of hit counters, you should use a real database.

The Page Counter component returns textual hit counters.  If you want
fancy graphical counters, you'll have to build them yourself.


Build Notes
===========

This sample requires Microsoft Visual C++ 4.2b or newer.  If you are using
VC 4.2, it is necessary that you upgrade to VC 4.2b, using the patch which
can be found at http://www.microsoft.com/visualc/patches/v4.2b/vc42b.htm
Note that this patch will not work with earlier or later versions of
Visual C++, only with VC 4.2.

This sample also requires ATL (Microsoft Active Template Library)
version 2.0 or newer.  ATL 2.1 ships with Visual C++ 5.0.  ATL 2.0 for
VC 4.2b can be downloaded from: http://www.microsoft.com/visualc/prodinfo/
You do not need the ATL Docs or Object Wizard Technology Preview to build
the registry access component, but you will probably find them useful.

If you get an error about "don't know how to make asptlb.h", you will
need to copy <InstallDir>\ASP\Cmpnts\AspTlb.h to your include
directory.

You can build this component with nmake at the command line.  Read
Makefile for more details.  You can also build it in Microsoft
Developer Studio, using the PgCnt.mdp project.

The component can be built as ANSI or Unicode.  If you intend to run
it on Windows 95, build it as ANSI.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe Denali [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Registry Entries
================

Note: these values are reset to their defaults whenever the Page
Counter DLL is registered with regsvr32.exe.


Data Format
===========

The page counter records its data using the PATH_INFO ServerVariable
to identify a given page.  Here is an example of the file persisted 
by the page counter object.  
--
3      /virtual_root1/page1.asp
10     /virtual_root1/page2.asp
14     /joeuser/default.asp
--
WARNING: If you modify this file yourself, make sure it matches the
format shown above.  If it does not, the Page Counter will not be able
to reload the persisted data properly.


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Type Library name changes
* Check for new returning NULL a la ATL itself
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\permchk\samples\b.txt ===
Sample File for Permission Checker Testing.

To test, please modify NTFS permissions for this file using:
NT Explorer / Properties / Security / Permissions.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\denver.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Validation test plan for DenaliValidation test plan for Denali bhaveshd normal bhaveshd Microsoft Word for Windows 95Project Denver   DENali VERification Plan Synopsis Denali will have several native objects and collections that script writers will use. We need to ensure that all objects and all their methods/properties are functioning properly.  For the moment,  we are concerned with testing the  Request, Server and Response objects  What is needed is a set of scripts exercising these objects that will be useful not only during validation testing but also during stress testing.   Because the number of scripts will be large, we need to develop an automated verification system that is initiated from a  wininet  client.  The goals of this system are not to develop a stress tool.   However, the scripts developed for the verification system should ideally be reused in stress cases with WebCat. Architecture A key objective of this proposed verification system is that it be easily extensible so that it can accommodate a variety of scripts in the future.  Therefore, the client side of the system must be designed such that newer and different server-side scripts do not break the client. The only thing that changes on the client is the list of scripts (in the form of URL s) that must be tested.  To achieve the goals of automated verification and easy extensibilty, clearly, the .asp script itself must tell the client what the correct output is, and then also serve the actual Denali output to the client. In other words, the script must live in two modes: In the first mode, the script sends the client the hardwired  expected  output. In the second mode, the script sends the client the output from Denali s objects.  The client application will compare the expected output with the Denali object generated output and log errors when there is a difference.  These two modes are differentiated by whether a query string was passed along with the GET request. When a query string is not passed, the script will execute in the first mode. Client and Server interaction The client application will use the wininet library to make HTTP requests to Denali.  It will take two arguments: (1) a file that lists all the scripts to execute, henceforth called ScriptsFile  and (2) name of a file to log test results to, now called LogFile. For each URL in the ScriptsFile, the client will first make a connection, and then make a GET request with no query string.  The Denali script will detect , by the absence of a query string, that this is Phase 1 of the test. Therefore, it will send back to the client two pieces of information embedded within the HTML BODY section.  The first part comprises a FORM element where the script is self-referenced, with the addition of a query string that has already been hardcoded by the tester.   The second part consists of the expected output of the script that has been hardcoded by the tester.  This output is within a section called <VALIDDATA>.    Once the  client has received the above information, it stores the expected output in memory, and parses the FORM element to get the query string.  Based on the METHOD attribute of the FORM element, Denver will do either a POST or a GET during the second phase. For GETs, please make sure that the query string does not exceed 4k. For POSTs, you can have arbitrarily long data as the query string, which Denver will then convert into a POST request by sending the entire query string in the body of the request.    Denver now  makes a second  request to Denali, this time with the query string. In the case of a POST, a dummy query string of   is sent to force the script to execute the second phase condition of the script. In the case of a GET, Denver will just send the query string along with the request automatically causing the script to execute in the second phase.    Denali objects are referenced, properties and the return values from methods are output and sent to the client.   The client application compares the output of this second phase with the recently-received hardwired output.  Any differences are immediately logged as errors in the LogFile Example of a script that tests the Request Object s QueryString collection This script tests whether the Query String collection is returning the correct query for the request.  The script hardwires the query string in the FORM element s ACTION attribute. The script also sends a VALIDDATA section to the client application telling it that it must expect <P> ANDROMEDA </P> in Phase 2 of the test.     And in the second phase of the test, the Denali Query String collection is referenced and the query is output within the OUTPUT section. <% if (Request.ServerVariables("QUERY_STRING") = "")  then %> <!--  This code executes during Phase 1 of the test               The first condition will be executed only during the first phase      This part of the code sends the FORM and VALIDDATA elements  so that client knows      what to do <HTML> <HEAD> </HEAD> <BODY> <!-- This sets up the query string that the client will send later <FORM  METHOD="GET" ACTION="http://epiphany/scripts/query.asp?key1=ANDROMEDA"> <input type=submit value="Submit Form"> </FORM> <!-- This tells the client what to expect as the valid data  ( Tell client to expect <P> ANDROMEDA </P> as output <VALIDDATA> <P>ANDROMEDA</P>     </VALIDDATA> </BODY> </HTML> <% else %> <!--  Phase 2 of the test. This is the part that really tests Denali objects <HTML> <HEAD> </HEAD> <BODY> <!-- This starts sending the actual results of the Denali run. Note the use of  OUTPUT tags. ( If Denali is working correctly, this will output  <P> ANDROMEDA  </P> <OUTPUT>  <% Response.Write("<P>") %>              <% Request.QueryString("key1") %>     <% Response.Write("</P>") %>  </OUTPUT> </BODY> </HTML> <% end if %> The same script can be used during Webcat stress testing by copying the entire ACTION attribute in the FORM element of the script to the .scr file that Webcat uses.  This way, the first part of the script that hardly uses any Denali objects will not be referenced. Testing Headers Server Response Headers Like the <ValidData> tag, there is a <SERVERHEADERS> tag that can be used to test whether Denali is returning headers correctly.  This tag needs to be in the first phase, so that the client knows the kind of headers the script will be sending in the second phase (through use of the Response.Add method or any method that results in a response header being sent) <% if (Request.ServerVariables("QUERY_STRING") = "")  then %> <!-- The first condition will be executed only for the Verification suite       This part of the code sends the FORM and VALIDDATA tags so that client knows      what to do <HTML> <HEAD> </HEAD> <BODY> <!-- This sets up the query string that the client will send later <FORM  METHOD="GET" ACTION="http://epiphany/scripts/smoke/srvhead.asp?test"> <input type=submit value="Submit Form"> </FORM> <!-- This tells the client what to expect as the valid data  <VALIDDATA> </VALIDDATA> <SERVERHEADERS> <P>HeaderBlah1: headerValue1</P> <P>HeaderBlah2: headerValue2</P> <P>HeaderBlah3: headerValue3</P>  <P> SET-COOKIE:Grandma=Strawberry</P> <P> SET-COOKIE:Grandpa=Chocolate </P> </SERVERHEADERS> </BODY> </HTML> <% else %> <!-- This is the part that really tests Denali <HTML> <HEAD> <title>Server Headers Test</title> </HEAD> <!-- This starts sending the results that the client is expecting <BODY> <OUTPUT> </OUTPUT> <P><% Response.Add  "HeaderBlah1", "headerValue1") %>  </P> <P><% Response.Add("headerBlah2", "HeaderValue2")  %>  </P> <P><% Response.Add("headerBlah3", "HeaderValue3") %>  </P> <P> <% Response.SetCookie("Grandma", "Strawberry") %> </P> <P>  <% Response.Add("Set-Cookie", "Grandpa=Chocolate") %>  </P> </BODY> </HTML> <% end if %> Client Request Headers Because Denali provides functionality to access client request headers, we need to verify the methods that provide access to the client headers. Hence, a <CLIENTHEADERS> tag is needed in the first phase to alert Denver so that it sends these headers during the second phase.  This also requires the use of a <VALIDDATA> tag during the first phase and the use of <OUTPUT> tags in the second phase, otherwise how is Denver to know whether the client headers were accessed correctly by Denali during the second phase? Here is an example. <% if (Request.ServerVariables("QUERY_STRING") = "")  then %> <!-- The first condition will be executed only for the Verification suite       This part of the code sends the FORM and VALIDDATA tags so that client knows      what to do <HTML> <HEAD> </HEAD> <BODY> <!-- This sets up the query string that the client will send later <FORM  METHOD="GET" ACTION="http://epiphany/scripts/smoke/clihead.asp?test"> <input type=submit value="Submit Form"> </FORM> <!-- This tells the client what to expect as the valid data  <VALIDDATA> <P> HTTP_COOKIE = cookiename=cookievalue </P> </VALIDDATA> <CLIENTHEADERS> <P> COOKIE: cookiename=cookievalue </P> </CLIENTHEADERS> </BODY> </HTML> <% else %> <!-- This is the part that really tests Denali <HTML> <HEAD> <title> </title> </HEAD> <!-- This starts sending the results that the client is expecting <BODY> <OUTPUT> <P> HTTP_COOKIE = <% Request.ServerVariables("HTTP_COOKIE")  %> </P> </OUTPUT> </BODY> </HTML> <% end if %> Various Denver modes Use the following command line: denver -S <scrlist.txt>  -L <file to log test run into>  where -S is a list of scripts like:  http://epiphany/scripts/smoke/1.asp http://epiphany/scripts/smoke/2.asp -L is the log file for test results to be logged into. ADDITIONAL SWITCHES (available by typing denver /?) Monitor statistics: (Optional) This flag causes a monitor thread to monitor the state of every thread every 5 seconds. The flag takes the name of a file to write statistics to. Application Mode:(Optional) This is indicated by the -A switch with a value of 1.   During application mode, Denver will go through all the scripts from the list of scripts without disconnecting and maintaining cookie state across all the scripts.  This is ideal for testing a templication.    This switch is optional, and in that case, Denver behavior defaults to disconnection and reconnecting on every script execution, and to flush the cookie cache between every script.  -A with a value of 2 causes Denver to reuse the cookie (i.e. preserve the session ) for every script on a thread as well as for every repeated execution of the same script set. This is to get around a bug in denali where sessions are not cleaned up faster than they are being allocated. When you use this switch,  denver causes fewer sessions to be allocated in denali by reusing cookies. Repetitions: (Optional) Indicated by the -P switch. This is optional and defaults to 1, where 1 is the number of times each script will be run.  When the value of -P is 10, it means that Denver will go through the script list 10 times, executing script1, script2,  , scriptN and then script1, script2,  , scriptN  9 more times. In application mode (-A 1),  connections and cookie cache are recycled at the top of every loop.  In the non-application mode case, the default (-A 0),  the cookie cache and the connections are recycled after every script execution and at the top of the every loop. Threads: (Optional) Indicated by the -T switch.  This is optional and defaults to 1.   When you set the number of threads to, say 5,  all 5 threads will execute all the scripts. This allows Denver to stress test Denali with more connections. Unique log files are created for each thread. The log file for Thread 1 is the user-specified log file, say log.txt.   Subsequent threads are assigned log files by the ordinal number of the thread, for instance log.txt2, log.txt3, log.txt4 etc Compiler Test: (Optional) Indicated by the -C switch.  Optional and defaults to 0.  When you run Denver in compiler mode, Denver will notify the touchflt.dll filter about an impending compiler verification test.   Refer to the touchflt.doc for more information on the unique naming convention for such .ASP scripts. Wininet Test: Indicated by the -W switch. Optional and defaults to 1, which means use WININET.DLL.   0 means use sockets.  The Sockets value must be used when testing in application mode because wininet.dll screws up cookie-handling when multiple threads on a client have their own connections. Monitor statistics: (Optional) Indicated by the -M switch. This flag causes a monitor thread to monitor the state of every thread every 5 seconds. The flag takes the name of a file to write statistics to. Below is an example of a file created during a regular denver run.  Note that this file is truncated and update every 5 seconds.    In the monitor statistics file below, the two scripts were run 15 times (using the -P switch for repetitions ), and the result indicates that both scripts passed 15 times. The thread statistics indicates that 5 threads ran these scripts 3 times each, thus accounting for 15 executions of each script. ------------------------------------------------- Monitor statistics as of Sun Jul 07 18:46:58 1996 ------------------------------------------------- Script Statistics ####################### Passes Fails ------ ----- http://bhavesh1/function/query/query111.asp? http://bhavesh1/function/query/query113.asp? Thread Statistics ####################### Thread Iterations ------ ---------- Conclusion Denver provides an ideal solution for automated verification of Denali scripts. While the client side of the program is already complete and fully functional, the server side is not. More scripts need to be developed, so that all features in Denali are verified as fully operational. That is the subject of another document. (denfunc.doc) Notes For users of Denver Denver uses wininet.dll, so please watch out for mail on the IE build to install off \\psd1\products\ie30 Current version of Denver uses Build 1086. For ActiveX SDK, look at \\ntpdk\activex\latest WININET ERRORS  (copied from inetsdk\include\wininet.h #define INTERNET_ERROR_BASE                     12000 #define ERROR_INTERNET_OUT_OF_HANDLES           (INTERNET_ERROR_BASE + 1) #define ERROR_INTERNET_TIMEOUT                  (INTERNET_ERROR_BASE + 2) #define ERROR_INTERNET_EXTENDED_ERROR           (INTERNET_ERROR_BASE + 3) #define ERROR_INTERNET_INTERNAL_ERROR           (INTERNET_ERROR_BASE + 4) #define ERROR_INTERNET_INVALID_URL              (INTERNET_ERROR_BASE + 5) #define ERROR_INTERNET_UNRECOGNIZED_SCHEME      (INTERNET_ERROR_BASE + 6) #define ERROR_INTERNET_NAME_NOT_RESOLVED        (INTERNET_ERROR_BASE + 7) #define ERROR_INTERNET_PROTOCOL_NOT_FOUND       (INTERNET_ERROR_BASE + 8) #define ERROR_INTERNET_INVALID_OPTION           (INTERNET_ERROR_BASE + 9) #define ERROR_INTERNET_BAD_OPTION_LENGTH        (INTERNET_ERROR_BASE + 10) #define ERROR_INTERNET_OPTION_NOT_SETTABLE      (INTERNET_ERROR_BASE + 11) #define ERROR_INTERNET_SHUTDOWN                 (INTERNET_ERROR_BASE + 12) #define ERROR_INTERNET_INCORRECT_USER_NAME      (INTERNET_ERROR_BASE + 13) #define ERROR_INTERNET_INCORRECT_PASSWORD       (INTERNET_ERROR_BASE + 14) #define ERROR_INTERNET_LOGIN_FAILURE            (INTERNET_ERROR_BASE + 15) #define ERROR_INTERNET_INVALID_OPERATION        (INTERNET_ERROR_BASE + 16) #define ERROR_INTERNET_OPERATION_CANCELLED      (INTERNET_ERROR_BASE + 17) #define ERROR_INTERNET_INCORRECT_HANDLE_TYPE    (INTERNET_ERROR_BASE + 18) #define ERROR_INTERNET_INCORRECT_HANDLE_STATE   (INTERNET_ERROR_BASE + 19) #define ERROR_INTERNET_NOT_PROXY_REQUEST        (INTERNET_ERROR_BASE + 20) #define ERROR_INTERNET_REGISTRY_VALUE_NOT_FOUND (INTERNET_ERROR_BASE + 21) #define ERROR_INTERNET_BAD_REGISTRY_PARAMETER   (INTERNET_ERROR_BASE + 22) #define ERROR_INTERNET_NO_DIRECT_ACCESS         (INTERNET_ERROR_BASE + 23) #define ERROR_INTERNET_NO_CONTEXT               (INTERNET_ERROR_BASE + 24) #define ERROR_INTERNET_NO_CALLBACK              (INTERNET_ERROR_BASE + 25) #define ERROR_INTERNET_REQUEST_PENDING          (INTERNET_ERROR_BASE + 26) #define ERROR_INTERNET_INCORRECT_FORMAT         (INTERNET_ERROR_BASE + 27) #define ERROR_INTERNET_ITEM_NOT_FOUND           (INTERNET_ERROR_BASE + 28) #define ERROR_INTERNET_CANNOT_CONNECT           (INTERNET_ERROR_BASE + 29) #define ERROR_INTERNET_CONNECTION_ABORTED       (INTERNET_ERROR_BASE + 30) #define ERROR_INTERNET_CONNECTION_RESET         (INTERNET_ERROR_BASE + 31) #define ERROR_INTERNET_FORCE_RETRY              (INTERNET_ERROR_BASE + 32) #define ERROR_INTERNET_INVALID_PROXY_REQUEST    (INTERNET_ERROR_BASE + 33) #define ERROR_INTERNET_HANDLE_EXISTS            (INTERNET_ERROR_BASE + 36) #define ERROR_INTERNET_SEC_CERT_DATE_INVALID    (INTERNET_ERROR_BASE + 37) #define ERROR_INTERNET_SEC_CERT_CN_INVALID      (INTERNET_ERROR_BASE + 38) #define ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR   (INTERNET_ERROR_BASE + 39) #define ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR   (INTERNET_ERROR_BASE + 40) #define ERROR_INTERNET_MIXED_SECURITY           (INTERNET_ERROR_BASE + 41) #define ERROR_INTERNET_CHG_POST_IS_NON_SECURE   (INTERNET_ERROR_BASE + 42) #define ERROR_INTERNET_POST_IS_NON_SECURE       (INTERNET_ERROR_BASE + 43) // FTP API errors #define ERROR_FTP_TRANSFER_IN_PROGRESS          (INTERNET_ERROR_BASE + 110) #define ERROR_FTP_DROPPED                       (INTERNET_ERROR_BASE + 111) // gopher API errors #define ERROR_GOPHER_PROTOCOL_ERROR             (INTERNET_ERROR_BASE + 130) #define ERROR_GOPHER_NOT_FILE                   (INTERNET_ERROR_BASE + 131) #define ERROR_GOPHER_DATA_ERROR                 (INTERNET_ERROR_BASE + 132) #define ERROR_GOPHER_END_OF_DATA                (INTERNET_ERROR_BASE + 133) #define ERROR_GOPHER_INVALID_LOCATOR            (INTERNET_ERROR_BASE + 134) #define ERROR_GOPHER_INCORRECT_LOCATOR_TYPE     (INTERNET_ERROR_BASE + 135) #define ERROR_GOPHER_NOT_GOPHER_PLUS            (INTERNET_ERROR_BASE + 136) #define ERROR_GOPHER_ATTRIBUTE_NOT_FOUND        (INTERNET_ERROR_BASE + 137) #define ERROR_GOPHER_UNKNOWN_LOCATOR            (INTERNET_ERROR_BASE + 138) // HTTP API errors #define ERROR_HTTP_HEADER_NOT_FOUND             (INTERNET_ERROR_BASE + 150) #define ERROR_HTTP_DOWNLEVEL_SERVER             (INTERNET_ERROR_BASE + 151) #define ERROR_HTTP_INVALID_SERVER_RESPONSE      (INTERNET_ERROR_BASE + 152) #define ERROR_HTTP_INVALID_HEADER               (INTERNET_ERROR_BASE + 153) #define ERROR_HTTP_INVALID_QUERY_REQUEST        (INTERNET_ERROR_BASE + 154) #define ERROR_HTTP_HEADER_ALREADY_EXISTS        (INTERNET_ERROR_BASE + 155) 1. You can test all scripts (which specify GET in their FORM element) from Explorer. This is a quick way to test scripts.  Unless you really want it, don't use POST in the FORM METHOD.  Browsers like IE will not pick up the query string in the action tag to do a POST of that querystring data. 2. All scripts have 2 phases.   The first phase is distinguished from the second phase by looking at Request.ServerVariables("QUERY_STRING").  First phase 3.  Request.ServerVariables("QUERY_STRING")  is NULL. 4. Remember to emit the proper <HTML>, <HEAD>,  <BODY>, <FORM> and <VALIDDATA> tags (and their endtag equivalents) 5. Within the VALIDDATA element,  remember to bunch up logical units of work(i.e. expected output) between <P> and </P> tags. 6.  Within the FORM element, remember to set the METHOD property and the ACTION property. 7. For the FORM METHOD, you can specify  either GET or POST. But remember that if you specify GET,  don't expect Request.Body stuff to work. That works only when you do POST's. For POSTs, don t test the second phase from Internet Explorer. 8. Some scripts may not need any query strings at all (look at co.asp which does 'if then' testing) during either phase, but by our convention, we'll add a ?test to the URL within the FORM element.  This is important to distinguish the second phase (which will pass the dummy "?test" value to the script at that time) from the first phase. If you are doing a POST, this does not apply because you must specify data in the query string for the ACTION attribute. 9 For <CLIENTHEADERS> and <SERVERHEADERS> please specify headername headervalue pairs within <P> </P> tags for every header. It is also important to note that the header must conform to the HTTP header rules.  Make sure that the header name is separated by a colon and a space from the header value. Second phase 10.  Request.ServerVariables("QUERY_STRING")  is NOT NULL. 11. Remember to emit the proper <HTML>, <HEAD>,  <BODY>, and <OUTPUT> tags (and their endtag equivalents) 12.  Remember to bunch up logical units of output just the same as the first phase.  13. Don't worry about white space or case-sensitivity as you emit things within the output section. (Same is true for VALIDDATA section, but _not_ true for SERVERHEADERS which is whitespace sensitive!)    For instance, you can emit <P>       somedata     moredata  </P> in the OUTPUT section whereas earlier in the VALIDDATA section (phase 1), you emitted:    <P>SOMEDATA  moredata </P>  14.  In all cases, the program makes case-insensitive comparisons.  Every token within any of the Denver tags must not exceed 10k.   16. Make sure the output from scripts does not exceed 100k. Denver will be modified to handle bigger output soon. Normal Default Paragraph Font bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\EPIPHANY\C\wagtest\docs\denver.doc bhaveshd$\\BHAVESH1\C\wagtest\docs\denver.doc bhaveshd$\\BHAVESH1\C\wagtest\docs\denver.doc bhaveshd$\\BHAVESH1\C\wagtest\docs\denver.doc @HP LaserJet IIISi \\msprint16\corpa HPPCL5MS HP LaserJet IIISi HP LaserJet IIISi MSUDN HP LaserJet IIISi HP LaserJet IIISi MSUDN HP LaserJet IIISi Times New Roman Symbol Arial Wingdings Courier New Validation test plan for Denali bhaveshd bhaveshd
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\permchk\docs\permchk.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDDmitry Robsman Normal.dot Dmitry Robsman Microsoft Word 8.0Permission Checker Component Summary Usage Internet Server Settings IIS allows to specify a combination of three different types of security (password authentication): Anonymous Basic Internet Client (Browser) Settings Set pmck = Server.CreateObject("IISSample.PermissionChecker")
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\accdevgd.doc ===
ۥ-   	                  j  }                  h      T                            |    |   |    |    |    |    |   |          |    |    |   |  
 |  
       |  J 4}    4}  ( \}    \}    \}    \}    \}    \}                                              \}  4 }  : }    }                        6 9                                                             Development Methodologies for Access 2.0
Compiled by: David Habib
November 20, 1992
(checked into \accnext\doc\devinfo\devmeth.doc)

The goal of this document is to outline the development methodologies, standards, and rules that are accepted practice in the Access development group.  Team members should review this document to make sure they are in accordance with the methodologies outlined below.  New team members should always be asked to read this document before actually starting on the project.  In order to help clarify which methodologies are required, rather than just recommended, all required methodologies will be underlined; recommendations will not be underlined.

I.  Zero Defects

Zero Defects is a phrase coined in June of 1989, by a group of Microsoft software design engineers who met to discuss ways of improving our development process.  They published a spec of what they thought Zero Defects was, and what things we can do in our development process to improve the quality and reliability of our code and schedules.  Everyone on the project should review this document periodically, to make sure we continue to strive for Zero Defects code (you can get a copy of this document from TRIO in their ORBIT manual).  One can view the remainder of this document as the "Zero Defects" plan for Access development.

II.  Comments

It is important for everyone to follow our minimal commenting standards that basically require a module header comment, and function header comments.  We feel these comments help people navigate through code they did not write, and will certainly help people who need to learn the code.  Everyone needs to improve at keeping these header comments up to date.  Especially function header comments!  Note that the descriptions can be brief; the goal is to help someone quickly see the intent of a given routine, but not how it is actually done.

Common File Header Comment

/*============================================================================
Microsoft Access

Microsoft Confidential.
Copyright 1992 - 1993 Microsoft Corporation. All Rights Reserved.

Component: <Component Name>  (e.g., MDI Window Code)

File: <filename> (e.g., mdiwin.c)

Owner: <emailname>

<brief overview of functionality covered by the routines in this file>

(e.g., contains code specific to access mdi windows.  also contains code to
work around problems in win3.0's MDI code (such as supporting hidden
windows, etc.).	see _mdiwin.h for complete details!!)

============================================================================*/


Common Function Header Comment

/*============================================================================
<Function Name>

<brief comment describing what the function does (not how it does it).  this can take as many lines as necessary.>

Returns:
	<list values it can return, and what they mean>

[Side Effects:]
	[if function has important global side effects, briefly describe them here]
	
Can/Cannot ErrJump
============================================================================*/

III.  C Coding Styles

Function Declarations
Function declarations look like the following:

SCOPE TYPE FunctionName
(
TYPE1 Arg1, 	// comment describing Arg1 
TYPE2 Arg2,	// comment describing Arg2 
TYPE3 Arg3,	// comment describing Arg3
...
)
    {
    /* body of code */
    } 

where SCOPE is:

PUBLIC: a public api for other components to call in order to interact with the component.

PRIVATE: a private api which is used within a given component (across multiple files).

LOCAL [NEAR]: a private api for a given component which is only needed in the given source file.  typically it should be marked NEAR to make it a NEAR call rather than a FAR call.  The only time a LOCAL api is not marked NEAR is if it is specified in a dispatch table, and thus must be FAR.

CALLBACK: a public api which is going to be called from another DLL such as Jet, EB, ES, or Windows.  The most common case being Window Procedures.  For C8, we are planning on defining this SCOPE to do __export _far _pascal which will do the automatic save/setup/restore of DS based off SS.

Note that we've decided to remove API, since it was similar to PUBLIC and somewhat confusing.  We've also decided to replace STATIC with LOCAL to avoid problems with variables which need to be marked static.

Coding Style
This sample function shows our approved coding style:

SCOPE TYPE FunctionName
(
TYPE1 Arg1, 	// comment describing Arg1 
TYPE2 Arg2,	// comment describing Arg2 
TYPE3 Arg3,	// comment describing Arg3
...
)
    {
    TYPE Local; // comment describing local if appropriate

    Foo(x, y, z);
    
    if (expr)
        stmt;

    if (expr)
        {
        stmt1;
        stmt2;
        }
    else
        {
        stmt3;
        stmt4;
        }

    switch (expr)
        {
    default:
        stmt;
        break;

    case 1:
        stmt;
        break;
   
    case 2:
        stmt;
        break;
        }

    return(expr);
    } 


Data Types
We always use uppercase versions of data types and keywords.  I.e., we use INT for int, and LONG for long.  One exception to this rule is that under certain builds for the profiler, we map uppercase STATIC to nothing, so the profiler will recognize these routines.  This means that any static variable should always use lowercase static, so it will continue to truly be static under these profiling builds.  If we fully convert the project so all STATIC scoped routines use LOCAL, then we won't need to map STATIC to null under certain builds.

Hungarian Naming Standards
Please read the original Hungarian memo by Charles Simonyi (available from the ORBIT manual from TRIO) and read cirdoc\core\hungstd.txt for details.

Tabs
Our standard is that tab's are set to 4 spaces, and that everyone's editor must save out tabs, not spaces.  i.e., don't expand tabs to spaces.

All new routines should assume long pointers rather than near pointers
(Note: this has nothing to do with based pointers).  Given that we will eventually be moving to a flat 32 bit system, we should write all new routines to take long pointers, rather than near (DS based) pointers.  The performance benefit of near pointers probably isn't that significant, and every routine which is written to take near pointers has a high potential of later needing to be changed for long pointers, or a duplicate routine has to be introduced to handle long pointers.

Return Ida's, not Bool's (and remove ceret's and err's)
Many routines on Cirrus had to be modified from returning a simple True/False (bool) to return a tri-state value (ceSuccess, ceFailed, or ceCancelled).  When creating new routines, keep this in mind and if there is any chance that it will be called from EB or Macro code, or it can be aborted, make it return ida's instead of bool's.  We will replace our current uses of the ce ret values with new ida's.  Thus we will have define's for idaSuccess and idaCancelled; any other ida is a failure.  We will also remove our currently defined err values which are used for errjumping, and change code to errjump with ida's.  This will unify all our code with one consistent model.

Include Files
We currently have the standard that public information (data structures, defines, and prototypes) are put in include files with the same name as the component in the BUILD\INC or US\INC directory.  Private include files which contain data structures, defines, etc. which are specific to the given component reside in the same directory as the component, and their filename begins with an underscore.  Nesting of include files is prohibited.

Allocate during WM_NCCREATE, rather than after window created.
When you create a window, your WndProc receives several messages before the actual call to CreateWindow returns.  This raised several problems for code which assumed that internal data structures would be set up by the time they received window messages.  The solution to this is to do all allocation and initialization of window related data structures during the WM_NCCREATE message.  This way all subsequent messages you receive before returning for CreateWindow will have the info they need correctly set up.

Minimize use of goto's in code.
We all have heard the evil of goto's, and we all have used them in many scenarios.  Try to structure your code to not use goto's, with the exception of goto's which take you to either the return of a function, or the error handling code of a function.  This helps keep your code much easier to read, understand, and debug.  Remember, you won't be the only one looking at your code forever!

ErrJumps
On Access, we support a mechanism for a routine to exit with an error, returning to a routine in the stack which has set up an error handler.  Anyone unfamiliar with how this works should get a detailed explanation from a current member of the development team.  While many of us feel that this is a powerful and useful mechanism, we all agree it can lead to bugs and is trickier to code.  Thus we have come up with the following rules and recommendations with respect to ErrJumps:
	- All routines which can ErrJump (or propogate ErrJumps), must end in the letter J.
	- All PUBLIC api's should return errors, rather than ErrJump.
	- All routines which don't ErrJump (or propogate ErrJumps), should AssertNoErrJump().
	- All routines called from dispatch tables should return errors, rather than ErrJump.
	- When using ErrJump's, the error handling should be in the If block, and the normal flow in the Else block.
	- Consider whether it would be better for new routines to return errors, rather than ErrJump.


Null out variables which refer to objects when freed or destroyed.
Whenever you free an object (such as an hwnd, seg, ppb, etc) you should always set the object's variable to null so that it won't be accidentally referenced or freed again.  Do this even if you know that no more code in your routine touches the variable.  Eventually, someone is going to modify the code and introduce a bug that might be avoided if the variable was null'd out.

IV.  Checkins

All code must be run and tested before being checked in
Before you check in any new code, you must ensure that it has been run and tested.  I highly recommend that you actually single step it in the debugger.  This will help you find bugs in your code, and will convince you that the code works as intended.  You should never check in code which hasn't been verified that it works.

All checkins must be reviewed before being checked in
We did this the last 3 months of Access 1.0, and I think it helped make all of us more cautious, and it certainly found bugs which would have gone in undetected.  We certainly won't be applying the same amount of critique on every checkin, but it will give a chance for you to run by your changes with another developer, and give someone a chance to catch any problems.  Trivial checkins are excluded from this rule.  If you aren't sure if it is trivial, then pass it by a lead.

No checkins allowed with incomplete error handling
Many people always thought they would get around to implementing the error handling and testing of it (through RFS) later on in the project.  Unfortunately, for some this never happened due to running out of time!  These sorts of problems are very painful when they show up later and are tracked down by someone who potentially spends several hours finding it.  New rule: no code can be checked in if the error handling is incomplete.   You must force yourself to code it before checking in.  I'd also like to encourage that you force it to be hit in the debugger to make sure it works.  I am not proposing we force RFS to be done before checking in, since in many cases it is very hard to RFS a specific routine.  We should all plan on RFS'ing components as we complete them, though, before we move on to new components.

Addfile new files immediately to avoid breaking the build
The most frequent source of problems in breaking the build comes from people forgetting to addfile new files when they are checking in.  This is very easy to avoid.  To avoid this scenario, simply addfile your new files as soon as you create them, then immediately check them out.  That way, when you check in you will be less likely to forget the new files, since you will see that you have them checked out.  Note that you dont even need to put anything interesting into the file before you addfile it; if you later decide that you will not need the new file, delfile it.  Since the cost to the team of a broken build is so high, and the solution for this scenario is so simple, this procedure is a requirement, not a suggestion.

All incomplete code must be marked with UNDONE's
Putting comments in our code which started with the keyword UNDONE was a very successful way for us to find all the little bits and pieces of missing functionality on Access 1.0.  It prevented things from slipping through the cracks.  Unfortunately, we waited until a very late stage of the project to try to flush out all UNDONEs.  We should continue to use them in our code, but we need to be more proactive in reviewing them at each milestone to identify remaining work and holes in our designs.  It is very important, though, to not check in incomplete code thinking you'll finish it later.  Either it shouldn't be checked in, or if you have good reason to get it in, it needs to have appropriate UNDONEs to flag remaining work.  You should never check in an UNDONE for error recovery; error handling must be handled.  A final note on UNDONES; don't put the word UNDONE on every line of a comment block.  Just put one UNDONE at the beginning of the comment.  This way we can search the entire project for UNDONE's, and get an idea of how much work we really have.

Acceptance Suite
Our rule is that you must always run the full acceptance suite on your DEBUG build before checking in code.  We have also suggested that people try to run the RETAIL suite as well, to make sure they don't introduce problems under RETAIL..  As a general rule, we've suggested that you checkin first, and then run the RETAIL suite.  The acceptance suite is completely maintained by development, i.e., YOU!  As you implement new functionality, it is your responsibility to extend the acceptance suite to test key new areas.  The investment in your time in doing this is very much worthwhile in the long run, as it helps prevent other people from breaking your code (and protects you from tracking down bugs you didn't introduce)!

V.  Designs

I think designing is something we didn't consistently spend time on during the development phase of Cirrus.  We were good during our initial milestone(s) at designing before coding, and having it reviewed, but as the project was well underway, each developer began to just go off on their own way.  I think we were bit by this in the end.  From now on, I'd like to see us all learn to become better designers, and I'd like to see us design our project as a whole much better.  Here are some rules I think we should all follow:

Design before Coding
You should not code any component (or even sub component) until you have a clear plan on how it will be designed.  What its major data structures are; what its public api's are; and how it will interact with different components.  

Document Designs
I recommend you write these designs down in the form of documents, email (which you then should save), text files, or well commented include files.  This will force you to think things out fully, and will leave a history of what decisions were made and how a given component works.  It is also very important to keep pertinent technical documentation up to date (especially include files) as designs evolve and change.

Get Design Reviewed before Coding
Once you have come up with a design and written it down, you need to get it reviewed by your lead (who may also include some of your peers).  This is a chance for you to make sure you truly have thought things out, and to get feedback (before you've coded) on better ideas and/or algorithms.  Some of my best work has always been designed by bouncing ideas off other people, rather than assuming I could/should figure it all out myself.  We can all grow by learning from each other.

Design for Extensibility
When designing a component, it is important to always keep in mind that you are going to need to extend it in the future.  No matter what, none of us is able to foresee the future and get it 100% right the first time.  In the future, there will be more users and clients of the component.  In the future, the component you are designing will be asked to do more.  Here are some techniques which should help:

Use Dispatch Tables:  Avoid putting in special case code for a specific type of object in your code.  Figure out what each object needs to provide you, and have each object give you a dispatch table you can use to either call their code, or get the data you need.  Your code should try to never have to know which type of object it is working on.

Data outside of Code: New clients should be able to hook into your code with no modifications to your code.  If dispatch tables or templates are needed to use your component, the client should be able to declare them outside of your code, and just pass you a pointer or handle to it.

Use Parameter Blocks:  We've found that we always end up having to extend api's to take more arguments to support new functionality, design changes, and work around bugs.  Changing all callers of a given function can be a costly experience, depending on the number of callers.  One way to avoid this problem, and make extensiblity of api's easier to implement, is to use parameter blocks.  Instead of passing all the information you need as arguments to a function, pass a pointer to a well-defined structure or structures.  If later you need more info, we can extend the structure to contain it, rather than having to change the actual arguments to the api.  Parameter blocks make sense when 1) the api takes many arguments, 2) the same parameters will need to be passed down several levels of api deep, and 3) a group of arguments are logically related.  Parameter blocks should not include both input and output arguments; use a separate parameter block for output if needed.  Parameter blocks should not contain UNIONS, since this can lead to bugs with multiple users of the parameter block overwriting eachother's data.  Also, when using any api which takes parameter blocks, make sure to first initialize the entire block to a null state to avoid problems if later parameters are added.  You can do this with a call to FillB(0, &paramblock, sizeof(paramblock)) or calling a specific parameter block initialization routine provided by the component.  

Use Grbits, not Bools: Many times you will find that you create an api which takes a boolean flag or flags, and you later need to add more flags to the api.  One way to avoid the hassle of having to add new arguments to the routine and then modify all callers is to use a WORD or LONG of bit flags, rather than just a BOOL.  In hungarian, the parameter would be a grbitFoo with bitf's defined to pass in.  This makes it very easy to add a new piece of functionality to an api for a given client, without having to modify other callers which don't want the functionality.

Minimize Assumptions & Dependencies: When writing new code, try to avoid making any assumptions or dependencies on information outside the parameter list of the routine.  If you are planning on writing code for a component which typically relies on a global segment, and you decide the function may have potential use to other clients, then by passing in the segment as an argument your code is now much better prepared to be shared.  It also avoids problems of someone adding a new call to your api, but not having the appropriate globals initialized correctly.

Design for Reuse
Always design your components with the idea that other areas may use the work, rather than just the current area.  Think about what other areas of the product could benefit from your work.  If you keep it generalized and put a little more support into it, does it suddenly become useful to the project as a whole?  Everytime your code can be leveraged by others, it is a huge net win to the project, and we will meet our goals faster.

Prove It!
We have all come across code (either our own or someone else's) which we weren't sure if it really worked.  Don't ignore these situations.  Chances are that if you have doubts, there truly might be a problem.  When you come across this, spend the time it takes to prove it works.  This will help increase your knowledge of the project and will help flush out potential design and coding problems.
.
Reentrancy
We live in the wonderful reentrant world of Windows, and some of our toughest problems and latest fixes came with respect to reentrancy.  Always assume your code will be called reentrantly.  If your code cannot support this, then we need to figure out if we have a design problem, or must put in a semaphore to prevent it from being called reentrantly.  Don't assume it won't happen.  With Macros, EB, and Jet, we open ourselves up to many reentrant scenarios.  To summarize some of the immediate causes of reentrancy problems:
	- your routine uses or modifies globals 
 	- your routine uses or modifies static locals
	- your routine calls a component which is not reentrant

VI.  Debug Coding

By using debug only code in your components, you can help detect and solve problems much quicker, without having to spend as much time debugging.  In Access, we use #ifdef DEBUG ... #endif /* DEBUG */ to create code which is only included in the DEBUG build of the product.  On occasion, you must use #ifndef RETAIL ... #endif /* !RETAIL */ for debugging code which you may need in a profiler or rfs build (TESTOPT).  Here are some debug coding techniques to consider:

Asserts
Assert(expression) is a macro which only generates code under DEBUG builds.  During runtime, if the expression evaluates to False, a message box will come up which will display the source file name and line number which failed.  If the expression evaluates to True, no message box comes up.  Asserts are very useful for ensuring that arguments to functions are valid, and that your component is in a valid state.  You should always use Asserts to ensure the arguments to PUBLIC api are valid.  If an api takes a parameter block, use Asserts to ensure the contents of the parameter block are valid as well.

Debug Messages
Access supports sending debug information messages to COM1 or to a file through some debug code provided in UTIL\DEBUG.C.  Under the Debug menu on most Access menubars (the hidden menu to the right of the help menu), you can choose the command "DEBUG/RFS Control" which will bring up a dialog which allows you to enable/disable certain debug features.  This is very helpful way of tracking your component's state while running, without having to interact heavily with the debugger.

Resource Tracking
On the DEBUG build of Access, we keep track of all allocated global memory segments and many GDI objects.  Each time a segment or GDI object is created it gets logged to a collection class; each time a segment or object is deleted it gets removed from the collection class.  When Access closes, we are able to detect if any segments or objects are remaining in the collection, and we put up appropriate warning messages if so.  This helps us detect memory and resource leaks.  Whenever creating a component which has its own private set of "resources", you should consider adding appropriate resource tracking under DEBUG, so you can make sure your component correctly cleans up after itself.

VII.  Remaining ZD Work

Here are some remaining rules and recommendations which you should take into account when designing and implementing your components before considering them complete.

RFS
RFS stands for Resource Failure Simulation.  On Access, we have debug code hooked up which allows us to force all api's in the system which could fail to fail in an automated way.  Thus you can fully test your component to make sure you have correct error handling for all api's which may fail.  Our rule is that you must RFS all new components and any major redesigns of existing components.  We also recommend that if you have low-memory or resource usage bugs reported against a component, that you use RFS to find the bug (and the others it will uncover).  You should plan on rfs'ing your component before moving on to other work.

Working With Testing
It is in Development's best interest to make sure the Testing team is up to date on new components, and fully understands how they should be tested.  Furthermore, it behooves us to make sure that testing is really testing the right things, and not missing some piece of functionality.  I've discussed with various people ways in which we feel we could help enforce this process.  We all agreed that forcing people to review all Test Plans for a given component was not efficient, and that just sending email to testing every so often was not enough.  The leads have come up with the following rule we are going to try:  After any new component, feature, or redesign is completed, you must talk directly to a tester about it in person.  Sending email about it is still a good thing and recommended, but we want to ensure that development and testing talk directly to each other on a normal basis, to help us make sure that testing gets the information they need, and development detects up front any area which is missing testing.

Performance
To quote the Zero Defects document, "Fat and slow is a bug".  You should always design your components with performance and resource usage in mind.  You need to make sure that the design you have will be acceptable on our customer's target machine, which today is a 386 DX 20mhz, with 4 megabytes of RAM.  If your component seems too slow, or potentially requires too many resources or memory, then you must address the problem before moving on to other work.  We made the mistake in Access 1.0 of leaving too much performance work to be tackled at the end of the project, and unfortunately did not have time to do all the work we had wished.  We will be in much better shape if we tackle performance and resource usage problems as soon as we become aware of them, and we must try to tackle these issues while designing and implementing, not later.
Access 2.0 Development Methodologies	printed date 06/09/93	page page 5




                                                                                                                                                                                                                                                                                                                                                                 3  E        h    	  	                              M  W                          l  r    L  3  l    !           !"  B"  #  #  %  &                                     
          
          
          
          
          
              
          
              
          
              
              
          
          
                :&  &  N&  &  &  '  '  '  (  )  )  )  %+  \+  >-  r-  0  0  3  3  '8  98  J8  8  9  A:  ;   ;  2=  J=  5>  G>  ?  @  A  B  C  C  	E  E  (F  =F  UK  ~K  K  K  N  ?N  PP  bP  R  #R  S  S  iV  |V  #W  GW  W  W  VX  _X  fX  pX  X  X                                                          
          
          
          
          
          
          
          
          
          
          
          
         AX  Y  Y  Z  Z  \  \  ~_  _  _  C`  J`  a  a  b  b  Je  e  f  f  &h  h  Fj  sj  tj  yj  zj  j  j  j  j  j  j  j  j  j  j  j  j                                                                                                                                                                                                                  B                                                   
          
          
           &          
  1  3  E  G              	  	  d	  v	  x	  	  	  	  
  
  1
  3
  G
  I
  
  
  
  &  ]  _            %  6  8              K  N  b                /  2  \                          ½                                                                                                                     F      M  O                        (  +  U  ~                    *  ,  ;  F  V  f  q  {                             ,  1  >  M  ]  h  j  }                j  l  r      L  1  3  l      Ŀ                                                                                                          K  !         "  !"  B"  #  #  #  %  &  N&  &  &  m'  '  '  '  (  )  )  )  )  )  #+  %+  \+  <-  >-  r-  0  0  0  3  3  3  %8  '8  98  ;  ;   ;  ";  2=  4=  J=  3>  5>  Ŀ  ~~                                                                                                                                                                                                                  15>  G>  ?  ?  @  A  A  B  C  C  E  	E  &F  (F  K  K  N  N  NP  PP  bP  R  R  #R  S  S  S  U  U  -V  gV  iV  |V  ~V  TX  VX  _X  Z  Z  Z  \  \  \  ~_  _  _  _  C`  E`  J`  b  b  b  f  Ŀ                                                                                                                                                                                                        5f  f  f  Fj  j  j  j  j  j                                                                                                                                                                                                                                                                                                                                                                                                                           !$ &	1                                  7         
         F       	Q        !
      h
      x 
       
                                            i    j      R   T     j  6   j  9 J 
 Tms Rmn 	` Symbol   Helv  Times New Roman   Arial 0 Courier New  -   3   <   C   I   K   i  ! "              L,K,   	      d    :   Development Methodologies   David HabibAndrew Sigal                                                      
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\permchk\samples\c.doc ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}{\f16\froman\fcharset238\fprq2 Times New Roman CE;}{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f22\fswiss\fcharset238\fprq2 Arial CE;}{\f23\fswiss\fcharset204\fprq2 Arial Cyr;}{\f25\fswiss\fcharset161\fprq2 Arial Greek;}{\f26\fswiss\fcharset162\fprq2 Arial Tur;}{\f27\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\title Sample File for Permission Checker Testing}{\author Dmitry Robsman}{\operator Dmitry Robsman}{\creatim\yr1997\mo2\dy5\hr16\min27}{\revtim\yr1997\mo2\dy5\hr16\min27}{\version2}{\edmins1}{\nofpages1}{\nofwords22}{\nofchars129}{\*\company MSFT}{\nofcharsws0}{\vern71}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale114\viewzk2\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {Sample File for Permission Checker Testing.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par To test, please modify NTFS permissions for this file using:
\par NT Explorer / Properties / Security / Permissions.
\par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\devguide.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Sterling Technical NoteSterling Technical Note Brendan Dixon technote Andrew Sigal Microsoft Word for Windows 95JPI/Poison Development Guide Author: Brendan Dixon (Andrew Sigal) Version:  SAVEDATE  \* MERGEFORMAT  10/05/95 2:37 PM  (1/30/96) Contents  TOC \o "1-2"  General Issues  GOTOBUTTON _Toc299339914    PAGEREF _Toc299339914  Files and Formatting  GOTOBUTTON _Toc299339915    PAGEREF _Toc299339915  Using C++  GOTOBUTTON _Toc299339916    PAGEREF _Toc299339916  Threads, 32-bits, and Portability  GOTOBUTTON _Toc299339917    PAGEREF _Toc299339917  Code Reuse and Performance  GOTOBUTTON _Toc299339918    PAGEREF _Toc299339918  Check-list Items  GOTOBUTTON _Toc299339919    PAGEREF _Toc299339919  Coding Style  GOTOBUTTON _Toc299339920    PAGEREF _Toc299339920  Commenting  GOTOBUTTON _Toc299339921    PAGEREF _Toc299339921  Class Declarations  GOTOBUTTON _Toc299339922    PAGEREF _Toc299339922  Functions Declarations and Definitions  GOTOBUTTON _Toc299339923    PAGEREF _Toc299339923  Standard Hungarian Notation  GOTOBUTTON _Toc299339924    PAGEREF _Toc299339924  Statements  GOTOBUTTON _Toc299339925    PAGEREF _Toc299339925  Attaining Zero-Defects  GOTOBUTTON _Toc299339926    PAGEREF _Toc299339926  Design and Code Reviews  GOTOBUTTON _Toc299339927    PAGEREF _Toc299339927  Asserts, Debug code, and Work in Progress  GOTOBUTTON _Toc299339928    PAGEREF _Toc299339928  Error Handling  GOTOBUTTON _Toc299339929    PAGEREF _Toc299339929  Resource Failure Simulation (RFS) Testing  GOTOBUTTON _Toc299339930    PAGEREF _Toc299339930   TOC \o "1-2" \* MERGEFORMAT  1. IMPORTANT NOTE  GOTOBUTTON _Toc347650267    PAGEREF _Toc347650267  2. General Issues  GOTOBUTTON _Toc347650268    PAGEREF _Toc347650268  2.1 Using C++  GOTOBUTTON _Toc347650269    PAGEREF _Toc347650269  2.2 Threads, 32-bits, and Portability  GOTOBUTTON _Toc347650270    PAGEREF _Toc347650270  2.3 Error Handling  GOTOBUTTON _Toc347650271    PAGEREF _Toc347650271  2.4 Performance and Code Re-use  GOTOBUTTON _Toc347650272    PAGEREF _Toc347650272  2.5 Check-list Items  GOTOBUTTON _Toc347650273    PAGEREF _Toc347650273  3. Coding Style  GOTOBUTTON _Toc347650274    PAGEREF _Toc347650274  3.1 Files and Formatting  GOTOBUTTON _Toc347650275    PAGEREF _Toc347650275  3.2 Header Files  GOTOBUTTON _Toc347650276    PAGEREF _Toc347650276  3.3 Code Files  GOTOBUTTON _Toc347650277    PAGEREF _Toc347650277  3.4 Statements  GOTOBUTTON _Toc347650278    PAGEREF _Toc347650278  3.5 Commenting  GOTOBUTTON _Toc347650279    PAGEREF _Toc347650279  3.6 Standard Hungarian  GOTOBUTTON _Toc347650280    PAGEREF _Toc347650280  4. Attaining Zero-Defects  GOTOBUTTON _Toc347650281    PAGEREF _Toc347650281  4.1 Design and Code Reviews  GOTOBUTTON _Toc347650282    PAGEREF _Toc347650282  4.2 Asserts, Debug code, and Work in Progress  GOTOBUTTON _Toc347650283    PAGEREF _Toc347650283  4.3 Resource Failure Simulation (RFS) Testing  GOTOBUTTON _Toc347650284    PAGEREF _Toc347650284  IMPORTANT NOTE This document is a hack.  This is the Sterling Dev methodolody document, and will act as a starting point for the JPI/Poison/Stinger developer methodology.   Note that Sterling is based around MFC and uses C++ exceptions for error handling.  Poison will NOT use either MFC nor C++ exceptions. General Issues Using C++ All Sterling code is C++.   This does not mean that classes should be used for everything, but that each source file must contain valid C++ code.   Using C++ brings several benefits:   inline functions, function overloading, stricter type checking, greater freedom with variable declarations, and (when appropriate) object support. Here some general points to remember when writing C++ code: Prefer and use inline functions over macros inline functions are better than macros since they provide type checking and are easier to debug (unlike macros, the debugger can step into inline functions).  Like everything in C++, use inline functions judiciously.   Generally, using one inline function within another makes it very difficult for the compiler to correctly optimize the code and, for that reason, should be avoided. Overload functions rather than define several with similar names Similarly, overloading functions is preferable to defining multiple functions with similar semantics but which vary in name and arguments.  If the additional overloaded functions are provided as a convenience to the caller (for example, to accept a broader array of input arguments), consider providing just one declaration that provides default arguments instead.   In any case, as much as is possible, forward the bulk of the work to a single function (usually marking with the additional functions as inline routines which that pass control to the main function). Declare variables at the point needed rather than all at function entry C++ also allows the declaration of variables anywhere within a function or statement (rather than only at the beginning as in C).   Since the instantiation of some variables (for example, objects) may be very expensive, the C++ community tends to encourage declaring variables near their usage.   Simple variables used throughout a function are probably still best declared at or near the beginning of the routine.   Also, make use of the const keyword whenever appropriate (especially on function arguments); and let the compiler enforce your assumptions. Use const references to pass objects or large variables by value Reference types are similar to C pointers.   A reference is an alias for another variable, like a pointer, except that no address operator is required when setting and no de-referencing required when accessing. Use const r  eferences, instead of pointers, when passing large variables if the receiving routine is not allowed to change the variable. Continue to use   pointers whenever the receiving routine intends to change the variable. Design and use classes carefully Poor class design leads to buggy, slow code; good class design leads to robust, efficient code. Keep constructors and destructors light. Pass objects by reference or by pointer. Do not create classes unnecessarily, they are not free. (Though well-designed classes can be very inexpensive and have benefits which outweigh creation costs.) Do not return objects on the stack.   (Additional information regarding how to best use classes, in addition to several articles that I have (and are easily found), may be found in Effective C++ by Scott Meyers, published by Addison-Wesley.) Threads, 32-bits, and Portability One of Sterling s goals is to be great Win32 application. Sterling has no Win16 or Mac requirements. Some implications of this are: Code to Win32 conventions Sterling is a full 32-bit, multi-platform application. Become familiar with and use the Win32 API, prefer the newer Ex APIs (e.g., RegOpenKeyEx) over the existing Win16 equilivents. Also, follow 32-bit conventions in your code. Do not use the FAR modifier, for example, on pointer declarations (and use just   rather than   for hungarian pointers). Code for multiple platforms Since Sterling must run on RISC platforms, design data structures, especially those persisted, for all platforms. Pack structures on 8-byte boundaries. Do not assume the size of ints, longs, or other built-in C/C++ types. Do not use sizeof to determine the number of entries in an array (use the Sterling DimensionOf macro instead). Sterling is also (eventually) shipping a single, world-wide .EXE. As a result, Sterling uses the Unicode character set, even on Win95. As with previous versions of Access, all international resources are kept outside the .EXE in a stand-alone .DLL. Keep the following points in mind: Use Unicode, characters are no longer 1 byte long Similarly, Sterling uses Unicode and declares all characters as instances of WCHAR. Do not use sizeof to determine the number of characters in an array: use DimensionOf. Distinguish carefully between passing and storing the number of characters (a  ) vs. the number of bytes (a  Do not #ifdef out country specific code Instead, determine the locale and react correctly at run-time. While we might not fully implement this for the  97 product, we will for the  Keep international resources in the international .DLL, all others in .EXE Use the standard Sterling routines for loading and accessing resources and keep them in the appropriate module: the international .DLL for anything that may need translation, the .EXE for things that must not be translated. (Everything kept in the international .DLL is acceptable for translating.) We will utilize threads only opportunistically, likely having only one long-running task thread. Guard access to global objects shared between threads with one of the CUL objects designed for that purpose. (If a global object is not shared, protection is unnecessary.) Error Handling Sterling uses C++ exceptions to propagate errors and HRESULTs to represent errors. See the Sterling technical note (\\sterdev\slm\src\sterling\docs\except.doc) for details on throwing, catching, and using exceptions. Performance and Code Re-use sequence (notice the Unicode constant begins with an underscore).  Likewise, multi-byte specific sections (that is, DBCS) should be brackted with an #ifdef _MBCS . . . #endif sequence (again, it begins with an underscore).  (The details of our Mac (PowerPC) strategy are still being resolved). As we are all painfully aware, enhancing a product s performance gets more difficult as development progresses, not easier. It is a another key Sterling goal to be as fast and light as possible. To meet that goal, performance, like other features, must be designed in. Performance is not the job of testing or a performance guru; the job belongs to everyone. Application performance is affected by two related parameters: length of the code-path and amount of memory consumed by the application. Most developers focus on the first, while most of our evidence indicates the second is our main problem. Throughout development, Sterling will monitor working-set consumption. We will also use profiles to analyze hot-spots (such as loading a form). The day-to-day guidelines we should all follow are: As much as possible, write each line of code only once Sharing code generally shortens code paths and saves memory. It also reduces bugs and improves product stability. Performance sensitive routines can share code via inline functions. In general, if you have to write the same code twice, see if there is some way to reasonably share the implementation. Prefer clear design over obtuse performance While performance is critical, so is stability and longevity: changes must not easily break the code or require hidden secrets. Strive first for clarity in your routines and second for fast performance. (We will tweak routines which profiles determine are critical later in the process. Such tweaks will be more difficult if the original code is poorly designed.) Select carefully what you cache vs. what you create t assume you have all the memory in the world. Don t cache every imaginable pointer in your classes and structures. Cache frequently used items or those things are (or impossible) to recreate. Recreate that which is used infrequently or can be easily recreated. Be performance aware even in code you don t own and file performance bugs Lastly, don t assume that someone else will notice problems you find. If you find performance problems running Sterling, assume it s a bug and report it. We can always close the bug if it was unnecessary. Check-list Items The following list contains some random items which should affect much of the code you write. Only check-in changes after passing the acceptance suite Set all invalid pointers to NULL Initialize all locally declared variables Validate all parameters coming from an external source (for example, use IsBadxxxx Win32 APIs) Ensure all locally allocated resources are freed on normal and error exits Verify loop initialization and termination states/conditions Confirm that all object methods leave the object in a internally consistent state (even if they exit with an errorincluding under error conditions) Coding Style Files and Formatting All files are tab (not space) formatted set at every 4 characters. To make it easier to find files, their names should reflect what they implement. Header Files Basic Style A single, project-wide pre-compiled header file will include all system headers (e.g., Windows, OLE), C/C++ runtime headers, and project wide headers.   Each header file should include all other header files upon which it is dependent.  To prevent multiple inclusion, each header needs to conditionally include its contents by checking for and defining a preprocessor constant derived from the file name.   For example: /*----------------------------------------------------------------------------- Microsoft Sterling Microsoft Confidential Copyright 19924 - 19935 Microsoft Corporation. All Rights Reserved. File: <filename> Area: <area used (e.g., Shell> Contents:   <brief description of the routines and/or classes contained> -----------------------------------------------------------------------------*/ #ifndef   _FOO_H #define   _FOO_H // Includes ------------------------------------------------------------------- . . . // Types and Constants -------------------------------------------------------- . . . // Globals -------------------------------------------------------------------- . . . // Prototypes ----------------------------------------------------------------- . . . /*----------------------------------------------------------------------------- Name: CFoo Description: This is the CFoo class. -----------------------------------------------------------------------------*/ class CFoo public: . . . protected: . . . private: . . . // Inlines -------------------------------------------------------------------- _AFX_INLINE void CFoo::Foo() { Assert(FALSE); return m_j; } _AFX_INLINE void CFoo::Bar() { Assert(FALSE); return m_h; } #include <foo.inl> // Other inline routines #endif   // _FOO_H Header files start with other includes, types, constants, globals, and prototypes. Next come class declarations. Small inline routines are collected at the bottom of the file. If an inline routine requires more than one or two lines, it should be placed in a separate .INL file that s included by the .H. Class Declarations Class declarations include three parts: the public interface, the protected interface, and the private interface. Within each part, list data members first, methods second. The public part should not contain any data items (provide accessors instead) and should list the class constructors/destructors, followed by interface methods, and then class methods. Declare OLE interfaces using the standard OLE macros (e.g., STDMETHOD); in fact, it s best if you cut-and-paste the definitions from the official header file to make certain the signatures are identical. Do not use the OLE macros for any other methods. /*----------------------------------------------------------------------------- Name: CMyObject Description: This class implements a COM object Thread-Safety: None -----------------------------------------------------------------------------*/ class CMyObject : public IUnknown, public IDoThisInterface public: CMyObject(); CMyObject(int j); ~CMyObject(); // IUnknown methods STDMETHOD(QueryInterface)(THIS_ REFIID riid, void** ppvObject); STDMETHOD_(int, AddRef)(THIS); STDMETHOD_(int, Release)(THIS); // IDoThisInterface STDMETHOD(DoingThis)(THIS_ LPCOLESTR pszThat); void MyClassMethod(); void AnotherClassMethod(int j); protected: void MyInternalClassMethod(); private: Code Files Code files, .INL or .CPP, are similar in layout to .H files. Class implementations should be grouped together, rather than interspersed (for example, implement all CFoo methods followed by the CBar methods). Each grouping of class methods is marked off by a comment block. Each function has a comment block as well; only one comment block is necessary for a group of overloaded functions. /*----------------------------------------------------------------------------- Microsoft Sterling Microsoft Confidential Copyright 19924 - 19935 Microsoft Corporation. All Rights Reserved. File: <filename> Area: <area used (e.g., Shell> Contents:   <brief description of the routines and/or classes contained> -----------------------------------------------------------------------------*/ // Includes ------------------------------------------------------------------- . . . // Types and Constants -------------------------------------------------------- . . . // Globals -------------------------------------------------------------------- . . . // Prototypes ----------------------------------------------------------------- . . . /////////////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////////////// /*----------------------------------------------------------------------------- Name: CFoo::CFoo Description: Construct a CFoo object Thread-Safety: <Level of thread safety> -----------------------------------------------------------------------------*/ PUBLIC CFoo::CFoo() //$ CONSIDER: Is this routine really necessary? . . . PUBLIC CFoo::CFoo . . . /////////////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////////////// /*----------------------------------------------------------------------------- Name: CBar::CBar Description: Construct a CBar object Thread-Safety: <Level of thread safety> -----------------------------------------------------------------------------*/  PUBLIC CFoo::CFoo() //$ UNDONE: This routine isn t finished . . . Function Definitions Function definitions start with a function header (see above). The function return type and name come on one line and, if it takes no arguments, the parentheses are included as well. If it takes arguments, each one is listed on a line by itself (with an explanatory comment); the parentheses precede and follow this group, one on a line by itself. For class constructors which use initializer lists, include the initializers just after the constructor arguments, one per line. Unreferenced arguments are indicated in C++ by including the argument type without an argument name. Include the name in the adjoining comment so it may be easily added later and so others know what the missing argument is. Tag functions with their intended scope: PUBLIC or PRIVATE. APIs exposed by a .DLL should use CUL_EXPORT. As already mentioned, OLE interface methods use the standard OLE macros. /*----------------------------------------------------------------------------- Name: CFoo::CFoo Description: Construct a CFoo object Thread-Safety: <Level of thread safety> -----------------------------------------------------------------------------*/ PUBLIC CFoo::CFoo cUser, // Number of users cOtherUsers, // Number of other users // cUnknownUsers - Number of unknown users m_cUser(cUser) return; Statements Sterling will follow the same brace/indentation pattern as used in Access, Excel, and most other WPG products.   While the following is not an absolute requirement, each programmer should at least follow the style of the developer who created the file (that is, don t change styles within a file).   Below is a small sample that demonstrates the recommended indentation and brace placement: PUBLIC void FunctionName iArg, // Argument description     {     CFoo::Bar(x, y, z);     Foo(x, y, z);     iArg = (expr                 ? stmt1                 : stmt2);     if (expr)         stmt;     if (expr)         {         stmt1;         stmt2;         }     else         {         stmt3;         stmt4;         }     switch (expr)         {     default:         stmt;         break;     case 1:         stmt;         break;     case 2:         stmt;         break;         }     return expr; -or- return (expr);     } Commenting Our general guidelines for commenting are similar to that of other groups. As a rule, it s really difficult to put in too many comments. Use comments to describe intent and behavior rather than the obvious Prefer block comments to end-of-line comments Comment the purpose/behavior of each function Provide enough comments to someone unfamiliar with your code can follow what it does Mark undone, international, and consider blocks with the appropriate //$ comment The following table lists the standard macros Sterling defines for use in #ifdef statements. Macro Description _WIN32 Win32 API available (always TRUE) _WINDOWS, _WIN Windows API available (always TRUE) _X86, _ALPHA, _MIPS, _PPC Platform identifier _DEBUG, _BETA, _DBSHIP, _SHIP, _CODECOV Type of build _UNICODE Using Unicode (always TRUE) _UNDONE This is never actually defined but it used to bracket code which is incomplete or should possibly be removed (use this instead of LATER or NEVER) Special comments should mark work in progress, international issues, items marked for future consideration, and compiler bugs. Each comment should begin with //$ followed by the appropriate modifier (see table below). (Marking all special comments with //$ will allows us to scan the entire code base easily without having to look for each keyword individually.)Work in progress or temporarily left out should be flagged with a comment whose first word is UNDONE.  Optional work should be preceeded by a similar type of comment which starts with CONSIDER instead.  The work remaining or suggestion should be described in either comment.   For example: //$ UNDONE 4.5:   Null out the back pointer after removing the node DeleteNode(pList, iNode); Modifier Description UNDONE <MM> Comment describes incomplete code and the milestone number during which the UNDONE was entered (e.g., //$ UNDONE 4.5) COMPILER Comment describes a compiler issue or bug (try to include the expected date or version in which is to include the fix) CONSIDER Comment describes something that is legal to ship, but might need further examination Comment flags an un-handled international issue Standard Hungarian Sterling uses a modified hungarian only for variables, parameters, and arguments. It is not used in function names. The following tables list the standard hungarian prefixes, base types, and qualifiers Sterling employs.  INCLUDETEXT "D:\\sd\\docs\\stdhung.doc"  Prefix Comments Offset/Size (in bytes) (e.g., cbName) Count (of items) Difference (e.g., dx, dy) g_xxxx Global variable Group of flags (used for bit flags which may be OR d together) Handle (e.g., hwnd) Index (into an array) m_xxxx Member variable Map (an associative array) Pointer (e.g., pch, punk,) Array Base Type Comments OLE BSTR WCHAR (16-bit wide character), our default character type CCmdTarget derivative Cmdui CCmdUI derivative Smart-COM reference (CCUCRef) CString derivative CCUArray object CCUError object CCUException object CCUList object CCUMap object CDialog derivative CDocument derivative DWORD (32-bit unsigned value, may be used for a flag word) BOOL flag (entire variable is a flag, as opposed to a group) Function Frame CFrameWnd derivative Bitmap handle Brush handle Cursor handle DC handle hfont Font handle hicon Icon handle Pen handle HRESULT Region handle Window handle Identifier (e.g., idMsg) Number (e.g., nStyle) OString derivative POSition object (used with CCULists, Enumerators, etc.) IPersistStorage IPersistStream POINT sbstr Smart-BSTR (CCUSBstr) Smart-IMalloc Pointer (managed with IMalloc) (CCUSMalloc) Smart-Pointer (managed with new and delete) (CCUSPtr) srg, ssz Smart-Array (CCUSArray) Smart-Reference Pointer (CCUSRef) Smart-OLE String (CCUSOleStrPtr) IStorage IStream Smart-Variant WCHAR* (16-bit wide characters) char* (8-bit characters) WCHAR* (16-bit characters, used with sza) CDocTemplate derivative IUnknown UnkOuter Controlling IUnknown UnkPriv Private IUnknown void (almost always used with the   prefix, e.g., pvBuf) CView derivative WORD (16-bit unsigned value) CWnd derivative (use only when View or Frame do not apply) Wproc WNDPROC Qualifier Comments Current Destination First First item in an array, list, etc. Last item in an array, list, etc. Maximum number of items (for all i, i<Max) Minimum number of items (for all i, i>Min) Next item in an array, list, etc. Sentinel for empty/invalid value Empty pointer (all zeros) Previous item in an array, list, etc. Source Attaining Zero-Defects Design and Code Reviews While adhering to the spirit, and at times the methods, of Microsoft s zero-defect methodology, we will selectively implement those zero-defect guidelines which have proven successful in other groups. All code developed within the Sterling team will take a three-pronged attack to ensure robustness and stability: Write self-debugging code Through liberal usage of Asserts and _DEBUG only code (for example, validating internal structures), every line of code we write should strive to root out its own bugs. This is not a replacement for testing or reviews (see below), but it is very effective for finding bugs and drastically reduces the time required to locate the bug when they do occur. All code must pass a code-review before it is checked into the project Every line of code checked into Sterling is code-reviewed by an assigned team member. The code-review is part design-review and part code-review. While you should always seek design advice as necessary, the reviewer may make suggestions to improve the implementation or discuss your design to ensure it s solid. They also check for compliance with the Sterling coding standards and look for possible bugs. Fix bugs sooner rather than later Sterling has frequent milestone goals and each milestone has a bug goals (both team and individual). At the very least, all priority 1 and 2 bugs must be fixed before exiting the milestone. Developers must also keep their individual bug counts below the targets established. All major work should be design reviewed.  Code reviews should be performed for complex implementations and bug fixes.  Towards significant target dates, even simple bug fixes should be code reviewed to prevent regressions. Asserts, Debug code, and Work in Progress Each function should use the Assert macro to verify its assumptions and validate internal state.   Liberal use of Assert and Verify at other times is equally beneficial.  When entire block or set of statements are appropriate only for debug, they should be bracketed with an #ifdef _DEBUG . . . #endif sequence (notice the debug constant begins with an underscore).   There is no such thing as too much debug code (well, almost no such thing). Generally, always assert the validity of input arguments. If the routine is never directly called by code outside the .EXE or .DLL which contains it, an assertion alone is sufficient. However, for routines which may be called by code outside the .EXE or .DLL which contains it (for example, public interfaces within a .DLL), return an error is also necessary. if (!pvArg1) // Ensure input argument is not NULL Assert(fFALSE); // Always assert return E_INVALIDARG; // Return As with most products, our Assert-family of macros generate nothing in _SHIP builds. Make certain what you Assert does not affect the code path. If you want to check a condition and keep the code in a _SHIP build, use the Verify macro instead of Assert. Steve Maguire s book on MS-Press, Writing Solid Code, contains many excellent suggestions for writing self-debugging code. Resource Failure Simulation (RFS) Testing To be completed PAGE   PAGE   PAGE   Microsoft Confidential Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font Normal Indent Body Text Issue IssueDesc Argument Return Codes MainTitle Subtitle Title CodeInline Header Footer Page Number TOC 2 TOC 1 TOC 3 TOC 4 TOC 5 TOC 6 TOC 7 TOC 8 TOC 9 Footnote Text Footnote Reference Endnote Reference BodyInline DescInline Summary Important Table BodyTable CodeTable Unknown Brendan Dixon _Toc304177681 _Toc347650267 _Toc347650268 _Toc304177683 _Toc347650269 _Toc304177684 _Toc347650270 _Toc347650271 _Toc347650272 _Toc304177686 _Toc347650273 _Toc304177687 _Toc347650274 _Toc304177688 _Toc304177682 _Toc347650275 _Toc347650276 _Toc347650277 _Toc304177692 _Toc347650278 _Toc347650279 _Toc347650280 _Toc304177693 _Toc347650281 _Toc304177694 _Toc347650282 _Toc304177695 _Toc347650283 _Toc304177697 _Toc347650284 Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide.doc Brendan Dixon D:\sd\docs\devguide2.doc Brendan Dixon D:\sd\docs\devguide2.doc Andrew Sigal C:\jpi\doc\devguide.doc @CorpF \\msprint35\corpf HPPCL5MS CorpF CorpF MSUDN HP LaserJet IIISi CorpF MSUDN HP LaserJet IIISi Times New Roman Symbol Arial Century Gothic Wingdings Tms Rmn Courier New Century Schoolbook Wingdings 3 D:\sd\docs\technote.dot Sterling Technical Note Brendan Dixon Andrew Sigal
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\howtobld.txt ===
How to build Denali using the NTBuild tools.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

***NOTE: The below method shows the "official" list of things to copy.  This will total 
about 250+ mb of stuff and take quite some time.  An easier way would be to copy the tree
on \\andrews\ntbuild.  This contains the 65mb of stuff that you actually need.
Note: hopefully you dont even need all of that.  I will attempt to whittle it
down further when I have time***

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

mkdir \nt
mkdir \nt\public
mkdir \nt\private
mkdir \nt\private\developer

net view \\ntx86? (where ? is 1, 2, 3, 4, 5, or 6) I used 5
Choose the latest FreePub, I used FreePub.1311
e.g. net use n: \\ntx865\freepub.1311

Copy tree from ntx86 to \nt\public on your hd.
e.g. xcopy n:\ c:\nt\public /e
>> This is 210mb of junk.  You dont need any of the non i386 stuff,
	and you dont need 99% of the other stuff either.  I copied
	over only what I needed.  I will share out my directory tree
	so you can copy exactly what I copied if you want to save space.
	There's 150mb of libs, and we only need a fraction of that.  
	I copied over a lot of H files that I dont think we need, but
	we can deal with that later.

net use x: \\x86fre\sources
If you dont have perms, send mail to the email alias NUTS

Copy the contents of the Developr subdirectory on \\x86fre\sources to
\nt\private\developr on your machine.
e.g. xcopy x:\developr c:\nt\private\developr /e

net view \\ntx86? (where ? is 1, 2, 3, 4, 5, or 6) I used 5
Choose the latest NNNNFre.Srv, I used 1311Fre.Srv
e.g. net use m: \\ntx865\1311Fre.Srv
Choose or create a directory on your machine that is (or will be) on
your path.  I created a directory under \nt called MSTools
e.g. mkdir \nt\mstools
Copy the contents of the \mstools directory & the \idw directory
from the ntx86 share to this directory on your machine.  Note: you do
NOT need the subdirectories.
e.g. xcopy m:\mstools \nt\mstools
e.g. xcopy m:\idw \nt\mstools

Set two environment variables:
SET USERNAME=[x86Fre|x86Chk]
SET _NTDRIVE=<your drive>

e.g.
SET USERNAME=x86Chk
SET _NTDRIVE=C:
execute \nt\public\tools\razzle.cmd
cd to the \denali\src directory and type "BUILD"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\hungstd.doc ===
ۥ- 1@	    -             d                    
                                     $    $ $    $    $    $    $   2  . `    `    `    `    `  
 j  
 `    t  7                                              +             4 
  w     $                                                                                  




Hungarian Standards 
as used by the
Access Development Group



v2.0
Original Author - Brian Arbogast 6/27/90
Updated by - Andrew Sigal 6/9/93



HUNGARIAN STANDARDS

For a full discussion of Hungarian, see Doug Klunder's hungarian language document.  This should be available through TRIO from the "Orbit Room".  Note that it is only available in printed form, it is not available online.    I've only included here points of particular interest to Access (incl. some of our conventions).

1) All coordinates should be considered in screen pixels (MM_TEXT) by default; if in some other measure the type should be modified (e.g. xtFoo or dytBar for Twips).

2) Groups of bitfields should have type grf and the bits should refer to the grf tag (i.e. bitfield grfGa holds fGaSelRc, fGaInsRow, ... bit flags).

3) The type modifier for long/far pointers is "l"; thus a far pointer to a null-terminated string is an lsz (i.e. lsz[0] is the first character), not an lpsz or fsz.  A far pointer to a structure FOO would be an lpfoo.

4) Use abstract type modifiers in determining Hungarian type names. For example, a collection class implementing FL z-ordering would be ccflZorder (datatype: ccfl, instance descriptor: Zorder) rather than 
ccFlZorder. 

5) New type modifiers for various styles of pointers (in stdapp.h):

/* BPS: based pointer self */
#define BPS _based((_segment)_self) *
#define PP BPS BPS

/* BP: based pointer (based on seg) */
#define BP(seg) _based(seg) *
#define BPP(seg) BP(seg) BP(seg)

/* LBP: far pointer to a based pointer, based on the seg the far points to
   (perfect for anything returned by PpbAlloc) */
#define LBP BPS FAR *

6) Coordinate types & modifiers:

When dealing with values dependent on coordinate systems the type 
should be modified by the units and the origin:  
  

Units in: (for types x, y, dx, dy, pt, dpt, rc, rcd)

p				screen pixels (default)
t				Twips
g				grid control coordinates: {icol, irow}
...				(add new units here)


Origin relative to: (for types x, y, pt, rc, rcd)

c				window client origin/viewport (most likely default)
b				body (e.g. in form design, the area between the rulers)
s				section
p				page (for printing)
v				print preview page
i				units per inch (not an origin, but used for scaling)
...				(add new origins here)


For example: 

PT		pt 	point in screen pixels, relative to window viewport
			pttb	point in Twips, relative to body origin
RC		rc 	rectangle in screen pixels, relative to window viewport
			rcg	rectangle in grid control coordinates
			rcts	rectangle in Twips, relative to section origin

The folowing are related types (defined in stdapp.h):

RCD		rcd	{x, y, dx, dy} rectangle
DPT		dpt	{dx, dy} point
OOL C             1က  CXM     CPP!          É(+  DIBMGR  C  !          Q  FEDTN   C  !          1`Y WINUTILNASM!          3cC?5  NFEDTPROH  !          1`  _DBGDLG H  !          fy-=#  _FEDTN  H  !          h4(  _FTF    H  !          o8Z  




Hungarian Standards 
as used by the
Access Development Group



v2.0
Original Author - Brian Arbogast 6/27/90
    )  >    (  d                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
              (                              "  %  '  )  >  @      -  /          t              %  '  O  n          (  *  L  N          	  	  !	  -	  Z	  w	  y	  {	  	  	  	  (
  6
  P
  i
  
  
  
  
  
  
    F          &  (  K  d     !    !    !    !              !              !     ! Q       F        	
              
          j  
         >        d     d   7  Times New Roman 	Symbol & Arial 5 Courier New   HP LaserJet IIISi PostScript LPT2: pscript HP LaserJet IIISi PostScript    
VD  [    
od           ,                                                                   XZ Z                   ^         e F+FD= tm     	             "       h    %                      w   *Hungarian standards for Access Development  "Original author was Brian ArbogastAndrew SigalAndrew Sigal         
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\httpext2.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft Corporation Chapter 1:Chapter 1: Kitty Niles Normal.dot Lee Hart Microsoft Word for Windows 95A Specification For Writing Web Server Applications (WSA) A High Performance API Alternative to CGI Executables A proposal by Process Software Corporation And Microsoft Corporation Table Of Contents  TOC \o "1-3"  1. Introduction to CGI  GOTOBUTTON _Toc335974674    PAGEREF _Toc335974674  2. Advantages of DLLs over Executables  GOTOBUTTON _Toc335974675    PAGEREF _Toc335974675  3. Detailed Interaction  between the HTTP server and WSA  GOTOBUTTON _Toc335974676    PAGEREF _Toc335974676  4. Header file associated with this specification  GOTOBUTTON _Toc335974677    PAGEREF _Toc335974677  5. Notes to Application Developers  GOTOBUTTON _Toc335974678    PAGEREF _Toc335974678  6. Steps to convert existing CGI scripts to WSAs  GOTOBUTTON _Toc335974679    PAGEREF _Toc335974679  7. Conclusions, Acknowledgments and Contact Information  GOTOBUTTON _Toc335974680    PAGEREF _Toc335974680   TOC \d. \o \* MERGEFORMAT  1. Introduction to CGI  GOTOBUTTON _Toc336014492    PAGEREF _Toc336014492  2. Advantages of DLLs over Executables  GOTOBUTTON _Toc336014493    PAGEREF _Toc336014493  3. Detailed Interaction  between the HTTP server and WSA  GOTOBUTTON _Toc336014494    PAGEREF _Toc336014494  4. Header file associated with this specification  GOTOBUTTON _Toc336014495    PAGEREF _Toc336014495  5. Notes to Application Developers  GOTOBUTTON _Toc336014496    PAGEREF _Toc336014496  6. Steps to convert existing CGI scripts to WSAs  GOTOBUTTON _Toc336014497    PAGEREF _Toc336014497  Introduction to CGI CGI (Common Gateway Interface) is an interface for running external programs or gateways, under an information server. Currently the only supported information serverss are HTTP servers. What we refer to gateways are really programs which handle information requests and return the appropriate document or generate a document on the fly. With CGI, your server can serve  information which is not in a form readable by the client (such as an SQL database), and act as a gateway between the two to produce something which the client can use. With the ever expanding services being made available through the Web, more and more CGI applications will be developed. This calls for a closer look at the existing method of server executing CGI applications and possible ways of improving its performance. The way a server responds to a request for CGI execution from a client browser is to createit creates a new process and passes the data received from the client browser through environment variables and stdin and expects the results gathered by the CGI application, on  stdout of the newly created process. The server creates as many processes as the number of requests received, one peimage for each request. For more information on the CGI specification please refer to http://hoohoo.ncsa.uiuc.edu/cgi/ Drawbacks with current implementations : As explained above, the existing HTTP servers create a separate process for each request received. The more  concurrent requests, the more concurrent processes created by the server. Creating a process for every request is time consuming, and expensive in terms of server RAM and it canould be  restrictive as faor as sharing the resources of the server application itself. One way to circumvent creating processes is to convert the current CGI executable into a  DLL which the server loads on the fly  the first time a browser is request is received for edthat to execute such a DLL. Then the DLL stays in memory ready to service other requests until the server decides that it s no longer needed. NOTE: Even though this specification talks specifically about writing Internet Web Server Applications for Windows NT, the same specification could be used to build a sharable image for any operating system, provided the operating system supports loadable shared images.  Process Software has built an OpenVMS loadable image based on this specification for a web server running on OpenVMS. Advantages of DLLs over Executables In Microsoft  Windows , dynamic linking provides a way for a process to call a function that is not part of its executable code. The executable code for the function is located in a dynamic-link library (DLL), containing one or more functions that  are compiled, linked, and stored separately from the processes using them. For example, the Microsoft  Win32  application programming interface (API) is implemented as a set of dynamic-link libraries, so any process using the Win32 API uses dynamic linking.  There are two methods for calling a function in a DLL:  Load-time dynamic linking occurs when an application's code makes an explicit call to a DLL function. This type of linking requires that the executable module of the application be built by linking with the DLL's import library, which supplies the information needed to locate the DLL function when the application starts. Run-time dynamic linking occurs when a program uses the LoadLibrary and GetProcAddress functions to get the starting address of a DLL function. This type of linking eliminates the need to link with an import library.  This specification is aimed at are of the latter category of DLLs. These DLLs (also called Web Server Applications or WSAs) are loaded at run time by the HTTP server. They are called at common entry points GetExtensionVersion() and HttpExtensionProc(). Details of this interaction are explained more in detail in the following chapters. Unlike .EXE type script executables, the WSA DLLs are loaded in the same address space as the HTTP server. This means that all the resources that are made available by the HTTP server process are also available to the WSA DLLs. There is minimal overhead associated with executing these applications as there is no additional processes creation overhead for each request. Our preliminary benchmark programs show that loading WSA DLLs in-process can perform considerably faster than loading them into a new process.  Additionally in-process applications scale much better under heavy load. Since an HTTP server knows the list of WSA DLLs that are already in the memory, it is possible for the server to unload the WSA DLLs that have not been  accessed in a configurable amount of time. By preloading a WSA DLL the serverone  could speed up even the first request forto thate WSA. Unloading WSA DLLs that have not been used for quite some time will free up system resources. The following picture explains how a WSA DLL interacts with an HTTP server with respect to the interaction of script executables with an HTTP server.    WSA architecture                            CGI Architecture As you can see in the above picture, all of the WSA DLLs reside in the same processprocess and address space  as the HTTP server, while the conventional CGI executables run in different processes. Interaction between an HTTP server and WSA DLL is via Extension Control Blocks(ECB). The ECB is explained in detail in the following chapter. As the picture above shows, multiple WSA DLLs can co-exist in the same process as the server.  In case of conventional CGI executables, the server creates a separate process for each request and server communicates with the created process via environment variables and stdin/stdout. WSA DLLs need to be multithread safe since multiple requests will be received simultaneously. For more information on how to write multi-thread safe DLLs please refer to any of the several articles on writing multithreaded applications on the MSDN or any of the several books on Win32 Programming. CD-ROM. Similarly, fFor information on tThread-safe DLLs and the scope of usage of C-Runtime routines in a DLL, please refer to any of the several articles on sharing data in a DLL on the MSDN CD-ROM. Detailed Interaction  between the HTTP server and WSA The HTTP server communicates with the WSA via a data structure called Extension Control Block. This data structure is explained in detail in the following section. A client uses an WSA just like its CGI counterpart, except rather then referencing: http://scripts/foo.exe?Param1+Param2  in the CGI instance, the following form would be used: http://scripts/foo.dll?Param1+Param2  This means that in addition to identifying the files with extensions .EXE and .BAT as CGI executables, the server will also identify a file with .DLL extension as a script to execute. When the server loads the .DLL, it calls the DLL at the entry point GetExtensionVersion() to get the version number of the specification the Extension is based on and a short human readable description for server administrators. For every client request, the HttpExtensionProc() entry point is called.  The extension receives the commonly needed information such as the Query String, Path Info, Method Name and the translated path. Subsequent sections of this document explain in detail how to retrieve the data sent by the client browser.  The way the server  communicates with the Extension DLL is via a data structure called the  EXTENSION_CONTROL_BLOCK. The Extension Control Bblock contains the following fields cbSize (IN) The size of this structure. dwVersion (IN) The version information of this specification.  The HIWORD has the major version number and the LOWORD has the minor version number. ConnID (IN) A unique number assigned by the HTTP server and NOT to be modified. dwHttpStatusCode (OUT) The status of the current transaction when the request is completed. lpszLogData (OUT)  Buffer of size HSE_LOG_BUFFER_LEN. Contains a null terminated log information string, specific to the WSA, of the current transaction. This log information will be entered in the HTTP server log.   Maintaining a single log file which with both HTTP server and WSA transactions is very useful for administration purposes. lpszMethod (IN) The method with which the request was made. This is equivalent to the CGI variable REQUEST_METHOD lpszQueryString (IN) Null terminated string containing the query information.  This is equivalent to the CGI variable QUERY_STRING.  LpszPathInfo (IN) Null terminated string containing extra path information given by the client. This is equivalent to the CGI variable PATH_INFO. lpszPathTranslated (IN) Null terminated  string containing the translated path. This is equivalent to the CGI variable PATH_TRANSLATED. cbTotalBytes (IN) The total number bytes to be received from the client. This is equivalent to the CGI variable CONTENT_LENGTH. If this value is 0xffffffff then there is four gigabytes or more of available data.  In this case. ReadClient() should be called until no more data is returned. cbAvailable (IN) The available number of bytes (out of a total of cbTotalBytes) in the buffer pointed to by lpbData.  If  cbTotalBytes is the same as cbAvailable the variable lpbData will point to a buffer which contains all the data as sent by the client. Otherwise cbTotalBytes will contain the total number of bytes of data received. The WSA will then need to use the callback function ReadClient() to read the rest of the data (starting from an offset of cbAvailable).  lpbData (IN) Points to a buffer of size cbAvailable that has the data sent by the client. lpszContentType (IN) Null terminated string containing the content type of the data sent by the client..  This is equivalent to the CGI variable CONTENT_TYPE. Mandatory Entry Points For Internet Web Server Applications All the DLLs written as Internet Web Server Applications must export the following two entry points. They are: GetExtensionVersion().When the HTTP server loads a WSA for the first time, after loading the DLL, it calls the GetExtensionVersion() function. If this function does not exist, the call to load the WSA will fail. The recommended implementation of this function is: BOOL WINAPI GetExtensionVersion( HSE_VERSION_INFO  *pVer )     pVer->dwExtensionVersion = MAKELONG( HSE_VERSION_MINOR,                                          HSE_VERSION_MAJOR );     lstrcpyn( pVer->lpszExtensionDesc,                This is a sample Web Server Application                HSE_MAX_EXT_DLL_NAME_LEN );     return TRUE; The second required entry point is: DWORD  HttpExtensionProc( LPEXTENSION_CONTROL_BLOCK  *lpEcb ); This entry point is similar to a main() function a the script executable. This entry point would use the callback functions to read client data and decide on what action to be taken.  Before returning back to the server, a properly formatted response must be sent to the client via either the WriteClient() or the ServerSupportFunction() APIs. Return Values : HSE_STATUS_SUCCESS     The WSA has finished processing and the server can disconnect and free up allocated resources. HSE_STATUS_SUCCESS_AND_KEEP_CONN The WSA has finished processing and the server  should wait for the next HTTP request if the client supports persistent connections. The application should only return this if it was able to send the correct Content-Length header to the client.  The server is not required to keep the session open. HSE_STATUS_PENDING    The WSA has queued the request for processing and will notify the server when it has finished.  See HSE_REQ_DONE_WITH_SESSION under ServerSupportFunction. HSE_STATUS_ERROR        The WSA has encountered an error while processing the request and the server can disconnect and free up allocated resources. Callback Function:     GetServerVariable Prototype: BOOL WINAPI GetServerVariable( HCONN  hConn, LPSTR    lpszVariableName, LPVOID  lpvBuffer, LPDWORD  lpdwSize ); Purpose: Get information about a connection or about the server itself. Parameters: hConn (IN) Connection handle. lpszVariableName (IN) Null terminated string indicating which variable is being requested. Variable names are as defined in the CGI specification located at http://hoohoo.ncsa.uiuc.edu/cgi/env.htm. lpvBuffer (OUT) Pointer to buffer  to receive the requested information. lpdwSize (IN/OUT) Pointer to DWORD indicating the number of bytes available in the buffer.  On successful completion the DWORD contains the number of bytes transferred into the buffer (including the null terminating byte). Return value: TRUE if successful, or FALSE if error. The Win32 API call GetLastError can be used to determine why the call failed. Possible error values include: ERROR_INVALID_PARAMETER Bad connection handle. ERROR_INVALID_INDEX Bad or unsupported variable identifier. ERROR_INSUFFICIENT_BUFFER Buffer too small, required size returned in *lpdwSize. ERROR_MORE_DATA Buffer too small, only part of data returned.  The total size of the data is not known. ERROR_NO_DATA The data requested is not available. Description: This function copies information (including CGI variables) relating to an HTTP connection, or to the server itself, into a buffer supplied by the caller. Possible lpszVariableNames includea:re listed below. AUTH_TYPE  The type of authorization in use. If the username has been authenticated by the server, this will contain Basic.Otherwise, it will not be present. CONTENT_LENGTH The number of bytes which the script can expect to receive from the client. CONTENT_TYPE The content type of the information supplied in the body of a POST request. GATEWAY_INTERFACE The revision of the CGI specification to which this server complies. The current version is CGI/1.1. PATH_INFO Additional path information, as given by the client. This comprises the trailing part of the URL after the script name but before the query string (if any). PATH_TRANSLATED This is the value of PATH_INFO, but with any virtual path name expanded into a directory specification. QUERY_STRING The information which follows the ? in the URL which referenced this script. REMOTE_ADDR The IP address of the client. REMOTE_HOST The hostname of the client. REMOTE_USER This contains the username supplied by the client and authenticated by the server. REQUEST_METHOD String The HTTP request method. SCRIPT_NAME The name of the script program being executed. SERVER_NAME The server's hostname (or IP address) as it should appear in self-referencing URLs SERVER_PORT The TCP/IP port on which the request was received. SERVER_PROTOCOL The name and version of the information retrieval protocol relating to this request. Normally HTTP/1.0. SERVER_SOFTWARE The name and version of the Professional Web Server under which the CGI program is running. AUTH_PASS This will retrieve the the password corresponding to REMOTE_USER as supplied by the client. It will be a null terminated string. ALL_HTTP All HTTP headers that were not already parsed into one of the above variables.  These variables are of the form HTTP_<header field name> HTTP_ACCEPT Special case HTTP header.  Values of the Accept: fields are concatenated, separated by  .  E.g. if the following lines are part of the HTTP header: accept: */*; q=0.1 accept: text/html accept: image/jpeg then the HTTP_ACCEPT variable will have a value of: */*; q=0.1, text/html, image/jpeg In addition to the above variables, any values passed in the HTTP header from the client will be converted into HTTP_* variables.  The accept header is parsed in a special manner. For example, if the client passes the following lines in the http header: accept: */*; q=0.1 accept: text/html accept: image/jpeg then the HTTP_ACCEPT variable will have a value of: */*; q=0.1, text/html, image/jpeg All extra lines from the http headers will be put into the ALL_HTTP environment variable. Callback Function: ReadClient Function: ReadClient Prototype: BOOL ReadClient( HCONN hConn, LPVOID lpvBuffer, LPDWORD lpdwSize ); Purpose: Read data from the body of the client's HTTP request. Parameters: hConn (IN) Connection handle. lpvBuffer (OUT) Pointer to buffer area to receive the requested information. lpdwSize (IN/OUT) Pointer to DWORD indicating the number of bytes available in the buffer.  On return *lpdwSize will contain the number of bytes actually transferred into the buffer. Return value: TRUE on success; FALSE if error.  If the call fails, the Win32 API GetLastError may be called to determine the cause of the error. Description: This function reads information from the body of the Web client's HTTP request into the buffer supplied by the caller.  Thus, the call might be used to read data from an HTML form which uses the POST method. If more than *lpdwSize  bytes are immediately available to be read, ReadClient will return after transferring that amount of data into the buffer. Otherwise it will block waiting for data to become available.  If the socket, on which the server is listening to client, is closed, it will return TRUE but with zero bytes read. Callback Function: WriteClient Prototype: BOOL WriteClient( HCONN hConn, LPVOID lpvBuffer, LPDWORD lpdwSize, DWORD dwReserved ); Purpose: Write data to the client. Parameters: hConn (IN) Connection handle.  Must not be NULL. lpvBuffer (OUT) Pointer to the data to be written. LpdwSize (IN/OUT) Pointer to the number of bytes in the buffer.  On return this will be updated to the number of bytes actually sent on this call. Only if an error has occurred will this be less than the number of bytes in the buffer. dwReserved Reserved for future use. Return value: TRUE on success; FALSE if error.  If the call fails, the Win32 API GetLastError may be called to determine the cause of the error. Description: This function sends information to the HTTP client from the buffer supplied by the caller. Callback Function: ServerSupportFunction Prototype: BOOL  ServerSupportFunction( HCONN hConn, DWORD  dwHSERequest, LPVOID lpvBuffer, LPDWORD lpdwSize, LPDWORD  lpdwDataType ); Purpose: To provide the WSAs with some general purpose functions as well as functions that are specific to HTTP server implementation.  NOTE : General purpose functions should have a dwHSERequest value larger than 1000. Values up to 1000 are reserved for mandatory ServerSupportFunctions and should not be used. The following section describes the various defined values for dwHSERequest. HSE_REQ_SEND_URL_REDIRECT_RESP Sends a 302(URL Redirect) message to the client. No further processing is needed after the call. This operation is similar to specifying  URI: <URL>  in a CGI script header. The variable lpvBuffer should point to a null terminated string of URL. Variable lpdwSize should have the size of  lpvBuffer. Variable lpdwDataType is ignored. HSE_REQ_SEND_URL Sends the data specified by the URL to the client as if the client had requested that URL. The Null terminated URL pointed by lpvBuffer, MUST be on the server and must not specify protocol information(i.e. it must begin with a  No further processing is required after this call. Variable lpdwSize points to a DWORD holding should have the size of  lpvBuffer. Variable lpdwDataType is ignored HSE_REQ_SEND_RESPONSE_HEADER Sends a complete HTTP server response header including the status, server version, message time and MIME version. The WSA should append other HTTP Headers at the end such as the Content-Type, Content-Length etc followed by an extra  lpvBuffer points to a null terminated optional status string( i.e 401 Access  Denied . If this buffer is null, a default response of  200 Ok  will be sent by this function. lpdwDataType This is a zero terminated string pointing to optional headers or data to be appended and sent with the header. If this is NULL, the header will be terminated by a   pair.  lpdwSize Points to this should have the size of the buffer lpdwDataType is pointing to. HSE_REQ_DONE_WITH_SESSION If the server Extension wants to hold onto the session because they have extended processing requirements, they need to tell the server when the session is finished so that the server can close it and free the related structures. Variables lpvBuffer, lpdwSize and lpdwDataType are all ignored. lpvBuffer points to a DWORD indicating the status code of the request.  Mandatory Entry Points For Internet Web Server Applications All the DLLs written as Internet Web Server Applications should export at least the following two entry points. They are: GetExtensionVersion().When the HTTP server loads a WSA for the first time, after loading the DLL, it would look for an entry point to GetExtensionVersion() function. If this function does not exist, the call to load the WSA will fail. The recommended implementation of this function is: BOOL GetExtensionVersion( VERSION_INFO  *version )     version->dwExtensionVersion = MAKELONG( HSE_VERSION_MINOR,                                             HSE_VERSION_MAJOR );     strcpy( version->lpszExtensionDesc,                This is a sample Web Server Application     return TRUE; The second required entry point is: DWORD  HttpExtensionProc( LPEXTENSION_CONTROL_BLOCK  *lpEcb ); This entry point is similar to a main() function in the script executable. This entry point would use the callback functions to read client data and decide on what action to be taken. Return Values : HSE_STATUS_SUCCESS     The WSA has finished processing and the server can disconnect and free up allocated resources. HSE_STATUS_SUCCESS_AND_KEEP_CONN The WSA has finished processing and the server  should wait for the next HTTP request if the client supports persistent connections. The application should only return this if it was able to send the correct Content-Length header to the client.  The server is not required to keep the session open. HSE_STATUS_PENDING    The WSA has queued the request for processing and will notify the server when it has finished.  See HSE_REQ_DONE_WITH_SESSION under ServerSupportFunction. HSE_STATUS_ERROR        The WSA has encountered an error while processing the request and the server can disconnect and free up allocated resources. Header file associated with this specification /******** *  Copyright (c) 1995  Process Software Corporation *  Copyright (c) 1995  Microsoft Corporation *  Module Name  : HttpExt.h *  Abstract : *     This module contains  the structure definitions and prototypes for the *     version 1.0 HTTP Server Extension interface. ******************/ #ifndef _HTTPEXT_H #define _HTTPEXT_H #include <windows.h> #define   HSE_VERSION_MAJOR           1      // major version of this spec #define   HSE_VERSION_MINOR           0      // minor version of this spec #define   HSE_LOG_BUFFER_LEN         80 #define   HSE_MAX_EXT_DLL_NAME_LEN  256 typedef   LPVOID  HCONN; // the following are the status codes returned by the Extension DLL #define   HSE_STATUS_SUCCESS                       1 #define   HSE_STATUS_SUCCESS_AND_KEEP_CONN         2 #define   HSE_STATUS_PENDING                       3 #define   HSE_STATUS_ERROR                         4 // The following are the values to request services with the ServerSupportFunction. //  Values from 0 to 1000 are reserved for future versions of the interface #define   HSE_REQ_BASE                             0 #define   HSE_REQ_SEND_URL_REDIRECT_RESP           ( HSE_REQ_BASE + 1 ) #define   HSE_REQ_SEND_URL                         ( HSE_REQ_BASE + 2 ) #define   HSE_REQ_SEND_RESPONSE_HEADER             ( HSE_REQ_BASE + 3 ) #define   HSE_REQ_DONE_WITH_SESSION                ( HSE_REQ_BASE + 4 ) #define   HSE_REQ_END_RESERVED                     1000 // passed to GetExtensionVersion typedef struct   _HSE_VERSION_INFO {     DWORD  dwExtensionVersion;     CHAR   lpszExtensionDesc[HSE_MAX_EXT_DLL_NAME_LEN]; } HSE_VERSION_INFO, *LPHSE_VERSION_INFO; // passed to extension procedure on a new request typedef struct _EXTENSION_CONTROL_BLOCK {     DWORD     cbSize;                 // size of this struct.     DWORD     dwVersion;              // version info of this spec     HCONN     ConnID;                 // Context number not to be modified!     DWORD     dwHttpStatusCode;       // HTTP Status code     CHAR      lpszLogData[HSE_LOG_BUFFER_LEN];// null terminated log info specific to this Extension DLL     LPSTR     lpszMethod;             // REQUEST_METHOD     LPSTR     lpszQueryString;        // QUERY_STRING     LPSTR     lpszPathInfo;           // PATH_INFO     LPSTR     lpszPathTranslated;     // PATH_TRANSLATED     DWORD     cbTotalBytes;           // Total bytes indicated from client     DWORD     cbAvailable;            // Available number of bytes     LPBYTE    lpbData;                // pointer to cbAvailable bytes     LPSTR     lpszContentType;        // Content type of client data     BOOL (WINAPI * GetServerVariable) ( HCONN       hConn,                                         LPSTR       lpszVariableName,                                         LPVOID      lpvBuffer,                                         LPDWORD     lpdwSize );     BOOL (WINAPI * WriteClient)  ( HCONN      ConnID,                                    LPVOID     Buffer,                                    LPDWORD    lpdwBytes,                                    DWORD      dwReserved );     BOOL (WINAPI * ReadClient)  ( HCONN      ConnID,                                   LPVOID     lpvBuffer,                                   LPDWORD    lpdwSize );     BOOL (WINAPI * ServerSupportFunction)( HCONN      hConn,                                            DWORD      dwHSERRequest,                                            LPVOID     lpvBuffer,                                            LPDWORD    lpdwSize,                                            LPDWORD    lpdwDataType ); } EXTENSION_CONTROL_BLOCK, *LPEXTENSION_CONTROL_BLOCK; //  these are the prototypes that must be exported from the extension DLL BOOL  WINAPI   GetExtensionVersion( HSE_VERSION_INFO  *pVer ); DWORD WINAPI   HttpExtensionProc(  EXTENSION_CONTROL_BLOCK *pECB ); // the following type declarations is for the server side typedef BOOL  (WINAPI * PFN_GETEXTENSIONVERSION)( HSE_VERSION_INFO  *pVer ); typedef DWORD (WINAPI * PFN_HTTPEXTENSIONPROC )( EXTENSION_CONTROL_BLOCK *pECB ); #endif  // end definition _HTTPEXT_H Notes to Application Developers  The application will get called at HttpExtensionProc() and will be passed a pointer to ECB structure. The application willould  then decide on what exactly needs to be done, by reading all the client input (by calling the functions GetServerVariable() and, if necessary, ReadClient()). This is similar to setting up environment variables and reading stdin.  Since the WSA DLL is loaded in the same process as the HTTP server, an access violation by the WSA may crash some HTTP servers. As a result you should ensure the integrity of the WSA by testing it thoroughly. WSAs that misbehave may also corrupt the server s memory space or may result in memory or resource leaks if they fail to properly cleanup after themselves. To take help with this problem, many HTTP servers will wrap the WSA entry points in a __try/__except clause so that access violations (or other exceptions) will not directly aeffect the server. For more information on __try/__except clause please refer to the Win32 API documentation  The main entry point in the WSA, HttpExtensionProc()takes only one input parameter - a pointer to structure of type EXTENSION_CONTROL_BLOCK. Application developers are not expected to change the following fields in ECB structure: cbSize, dwVersion & ConnID. Application developers are encouraged to initialize their DLL automatically by defining an entry point function for the DLL (e.g DllMain()). The OS will call this entry point function by default, the first time anytime a LoadLibrary() call or the last time a FreeLibrary() call is made for that DLL by a process for the first time, or when a new thread is created or destroyed in the pprocess. Application developers are encouraged to maintain statistical information or any information pertaining to the DLL within the DLL itself. By creating appropriate forms one could measure the usage/performance of a DLL remotely.  Also, this information could be exposed via the Performance APIs for integration with PerfMon.  The lpszLogData field of the ECB can also be used to log data to the Windows NT event viewer. Steps to convert existing CGI scripts to WSA DLLs This chapter explains the basic requirements for converting an existing CGI script executable to a WSA DLL. Like any other DLL, WEB Server Applications should be thread safe. This means more than one client will be executing the same function at the same time, so the code should follow safety procedures in modifying a global or static variable. By using appropriate synchronization techniques, such as creating critical sections and semaphores, one can handle this issue can be properly handled. For more explanation on writing thread safe DLLs please refer to the documentation in the Win32 SDK and on MSDN..  The primary differences between a WSA DLL and a CGI executable includeare the following: An WSA will receive most of its data through the lpbData member of the ECB as opposed to reading it from stdin. For any additional data the extension will need to use the ReadClient() callback function. The common CGI variables are provided in the ECB.  For other variables, call GetServerVariable().  In a CGI executable these are retrieved from the environment table using getenv(). When sending data back to the client use the WriteClient() callback functions instead of writing to stdout. When specifying a completion status, rather then sending a  Status: NNN xxxxx...  to stdout, either send the header directly using the WriteClient() callback function, or use the HSE_REQ_SEND_RESPONSE_HEADER ServerSupportFunction. When specifying a redirect with the  Location:  header rather then writing the header to stdout use the HSE_REQ_SEND_URL (if the URL is local) or HSE_REQ_SEND_URL_REDIRECT_RESP (if the URL is remote or unknown) ServerSupportFunction callback function.  Conclusions, Acknowledgments and Contact Information The above proposal by Process Software Corporation is aimed at helping the third party script executable developers to optimize their application and improve the performance. We welcome any suggestions or concerns that you may have and please send them directly to me at the email address ramanathan@process.com.  I would appreciate your feedback especially on the ServerSupportFunction. If you have any specific server variable to be returned to an Extension DLL , please drop me a mail and we ll consider including that. I would like to acknowledge the valuable suggestions made by Chris Adie of EMWAC, UK and I thank him for reviewing the document as it was being written. The end. PAGE   PAGE   Specification for writing Extension DLLs for WEB Servers DO NOT COPY DO NOT COPY Company Confidential  Copyright 1995 by Process Software Corporation and Microsoft Corporation. All rights reserved HTTP Server  code wsa 1 wsa 2 ....... process Env variables HTTP Server    Process Normal Heading 1 .hapter   Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font Page Number Header Footer TOC 1 TOC 2 TOC 3 TOC 4 TOC 5 TOC 6 TOC 7 TOC 8 TOC 9 List 2 List 3 List Bullet List Bullet 2 Title Body Text Body Text Indent Body Text 3 Body Text 4 Annotation Reference Annotation Text Unknown Lee Hart _Toc325362081 _Toc336014492 _Toc325362082 _Toc336014493 _Toc325362084 _Toc336014494 _Toc325362085 _Toc336014495 _Toc325362086 _Toc336014496 _Toc325362083 _Toc336014497 _Toc325362087! Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart4D:\Nt\Private\net\sockets\Internet\spec\HttpExt3.Doc Lee Hart>\\leehart\d$\Nt\Private\Net\Sockets\Internet\Spec\HttpExt3.Doc Lee Hart>\\leehart\d$\Nt\Private\Net\Sockets\Internet\Spec\HttpExt3.Doc Lee Hart>\\leehart\d$\Nt\Private\Net\Sockets\Internet\Spec\HttpExt3.Doc Lee Hart>\\leehart\d$\Nt\Private\Net\Sockets\Internet\Spec\HttpExt3.Doc @\\NTPRINT\26S/2MC CORPK.PCL 157.55.80.242 Ne00: winspool \\NTPRINT\26S/2MC CORPK.PCL 157.55.80.242 \\NTPRINT\26S/2MC CORPK.PCL 157 etter \\NTPRINT\26S/2MC CORPK.PCL 157 etter Times New Roman Symbol Arial Courier New Chapter 1: Kitty Niles Lee Hart
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\easp\readme.txt ===
EASP directory subtree has to do with Encrypted ASPs.
It contains the following projects:

1) cmd 
    -- Command line application to encrypt/decrypt ASPs

2) comp 
    -- ActiveX server component the implements the
       PageEncryptor object

The above projects use easpcore.cpp and easpcore.h from
standard Denali sources.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\tmpltex.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Denali Template Executor and Compiled Template FormatDenali Template Executor and Compiled Template Format davek Normal davek Microsoft Word for Windows 95Denali Template Compilation and Execution This doc covers the architecture for compilation and execution in Denali.  See AndrewS Denali Architecture Overview  for the 50,000-foot view of all of Denali. Summary The Denali compiler processes a single template (.asp file) into a compiled template (.aso file).  The Denali template executor (TE) processes a single compiled template into HTML which can be sent to the browser. These two processes will happen sequentially at runtime if no compiled version of the template exists.  More typically, a compiled version of the template exists, so only the second process happens at runtime. Template Executor The template executor will: Instantiate server controls (OA objects). Instantiate scripts by calling Script Manager. Run a template, i.e. produce the HTML for a browser page by doing one or more of the following: - write out static HTML - run script procedures - invoke server controls ISSUE: Should template executor handle control flow, e.g. if blocks and loops, or should we leave this to the script language?  Handling this outside the script language will add some complexity to template executor and a lot of complexity to compiler.  I think  we should leave control flow to the script language. Compiled Template Format The compiled template format will be optimized to make the TE run as fast as possible.  Its persistent form, the .aso file, will be as close as possible to the in-memory version.  If necessary, we will take some performance hit at compile time in order to have faster template execution. The compiled template may contain three sections, the first two of which may be empty: object information, script text and page template.  Object information will contain information required to instantiate objects declared in the template. Script text will contain the text which gets passed to the script engine.  Page template will contain the text which gets processed at runtime by the executor to generate the HTML page that is sent to the browser. Object Information The object information section contains the information required to instantiate objects declared in the template, probably some or all of the following: CLSID, ProgID, threading behavior, possibly type info. Script Text The script text section contains script text exactly as it will be passed to the script engine for instantiation.  Note that script execution will be controlled from the page template section. Page Template The page template will be opcode-based, with elements laid out like this: OpCode Argument Length Argument The opcodes will probably be single-byte (TBD), since we should need far fewer than 256 of them.  The argument length is a dword containing the count of bytes in the argument.  The argument is of arbitrary length.  OpCodes The set of valid opcodes in a page template is: OpCode Description TE action Plain-text  HTML Write directly to browser output buffer Execute script procedure Call script engine to invoke procedure RQVAR Request variable Write value to browser output buffer RQPARM Request parameter Write value to browser output buffer Here are examples of opcodes.  Note that the argument length for HTML or a script execution may count cr-lf characters. OpCode Argument Length Argument <FONT SIZE=1> PrintRow(i) RQVAR USER_AGENT Persistent Form of Compiled Template The compiled template will be stored as an .aso file, which will probably be laid out something like this: offset of Script Text offset of Page Template Object Info Script Text Page Template The first two items in the file are dwords that give the offsets of the script text and object information sections in the file. Template (.asp file) Compiler Compiled Template (.aso file) Compiled Template (.aso file) Template Executor page template   The other items are the binary representation s of the compiled template sections, so they can be loaded directly into memory with no transformation. Template ExecutionAt runtime, the TE  will get a compiled template and do the following: a script engine from the Script Manager. Load the script engine with the template s script text. s script text. Instantiate an object upon call-back from . Process the page template  Normal Heading 1 Heading 2 Heading 3 Heading 4 Default Paragraph Font Normal Indent Issue sequentially, writing the resultant HTML to the from its object information   with it davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc davek C:\JPI\doc\TmpltEx.doc @\\MSPRINT22\2/2175 PRIVP 157.56.24.238 Ne00: winspool \\MSPRINT22\2/2175 PRIVP 157.56.24.238 \\MSPRINT22\2/2175 PRIVP 157.56 Letter \\MSPRINT22\2/2175 PRIVP 157.56 Letter Times New Roman Symbol Arial 5Denali Template Executor and Compiled Template Format davek davek
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\doc\hungar.doc ===
ۥ- 1@	   -             ̹                    g      "                              $   j                    "   "   :    :    :   N  
 X  ( :           (                                      +           P  4   }   g                     ] ^                                                             



Naming Conventions (Hungarian)



Doug Klunder
January 18, 1988
0.   Fore Note
	This document was originally written by Doug Klunder.  It has been the basis for variable naming conventions used by what was once the MS Applications Division (now long gone.)  Just so, it has been the basis for variable naming in the Access development team.  In addition to the conventions described herein, we have expanded the Hungarian conventions used in our group.  For a description of these extensions, see \\accnext\doc\devinfo\hungstd.doc.
1.	Introduction
This document describes a set of naming conventions used by the Applications Development group. These conventions commonly go by the name "Hungarian", referring both to the nationality of their original developer, Charles Simonyi, and also to the fact that to an uninitiated programmer they are somewhat confusing. Once you have gained familiarity with Hungarian, however, we believe that you will find that the clarity of code is enhanced. For convenience, this memo first describes how to use Hungarian, and then describes why it is useful; the general approach is from a programming viewpoint, rather than a mathematical one. For a more theoretical approach, you are invited to read Chapter 2 of Simonyi's "Meta-Programming" thesis.
2.	The Rules
Hungarian is largely language independent; it is equally applicable to a microprocessor assembly language and to a fourth-generation database application language (and has been used in both). However, there is a little flavor of C, in that arrays and pointers to arrays are not clearly distinguished. While this may sound confusing, in practice there is little ambiguity.
2.1.	Variables
The most common type of identifier is a variable name. All variable names are composed of three elements: prefixes, base type, and qualifier. (These are also referred to as constructors, tag, and qualifier). Not all elements are present in all variable names; the only part that is always present is the base type. This type should not be confused with the types supported directly by the programming language; most types are application specific. For example, an lbl type could refer to a structure containing symbol information; a co could be a value specifying a color.
2.1.1.	Base types (tags)
As the above examples indicate, tags should be short (typically two or three letters) and somewhat mnemonic. Because of the brevity, the mnemonic value will be useful only as a reminder to someone who knows the application, and has been told what the basic types are; the name will not be sufficient to inform (by itself) a casual viewer what is being referred to. For example, a co could just as easily refer to a geometric coordinate, or to a commanding officer. Within the context of a given application, however, a co would always have a specific meaning; all co's would refer to the same type of object, and all references to such an object would use the term co.
One should resist the natural first impulse to use a short descriptive generic English term as a type name. This is almost always a mistake. One should not preempt the most useful English phrases for the provincial purposes of any given version of a given program. Chances are that the same generic term could be equally applicable to many more types in the same program. How will we know which is the one with the pretty "logical" name, and which have the more arbitrary variants typically obtained by omitting various vowels or by other disfigurement? Also, in communicating with other programmers, how do we distinguish the generic use of the common term from the reserved technical usage? In practice, it seems best to use some abbreviated or form of the generic term, or perhaps an acronym. In speech, the tag may be spelled out, or a pronounceable nickname may be used. In time, the exact derivation of the tag may be forgotten, but its meaning will still be clear.
As is probably obvious from the above, it is essential that all tags used in a given application be clearly documented. This is extremely useful in helping a new programmer learn the code; it not only enables him (or her) to decode the otherwise cryptic names, but it also serves to describe the underlying concepts of the program, since the data types tend to determine how the program works. It is also worth pointing out that this is not nearly as onerous as it sounds; while there may be tens of thousands of variables in a program, the number of types is likely to be quite small.
Although most types are particular to a given application, there are a few standard ones that appear in many different ones; synonyms for these types should never be used:

f	a flag (boolean, logical). The qualifier (see below) should describe the condition that will cause this flag to be set (e.g. fError would be clear if there were no error, set if one exists). This tag may refer to a single bit, a byte, or a word; often it will be an object of type BOOL (defined by the application, usually as int). Usually the object referred to will contain either 1 (fTrue, TRUE) or 0 (fFalse, FALSE). In some instances, other values may be used, either for efficiency or historical reasons; such a use usually indicates that another type may be more appropriate.
ch	a one-byte character. Note that this is not adequate for Kanji.
st	a Pascal-type string (first byte is count, remainder is the actual characters). Typically refers to a pointer to the actual memory. This should be the most common type of string used in the Applications group; it is more efficient than an sz (below).
sz	a zero-terminated string, or a pointer to it. These are most often used to interface to an operating system (or equivalent) that requires them; for most other uses, an st is preferable. Unfortunately, C string constants are normally zero-terminated, so it takes a little more effort to use st's; the effort is worth it. The Applications Development compiler provides ways to make strings constants st's.
fn	a function. Since about the only thing you can do with a function is take its address, this almost always has a "p" prefix (see below). For this reason, in some applications fn is itself used to mean pointer to a function.

There are some more types that appear in many applications; they should only be used for the most generic purposes:

w	a word (typically 16 bits). For most purposes, this is an incorrect usage, since the usage of the word is specific to a particular type of word, and should be so distinguished. Correct usages are generally limited to generic subroutines (e.g. sort an array of words) that can deal with a number of different types; another common use is in conjunction with the prefix c (see below), to produce a count of words (the size) for some object. The exact meaning of w is also somewhat loose; it sometimes means a signed quantity and sometimes unsigned.
b	a byte (typically 8 bits). The same warnings apply to this as to w.
l	a long (typically 32 bits). The same warnings apply to this as to w.
u	an unsigned word (typically 16 bits). The same as w, except this is always unsigned.
bit	a single bit. Typically used to specify bits used within other types. This concept is usually better handled with the "f" and "sh" prefixes (see below).
v	a void. This corresponds to the C definition of void, meaning that the type is not specified. This type will never be used without a "p" prefix since it is not possible to have an unspecified type for a variable; conceivably ther are additional prefixes (e.g. ppv), but such a usage is unlikely. It is perfectly valid to assign a pv to a pointer of any other type, or vice versa. The major use of this type is for generic subroutines (such as allocate and free) which return or take as arguments pointers of various types.

There are a few types that are used widely within the applications group, but may not be applicable to others:

env	an environment. Used to implement non-local goto's (SetJmp and DoJmp). The exact format of an env (including size), varies from system to system.
sb	a segment base. The part of a segmented pointer that determines the segment. The exact implementation varies from system to system. These are used directly in some applications for efficiency; the same results can be obtained (less efficiently) through the use of far or huge pointers.
ib	an offset. The part of a pointer that determines the offset within a segment. These are used directly in some applications for efficiency; the same results can be obtained (less efficiently) through the use of far or huge pointers. For the literal-minded, ib is not really a new type at all; it is simply the prefix i (index) applied to the type b (byte), with the viewpoint that a segment is just an array of bytes. Many people prefer to consider it a true indivisible base type.

There are a number of other basic types used widely for applications that run under Windows or the Macintosh:

[This list has not been compiled yet]
2.1.2.	Prefixes (constructors)
Base types are not by themselves sufficient to fully describe the type of a variable, since variables often refer to more complex items. The more complex items are always derived from some combination of simple items, with a few operations. For example, there may be a pointer to an lbl, or an array of them, or a count of co's. These operations are represented in Hungarian by prefixes; the combination of the prefixes and the base type represent the complete type of an entity. Note that a type may consist of multiple prefixes in addition to the base type (e.g. a pointer to a count of co's); the prefixes are read right to left, with each prefix applying to the remainder of the type (see examples below). The term constructor is used because a new type is constructed from the combination of the operation and the base type.
In theory, new prefixes can be created, just as new types are routinely created for each application. In practice, very few new prefixes have been created over the years, as the set that already exists is rather comprehensive for operations likely to be applied to types. Prefixes that have been added tend to deal with the specifics of machine architecture, and are variations on existing prefixes (i.e. different flavors of pointers). One can go overboard in refusing to create a new prefix, however; some new concepts really are logically expressed as prefixes, not types. A couple of examples of incorrect usage in the list below derived from the reluctance to create a new prefix.
The standard prefixes are:

p	a pointer. Within the Applications group, this is usually used to refer to a near pointer (16 bit). Note that a pointer is not itself a type, it is an operation applied to a type. For example, a pch is a pointer to a character.
lp	a far pointer. This is a 32 bit direct pointer; the actual implementation is machine-dependent, and represents the native pointer format for that machine. These usages are becoming rarer as we deal more and more with moveable heaps and true segmentation. Some applications use q instead of lp; a few decided (erroneously) that this was a type rather than an operation, and used pa as the type tag. l can itself be viewed as a prefix (applied in this case to the "p" prefix); it can only be applied to pointer prefixes or types. For example, lrg is a far array and lst is a far pointer to a Pascal-type string. 
hp	a huge pointer. This is a 32 bit pointer, composed of an sb and an ib. Some level of machine- and environment-dependent indirection is used to handle segmentation. These are now used extensively for non-local data structures. Some older applications use k instead of hp; Mac Excel decided (erroneously) that this was a type rather than an operation, and used ptr as the type tag. As with l, h can be viewed as a prefix, though ambiguity occurs when h is also being used a prefix meaning handle (see below).
np	a near pointer.  This is a 16 bit pointer. This prefix is not used within the Applications Development Group; p refers to near pointers. This prefix would be used to explicitly refer to a near pointer when compiling a large model program with a conventional compiler. As with l, n can be viewed as a prefix.
rg	an array, or a pointer to it. The name comes from a mathematical viewpoint of an array as the range of a function (see mp and dn below). For example, an rgch is an array of characters; a pch could point to one of the characters in the array. Note that it is perfectly reasonable to assign an rgch to a pch; pch points to the first character in the array.
i	an index into an array. For example, an ich is used to index an rgch
c	a count. For example, the first byte of an st is a count of characters, or a cch.
d	a difference between two instances of a type. This is often confused with a count, but is in reality quite separate. For example, a cch could refer to the number of characters in a string, whereas a dch could refer to the difference between the values 'a' and 'A'. The confusion arises when dealing with indices; a dich (difference between indices into a character array) is equivalent to a cch (count of characters); which one to use depends on the viewpoint. This gets most confusing when dealing with base types that are in effect indices, though not specifically labelled as such. For example, a spreadsheet could have a rw type that indicates a row in the spreadsheet; it does not contain the actual data for the row, but is simply a one-word integer specifying the row number. A type specifying a count of rows (not rw's) would correctly be a drw (difference between row numbers), not a crw (count of row numbers).
h	a handle. This is often a pointer to a pointer (used to allow moveable heap objects). The types of the pointers may vary among applications; the two most common cases are a near pointer to a near pointer (h is equivalent to pp) and a far pointer to a far pointer (h is equivalent to lplp). Most commonly used for interface to an operating system; within applications, moveable objects can be handled through huge pointers. In some systems (e.g. Windows) a handle is not a pointer to a pointer. To avoid confusion it may be best to use pp (or lplp) as prefixes when the application is actually going to do the indirection, and reserve h for instances in which the handle is just passed on to the system. Doing this prevents the most common misuse of h in defining a handle to an array (or other implicit pointer type); uses of hsz to imply two indirections to obtain a character are incorrect. This should properly be done as a psz or, if h must be used, as an hasz (see 'a' prefix below).
hh	a huge handle. This is a huge pointer to a 16-bit pointer within the same segment pointed to by the huge pointer; it is useful for managing heaps. This can be viewed as an hpib, where the sb to be used with the ib is obtained from the hp.
gr	a group, or a pointer to it. This is similar to an rg, but is used for variable size objects. In this case an index (i) is not particularly useful, since it can not be used directly to obtain an object (one can, of course, write a routine that will take the gr and i, walk through the data in a type-specific manner, and derive a pointer to the object desired). This is a rarely used prefix, and in some code, grp has been used instead of gr.
b	an offset. This is typically used in conjunction with a gr, in place of an i, in order to get around the problem mentioned above. This offset is in terms of bytes, so pfoo=(BYTE *)grfoo+bfoo. As with gr, this is a somewhat rare usage in current code. b originally stood for base-relative pointer, but should really be considered to be an offset within a data structure; true base-relative pointers are just near pointers (p); the base is the segment they are within.
mp	an array. This prefix is followed by two types, rather than the standard one, and represents the most general case of an array. From a mathematical viewpoint, an array is simply a function mapping the index to the value stored in the array (hence mp as an abbreviation of map). In the construct mpxy, x is the type of the index and y is the type of the value stored in the array. In most cases, the only type that is important is the type of the value; the index is always an integer with no other meaning. In this case, an rg is used; this means that an rgx is equivalent to an mpixx. (This also explains the weird prefix rg; it is an abbreviation for range).
dn	an array. This is used in the rare case that the important part of the array mapping is the index, not the value. dn is an abbreviation for domain. Only a few of these are used in the entire Applications group; an example of a plausible use is given in the discussion of e, below.
e	an element of an array. This is used in conjunction with a dn (and is thus just as rare); it is the type of the value stored in a dn. Just as rgx is equivalent to mpixx, dnx is equivalent to mpxex. An example of use is in the native code generation part of the CS compiler; there is a type vr (an acronym for virtual register). A vr is just a simple integer, specifying which register to use for various pieces of code output. However, there is quite a bit more information than just a number that is associated with each register. This additional data is stored in a structure called an evr; there is an array of them called dnvr. Thus, the information for a given register can be found with the expression dnvr[vr].
f	a bit within a type. This is a new prefix that is currently used only by a few projects, but is now the approved method for dealing with bits. It is typically used for overloading an integer type with one or more bit flags, in otherwise unused portions of the integer. This should not be confused with the f type, in which the entire value is used to contain the flag. An example is a scan mode (type sm), with possible values smForward and smBackwards. Since the basic mode only requires a few bits (in this case only one bit), the remainder of a word can be used to encode other information. One bit is used for fsmWrap, another for fsmCaseInsens. Here the f is a prefix to the sm type, specifying only a single bit is used.
sh	a shift amount. This is another new prefix used to deal with bits within other types (complementing the "f" prefix); it specifies the location within the type by a bit number (rather than the bit mask which the "f" prefix specifies). It actually is followed by two types; the first type is the type being shifted (almost always an f), and the second type is the type the bits are stored within. Continuing the above example of scan modes, if fsmWrap has a value of 4000 hex, shfsmWrap would have the value of 14.
u	a union. This is a rarely used prefix; it is used for variables that can hold one of several types. In practice this becomes unwieldy. An example is a urwcol, which can hold either a rw type or a col type.
a	an allocation. This is a rarely used prefix; it is used to distinguish between an array and a pointer to it. Thus, sz is a pointer to a null-terminated string and asz is the actual allocated space. a is almost invariably used in conjunction with a pointer-type prefix, in order to allow the pointer to be explicit (rather than implicit, as with an sz). It is essentially the inverse of a p prefix, so pasz is equivalent to sz. Its best use is with the h prefix; hasz is a handle to a null-terminated string. Most of the current Applications code (incorrectly) omits the a.
v	a global. This is really not a correct usage of Hungarian, but you may see it used in some applications anyway. It really should be a qualifier (see below), if it is present at all. Except in extremely bizarre cases, it must be the first prefix.
2.1.2.1.	Some examples
Since the prefixes and base types both appear in lower case, with no separating punctuation, ambiguity can arise. Is pfc a tag of its own (e.g. for a private first class), or is it a pointer to an fc? Such questions can be answered only if one is familiar with the specific types used in a program. To avoid problems like this it is often wise to avoid creating base type names that begin with any of the common prefixes. In practice, ambiguity does not seem to be a problem. The idea of additional punctuation to remove the ambiguity has been shown to be impractical.
The following list contains both common and rarer usages:

pch	a pointer to a character.
ich	an index into an array of character.
rgst	an array of Pascal-type strings. Hungarian is not sufficient in itself to indicate whether this is an array of characters or an array of pointers; since strings are usually variable length, it is probably a safe bet that this is an array of pointers to the actual characters.
grst	a group of Pascal-type strings. As with the above example, this could be either an array of characters or of pointers; since it is a gr, not an rg, it is probably safe to assume that it is an array of characters.
bst	an offset to a particular Pascal-type string in a grst.
phpx	a near pointer to a huge pointer to an object of type x.
pich	a near pointer to an index into a character array. A common use for something like this is passing a pointer as a parameter to a function so that a return value can be stored through the pointer; pich would be extremely unlikely to be used in an expression without indirection (pich+=2 is probably gibberish; (*pich)+=2 may well be meaningful).
en	probably a base type (such as an entry). Conceivably it is an element of an array indexed by an n; only knowledge of the application can tell for certain.
hrgn	handle to a region. Again there is ambiguity; this could be interpreted as a handle to an array of n's or a huge pointer to an array of n's.
dx	length of a horizontal line (difference between x coordinates).
rgrgx	a two-dimensional array of x's (an array of arrays of x's).
mpmipfn	an array of pointers to functions, indexed by mi's. For example, an mi could be a menu item, and this array could be used for a command dispatch. Again, context makes the parsing clear; this could equally well be interpreted as an array of fn's (perhaps friendly nukes), indexed by mip's (perhaps missile placements).
pv	pointer to a void. Could be used as an argument to Free.
hrgch	huge pointer to an array of characters. Could instead be interpreted as a handle to an array of characters, depending on the application.
2.1.3.	Qualifiers
While the prefixes and base type are sufficient to fully specify the type of a variable, this may not be sufficient to distinguish the variable. If there are two variables of the same type within the same context, further specification is required to disambiguate. This is done with qualifiers. A qualifier is a short descriptive word (or facsimile; good English is not required) that indicates what the variable is used for. In some cases, multiple words may be used. Some distinctive punctuation should be used to separate the qualifier from the type; in C and other languages that support it, this is done by making the first letter of the qualifier upper-case. (If multiple words are used, the first letter of each should be upper-case; the remainder of the name, both type and qualifier, is always lower-case. There is one special case to watch out for; defined constants specifying the size of a type are often of the form cbFOO or cwFOO, where foo is the type. Strictly speaking only the F in FOO should be capitalized, but the incorrect usage is fairly common.)
Exactly what constitutes a naming context is language specific; within C the contexts are individual blocks (compound statements), procedures, data structures (for naming fields), or the entire program (globals). As a matter of good programming style, it is not recommended that hiding of names be used; this means that any context should be considered to include all of its subcontexts. (In other words, don't give a local the same name as a global.) If there is no conflict within a given context (only one variable of a given type), it is not necessary to use a qualifier; the type alone serves to identify the variable. In small contexts (data structures or small procedures), a qualifier should not be used except in case of conflict; in larger contexts it is often a good idea to use a qualifier even when not necessary, since later modification of the code may make it necessary. In cases of ambiguity, one of the variables may be left with no qualifier; this should only be done if it is clearly more important than the other variables of the same type (no qualifier implies primary usage).
Since many uses of variables fall into the same basic categories, there are several standard qualifiers. If applicable, one of these should be used, since they specify meaning with no chance of confusion. In the case of multiple word qualifiers, the order of the words is not crucial, and should be chosen for clarity; if one of the words is a standard qualifier, it should probably come last (unfortunately, this suggestion is by no means uniformly followed). The standard qualifiers are:

First	the first element in a set. This is usually used with an index or a pointer (e.g. pchFirst), referring to the first element of an array to be dealt with. The index may be an implied index (as with a rw type in a spreadsheet).
Last	the last element in a set. This is usually used with an index or a pointer (e.g. pchLast), referring to the last element of an array to be dealt with). Both First and Last represent valid values (compare with Lim below); they are often paired, as in this common loop:
	for (ich=ichFirst; ich<=ichLast; ich++)
Lim	the upper limit of elements in a set. This is not a valid value; for all valid values of x, x<xLim. xLim is equivalent to xLast+1; xLim-xFirst is the dx which specifies the number of elements in the set. Thus, the following code is typical (cp is a type that is an implied index):
	for (cp=cpFirst, cpLim=cpFirst+dcp; cp<cpLim; cp++)
Min	the first element in a set. This is very similar to First, but typically refers to the actual first element of an array, not just the first to be dealt with. It is also more often used with a pointer than an index, since ixMin tends to be 0.
Max	the upper limit of elements in a set. This is not a valid value; for all valid values of x, x<xMax. Max is typically used for compile-time constants, or variables that are set at load time and not changed. Very often, ixMax is used to specify the number of elements in an rgx array.
Mac	the current upper limit of elements in a set. This is very similar to Max, but is used where the upper limit varies over time (such as for a variable length structure, or a growing heap).This is not a valid value; it is often paired with Min, as in this common loop:
	for (pch=pchMin; pch<pchMac; pch++)
Mic	the current first element in a set. This is very similar to Min, but is used where the low value varies over time (such as for a heap that grows downward in memory). Like Min, this is a valid value. Since few things grow downward, this is not often used.
Most	the last element in a set. Identical to Last, but used when paired with a Min. Can also be viewed as Mac-1. This is a new addition to the standard, and is thus not yet much used. Typical usage would be:
	for (pch=pchMin; pch<=pchMost; pch++)

Note that the above qualifiers have a strict relationship:
	Min<=Mic<=First<=Last<=Most<Lim<=Mac<=Max

Sav	a temporary saved value. Often used as part of error recovery, or just when temporarily modifying variables that need to be restored. Typical usages include:

envSav=envMem;
if (SetJmp(&envMem))
	...
...
envMem=envSav;

rwSav=rwAct;
for (rwAct=rwFirst; rwAct<=rwLast; rwAct++)
	...
rwAct=rwSav;

Nil	a special illegal value. Typically used with defined constants, this is a value that can be distinguished from all legal values. This is often 0 or -1, but may be something else in some circumstances.
Null	the 0 value. Typically used with defined constants, this value is always 0, typically an illegal value. May or may not be equivalent to Nil. In order to avoid confusion, it is usually best not to have both Nil and Null defined; if both do exist, the differences should be clearly delineated.
T	a temporary value. This is often convenient to distinguish the second value in a given context. However, unless it is a truly temporary usage, it is often better to use a more descriptive qualifier. (After all, what happens when you add the third variable of the same type?). Some particularly poor usages stack the T's up, to produce variables such as pchTT or pchT1; this is almost certainly an indicator that better qualifiers should be used.
Src	a source. Typically paired with Dest and used in transfer operations.
Dest	a destination. Typically paired with Src and used in transfer operations.
2.1.4.	Structure members
When possible, structure members are named the same way variables are. Since the context is small (only the structure), conflicts are less likely, and qualifiers are often neither needed nor used. If the language does not support separate contexts for each structure (e.g. masm), the structure name is appended to the member as a qualifier. Thus, the following declarations are equivalent (the one on the left is for C, the one on the right for masm):

typedef struct		FOO	struc
		{		pchFoo	dw	?
		char *pch;		wFoo	dw	?
		int w;		rgchFoo	db	10 dup(?)
		char rgch[10];	FOO	ends
		}
	FOO;

In some cases, one type is a special instance of another type. When this is the case, the special instance names should consist of the base instance name plus a character. For example, in Word there is a base type of CHR (character run); special instances are CHRF (formula character run), CHRT (tab character run), and CHRV (vanished character run).
2.2.	Procedures
Unfortunately, the simple rules used for variable names do not work as well for procedures. Whereas the type of a variable is always quite important, specifying how that variable may be used, the important part of a procedure is typically what it does; this is especially true for procedures that don't return a value. In addition, the context for procedures is usually the entire program, so there is more chance for conflict. To handle these issues, a few modifications are made to the simple rules:

1)	All procedure names are distinguished from variable names by the use of some standard punctuation; in C this is done by capitalizing the first letter of the procedure name (all variable names begin with a lower case type).
2)	If the procedure returns a value (explicitly, not implicitly through pointer parameters), the procedure name begins with the type of the value returned; if no value is returned, the name must not begin with a valid type.
3)	If the procedure is a true function (operating mainly on its parameters and returning a value, with few or no side effects), it is standard to name the procedure AFromBCD..., where A is the type of the value returned, and B, C, D, etc. are the types of the objects referred to by the parameters. In some cases, the types are exactly the types of the parameters (e.g. CmFromIn(in) would convert inches to centimeters). In other cases, the types are the base types of the parameters (e.g. DxFromWnd(pwnd) could be used to obtain the width of a window). Some projects always use the full parameter type (the previous example would be DxFromPwnd(pwnd)). Both methods (full type and base type) are accepted. As another simple example, returning the binary value of an ASCII string would be done by a procedure called WFromSt (equivalent to the standard C atoi).
4)	If the procedure is not a true function, follow the type (if any) with a few words describing what the procedure does (a verb followed by an object is usually good). Each word should be capitalized. If the type of a parameter is important, it may be appended as well; in many cases this is unnecessary, and may even be confusing (if the type is not truly important).
5)	If the procedure operates on an object, the type of the object should be appended to the name; as in 3), this may be different than the types of the parameters, though it is probably related in some manner. Procedures like this are commonly used when programming in a class-like (or object-oriented) manner; typically the first parameter to such a procedure is a pointer to the object to be manipulated. For example, you could have procedures like InitCa(pca, ...), InitDd(pdd, ...), etc.
2.2.1.	Macros
Macros should be handled exactly the same way as procedures; for historical reasons, you may find some macros that do not follow the correct rules (e.g. min, bltbyte).
2.2.2.	Labels
Labels can be considered to be a variant on procedures; they are after all effectively identifiers specifying a chunk of code. Within C, they are named similarly to procedures; they obviously neither return a value nor take parameters, so no types are specified. The first letter is upper case, and the name itself is just a few words specifying the condition that causes the label to be reached (either by falling through, or via a goto). Since the context of a label is limited to its procedure, these can be pretty generic terms; typical examples are GotErr, OutOfMem, LoopDone.
Within assembly, labels are somewhat trickier. First off, there are many more labels used. Second, depending on the assembler, all labels may have global (or at least file-wide) context. To deal with these constraints, the rules may be modified somewhat. For labels that are inserted solely because of assembler constraints (i.e. jumps corresponding to high level control flow constructs), temporary labels should be used. If the assembler supports true temporary labels (valid only within the current procedure, or up to the next global label), they should be used, in ascending numeric order. If true temporary labels are not available, the most common convention is to use the initials of the procedure, followed by a number, in ascending order. Of course, gaps should be left between numbers to facilitate later modification (initially setting to multiples of 10 works well). This is far from perfect, and can create conflicts between procedures that have the same initials; some people prefer to give all labels, temporary or not, full English names for clarity. For labels that correspond to true C labels, C conventions can be used; to avoid conflict, it is often useful to prefix with the procedure initials.
2.3.	Defined constants
As much as possible, defined constants should look just like variables of the same type. For many types, defined constants will exist for the Nil, Max, Min, and/or Last values. The program text will read exactly as if they are variables. There are three common exceptions, all originating in the mists of time, and unlikely to change soon. NULL is defined to be 0, and is used with all pointer types; TRUE and FALSE are defined to be 1 and 0, and are used with f types (correct Hungarian, practiced by some projects uses fTrue and fFalse instead of TRUE and FALSE).
There are often types for which each value is a defined constant; these are essentially equivalent to enumeration types supported by some languages (including some variations of C). These are typically types used for table-driven algorithms, for specifying options to a procedure, or specifying possible return values. Note that these types are in fact separate types; they are not all examples of the same type, nor are they values for the w type. Since they are special purpose (you can't pass an option for procedure x to procedure y with any meaning), they must be a new type. You can of course use your own method to name these types; it is often convenient to just use the initials of the procedure that takes or returns the type (watching out for conflicts). Since they are typed quantities, the type must be present in the names; possible values for colors are not RED, BLUE, YELLOW, GREEN, BLACK, etc., but rather could be coRed, coBlue, coYellow, coGreen, coBlack, etc.
2.4.	Structures
Each structure is almost by definition its own type, and should be named as a type (two or three letters with some possible mnemonic value). By convention in C, the entire type name is capitalized in the definition of the type. The same rules apply to unions. Many of the projects find it convenient to include typedef's for each structure type; this means that the word struct is not included in declarations, and allows the redefinition of the type to an array, or even a simple type, without having to change all the declarations. Typedef's may also be suitable for non-structure types, particularly any that are not simple int's.
3.	Advantages of Hungarian
Before adopting a set of conventions, there are always two questions that must be answered: 

Why have conventions at all?
Why use this particular set of conventions?

The two questions are actually very closely related; answering the first will usually give an answer to the second, since knowing the goals allows one to see how closely a solution will meet the goals. For naming conventions, many of the goals are well-known, if not often formalized; most good programmers already attempt to meet the goals in a variety of ways. 
3.1.	Mnemonic value
An important need in naming objects in a program is the ability to remember what the name is, so that when the object is used, the programmer can quickly determine the name (which is the only way it can be used). Traditionally, this need has been met by using descriptive names for variables; for a given programmer working continually on a given program this is usually adequate. Problems arise, however, when a different programmer works on the project, or when the same programmer returns after a hiatus. What was once descriptive now has to be relearned. Hungarian helps somewhat in this respect, though it is not complete. The first part of a variable name can always be determined with no effort (it is the type), and if it is a standard use, the qualifier can also be determined (since it is one of the standard qualifiers). Non-standard qualifiers and procedure names can not be immediately determined; however, the situation is certainly no worse than the traditional situation, since the qualifier or procedure name has as much descriptive value as a traditional name. Furthermore, since there are fewer names that must be remembered (since one need not remember the standard ones), it is easier to remember them. 
3.2.	Suggestive value
At least as important as being able to go from an object to a name (the mnemonic value) is the ability to go from a name to an object (the suggestive value). This is most important when reading code written by someone else; this affects almost all programs today, either because multiple people are working on them, or because they are outgrowths of earlier programs. Again, the traditional approach has been to use names descriptive in some manner; Hungarian again improves the situation somewhat. For the relatively small cost of learning the types used in a given program, a reader gains a much better understanding of what the program does, since the types used in a statement often help determine the meaning of the statement. This is enhanced even more by the use of standard qualifiers; again, the non-standard qualifiers are at least as clear as the traditional names.
3.3.	Consistency
Partially an aesthetic idea ("the code looks better"), this is also an important concept for the readability of code. Just as Americans often have an extremely difficult job following the action in Russian novels, since the same character goes by many different names, a programmer will have a difficult time understanding code in which the same object is referred to in unrelated ways. Similarly, it is confusing to find the same name referring to unrelated objects. This is a serious problem in traditional contexts, since English is a rich enough language to have many terms that roughly describe the same concept, and also terms that can describe multiple concepts. This problem is exacerbated when programmers resolve name conflicts by use of abbreviations, variant spellings, or homonyms; all of these methods are prone to accidental misuse, through typographical errors or simple failure to understand subtle differences. Hungarian resolves this problem by the use of detailed rules; since all names are created using the same rules, they are consistent in usage.
3.4.	Speed
It is desirable to minimize the amount of time spent on determining names; in a sense this is wasted time, since getting the "right" name doesn't improve the program's efficiency or functionality. Since the traditional naming methods rely on good descriptions to meet the above goals, a programmer has to spend a goodly amount of time to in fact invent good descriptions; speedy name decisions are likely to result in unmnemonic, unsuggestive, or inconsistent names. In Hungarian, on the other hand, only a few name selections are likely to be time-consuming; good type names often require some thought, as do some procedures. The majority of names can be quickly derived from type information and standard qualifiers.
3.5.	Type checking
Just as it is useful to have compilers perform type checking on objects, it is useful to make that type checking apparent to a reader of the code. Among other things, compilers only type check to the extent that they know about types; in Hungarian there are typically a number of types that are represented in the same format as far as the compiler is concerned. Traditional naming schemes provide little or no help in type checking; since Hungarian is based on types, a strong degree of type checking is inherent in the reading of each statement. For example, the statement
if (co==coRed)
	*mpcopx[coBlue]+=dx;
can easily be determined to be plausible from a type standpoint; a co is compared with another co; an array lookup uses a co index to produce a px; this is dereferenced to produce an x, which has a dx added to it. If the * were missing in the second line, the statement would be obviously incorrect, since it is not proper to add a dx to a px. In addition, the variable names can actually help produce the correct code; to go from a co to an x, it is clear that you can index into mpcopx, then dereference; the necessity of each step is also clear.
In addition to standard type checking, the use of standard qualifiers also helps to solve some common programming problems; the most obvious case is the standard off-by-one problem. One should become very suspicious when an expression such as x<xLast or x<=xMac is used; due to the very specific meaning of these qualifiers, the expressions should almost always be x<=xLast or x<xMac. Traditional uses of "last" and "max" as descriptive terms are much looser; only further examination of code can determine whether they refer to the last valid value or the first invalid value.
This use of Hungarian for type checking also helps determine what constitutes a "type". As suggested above, the concept of "type" in this context is determined by the set of operations that can be applied to a quantity. The test for type eqivalence is simple: could the same set of operations be meaningfully applied to the quantities in question? The concept of "operation" is considered quite generally here; "being the subscript of array A" or "being the second parameter of procedure Position" are operations on quantity x. The point is that "integers" x and y are not of the same type if Position(x,_y) is legal but Position(y,_x) is nonsensical.
Note also that type checking extends beyond expressions; it is also quite helpful in making sure that variable (and procedure) declarations are correct. In essence a C declaration can be determined by reading the Hungarian type in reverse order (though it is somewhat more complicated when arrays and procedures are involved). For example, a variable plpfoo would be declared as FOO_far_**_plpfoo; the FOO corresponds to the base type foo, the far * corresponds to the prefix lp and the * corresponds to the prefix p. When the base type is represented in a simple type supported by the language, the simple type will usually be used in the declaration, so Hungarian breaks down at the last step, but that is not usually the step that causes problems; the above declaration could be int_far_**_plpfoo if foo were contained in an integer.
3.6.	Writeability
This is a concept not often considered, and arguable in some of its specifics; nonetheless, it is a concept worth considering. The basic premise is that it is always easier to read and modify one's own code than that written by someone else. Therefore, if everyone writes in the same manner, it will be equally easy to read and modify code written by anyone. Since one of the key parts of writing code is the names used, if everyone uses the same names, everyone's code will be similar, and therefore easy to read and modify. Traditional naming schemes are extremely unlikely to reach this goal, since English has far too many ambiguities to expect different individuals to describe things in identical terms. It would be naive to expect that Hungarian will cause all programmers to write code identically, or even to use identical names. The names are likely to be much more similar, however, since they are composed using the same rules, with the same types and standard qualifiers.
4.	Conclusion
Hungarian is a useful set of rules used to determine the names used in a program. There is no denying that it takes a little time to become familiar with it; true enlightenment comes only with effort. We strongly believe the results are worth the effort. The Applications Development group has been using Hungarian since its inception in 1981, and people at Xerox PARC were using it even earlier. The consistent use of Hungarian makes the programmer's job easier; it is both easier to write in Hungarian (there are fewer superfluous choices to make) and easier to read and modify existing code. The set of conventions is sufficient to deal with most current situations by itself; it has also proven adaptable to changes in the programming environment. Perhaps the best testimonial for Hungarian is the fact that a number of programmers have continued to use Hungarian even after leaving the jobs in which they encountered it; they have felt that the advantages were great enough to warrant the effort necessary to promote its use elsewhere. We hope that you will feel this way as well, once you become familiar with Hungarian's usage.
Revision History
09/04/87	Original (DBK)
09/15/87	Moved to Word; added some rarer types and prefixes and cleaned up other definitions in response to feedback. (DBK)
01/18/88	Added v type, sh prefix, and explanation of h and l as prefixes applied to p for huge and far pointers. Also clarified use of From in procedure names. (DBK)
-page1-

-page1-






v,@                                                              *  h
  
  $  $  N  O  lY  Y  r  r  sv  v        Ł  Έ        ~      ɓ        *  Z  f  6  J       ڳ    Y  k                                ¹  Ĺ  ƹ  ʹ  ̹  ׹  ع  j                                                                                               A   A    A   A   A $ J                                  *  h
  
       8      1  u  t        f  h  xl`T`      !     !     !     	!     !   !   !   !   !       !   !       !   	!   !K                     !    !x    !h h        u    !   #         ,!  N"  3$  5$  $  $  $  $  ,(  *  *  *  +  G.  F0  ~1  2  -3  3  7  :  ;  =  ?  жɝɃwkk_                       !     !     	!     !     !   
!   !       !     !     !   !   !     !     !     !  !?  B  <C  F  H  J  K  M  N  O  HQ  Q  Q  Q  Q  R  S   T  ?T  U  =V  V  W  WW  X  X  lY  Y  ]  a  c  c  d  e  f  *g  `g  Wh  wi  跰ĝąxqjc      !   !   !   !       !     !     !     !   !   !   8    !     !     !     !     
!  &wi  j  j  k  l  l  l  l  m  m  m  m  m  m  m  m  m  m  n  9n  ?n  Mn  On  o  Gp  r  Sr  r  r  t  t  t  t  t  t  u  
u  u  u  sv  跰un                       !   ! p       ! p         ! p         !   !   !       !     !@ @    !     !     !  'sv  v  {x  }x  `y  Az  }          Ł    Έ          ~          E  G    ɓ        *  Z  f  6  J        xqjc           	!   !   !   !   !K       !   !   !   !   !       !>     !>     !>     !>     !   !   !    %  ק           ڳ    Y  k            ¹  Ĺ  ƹ  ȹ  ʹ  ̹  l      Ľ                                                                                                                                               	                    !  	  !  	  !  	  !    !K   !   !K       !   !       
!   !   !   !        F        	                           
06/24/93	Added fore note for Access development -- AndrewS

       F        	                                  ̹      O   	       X,  7  C  O  .[  g  lp  @z  Ȇ  Α    V  ڶ               z        o             1   	     
                 f                   _       !                    &       ]   h  ?  wi  sv      ^ _ ` a b c  Times 	Symbol " Helvetica 
1 Courier  elite  prestige  lettergothic  gothicPS 
 cubicPS  lineprinter " Helvetica  avantegarde 
 spartan  metro  presentation  APL  OCRA  OCRB  emperorPS  madaleine  zapf humanist 
 classic 
 roman f 
 roman g 
 roman h  timesroman 
 century  Palatino  souvenir  garamond  caledonia 	 bodini  university 	BScript  scriptPS  script c  script d  commercial script  park avenue 
 coronet  script h  greek  kana 	 hebrew 
 roman s 
 russian 
 roman u 
 roman v 
 roman w  narrator  emphasis  zapf chancery 
 decor d  old english 
 decor f 
 decor g  cooper black  linedraw  math7  math8 
 bar3of9  EAN 	 pcline 	 tech h  winlinedraw  Times New Roman                     &   ! !   HP LaserJet IIISi PostScript LPT2: pscript HP LaserJet IIISi PostScript    
VD  [    
od           ,                                                                   XZ Z                   ^         e   p p          e  e     e      ]   d     ٶ  ڶ  '  e  g             ׹     Y    j             ȹ     ʹ    !       h    ݚ)օ     
               }   Naming Conventions (Hungarian) 	Hungarian+Latest, greatest, on Mac (see Doug Klunder)Doug KlunderAndrew Sigal         
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\devsmpl\permchk\readme.txt ===
Permission Checker Component
                   ============================


Table of Contents
=================

    Overview
    Installation
    File List
    Samples
    Build Notes
    Support
    Change Notes


Overview
========

The Permission Checker Component is an Active Server Pages
component that allows to check the read access right for the
context user to given file. It can be used to exclude the items
that are not accessible to the current user from the generated
HTML page.


Installation
============

In order to use this component you must register it.  This will allow Active
Server Pages (ASP) Scripting Languages and other languages to make use of
the component.  ASP uses either the Server.CreateObject("ObjectName") syntax
or the <object id="myName" progid="ObjectName" runat="server"> syntax to
gain access to an object.  New objects can be made ready for use by
installing a new component.  Note: One component may contain more than one
object definition.

The following directions are to help you register the component for use:
 1. Use the Start menu, Programs option to start a Command Prompt
 2. Type the following:
        cd \InetPub\ASPSamp\Components\PermChk\DLL\i386
 3. Type:
        regsvr32 PermChk.dll
Note: you must register the component on each IIS server where you intend
to use it.

If you have trouble registering components, you may be using the wrong
version of RegSvr32.exe.  Please use the version installed by default in
the directory <InstallDir>\ASP\Cmpnts.  On Windows NT, the default
installation directory is \winnt\System32\Inetsrv.  On Windows 95, it is
\Program Files\WebSvr\System.

(If you rebuild the source code, the makefile will automatically reregister
the component for you.)

The following directions are to help you test the registered component:
 1. Use the Windows Explorer to copy all of the Sample files from
    \InetPub\ASPSamp\Components\PermChk\Samples to \InetPub\ASPSamp\Samples.
 2. In your browser, open http://localhost/ASPSamp/Samples/PermChk.asp
You must copy the sample files to a virtual directory; if you attempt to
examine them with a browser in the PermChk\Samples directory, ASP will not
execute the script.

Note that the user is Anonymous unless Permissions for Everyone and
System are removed from the file PermChk.asp.  Testing PermChk.asp with
individual access rights also requires Basic (Clear Text) or Windows NT
Challenge/Response Password Authentication to be enabled.  A further
discussion on this topic can be found in the Docs directory for this
component.


File List
=========

File             Description
----             -----------

.\Source

 PermChk.cpp     the C++ source code for the permission checker component
 PermChk.h       declarations for CPermissionChecker
 PermChk.idl     declaration of IPermissionChecker, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 PermChk.mak     the Developer Studio makefile
 util.cpp        utility functions
 util.h          utility function prototypes
 PermChk.cpp     )
 PermChk.def     )
 PermChk.mdp     )
 PermChk.rc      )
 PrmChkPS.def    } Generated by the ATL COM AppWizard
 PrmChkPS.mak    )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

.\Samples

 PermChk.asp     sample ASP that checks and displays file permission
 a.htm           sample data file
 b.txt           sample data file
 c.doc           sample data file


Samples
=======

You will need to copy the sample files to a virtual directory on
an IIS Server (it need not be a virtual root).  To run the test,
you should change the NTFS permissions on a.htm, b.txt, and
c.doc using NT Explorer / Properties / Security / Permissions.


Build Notes
===========

This sample requires Microsoft Visual C++ 4.2b or newer.  If you are using
VC 4.2, it is necessary that you upgrade to VC 4.2b, using the patch which
can be found at http://www.microsoft.com/visualc/patches/v4.2b/vc42b.htm
Note that this patch will not work with earlier or later versions of
Visual C++, only with VC 4.2.

This sample also requires ATL (Microsoft Active Template Library)
version 2.0 or newer.  ATL 2.1 ships with Visual C++ 5.0.  ATL 2.0 for
VC 4.2b can be downloaded from: http://www.microsoft.com/visualc/prodinfo/
You do not need the ATL Docs or Object Wizard Technology Preview to build
the registry access component, but you will probably find them useful.

If you get an error about "don't know how to make asptlb.h", you will
need to copy <InstallDir>\ASP\Cmpnts\AspTlb.h to your include
directory.

You can build this component with nmake at the command line.  Read
Makefile for more details.  You can also build it in Microsoft
Developer Studio, using the PermChk.mdp project.

The component can be built as ANSI or Unicode.  If you intend to
run it on Windows 95, build it as ANSI.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe Denali [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Change Notes
============

Beta 1: February 1997
---------------------

First release.


Beta 2: March 1997
------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Type Library name changes
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\easp\doc\easp.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Encrypted Active Server Pages Title _PID_GUIDEncrypted Active Server Pages Dmitry Robsman Normal.dot Dmitry Robsman Microsoft Word 8.0Encrypted Active Server Pages Contact: dmitryr (Dmitry Robsman) File:  FILENAME  \* MERGEFORMAT  EASP.doc Revision: 2.201 Last Change:  SAVEDATE  \* MERGEFORMAT  01/27/97 9:06 AM Summary ASPs are both HTML pages and application modules. Distributing ASPs as they are is like distributing software by giving out its source code. From the IIS user s standpoint, encrypted pages are analogous to compiled software   they work just like regular ASPs, but the IIS users are prevented from viewing and modifying of the pages source code. The two basic scenarios include: Protecting the intellectual property of someone's ideas in the script code of an ASP. Encrypted ASPs will eliminate the necessity of giving out the source code when distributing ASPs. Preventing people from modifying an ASP. It is highly desirable to prevent IIS users from modifying some sensitive ASPs. This includes ASPs shipped with IIS that implement admin functionality. Making these pages encrypted prevents the IIS users from ever trying to mangle them. Details ASPs can be encrypted into EASPs   Encrypted Active Server Pages. Encrypted pages still have the .asp extension. They can be distinguished from regular unencrypted ASPs by magic header. A set of tools is  provided to convert ASPs to EASPs and back. When Denali reads a .asp file it checks for the magic header to see if it really is an ESP, and decrypts it in memory if it is. The same applies to included .asp files. Global.asa can also be encrypted. When an encrypted ASP file is corrupt, the HTTP 404 error is issued. While changing Denali to support EASPs might cause some performance hit, once a page is read, it is kept in the internal cache. Encryption Algorithm The encryption does not have to be unbreakable. Like binary code can be disassembled, the encrypted pages can be decrypted. Currently, a fast lightweight proprietary encryption in used. Availability of Decryption The EASP users will require the decryption tool. Sooner or later somebody will lose unencrypted ASPs and would want to restore them from EASPs. On the other hand, we cannot let a decryption tool out that is able to decrypt any EASP created by any user. The solution is to use the password protection. In the tools given out, the password is required to encrypt an ASP, and the EASP can only be decrypted back with the password given during encryption (if an invalid password was given, the decryption fails). Denali ignores the password and decrypts any page regardless of it. Encryption/Decryption Tools A command line application for in-place conversion: easp [  e | -d | -t ] [-v]  p password file1  Options: -e encrypt, -d decrypt, -t test; -v verbose Options can be combined like in:  easp  evp password file1  This application accepts wildcards in filenames and multiple files. Test mode intelligently reports on unencrypted files and invalid passwords. Decrypt would not decrypt already decrypted files. A server component:     Set EASP = Server.CreateObject("IIS.ASPEncryption") Succeeded = EASP.EncryptInplace("pwd", "page.asp") Succeeded = EASP.EncryptCopy("pwd", "from.asp", "to.asp") IsValidEncryptedPage = EASP.TestEncrypted("pwd", "page.asp") Succeeded = EASP.DecryptInplace("pwd", "page.asp") Succeeded = EASP.DecryptCopy("pwd", "from.asp", "to.asp") The first parameter is the password Works with both physical and virtual file names All methods return True when on success and False on failure  [[Relatively] Near] Future Issues Debugger, when available will not allow to debug encrypted pages Use a different (CryptoAPI) encryption Encrypting compiled ASPs }xsnid
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\perfmon\axperf.ini ===
;//*===================================================================
;//Microsoft Denali
;//
;//Microsoft Confidential.
;//Copyright 1997-2000 Microsoft Corporation. All Rights Reserved.
;//
;//Component: ASP - Active Server Pages
;//
;//File: axperf.ini
;//
;//	Description:
;//		drivername:  The name of the application found under the 
;//					CurrentControlSet\Services Key
;//
;//		symbolfile:	An .H file containing symbolic offset of counters.  
;//					The performance DLL also uses the offsets in this file
;//					along with the First Counter and First Help Registry values
;//					to determine the indexes of the various counters and counter
;//					objects.
;//
;//		languages:	An ID corresponding to the language subkey in the Registry.
;//
;//		offset:		A symbolic constant defined in SymbolFile.  Offsets must be consecutive
;//					even numbers beginning with zero.  These offsets determine
;//					the order in which the counters are installed in the Counters
;//					and Help values in the Registry.
;//
;//

[info]
drivername=ASP
symbolfile=axctrnm.h
trusted=

[languages]
009=English
000=Neutral

[objects]
AXSOBJ_009_NAME=Active Server Pages

[text]
AXSOBJ_009_NAME=Active Server Pages
AXSOBJ_009_HELP=The Active Server Pages Object Type handles the Active Server Pages device on your system.

DEBUGDOCREQ_009_NAME=Debugging Requests
DEBUGDOCREQ_009_HELP=Number of debugging document requests.

REQERRRUNTIME_009_NAME=Errors During Script Runtime
REQERRRUNTIME_009_HELP=Number of requests failed due to runtime errors.

REQERRPREPROC_009_NAME=Errors From ASP Preprocessor
REQERRPREPROC_009_HELP=Number of requests failed due to preprocessor errors.

REQERRCOMPILE_009_NAME=Errors From Script Compilers
REQERRCOMPILE_009_HELP=Number of requests failed due to script compilation errors.

REQERRORPERSEC_009_NAME=Errors/Sec
REQERRORPERSEC_009_HELP=The number of errors per second.

REQTOTALBYTEIN_009_NAME=Request Bytes In Total
REQTOTALBYTEIN_009_HELP=The total size, in bytes, of all requests.

REQTOTALBYTEOUT_009_NAME=Request Bytes Out Total
REQTOTALBYTEOUT_009_HELP=The total size, in bytes, of responses sent to clients. This does not include standard HTTP response headers.

REQEXECTIME_009_NAME=Request Execution Time
REQEXECTIME_009_HELP=The number of milliseconds that it took to execute the most recent request.

REQWAITTIME_009_NAME=Request Wait Time
REQWAITTIME_009_HELP=The number of milliseconds the most recent request was waiting in the queue.

REQCOMFAILED_009_NAME=Requests Disconnected
REQCOMFAILED_009_HELP=The number of requests that were disconnected due to communication failure.

REQBROWSEREXEC_009_NAME=Requests Executing
REQBROWSEREXEC_009_HELP=The number of requests currently executing.

REQFAILED_009_NAME=Requests Failed Total
REQFAILED_009_HELP=The total number of requests failed due to errors, authorization failure, and rejections.

REQNOTAUTH_009_NAME=Requests Not Authorized
REQNOTAUTH_009_HELP=Number of requests failed due to insufficient access rights.

REQNOTFOUND_009_NAME=Requests Not Found
REQNOTFOUND_009_HELP=The number of requests for files that were no found.

REQCURRENT_009_NAME=Requests Queued
REQCURRENT_009_HELP=The number of requests waiting for service from the queue.

REQREJECTED_009_NAME=Requests Rejected
REQREJECTED_009_HELP=The total number of requests not executed because there were insufficient resources to process them.

REQSUCCEEDED_009_NAME=Requests Succeeded
REQSUCCEEDED_009_HELP=The number of requests that executed successfully.

REQTIMEOUT_009_NAME=Requests Timed Out
REQTIMEOUT_009_HELP=The number of requests that timed out.

REQTOTAL_009_NAME=Requests Total
REQTOTAL_009_HELP=The total number of requests since the service was started.

REQPERSEC_009_NAME=Requests/Sec
REQPERSEC_009_HELP=The number of requests executed per second.

SCRIPTFREEENG_009_NAME=Script Engines Cached
SCRIPTFREEENG_009_HELP=The number of script engines in cache.

SESSIONLIFETIME_009_NAME=Session Duration
SESSIONLIFETIME_009_HELP=The number of milliseconds that the most recent session persisted.

SESSIONCURRENT_009_NAME=Sessions Current
SESSIONCURRENT_009_HELP=The current number of sessions being serviced.

SESSIONTIMEOUT_009_NAME=Sessions Timed Out
SESSIONTIMEOUT_009_HELP=The number of sessions timed out.

SESSIONSTOTAL_009_NAME=Sessions Total
SESSIONSTOTAL_009_HELP=The total number of sessions since the service was started.

TEMPLCACHE_009_NAME=Templates Cached
TEMPLCACHE_009_HELP=The number of templates currently cached.

TEMPLCACHEHITS_009_NAME=Template Cache Hit Rate
TEMPLCACHEHITS_009_HELP=Percent of requests found in template cache.

TEMPLFLUSHES_009_NAME=Template Notifications
TEMPLFLUSHES_009_HELP=The number of templates invalidated in the cache due to change notification.

TRANSABORTED_009_NAME=Transactions Aborted
TRANSABORTED_009_HELP=The number of transactions aborted.

TRANSCOMMIT_009_NAME=Transactions Committed
TRANSCOMMIT_009_HELP=The number of transactions committed.

TRANSPENDING_009_NAME=Transactions Pending
TRANSPENDING_009_HELP=Number of transactions in progress.

TRANSTOTAL_009_NAME=Transactions Total
TRANSTOTAL_009_HELP=The total number of transactions since the service was started.

TRANSPERSEC_009_NAME=Transactions/Sec
TRANSPERSEC_009_HELP=Transactions started per second.

MEMORYTEMPLCACHE_009_NAME=In Memory Templates Cached
MEMORYTEMPLCACHE_009_HELP=The number of compiled templates cached in memory.

MEMORYTEMPLCACHEHITS_009_NAME=In Memory Template Cache Hit Rate
MEMORYTEMPLCACHEHITS_009_HELP=Percent of requests found in cached in memory.

AXSOBJ_000_NAME=Active Server Pages
AXSOBJ_000_HELP=The Active Server Pages Object Type handles the Active Server Pages device on your system.

DEBUGDOCREQ_000_NAME=Debugging Requests
DEBUGDOCREQ_000_HELP=Number of debugging document requests.

REQERRRUNTIME_000_NAME=Errors During Script Runtime
REQERRRUNTIME_000_HELP=Number of requests failed due to runtime errors.

REQERRPREPROC_000_NAME=Errors From ASP Preprocessor
REQERRPREPROC_000_HELP=Number of requests failed due to preprocessor errors.

REQERRCOMPILE_000_NAME=Errors From Script Compilers
REQERRCOMPILE_000_HELP=Number of requests failed due to script compilation errors.

REQERRORPERSEC_000_NAME=Errors/Sec
REQERRORPERSEC_000_HELP=The number of errors per second.

REQTOTALBYTEIN_000_NAME=Request Bytes In Total
REQTOTALBYTEIN_000_HELP=The total size, in bytes, of all requests.

REQTOTALBYTEOUT_000_NAME=Request Bytes Out Total
REQTOTALBYTEOUT_000_HELP=The total size, in bytes, of responses sent to clients. This does not include standard HTTP response headers.

REQEXECTIME_000_NAME=Request Execution Time
REQEXECTIME_000_HELP=The number of milliseconds that it took to execute the most recent request.

REQWAITTIME_000_NAME=Request Wait Time
REQWAITTIME_000_HELP=The number of milliseconds the most recent request was waiting in the queue.

REQCOMFAILED_000_NAME=Requests Disconnected
REQCOMFAILED_000_HELP=The number of requests that were disconnected due to communication failure.

REQBROWSEREXEC_000_NAME=Requests Executing
REQBROWSEREXEC_000_HELP=The number of requests currently executing.

REQFAILED_000_NAME=Requests Failed Total
REQFAILED_000_HELP=The total number of requests failed due to errors, authorization failure, and rejections.

REQNOTAUTH_000_NAME=Requests Not Authorized
REQNOTAUTH_000_HELP=Number of requests failed due to insufficient access rights.

REQNOTFOUND_000_NAME=Requests Not Found
REQNOTFOUND_000_HELP=The number of requests for files that were no found.

REQCURRENT_000_NAME=Requests Queued
REQCURRENT_000_HELP=The number of requests waiting for service from the queue.

REQREJECTED_000_NAME=Requests Rejected
REQREJECTED_000_HELP=The total number of requests not executed because there were insufficient resources to process them.

REQSUCCEEDED_000_NAME=Requests Succeeded
REQSUCCEEDED_000_HELP=The number of requests that executed successfully.

REQTIMEOUT_000_NAME=Requests Timed Out
REQTIMEOUT_000_HELP=The number of requests that timed out.

REQTOTAL_000_NAME=Requests Total
REQTOTAL_000_HELP=The total number of requests since the service was started.

REQPERSEC_000_NAME=Requests/Sec
REQPERSEC_000_HELP=The number of requests executed per second.

SCRIPTFREEENG_000_NAME=Script Engines Cached
SCRIPTFREEENG_000_HELP=The number of script engines in cache.

SESSIONLIFETIME_000_NAME=Session Duration
SESSIONLIFETIME_000_HELP=The number of milliseconds that the most recent session persisted.

SESSIONCURRENT_000_NAME=Sessions Current
SESSIONCURRENT_000_HELP=The current number of sessions being serviced.

SESSIONTIMEOUT_000_NAME=Sessions Timed Out
SESSIONTIMEOUT_000_HELP=The number of sessions timed out.

SESSIONSTOTAL_000_NAME=Sessions Total
SESSIONSTOTAL_000_HELP=The total number of sessions since the service was started.

TEMPLCACHE_000_NAME=Templates Cached
TEMPLCACHE_000_HELP=The number of templates currently cached.

TEMPLCACHEHITS_000_NAME=Template Cache Hit Rate
TEMPLCACHEHITS_000_HELP=Percent of requests found in template cache.

TEMPLFLUSHES_000_NAME=Template Notifications
TEMPLFLUSHES_000_HELP=The number of templates invalidated in the cache due to change notification.

TRANSABORTED_000_NAME=Transactions Aborted
TRANSABORTED_000_HELP=The number of transactions aborted.

TRANSCOMMIT_000_NAME=Transactions Committed
TRANSCOMMIT_000_HELP=The number of transactions committed.

TRANSPENDING_000_NAME=Transactions Pending
TRANSPENDING_000_HELP=Number of transactions in progress.

TRANSTOTAL_000_NAME=Transactions Total
TRANSTOTAL_000_HELP=The total number of transactions since the service was started.

TRANSPERSEC_000_NAME=Transactions/Sec
TRANSPERSEC_000_HELP=Transactions started per second.

MEMORYTEMPLCACHE_000_NAME=In Memory Templates Cached
MEMORYTEMPLCACHE_000_HELP=The number of compiled templates cached in memory.

MEMORYTEMPLCACHEHITS_000_NAME=In Memory Template Cache Hit Rate
MEMORYTEMPLCACHEHITS_000_HELP=Percent of requests found in cached in memory.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\sso\adrot\adrtperf.ini ===
[info]
drivername=MSWC.AdRotator
symbolfile=ssoperf.h

[languages]
009=English

[text]
SSO_PERF_OBJECT_009_NAME=Advertisement Rotator
SSO_PERF_OBJECT_009_HELP=Displays statistics for the Ad Rotator SSO

SSO_NUM_INVOKES_009_NAME=Number of invokes per second
SSO_NUM_INVOKES_009_HELP=This counter shows the number of IDispatch::Invoke() calls per method per second.

SSO_NUM_INVOKES_TOTAL_009_NAME=Total number of invokes
SSO_NUM_INVOKES_TOTAL_009_HELP=This counter shows the total number of IDispatch::Invoke() calls per method.

SSO_NUM_GETNAMES_009_NAME=Number of GetNames per second
SSO_NUM_GETNAMES_009_HELP=This counter shows the number of IDispatch::GetNamesOfIDs calls per method per second.

SSO_NUM_GETNAMES_TOTAL_009_NAME=Total number of GetNames
SSO_NUM_GETNAMES_TOTAL_009_HELP=This counter shows the total number of IDispatch::GetNamesOfIDs calls per method.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\sso\browser\browscap.ini ===
; Last update 16-Jun-97

;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Microsoft Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 1.x
[IE 1.5]
browser=IE
version=1.5
majorver=1
minorver=5
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 1.5; Windows NT)]
parent=IE 1.5
platform=WinNT

[Mozilla/1.22 (compatible; MSIE 1.5; Windows 95)]
parent=IE 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 2.x
[IE 2.0]
browser=IE
version=2.0
majorver=2
minorver=0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.1;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.1
minorver=#1
Frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.5;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5
minorver=#5

[Mozilla/2.0 (compatible; MSIE 2.5b;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5b
minorver=#5
beta=True

[Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)]
parent=IE 2.0
platform=Win95

[Mozilla/1.22 (compatible; MSIE 2.0c; Windows 95)]
parent=IE 2.0
platform=Win95
version=2.0c


[Mozilla/1.22 (compatible; MSIE 2.01; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.01
minorver=#01

[Mozilla/1.22 (compatible; MSIE 2.0d; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.0d


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x
[IE 3.0]
browser=IE
Version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
Crawler=False

[Mozilla/2.0 (compatible; MSIE 3.01; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0a; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
javaapplets=false
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows 95)]
parent=IE 3.0
platform=Win95
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows NT)]
parent=IE 3.0
platform=WinNT
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AOL 3.0; Windows 95)]
parent=IE 3.0
platform=Win95
AOL=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows 95)]
parent=IE 3.0
platform=Win95
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows NT)]
parent=IE 3.0
platform=WinNT
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; Win 32)]
parent=IE 3.0
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95) Modified]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95;*)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT;*)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0A; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Win32)]
parent=IE 3.0
platform=Win32
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;*)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT;*)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.1; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows 95)]
parent=IE 3.0
version=3.01
minorver=01
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows NT)]
parent=IE 3.0
version=3.01
minorver=01
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_PowerPC)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_68000)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=Mac68K

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x Authenticode update
[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows NT)]
minorver=02
version=3.02
parent=IE 3.0
platform=WinNT
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT
AK=true
AuthenticodeUpdate=a

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/2.0 (compatible; MSIE 3*)]
parent=IE 3.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x
[IE 4.0]
browser=IE
Version=4.0
majorver=4
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
crawler=False
cdf=True

;;ie 4 beta 1
[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True
cdf=False

;;ie 4 beta 2.  This is not a commitment to a beta 2, but is being provided as a placeholder if needed.
[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True

;;ie 4 final release
[Mozilla/4.0 (compatible; MSIE 4.0; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False
crawler=True

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0 (compatible; MSIE 4.*)]
parent=IE 4.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Pocket IE
[Microsoft Pocket Internet Explorer/0.6]
browser=PIE
Version=1.0
majorver=1
minorver=0
frames=FALSE
tables=TRUE
cookies=FALSE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE

[Mozilla/1.1 (compatible; MSPIE 1.1; Windows CE)]
browser=PIE
Version=1.1
majorver=1
minorver=1
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE


;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Netscape Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x
[Netscape 4.00]
browser=Netscape
version=4.00
majorver=4
minorver=00
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=True

[Mozilla/4.0b1 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b1 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

[Mozilla/4.0b2 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b2 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0*]
parent=Netscape 4.00

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 3.x
[Netscape 3.01]
browser=Netscape
version=3.01
majorver=3
minorver=01
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.01Gold (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01Gold*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01 (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01b1 (Win95; I)]
parent=Netscape 3.01
platform=Win95
beta=True

[Mozilla/3.01b1 (WinNT; I)]
parent=Netscape 3.01
platform=WinNT
beta=True

[Mozilla/3.01b1 (Win16; I)]
parent=Netscape 3.01
platform=Win16
Win16=True
beta=True

[Mozilla/3.01b1 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K
beta=True

[Mozilla/3.01b1 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC
beta=True

[Netscape 3.0]
browser=Netscape
version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.0Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K


[Mozilla/3.0Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0Gold (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0Gold*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0 (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0b3 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True

[Mozilla/3.0b3 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b3 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b3Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True
Win16=True

[Mozilla/3.0b5 (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (WinNT; U)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b5Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5a (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0b5a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5a (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5aGold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5aGold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5aGold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5aGold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6a (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6a (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b8Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b8Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Netscape 2.0]
browser=Netscape
version=2.0
majorver=2
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
beta=False
Win16=False

[Mozilla/2.0 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (16bit; U)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (Windows; I; 32bit)]
parent=Netscape 2.0
platform=Windows


[Mozilla/2.01 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.01 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=TRue

[Mozilla/2.01 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01GoldA1 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01I (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.01I (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01I (WinNT; I)]
parent=Netscape 2.0
platform=WinNT


[Mozilla/2.02 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT



;;;;;;;;;;;;;;;;;;;;;;
;;; Oracle Browser ;;;
;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Oracle 1.x
[Oracle 1.5]
browser=Power Browser
version=1.5
majorver=1.5
minover=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE

[Mozilla/2.01 (Compatible) Oracle(tm) PowerBrowser(tm)/1.0a]
parent=Oracle 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Default Browser    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;
[Default Browser Capability Settings]
browser=Default
Version=0.0
majorver=#0
minorver=#0
frames=False 
tables=True
cookies=False 
backgroundsounds=False
vbscript=False
javascript=False
javaapplets=False
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False
AuthenticodeUpdate=
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\sso\browser\browser.ini ===
;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Microsoft Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

[Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)]
browser=IE
version=2.0
majorver=#2
minorver=#0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE

[Mozilla/1.22 (compatible; MSIE 2.0c; Windows 95)]
browser=IE
version=2.0c
majorver=#2
minorver=#0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE

[Mozilla/1.22 (compatible; MSIE 2.01; Windows NT)]
browser=IE
version=2.01
majorver=#2
minorver=#01
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
platform=WinNT

[Mozilla/1.22 (compatible; MSIE 1.5; Windows NT)]
browser=IE
version=1.5
majorver=#1
minorver=#5
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=FALSE
platform=WinNT

[MSIE 3.0]
browser=IE
Version=3.0
majorver=#3
minorver=#0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0A; Windows 95)]
parent=MSIE 3.0
 
[Mozilla/2.0 (compatible; MSIE 3.0B; Win32)]
parent=MSIE 3.0

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;1024,768 ]
parent=MSIE 3.0

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;640,400 ]
parent=MSIE 3.0

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;800,600 ]
parent=MSIE 3.0

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Netscape Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

[Mozilla/2.0]
browser=Netscape
version=2.0
majorver=#2
minorver=#0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE

[Mozilla/2.0 (Win95; I)]
parent=Mozilla/2.0
platform=Win95

[Mozilla/2.0GoldB1 (WinNT; I)]
parent=Mozilla/2.0
platform=WinNT

[Mozilla/2.0 (Win16; I)]
parent=Mozilla/2.0
platform=Win16

[Mozilla/2.0 (Macintosh; I; PPC)]
parent=Mozilla/2.0
platform=MacPPC

[Mozilla/2.0 (Macintosh; I; 68K)]
parent=Mozilla/2.0
platform=Mac68K

[Mozilla/2.0 (X11; I; SunOS 5.3 sun4m)]
parent=Mozilla/2.0
platform=sun4m
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\sso\nextlink\nextperf.ini ===
[info]
drivername=MSWC.NextLink
symbolfile=ssoperf.h

[languages]
009=English

[text]
SSO_PERF_OBJECT_009_NAME=Next Link SSO
SSO_PERF_OBJECT_009_HELP=Displays statistics for the Next Link SSO

SSO_NUM_INVOKES_009_NAME=Number of invokes per second
SSO_NUM_INVOKES_009_HELP=This counter shows the number of IDispatch::Invoke() calls per method per second.

SSO_NUM_INVOKES_TOTAL_009_NAME=Total number of invokes
SSO_NUM_INVOKES_TOTAL_009_HELP=This counter shows the total number of IDispatch::Invoke() calls per method.

SSO_NUM_GETNAMES_009_NAME=Number of GetNames per second
SSO_NUM_GETNAMES_009_HELP=This counter shows the number of IDispatch::GetNamesOfIDs calls per method per second.

SSO_NUM_GETNAMES_TOTAL_009_NAME=Total number of GetNames
SSO_NUM_GETNAMES_TOTAL_009_HELP=This counter shows the total number of IDispatch::GetNamesOfIDs calls per method.

SSO_LATENCY_INVOKES_AVG_009_NAME=Average latency of invocation
SSO_LATENCY_INVOKES_AVG_009_HELP=This counter indicates the average length of time taken by the execution of a method.

SSO_LATENCY_INVOKES_MAX_009_NAME=Maximum latency of invocation
SSO_LATENCY_INVOKES_MAX_009_HELP=This counter indicates the maximum length of time taken by the execution of a method.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\sso\ssobase\ssoperf.ini ===
[info]
drivername=<FILL IN PROG ID (like MSN.InfoPump)>
symbolfile=ssoperf.h

[languages]
009=English

[text]
SSO_PERF_OBJECT_009_NAME=<NAME OF OBJECT>
SSO_PERF_OBJECT_009_HELP=Displays statistics for the <NAME OF OBJECT> SSO

SSO_NUM_INVOKES_009_NAME=Number of invokes per second
SSO_NUM_INVOKES_009_HELP=This counter shows the number of IDispatch::Invoke() calls per method per second.

SSO_NUM_INVOKES_TOTAL_009_NAME=Total number of invokes
SSO_NUM_INVOKES_TOTAL_009_HELP=This counter shows the total number of IDispatch::Invoke() calls per method.

SSO_NUM_GETNAMES_009_NAME=Number of GetNames per second
SSO_NUM_GETNAMES_009_HELP=This counter shows the number of IDispatch::GetNamesOfIDs calls per method per second.

SSO_NUM_GETNAMES_TOTAL_009_NAME=Total number of GetNames
SSO_NUM_GETNAMES_TOTAL_009_HELP=This counter shows the total number of IDispatch::GetNamesOfIDs calls per method.

SSO_LATENCY_INVOKES_AVG_009_NAME=Average latency of invocation
SSO_LATENCY_INVOKES_AVG_009_HELP=This counter indicates the average length of time taken by the execution of a method.

SSO_LATENCY_INVOKES_MAX_009_NAME=Maximum latency of invocation
SSO_LATENCY_INVOKES_MAX_009_HELP=This counter indicates the maximum length of time taken by the execution of a method.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\tools\bat\aspini.txt ===
\Registry\Machine
	System
		CurrentControlSet
			Services
				W3SVC
					Parameters
						Script Map
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\cmp\tools\src\ismoke\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : ISmoke
========================================================================


AppWizard has created this ISmoke application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your ISmoke application.

ISmoke.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CISmokeApp application class.

ISmoke.cpp
    This is the main application source file that contains the application
    class CISmokeApp.

ISmoke.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\ISmoke.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file ISmoke.rc.

res\ISmoke.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

ISmoke.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.


/////////////////////////////////////////////////////////////////////////////

AppWizard creates one dialog class:

ISmokeDlg.h, ISmokeDlg.cpp - the dialog
    These files contain your CISmokeDlg class.  This class defines
    the behavior of your application's main dialog.  The dialog's
    template is in ISmoke.rc, which can be edited in Microsoft
	Developer Studio.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named ISmoke.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

You need wininet.lib in order to compile.  You can get wininet.lib from
public\sdk directory.
/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\dbgext\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Aug 27, 1997

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory iis\svcs\infocomm\dbgext\
     and details related to IIS Debugger Extensions for NTSD.


File            Description

README.txt      This file.

dbgatq.cxx      ATQ (Async Thread Queue) module related debugging helper code
dbgcc.cxx       w3svc: CLIENT_CONN & HTTP_REQUEST related debugging helper code
dbginet.cxx     ISATQ objects general helper code - 
                        Allocation Cache, Scheduler ..
dbgthunk.cxx    Generic & Thunk code for the NTSD extension to function
                        inside the Debugger process

dbgwmif.cxx     Debugger extension for WAM INFO objects in w3svc.dll
dbgwreq.cxx     Debugger extensions for WAM_REQUEST object in w3svc.dll
dbgwxin.cxx     Debugger extensions for WAM_EXEC_INFO object in wam.dll

enummod.cxx     Enumerate module information - enum func.
mod.cxx         Used to enumerate loaded modules in the process
ref.cxx         Debugger extension for use with IIS RefTraceLogs 
ver.cxx         Version information for loaded modules

inetdbg.def     Def file for the dll
inetdbg.rc      Resources for the dll
inetdbgp.h      Precompiled header file for the DLL

makefile                NT Build related files
makefile.inc
sources



Implementation Details

Contents:
1) Debugger & Debuggee
2) Use of Thunks
3) private/public data members
*) Acknowledgements


1) Debugger & Debuggee
-----------------------
 NTSD is the system debugger for NT. We use it to do console mode debugging
for NT processes. In this context the debugger process is the master process
that runs the program in a separate process (debuggee). NTSD & CDB function
as the debugger process here. The underlying process is called the debuggee
process. The NTSD extension is loaded into the debugger process to help
us debug the debuggee. From the extensions insided the debugger, we can
only access the data blocks in the debugee process. This means that we cannot
be calling member functions or other fancy operations inside the debuggee
code. 

2) Use of Thunks
----------------
 When a project involves C++ headers, invariably one finds inline member
functions that show up in the header. Such functions have underlying code
implemented in one of the dlls of the debuggee. But these are not accessible
within the debugger process. To compile the debugger extensions the compiler
looks to resolve such inlined functions. There are two ways to resolve this:
a) link to the dlls of the debuggee process => redundantly code will be loaded
in the debuggee process (sometimes this may lead to failure, especially if
the debuggee dll does complicated initializations)
b) use dumb thunks - code that does nothing as a substitute for the original
functions. Given that we do not really care exercising the member functions,
thunks serve as the best approach.

In this current inetdbg.dll, the thunks are defined in dbgthunk.cxx.

3) Private/Public members
-------------------------
 C++ permits good abstraction and encapsulation using private, public, and
protected keywords to mask direct access to data members if needed. Inside
the debugger process, we can only access data. So to print out members
we may have to reach inside C++ structures and classes and pull out data 
members. To ease this it is good to # define the private & protected keywords
to be 'public' itself. This does no harm, because we are not really doing any
real work inside the debugger extensions that can affect state of the 
object.


*) Acknowledgements
-------------------
I would like to thank Keith Moore (KeithMo) for techniques and technical
consultation on this debugger extension dll. JohnL did a initial limited 
version of the debugger extension dealing with just ATQ contexts based on
code from NT base.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\mib\newmib.txt ===
Steps required to make a new MIB based on the FTP MIB:

1. Rename FTPMIB.DEF to {component}MIB.DEF

2. Edit {component}MIB.DEF to contain the correct component name
   and description.

3. Edit MAIN.C to create & destroy the appropriate statistics structure
   in SnmpExtensionQuery().

4. Edit MIB.H to #include the correct header files.

5. Edit MIB.RC to contain the correct versioning information.

6. Edit SOURCES to build the correct DLL.

7. Make the following changes to MIB.C:

        1. Edit the MIB_ENTRY_ITEM macro to use the appropriate
           statistics structure.

        2. Edit the OID_Prefix variable to contain the correct
           MIB OID for the new component.

        3. Edit the OID definitions (the MIB_* globals) to contain
           the correct MIB variables for the new component.

        4. Edit the Mib[] MIB_ENTRY array to contain one entry for
           each MIB_* global.

8. Rebuild everything. You should be done.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\perfmon\ftpctrs.ini ===
[info]
drivername=MSFTPSVC
symbolfile=ftpctrs.h
trusted=

[languages]
009=English
000=Neutral

[objects]
FTPD_COUNTER_OBJECT_009_NAME=FTP Service

[text]
FTPD_COUNTER_OBJECT_009_NAME=FTP Service
FTPD_COUNTER_OBJECT_009_HELP=The FTP Service object includes counters specific to the FTP Publishing Service.

FTPD_BYTES_SENT_COUNTER_009_NAME=Bytes Sent/sec
FTPD_BYTES_SENT_COUNTER_009_HELP=Bytes Sent/sec is the rate that data bytes are sent by the FTP service.

FTPD_BYTES_RECEIVED_COUNTER_009_NAME=Bytes Received/sec
FTPD_BYTES_RECEIVED_COUNTER_009_HELP=Bytes Received/sec is the rate that data bytes are received by the FTP service.

FTPD_BYTES_TOTAL_COUNTER_009_NAME=Bytes Total/sec
FTPD_BYTES_TOTAL_COUNTER_009_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the FTP service.

FTPD_FILES_SENT_COUNTER_009_NAME=Total Files Sent
FTPD_FILES_SENT_COUNTER_009_HELP=Total Files Sent is the total number of files sent by the FTP service since service startup.

FTPD_FILES_RECEIVED_COUNTER_009_NAME=Total Files Received
FTPD_FILES_RECEIVED_COUNTER_009_HELP=Total Files Received is the total number of files received by the FTP service since service startup.

FTPD_FILES_TOTAL_COUNTER_009_NAME=Total Files Transferred
FTPD_FILES_TOTAL_COUNTER_009_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the FTP service since service startup.

FTPD_CURRENT_ANONYMOUS_COUNTER_009_NAME=Current Anonymous Users
FTPD_CURRENT_ANONYMOUS_COUNTER_009_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the FTP service.

FTPD_CURRENT_NONANONYMOUS_COUNTER_009_NAME=Current NonAnonymous Users
FTPD_CURRENT_NONANONYMOUS_COUNTER_009_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the FTP service.

FTPD_TOTAL_ANONYMOUS_COUNTER_009_NAME=Total Anonymous Users
FTPD_TOTAL_ANONYMOUS_COUNTER_009_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the FTP service (since service startup).

FTPD_TOTAL_NONANONYMOUS_COUNTER_009_NAME=Total NonAnonymous Users
FTPD_TOTAL_NONANONYMOUS_COUNTER_009_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the FTP service (since service startup).

FTPD_MAX_ANONYMOUS_COUNTER_009_NAME=Maximum Anonymous Users
FTPD_MAX_ANONYMOUS_COUNTER_009_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the FTP service (since service startup).

FTPD_MAX_NONANONYMOUS_COUNTER_009_NAME=Maximum NonAnonymous Users
FTPD_MAX_NONANONYMOUS_COUNTER_009_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the FTP service (since service startup).

FTPD_CURRENT_CONNECTIONS_COUNTER_009_NAME=Current Connections
FTPD_CURRENT_CONNECTIONS_COUNTER_009_HELP=Current Connections is the current number of connections established with the FTP service.

FTPD_MAX_CONNECTIONS_COUNTER_009_NAME=Maximum Connections
FTPD_MAX_CONNECTIONS_COUNTER_009_HELP=Maximum Connections is the maximum number of simultaneous connections established with the FTP service.

FTPD_CONNECTION_ATTEMPTS_COUNTER_009_NAME=Total Connection Attempts (all instances)
FTPD_CONNECTION_ATTEMPTS_COUNTER_009_HELP=Total Connection Attempts is the number of connections that have been attempted using the FTP service (since service startup).  This counter is for all instances listed.

FTPD_LOGON_ATTEMPTS_COUNTER_009_NAME=Total Logon Attempts
FTPD_LOGON_ATTEMPTS_COUNTER_009_HELP=Total Logon Attempts is the number of logons that have been attempted using the FTP service (since service startup).

FTPD_SERVICE_UPTIME_COUNTER_009_NAME=FTP Service Uptime
FTPD_SERVICE_UPTIME_COUNTER_009_HELP=FTP Serive and FTP site uptime in seconds.

FTPD_COUNTER_OBJECT_000_NAME=FTP Service
FTPD_COUNTER_OBJECT_000_HELP=The FTP Service object includes counters specific to the FTP Publishing Service.

FTPD_BYTES_SENT_COUNTER_000_NAME=Bytes Sent/sec
FTPD_BYTES_SENT_COUNTER_000_HELP=Bytes Sent/sec is the rate that data bytes are sent by the FTP service.

FTPD_BYTES_RECEIVED_COUNTER_000_NAME=Bytes Received/sec
FTPD_BYTES_RECEIVED_COUNTER_000_HELP=Bytes Received/sec is the rate that data bytes are received by the FTP service.

FTPD_BYTES_TOTAL_COUNTER_000_NAME=Bytes Total/sec
FTPD_BYTES_TOTAL_COUNTER_000_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the FTP service.

FTPD_FILES_SENT_COUNTER_000_NAME=Total Files Sent
FTPD_FILES_SENT_COUNTER_000_HELP=Total Files Sent is the total number of files sent by the FTP service since service startup.

FTPD_FILES_RECEIVED_COUNTER_000_NAME=Total Files Received
FTPD_FILES_RECEIVED_COUNTER_000_HELP=Total Files Received is the total number of files received by the FTP service since service startup.

FTPD_FILES_TOTAL_COUNTER_000_NAME=Total Files Transferred
FTPD_FILES_TOTAL_COUNTER_000_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the FTP service since service startup.

FTPD_CURRENT_ANONYMOUS_COUNTER_000_NAME=Current Anonymous Users
FTPD_CURRENT_ANONYMOUS_COUNTER_000_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the FTP service.

FTPD_CURRENT_NONANONYMOUS_COUNTER_000_NAME=Current NonAnonymous Users
FTPD_CURRENT_NONANONYMOUS_COUNTER_000_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the FTP service.

FTPD_TOTAL_ANONYMOUS_COUNTER_000_NAME=Total Anonymous Users
FTPD_TOTAL_ANONYMOUS_COUNTER_000_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the FTP service (since service startup).

FTPD_TOTAL_NONANONYMOUS_COUNTER_000_NAME=Total NonAnonymous Users
FTPD_TOTAL_NONANONYMOUS_COUNTER_000_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the FTP service (since service startup).

FTPD_MAX_ANONYMOUS_COUNTER_000_NAME=Maximum Anonymous Users
FTPD_MAX_ANONYMOUS_COUNTER_000_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the FTP service (since service startup).

FTPD_MAX_NONANONYMOUS_COUNTER_000_NAME=Maximum NonAnonymous Users
FTPD_MAX_NONANONYMOUS_COUNTER_000_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the FTP service (since service startup).

FTPD_CURRENT_CONNECTIONS_COUNTER_000_NAME=Current Connections
FTPD_CURRENT_CONNECTIONS_COUNTER_000_HELP=Current Connections is the current number of connections established with the FTP service.

FTPD_MAX_CONNECTIONS_COUNTER_000_NAME=Maximum Connections
FTPD_MAX_CONNECTIONS_COUNTER_000_HELP=Maximum Connections is the maximum number of simultaneous connections established with the FTP service.

FTPD_CONNECTION_ATTEMPTS_COUNTER_000_NAME=Total Connection Attempts (all instances)
FTPD_CONNECTION_ATTEMPTS_COUNTER_000_HELP=Total Connection Attempts is the number of connections that have been attempted using the FTP service (since service startup).  This counter is for all instances listed.

FTPD_LOGON_ATTEMPTS_COUNTER_000_NAME=Total Logon Attempts
FTPD_LOGON_ATTEMPTS_COUNTER_000_HELP=Total Logon Attempts is the number of logons that have been attempted using the FTP service (since service startup).

FTPD_SERVICE_UPTIME_COUNTER_000_NAME=FTP Service Uptime
FTPD_SERVICE_UPTIME_COUNTER_000_HELP=FTP Serive and FTP site uptime in seconds.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\perfmon\ftpctrs.txt ===
I.  PURPOSE

      This document details a simple test plan for the Windows NT FTP Server
      Performance Counters.


 II.  OVERVIEW

      The Windows NT FTP Server Performance Counters may be installed from
      \\KAYAK\RESKIT\FTPCTRS.  INSTALL.BAT will install the counters, and
      REMOVE.BAT will remove the counters.  These .BAT files *MUST* be run
      from the FTPCTRS directory.

      Running INSTALL.BAT will install the performance counters.  These
      counters are used by PERFMON.EXE to monitor the activity of the
      Windows NT FTP Server.  The following attributes may be monitored:

           0.  Bytes Sent/sec

               This is the rate that data bytes are sent by the FTP
               Server.

           1.  Bytes Received/sec

               This is the rate that data bytes are received by the
               FTP Server.

           2.  Bytes Total/sec

               This is sum of Bytes Sent/sec and Bytes Received/sec.
               This is the total rate of bytes transferred by the
               FTP Server.

           3.  Files Sent

               This is the total number of files sent by the FTP
               Server.

           4.  Files Received

               This is the total number of files received by the
               FTP Server.

           5.  Files Total

               This is sum of Files Sent and Files Received.  This
               is the total number of files transferred by the FTP
               Server.

           6.  Current Anonymous Users

               This is number of anonymous users currently connected
               to the FTP Server.

           7.  Current NonAnonymous Users

               This is number of non-anonymous users currently
               connected to the FTP Server.

           8.  Total Anonymous Users

               This is total number of anonymous users that have
               ever connected to the FTP Server.

           9.  Total NonAnonymous Users

               This is total number of non-anonymous users that have
               ever connected to the FTP Server.

          10.  Maximum Anonymous Users

               This is maximum number of anonymous users
               simultaneously connected to the FTP Server.

          11.  Maximum NonAnonymous Users

               This is maximum number of non-anonymous users
               simultaneously connected to the FTP Server.

          12.  Current Connections

               This is the current number of connections to the FTP
               Server.

          13.  Maximum Connections

               This is maximum number of simultaneous connections to
               the FTP Server.

          14.  Connection Attempts

               This is the number of connection attempts that have
               been made to the FTP Server.

          15.  Logon Attempts

               This is the number of logon attempts that have been
               made to the FTP Server.

          16.  Service Uptime

               Number in seconds since service was started. Accounted 
               for FTP sites also. Pausing is not accounted.


III.  TESTING

      These tests assume the test machine has TCP/IP installed, but
      does *NOT* yet have the FTP Server installed.  Also, LODCTR.EXE,
      UNLODCTR.EXE, and REGINI.EXE must be on the path.

      These tests also assume the user knows how to run PerfMon.


           0.  Run INSTALL.BAT from some directory other than FTPCTRS
               (i.e. cd to K:\FOO then execute \FTPCTRS\INSTALL).  This
               should fail with an appropriate error message (must be
               run from FTPCTRS directory).

           1.  Do the same thing with REMOVE.BAT.  This should also fail.

           2.  From the FTPCTRS directory, run REMOVE.BAT.  This should
               fail.

           3.  From the FTPCTRS directory, run INSTALL.BAT.  This should
               fail with an appropriate error message (FTP Server not
               installed).

               NOTE:  This will succeed on an IDW installation.

           4.  Run NCPA and install the FTP Server.  Reboot.

           5.  From the FTPCTRS directory, run REMOVE.BAT.  This should
               fail.

           6.  From the FTPCTRS directory, run INSTALL.BAT.  This should
               succeed.

           8.  Run PerfMon & verify that the counters are working.
               Select the FTP Server object and the default counter.
               Then connect to the target machine via the FTP client and
               verify the Bytes Total/sec counter is responding.

               Also, verify that each of the counters listed in section II
               are visible.

           7.  Run INSTALL.BAT again.  This should also succeed.

           9.  Run PerfMon again to verify nothing messed up.

          10.  Run REMOVE.BAT.  This should succeed.

          11.  Run PerfMon to verify the FTP Server object is no longer
               displayed in the "objects" combo box.

          12.  Run INSTALL.BAT again.  This should succeed.

          13.  Run PerfMon to verify the counters were reinstalled.

          14.  While PerfMon is running, stop the FTP Server with
               either NET.EXE or the Services applet.  PerfMon should
               continue chugging along with no FTP activity displayed.

               There will be no other indication in PerfMon that the
               service has been stopped.

          15.  While PerfMon is still running, restart the service.
               Verify that PerfMon is now displaying service activity
               by connecting to the server with the FTP client.

          16.  While PerfMon is running, run REMOVE.BAT.  This should
               succeed.

               PerfMon will still allow you to add/remove FTP Server
               counters until you exit the PerfMon app.

          17.  Exit & restart PerfMon.  The FTP Server counters should
               not be available.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server\history.txt ===
This file contains the version history of the Windows NT FTP Server Service.


Date        Details
--------    -------

03/08/93    Starting coding.

07/30/93    Initial release, part of Windows NT Product 1.0.

09/10/93    Fixed problem with aggressive client firewalls refusing
            connections from sockets bound to nonreserved ports.
            QFE Bug #3633.

09/13/94    Added integrated path canonicalization code so that I could
            remove the "lock/chdir/fileopen/unlock" stuff that was such
            a huge bottleneck on MP machines. For Power PC release.

12/06/94    If user doesn't specify a domain name, pass the local machine's
            primary domain into LsaLogonUser. Previous versions would pass
            in an empty string, which would cause LSA to search for known
            accounts, which is NOT what we want it to do.

08/15/95    Initial Beta for Gibraltar High-Performance FTP server (MuraliK)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server\ftpsvc.ini ===
//
//  This is the default hive definition for the FTP Server
//
//   Author: MuraliK
//   Created: 21-March-1995
//


\registry\machine
  SYSTEM
    CurrentControlSet
        Services
            FtpSvc
                DependOnService = REG_MULTI_SZ  TCPIP
                DisplayName     = REG_SZ     Microsoft FTP Server( MuraliK 95)
                ErrorControl   = REG_DWORD   0x1
                ImagePath      = REG_EXPAND_SZ %SystemRoot%\System32\inetsvcs.exe
                ObjectName     = REG_SZ        LocalSystem
                Start          = REG_DWORD     0x3
                Type           = REG_DWORD     0x20

                //
                //  Gopher parameters are kept under the parameters key
                //

                Parameters

                    //
                    //  Port to run the service on
                    //

                    Port                = REG_DWORD 0x15

                    HomeDirectory       = REG_SZ c:\internet

                    Virtual Roots
                        /               = REG_SZ c:\internet
                        /gophroot       = REG_SZ c:\internet\gophroot
                        
                    //
                    //   Security related parameters
                    //
                    EnablePortAttack     = REG_DWORD 0
                    AllowAnonymous       = REG_DWORD 1
                    LogAnonymous         = REG_DWORD 0
                    LogNonAnonymous      = REG_DWORD 0
                    AnonymousUserName    = REG_SZ   Internet

                     
                    //
                    //  Specifies when to timeout connection (in seconds)
                    //
                    
                    ConnectionTimeout    = REG_DWORD  900

                    //
                    //  Maximum number of simultaneous connections allowed
                    //

                    MaxConnections        = REG_DWORD 0x00000014
        
                    //
                    //  Access Masks
                    //
                    ReadAccessMask        = REG_DWORD  0x4
                    WriteAccessMask       = REG_DWORD  0x0

                    //
                    //  Log Configuration for Gopher Service
                    //  Size is set to 4 MegaBytes
                    //
                    
                    LogType               = REG_DWORD  1 
                    LogFileDirectory      = REG_EXPAND_SZ %SystemRoot%\System32
                    LogFileTruncateSize   = REG_DWORD  4000000000
                    LogFilePeriod         = REG_DWORD  1
                    LogSqlDataSource      = REG_SZ     TSLOG
                    LogSqlTableName       = REG_SZ     gophlog
                    LogSqlUserName        = REG_SZ     InternetAdmin
                    LogSqlPassword        = REG_SZ     sqllog

                    //
                    //  For tracing debug output
                    //

                    DebugFlags            = REG_DWORD 0x80000000

                    //
                    //  Path name specifies location of the SNMP MIB DLL
                    //
                    Pathname            = REG_EXPAND_SZ %systemroot%\system32
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server\reply.txt ===
These are the replys that may be sent from the FTP Server to an FTP Client.

Text enclosed in square brackets (such as [(guest access)]) may optionally
appear in the output stream.

Text enclosed within percent signs (such as %user_name%) are placeholders for
run-time dependent values (such as keithmo).  These values are:

        %anonymous_id%

                This is the identification sent as a "password"
                when an anonymous user logs in.

        %b1,b2,b3,b4,p1,p2%

                This is part of the response from a request to
                enter passive mode.  b1-b4 specify the local IP
                address for the passive data socket.  p1-p2
                specify the local port for the passive data
                socket.  All values are in network byte order.

        %command_name%

                The name of a command sent by the FTP client.

        %command_text%

                The entire text of a command sent by the FTP
                client.

        %connection_timeout%

                The idle-user timeout value (in seconds).

        %current_directory_name%

                A user's current directory.

        %custom_exit_message%

                The custom single-line exit message to send
                when a client QUITs.

        %custom_greeting_line_x%

                The custom multi-line greeting message to send
                when a new client connects.

        %directory_name%

                A directory name.

        %file_name%

                A file name.

        %form%

                A transfer form type.  This will always be
                "Nonprint".

        %host_name%

                The name of the local FTP Server host.

        %long_directory_listing%

                A long format directory listing.

        %major_ftp_server_version%

                The major FTP Server version number.

        %minor_ftp_server_version%

                The minor FTP Server version number.

        %ftp_server_version%

                %major_ftp_server_version%.%minor_ftp_server_version%

        %major_windows_version%

                The major Windows NT version number.

        %minor_windows_version%

                The minor Windows NT version number.

        %mode_type%

                A transfer mode type.  This will always be
                "STREAM".

        %struct%

                A transfer structure type.  This will always be
                "File".

        %type%

                A transfer type.  This will be either "ASCII" or
                "BINARY".

        %users_host_name%

                The connected FTP client's host name.

        %users_ip_address%

                The connected FTP client's IP address (in dot
                notation).

        %user_name%

                The connected users's name.

        %win32_error_text%

                A string of text from WINERROR.MC that describes
                a specific Win32 error condition (such as "Access
                is denied.").


*************************************
***                               ***
***  POSITIVE PRELIMINARY REPLIES ***
***                               ***
*************************************

125 Data connection already open; transfer starting.

        Indicates that a passive mode transfer has been initiated.

150 Opening %mode_type% mode data connection for %file_name%.

        Indicates that the server is opening a new data
        connection for the transfer of %file_name%.  Whenever a
        directory listing is requested, this message is sent with
        %file_name% set to "file list".

************************************
***                              ***
***  POSITIVE COMPLETION REPLIES ***
***                              ***
************************************

200 NOOP command successful.

        The NOOP command completed.

200 PORT command successful.

        The NOOP command completed.

200 Type set to %type%.

        The transfer type was set.

200 STRU %struct% ok.

        The transfer structure type was set.

200 MODE %mode_type% ok.

        The transfer mode was set.

200 ALLO command successful.

        The ALLO command completed.

202 ACCT command not implemented.

        The ACCT command is superfluous at this site.

202 SMNT command not implemented.

        The SMNT command is superfluous at this site.

202 SITE command not implemented.

        The SITE command is superfluous at this site.

211-%host_name% Windows NT FTP Server status:
    Version %major_ftp_server_version%.%minor_ftp_server_version%
    Connected to %users_host_name or %users_ip_address%
    Logged in as %user_name%
    TYPE: %type%, FORM: %form%, STRUcture: %struct%, transfer MODE: %mode_type%
    {No data connection or Data connection established}
211 End of status.

        This multi-line reply is sent whenever a STAT command is
        received with no arguments.  It indicates the general
        status of the FTP server and the current connection.

213-status of %file_or_directory_name%
%long_directory_listing%
213 End of Status.

        This multi-line reply is sent whenever a STAT command is
        received with an argument.  This functions similarly to
        DIR {arg}, except that the directory listing is sent over
        the command socket; a new data transfer socket is not
        created for the listing.

214-The following commands are recognized (* =>'s unimplemented).
   USER    PASS    ACCT    CWD     XCWD    CDUP    XCUP    SMNT
   QUIT    REIN    PORT    PASV    TYPE    STRU    MODE    RETR
   STOR    STOU    APPE    ALLO    REST*   RNFR    RNTO    ABOR*
   DELE    RMD     XRMD    MKD     XMKD    PWD     XPWD    LIST
   NLST    SITE    SYST    STAT    HELP    NOOP
214 HELP command successful.

        This multi-line reply is sent whenever a HELP command is
        received with no arguments.  It lists all available
        FTP Server commands.

214 Syntax: USER <sp> username

        This reply is sent whenever a HELP USER command is
        received.

214 Syntax: PASS <sp> password

        This reply is sent whenever a HELP PASS command is
        received.

214 Syntax: ACCT (specify account)

        This reply is sent whenever a HELP ACCT command is
        received.

214 Syntax: CWD [ <sp> directory-name ]

        This reply is sent whenever a HELP CWD command is
        received.

214 Syntax: XCWD [ <sp> directory-name ]

        This reply is sent whenever a HELP XCWD command is
        received.

214 Syntax: CDUP change to parent directory

        This reply is sent whenever a HELP CDUP command is
        received.

214 Syntax: XCUP change to parent directory

        This reply is sent whenever a HELP XCUP command is
        received.

214 Syntax: SMNT <sp> pathname

        This reply is sent whenever a HELP SMNT command is
        received.

214 Syntax: QUIT (terminate service)

        This reply is sent whenever a HELP QUIT command is
        received.

214 Syntax: REIN (reinitialize server state)

        This reply is sent whenever a HELP REIN command is
        received.

214 Syntax: PORT <sp> b0,b1,b2,b3,b4,b5

        This reply is sent whenever a HELP PORT command is
        received.

214 Syntax: PASV (set server in passive mode)

        This reply is sent whenever a HELP PASV command is
        received.

214 Syntax: TYPE <sp> [ A | E | I | L ]

        This reply is sent whenever a HELP TYPE command is
        received.

214 Syntax: STRU (specify file structure)

        This reply is sent whenever a HELP STRU command is
        received.

214 Syntax: MODE (specify transfer mode)

        This reply is sent whenever a HELP MODE command is
        received.

214 Syntax: RETR <sp> file-name

        This reply is sent whenever a HELP RETR command is
        received.

214 Syntax: STOR <sp> file-name

        This reply is sent whenever a HELP STOR command is received.


214 Syntax: STOU (store unique file)

        This reply is sent whenever a HELP STOU command is
        received.

214 Syntax: APPE <sp> file-name

        This reply is sent whenever a HELP APPE command is
        received.

214 Syntax: ALLO (allocate storage vacuously)

        This reply is sent whenever a HELP ALLO command is
        received.

214 Syntax: REST <sp> marker

        This reply is sent whenever a HELP REST command is
        received.

214 Syntax: RNFR <sp> file-name

        This reply is sent whenever a HELP RNFR command is
        received.

214 Syntax: RNTO <sp> file-name

        This reply is sent whenever a HELP RNTO command is
        received.

214 Syntax: ABOR (abort operation)

        This reply is sent whenever a HELP ABOR command is
        received.

214 Syntax: DELE <sp> file-name

        This reply is sent whenever a HELP DELE command is
        received.

214 Syntax: RMD <sp> path-name

        This reply is sent whenever a HELP RMD command is
        received.

214 Syntax: XRMD <sp> path-name

        This reply is sent whenever a HELP XRMD command is
        received.

214 Syntax: MKD <sp> path-name

        This reply is sent whenever a HELP MKD command is
        received.

214 Syntax: XMKD <sp> path-name

        This reply is sent whenever a HELP XMKD command is
        received.

214 Syntax: PWD (return current directory)

        This reply is sent whenever a HELP PWD command is
        received.

214 Syntax: XPWD (return current directory)

        This reply is sent whenever a HELP XPWD command is
        received.

214 Syntax: LIST [ <sp> path-name ]

        This reply is sent whenever a HELP LIST command is
        received.

214 Syntax: NLST [ <sp> path-name ]

        This reply is sent whenever a HELP NLST command is
        received.

214 Syntax: SITE (site-specific commands)

        This reply is sent whenever a HELP SITE command is
        received.

214 Syntax: SYST (get operating system type)

        This reply is sent whenever a HELP SYST command is
        received.

214 Syntax: STAT (get server status)

        This reply is sent whenever a HELP STAT command is
        received.

214 Syntax: HELP [ <sp> <string> ]

        This reply is sent whenever a HELP HELP command is
        received.

214 Syntax: NOOP

        This reply is sent whenever a HELP NOOP command is
        received.

214-The following SITE commands are recognized (* =>'s unimplemented).
   DIRSTYLE    CKM         HELP
214 HELP command successful.

        This multi-line reply is sent whenever a SITE HELP command is
        received with no arguments.  It lists all available
        site-specific FTP Server commands.

214 Syntax: SITE DIRSTYLE (toggle directory format)

        This reply is sent whenever a SITE HELP DIRSTYLE command
        is received.

214 Syntax: SITE CKM (toggle directory comments)

        This reply is sent whenever a SITE HELP CKM command
        is received.

214 Syntax: SITE HELP [ <sp> <string>]

        This reply is sent whenever a SITE HELP HELP command
        is received.

215 Windows_NT version %major_windows_version%.%minor_windows_version%

        This is sent as a response to the SYST command.

220-%host_name% Windows NT FTP Server (%ftp_server_version%)
 %custom_greeting_line_1%
 %custom_greeting_line_2%
            .
            .
            .
 %custom_greeting_line_N%
220 Service ready for new user.

        This multi-line reply is sent whenever a new FTP client
        connects to the server.  The custom greeting, if any,
        comes from the registry.

220 Service ready for new user.

        This single-line reply is sent after a connection has
        been reinitialized via the REIN command.

221 Goodbye.

        This is the default exit message sent in response to a
        QUIT command.

221 %custom_exit_message%

        This is the custom exit message sent in response to a
        QUIT command.

226 Transfer complete.

        This is sent after a successful data transfer.

227 Entering passive mode %b1,b2,b3,b4,p1,p2%

        This is sent after a PASV command has successfully
        created a new data socket.

230 Anonymous user logged in as %anonymous_id% [(guest access)].

        This indicates that an anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

230 User %user_name% logged in [(guest access)].

        This indicates that a non-anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

250 CWD command successful.

        Indicates the CWD command has completed.

250 RNTO command successful.

        Indicates the RNTO command has completed.

250 DELE command successful.

        Indicates the DELE command has completed.

250 RMD command successful.

        Indicates the RMD command has completed.

250 MKD command successful.

        Indicates the MKD command has completed.

257 "%current_directory_name%" is current directory.

        This is sent in response to a PWD command.


**************************************
***                                ***
***  POSITIVE INTERMEDIATE REPLIES ***
***                                ***
**************************************

331 Anonymous access allowed, send identity (e-mail name) as password.

        This indicates that a USER command with a user-name of
        "Anonymous" has been received and accepted.  This prompts
        the user to enter an identity (e-mail name) instead of
        a password.

331 Password required for %user_name%.

        This indicates that a USER command with a user-name other
        than "Anonymous" has been received and accepted.  This
        prompts the user to enter a password.

350 File exists, ready for destination name.

        Indicates that a RNFR command has completed.


**********************************************
***                                        ***
***  TRANSIENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

421 Service not available, closing control connection.

        Indicates that the FTP Server is unable to accept new
        connections at this time.

421 Terminating connection.

        This is sent after a user has been forcibly disconnected.

421 Timeout (%connection_timeout% seconds): closing control connection.

        Indicates that the idle-user timeout period has expired
        for this connection.

425 Can't open data connection.

        Indicates that a new data connection could not be
        established to the FTP client.

426 Connection closed; transfer aborted.

        Indicates that an error occurred during a data transfer
        and the transfer was aborted.


**********************************************
***                                        ***
***  PERMANENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

500 %command_text%: comamnd not understood.

        Either an unknown command was received by the FTP Server
        or the command had invalid parameters.

501 Unknown command %command_name%.

        A HELP command was received with a parameter specifying
        an unknown command.

502 %command_text% command not implemented.

        The specified command is not implemented by this
        FTP Server.

503 Bad sequence of commands.

        A RNTO command was received before a RNFR command.  A
        RNFR command must always preceed a RNTO command.

503 Login with USER first.

        A PASS command was received before a corresponding USER
        command.

504 Form must be N or T.

        An invalid form type was received in the TYPE command.

504 Type E not implemented.

        The E type was specified in a TYPE command.

504 Byte size must be 8.

        A byte size other than 8 was specified in a TYPE command.

504 Unimplemented STRU type.

        A structure type other than File was received in a STRU
        command.

504 Unimplemented MODE type.

        A mode type other than Stream was received in a MODE
        command.

530 Please login with USER and PASS.

        An unacceptable command was received before the user
        logged in.

530 User %user_name% cannot log in.

        The specified user cannot log in at this time.

530 User %user_name% cannot log in, home directory inaccessible.

        The specified user cannot log in because their home
        directory is inaccessible.

530 User %user_name% cannot log in, license quota exceeded.

        The specified user cannot log in due to license quota
        restrictions.

530 User %user_name% cannot log in, guest access not allowed.

        The specified user cannot log in because they provided a
        "guest" account, and guest access has been disabled.

550 %directory_name%: No such file or directory.

        The specified directory cannot be found.

550 %directory_name%: %win32_error_text%

        The specified directory cannot be accessed.

550 %file_name%: No such file or directory.

        The specified file cannot be found.

550 %file_name%: %win32_error_text%

        The specified file cannot be accessed.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server\registry.txt ===
This file details the registry structure & specific values used by the
FTP Server service.


All FTP Server parameters "live" under the following key:

    HKEY_LOCAL_MACHINE
        System
            CurrentControlSet
                Services
                    FtpSvc
                        Parameters

The following values may exist under the Parameters key:

    Name:       AllowAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then anonymous logons are allowed.
                Otherwise (value IS zero) anonymous logons are not allowed.
    Default:    1 (allow anonymous logons)

    Name:       AllowGuestAccess
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then guest-access logons are
                allowed.  Otherwise (value IS zero) guest-access logons
                are not allowed.  (Note that guest-access has nothing to
                do with the "Guest" account; guest-access is granted if
                the local machine's user rights policy states that
                "Everyone" may access the machine from the network.  Any
                user that tries to logon with an unknown account will be
                granted guest-access.)
    Default:    1 (allow guest-access)

    Name:       AnnotateDirectories
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then everytime a user changes
                directories (sends the server a CWD command) an attempt is
                made to open a file called "~FTPSVC~.CKM" in the new
                directory.  If this file is found, its contents are sent
                to the user as part of the successful reply to the CWD
                command.  This may be used to attach "annotations" to
                specific directories.

                This value is used as a default for new users.  Users can
                toggle their own personal "annotate directories" flag with
                the site-specific CKM command (SITE CKM).
    Default:    0 (don't annotate directories)

    Name:       AnonymousOnly
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then only anonymous logons are
                allowed.  Otherwise (value IS zero) then non-anonymous
                logons are allowed as well.
    Default:    0 (non-anonymous logons allowed).

    Name:       AnonymousUserName
    Type:       REG_SZ
    Meaning:    Anonymous logon alias.  When a user attempts an anonymous
                logon, the username specified ("anonymous") is mapped to
                this registry value for the purposes off authentication
                and impersonation.  The password for this account is stored
                in an LSA secret object named "FTPD_ANONYMOUS_DATA".
    Default:    "Guest"

    Name:       ConnectionTimeout
    Type:       REG_DWORD
    Meaning:    The time (in seconds) to allow clients to remain idle before
                forcibly disconnecting them.  This prevents idle clients
                from consuming server resources indefinitely.

                This value may be set to zero if timeouts are not to be
                enforced.  If set to zero, idle clients *can* remain connected
                indefinitely.
    Default:    600 (10 minutes)

    Name:       DebugFlags
    Type:       REG_DWORD
    Meaning:    This value is used only by the debugging (checked) builds of
                the FTP Server.  It controls the output of various debugging
                information.  This value is unused by retail builds.
    Default:    0 (no debug output)

    Name:       DefaultLogonDomain
    Type:       REG_SZ
    Meaning:    The domain name to use when validating user logon requests
                if the user did not specify a domain.  If this value does
                not exist in the registry, then the FTP Server will use the
                local machine's primary logon domain instead.
    Default:    NULL (use the local machine's primary logon domain)

    Name:       DisableExtendedCharFilenames
    Type:       REG_DWORD
    Meaning:    RFC 0959 says only 7bi ASCII characters can be used to specify
                file names in FTP commands. DeFacto, 8bit chars are being used
                to specify extended char names and DBCS encoding. If this value
                does not exists, or if it exists but set to 0, extended chars
                are being accepted. If the value is 1, extended char file names
                are rejected.
    Default:    Not created. (extended chars enabled)

    Name:       ExitMessage
    Type:       REG_SZ
    Meaning:    This is the signoff message sent to a client upon receipt
                of a QUIT command.
    Default:    "Goodbye."

    Name:       GreetingMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients after their account has been validated.  In accordance
                with "de facto" Internet behaviour, if a client logs on as
                anonymous and specifies an identity starting with '-' (minus),
                then this greeting message is NOT sent.
    Default:    NULL (no special greeting)

    Name:       BannerMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients when they connect, right after the service name.
    Default:    NULL (no special greeting)

    Name:       HomeDirectory
    Type:       REG_EXPAND_SZ
    Meaning:    This is the initial "home" directory for new clients.  After
                a new client is validated, an attempt is made to CHDIR to
                this directory.  If this directory is inaccessible, the client
                is refused FTP services.  If the CHDIR is successful, then
                an attempt is made to CHDIR to a directory with the same name
                as the client's username.  If this fails, an attempt is made
                to CHDIR to a directory called "Default".  If this fails,
                the current directory is left at "home".

                If a user finds that the home directory is inaccessible,
                then an event is written to the event log indiciating such.
    Default:    "C:\"

    Name:       ListenBacklog
    Type:       REG_DWORD
    Meaning:    This is the "backlog" parameter passed into the listen()
                API.  This sets the maximum number of unaccepted connections
                that can be queued against the socket that listens on the
                main FTP port.
    Default:    5

    Name:       LogAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful anonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful anonymous logons are not logged.
    Default:    0 (don't log successful anonymous logons)

    Name:       LogFileAccess
    Type:       REG_DWORD
    Meaning:    This value controls the logging of file accesses.  This value
                can be one of the following:

                        0 = Don't log file accesses
                        1 = Log file accesses to FTPSVC.LOG
                        2 = Log file accesses to FTyymmdd.LOG, where yy
                                is the year, mm is the month, and dd is
                                the day.  A new log file will be opened
                                every day as necessary.
    Default:    0 (don't log file accesses)

    Name:       LogFileDirectory
    Type:       REG_SZ
    Meaning:    This value specifies the target directory for log files.
                This value is only used if LogFileAccess is !0.
    Default:    %SystemRoot%\System32

    Name:       LogNonAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful nonanonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful nonanonymous logons are not logged.
    Default:    0 (don't log successful nonanonymous logons)

    Name:       LowercaseFiles
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all file names returned by
                LIST and NLST commands for non-case-preserving filesystems
                will be mapped to lowercase.  If this value is zero, then
                all file names will be unaltered.
    Default:    0 (don't map filenames to lowercase)

    Name:       MaxClientsMessage
    Type:       REG_SZ
    Meaning:    This message (if it exists) is sent to a client if the maximum
                number of clients has been reached/exceeded.  This indicates
                that the server is currently servicing the maximum number of
                simultaneous clients and is refusing addtional clients.
    Default:    "Maximum clients reached, service unavailable."

    Name:       MaxConnections
    Type:       REG_DWORD
    Meaning:    This is the maximum number of simultaneous clients the server
                will service.

                This value may be set to zero if there is to be no limit on
                simultaneous clients.
    Default:    20

    Name:       MsdosDirOutput
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then the output of the LIST
                command (usually sent as a result of a DIR from the client)
                will look like the output of the MS-DOS DIR command.
                Otherwise (value IS zero) then the output of the LIST command
                will look like the output of the UNIX LS command.

                This value also controls "slash flipping" in the path
                sent by the PWD command.  If this value is non-zero, the path
                will contain backward "\" slashes.  If this value IS zero, the
                path will contain forward "/" slashes.
    Default:    1 (directory listings like MS-DOS)

    Name:       ReadAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "readability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only read from a specific volume if the corresponding
                bit is set.
    Default:    0 (all read access denied)

    Name:       WriteAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "writability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only write to a specific volume if the corresponding
                bit is set.
    Default:    0 (all write access denied)


There is an additional (optional) key that may exist under the Parameters
key.  After a user's account/password has been validated and the server is
impersonating that user, an attempt is made to open a key named "AccessCheck".
If this key exists, and the user cannot open it, then the user is denied
access to the FTP Server.  If this key exists, and the user can only open it
for read access, then the user is given read-only access to the FTP Server.
This way, an administrator can create this "AccessCheck" key and attach
specific ACLs to the key. These ACLs will then control access to the FTP
Server.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server51\ftpsvc.ini ===
//
//  This is the default hive definition for the FTP Server
//
//   Author: MuraliK
//   Created: 21-March-1995
//


\registry\machine
  SYSTEM
    CurrentControlSet
        Services
            FtpSvc
                DependOnService = REG_MULTI_SZ  TCPIP
                DisplayName     = REG_SZ     Microsoft FTP Server( MuraliK 95)
                ErrorControl   = REG_DWORD   0x1
                ImagePath      = REG_EXPAND_SZ %SystemRoot%\System32\inetsvcs.exe
                ObjectName     = REG_SZ        LocalSystem
                Start          = REG_DWORD     0x3
                Type           = REG_DWORD     0x20

                //
                //  Gopher parameters are kept under the parameters key
                //

                Parameters

                    //
                    //  Port to run the service on
                    //

                    Port                = REG_DWORD 0x15

                    HomeDirectory       = REG_SZ c:\internet

                    Virtual Roots
                        /               = REG_SZ c:\internet
                        /gophroot       = REG_SZ c:\internet\gophroot
                        
                    //
                    //   Security related parameters
                    //
                    EnablePortAttack     = REG_DWORD 0
                    AllowAnonymous       = REG_DWORD 1
                    LogAnonymous         = REG_DWORD 0
                    LogNonAnonymous      = REG_DWORD 0
                    AnonymousUserName    = REG_SZ   Internet

                     
                    //
                    //  Specifies when to timeout connection (in seconds)
                    //
                    
                    ConnectionTimeout    = REG_DWORD  900

                    //
                    //  Maximum number of simultaneous connections allowed
                    //

                    MaxConnections        = REG_DWORD 0x00000014
        
                    //
                    //  Access Masks
                    //
                    ReadAccessMask        = REG_DWORD  0x4
                    WriteAccessMask       = REG_DWORD  0x0

                    //
                    //  Log Configuration for Gopher Service
                    //  Size is set to 4 MegaBytes
                    //
                    
                    LogType               = REG_DWORD  1 
                    LogFileDirectory      = REG_EXPAND_SZ %SystemRoot%\System32
                    LogFileTruncateSize   = REG_DWORD  4000000000
                    LogFilePeriod         = REG_DWORD  1
                    LogSqlDataSource      = REG_SZ     TSLOG
                    LogSqlTableName       = REG_SZ     gophlog
                    LogSqlUserName        = REG_SZ     InternetAdmin
                    LogSqlPassword        = REG_SZ     sqllog

                    //
                    //  For tracing debug output
                    //

                    DebugFlags            = REG_DWORD 0x80000000

                    //
                    //  Path name specifies location of the SNMP MIB DLL
                    //
                    Pathname            = REG_EXPAND_SZ %systemroot%\system32
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server51\history.txt ===
This file contains the version history of the Windows NT FTP Server Service.


Date        Details
--------    -------

03/08/93    Starting coding.

07/30/93    Initial release, part of Windows NT Product 1.0.

09/10/93    Fixed problem with aggressive client firewalls refusing
            connections from sockets bound to nonreserved ports.
            QFE Bug #3633.

09/13/94    Added integrated path canonicalization code so that I could
            remove the "lock/chdir/fileopen/unlock" stuff that was such
            a huge bottleneck on MP machines. For Power PC release.

12/06/94    If user doesn't specify a domain name, pass the local machine's
            primary domain into LsaLogonUser. Previous versions would pass
            in an empty string, which would cause LSA to search for known
            accounts, which is NOT what we want it to do.

08/15/95    Initial Beta for Gibraltar High-Performance FTP server (MuraliK)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server51\reply.txt ===
These are the replys that may be sent from the FTP Server to an FTP Client.

Text enclosed in square brackets (such as [(guest access)]) may optionally
appear in the output stream.

Text enclosed within percent signs (such as %user_name%) are placeholders for
run-time dependent values (such as keithmo).  These values are:

        %anonymous_id%

                This is the identification sent as a "password"
                when an anonymous user logs in.

        %b1,b2,b3,b4,p1,p2%

                This is part of the response from a request to
                enter passive mode.  b1-b4 specify the local IP
                address for the passive data socket.  p1-p2
                specify the local port for the passive data
                socket.  All values are in network byte order.

        %command_name%

                The name of a command sent by the FTP client.

        %command_text%

                The entire text of a command sent by the FTP
                client.

        %connection_timeout%

                The idle-user timeout value (in seconds).

        %current_directory_name%

                A user's current directory.

        %custom_exit_message%

                The custom single-line exit message to send
                when a client QUITs.

        %custom_greeting_line_x%

                The custom multi-line greeting message to send
                when a new client connects.

        %directory_name%

                A directory name.

        %file_name%

                A file name.

        %form%

                A transfer form type.  This will always be
                "Nonprint".

        %host_name%

                The name of the local FTP Server host.

        %long_directory_listing%

                A long format directory listing.

        %major_ftp_server_version%

                The major FTP Server version number.

        %minor_ftp_server_version%

                The minor FTP Server version number.

        %ftp_server_version%

                %major_ftp_server_version%.%minor_ftp_server_version%

        %major_windows_version%

                The major Windows NT version number.

        %minor_windows_version%

                The minor Windows NT version number.

        %mode_type%

                A transfer mode type.  This will always be
                "STREAM".

        %struct%

                A transfer structure type.  This will always be
                "File".

        %type%

                A transfer type.  This will be either "ASCII" or
                "BINARY".

        %users_host_name%

                The connected FTP client's host name.

        %users_ip_address%

                The connected FTP client's IP address (in dot
                notation).

        %user_name%

                The connected users's name.

        %win32_error_text%

                A string of text from WINERROR.MC that describes
                a specific Win32 error condition (such as "Access
                is denied.").


*************************************
***                               ***
***  POSITIVE PRELIMINARY REPLIES ***
***                               ***
*************************************

125 Data connection already open; transfer starting.

        Indicates that a passive mode transfer has been initiated.

150 Opening %mode_type% mode data connection for %file_name%.

        Indicates that the server is opening a new data
        connection for the transfer of %file_name%.  Whenever a
        directory listing is requested, this message is sent with
        %file_name% set to "file list".

************************************
***                              ***
***  POSITIVE COMPLETION REPLIES ***
***                              ***
************************************

200 NOOP command successful.

        The NOOP command completed.

200 PORT command successful.

        The NOOP command completed.

200 Type set to %type%.

        The transfer type was set.

200 STRU %struct% ok.

        The transfer structure type was set.

200 MODE %mode_type% ok.

        The transfer mode was set.

200 ALLO command successful.

        The ALLO command completed.

202 ACCT command not implemented.

        The ACCT command is superfluous at this site.

202 SMNT command not implemented.

        The SMNT command is superfluous at this site.

202 SITE command not implemented.

        The SITE command is superfluous at this site.

211-%host_name% Windows NT FTP Server status:
    Version %major_ftp_server_version%.%minor_ftp_server_version%
    Connected to %users_host_name or %users_ip_address%
    Logged in as %user_name%
    TYPE: %type%, FORM: %form%, STRUcture: %struct%, transfer MODE: %mode_type%
    {No data connection or Data connection established}
211 End of status.

        This multi-line reply is sent whenever a STAT command is
        received with no arguments.  It indicates the general
        status of the FTP server and the current connection.

213-status of %file_or_directory_name%
%long_directory_listing%
213 End of Status.

        This multi-line reply is sent whenever a STAT command is
        received with an argument.  This functions similarly to
        DIR {arg}, except that the directory listing is sent over
        the command socket; a new data transfer socket is not
        created for the listing.

214-The following commands are recognized (* =>'s unimplemented).
   USER    PASS    ACCT    CWD     XCWD    CDUP    XCUP    SMNT
   QUIT    REIN    PORT    PASV    TYPE    STRU    MODE    RETR
   STOR    STOU    APPE    ALLO    REST*   RNFR    RNTO    ABOR*
   DELE    RMD     XRMD    MKD     XMKD    PWD     XPWD    LIST
   NLST    SITE    SYST    STAT    HELP    NOOP
214 HELP command successful.

        This multi-line reply is sent whenever a HELP command is
        received with no arguments.  It lists all available
        FTP Server commands.

214 Syntax: USER <sp> username

        This reply is sent whenever a HELP USER command is
        received.

214 Syntax: PASS <sp> password

        This reply is sent whenever a HELP PASS command is
        received.

214 Syntax: ACCT (specify account)

        This reply is sent whenever a HELP ACCT command is
        received.

214 Syntax: CWD [ <sp> directory-name ]

        This reply is sent whenever a HELP CWD command is
        received.

214 Syntax: XCWD [ <sp> directory-name ]

        This reply is sent whenever a HELP XCWD command is
        received.

214 Syntax: CDUP change to parent directory

        This reply is sent whenever a HELP CDUP command is
        received.

214 Syntax: XCUP change to parent directory

        This reply is sent whenever a HELP XCUP command is
        received.

214 Syntax: SMNT <sp> pathname

        This reply is sent whenever a HELP SMNT command is
        received.

214 Syntax: QUIT (terminate service)

        This reply is sent whenever a HELP QUIT command is
        received.

214 Syntax: REIN (reinitialize server state)

        This reply is sent whenever a HELP REIN command is
        received.

214 Syntax: PORT <sp> b0,b1,b2,b3,b4,b5

        This reply is sent whenever a HELP PORT command is
        received.

214 Syntax: PASV (set server in passive mode)

        This reply is sent whenever a HELP PASV command is
        received.

214 Syntax: TYPE <sp> [ A | E | I | L ]

        This reply is sent whenever a HELP TYPE command is
        received.

214 Syntax: STRU (specify file structure)

        This reply is sent whenever a HELP STRU command is
        received.

214 Syntax: MODE (specify transfer mode)

        This reply is sent whenever a HELP MODE command is
        received.

214 Syntax: RETR <sp> file-name

        This reply is sent whenever a HELP RETR command is
        received.

214 Syntax: STOR <sp> file-name

        This reply is sent whenever a HELP STOR command is received.


214 Syntax: STOU (store unique file)

        This reply is sent whenever a HELP STOU command is
        received.

214 Syntax: APPE <sp> file-name

        This reply is sent whenever a HELP APPE command is
        received.

214 Syntax: ALLO (allocate storage vacuously)

        This reply is sent whenever a HELP ALLO command is
        received.

214 Syntax: REST <sp> marker

        This reply is sent whenever a HELP REST command is
        received.

214 Syntax: RNFR <sp> file-name

        This reply is sent whenever a HELP RNFR command is
        received.

214 Syntax: RNTO <sp> file-name

        This reply is sent whenever a HELP RNTO command is
        received.

214 Syntax: ABOR (abort operation)

        This reply is sent whenever a HELP ABOR command is
        received.

214 Syntax: DELE <sp> file-name

        This reply is sent whenever a HELP DELE command is
        received.

214 Syntax: RMD <sp> path-name

        This reply is sent whenever a HELP RMD command is
        received.

214 Syntax: XRMD <sp> path-name

        This reply is sent whenever a HELP XRMD command is
        received.

214 Syntax: MKD <sp> path-name

        This reply is sent whenever a HELP MKD command is
        received.

214 Syntax: XMKD <sp> path-name

        This reply is sent whenever a HELP XMKD command is
        received.

214 Syntax: PWD (return current directory)

        This reply is sent whenever a HELP PWD command is
        received.

214 Syntax: XPWD (return current directory)

        This reply is sent whenever a HELP XPWD command is
        received.

214 Syntax: LIST [ <sp> path-name ]

        This reply is sent whenever a HELP LIST command is
        received.

214 Syntax: NLST [ <sp> path-name ]

        This reply is sent whenever a HELP NLST command is
        received.

214 Syntax: SITE (site-specific commands)

        This reply is sent whenever a HELP SITE command is
        received.

214 Syntax: SYST (get operating system type)

        This reply is sent whenever a HELP SYST command is
        received.

214 Syntax: STAT (get server status)

        This reply is sent whenever a HELP STAT command is
        received.

214 Syntax: HELP [ <sp> <string> ]

        This reply is sent whenever a HELP HELP command is
        received.

214 Syntax: NOOP

        This reply is sent whenever a HELP NOOP command is
        received.

214-The following SITE commands are recognized (* =>'s unimplemented).
   DIRSTYLE    CKM         HELP
214 HELP command successful.

        This multi-line reply is sent whenever a SITE HELP command is
        received with no arguments.  It lists all available
        site-specific FTP Server commands.

214 Syntax: SITE DIRSTYLE (toggle directory format)

        This reply is sent whenever a SITE HELP DIRSTYLE command
        is received.

214 Syntax: SITE CKM (toggle directory comments)

        This reply is sent whenever a SITE HELP CKM command
        is received.

214 Syntax: SITE HELP [ <sp> <string>]

        This reply is sent whenever a SITE HELP HELP command
        is received.

215 Windows_NT version %major_windows_version%.%minor_windows_version%

        This is sent as a response to the SYST command.

220-%host_name% Windows NT FTP Server (%ftp_server_version%)
 %custom_greeting_line_1%
 %custom_greeting_line_2%
            .
            .
            .
 %custom_greeting_line_N%
220 Service ready for new user.

        This multi-line reply is sent whenever a new FTP client
        connects to the server.  The custom greeting, if any,
        comes from the registry.

220 Service ready for new user.

        This single-line reply is sent after a connection has
        been reinitialized via the REIN command.

221 Goodbye.

        This is the default exit message sent in response to a
        QUIT command.

221 %custom_exit_message%

        This is the custom exit message sent in response to a
        QUIT command.

226 Transfer complete.

        This is sent after a successful data transfer.

227 Entering passive mode %b1,b2,b3,b4,p1,p2%

        This is sent after a PASV command has successfully
        created a new data socket.

230 Anonymous user logged in as %anonymous_id% [(guest access)].

        This indicates that an anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

230 User %user_name% logged in [(guest access)].

        This indicates that a non-anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

250 CWD command successful.

        Indicates the CWD command has completed.

250 RNTO command successful.

        Indicates the RNTO command has completed.

250 DELE command successful.

        Indicates the DELE command has completed.

250 RMD command successful.

        Indicates the RMD command has completed.

250 MKD command successful.

        Indicates the MKD command has completed.

257 "%current_directory_name%" is current directory.

        This is sent in response to a PWD command.


**************************************
***                                ***
***  POSITIVE INTERMEDIATE REPLIES ***
***                                ***
**************************************

331 Anonymous access allowed, send identity (e-mail name) as password.

        This indicates that a USER command with a user-name of
        "Anonymous" has been received and accepted.  This prompts
        the user to enter an identity (e-mail name) instead of
        a password.

331 Password required for %user_name%.

        This indicates that a USER command with a user-name other
        than "Anonymous" has been received and accepted.  This
        prompts the user to enter a password.

350 File exists, ready for destination name.

        Indicates that a RNFR command has completed.


**********************************************
***                                        ***
***  TRANSIENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

421 Service not available, closing control connection.

        Indicates that the FTP Server is unable to accept new
        connections at this time.

421 Terminating connection.

        This is sent after a user has been forcibly disconnected.

421 Timeout (%connection_timeout% seconds): closing control connection.

        Indicates that the idle-user timeout period has expired
        for this connection.

425 Can't open data connection.

        Indicates that a new data connection could not be
        established to the FTP client.

426 Connection closed; transfer aborted.

        Indicates that an error occurred during a data transfer
        and the transfer was aborted.


**********************************************
***                                        ***
***  PERMANENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

500 %command_text%: comamnd not understood.

        Either an unknown command was received by the FTP Server
        or the command had invalid parameters.

501 Unknown command %command_name%.

        A HELP command was received with a parameter specifying
        an unknown command.

502 %command_text% command not implemented.

        The specified command is not implemented by this
        FTP Server.

503 Bad sequence of commands.

        A RNTO command was received before a RNFR command.  A
        RNFR command must always preceed a RNTO command.

503 Login with USER first.

        A PASS command was received before a corresponding USER
        command.

504 Form must be N or T.

        An invalid form type was received in the TYPE command.

504 Type E not implemented.

        The E type was specified in a TYPE command.

504 Byte size must be 8.

        A byte size other than 8 was specified in a TYPE command.

504 Unimplemented STRU type.

        A structure type other than File was received in a STRU
        command.

504 Unimplemented MODE type.

        A mode type other than Stream was received in a MODE
        command.

530 Please login with USER and PASS.

        An unacceptable command was received before the user
        logged in.

530 User %user_name% cannot log in.

        The specified user cannot log in at this time.

530 User %user_name% cannot log in, home directory inaccessible.

        The specified user cannot log in because their home
        directory is inaccessible.

530 User %user_name% cannot log in, license quota exceeded.

        The specified user cannot log in due to license quota
        restrictions.

530 User %user_name% cannot log in, guest access not allowed.

        The specified user cannot log in because they provided a
        "guest" account, and guest access has been disabled.

550 %directory_name%: No such file or directory.

        The specified directory cannot be found.

550 %directory_name%: %win32_error_text%

        The specified directory cannot be accessed.

550 %file_name%: No such file or directory.

        The specified file cannot be found.

550 %file_name%: %win32_error_text%

        The specified file cannot be accessed.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\server51\registry.txt ===
This file details the registry structure & specific values used by the
FTP Server service.


All FTP Server parameters "live" under the following key:

    HKEY_LOCAL_MACHINE
        System
            CurrentControlSet
                Services
                    FtpSvc
                        Parameters

The following values may exist under the Parameters key:

    Name:       AllowAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then anonymous logons are allowed.
                Otherwise (value IS zero) anonymous logons are not allowed.
    Default:    1 (allow anonymous logons)

    Name:       AllowGuestAccess
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then guest-access logons are
                allowed.  Otherwise (value IS zero) guest-access logons
                are not allowed.  (Note that guest-access has nothing to
                do with the "Guest" account; guest-access is granted if
                the local machine's user rights policy states that
                "Everyone" may access the machine from the network.  Any
                user that tries to logon with an unknown account will be
                granted guest-access.)
    Default:    1 (allow guest-access)

    Name:       AnnotateDirectories
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then everytime a user changes
                directories (sends the server a CWD command) an attempt is
                made to open a file called "~FTPSVC~.CKM" in the new
                directory.  If this file is found, its contents are sent
                to the user as part of the successful reply to the CWD
                command.  This may be used to attach "annotations" to
                specific directories.

                This value is used as a default for new users.  Users can
                toggle their own personal "annotate directories" flag with
                the site-specific CKM command (SITE CKM).
    Default:    0 (don't annotate directories)

    Name:       AnonymousOnly
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then only anonymous logons are
                allowed.  Otherwise (value IS zero) then non-anonymous
                logons are allowed as well.
    Default:    0 (non-anonymous logons allowed).

    Name:       AnonymousUserName
    Type:       REG_SZ
    Meaning:    Anonymous logon alias.  When a user attempts an anonymous
                logon, the username specified ("anonymous") is mapped to
                this registry value for the purposes off authentication
                and impersonation.  The password for this account is stored
                in an LSA secret object named "FTPD_ANONYMOUS_DATA".
    Default:    "Guest"

    Name:       ConnectionTimeout
    Type:       REG_DWORD
    Meaning:    The time (in seconds) to allow clients to remain idle before
                forcibly disconnecting them.  This prevents idle clients
                from consuming server resources indefinitely.

                This value may be set to zero if timeouts are not to be
                enforced.  If set to zero, idle clients *can* remain connected
                indefinitely.
    Default:    600 (10 minutes)

    Name:       DebugFlags
    Type:       REG_DWORD
    Meaning:    This value is used only by the debugging (checked) builds of
                the FTP Server.  It controls the output of various debugging
                information.  This value is unused by retail builds.
    Default:    0 (no debug output)

    Name:       DefaultLogonDomain
    Type:       REG_SZ
    Meaning:    The domain name to use when validating user logon requests
                if the user did not specify a domain.  If this value does
                not exist in the registry, then the FTP Server will use the
                local machine's primary logon domain instead.
    Default:    NULL (use the local machine's primary logon domain)

    Name:       DisableExtendedCharFilenames
    Type:       REG_DWORD
    Meaning:    RFC 0959 says only 7bi ASCII characters can be used to specify
                file names in FTP commands. DeFacto, 8bit chars are being used
                to specify extended char names and DBCS encoding. If this value
                does not exists, or if it exists but set to 0, extended chars
                are being accepted. If the value is 1, extended char file names
                are rejected.
    Default:    Not created. (extended chars enabled)

    Name:       ExitMessage
    Type:       REG_SZ
    Meaning:    This is the signoff message sent to a client upon receipt
                of a QUIT command.
    Default:    "Goodbye."

    Name:       GreetingMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients after their account has been validated.  In accordance
                with "de facto" Internet behaviour, if a client logs on as
                anonymous and specifies an identity starting with '-' (minus),
                then this greeting message is NOT sent.
    Default:    NULL (no special greeting)

    Name:       BannerMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients when they connect, right after the service name.
    Default:    NULL (no special greeting)

    Name:       HomeDirectory
    Type:       REG_EXPAND_SZ
    Meaning:    This is the initial "home" directory for new clients.  After
                a new client is validated, an attempt is made to CHDIR to
                this directory.  If this directory is inaccessible, the client
                is refused FTP services.  If the CHDIR is successful, then
                an attempt is made to CHDIR to a directory with the same name
                as the client's username.  If this fails, an attempt is made
                to CHDIR to a directory called "Default".  If this fails,
                the current directory is left at "home".

                If a user finds that the home directory is inaccessible,
                then an event is written to the event log indiciating such.
    Default:    "C:\"

    Name:       ListenBacklog
    Type:       REG_DWORD
    Meaning:    This is the "backlog" parameter passed into the listen()
                API.  This sets the maximum number of unaccepted connections
                that can be queued against the socket that listens on the
                main FTP port.
    Default:    5

    Name:       LogAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful anonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful anonymous logons are not logged.
    Default:    0 (don't log successful anonymous logons)

    Name:       LogFileAccess
    Type:       REG_DWORD
    Meaning:    This value controls the logging of file accesses.  This value
                can be one of the following:

                        0 = Don't log file accesses
                        1 = Log file accesses to FTPSVC.LOG
                        2 = Log file accesses to FTyymmdd.LOG, where yy
                                is the year, mm is the month, and dd is
                                the day.  A new log file will be opened
                                every day as necessary.
    Default:    0 (don't log file accesses)

    Name:       LogFileDirectory
    Type:       REG_SZ
    Meaning:    This value specifies the target directory for log files.
                This value is only used if LogFileAccess is !0.
    Default:    %SystemRoot%\System32

    Name:       LogNonAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful nonanonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful nonanonymous logons are not logged.
    Default:    0 (don't log successful nonanonymous logons)

    Name:       LowercaseFiles
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all file names returned by
                LIST and NLST commands for non-case-preserving filesystems
                will be mapped to lowercase.  If this value is zero, then
                all file names will be unaltered.
    Default:    0 (don't map filenames to lowercase)

    Name:       MaxClientsMessage
    Type:       REG_SZ
    Meaning:    This message (if it exists) is sent to a client if the maximum
                number of clients has been reached/exceeded.  This indicates
                that the server is currently servicing the maximum number of
                simultaneous clients and is refusing addtional clients.
    Default:    "Maximum clients reached, service unavailable."

    Name:       MaxConnections
    Type:       REG_DWORD
    Meaning:    This is the maximum number of simultaneous clients the server
                will service.

                This value may be set to zero if there is to be no limit on
                simultaneous clients.
    Default:    20

    Name:       MsdosDirOutput
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then the output of the LIST
                command (usually sent as a result of a DIR from the client)
                will look like the output of the MS-DOS DIR command.
                Otherwise (value IS zero) then the output of the LIST command
                will look like the output of the UNIX LS command.

                This value also controls "slash flipping" in the path
                sent by the PWD command.  If this value is non-zero, the path
                will contain backward "\" slashes.  If this value IS zero, the
                path will contain forward "/" slashes.
    Default:    1 (directory listings like MS-DOS)

    Name:       ReadAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "readability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only read from a specific volume if the corresponding
                bit is set.
    Default:    0 (all read access denied)

    Name:       WriteAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "writability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only write to a specific volume if the corresponding
                bit is set.
    Default:    0 (all write access denied)


There is an additional (optional) key that may exist under the Parameters
key.  After a user's account/password has been validated and the server is
impersonating that user, an attempt is made to open a key named "AccessCheck".
If this key exists, and the user cannot open it, then the user is denied
access to the FTP Server.  If this key exists, and the user can only open it
for read access, then the user is given read-only access to the FTP Server.
This way, an administrator can create this "AccessCheck" key and attach
specific ACLs to the key. These ACLs will then control access to the FTP
Server.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\ftp\test\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        25 July, 1995

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory internet\svcs\ftp\stress2
     and details related to  FTP stress clients  


File            Description

README.txt      This file.
ftps.cxx        master FTP stress client program (uses wininet.dll)


Implementation Details

< To be filled in when time permits. See individual files for comments section >

Contents:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\gopher\readme.txt ===
README.txt

Author:		Murali R. Krishnan	(MuraliK)
Created:	Nov 14, 1994

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 	This file describes the files in the directory 
    ( *\tcpsvcs\gopher ) 
         and details related to implementation of archie client DLL.


	File						Description

README.txt      This file.

dirs            directory list for NT "build"
gdadmin.doc     Gopher server Admin Spec ( MuraliK)
gdadmin.h       Header file common to both gopher server and admin UI.
gdspace.h       Header file common to both gopher server and gopher space admin
                 DLL 
gdname.h        used for naming the RPC connection
gd.idl          gopher server admin RPC APIs' idl description
gdcli.acf       gopher RPC API client ACF file
gdsrv.acf       gopher RPC API server ACF file
imports.h       auxiliarly file to include the headers with type definitions
                    without expansion by cpp during MIDL_PASS
imports.idl     auxiliary idl file for including imports.h
makefil0        makefile with commands for constructing RPC stubs
slm.ini         slm file

Directories                     Description

client          Client DLL for Gopher server admin APIs
inc             Gopher server's private include files
server          the gopher server implementation ( code)
perfmon         performance monitor interface code
gspace          Gopher space admin DLL
stress          batch files and a simple command line client for Stressing
                    gopher server


Deliverables:
    gdspace.dll     DLL with Gopher Space Admin API 
    gdapi.dll       Gopher Service Admin API DLL
    gdctrs.dll      Gopher Service - Performance Monitor interface DLL
    gopherd.dll     Gopher Service DLL    
    perfmon\gdictrs.bat     installation script for performance counters
    perfmon\gdrctrs.bat      removal script for performance counters
    perfmon\gdctrs.h        counters description
    perfmon\gdctrs.reg      counters registry script
    perfmon\gdctrs.ini      counter registry ini script
    server\gopherd.ini      .ini file with required default values for server
    server\gdtoreg.bat      batch file for installing registry entries
    client\test\obj\*\gdadmin.exe   Command line gopher server admin utility
    gspace\obj\*\gdsset.exe command line gopher space admin utility

Additional Deliverables required:
    tcpsvcs.exe     modified one to run Gopher service.
    tcpsvcs.dll     common dll used by all internet related services.


Implementation Details

< To be filled in when time permits. See individual files for comments section >

Contents:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\gopher\mib\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        23 Feb, 1995

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory nt\private\net\snmp\gophmib
     and details related to  SNMP Extension Agent for Gopher Service


File            Description
----------------------------------------------------------------------
README.txt      This file.
makefile        NT build files
sources         NT build files

main.c          Defines the standard entry points for SNMP Extensions
                  and the Gopher MIB object.
mib.h           Defines types for generic resolve code for passive GET
                and GET_NEXT verbs in MIB query. Also defined are a
                few macros.
mib.c           Functions required for generic MIB resolution.

dbgutil.h       Header file containing declarations for debugging purposes
                during development. It contains constants and macros.
pudebug.h       Header file detailing debugging structures and
                functions used by dbgutil.h
pudebug.c       Implements functions declared in pudebug.h

 During a -DDBG ( debug)  build, we need pudebug.c to be included.
 For Non-Debug builds, we dont need the pudebug.c and dbgutil.h
suitably modifies the declarations and macros for smoother compilation.



Implementation Details
-----------------------

Contents:

  1. Comments on SNMP Extension APIs.
  2. Structure of MIB For Internet Services
  3. Components For SNMP MIBs and Installation
  4. How To Test the SNMP MIBs?
  5. Why separate mib.c and mib.h  ( Implementation perspective).



1. Comments on SNMP Extension APIs:
    In NT the SNMP Extension DLL should provide three entry points:

        SnmpExtensionInit()
        SnmpExtensionTrap()
        SnmpExtensionQuery()

    As to be expected :(, there is no SnmpExtensionCleanup() API, which means
that there can be no cleanup supplied. And hence for sure we better refrain
from using any dynamic memory, for cleanup is not possible. Maintaining state
is only using static variables.

   Also as to be expected, there is no context information that gets circulated
in the calls. Hence the state has to be maintained at the DLL level. There is
no way of identifying the context of the call. Well, let us do it the Great
OLD Way. Throw in global variables and maintain state! Also note that
the DllInit function is not called, since the dll is loaded directly
into memory. This means that we can't also stick init and cleanup
code in the DllInit function.


2. Structure of MIB for Internet Services.

iso(1)
  org(3)
    dod(6)
      internet(1)
        private(4)
          enterprises(1)
            microsoft(311)
              software(1)
                InternetServer(7)
                  InetSrvCommon(1)
                    InetServStatistics(1)
                  FtpServer(2)
                    FtpStatistics(1)
                  HttpServer(3)
                    HttpStatistics(1)
                  GopherServer(4)
                    GopherStatistics(1)


 For details about the counters under GopherServer, Please refer to
        ..\mibs\gophmib


3. Components For SNMP MIBs

  a) A MIB File used to map the OIDs ( Object Identifiers) to human
readable strings. NT's mibs live in the directory
\nt\private\net\snmp\mibs. You can find gopherd.mib there.

  b) A DLL that actually implements the MIBs. This DLL is responsible
for mapping the request ( Eg: GET <mib oid>) into a real value ( the
value of the object referenced by oid). This is alternatively called
as the SNMP Extension agent, called by the Extendible agents. This DLL
provides the SNMP Extension API entry points for calling. ( See
section 1 for APIs defined). This directory contains the files for the
gdmib.dll used as SNMP Extension agent ( Dir:
\nt\private\net\snmp\gophmib\). This dll should copied to the
directory specified in the registry entry specified below.

 c) Registry Entries.
        SNMP.EXE uses the registry entries to find the MIB DLLs. To
enable SNMP to find the new mib, create a new registry entry value under:
HKLM\System\CurrentControlSet\Services\SNMP\Parameters\ExtensionAgents
on the local machine. The name of the registry entry value is
irrelevant. The value of the entry created should point to another
registry entry containing all the details for the MIB being installed.

 For Example: For the gdmib.dll, the entry created in above registry
value may be:
Server uses
 SOFTWARE\Microsoft\InternetServer\GopherServerMIBAgent\CurrentVersion.
 Under this entry create a REG_EXPAND_SZ value called "PathName" that
contains the full path to the GDMIB.DLL.

** Note that "Pathname" is treated as case sensitive!! **


4. How To Test the SNMP MIBs?

  Build the SNMP Extension Agent DLL.
  Make entries in the Registry pointing to the location of the DLL.
  Start SNMP service.
  Use SNMPUTIL to query values from the mib.
   Syntax:
        snmputil  get localhost public <oid>

     Eg:
        <oid> ::= ".iso.org.dod.internet.private.enterprises.\
                    microsoft.software.InternetServer.GopherServer.\
                    GopherStatistics.{variable_name}.0"

        or
        <oid> ::= ".1.3.6.1.4.1.311.1.7.4.1.{number}.0".

 Be sure to remember the trailing zero on either form. It's required.



5. Why separate mib.c and mib.h  ( Implementation perspective).

   The files mib.h and mib.c implement functions useful for resolving
MIB variable bindings for reading counter values from a standard
structure. The function support PDU ( Protocol Data Unit) Actions for
GET and GETNEXT. All other operations are unsupported. now.

  Initial motivation for rewriting the code is from two facts:

        1) Avoid usage of global variables in the mib.c module
        ( so that some one else who need to implement similar
          functionality can use the same code.)
        2) Eliminate the need and use of goto's. The code that existed
          in ..\ftpmib\mib.c as of 2/24/1995 had a few goto's and long
        winded code. This version hopefully addresses to remove some
        of these and provide a implementation using hungarian naming
        amongst other modifications.




=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\iisrtl\readme.txt ===
IISRTL - IIS Run Time Library
George V. Reilly,  <GeorgeRe@microsoft.com>
6/9/1998
Last Updated: 6/8/1999 by JasAndre

This document describes the public interfaces to the code bundled in
iisrtl.dll.  The public header files can be found in iis\inc.  The code can
be found in iis\svcs\iisrtl.


acache.hxx - ALLOC_CACHE_HANDLER - Allocation Cache
===================================================

class ALLOC_CACHE_HANDLER is a memory allocator.  An ACH maintains a
free list of blocks of memory, each N bytes in size.  Typically, you use
this by overriding `operator new' and `operator delete' for your heavily
used C++ class.  You need to maintain a static member variable that
points to your class's instance of an ACH.  Examples of how to do this
abound; look at lkrhash.{h,cpp} for one such.  ACache can also be used
for C-style structs or any fixed-size block of memory.

Pros: ACache is considerably faster than the global `operator new'.  (The
difference isn't as marked in NT5, now that the NT heaps have been
improved, but it's still a win.)  In addition, you can use iisprobe to dump
statistics on your class's use of ACache, and inetdbg has built-in support
for ACache (!inetdbg.acache).  ACache also offers additional debugging
support by checking for double deletions and filling free'd blocks with a
unique, identifiable pattern.

Cons: May waste memory by keeping large lists that might be better
returned to the system.  ACache periodically prunes all free lists in
the background, so this isn't too much of a problem.


madel.hxx   - MEMORY_ALLOC_DELETE    - Memory Allocator
manodel.hxx - MEMORY_ALLOC_NO_DELETE - Memory Allocator
=======================================================

Alternative memory allocators that are supposedly faster than ACache.
They work by allocating large blocks of memory and then suballocating
from those blocks.  (ACache grabs an exact sized block from the system
if its free list is empty.)  Again, see lkrhash.{h,cpp} for an example of
how to use these allocators.

Madel will return memory to the system if its free list grows above a
certain threshold.  Manodel never returns memory to the system, which
makes it faster but more wasteful.

Pros: probably faster than ACache.

Cons: ACache has much better debugging support.  Don't really need three
allocators.  Should build one allocator class that combines the best
features of all three allocators.


pudebug.h - Debugging utilities
===============================

Declares a number of useful debugging utilities, many of them encapsulated
by macros which are available in both the free and checked builds.

There are a number of macros which need to be used:
DECLARE_DEBUG_PRINTS_OBJECT - declares the variables needed for tracing
CREATE_INITIALIZE_DEBUG - called once per process this starts tracing
DELETE_INITIALIZE_DEBUG - called once per process this stops tracing
CREATE_DEBUG_PRINT_OBJECT - called once per module (ie DLL) this informs the
                            tracing mechanism about the module
DELETE_DEBUG_PRINT_OBJECT - called once per module this tells the mechanism
                            that the module is no longer tracing
VALID_DEBUG_PRINT_OBJECT - optional call to see if CREATE_DEBUG_PRINT_OBJECT
                           was successful.
See exe\main.cpp for an example of how to use them for a new process
See svcs\iisrtl\dllmain.cpp for an example of how to use them for a new module

The DEFAULT_TRACE_FLAGS macros control the debug settings, a DWORD variable 
per module that contains a collection of bit flags.  These are typically used 
to conditionalize debug output with the IF_DEBUG macro, e.g.,
    IF_DEBUG(SCHED) { /* ... */ }
    IF_DEBUG(ACACHE) { DBGPRINTF((DBG_CONTEXT, "ACache blah blah\n")); }
IF_DEBUG(arg), which is available in both the FRE and CHK builds, is defined as
    if (DEBUG_## arg & GET_DEBUG_FLAGS())
A set of debug flags should be defined in a local header file,
traditionally called "dbgutil.h", e.g.,
    #define DEBUG_SCHED 0x01000000
The debug flags are automatically loaded from the registry at start up time. If
none are found then the settings in the macro DEFAULT_TRACE_FLAGS are used. You 
can modify the settings are debug time using the trace extension, 
!inetdbg.trace

Other useful macros include DBG_ASSERT and DBG_REQUIRE (simply evaluates its 
argument in a free build, but DBG_ASSERTs in a checked build).  
See <pudebug.h> for the full list.

For a full explanation see the specs available at,
http://iis/kevlar/webfarm/specs/Kevlar%20Tracing.htm
http://iis/kevlar/webfarm/specs/Kevlar%20Supportability.htm

The PLATFORM_TYPE code provides useful helpers for code that needs to know
what platform it's executing on at runtime (NT Server, Win95, etc).

The INITIALIZE_CRITICAL_SECTION macro should be used in place of
::InitializeCriticalSection, as it sets the spincount to a non-zero value
(IIS_DEFAULT_CS_SPIN_COUNT) in a platform-independent manner.  (Critical
section spincounts were introduced in NT 4.0 sp3).  For multiprocessor
scalability, it's very important that busy critical sections have a
non-zero spincount.  If you want to set the spincount by hand, use the
SET_CRITICAL_SECTION_SPIN_COUNT macro.

Use the IIS_CREATE_EVENT, IIS_CREATE_SEMAPHORE, and IIS_CREATE_MUTEX macros
to create events, semaphores, and mutexes.  In debug builds, each of these
objects will be given a debugger-friendly unique name.  In free builds,
they are nameless.


irtldbg.h - More debugging utilities
====================================

They don't do a lot that pudebug.h doesn't do.  They mainly exist so that
LKRhash can be redistributed without needing to provide large chunks of IIS
support code.  Many of the macros will look familiar to MFC users.

Useful macros not included in pudebug.h include ASSERT_VALID,
ASSERT[_NULL_OR]_POINTER, and ASSERT[_NULL_OR]_STRING.


buffer.hxx - BUFFER - memory buffer
buffer.hxx - BUFFER_CHAIN - chain of BUFFERs
============================================

A BUFFER object caches a block of memory.  If the block is no more than
INLINED_BUFFER_LEN (16) bytes long, it's held inside the buffer object
itself; otherwise it's dynamically allocated.  You can either
request an initial size upon construction or pass in a pointer to an
already allocated block of memory.  The size of the cached block can be
adjusted by the Resize method, which takes an optional cbSlop
parameter.  QueryPtr returns a pointer to the storage; QuerySize returns
the current size.  BUFFER is used in the implementations of the STR,
MULTISZ, STRAU, and MLSZAU classes, qv.

A BUFFER_CHAIN is a linked list of BUFFERs.

Pros: very useful when you need a dynamically sized memory buffer.
If the size of the data is small enough, it'll be cached inline, which
makes it very time- and space-efficient.  (The 80-20 rule of memory
allocation: if 80% of your requests can be satisfied by a modest,
fixed-size buffer, inline it; else dynamically allocate.)

Cons: INLINED_BUFFER_LEN is hardwired into BUFFER.  If most of your
buffers need to be larger than this, you're just buying yourself
additional overhead (though you still save because you don't need to
manage allocation of the memory block yourself).


string.hxx - STR - lightweight string class
===========================================

The STR class manages ANSI strings.  It derives from the BUFFER class.
It provides several additional methods (see header for complete list):
* SetLen	safely sets length
* IsEmpty	zero-length string?
* Append	(const char*); (const char*, int len); (const STR&)
* Reset		empties string but retains buffer
* Copy		same as Reset followed by Append (same variations)
* LoadString	reads string from a string resource table
* FormatString	reads string from a .mc resource table; inserts params
* Escape	) Insert or remove any odd ranged Latin-1
* EscapeSpaces	) characters with the escaped hexadecimal
* Unescape	) equivalents (%xx)
* QueryCB	number of bytes in string
* QueryCCH	number of characters in string
* CopyToBuffer	copies stored string to buffer.  Ansi and Unicode variations
* QueryStr	returns the string buffer
* Append	(char); (char, char) append 1 or 2 chars (unsafe)
* AppendCRLF	Append "\r\n" (unsafe; assumes buffer large enough)

The STACK_STR(name, size) macro can be used to declare a string on the
stack.


stringau.hxx - STRAU - lightweight Ansi/Unicode string class
============================================================

A class that looks a lot like STR but transparently converts between
Ansi and Unicode.  All members can take or return a string in either
ANSI or Unicode. For members that take a parameter of bUnicode, the
actual string type must match the flag, even though it gets passed in as
the declared type.

Strings are sync'd on an as needed basis. If a string is set in ANSI,
then a UNICODE version will only be created if a get for UNICODE is
done, or if a UNICODE string is appended.

All conversions are done using Latin-1. This is because the intended use
of this class is for converting HTML pages, which are defined to be
Latin-1.


multisz.hxx - MULTISZ - lightweight multi-string class
======================================================

Another class that looks a lot like STR but contains a set of strings.
The strings are stored consecutively in the buffer, separated by '\0'.


mlszau.hxx - MLSZAU - lightweight Ansi/Unicode multi-string class
=================================================================

Stores and converts multisz's between unicode and ANSI. It does not allow
much manipulation of them.


lkrhash.h - CTypedHashTable - LKR Hash Tables
=============================================

LKRhash is a fast, growable, multiprocessor-friendly hashtable.  The
hashtable will automatically grow (shrink) as you add (delete) elements,
keeping search times short.  It is thread-safe and has been designed to
scale extremely well on MP systems.  It achieves this by carefully
partitioning locks and holding them for a very short time to minimize lock
contention and hence bottlenecks.

The templatized wrapper class, CTypedHashTable, provides an easy-to-use
front end for the underlying implementation.  Several detailed examples
exist in lkrhash.h and svcs\iisrtl\hashtest.  If you need an unordered
collection of data that needs to be searched quickly, you should strongly
consider LKRhash.


locks.h - Miscellaneous locks
=============================

In addition to providing an implementation of a user-mode spinlock for
LKRhash, a number of other locks are provided (critical sections, NT
resources, and other read/write locks).  All provide the same interface, so
they can be used interchangeably.


irtlmisc.h - IISRTL Miscellanea
===============================

Some macros used in IISRTL and some random declarations.  The most useful
functions are InitializeIISRTL and TerminateIISRTL, which should be used by
clients who want to make use of the scheduler functionality.  NumProcessors
and stristr may also be of interest.


tracelog.h - TRACE_LOG
===========================

A trace log is a fast, in-memory, thread safe activity log useful for
debugging certain classes of problems. They are especially useful when
debugging reference count bugs.

Note that the creator of the log has the option of adding "extra" bytes to
the log header. This can be useful if the creator wants to create a set of
global logs, each on a linked list.


reftrace.h - RefTraceLog
=========================

Reftrace logs are built on top of trace logs.  Typically, you write a
reftrace entry whenever you modify a reference count.  In addition to the
value of the refcount and some custom context, the log entry includes a
stack bactrace (top nine functions), so you have a chance of figuring out
how the refcount was modified.  Enormously useful for tracking down
refcount leaks.  Use !inetdbg.ref, !inetdbg.rref, and !inetdbg.resetref to
manipulate the reftrace log.


strlog.hxx - CStringTraceLog
============================

String trace logs are useful for writing logs of free-form strings when
trying to track down race conditions.  DBG_PRINTF, which writes to the
debugger and/or a log file, is relatively slow and involves context swaps,
both of which can make reproducing race conditions much harder.  A string
trace log is synchronously written to main memory.  The Puts method is
little more than a strcpy; the Printf method is slower but much more
versatile.  Use !inetdbg.st, !inetdbg.rst, and !inetdbg.resetst to
manipulate the string trace log.


stktrace.h - IISCaptureStackBackTrace
=====================================

Used by reftrace and DBG_ASSERT to capture a stack backtrace.



datetime.hxx - Date and time manipulation classes
=================================================

A number of classes and helper functions for converting between various
time and date formats.  Particularly used in generating HTTP headers and
the IIS logs.


timer.h - Timer routines
========================

Wrap-proof timer routines (no worries about GetTickCount wrapping around to
zero).


issched.hxx - Scheduler
=======================

The scheduler is used to execute tasks (work items) in the background.
These work items can be one-shot or periodic.  Particularly useful for
cleanup or periodic scavenging.  Use !inetdbg.sched to debug.


eventlog.hxx - EVENT_LOG
=======================

A useful wrapper for the system/security/application event logs.


gip.h - Global Interface Pointer API support
============================================

COM interface pointers are apartment-relative.  The Global Interface Table
makes passing interface pointers across apartment boundaries much easier
than the traditional methods (CoMarshallInterfaceInStream...).  gip.h
further encapsulates the GIT.


giplip.h - global and local interface pointers
==============================================

An alternative to gip.h.


perfutil.h - Performance Monitor helpers
========================================

Some helper functions and macros for implementing PerfMon counters.


trie.h - Trie templates
=======================

A trie is a multiway search tree, useful for doing string
matches.  Read the comments in <trie.h>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\inetsrv\iis\svcs\iisrtl\code-rvw\lkhash.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft LKHash Code Review Title _PID_GUIDLKHash Code Review George V. Reilly Normal.dot Michael W. Thomas Microsoft Word 8.0LKHash Code Review Developer:  GeorgeRe Reviewers:  MCourage DmitryR JohnL MichTh Date: Mon 1/19/1998 LKHash.h    Copyright    (c)    1998    Microsoft Corporation    Module  Name :        lkhash.h    Abstract:        Declares hash tables    Author:        Paul Larson, palarson@microsoft.com, July 1997        George V. Reilly      (GeorgeRe)     06-Jan-1998    Environment:        Win32 - User Mode    Project:        Internet Information Server RunTime Library    Revision History: #ifndef __LKHASH_H__ #define __LKHASH_H__ //===================================================================== //  The class CLinearHashTable defined in this file provides dynamic hash //  tables, i.e. tables that grow and shrink dynamically with //  the number of records in the table. //  The basic method used is linear hashing, as explained in: //    P.-A. Larson, Dynamic Hash Tables, Comm. of the ACM, 31, 4 (1988) //  This version has the following characteristics: //  - It is thread-safe and uses spin locks for synchronization. //  - It was designed to support very high rates of concurrent //    operations (inserts/deletes/lookups).  It achieves this by //    (a) partitioning a CHashTable into a collection of CLinearHashTables //        to reduce contention on the global table lock. //    (b) minimizing the hold time on a table lock, preferring to lock //        down the a bucket chain instead. //  - The design is L1 cache-conscious.  See CNodeClump. //  - It is designed for sets varying in size from a few hundred //    elements to a several million elements - the space overhead is //    a bit high for really small sets. //  Main classes: //    CLinearHashTable:   thread-safe linear hash table //    CHashTable:         collection of CLinearHashTables //    CTypedHashTable:    typesafe wrapper for CHashTable //  Paul Larson, palarson@microsoft.com, July 1997 //   Original implementation. //  George V. Reilly, georgere@microsoft.com, December 1997 //   Massive cleanup and rewrite.  Added templates. //===================================================================== // 1) Linear Hashing // ------------------ // Linear hash tables grow and shrink dynamically with the number of // records in the table.  The growth or shrinkage is smooth: logically, // one bucket at a time but physically in larger increments // (64 buckets).  An insertion (deletion) may cause an expansion // (contraction) of the table.  This causes relocation of a small number // of records (at most one bucket worth).  All operations (insert, // delete, lookup) take constant expected time, regardless of the // current size or the growth of the table. // 2) LK extensions to Linear hash table // -------------------------------------- // Larson-Krishnan extensions to Linear hash tables for multiprocessor // scalability and improved cache performance. // Traditional implementations of linear hash tables use one global lock // to prevent interference between concurrent operations // (insert/delete/lookup) on the table.  The single lock easily becomes // the bottleneck in SMP scenarios when multiple threads are used. // Traditionally, a (hash) bucket is implemented as a chain of // single-item nodes.  Every operation results in chasing down a chain // looking for an item. However, pointer chasing is very slow on modern // systems because almost every jump results in a cache miss. L2 (or L3) // cache misses are very expensive in missed CPU cycles and the cost is // increasing (going to 100s of cycles in the future). // LK extensions offer //    1) Partitioning (by hashing) of records among multiple subtables. //       Each subtable has locks but there is no global lock.  Each //       subtable receives a much lower rate of operations, resulting in //       fewer conflicts. //    2) Improve cache locality by grouping keys and their hash values //       into contigous chunks that fit exactly into one (or a few) //       cache lines. // Specifically the implementation that exists here achieves this using // following techniques. // Class CHashTable is the top-level data structure that dynamically // creates m_cSubTables linear hash tables. The CLinearHashTables act as // the subtables to which items and accesses are fanned out. A good // hash function multiplexes requests uniformly to various subtables, // thus minimizing traffic to any single subtable. The implemenation // uses a home-grown version of bounded spinlocks, that is, a thread // does not spin on a lock indefinitely, instead yielding after a // predetermined number of loops. // Each CLinearHashTable consists of a CDirEntry pointing to segments each // holding SEGMSIZE CBuckets. Each CBucket in turn consists of a chain // of CNodeClumps.  Each CNodeClump contains a group of // NODES_PER_CLUMP hash values (aka hash keys or signatures) and // pointers to the associated data items.  Keeping the signatures // together increases the cache locality in scans for lookup. // Traditionally, people store a link-list element right inside the // object that is hashed and use this link-list for the chaining of data // blocks.  However, keeping just the pointers to the data object and // not chaining through them limits the need for bringing in the data // object to the cache.  We need to access the data object only if the // hash values match. This limits the cache-thrashing behaviour // exhibited by conventional implementations.  It has the additional // advantage that the objects themselves do not need to be modified // in order to be stuck into the hash table. //-------------------------------------------------------------------- // TODO // * Warn TomPop & KimSt about needing to add InetRTL to setup. // * Iterators: expose some way of walking the entire contents of a //   hash table.  Caveat: implies locking down the entire table while //   there's an active iterator. // * Debugging support for iisprobe and inetdbg? // * Use auto_ptrs. //-------------------------------------------------------------------- #include <acache.hxx> #include <irtlmisc.h> #include <locks.h> #ifndef __IRTLDBG_H__ # undef ASSERT # include <irtldbg.h> #endif #include <hashfn.h> #ifdef __LKHASH_NAMESPACE__ namespace LKHash { #endif // __LKHASH_NAMESPACE__ enum {     DFLT_LK_MAXLOAD=     4, // Upperbound on avg chain length     DFLT_LK_INITSIZE=   64, // Initial size of hash table.     DFLT_LK_NUM_SUBTBLS=16, // #subordinate hash tables. //-------------------------------------------------------------------- // forward declarations template <class _Lock> class DLLEXP CLinearHashTable; template <class _Lock> class DLLEXP CHashTable; template <class _Der, class _Rcd, class _Ky, class _Lk> class DLLEXP CTypedHashTable; //-------------------------------------------------------------------- // Possible return codes from public member functions of // CLinearHashTable, CHashTable, and CTypedHashTable enum LK_RETCODE {     LK_UNUSABLE = -2,       // severe errors < 0     LK_ALLOC_FAIL = -1,     LK_SUCCESS = 0,     LK_KEY_EXISTS = 1,     LK_NO_SUCH_KEY = 2,     LK_BAD_RECORD = 3,     LK_BAD_ITERATOR = 4,     LK_NO_MORE_ELEMENTS = 5, //-------------------------------------------------------------------- // Return codes from PFnRecordPred. enum LK_PREDICATE {     LKP_ABORT = 1,           // Stop walking the table immediately     LKP_NO_ACTION = 2,       // No action, just keep walking     LKP_PERFORM = 3,         // Perform action and continue walking     LKP_PERFORM_STOP = 4,    // Perform action, then stop //-------------------------------------------------------------------- // Return codes from PFnRecordAction. enum LK_ACTION {     LKA_ABORT = 1,          // Stop walking the table immediately     LKA_FAILED = 2,         // Action failed; continue walking the table     LKA_SUCCEEDED = 3,      // Action succeeded; continue walking the table //-------------------------------------------------------------------- // Parameter to Apply and ApplyIf. enum LK_LOCKTYPE {     LKL_READLOCK = 1,       // Lock the table for reading     LKL_WRITELOCK = 2,      // Lock the table for writing //-------------------------------------------------------------------- // Statistical information returned by GetStatistics //-------------------------------------------------------------------- class DLLEXP CHashTableStats public:     int      RecordCount;           // number of records in the table     int      TableSize;             // table size in number of slots     int      DirectorySize;         // number of entries in directory     int      LongestChain;          // longest hash chain in the table     int      EmptySlots;            // number of unused hash slots     double   SplitFactor;           // fraction of buckets split     double   AvgSearchLength;       // average length of a successful search     double   ExpSearchLength;       // theoretically expected length     double   AvgUSearchLength;      // average length of an unsuccessful search     double   ExpUSearchLength;      // theoretically expected length     CHashTableStats()         : RecordCount(0),           TableSize(0),           DirectorySize(0),           LongestChain(0),           EmptySlots(0),           SplitFactor(0.0),           AvgSearchLength(0.0),           ExpSearchLength(0.0),           AvgUSearchLength(0.0),           ExpUSearchLength(0.0)     {} //-------------------------------------------------------------------- // CLinearHashTable deals with void* records.  These typedefs // provide prototypes for functions that manipulate instances of // those records.  CTypedHashTable and CStringTestHashTable (below) show a // way to encapsulate these in typesafe wrappers. //-------------------------------------------------------------------- // Given a record, return its key.  Assumes that the key is embedded in // the record, or at least somehow derivable from the record.  For // completely unrelated keys & values, a wrapper class should use // something like STL's pair<key, value> template to aggregate them // into a record. typedef const void* (*PFnExtractKey)  (const void* pvRecord); // Given a key, return its hash signature.  The hashing functions in // hashfn.h (or something that builds upon them) are suggested. typedef DWORD       (*PFnCalcKeyHash) (const void* pvKey); // Compare two keys for equality; e.g., _stricmp, memcmp, operator== typedef bool        (*PFnEqualKeys)   (const void* pvKey1, const void* pvKey2); // Increment the reference count of a record before returning it from // FindKey.  It's necessary to do it in FindKey itself while the bucket // is still locked, rather than one of the wrappers, to avoid race // conditions.  Similarly, the reference count is incremented in // InsertRecord and decremented in DeleteKey.  Finally, if an old record // is overwritten in InsertRecord, its reference count is decremented. // It's up to you to decrement the reference count when you're finished // with it after retrieving it via FindKey and to determine the // semantics of what this means.  The hashtable itself has no notion of // reference counts; this is merely to help with the lifetime management // of the record objects. typedef void        (*PFnAddRefRecord)(const void* pvRecord, int nIncr); // ApplyIf() and DeleteIf(): Does the record match the predicate? typedef LK_PREDICATE (*PFnRecordPred) (const void* pvRecord, void* pvState); // Apply() et al: Perform action on record. typedef LK_ACTION   (*PFnRecordAction)(const void* pvRecord, void* pvState); //-------------------------------------------------------------------- // Custom memory allocators //-------------------------------------------------------------------- #define ACACHE 1 // #define MANODEL 1 // #define MADEL 1 #if defined(ACACHE)   typedef ALLOC_CACHE_HANDLER  CAllocator; # define ALLOCATOR_NEW(C, N)                                    \     const ALLOC_CACHE_CONFIGURATION acc = { 1, N, sizeof(C) };  \     C::sm_palloc = new ALLOC_CACHE_HANDLER("IISRTL:" #C, &acc); #elif defined(MANODEL) # include <manodel.hxx>   typedef MEMORY_ALLOC_NO_DELETE  CAllocator; # define ALLOCATOR_NEW(C, N)                                    \     C::sm_palloc = new MEMORY_ALLOC_NO_DELETE(sizeof(C), 8, N); #elif defined(MADEL) # include <madel.hxx>   typedef MEMORY_ALLOC_DELETE  CAllocator; # define ALLOCATOR_NEW(C, N)                                    \     C::sm_palloc = new MEMORY_ALLOC_DELETE(sizeof(C), 8, N); #else // no custom allocator # undef ALLOCATOR_NEW #endif // no custom allocator // Used to initialize and destroy custom allocators HRESULT HashTableInit(); void    HashTableUninit(); #ifdef ALLOCATOR_NEW // placed inline in the declaration of class C # define ALLOCATOR_DEFINITIONS(C)                               \     protected:                                                  \         static CAllocator* sm_palloc;                           \         friend HRESULT HashTableInit();                         \         friend void    HashTableUninit();                       \     public:                                                     \         static void*  operator new(size_t s)                    \         {                                                       \           IRTLASSERT(s == sizeof(C));                           \           IRTLASSERT(sm_palloc != NULL);                        \           return sm_palloc->Alloc();                            \         }                                                       \         static void   operator delete(void* pv)                 \         {                                                       \           IRTLASSERT(pv != NULL);                               \           if (sm_palloc != NULL)                                \               sm_palloc->Free(pv);                              \         } // used in HashTableInit() # define ALLOCATOR_INIT(C, N, hr)                               \     {                                                           \         if (SUCCEEDED(hr))                                      \         {                                                       \             IRTLASSERT(C::sm_palloc == NULL);                   \             ALLOCATOR_NEW(C, N);                                \             hr = C::sm_palloc != NULL ? S_OK : E_OUTOFMEMORY;   \         }                                                       \     } // used in HashTableUninit() # define ALLOCATOR_UNINIT(C)                                    \     {                                                           \         if (C::sm_palloc != NULL)                               \         {                                                       \             delete C::sm_palloc;                                \             C::sm_palloc = NULL;                                \         }                                                       \     } #else // !ALLOCATOR_NEW # define ALLOCATOR_DEFINITIONS(C) # define ALLOCATOR_INIT(C, N, hr) # define ALLOCATOR_UNINIT(C) #endif // !ALLOCATOR_NEW //-------------------------------------------------------------------- // CLinearHashTable // A thread-safe linear hash table.  For single-threaded tables, where // no locking is needed, use CFakeLock. //-------------------------------------------------------------------- template <class _Lock=CSpinLock> class DLLEXP CLinearHashTable private:     friend class CHashTable<_Lock>;     class CIterator;     friend class CLinearHashTable<_Lock>::CIterator; #ifdef ALLOCATOR_NEW     friend HRESULT HashTableInit();     friend void    HashTableUninit(); #endif // ALLOCATOR_NEW #ifdef INSTRUMENTATION     // TODO #endif // INSTRUMENTATION     // Class for nodes on a bucket chain.  Instead of a node containing     // one (signature, record-pointer, next-tuple-pointer) tuple, it     // contains _N_ such tuples.  (N-1 next-tuple-pointers are omitted.)     // This improves locality of reference greatly; i.e., it's L1     // cache-friendly.  It also reduces memory fragmentation and memory     // allocator overhead.  It does complicate the chain traversal code     // slightly, admittedly.     //     // BUGBUG: this theory is beautiful.  In practice, however, CNodeClumps     // are *not* perfectly aligned on 32-byte boundaries by the memory     // allocator.     //     // TODO: write a per-class sub-block allocator that will return     // suitably aligned objects. Use Madel for this allocator. I assert that it can have better performance than ACACHE anyway, and it has this feature.     class CNodeClump     {     public:         // Record slots per chunk - set so a chunk matches (one or         // two) cache lines.  3 ==> 32 bytes, 7 ==> 64 bytes         // Note: the default max load factor is 4.0, which implies that         // there will seldom be more than one node clump in a chain.         enum {             NODES_PER_CLUMP = 7,         };         DWORD  m_dwKeySigs[NODES_PER_CLUMP]; // hash values computed from  Considering the Sundown plans, may be best to avoid fixed length data types in favor platform transmutable typeskeys         CNodeClump* m_pncNext;               // next node clump on the chain         const void* m_pvNode[NODES_PER_CLUMP];// pointers to records         CNodeClump()         { Clear(); }         void Clear()         { memset(this, 0, sizeof(*this));  } #ifdef _DEBUG         ~CNodeClump()         {             IRTLASSERT(m_pncNext == NULL);  // no dangling pointers             for (DWORD i = 0;  i < NODES_PER_CLUMP;  ++i)                 IRTLASSERT(m_dwKeySigs[i] == 0  &&  m_pvNode[i] == NULL);         } #endif // _DEBUG         ALLOCATOR_DEFINITIONS(CNodeClump);     };     // Class for bucket chains of the hash table.  Note that the first     // nodeclump is actually included in the bucket and not dynamically     // allocated, which increases space requirements slightly but does     // improve performance.     class CBucket     {         mutable _Lock m_Lock;       // lock protecting this bucket     public:         CNodeClump    m_ncFirst;    // first CNodeClump of this bucket         void  WriteLock()           { m_Lock.WriteLock(); }         void  ReadLock() const      { m_Lock.ReadLock();  }         void  Unlock() const        { m_Lock.Unlock();    }         bool  IsWriteLocked() const { return m_Lock.IsWriteLocked(); }         bool  IsReadLocked() const  { return m_Lock.IsReadLocked(); }         bool  IsUnlocked() const    { return m_Lock.IsUnlocked(); } Why use   here rather then the more typical Win32 type BOOL?  Would be good to stick either with intrinsic types or Win32 types.     };     // The hash table space is divided into fixed-size segments and     // physically grows/shrinks one segment at a time.     class CSegment     {     public:         // Maximum table size equals MAX_DIRSIZE * SEGMSIZE.         // TODO: make SEGBITS be a CLinearHashTable ctor parameter?         enum {             SEGBITS  =            6, // number of bits extracted from a hash                                      // address for offset within a segment             SEGMSIZE = (1<<SEGBITS), // segment size             SEGMASK  = (SEGMSIZE-1), // mask used for extracting offset bit         };         CBucket m_bktSlots[SEGMSIZE];         ALLOCATOR_DEFINITIONS(CSegment);     };     // A directory keeps track of the segments comprising the hash table.     // The directory is just a variable-sized array of pointers to segments.     class CDirEntry     {     public:         // MIN_DIRSIZE and MAX_DIRSIZE can be changed independently         // of anything else.  Should be powers of two.         // TODO: make these be CLinearHashTable ctor parameters?  User can         // always use a larger number of subtables.         enum {             MIN_DIRSIZE =  (1<<3),   // minimum directory size             MAX_DIRSIZE = (1<<12),   // maximum directory size         };         CSegment* m_pseg; I recommend making member variables of classes private and available via accessors unless there is a specific need for direct access.         CDirEntry()         { m_pseg = NULL;  }         ~CDirEntry()         { delete m_pseg;  }     };     // aliases for convenience     enum {         NODES_PER_CLUMP = CNodeClump::NODES_PER_CLUMP,         SEGBITS =  CSegment::SEGBITS,         SEGMSIZE = CSegment::SEGMSIZE,         SEGMASK =  CSegment::SEGMASK,         MIN_DIRSIZE = CDirEntry::MIN_DIRSIZE,         MAX_DIRSIZE = CDirEntry::MAX_DIRSIZE,     }; private:     // Miscellaneous helper functions     // See the Linear Hashing paper     DWORD        _H0(DWORD dwSignature) const     { return dwSignature & m_dwBktAddrMask;  }     // See the Linear Hashing paper.  Preserves one bit more than _H0.     DWORD        _H1(DWORD dwSignature) const     { return dwSignature & ((m_dwBktAddrMask << 1) | 1);  }     // Convert a hash signature to a bucket address     DWORD        _BucketAddress(DWORD dwSignature) const     {         DWORD dwBktAddr = _H0(dwSignature);         // Has this bucket already been split?         if (dwBktAddr < m_iExpansionIdx)             dwBktAddr = _H1(dwSignature);         IRTLASSERT(dwBktAddr < m_cActiveBuckets);         IRTLASSERT(dwBktAddr < (m_cDirSegs << SEGBITS));         return dwBktAddr;     }     // In which segment within the directory does the bucketaddress lie?     // (Return type must be lvalue so that it can be assigned to.)     CSegment*&   _Segment(DWORD dwBucketAddr) const     {         const DWORD iSeg = dwBucketAddr >> SEGBITS;         IRTLASSERT(m_paDirSegs != NULL  &&  iSeg < m_cDirSegs);         return m_paDirSegs[iSeg].m_pseg;     }     // Offset within the segment of the bucketaddress     static DWORD _SegIndex(DWORD dwBucketAddr)     { return (dwBucketAddr & SEGMASK); }     // Convert a bucketaddress to a CBucket*     CBucket*     _Bucket(DWORD dwBucketAddr) const     {         // dwBucketAddr == m_cActiveBuckets briefly during contraction         IRTLASSERT(dwBucketAddr <= m_cActiveBuckets);         CSegment* const pseg = _Segment(dwBucketAddr);         IRTLASSERT(pseg != NULL);         return &(pseg->m_bktSlots[_SegIndex(dwBucketAddr)]);     }     // Extract the key from a record     const void*  _ExtractKey(const void* pvRecord) const     {         IRTLASSERT(pvRecord != NULL);         IRTLASSERT(m_pfnExtractKey != NULL);         return (pvRecord != NULL) ? (*m_pfnExtractKey)(pvRecord) : NULL;     }     // Hash a key     DWORD        _CalcKeyHash(const void* pvKey) const     {         // Note pvKey==0 is acceptable, as the real key type could be an int         IRTLASSERT(m_pfnCalcKeyHash != NULL);         return (*m_pfnCalcKeyHash)(pvKey);     }     // Compare two keys for equality     bool         _EqualKeys(const void* pvKey1, const void* pvKey2) const     {         IRTLASSERT(m_pfnEqualKeys != NULL);         return (*m_pfnEqualKeys)(pvKey1, pvKey2);     }     // AddRef or Release a record.     void         _AddRefRecord(const void* pvRecord, int nIncr) const     {         IRTLASSERT(pvRecord != NULL  &&  (nIncr == -1  ||  nIncr == +1));         if (m_pfnAddRefRecord != NULL  &&  pvRecord != NULL)             (*m_pfnAddRefRecord)(pvRecord, nIncr);     }     // We won't expose the locking mechanism.  If a wrapper class needs to     // expose a global lock (not recommended), it can provide its own lock.     // Lock the table (exclusively) for writing     void         _WriteLock()     { m_Lock.WriteLock(); }     // Lock the table (possibly shared) for reading     void         _ReadLock() const     { m_Lock.ReadLock(); }     // Unlock the table     void         _Unlock() const     { m_Lock.Unlock(); }     // Is the table already locked for writing?     bool _IsWriteLocked() const     { return m_Lock.IsWriteLocked(); }     // Is the table already locked for reading?     bool _IsReadLocked() const     { return m_Lock.IsReadLocked(); }     // Is the table unlocked?     bool _IsUnlocked() const     { return m_Lock.IsUnlocked(); } private:     // Fields are ordered so as to minimize number of cache lines touched     mutable _Lock m_Lock;           // Lock on entire hash table     DWORD         m_dwBktAddrMask;  // mask used for address calculation     DWORD         m_iExpansionIdx;  // address of next bucket to be expanded     CDirEntry*    m_paDirSegs;      // directory of table segments     // Hash table parameters     double        m_MaxLoad;        // max load factor (average chain length)     // State variables     DWORD         m_nLevel;         // number of table doublings performed     DWORD         m_cDirSegs;       // segment directory size: varies between                                     // MIN_DIRSIZE and MAX_DIRSIZE     DWORD         m_cRecords;       // number of records in the table     DWORD         m_cActiveBuckets; // number of buckets in use (table size)     // type-specific function pointers     PFnExtractKey   m_pfnExtractKey;    // Extract key from record     PFnCalcKeyHash  m_pfnCalcKeyHash;   // Calculate hash signature of key     PFnEqualKeys    m_pfnEqualKeys;     // Compare two keys     PFnAddRefRecord m_pfnAddRefRecord;  // AddRef a record     // Non-trivial implementation functions     const void*  _FindKey(const void* pvKey, DWORD dwSignature) const;     LK_RETCODE   _DeleteKey(const void* pvKey, DWORD dwSignature);     LK_RETCODE   _InsertRecord(const void* pvRecord, DWORD dwSignature,                                bool fOverwrite);     bool         _DeleteNode(CBucket* pbkt, CNodeClump*& rpnc,                              CNodeClump*& rpncPrev, DWORD& riNode);     // Predicate functions     static LK_PREDICATE _PredTrue(const void* /*pvRecord*/, void* /*pvState*/)     { return LKP_PERFORM; }     DWORD        _Apply(PFnRecordAction pfnAction, void* pvState,                         LK_LOCKTYPE lkl, LK_PREDICATE& rlkp);     DWORD        _ApplyIf(PFnRecordPred   pfnPredicate,                           PFnRecordAction pfnAction, void* pvState,                           LK_LOCKTYPE lkl, LK_PREDICATE& rlkp);     DWORD        _DeleteIf(PFnRecordPred pfnPredicate, void* pvState,                            LK_PREDICATE& rlkp);     void         _Clear(bool fShrinkDirectory);     CBucket*     _FindBucket(DWORD dwSignature, bool fLockForWrite) const;     LK_RETCODE   _Expand();     LK_RETCODE   _Contract();     LK_RETCODE   _SplitRecordSet(CNodeClump* pncOldTarget,                                  CNodeClump* pncNewTarget,                                  DWORD       iExpansionIdx,                                  DWORD       dwNewBkt);     LK_RETCODE   _MergeRecordSets(CBucket*    pbktNewTarget,                                   CNodeClump* pncOldList);     // Private copy ctor and op= to prevent compiler synthesizing them.     // Must provide a (bad) implementation because we export instantiations.     // TODO: implement these properly; they could be useful.     CLinearHashTable(const CLinearHashTable&)   {*(BYTE*)NULL;}     CLinearHashTable& operator=(const CLinearHashTable&)     {return *(CLinearHashTable*)NULL;} public:     CLinearHashTable(         PFnExtractKey   pfnExtractKey,  // Extract key from record         PFnCalcKeyHash  pfnCalcKeyHash, // Calculate hash signature of key         PFnEqualKeys    pfnEqualKeys,   // Compare two keys         PFnAddRefRecord pfnAddRefRecord=NULL,   // AddRef in FindKey         double   maxload=DFLT_LK_MAXLOAD, // Upperbound on average chain length         size_t   initsize=(2 * DFLT_LK_INITSIZE) / DFLT_LK_NUM_SUBTBLS                                         // Initial size of hash table.         );     ~CLinearHashTable();     // Insert a new record into hash table.     // Returns LK_SUCCESS if all OK, LK_KEY_EXISTS if same key already     // exists (unless fOverwrite), LK_ALLOC_FAIL if out of space,     // or LK_BAD_RECORD for a bad record.     LK_RETCODE     InsertRecord(const void* pvRecord, bool fOverwrite=true)     { return _InsertRecord(pvRecord, _CalcKeyHash(_ExtractKey(pvRecord)),                            fOverwrite);     }     // Delete record with the given key.     // Returns LK_SUCCESS if all OK, or LK_NO_SUCH_KEY if not found     LK_RETCODE     DeleteKey(const void* pvKey)     { return _DeleteKey(pvKey, _CalcKeyHash(pvKey)); }     // Find record with given key.     // Returns pointer to record; NULL if not found     const void*    FindKey(const void* pvKey) const     { return _FindKey(pvKey, _CalcKeyHash(pvKey)); }     // Walk the hash table, applying pfnAction to all records.     // Locks the whole table for the duration with either a (possibly     // shared) readlock or a writelock, according to lkl.     // Loop is aborted if pfnAction returns LK_ABORT     // Returns the number of successful applications.     DWORD          Apply(PFnRecordAction pfnAction,                          void*           pvState=NULL,                          LK_LOCKTYPE     lkl=LKL_READLOCK);     // Walk the hash table, applying pfnAction to any records that match     // pfnPredicate.  Locks the whole table for the duration with either     // a (possibly shared) readlock or a writelock, according to lkl.     // Loop is aborted if pfnAction returns LK_ABORT.     // Returns the number of successful applications.     DWORD          ApplyIf(PFnRecordPred   pfnPredicate,                            PFnRecordAction pfnAction,                            void*           pvState=NULL,                            LK_LOCKTYPE     lkl=LKL_READLOCK);     // Delete any records that match pfnPredicate.     // Locks the table for the duration with a writelock.     // Returns the number of deletions.     //     // Do *not* walk the hash table by hand with an iterator and call     // DeleteKey.  The iterator locks the table and a CSpinLock cannot     // be recursively acquired, so DeleteKey will hang forever.     DWORD          DeleteIf(PFnRecordPred pfnPredicate,                             void*         pvState=NULL);     // Check table for consistency.  Returns 0 if okay, or the number of     // errors otherwise.     int            CheckTable() const;     // Prints the table (to where??)     void           Print() const;     // Remove all data from the table     void           Clear()     {         _WriteLock();         _Clear(true);         _Unlock();     }     // Number of elements in the table     size_t         Size() const     { return m_cRecords; }     // Maximum possible number of elements in the table     size_t         MaxSize() const     { return static_cast<size_t>(m_MaxLoad * MAX_DIRSIZE * SEGMSIZE); }     // Get hash table statistics     CHashTableStats GetStatistics() const;     // Is the hash table consistent and correct?     bool           IsValid() const     {         return (m_paDirSegs != NULL                 &&  (MIN_DIRSIZE & (MIN_DIRSIZE-1)) == 0  // == (1 << N)                 &&  (MAX_DIRSIZE & (MAX_DIRSIZE-1)) == 0                 &&  MAX_DIRSIZE > MIN_DIRSIZE                 &&  MIN_DIRSIZE <= m_cDirSegs  &&  m_cDirSegs <= MAX_DIRSIZE                 &&  (m_cDirSegs & (m_cDirSegs-1)) == 0                 &&  m_pfnExtractKey != NULL                 &&  m_pfnCalcKeyHash != NULL                 &&  m_pfnEqualKeys != NULL                 &&  m_cActiveBuckets > 0                 );     }     ALLOCATOR_DEFINITIONS(CLinearHashTable); public:     // Iterators can be used to walk the table.  To ensure a consistent     // view of the data, the iterator locks the whole table.  This can     // have a negative effect upon performance, because no other thread     // can do anything with the table.  Use with care.     //     // Worse, CSpinLocks cannot be locked recursively, so the loop that     // is using the iterator must not call any API that attempts to lock     // the table, such as FindKey, InsertRecord, or DeleteKey, or the     // thread will deadlock.     //     // Use Apply, ApplyIf, or DeleteIf instead of iterators to safely     // walk the tree.  (You still can't call InsertRecord or FindKey,     // however.)     //     // Note that iterators acquire a reference to the record pointed to     // and release that reference as soon as the iterator is incremented.     // In other words, this code is safe:     //     lkrc = ht.IncrementIterator(&iter);     //     // assume lkrc == LK_SUCCESS for the sake of this example     //     CMyHashTable::Record* pRec = iter.Record();     //     Foo(pRec);  // uses pRec but doesn't hang on to it     //     lkrc = ht.IncrementIterator(&iter);     //     // But this code is not because pRec is used out of the scope of the     // iterator that provided it:     //     lkrc = ht.IncrementIterator(&iter);     //     CMyHashTable::Record* pRec = iter.Record();     //     // BUGBUG: Need to ht.AddRefRecord(pRec, +1) here     //     lkrc = ht.IncrementIterator(&iter);     //     Foo(pRec);     class CIterator     {     protected:         friend class CLinearHashTable<_Lock>;         CLinearHashTable<_Lock>*    m_plht;      // which linear hash table?         DWORD                       m_dwBucketAddr; // bucket index         CNodeClump*                 m_pnc;          // a CNodeClump in bucket         int                         m_iNode;        // offset within m_pnc         LK_LOCKTYPE                 m_lkl;          // readlock or writelock?     private:         // Private copy ctor and op= to prevent compiler synthesizing them.         // Must provide (bad) implementation because we export instantiations.         CIterator(const CIterator&)             {*(BYTE*)NULL;}         CIterator& operator=(const CIterator&)  {return *(CIterator*)NULL;}     public:         CIterator(             LK_LOCKTYPE lkl=LKL_WRITELOCK)             : m_plht(NULL),               m_dwBucketAddr(0),               m_pnc(NULL),               m_iNode(-1),               m_lkl(lkl)         {}         // Return the record associated with this iterator         const void* Record() const         {             IRTLASSERT(IsValid());             return ((m_pnc != NULL                         &&  m_iNode >= 0  &&  m_iNode < NODES_PER_CLUMP)                     ?  m_pnc->m_pvNode[m_iNode]                     :  NULL);         }         // Return the key associated with this iterator         const void* Key() const         {             IRTLASSERT(m_plht != NULL);             const void* pRec = Record();             return ((pRec != NULL  &&  m_plht != NULL)                     ?  m_plht->_ExtractKey(pRec)                     :  NULL);         }         bool IsValid() const         {             return ((m_plht != NULL)                     &&  (m_pnc != NULL)                     &&  (0 <= m_iNode  &&  m_iNode < NODES_PER_CLUMP)                     &&  (m_pnc->m_pvNode[m_iNode] != NULL));         }     };     // Const iterators for readonly access.  You must use these with     // const CLinearHashTables.     class CConstIterator : public CIterator     {     private:         // Private, unimplemented copy ctor and op= to prevent         // compiler synthesizing them.         CConstIterator(const CConstIterator&);         CConstIterator& operator=(const CConstIterator&);     public:         CConstIterator()             : CIterator(LKL_READLOCK)         {}     }; private:     // The public APIs lock the table.  The private ones, which are used     // directly by CHashTable, don't.     LK_RETCODE     _InitializeIterator(CIterator* piter);     LK_RETCODE     _CloseIterator(CIterator* piter); Little bit weird to have interspersed public/private sections.  The class interface is easier to consume if all the public pieces are presented in a single place rather then dispersed through the whole class definition. public:     // Initialize the iterator to point to the first item in the hash table     // Returns LK_SUCCESS, LK_NO_MORE_ELEMENTS, or LK_BAD_ITERATOR.     LK_RETCODE     InitializeIterator(CIterator* piter)     {         IRTLASSERT(piter != NULL  &&  piter->m_plht == NULL);         if (piter == NULL  ||  piter->m_plht != NULL)             return LK_BAD_ITERATOR;         if (piter->m_lkl == LKL_WRITELOCK)             _WriteLock();         else             _ReadLock();         return _InitializeIterator(piter);     }     // The const iterator version     LK_RETCODE     InitializeIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  &&  piter->m_plht == NULL);         IRTLASSERT(piter->m_lkl != LKL_WRITELOCK);         if (piter == NULL  ||  piter->m_plht != NULL             ||  piter->m_lkl == LKL_WRITELOCK)             return LK_BAD_ITERATOR;         _ReadLock();         return const_cast<CLinearHashTable<_Lock>*>(this)                     ->_InitializeIterator(static_cast<CIterator*>(piter));     }     // Move the iterator on to the next item in the table.     // Returns LK_SUCCESS, LK_NO_MORE_ELEMENTS, or LK_BAD_ITERATOR.     LK_RETCODE     IncrementIterator(CIterator* piter);     LK_RETCODE     IncrementIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  &&  piter->m_plht == this);         IRTLASSERT(piter->m_lkl != LKL_WRITELOCK);         if (piter == NULL  ||  piter->m_plht != this             ||  piter->m_lkl == LKL_WRITELOCK)             return LK_BAD_ITERATOR;         return const_cast<CLinearHashTable<_Lock>*>(this)                     ->IncrementIterator(static_cast<CIterator*>(piter));     }     // Close the iterator.     LK_RETCODE     CloseIterator(CIterator* piter)     {         IRTLASSERT(piter != NULL  &&  piter->m_plht == this);         if (piter == NULL  ||  piter->m_plht != this)             return LK_BAD_ITERATOR;         _CloseIterator(piter);         _Unlock();         return LK_SUCCESS;     };     // Close the CConstIterator     LK_RETCODE     CloseIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  &&  piter->m_plht == this);         IRTLASSERT(piter->m_lkl != LKL_WRITELOCK);         if (piter == NULL  ||  piter->m_plht != this             ||  piter->m_lkl == LKL_WRITELOCK)             return LK_BAD_ITERATOR;         const_cast<CLinearHashTable<_Lock>*>(this)              ->_CloseIterator(static_cast<CIterator*>(piter));         _Unlock();         return LK_SUCCESS;     }; //-------------------------------------------------------------------- // CHashTable // To improve concurrency, a hash table is divided into a number of // (independent) subtables. Each subtable is a linear hash table. The // number of subtables is defined when the table is created and remains // fixed thereafter. Records are assigned to subtables based on their // hashed key. // For small or low-contention hashtables, you can bypass this // thin wrapper and use CLinearHashTable directly.  The methods are // documented in the declarations for CLinearHashTable (above). //-------------------------------------------------------------------- template <class _Lock=CSpinLock> class DLLEXP CHashTable private:     typedef CLinearHashTable<_Lock> SubTable;     class CIterator;     friend class CHashTable<_Lock>::CIterator;     // Hash table parameters     size_t         m_cSubTables;    // number of subtables     SubTable**     m_palhtDir;      // array of subtables     // type-specific function pointers     PFnExtractKey  m_pfnExtractKey;     PFnCalcKeyHash m_pfnCalcKeyHash;     // Private copy ctor and op= to prevent compiler synthesizing them.     // Must provide a (bad) implementation because we export instantiations.     // TODO: implement these properly; they could be useful.     CHashTable(const CHashTable&)             {*(BYTE*)NULL;}     CHashTable& operator=(const CHashTable&)  {return *(CHashTable*)NULL;}     // Extract the key from the record     const void*  _ExtractKey(const void* pvRecord) const     {         IRTLASSERT(pvRecord != NULL);         IRTLASSERT(m_pfnExtractKey != NULL);         return (*m_pfnExtractKey)(pvRecord);     }     // Hash the key     DWORD        _CalcKeyHash(const void* pvKey) const     {         // Note pvKey==0 is acceptable, as the real key type could be an int         IRTLASSERT(m_pfnCalcKeyHash != NULL);         return (*m_pfnCalcKeyHash)(pvKey);     }     // Use the key's hash signature to multiplex into a subtable     SubTable*    _SubTable(DWORD dwSignature) const     {         IRTLASSERT(m_palhtDir != NULL  &&  m_cSubTables > 0);         if (m_palhtDir != NULL)         {             const DWORD PRIME = 1048583UL;  // used to scramble the hash sig             DWORD       index = (dwSignature % PRIME) % m_cSubTables;             return m_palhtDir[index];         }         else             return NULL;     }     void         _WriteLock();     void         _ReadLock() const;     void         _Unlock() const; public:     CHashTable(         PFnExtractKey   pfnExtractKey,  // Extract key from record         PFnCalcKeyHash  pfnCalcKeyHash, // Calculate hash signature of key         PFnEqualKeys    pfnEqualKeys,   // Compare two keys         PFnAddRefRecord pfnAddRefRecord=NULL,   // AddRef in FindKey         double    maxload=DFLT_LK_MAXLOAD,      // bound on avg chain length         size_t    initsize=DFLT_LK_INITSIZE,    // Initial size of hash table.         size_t    num_subtbls=DFLT_LK_NUM_SUBTBLS  // #subordinate hash tables.         );     ~CHashTable();     // Thin wrappers for the corresponding methods in CLinearHashTable     LK_RETCODE     InsertRecord (const void* pvRecord, bool fOverwrite=true)     {         DWORD     hash_val  = _CalcKeyHash(_ExtractKey(pvRecord));         SubTable* const pst = _SubTable(hash_val);         return (pst != NULL                 ?  pst->_InsertRecord(pvRecord, hash_val, fOverwrite)                 :  LK_UNUSABLE);     }     LK_RETCODE      DeleteKey(const void* pvKey)     {         DWORD     hash_val  = _CalcKeyHash(pvKey);         SubTable* const pst = _SubTable(hash_val);         return (pst != NULL                 ?  pst->_DeleteKey(pvKey, hash_val)                 :  LK_UNUSABLE);     }     const void*    FindKey(const void* pvKey) const     {         DWORD     hash_val  = _CalcKeyHash(pvKey);         SubTable* const pst = _SubTable(hash_val);         return (pst != NULL                 ?  pst->_FindKey(pvKey, hash_val)                 :  NULL);     }     DWORD          Apply(PFnRecordAction pfnAction,                          void*           pvState=NULL,                          LK_LOCKTYPE     lkl=LKL_READLOCK);     DWORD          ApplyIf(PFnRecordPred   pfnPredicate,                            PFnRecordAction pfnAction,                            void*           pvState=NULL,                            LK_LOCKTYPE     lkl=LKL_READLOCK);     DWORD          DeleteIf(PFnRecordPred pfnPredicate,                             void*         pvState=NULL);     void           Clear();     int            CheckTable() const;     void           Print() const;     size_t         Size() const;     size_t         MaxSize() const;     CHashTableStats GetStatistics() const;     bool           IsValid() const;     ALLOCATOR_DEFINITIONS(CHashTable); public:  ( Isn t this public redundant?     typedef CLinearHashTable<_Lock>::CIterator CLHTIterator;     class CIterator : public CLHTIterator     {     protected:         friend class CHashTable<_Lock>;         CHashTable<_Lock>*  m_pht;      // which hash table?         int                 m_ist;      // which subtable     private:         // Private copy ctor and op= to prevent compiler synthesizing them.         // Must provide (bad) implementation because we export instantiations.         CIterator(const CIterator&)             {*(BYTE*)NULL;}         CIterator& operator=(const CIterator&)  {return *(CIterator*)NULL;}     public:         CIterator(             LK_LOCKTYPE lkl=LKL_WRITELOCK)             : CLHTIterator(lkl),               m_pht(NULL),               m_ist(-1)         {}         const void* Record() const         {             IRTLASSERT(IsValid());             // This is a hack to work around a compiler bug.  Calling             // CLHTIterator::Record calls this function recursively until             // the stack overflows.             const CLHTIterator* pBase = static_cast<const CLHTIterator*>(this);             return pBase->Record();         }         const void* Key() const         {             IRTLASSERT(IsValid());             const CLHTIterator* pBase = static_cast<const CLHTIterator*>(this);             return pBase->Key();         }         bool IsValid() const         {             const CLHTIterator* pBase = static_cast<const CLHTIterator*>(this);             return (m_pht != NULL  &&  m_ist >= 0  &&  pBase->IsValid());         }     };     // Const iterators for readonly access     class CConstIterator : public CIterator     {     private:         // Private, unimplemented copy ctor and op= to prevent         // compiler synthesizing them.         CConstIterator(const CConstIterator&);         CConstIterator& operator=(const CConstIterator&);     public:         CConstIterator()             : CIterator(LKL_READLOCK)         {}     }; public:     LK_RETCODE     InitializeIterator(CIterator* piter);     LK_RETCODE     IncrementIterator(CIterator* piter);     LK_RETCODE     CloseIterator(CIterator* piter);     LK_RETCODE     InitializeIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  &&  piter->m_pht == NULL);         IRTLASSERT(piter->m_lkl != LKL_WRITELOCK);         if (piter == NULL  ||  piter->m_pht != NULL             ||  piter->m_lkl == LKL_WRITELOCK)             return LK_BAD_ITERATOR;         return const_cast<CHashTable<_Lock>*>(this)                 ->InitializeIterator(static_cast<CIterator*>(piter));     }     LK_RETCODE     IncrementIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  &&  piter->m_pht == this);         IRTLASSERT(piter->m_lkl != LKL_WRITELOCK);         if (piter == NULL  ||  piter->m_pht != this             ||  piter->m_lkl == LKL_WRITELOCK)             return LK_BAD_ITERATOR;         return const_cast<CHashTable<_Lock>*>(this)                 ->IncrementIterator(static_cast<CIterator*>(piter));     }     LK_RETCODE     CloseIterator(CConstIterator* piter) const     {         IRTLASSERT(piter != NULL  