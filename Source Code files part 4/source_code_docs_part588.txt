        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DomainUpDown">
            <summary>
            Represents a control that enables single value selection from a 
            domain of values through a Spinner and TextBox.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.UpDownBase`1">
            <summary>
            Base class for all controls that provide value manipulation with a 
            Spinner and a text box.
            </summary>
            <typeparam name="T">Type of Value property.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.UpDownBase">
            <summary>
            Base class for all controls that provide value manipulation with a 
            Spinner and a text box.
            </summary>
            <remarks>
            This non generic base class is used to specify default template,
            and simulate covariance among sub classes of UpDownBase&lt;T&gt;.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase.ElementTextName">
            <summary>
            Name constant for Text template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase.ElementSpinnerName">
            <summary>
            Name constant for Spinner template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase.SpinnerStyleName">
            <summary>
            Name constant for SpinnerStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase.SpinnerStyleProperty">
            <summary>
            Identifies the SpinnerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.OnSpinnerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for SpinnerStyleProperty.
            </summary>
            <param name="d">UpDownBase whose SpinnerStyleProperty changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.#ctor">
            <summary>
            Initializes a new instance of the UpDownBase class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.OnSpinnerStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when SpinnerStyle property value has changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.GetValue">
            <summary>
            GetValue method for returning UpDownBase&lt;T&gt;.Value as object.
            </summary>
            <returns>Value as object type.</returns>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.SetValue(System.Object)">
            <summary>
            SetValue method for setting UpDownBase&lt;T&gt;.Value through object type parameter.
            </summary>
            <param name="value">New value in object type.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase.SpinnerStyle">
            <summary>
            Gets or sets the Style that is applied to the spinner.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1._textBox">
            <summary>
            Private field for Text template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1._text">
            <summary>
            Private field to hold previous value of TextBox.Text.
            </summary>
            <remarks>
            Because TextBox.TextChanged seems to fire randomly, 
            so we compensatethat by handling LostFocus,
            and comparing TextBox.Text with cached previous value.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1._spinner">
            <summary>
            Private field for Spinner template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1._ignoreValueChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="d">UpDownBase whose Value changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UpDownBase`1.IsEditableProperty">
            <summary>
            Identifies the IsEditable dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnIsEditablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEditableProperty property changed handler.
            </summary>
            <param name="d">UpDownBase that changed its IsEditable.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.#ctor">
            <summary>
            Initializes a new instance of the UpDownBase(of T) class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.GetValue">
            <summary>
            GetValue override to return Value property as object type.
            </summary>
            <returns>The Value property as object type.</returns>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.SetValue(System.Object)">
            <summary>
            SetValue override to set value to Value property.
            </summary>
            <param name="value">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnApplyTemplate">
            <summary>
            Builds the visual tree for the UpDownBase(of T) control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <remarks>
            Only support up and down arrow keys.
            </remarks>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnTextLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for Text template part's LostFocus event.
            We use this event to compare current TextBox.Text with cached previous 
            value to decide whether user has typed in a new value. 
            </summary>
            <param name="sender">The Text template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.ProcessUserInput">
            <summary>
            Called OnLostFocus and OnKeyDown(Key.Enter) to process user input.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnTextGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for Text template part's GotFocus event.
            This event handler selects the whole text on GotFocus when nothing is selected.
            </summary>
            <param name="sender">The Text template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.SetTextBoxText">
            <summary>
            Display current value in Text template part.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnSpinnerSpin(System.Object,System.Windows.Controls.SpinEventArgs)">
            <summary>
            Event handler for Spinner template part's Spin event.
            </summary>
            <param name="sender">The Spinner template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.ApplyValue(System.String)">
            <summary>
            Processes user input when the TextBox.TextChanged event occurs.
            </summary>
            <param name="text">User input.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnParseError(System.Windows.Controls.UpDownParseErrorEventArgs)">
            <summary>
            Raises the ParserError event when there is an error in parsing user input.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnParsing(System.Windows.Controls.UpDownParsingEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Parsing"/> event, to allow easily hooking
            into the parse logic.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.UpDownParsingEventArgs`1"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnSpin(System.Windows.Controls.SpinEventArgs)">
            <summary>
            Occurs when the spinner spins.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{`0})">
            <summary>
            Raises the ValueChanging event when Value property is changing.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{`0})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnIsEditableChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsEditable property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.SelectAllText">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.FormatValue">
            <summary>
            Renders the value property into the textbox text.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownBase`1.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase`1.Text">
            <summary>
            Gets the Text template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase`1.Spinner">
            <summary>
            Gets the Spinner template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase`1.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownBase`1.IsEditable">
            <summary>
            Gets or sets a value indicating whether the value can be manually 
            edited by the end-user.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.UpDownBase`1.ValueChanging">
            <summary>
            Occurs when Value property is changing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.UpDownBase`1.ValueChanged">
            <summary>
            Occurs when Value property has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.UpDownBase`1.Parsing">
            <summary>
            Occurs when a value is being parsed and allows custom parsing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.UpDownBase`1.ParseError">
            <summary>
            Occurs when there is an error in parsing user input and allows adding parsing logic.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.GroupDomain">
            <summary>
            Domain state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.StateInvalid">
            <summary>
            InvalidDomain of the Domain state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.StateValid">
            <summary>
            Valid of the Domain state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._items">
            <summary>
            Backing store for the Items collection, when ItemsSource is null.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._valueDuringInitialization">
            <summary>
            The value as set during initialization. Since no items have been added
            at that point, the value will be reset. However, during 
            initialization, the value will be cached in this field and used
            when items are actually added. 
            </summary>
            <remarks>After this index has been used, it will be set to new object().</remarks>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._isNotAllowedToEditByFocus">
            <summary>
            Indicates whether the control should not move to EditMode when
            it is gains Focus.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._weakEventListener">
            <summary>
            WeakEventListener used to handle INotifyCollectionChanged events.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._isEditing">
            <summary>
            BackingField for IsEditing, indicating whether the control is in EditMode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._isInvalidInput">
            <summary>
            Backing field for InvalidInput, indicating whether the last parsed input was invalid.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.CurrentIndexProperty">
            <summary>
            Identifies the CurrentIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnCurrentIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CurrentIndexProperty property changed handler.
            </summary>
            <param name="d">DomainUpDown instance that changed its CurrentIndex.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.IsValidCurrentIndex(System.Int32)">
            <summary>
            SelectedIndexProperty validation handler.
            </summary>
            <param name="value">New value of SelectedIndexProperty.</param>
            <returns>
            Returns true if value is valid for SelectedIndexProperty, false otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.CoerceSelectedIndex(System.Int32)">
            <summary>
            CurrentIndexProperty coercion handler.
            </summary>
            <param name="index">The index.</param>
            <returns>
            Coerced effective value of CurrentIndexProperty from input parameter value.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._initialCurrentIndex">
            <summary>
            Cached previous value of SelectedIndexProperty.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._currentIndexDuringInitialization">
            <summary>
            The index as set during initialization. Since no items have been added
            at that point, an Exception should be thrown. However, during 
            initialization, the index will be cached in this field and used
            when items are actually added. 
            </summary>
            <remarks>After this index has been used, it will be set to -1.</remarks>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._currentIndexNestLevel">
            <summary>
            Nest level for selected index.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.IsCyclicProperty">
            <summary>
            Identifies the IsCyclic dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnIsCyclicPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsCyclicProperty property changed handler.
            </summary>
            <param name="d">DomainUpDown instance that changed its IsCyclic value.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown._valueBindingEvaluator">
            <summary>
            Gets or sets the BindingEvaluator, a framework element that can
            provide updated string values from a single binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.InvalidInputActionProperty">
            <summary>
            Identifies the InvalidInputAction dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnInvalidInputActionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            InvalidInputAction property changed handler.
            </summary>
            <param name="d">DomainUpDown instance that changed the InvalidInputAction.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.FallbackItemProperty">
            <summary>
            Identifies the FallbackItem dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">DomainUpDown that changed its ItemsSource.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DomainUpDown.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DomainUpDown"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnApplyTemplate">
            <summary>
            Builds the visual tree for the DomainUpDown control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnCreateAutomationPeer">
            <summary>
            Returns a DomainUpDownAutomationPeer for use by the 
            Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.GetActualItems">
            <summary>
            Gets the correct items collection that we are using, abstracting away ItemsSource and Items logic.
            </summary>
            <returns>Returns either Items or ItemsSource.</returns>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the items collection is changed. This can either be Items or ItemsSource.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
            <remarks>If ItemsSource does not implement INotifyCollectionChanged, this method will not be called on
            changes in the ItemsSource.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource has changed.
            Handles setting the selected item.
            </summary>
            <param name="oldItemsSource">The old items source.</param>
            <param name="itemsSource">The items source.</param>
            <remarks>When switching ItemsSource, the selectedIndex will be used (if possible) 
            to select an item in the new collection.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Object})">
            <summary>
            Raises the ValueChanging event when Value property is changing.
            </summary>
            <param name="e">Event args.</param>
            <remarks>Cancels the event when the value is not part of the domain.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
            <remarks>Will set CurrentIndex.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnCurrentIndexChanged(System.Int32,System.Int32)">
            <summary>
            Processes changes to the CurrentIndex property.
            </summary>
            <param name="oldValue">The old value of CurrentIndex.</param>
            <param name="newValue">The new value of CurrentIndex.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.ApplyValue(System.String)">
            <summary>
            Processes user input when the TextBox.TextChanged event occurs.
            </summary>
            <param name="text">User input.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input as a value in the domain.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
            <remarks>An empty string will return the currently selected value.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.FormatValue">
            <summary>
            Renders the value property into the textbox text.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase. 
            </summary>
            <remarks>If the IsCyclic property is set to true the DomainUpDown 
            control will not increment when the selected item is the last item.</remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Decrease. 
            </summary>
            <remarks>If the IsCyclic property is set to true the DomainUpDown 
            control will not decrement when the selected item is the first item. </remarks>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.SetValidSpinDirection">
            <summary>
            Sets the valid spin direction based on current index, minimum and maximum.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.TryEnterEditMode">
            <summary>
            Tries the enter edit mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.SelectAllText">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">True to use transitions when updating the visual state, false to
            snap directly to the new visual state.</param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DomainUpDown.GetIndexOf(System.Collections.IEnumerable,System.Object)">
            <summary>
            Gets the index of a sequence.
            </summary>
            <param name="sequence">The sequence that contains the item of interest.</param>
            <param name="item">The item that contained within the sequence.</param>
            <returns>The index of the item in the sequence. -1 if the item was not found.</returns>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.Items">
            <summary>
            Gets a collection of items which represent the domain 
            in the DomainUpDown control.
            </summary>
            <remarks>When ItemsSource is set, will return a copy of the items in ItemsSource.
            When ItemsSource property is not set (set to null) this collection 
            will return an empty writeable colection.</remarks>
            <value>The items.</value>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.IsEditing">
            <summary>
            Gets a value indicating whether the control is in EditMode.
            </summary>
            <value><c>True</c> if currently in edit mode; otherwise, <c>False</c>.</value>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.IsInvalidInput">
            <summary>
            Gets or sets a value indicating whether the last parsed input was invalid.
            </summary>
            <value><c>True</c> if input is currently Invalid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.CurrentIndex">
            <summary>
            Gets or sets the index of the current selected item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.IsCyclic">
            <summary>
            Gets or sets a value indicating whether the DomainUpDown control 
            will cycle through values when trying to spin the first and last item. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.ValueMemberBinding">
            <summary>
            Gets or sets the Binding object used for object to string 
            conversions.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.ValueMemberPath">
            <summary>
            Gets or sets the Binding Path to use for identifying the value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.InvalidInputAction">
            <summary>
            Gets or sets a value determining the DomainUpDown behavior when a 
            user sets a value not included in the domain.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.FallbackItem">
            <summary>
            Gets or sets the item that is used when a user attempts to 
            set a value not included in the domain.
            </summary>
            <remarks>FallbackItem will only be used if it is contained within 
            the Items collection.</remarks>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.ItemsSource">
            <summary>
            Gets or sets a collection of items which represent the 
            domain in the DomainUpDown control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DomainUpDown.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display an item from the 
            Domain when the item is selected.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.DomainUpDownAutomationPeer">
            <summary>
            Exposes DomainUpDown types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1">
            <summary>
            Exposes UpDownBase types to UI Automation.
            </summary>
            <typeparam name="T">Type of the items.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.#ctor(System.Windows.Controls.UpDownBase{`0})">
            <summary>
            Initializes a new instance of the UpDownBaseAutomationPeer class.
            </summary>
            <param name="owner">
            The UpDownBase that is associated with this UpDownBaseAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the UpDownBase that is associated
            with this UpDownBaseAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Group AutomationControlType.</returns>
            <remarks>Return AutomationControlType.Spinner per MSDN article.</remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.GetClassNameCore">
            <summary>
            Gets the name of the UpDownBase that is associated with this
            UpDownBaseAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name UpDownBase.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the UpDownBase that is associated
            with this UpDownBaseAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.SetValue(System.String)">
            <summary>
            Sets the value of a control from a string.
            </summary>
            <param name="value">The value to set.</param>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.OwnerUpDown">
            <summary>
            Gets the UpDownBase that owns this UpDownBaseAutomationPeer.
            </summary>
            <value>The domain up down.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.UpDownBaseAutomationPeer`1.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>
            The value of the control as a string.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.DomainUpDownAutomationPeer.#ctor(System.Windows.Controls.DomainUpDown)">
            <summary>
            Initializes a new instance of the DomainUpDownAutomationPeer class.
            </summary>
            <param name="owner">
            The DomainUpDown that is associated with this DomainUpDownAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DomainUpDownAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the DomainUpDown that is associated with this
            DomainUpDownAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name DomainUpDown.</returns>
        </member>
        <member name="T:System.Windows.Controls.InvalidInputAction">
            <summary>
            Determines the behavior of a DomainUpDown control when a user sets a 
            value not included in the domain.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InvalidInputAction.UseFallbackItem">
            <summary>
            Once a user sets a value not included in the domain, the DomainUpDown 
            control will use the FallbackItem property as the selected item. If 
            FallbackItem is not specified the first item in the DomainUpDown Items 
            collection will be used.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InvalidInputAction.TextBoxCannotLoseFocus">
            <summary>
            Once a user sets a value not included in the domain, the 
            DomainUpDown control cannot lose focus.
            </summary>
            <remarks>There are situations that the control can not regain focus.</remarks>
        </member>
        <member name="T:System.Windows.Controls.ObservableObjectCollection">
            <summary>
            Implements a collection of objects.
            </summary>
            <remarks>
            ObservableObjectCollection is intended to simplify the task of populating an
            ItemsSource property in XAML and allows for readonly collections.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <ItemsControl.ItemsSource>
                <controls:ObservableObjectCollection>
                    <TextBlock Text="Object 1" />
                    <TextBlock Text="Object 2" />
                </controls:ObservableObjectCollection>
            </ItemsControl.ItemsSource>
            ]]>
            </code>
            </example>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.ObservableObjectCollection"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.ObservableObjectCollection"/> class.
            </summary>
            <param name="collection">The collection whose items will be copied.</param>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.InsertItem(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.SetItem(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index.</param>
        </member>
        <member name="M:System.Windows.Controls.ObservableObjectCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObservableObjectCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read only.
            </summary>
            <value><c>True</c> if read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:System.Windows.Controls.ObservableObjectCollection.System#Collections#Generic#ICollection{System#Object}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.NumericUpDown">
            <summary>
            Represents a control that enables single value selection from a numeric
            range of values through a Spinner and TextBox.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its Minimum.</param>
            <param name="e">DependencyPropertyChangedEventArgs for Minimum property.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its Maximum.</param>
            <param name="e">DependencyPropertyChangedEventArgs for Maximum property.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown.IncrementProperty">
            <summary>
            Identifies the Increment dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnIncrementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IncrementProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its Increment property.</param>
            <param name="e">DependencyPropertyChangedEventArgs for Increment property.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnIncrementChanged(System.Double,System.Double)">
            <summary>
            Called when the Increment property value has changed.
            </summary>
            <param name="oldValue">Old value of the Increment property.</param>
            <param name="newValue">New value of the Increment property.</param>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown.DecimalPlacesProperty">
            <summary>
            Identifies the DecimalPlaces dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnDecimalPlacesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DecimalPlacesProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its DecimalPlaces.</param>
            <param name="e">DependencyPropertyChangedEventArgs for DecimalPlaces property.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnDecimalPlacesChanged(System.Int32,System.Int32)">
            <summary>
            Called when the DecimalPlaces property value has changed.
            </summary>
            <param name="oldValue">Old value of the DecimalPlaces property.</param>
            <param name="newValue">New value of the DecimalPlaces property.</param>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown.formatString">
            <summary>
            Format string used to display Value property.
            </summary>
            <seealso cref="P:System.Windows.Controls.NumericUpDown.DecimalPlaces"/>
            <seealso cref="M:System.Windows.Controls.NumericUpDown.FormatValue"/>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the NumericUpDown class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.SetValidSpinDirection">
            <summary>
            Sets the valid spin direction based on current value, minimum and maximum.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnApplyTemplate">
            <summary>
            Builds the visual tree for the NumericUpDown control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnCreateAutomationPeer">
            <summary>
            Returns a NumericUpDownAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A NumericUpDownAutomationPeer object for the NumericUpDown.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Double})">
            <summary>
            Override UpDownBase&lt;T&gt;.OnValueChanging to do validation and coercion.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Override UpDownBase&lt;T&gt;.OnValueChanged to raise value changed automation event and 
            determine if a maximum or minimum has been reached.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input as a decimal number.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.FormatValue">
            <summary>
            Provides decimal specific value formatting for the value property.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Decrease.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._levelsFromRootCall">
            <summary>
            Levels from root call.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._initialInc">
            <summary>
            Initial Increment value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._initialMin">
            <summary>
            Initial Minimum value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._initialMax">
            <summary>
            Initial Maximum value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._initialVal">
            <summary>
            Initial Minimum value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._requestedInc">
            <summary>
            Requested Increment value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._requestedMin">
            <summary>
            Requested Minimum value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._requestedMax">
            <summary>
            Requested Maximum value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericUpDown._requestedVal">
            <summary>
            Requested Value value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.CoerceMaximum">
            <summary>
            Ensure the Maximum is greater than or equal to the Minimum.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.CoerceValue">
            <summary>
            Ensure the value falls between the Minimum and Maximum values.
            This function assumes that (Maximum >= Minimum).
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.IsValidDoubleValue(System.Object,System.Double@)">
            <summary>
            Check if an object value is a valid double value.
            </summary>
            <param name="value">The value to be checked.</param>
            <param name="number">The double value to be returned.</param>
            <returns>true if a valid double; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.EnsureValidDoubleValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensure the new value of a dependency property change is a valid double value, 
            or revert the change and throw an exception.
            </summary>
            <remarks>
            EnsureValidDoubleValue(DependencyObject d, DependencyPropertyChangedEventArgs e) is simply a wrapper for 
            EnsureValidDoubleValue(DependencyObject d, DependencyProperty property, object oldValue, object newValue).
            </remarks>
            <param name="d">The DependencyObject whose DependencyProperty is changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.EnsureValidDoubleValue(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object,System.Object)">
            <summary>
            Ensure the new value of a dependency property change is a valid double value, 
            or revert the change and throw an exception.
            </summary>
            <param name="d">The DependencyObject whose DependencyProperty is changed.</param>
            <param name="property">The DependencyProperty that changed.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.EnsureValidIncrementValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensure the new value of Increment dependency property change is valid, 
            or revert the change and throw an exception.
            </summary>
            <param name="d">The DependencyObject whose DependencyProperty is changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.EnsureValidDecimalPlacesValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensure the new value of DecimalPlaces dependency property change is valid, 
            or revert the change and throw an exception.
            </summary>
            <param name="d">The DependencyObject whose DecimalPlaces DependencyProperty is changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">True to use transitions when updating the visual state, false to snap directly to the new visual state.</param>
        </member>
        <member name="M:System.Windows.Controls.NumericUpDown.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">A value indicating whether to automatically generate transitions to the new state, or instantly transition to the new state.</param>
        </member>
        <member name="P:System.Windows.Controls.NumericUpDown.Minimum">
            <summary>
            Gets or sets the Minimum possible Value.
            </summary>
            <remarks>
            The default value is zero.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.NumericUpDown.Maximum">
            <summary>
            Gets or sets the Maximum possible Value.
            </summary>
            <remarks>
            The default values is one.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.NumericUpDown.Increment">
            <summary>
            Gets or sets a value added or subtracted from the value property.
             </summary>
            <remarks>
            The default values is one.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.NumericUpDown.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places that are displayed in the 
            NumericUpDown. 
            </summary>
            <remarks>
            The default value is zero.
            
            DecimalPlaces decides output format of Value property.
            It is implemented via formatString field and FormatValue override.
            </remarks>
        </member>
        <member name="T:System.Windows.Automation.Peers.NumericUpDownAutomationPeer">
            <summary>
            Exposes NumericUpDown types to UI Automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.#ctor(System.Windows.Controls.NumericUpDown)">
            <summary>
            Initializes a new instance of the NumericUpDownAutomationPeer class.
            </summary>
            <param name="owner">
            The NumericUpDown that is associated with this NumericUpDownAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the NumericUpDown that is associated with this
            NumericUpDownAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name NumericUpDown.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the NumericUpDown that is associated
            with this NumericUpDownAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
            <summary>
            Sets the value of the NumericUpDown.
            </summary>
            <param name="value">The value to set.</param>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
            <summary>
            Gets a value indicating whether the value of the NumericUpDown is read-only.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
            <summary>
            Gets the value to be added or subtracted from the Value property of the NumericUpDown.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
            <summary>
            Gets the maximum value supported by the NumericUpDown.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
            <summary>
            Gets minimum value supported by the NumericUpDown.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
            <summary>
            Gets the value to be added or subtracted from the Value property of the NumericUpDown.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.NumericUpDownAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
            <summary>
            Gets the value of the NumericUpDown.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.EnumerableExtensions">
            <summary>
            Extension methods for Enumerable.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.Range(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a sequence from an integer, to an integer, skipping 
            a defined amount of integers.
            </summary>
            <param name="from">The value of the first integer in the sequence.</param>
            <param name="to">The inclusive end of the sequence.</param>
            <param name="by">The amount of integers to skip.</param>
            <returns>A sequence of integers.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Applies an action to each element in an IEnumerable.
            </summary>
            <typeparam name="T">The Type of the elements.</typeparam>
            <param name="source">The source sequence.</param>
            <param name="action">The action applied to all the elements.</param>
            <remarks>See a discussion about the merits on this function here:
            http://blogs.msdn.com/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx.</remarks>
        </member>
        <member name="T:System.Windows.Controls.Primitives.Clipper">
            <summary>
            Clips a ratio of its content.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.Clipper.RatioVisibleProperty">
            <summary>
            Identifies the RatioVisible dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.Clipper.OnRatioVisibleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RatioVisibleProperty property changed handler.
            </summary>
            <param name="d">PartialView that changed its RatioVisible.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.Clipper.OnRatioVisibleChanged(System.Double,System.Double)">
            <summary>
            RatioVisibleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.Primitives.Clipper.#ctor">
            <summary>
            Initializes a new instance of the Clipper class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.Clipper.ClipContent">
            <summary>
            Updates the clip geometry.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.Clipper.RatioVisible">
            <summary>
            Gets or sets the percentage of the item visible.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.EnumerableFunctions">
            <summary>
            This class contains general purpose functions to manipulate the generic
            IEnumerable type.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.EnumerableFunctions.Scan``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1,``0,``1},``1)">
            <summary>
            Applies a function to an accumulated value and an item in the 
            sequence and yields the result as the accumulated value.
            </summary>
            <typeparam name="T">The type of the input sequence.</typeparam>
            <typeparam name="R">The type of the initial value.</typeparam>
            <param name="that">The sequence to scan.</param>
            <param name="func">The function applied to the accumulator and the
            current item.</param>
            <param name="initialValue">The initial value in the output sequence.
            </param>
            <returns>A sequence of computed values.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableFunctions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Accepts two sequences and applies a function to the corresponding 
            values in the two sequences.
            </summary>
            <typeparam name="T0">The type of the first sequence.</typeparam>
            <typeparam name="T1">The type of the second sequence.</typeparam>
            <typeparam name="R">The return type of the function.</typeparam>
            <param name="enumerable0">The first sequence.</param>
            <param name="enumerable1">The second sequence.</param>
            <param name="func">The function to apply to the corresponding values
            from the two sequences.</param>
            <returns>A sequence of transformed values from both sequences.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableFunctions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Returns the index of an item in a sequence.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <param name="item">The item in the sequence.</param>
            <returns>The index of an item in a sequence.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableFunctions.GetWeightedValues(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Returns a stream of weighted values based on a percentage.
            </summary>
            <param name="values">A sequence of values.</param>
            <param name="percent">The percentage of values.</param>
            <returns>A sequence of percentages.</returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.LinearClipper">
            <summary>
            Clips the content of the control in a given direction.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.LinearClipper.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.LinearClipper.OnExpandDirectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty property changed handler.
            </summary>
            <param name="d">ExpandDirectionView that changed its ExpandDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.LinearClipper.OnExpandDirectionChanged(System.Windows.Controls.ExpandDirection,System.Windows.Controls.ExpandDirection)">
            <summary>
            ExpandDirectionProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.Primitives.LinearClipper.ClipContent">
            <summary>
            Updates the clip geometry.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.LinearClipper.ExpandDirection">
            <summary>
            Gets or sets the clipped edge.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.NullableConverter`1">
            <summary>
            Converts a string or base value to a <see cref="T:System.Nullable"/> value.
            </summary>
            <typeparam name="T">The type should be value type.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.NullableConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NullableConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="destinationType">The type you want to convert to.
            </param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NullableConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.NullableConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from the specified value to the a specified type from the
            type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <param name="destinationType">The type of convert the value to
            .</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.Rating">
            <summary>
            A control that has a rating.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Rating.DisplayValueProperty">
            <summary>
            Identifies the DisplayValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnDisplayValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayValueProperty property changed handler.
            </summary>
            <param name="dependencyObject">Rating that changed its DisplayValue.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnDisplayValueChanged">
            <summary>
            DisplayValueProperty property changed handler.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Rating.ItemCountProperty">
            <summary>
            Identifies the ItemCount dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnItemCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemCountProperty property changed handler.
            </summary>
            <param name="d">Rating that changed its ItemCount.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnItemCountChanged(System.Int32)">
            <summary>
            This method is invoked when the items count property is changed.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.Rating.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnIsReadOnlyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="d">Rating that changed its IsReadOnly.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnIsReadOnlyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.Rating.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnItemContainerStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">Rating that changed its ItemContainerStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnItemContainerStyleChanged(System.Windows.Style)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.Rating.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectionModeProperty property changed handler.
            </summary>
            <param name="d">Rating that changed its SelectionMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnSelectionModeChanged(System.Windows.Controls.RatingSelectionMode,System.Windows.Controls.RatingSelectionMode)">
            <summary>
            SelectionModeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.Rating.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="d">Rating that changed its Value.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnValueChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.Rating.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the control when the items change.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.#ctor">
            <summary>
            Initializes a new instance of the Rating control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnApplyTemplate">
            <summary>
            Applies control template to the items control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when the mouse enters the rating item.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when the mouse leaves the rating item.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the Rating's MouseLeftButtonDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the Rating's MouseLeftButtonUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.UpdateValues">
            <summary>
            Updates the values of the rating items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.UpdateDisplayValues">
            <summary>
            Updates the value and actual value of the rating items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.UpdateHoverStates">
            <summary>
            Updates the hover states of the rating items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Rating.GetContainerForItemOverride">
            <summary>
            This method returns a container for the item.
            </summary>
            <returns>A container for the item.</returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Gets a value indicating whether the item is its own container.
            </summary>
            <param name="item">The item which may be a container.</param>
            <returns>A value indicating whether the item is its own container.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            This method prepares a container to host an item.
            </summary>
            <param name="element">The container.</param>
            <param name="item">The item hosted in the container.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            This method clears a container used to host an item.
            </summary>
            <param name="element">The container that hosts the item.</param>
            <param name="item">The item hosted in the container.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.RatingItemMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when a rating item's mouse enter event is
            invoked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.RatingItemMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when a rating item's mouse leave event is
            invoked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.GetRatingItems">
            <summary>
            Returns a sequence of rating items.
            </summary>
            <returns>A sequence of rating items.</returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.SelectRatingItem(System.Windows.Controls.RatingItem)">
            <summary>
            Selects a rating item.
            </summary>
            <param name="selectedRatingItem">The selected rating item.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.RatingItemClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is raised when a rating item value is selected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.GetSelectedRatingItem">
            <summary>
            Returns the selected rating item.
            </summary>
            <returns>The selected rating item.</returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnRatingItemValueSelected(System.Windows.Controls.RatingItem,System.Double)">
            <summary>
            This method is invoked when the rating item value is changed.
            </summary>
            <param name="ratingItem">The rating item that has changed.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnCreateAutomationPeer">
            <summary>
            Returns a RatingItemAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A RatingItemAutomationPeer object for the RatingItem.</returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event when a key
            is pressed while the control has focus.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e " />is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Rating.GetRatingItemAtOffsetFrom(System.Windows.Controls.RatingItem,System.Int32)">
            <summary>
            Gets a rating item at a certain index offset from another 
            rating item.
            </summary>
            <param name="ratingItem">The rating item.</param>
            <param name="offset">The rating item at an offset from the 
            index of the rating item.</param>
            <returns>The rating item at the offset.</returns>
        </member>
        <member name="M:System.Windows.Controls.Rating.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Updates the visual state.
            </summary>
            <param name="useTransitions">A value indicating whether to use transitions.</param>
        </member>
        <member name="P:System.Windows.Controls.Rating.DisplayValue">
            <summary>
            Gets or sets the actual value of the Rating control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.HoveredRatingItem">
            <summary>
            Gets or sets the rating item hovered over.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.ItemsControlHelper">
            <summary>
            Gets or sets the items control helper class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.ItemCount">
            <summary>
            Gets or sets the number of rating items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the Rating is read-only.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.ItemContainerStyle">
            <summary>
            Gets or sets the item container style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Rating.Value">
            <summary>
            Gets or sets the rating value.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Rating.ValueChanged">
            <summary>
            This event is raised when the value of the rating is changed.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.RatingAutomationPeer">
            <summary>
            Exposes Rating types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.#ctor(System.Windows.Controls.Rating)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RatingAutomationPeer"/> class.
            </summary>
            <param name="owner">The Rating that is associated with this
            RatingAutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetNameCore">
            <summary>
            Returns a name if no name is set.
            </summary>
            <returns>A name if no name is set.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized control type.
            </summary>
            <returns>The localized control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the Rating that is associated
            with this RatingAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>List AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the Rating that is associated
            with this RatingAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of 
            the <see cref="T:System.Windows.Controls.ItemsControl"/> that is 
            associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>.
            </summary>
            <returns>
            A collection of RatingItemAutomationPeer elements, or null if the
            Rating that is associated with this RatingAutomationPeer is
            empty.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI Automation provider for each child element that is 
            selected.
            </summary>
            <returns>An array of UI Automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingAutomationPeer.SetValue(System.String)">
            <summary>
            Sets a rating value.
            </summary>
            <param name="value">The value of the rating.</param>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingAutomationPeer.OwnerRating">
            <summary>
            Gets the Rating that owns this RatingAutomationPeer.
            </summary>
            <value>The Rating.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            allows more than one child element to be selected concurrently.
            </summary>
            <returns>true if multiple selection is allowed; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            requires at least one child element to be selected.
            </summary>
            <returns>true if selection is required; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingAutomationPeer.IsReadOnly">
            <summary>
            Gets a value indicating whether the Rating is read-only.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingAutomationPeer.Value">
            <summary>
            Gets the rating value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.RatingItem">
            <summary>
            An item used in a rating control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.StateFilled">
            <summary>
            The state in which the item is filled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.StateEmpty">
            <summary>
            The state in which the item is empty.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.GroupFill">
            <summary>
            The group that contains fill states.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.StatePartial">
            <summary>
            The state in which the item is partially filled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem._interactionHelper">
            <summary>
            The interaction helper used to get the common states working.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem._settingDisplayValue">
            <summary>
            A value indicating whether the actual value is being set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.DisplayValueProperty">
            <summary>
            Identifies the DisplayValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnDisplayValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayValueProperty property changed handler.
            </summary>
            <param name="d">RatingItem that changed its DisplayValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnDisplayValueChanged(System.Double,System.Double)">
            <summary>
            DisplayValueProperty property changed handler.
            </summary> 
            <param name="oldValue">The old value.</param> 
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.RatingItem._settingIsReadOnly">
            <summary>
            A value indicating whether the read only value is being set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingItem.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnIsReadOnlyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="d">RatingItem that changed its IsReadOnly.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnIsReadOnlyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.RatingItem.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.SelectValue">
            <summary>
            Selects a value and raises the value selected event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.#ctor">
            <summary>
            Initializes a new instance of the RatingItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the RatingItem's MouseLeftButtonDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the RatingItem's MouseLeftButtonUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when the mouse enters the rating item.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            This method is invoked when the mouse leaves the rating item.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnClick">
            <summary>
            Sets the value to 1.0 when clicked.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Updates the visual state.
            </summary>
            <param name="useTransitions">A value indicating whether to use 
            transitions.</param>
        </member>
        <member name="M:System.Windows.Controls.RatingItem.OnCreateAutomationPeer">
            <summary>
            Returns a AccordionItemAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A AccordionItemAutomationPeer object for the AccordionItem.</returns>
        </member>
        <member name="P:System.Windows.Controls.RatingItem.DisplayValue">
            <summary>
            Gets the actual value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RatingItem.IsReadOnly">
            <summary>
            Gets a value indicating whether the control is read-only.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RatingItem.ParentRating">
            <summary>
            Gets or sets the parent rating of this rating item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RatingItem.Value">
            <summary>
            Gets or sets the value property.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.RatingItemAutomationPeer">
            <summary>
            Exposes RatingItem types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.#ctor(System.Windows.Controls.RatingItem)">
            <summary>
            Initializes a new instance of the RatingAutomationPeer class.
            </summary>
            <param name="owner">
            The Rating that is associated with this
            RatingAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized control type.
            </summary>
            <returns>The localized control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the RatingItem that is associated
            with this RatingItemAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Custom AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the RatingItem that is associated with this
            RatingItemAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name RatingItem.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the RatingItem that is associated
            with this RatingItemAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.GetNameCore">
            <summary>
            Returns the name of the rating item.  Uses the index of the rating
            item in the list.
            </summary>
            <returns>The name of the rating item.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the RatingItem to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current Rating from the collection of selected
            items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.RatingItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears selection from currently selected items and then proceeds to
            select the current Rating.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingItemAutomationPeer.OwnerRatingItem">
            <summary>
            Gets the RatingItem that owns this RatingItemAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether the Rating is selected.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.RatingItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements ISelectionProvider
            and acts as the container for the calling object.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.RatingSelectionMode">
            <summary>
            This type is used to determine the state of the item selected and the
            previous items.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.RatingSelectionMode.Continuous">
            <summary>
            All items before the selected ones are selected.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RatingSelectionMode.Individual">
            <summary>
            Only the item selected is visually distinguished.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Tuple`2">
            <summary>
            A structure that groups two values.
            </summary>
            <typeparam name="T0">The type of the first value.</typeparam>
            <typeparam name="T1">The type of the second value.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple structure.
            </summary>
            <param name="first">The first value.</param>
            <param name="second">The second value.</param>
        </member>
        <member name="P:System.Windows.Controls.Tuple`2.First">
            <summary>
            Gets the first value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Tuple`2.Second">
            <summary>
            Gets the second value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Tuple">
            <summary>
            A set of tuple functions.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Tuple.Create``2(``0,``1)">
            <summary>
            A method to create tuples.
            </summary>
            <typeparam name="T0">The type of the first item.</typeparam>
            <typeparam name="T1">The type of the second item.</typeparam>
            <param name="arg0">The type of the first argument.</param>
            <param name="arg1">The type of the second argument.</param>
            <returns>The tuple to return.</returns>
        </member>
        <member name="T:System.Windows.Controls.ButtonSpinner">
            <summary>
            Represents a spinner control that includes two Buttons.
            </summary>
            <remarks>
            ButtonSpinner inherits from Spinner. 
            It adds two button template parts and a content property.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.Spinner">
            <summary>
            Base class for controls that represents controls that can spin.
            </summary>
            <remarks>
            Spinner abstract class defines and implements common and focused visual state groups.
            Spinner abstract class defines and implements Spin event and OnSpin method.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Spinner.ValidSpinDirectionProperty">
            <summary>
            Identifies the ValidSpinDirection dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnValidSpinDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValidSpinDirectionProperty property changed handler.
            </summary>
            <param name="d">ButtonSpinner that changed its ValidSpinDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.#ctor">
            <summary>
            Initializes a new instance of the Spinner class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnSpin(System.Windows.Controls.SpinEventArgs)">
            <summary>
            Raises the OnSpin event when spinning is initiated by the end-user.
            </summary>
            <param name="e">Spin event args.</param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnValidSpinDirectionChanged(System.Windows.Controls.ValidSpinDirections,System.Windows.Controls.ValidSpinDirections)">
            <summary>
            Called when valid spin direction changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">A value indicating whether to automatically generate transitions to the new state, or instantly transition to the new state.</param>
        </member>
        <member name="P:System.Windows.Controls.Spinner.ValidSpinDirection">
            <summary>
            Gets or sets the spin direction that is currently valid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Spinner.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Spinner.Spin">
            <summary>
            Occurs when spinning is initiated by the end-user.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ElementIncreaseButtonName">
            <summary>
            Name constant of the IncreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ElementDecreaseButtonName">
            <summary>
            Name constant of the DecreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner._increaseButton">
            <summary>
            Private field for IncreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner._decreaseButton">
            <summary>
            Private field for DecreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentProperty property changed handler.
            </summary>
            <param name="d">ButtonSpinner that changed its Content.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.#ctor">
            <summary>
            Initializes a new instance of the ButtonSpinner class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ButtonSpinner control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnContentChanged(System.Object,System.Object)">
            <summary>
            Occurs when the Content property value changed.
            </summary>
            <param name="oldValue">The old value of the Content property.</param>
            <param name="newValue">The new value of the Content property.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle click event of IncreaseButton and DecreaseButton template parts,
            translating Click to appropriate Spin event.
            </summary>
            <param name="sender">Event sender, should be either IncreaseButton or DecreaseButton template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Cancel LeftMouseButtonUp events originating from a button that has
            been changed to disabled.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
            event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnValidSpinDirectionChanged(System.Windows.Controls.ValidSpinDirections,System.Windows.Controls.ValidSpinDirections)">
            <summary>
            Called when valid spin direction changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.SetButtonUsage">
            <summary>
            Disables or enables the buttons based on the valid spin direction.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.IncreaseButton">
            <summary>
            Gets or sets the IncreaseButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.DecreaseButton">
            <summary>
            Gets or sets the DecreaseButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.Content">
            <summary>
            Gets or sets the content that is contained within the button spinner.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.SpinDirection">
            <summary>
            Represents spin directions that could be initiated by the end-user.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SpinDirection.Increase">
            <summary>
            Represents a spin initiated by the end-user in order to Increase a value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SpinDirection.Decrease">
            <summary>
            Represents a spin initiated by the end-user in order to Decrease a value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.SpinEventArgs">
            <summary>
            Provides data for the Spinner.Spin event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.SpinEventArgs.#ctor(System.Windows.Controls.SpinDirection)">
            <summary>
            Initializes a new instance of the SpinEventArgs class.
            </summary>
            <param name="direction">Spin direction.</param>
        </member>
        <member name="P:System.Windows.Controls.SpinEventArgs.Direction">
            <summary>
            Gets the SpinDirection for the spin that has been initiated by the 
            end-user.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidSpinDirections">
            <summary>
            Represents spin directions that are valid.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.None">
            <summary>
            Can not increase nor decrease.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.Increase">
            <summary>
            Can increase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.Decrease">
            <summary>
            Can decrease.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ListTimePickerPopupAutomationPeer">
            <summary>
            Exposes ListTimePickerPopup types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer">
            <summary>
            Exposes TimePickerPopup types to UI Automation.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.#ctor(System.Windows.Controls.TimePickerPopup)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer"/> class.
            </summary>
            <param name="owner">The TimePickerPopup that is associated to this 
            AutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> 
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>Returns an AutomationPeer that can handle the the pattern,
            or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control from a string.
            </summary>
            <param name="value">The value to set.</param>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.RaiseValueAutomationEvent(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Raises the Value automation event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.TimePickerPopupOwner">
            <summary>
            Gets the TimePickerPopup that owns this AutomationPeer.
            </summary>
            <returns>The TimePicker that owns this AutomationPeer.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerPopupAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>
            The value of the control as a string.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.#ctor(System.Windows.Controls.ListTimePickerPopup)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.ListTimePickerPopupAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the type of the automation control.
            </summary>
            <returns>The Calendar AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/>
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>
            Returns an AutomationPeer that can handle the the pattern,
            or null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> 
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. 
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>The string ListTimePickerPopup.</returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI Automation provider for each child element that is 
            selected.
            </summary>
            <returns>An array of UI Automation providers.</returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopupAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> 
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. 
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopupAutomationPeer.TimePickerPopupOwner">
            <summary>
            Gets the ListTimePickerPopup that owns this AutomationPeer.
            </summary>
            <returns>The ListTimePickerPopup that owns this AutomationPeer.</returns>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopupAutomationPeer.OwnerListTimePickerPopup">
            <summary>
            Gets the ListTimePickerPopup that owns this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopupAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            allows more than one child element to be selected concurrently.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopupAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            requires at least one child element to be selected.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.PickerAutomationPeer">
            <summary>
            Exposes Picker types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.#ctor(System.Windows.Controls.Picker)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Automation.Peers.PickerAutomationPeer"/> class.
            </summary>
            <param name="owner">The Picker that is associated to this 
            AutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the Picker that is associated
            with this PickerAutomationPeer. This method is called by
            GetAutomationControlType.
            </summary>
            <returns>ComboBox AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the Picker that is associated with this
            PickerAutomationPeer. This method is called by
            GetClassName.
            </summary>
            <returns>The name Picker.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> 
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>Returns an AutomationPeer that can handle the the pattern,
            or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.Expand">
            <summary>
            Blocking method that returns after the element has been expanded.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.Collapse">
            <summary>
            Blocking method that returns after the element has been collapsed.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.PickerAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raises the ExpandCollapse automation event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Automation.Peers.PickerAutomationPeer.OwnerPicker">
            <summary>
            Gets the Picker that owns this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.PickerAutomationPeer.ExpandCollapseState">
            <summary>
            Gets an element's current Collapsed or Expanded state.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer">
            <summary>
            Exposes RangeTimePicker types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer.#ctor(System.Windows.Controls.RangeTimePickerPopup)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner of this AutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is 
            associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. 
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>The string RangeTimePickerPopupAutomationPeer.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the type of the automation control.
            </summary>
            <returns>The Calendar control type.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.RangeTimePickerPopupAutomationPeer.TimePickerPopupOwner">
            <summary>
            Gets the RangeTimePickerPopup that owns this AutomationPeer.
            </summary>
            <returns>The RangeTimePickerPopup that owns this AutomationPeer.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.TimePickerAutomationPeer">
            <summary>
            Exposes TimePicker types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerAutomationPeer.#ctor(System.Windows.Controls.TimePicker)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TimePickerAutomationPeer"/> class.
            </summary>
            <param name="owner">The TimePicker that is associated to this
            AutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the TimePicker that is associated with this
            PickerAutomationPeer. This method is called by
            GetClassName.
            </summary>
            <returns>The name Picker.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/>
            that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>Returns an AutomationPeer that can handle the the pattern,
            or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
            <summary>
            Sets the control's text value.
            </summary>
            <param name="value">The string value.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimePickerAutomationPeer.RaiseValueAutomationEvent(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Raises the Value automation event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerAutomationPeer.OwnerTimePicker">
            <summary>
            Gets the TimePicker that owns this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
            <summary>
            Gets a value indicating whether the value is read only.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TimePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
            <summary>
            Gets a string representation of the current text value.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TimeUpDownAutomationPeer">
            <summary>
            Exposes TimeUpDown types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimeUpDownAutomationPeer.#ctor(System.Windows.Controls.TimeUpDown)">
            <summary>
            Initializes a new instance of the TimeUpDownAutomationPeer class.
            </summary>
            <param name="owner">
            The TimeUpDown that is associated with this TimeUpDownAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TimeUpDownAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the TimeUpDown that is associated with this
            TimeUpDownAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name TimeUpDown.</returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.ItemSelectionHelper`1">
            <summary>
            Exposes an ObservableCollection of T and 
            a SelectedItem property for binding purposes.
            </summary>
            <typeparam name="T">The type of items.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ItemSelectionHelper`1.SelectedItemName">
            <summary>
            Name used for the SelectedItem property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ItemSelectionHelper`1.ItemsName">
            <summary>
            Name used for the Items property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ItemSelectionHelper`1._selectedItem">
            <summary>
            BackingField for the selected item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ItemSelectionHelper`1._items">
            <summary>
            BackingField for Items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ItemSelectionHelper`1.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ItemSelectionHelper`1.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="E:System.Windows.Controls.Primitives.ItemSelectionHelper`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ListTimePickerPopup">
            <summary>
            Represents a time picker popup that allows choosing time from a ListBox.
            </summary>
            <remarks>Can also be used independently.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.TimePickerPopup">
            <summary>
            Base class for a control that can be used as the popup portion in a TimePicker.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.ITimeInput">
            <summary>
            Interface describing the common value, maximum and minimum properties
            that a TimeInput control is expected to have.
            </summary>
            <remarks>Used for internal coercion of these properties.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.ITimeInput.Value">
            <summary>
            Gets or sets the current time.
            </summary>
            <value>The current time.</value>
        </member>
        <member name="P:System.Windows.Controls.ITimeInput.Minimum">
            <summary>
            Gets or sets the minimum time.
            </summary>
            <value>The minimum time.</value>
        </member>
        <member name="P:System.Windows.Controls.ITimeInput.Maximum">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.ContainedStateName">
            <summary>
            The name of the visual state that represents a Popup that is 
            contained by a picker.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.NotContainedStateName">
            <summary>
            The name of the visual state that represent a Popup that is not 
            contained by a picker.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.ContainedByPickerGroupName">
            <summary>
            The name of the ContainedByPicker state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.PopupModeGroupName">
            <summary>
            The name of the PopupMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.AllowSecondsAndDesignatorsSelectionStateName">
            <summary>
            The name of the visual state that represents a PopupMode where
            TimeDesignators, Hours, Minutes and Seconds can be picked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.AllowTimeDesignatorsSelectionStateName">
            <summary>
            The name of the visual state that represents a PopupMode where
            TimeDesignators, Hours and Minutes can be picked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.AllowSecondsSelectionStateName">
            <summary>
            The name of the visual state that represents a PopupMode where
            Hours, Minutes and Seconds can be picked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.HoursAndMinutesOnlyStateName">
            <summary>
            The name of the visual state that represents a PopupMode where
            Hours and Minutes can be picked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._timeCoercionHelper">
            <summary>
            Helper class that centralizes the coercion logic across all 
            TimeInput controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._timePickerParent">
            <summary>
            BackingField of TimePickerParent.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._ignoreValueChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="d">UpDownBase whose Value changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnMinimumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnMaximumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.CultureProperty">
            <summary>
            Identifies the Culture dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnCulturePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CultureProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Culture.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnCultureChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Called when the culture changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.TimeGlobalizationInfoProperty">
            <summary>
            Identifies the TimeGlobalizationInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnTimeGlobalizationInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeGlobalizationInfoProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeGlobalizationInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnTimeGlobalizationInfoChanged(System.Windows.Controls.TimeGlobalizationInfo,System.Windows.Controls.TimeGlobalizationInfo)">
            <summary>
            Called when the time globalization info changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._actualTimeGlobalizationInfo">
            <summary>
            BackingField for ActualTimeGlobalizationInfo.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.FormatProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FormatProperty property changed handler.
            </summary>
            <param name="d">TimePickerPopup that changed its Format.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnFormatChanged(System.Windows.Controls.ITimeFormat,System.Windows.Controls.ITimeFormat)">
            <summary>
            Called when display format changed.
            </summary>
            <param name="oldValue">The old format.</param>
            <param name="newValue">The new format.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup._actualFormat">
            <summary>
            BackingField for ActualFormat.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.PopupSecondsIntervalProperty">
            <summary>
            Identifies the PopupSecondsInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupSecondsIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupSecondsIntervalProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupSecondsInterval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupSecondsIntervalChanged(System.Int32,System.Int32)">
            <summary>
            Called when the popup seconds interval changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.PopupMinutesIntervalProperty">
            <summary>
            Identifies the PopupMinutesInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupMinutesIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupMinutesIntervalProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupMinutesInterval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupMinutesIntervalChanged(System.Int32,System.Int32)">
            <summary>
            Called when the popup minutes interval changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePickerPopup.PopupTimeSelectionModeProperty">
            <summary>
            Identifies the PopupTimeSelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupTimeSelectionModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupTimeSelectionModeProperty property changed handler.
            </summary>
            <param name="d">TimePickerPopup that changed its PopupTimeSelectionMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnPopupTimeSelectionModeChanged(System.Windows.Controls.PopupTimeSelectionMode,System.Windows.Controls.PopupTimeSelectionMode)">
            <summary>
            Called when the time selection mode is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimePickerPopup"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TimePickerPopup control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.DoCancel">
            <summary>
            Raises the Cancel event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.DoCommit">
            <summary>
            Raises the Commit event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnOpened">
            <summary>
            Called when the TimePicker control has opened this popup.
            </summary>
            <remarks>Called before the TimePicker reacts to value changes.
            This is done so that the Popup can 'snap' to a specific value without
            changing the selected value in the TimePicker.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnClosed">
            <summary>
            Called when the TimePicker control has closed this popup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanging event when Value property is changing.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual states.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.GetValidPopupTimeSelectionModes">
            <summary>
            Gets the valid popup time selection modes.
            </summary>
            <returns>An array of PopupTimeSelectionModes that are supported by
            the Popup.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.OnCreateAutomationPeer">
            <summary>
            Returns an AutomationPeer for use by the Silverlight 
            automation infrastructure.
            </summary>
            <returns>An AutomationPeer for the Popup object.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimePickerPopup.CreateAutomationPeer">
            <summary>
            Creates the automation peer.
            </summary>
            <returns>An AutomationPeer for this instance.</returns>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.TimePickerParent">
            <summary>
            Gets or sets the container for this Popup.
            </summary>
            <value>The TimePicker that contains this Popup.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.Value">
            <summary>
            Gets or sets the currently selected time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.Minimum">
            <summary>
            Gets or sets the Minimum time considered valid by the control.
            </summary>
            <remarks>Setting the Minimum property will be used to prevent users 
            from choosing values out of range in the TimePickerPopup.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.Maximum">
            <summary>
            Gets or sets the Maximum time considered valid by the control.
            </summary>
            <remarks>Setting the Maximum property will be used to prevent users 
            from choosing values out of range in the TimePickerPopup.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.Culture">
            <summary>
            Gets or sets the culture that will be used by the control for 
            time formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.ActualCulture">
            <summary>
            Gets the actual culture used by the control for formatting and parsing.
            </summary>
            <value>The actual culture.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.TimeGlobalizationInfo">
            <summary>
            Gets or sets the strategy object that determines how the control 
            interacts with DateTime and CultureInfo.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.ActualTimeGlobalizationInfo">
            <summary>
            Gets the actual TimeGlobalizationInfo used by the control.
            </summary>
            <remarks>If TimeGlobalizationInfo is not set, will return 
            default TimeGlobalizationInfo instance.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.Format">
            <summary>
            Gets or sets the Format used by the control. 
            From XAML Use either "Short", "Long" or a custom format. 
            Custom formats can only contain "H", "h", "m", "s" or "t". 
            For example: use 'hh:mm:ss' is used to format time as "13:45:30".
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.ActualFormat">
            <summary>
            Gets the actual format that will be used to display Time 
            in the TimePickerPopup. If no format is specified, ShortTimeFormat 
            is used.
            </summary>
            <value>The actual display format.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.PopupSecondsInterval">
            <summary>
            Gets or sets the interval of seconds that can be
            picked in a popup.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.PopupMinutesInterval">
            <summary>
            Gets or sets the interval of minutes that can be
            picked in a popup.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.PopupTimeSelectionMode">
            <summary>
            Gets or sets the whether the TimePickerPopup supports selecting 
            designators and/or seconds.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePickerPopup.ValueChanging">
            <summary>
            Occurs when Value property is changing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePickerPopup.ValueChanged">
            <summary>
            Occurs when Value property has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePickerPopup.Commit">
            <summary>
            Occurs when a selected item is committed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePickerPopup.Cancel">
            <summary>
            Occurs when a selection has been canceled.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.System#Windows#Controls#ITimeInput#Value">
            <summary>
            Gets or sets the Value property.
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.System#Windows#Controls#ITimeInput#Minimum">
            <summary>
            Gets or sets the minimum time.
            </summary>
            <value>The minimum time.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePickerPopup.System#Windows#Controls#ITimeInput#Maximum">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup.ListBoxPartName">
            <summary>
            The name of the ListBox TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup._listBoxPart">
            <summary>
            BackingField for ListBoxPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup._isValueChangeCausedBySelection">
            <summary>
            Determines whether the value changed because SelectedItem in the
            ListBox was changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup.ListBoxStyleProperty">
            <summary>
            Identifies the ListBoxStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnListBoxStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ListBoxStyleProperty property changed handler.
            </summary>
            <param name="d">ListTimePickerPopup that changed its ListBoxStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup.ListBoxItemStyleProperty">
            <summary>
            Identifies the ListBoxItemStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnListBoxItemStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ListBoxItemStyleProperty property changed handler.
            </summary>
            <param name="d">ListTimePickerPopup that changed its ListBoxItemStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup._allowWritingTimeItemsSelection">
            <summary>
            Indicates whether it is allowed to set the TimeItemsSelection property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ListTimePickerPopup.TimeItemsSelectionProperty">
            <summary>
            Identifies the TimeItemsSelection dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnTimeItemsSelectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeItemsSelectionProperty property changed handler.
            </summary>
            <param name="d">ListTimePickerPopup that changed its TimeItemsSelection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.ListTimePickerPopup"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ListTimePickerPopup control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnMinimumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnMaximumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnCultureChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Called when the culture changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnFormatChanged(System.Windows.Controls.ITimeFormat,System.Windows.Controls.ITimeFormat)">
            <summary>
            Called when format changed.
            </summary>
            <param name="oldValue">The old format.</param>
            <param name="newValue">The new format.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnPopupMinutesIntervalChanged(System.Int32,System.Int32)">
            <summary>
            Called when the popup minutes interval changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnPopupSecondsIntervalChanged(System.Int32,System.Int32)">
            <summary>
            Called when the popup seconds interval changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnPopupTimeSelectionModeChanged(System.Windows.Controls.PopupTimeSelectionMode,System.Windows.Controls.PopupTimeSelectionMode)">
            <summary>
            Called when the time selection mode is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.RegenerateTimeItems">
            <summary>
            Regenerates the time items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.SelectValue">
            <summary>
            Select a value based on the current value. This will 'snap' the 
            Value to the closest possible Time based on the interval.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.ScrollToSelectedValue">
            <summary>
            Scrolls to a value in the list, or closest.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.TimeItemsSelectionPropertyChanged(System.ComponentModel.INotifyPropertyChanged,System.ComponentModel.INotifyPropertyChanged)">
            <summary>
            Called when the TimeItems object is set.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.TimeItemsPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called by any property change on the TimeItems object.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnOpened">
            <summary>
            Called when TimePicker opened the popup.
            </summary>
            <remarks>Called before the TimePicker reacts to value changes.
            This is done so that the Popup can 'snap' to a specific value without
            changing the selected value in the TimePicker.</remarks>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.ItemSelectedByMouse(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseLeftButtonUp event of the ListBoxPart control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.GetValidPopupTimeSelectionModes">
            <summary>
            Gets the valid popup time selection modes.
            </summary>
            <returns>
            An array of PopupTimeSelectionModes that are supported by
            the Popup.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.CreateAutomationPeer">
            <summary>
            Creates the automation peer.
            </summary>
            <returns>The ListTimePickerPopupAutomationPeer for this instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.ListTimePickerPopup.RaiseAutomationPeerSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the automation peer selection changed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopup.ListBoxPart">
            <summary>
            Gets the ListBox part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopup.ListBoxStyle">
            <summary>
            Gets or sets the Style applied to the ListBox portion the 
            ListTimePickerPopup control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopup.ListBoxItemStyle">
            <summary>
            Gets or sets the Style applied to the ListBoxItems in the 
            ListTimePickerPopup control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ListTimePickerPopup.TimeItemsSelection">
            <summary>
            Gets the collection of times used in the ListBox portion of the 
            ListTimePickerPopup control.
            </summary>
            <value>The time items selection.</value>
        </member>
        <member name="T:System.Windows.Controls.RangeTimePickerPopup">
            <summary>
            Represents a time picker popup that allows choosing time through 3 
            sliders: Hours, Minutes and seconds.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.HoursSliderPartName">
            <summary>
            The HoursSliderPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.MinutesSliderPartName">
            <summary>
            The MinutesSliderPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.SecondsSliderPartName">
            <summary>
            The SecondsSliderPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.HoursContainerPartName">
            <summary>
            The HoursLabelsPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.MinutesContainerPartName">
            <summary>
            The MinutesLabelsPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.SecondsContainerPartName">
            <summary>
            The SecondsLabelsPartName.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.CommitButtonPartName">
            <summary>
            The name of the CommitButton TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.CancelButtonPartName">
            <summary>
            The name of the CancelButton TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._secondsSlider">
            <summary>
            BackingField for the SecondsSlider.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._minutesSlider">
            <summary>
            BackingField for the MinutesSlider.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._hoursSlider">
            <summary>
            BackingField for the HoursSlider.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._cancelButtonPart">
            <summary>
            BackingField for CancelButtonPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._commitButtonPart">
            <summary>
            BackingField for CommitButtonPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._isOpenedByContainer">
            <summary>
            Is set when opened or closed by a container.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup._ignoreSliderChange">
            <summary>
            Determines whether the control should ignore the changes in its 
            sliders.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.SliderStyleProperty">
            <summary>
            Identifies the SliderStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnSliderStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SliderStyleProperty property changed handler.
            </summary>
            <param name="d">RangeTimePickerPopup that changed its SliderStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.RangeTimePickerPopup.TimeButtonStyleProperty">
            <summary>
            Identifies the TimeButtonStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnTimeButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeButtonStyleProperty property changed handler.
            </summary>
            <param name="d">RangeTimePickerPopup that changed its TimeButtonStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.RangeTimePickerPopup"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnApplyTemplate">
            <summary>
            Builds the visual tree for the RangeTimePickerPopup control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.SliderSizeChange(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when a slider changes size.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.SecondsChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Reacts to a change in the Seconds Slider.
            </summary>
            <param name="sender">The Slider that changed its value.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.MinutesChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Reacts to a change in the Minutes Slider.
            </summary>
            <param name="sender">The Slider that changed its value.</param>
            <param name="e">The instance containing the event data.</param>        
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.HoursChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Reacts to a change in the Hours Slider.
            </summary>
            <param name="sender">The Slider that changed its value.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnOpened">
            <summary>
            Called when the TimePicker control has opened this popup.
            </summary>
            <remarks>Called before the TimePicker reacts to value changes.
            This is done so that the Popup can 'snap' to a specific value without
            changing the selected value in the TimePicker.</remarks>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnClosed">
            <summary>
            Called when the TimePicker control has closed this popup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnCommit(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called by the commit button.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called by the cancel button.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.GetValueFromSliders">
            <summary>
            Calculates the value based on the sliders.
            </summary>
            <returns>The DateTime as represented by the current values in the 
            Sliders.</returns>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.SetSlidersToValue(System.DateTime)">
            <summary>
            Sets the sliders to value.
            </summary>
            <param name="value">The DateTime that needs to be reflected by
            the three sliders.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.GenerateLabels">
            <summary>
            Generates the labels.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.SetEnabledStatusOnLabels">
            <summary>
            Sets the enabled status on the labels.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.LayoutLabels">
            <summary>
            Arranges the time labels on the RangeTimePickerPopup control.
            </summary>
            <remarks>Uses a canvas to layout labels vertically.</remarks>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.OnLabelClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when a label is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.GetCoercedValue(System.DateTime)">
            <summary>
            Gets the value after Minimum and Maximum coercion.
            </summary>
            <param name="time">The input.</param>
            <returns>Time between Minimum and Maximum.</returns>
            <remarks>Done to avoid coercion in containing controls.</remarks>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.GetSnappedValue(System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the coerced value, using interval and a minimum and maximum.
            </summary>
            <param name="value">The value that will be snapped.</param>
            <param name="minimum">The minimum the value may be.</param>
            <param name="maximum">The maximum the value may be.</param>
            <param name="interval">The interval to which the value gets snapped.</param>
            <returns>A value that is within range and snapped to an interval.</returns>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.CreateLabelElement(System.String,System.TimeSpan)">
            <summary>
            Creates the element for a label.
            </summary>
            <param name="text">The text that is set as content.</param>
            <param name="timespan">The TimeSpan that is represented by the Button.</param>
            <returns>A Button representing the label.</returns>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.GetValidPopupTimeSelectionModes">
            <summary>
            Gets the valid popup time selection modes.
            </summary>
            <returns>
            An array of PopupTimeSelectionModes that are supported by
            the Popup.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.RangeTimePickerPopup.CreateAutomationPeer">
            <summary>
            Creates the automation peer.
            </summary>
            <returns>The RangeTimePickerPopupAutomationPeer for this instance.</returns>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.SecondsSlider">
            <summary>
            Gets or sets the seconds slider Part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.MinutesSlider">
            <summary>
            Gets or sets the minutes slider.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.HoursSlider">
            <summary>
            Gets or sets the HoursSlider.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.HoursContainer">
            <summary>
            Gets or sets the hours labels.
            </summary>
            <value>The hours labels.</value>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.MinutesContainer">
            <summary>
            Gets or sets the minute labels.
            </summary>
            <value>The minute labels.</value>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.SecondsContainer">
            <summary>
            Gets or sets the second labels.
            </summary>
            <value>The second labels.</value>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.CancelButtonPart">
            <summary>
            Gets or sets the cancel button part.
            </summary>
            <value>The cancel button part.</value>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.CommitButtonPart">
            <summary>
            Gets or sets the commit button part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.IsCurrentlyOpen">
            <summary>
            Gets a value indicating whether this instance is currently open.
            </summary>
            <value><c>True</c> if this instance is currently open; 
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.SliderStyle">
            <summary>
            Gets or sets the Style applied to the sliders in the 
            RangeTimePickerPopup control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RangeTimePickerPopup.TimeButtonStyle">
            <summary>
            Gets or sets the Style applied to the buttons that represent
            hours, minutes and seconds.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TimePickerPopupTemplate">
            <summary>
            Describes the template used to instantiate a Popup for TimePicker.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.PopupTimeSelectionMode">
            <summary>
            Determines the granularity of time selection
            by a popup. Hours and minutes are always used.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.PopupTimeSelectionMode.AllowSecondsSelection">
            <summary>
            Hours, Minutes and Seconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PopupTimeSelectionMode.HoursAndMinutesOnly">
            <summary>
            Hours and Minutes.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CustomTimeFormat">
            <summary>
            Represents a single time format used for parsing and formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ITimeFormat">
            <summary>
            Defines time formats used for formatting and parsing DateTime values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)">
            <summary>
            Gets the format to use to display a DateTime as a time value.
            </summary>
            <param name="culture">The culture.</param>
            <returns>A format to use during display of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)">
            <summary>
            Gets the formats to use to parse a string to a DateTime.
            </summary>
            <param name="culture">Culture used to determine formats.</param>
            <returns>An array of formats to be used during parsing.</returns>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.CustomTimeFormat"/> class.
            </summary>
            <param name="format">The format that is used to parse or display
            a String or DateTime.</param>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.CustomTimeFormat"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)">
            <summary>
            Gets the format to use to display a DateTime as a time value.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            A format to use during display of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)">
            <summary>
            Gets the format to use to parse a string to a DateTime.
            </summary>
            <param name="culture">Culture used to determine formats.</param>
            <returns>
            An array of formats to be used during parsing.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare 
            with the current <see cref="T:System.Object"/>.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal 
            to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.op_Equality(System.Windows.Controls.CustomTimeFormat,System.Windows.Controls.CustomTimeFormat)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.op_Inequality(System.Windows.Controls.CustomTimeFormat,System.Windows.Controls.CustomTimeFormat)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.CustomTimeFormat.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.CustomTimeFormat.Format">
            <summary>
            Gets or sets the custom format that is used to parse or display
            a String or DateTime.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.LongTimeFormat">
            <summary>
            Represents the long time format used for parsing and formatting.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)">
            <summary>
            Gets the format to use to display a DateTime as a time value.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            A format to use during display of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)">
            <summary>
            Gets the formats to use to parse a string to a DateTime.
            </summary>
            <param name="culture">Culture used to determine formats.</param>
            <returns>
            An array of formats to be used during parsing.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare 
            with the current <see cref="T:System.Object"/>.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal 
            to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.op_Equality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.op_Inequality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.LongTimeFormat.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.ShortTimeFormat">
            <summary>
            Represents the short time format used for parsing and formatting.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)">
            <summary>
            Gets the format to use to display a DateTime as a time value.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            A format to use during display of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)">
            <summary>
            Gets the formats to use to parse a string to a DateTime.
            </summary>
            <param name="culture">Culture used to determine formats.</param>
            <returns>
            An array of formats to be used during parsing.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare 
            with the current <see cref="T:System.Object"/>.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal 
            to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.op_Equality(System.Windows.Controls.ShortTimeFormat,System.Windows.Controls.ShortTimeFormat)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.op_Inequality(System.Windows.Controls.ShortTimeFormat,System.Windows.Controls.ShortTimeFormat)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left instance to compare.</param>
            <param name="right">The right instance to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:System.Windows.Controls.ShortTimeFormat.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.TimeFormatConverter">
            <summary>
            Converts from a string value to an ITimeFormat instance. Converts "Short" 
            to ShortTimeFormat, "Long" to LongTimeFormat and any other strings to 
            CustomTimeFormat. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert from the specified type 
            descriptor context.
            </summary>
            <param name="typeDescriptorContext">The type descriptor context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>True</c> if this instance can convert from the specified 
            type descriptor context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert to the specified type 
            descriptor context.
            </summary>
            <param name="typeDescriptorContext">The type descriptor context.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>
            	<c>True</c> if this instance can convert to the specified type 
            descriptor context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts instances of type string to an instance of type ITimeFormat.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert.</param>
            <param name="source">
            The string that is converted.
            </param>
            <returns>
            An instance of ITimeFormat that is the value of the conversion.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts an known instance of type ITimeFormat to a string.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert.</param>
            <param name="value">
            The value that is being converted to a specified type.
            </param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.TimeGlobalizationInfo">
            <summary>
            Strategy object that determines how controls interact with DateTime and 
            CultureInfo.
            </summary>
            <remarks>TimeInput supports only the following formatting characters:
            'h', 'm', 's', 'H', 't'. All other characters are filtered out:
            'd', 'f', 'F', 'g', 'K', 'M', 'y', 'z'.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TimeGlobalizationInfo.TimeChars">
            <summary>
            The characters that are allowed inside a format.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetTransformedFormat(System.String)">
            <summary>
            Transforms a format to a format that only allows the characters
            h, m, s, t, H and the defined TimeSeparators (: and .).
            Also takes into account the rule that a single TimeCharacter should
            be followed by a space.
            </summary>
            <param name="format">The format that needs to be transformed.</param>
            <returns>A format containing only the expected characters.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.MapDigitToCharacter(System.Int32)">
            <summary>
            Returns the global representation of each integer formatted 
            by the TimeGlobalizationInfo.
            </summary>
            <param name="input">Character that will be mapped to a different
            character.</param>
            <returns>The global version of a character that represents the input.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.MapCharacterToDigit(System.Char)">
            <summary>
            Returns the European number character of each global representation 
            parsed by the TimeGlobalizationInfo.
            </summary>
            <param name="input">The global version of the character that needs 
            to be mapped to a regular character.</param>
            <returns>The character that represents the global version of a character.</returns>
            <remarks>All characters pass through this method (whitespaces and
            TimeDesignators). Return the input character if no logical mapping
            could be made.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetActualTimeParsers(System.Collections.Generic.IEnumerable{System.Windows.Controls.TimeParser})">
            <summary>
            Gets the actual TimeParsers that will be used for parsing.
            </summary>
            <param name="parsers">The parsers that are currently used by parent.</param>
            <returns>A new collection of parsers that represent the parsers
            this strategy object will use.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.FormatTime(System.Nullable{System.DateTime},System.Windows.Controls.ITimeFormat,System.Char[])">
            <summary>
            Formats the specified DateTime to a time string representation.
            </summary>
            <param name="value">The DateTime that should be formatted.</param>
            <param name="timeFormat">The time format used to describe how value
            should be formatted.</param>
            <param name="timeCharacters">The allowed characters in the format. 
            Leave empty to indicate that all characters are allowed. See remarks.</param>
            <returns>
            A string that represents the time part of a DateTime.
            </returns>
            <remarks>The TimeFormat will contain TimeCharacters in a certain 
            order, like hh:mm:ss. By passing specific TimeCharacters, these
            will get filtered and the method only returns part of the formatted
            string. Example: pass 'h', 't', 'H' to get back 4 AM, if the culture
            was set to en-US.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.ParseTime(System.String,System.Windows.Controls.ITimeFormat,System.Collections.Generic.IEnumerable{System.Windows.Controls.TimeParser})">
            <summary>
            Parses a string into a DateTime using the specified ITimeFormat instance 
            and TimeParsers.
            </summary>
            <param name="mappedText">The text that was entered by the user.</param>
            <param name="timeFormat">The TimeFormat instance used to supply
            formats.</param>
            <param name="timeParsers">The time parsers.</param>
            <returns>
            A DateTime with a correctly set time part.
            </returns>
            <remarks>The date part of the DateTime is irrelevant and will be
            overwritten by the current date.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.TryParseTime(System.String,System.Windows.Controls.ITimeFormat,System.Collections.Generic.IEnumerable{System.Windows.Controls.TimeParser},System.Nullable{System.DateTime}@)">
            <summary>
            Parses a string into a DateTime using the specified ITimeFormat instance 
            and TimeParsers and returns a value that indicates whether the conversion 
            succeeded.
            </summary>
            <param name="mappedText">The text that was entered by the user.</param>
            <param name="timeFormat">The TimeFormat instance used to supply
            formats.</param>
            <param name="timeParsers">The time parsers.</param>
            <param name="result">A DateTime with a correctly set time part.</param>
            <returns>
            True, if the time was parsed correctly, false if the time was not 
            parsed.
            </returns>
            <remarks>The date part of the DateTime is irrelevant and will be
            overwritten by the current date.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetTimeUnitAtTextPosition(System.String,System.Int32,System.Windows.Controls.ITimeFormat)">
            <summary>
            Gets the time unit that is represented by a text position.
            </summary>
            <param name="text">The text that represents a DateTime.</param>
            <param name="textPosition">The location in the text.</param>
            <param name="timeFormat">The time format describe how the text 
            can be parsed to a DateTime.</param>
            <returns>
            The TimeSpan that is represented by the character at a
            specific caret position.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetTextPositionForTimeUnit(System.String,System.TimeSpan,System.Windows.Controls.ITimeFormat)">
            <summary>
            Gets the position for a time unit in a string that can be parsed by 
            the specified ITimeFormat.
            </summary>
            <param name="text">The text that represents a DateTime.</param>
            <param name="timeSpan">The time span that is searched for.</param>
            <param name="timeFormat">The time format that describes how this text can be
            parsed to a DateTime.</param>
            <returns>
            The position in the text that corresponds to the TimeSpan or
            -1 if none was found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.OnIncrement(System.DateTime,System.TimeSpan)">
            <summary>
            Performs addition of a date time and a time span in a global context.
            </summary>
            <param name="value">The value.</param>
            <param name="timeSpan">The time span.</param>
            <returns>The DateTime after incrementing by TimeSpan.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.OnDecrement(System.DateTime,System.TimeSpan)">
            <summary>
            Subtracts a time span from a date time in a global context.
            </summary>
            <param name="value">The value.</param>
            <param name="timeSpan">The time span.</param>
            <returns>The DateTime after decrementing by TimeSpan.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetDesignatorTextPositionStart(System.String)">
            <summary>
            Gets the caret position at the start of the designator.
            </summary>
            <param name="text">The text that might include a designator.</param>
            <returns>Caret position for the end of the designator,
            or -1 if none found.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeGlobalizationInfo.GetDesignatorTextPositionEnd(System.String,System.Int32)">
            <summary>
            Gets the caret position at the end of the designator.
            </summary>
            <param name="text">The text that might include a designator.</param>
            <param name="designatorStartIndex">Start index of the designator.</param>
            <returns>
            Caret position for the end of the designator,
            or -1 if none found.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.TimeGlobalizationInfo.Culture">
            <summary>
            Gets or sets the culture used by the owning TimeInput control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeGlobalizationInfo.ActualCulture">
            <summary>
            Gets the actual culture used by the TimeGlobalizationInfo for formatting 
            and parsing.
            </summary>
            <value>The actual culture.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeGlobalizationInfo.TimeSeparators">
            <summary>
            Gets the characters that may be used to separate components of time,
            that is, hours, minutes and seconds.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeGlobalizationInfo.AMDesignator">
            <summary>
            Gets the string designator for hours that are "ante meridiem" 
            (before noon).
            </summary>
            <value>The AM designator.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeGlobalizationInfo.PMDesignator">
            <summary>
            Gets the string designator for hours that are "post meridiem" 
            (after noon).
            </summary>
            <value>The PM designator.</value>
        </member>
        <member name="T:System.Windows.Controls.Picker">
            <summary>
            Base class for all controls that have popup functionality.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Picker.ElementPopupName">
            <summary>
            Name constant for Popup.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker.ElementDropDownToggleName">
            <summary>
            Name constant for DropDownToggle.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._dropDownPopup">
            <summary>
            BackingField for PopupPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._dropDownToggleButton">
            <summary>
            BackingField for DropDownTogglePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker.IsDropDownOpenProperty">
            <summary>
            Identifies the IsDropDownOpen dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnIsDropDownOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">Picker that changed its IsDropDownOpen.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Picker.PopupButtonModeProperty">
            <summary>
            Identifies the PopupButtonMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnPopupButtonModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupButtonModeProperty property changed handler.
            </summary>
            <param name="d">Picker that changed its PopupButtonMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Picker.MaxDropDownHeightProperty">
            <summary>
            Identifies the MaxDropDownHeight dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMaxDropDownHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxDropDownHeightProperty property changed handler.
            </summary>
            <param name="d">Picker that changed its MaxDropDownHeight.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Picker._popupChild">
            <summary>
            BackingField for PopupChild.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._outsidePopupCanvas">
            <summary>
            Gets or sets the expansive area outside of the popup.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._popupChildCanvas">
            <summary>
            Gets or sets the canvas for the popup child.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._ignorePropertyChange">
            <summary>
            Gets or sets a value indicating whether to ignore calling a pending 
            change handlers. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._popupClosedVisualState">
            <summary>
            Gets or sets a value indicating whether a visual popup state is 
            being used in the current template for the Closed state. Setting 
            this value to true will delay the actual setting of Popup.IsOpen 
            to false until after the visual state's transition for Closed is 
            complete.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Picker._popupHasOpened">
            <summary>
            A value indicating whether the popup has been opened at least once.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Picker"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Picker control when a new template is 
            applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.GetSelectedValue">
            <summary>
            Gets the selected value represented in the control.
            </summary>
            <returns>The value that is picked.</returns>
        </member>
        <member name="M:System.Windows.Controls.Picker.ArrangePopup">
            <summary>
            Arrange the drop down popup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Picker.OpenDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly opens the popup, checks the expander 
            button, and then fires the Opened event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.CloseDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly closes the popup, flips the Checked 
            value, and then fires the Closed event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.ToggleButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Opens or closes the popup if reacting to button press.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnPopupClosedStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Actually closes the popup after the VSM state animation completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OutsidePopupMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse has clicked outside of the popup.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.ControlIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the change of the IsEnabled property.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMaxDropDownHeightChanged(System.Double)">
            <summary>
            Handles MaxDropDownHeightChanged by re-arranging and updating the 
            popup arrangement.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.PopupChildGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has received focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.PopupChildLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has lost focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.PopupChildMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The popup child has had the mouse enter its bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.PopupChildMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The mouse has left the popup child's bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.PopupChildSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            The size of the popup child has changed.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnDropDownOpening(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the DropDownOpening event.
            </summary>
            <param name="e">
            Provides any observers the opportunity to cancel the operation and 
            halt opening the drop down.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the DropDownOpened event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnDropDownClosing(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the DropDownClosing event.
            </summary>
            <param name="e">
            Provides any observers the opportunity to cancel the operation 
            and halt closing the drop down.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the DropDownClosed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.FocusChanged(System.Boolean)">
            <summary>
            Handles the FocusChanged event.
            </summary>
            <param name="hasFocus">A value indicating whether the control 
            currently has the focus.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.HasFocus">
            <summary>
            Checks to see if the control has focus currently.
            </summary>
            <returns>Returns a value indicating whether the control or its popup
            have focus.</returns>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Picker.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Picker.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Picker.DropDownPopup">
            <summary>
            Gets or sets the popup part.
            </summary>
            <value>The popup part.</value>
        </member>
        <member name="P:System.Windows.Controls.Picker.DropDownToggleButton">
            <summary>
            Gets or sets the drop down toggle part.
            </summary>
            <value>The drop down toggle part.</value>
        </member>
        <member name="P:System.Windows.Controls.Picker.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the drop-down portion 
            of the control is open.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Picker.PopupButtonMode">
            <summary>
            Gets or sets the button event that causes the popup portion of the 
            Picker control to open.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Picker.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop-down portion of the 
            Picker control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Picker.PopupChild">
            <summary>
            Gets the element shown in the drop down portion of the Picker control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Picker.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Picker.DropDownOpening">
            <summary>
            Occurs when the value of the IsDropDownOpen property is changing from 
            false to true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Picker.DropDownOpened">
            <summary>
            Occurs when the value of the IsDropDownOpen property has changed from 
            false to true and the drop-down is open.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Picker.DropDownClosing">
            <summary>
            Occurs when the IsDropDownOpen property is changing from true to false.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Picker.DropDownClosed">
            <summary>
            Occurs when the IsDropDownOpen property was changed from true to false 
            and the drop-down is open.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TimeCoercionHelper">
            <summary>
            Helper class that centralizes the coercion logic across all 
            TimeInput controls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TimeCoercionHelper._timeInputControl">
            <summary>
            The TimeInput control that needs to be coerced.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeCoercionHelper.#ctor(System.Windows.Controls.ITimeInput)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimeCoercionHelper"/> class.
            </summary>
            <param name="timeInput">The time input that this helper will coerce.</param>
            <remarks>Lifetime of this helper class is determined by lifetime
            of control it is coercing.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeCoercionHelper.ProcessMinimumChange(System.Nullable{System.DateTime})">
            <summary>
            Processes the minimum value being set.
            </summary>
            <param name="newMinimum">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeCoercionHelper.ProcessMaximumChange(System.Nullable{System.DateTime})">
            <summary>
            Processes the maximum value being set.
            </summary>
            <param name="newMaximum">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeCoercionHelper.CoerceValue(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Coerces the value.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <returns>
            True if no coercion was needed and the value will not be
            modified, false if the coercion logic will set a different value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeCoercionHelper.CoerceValueOnRangeMove(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Coerces the value.
            </summary>
            <param name="newMinimum">The new minimum.</param>
            <param name="newMaximum">The new maximum.</param>
            <returns>True if no coercion was needed and the value will not be
            modified, false if the coercion logic will set a different value.</returns>
        </member>
        <member name="T:System.Windows.Controls.TimeParser">
            <summary>
            Converts the specified string representation of a time to its DateTime 
            equivalent.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)">
            <summary>
            Converts the specified string representation of a time to its DateTime 
            equivalent and returns a value that indicates whether the conversion 
            succeeded.
            </summary>
            <param name="text">The text that should be parsed.</param>
            <param name="culture">The culture being used.</param>
            <param name="result">The parsed DateTime.</param>
            <returns>True if the parse was successful, false if it was not.</returns>
        </member>
        <member name="T:System.Windows.Controls.TimeParserCollection">
            <summary>
            Represents a collection of TimeParser objects.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TimeParserCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimeParserCollection"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeParserCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Controls.TimeParser})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimeParserCollection"/> class.
            </summary>
            <param name="parsers">A sequence of TimeParser objects that will
            be copied into this collection.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeParserCollection.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)">
            <summary>
            Tries to parse a string to a DateTime.
            </summary>
            <param name="text">The text that should be parsed.</param>
            <param name="culture">The culture being used.</param>
            <param name="result">The parsed DateTime.</param>
            <returns>True if the parse was successful, false if it was not.</returns>
        </member>
        <member name="T:System.Windows.Controls.CatchallTimeParser">
            <summary>
            TimeParser that will allow very loose time to be entered. It will try
            to parse the first two numbers as hours and the second two numbers as 
            minutes, and will not care about other characters, such as designators,
            separators or non-time related characters.
            If the first character is bigger than 2, it will parse only the first 
            character as an hour and will use the second two characters for minutes.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CatchallTimeParser.exp">
            <summary>
            Expression used to parse.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CatchallTimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)">
            <summary>
            Tries to parse a string to a DateTime.
            </summary>
            <param name="text">The text that should be parsed.</param>
            <param name="culture">The culture being used.</param>
            <param name="result">The parsed DateTime.</param>
            <returns>
            True if the parse was successful, false if it was not.
            </returns>
            <remarks>The parsing is culture insensitive. A user can type 8p to
            indicate 20:00:00, or 20.</remarks>
        </member>
        <member name="T:System.Windows.Controls.TimePicker">
            <summary>
            Represents a control that allows the user to select a time.
            </summary>
            <remarks>TimeInput supports only the following formatting characters:
            'h', 'm', 's', 'H', 't'. All other characters are filtered out:
            'd', 'f', 'F', 'g', 'K', 'M', 'y', 'z'.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.ElementTimeUpDownName">
            <summary>
            The name for the TimeUpDown element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.TimeUpDownStyleName">
            <summary>
            The name for the TimeUpDownStyle element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.ElementPopupPlaceHolderPartName">
            <summary>
            The name for the PopupPlaceHolder element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._timeUpDownPart">
            <summary>
            BackingField for TimeUpDownPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._popupPlaceHolderPart">
            <summary>
            BackingField for PopupPlaceHolderPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._timeCoercionHelper">
            <summary>
            Helper class that centralizes the coercion logic across all 
            TimeInput controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._popupSessionValueCache">
            <summary>
            Cache of the value before we open a popup.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._isInitialized">
            <summary>
            Indicates that the control has finished initialization.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._ignoreValueChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="d">UpDownBase whose Value changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnMinimumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnMaximumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.TimeUpDownStyleProperty">
            <summary>
            Identifies the TimeUpDownStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnTimeUpDownStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeUpDownStyleProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its TimeUpDownStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.SpinnerStyleProperty">
            <summary>
            Identifies the SpinnerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnSpinnerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SpinnerStyleProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its SpinnerStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.TimeParsersProperty">
            <summary>
            Identifies the TimeParsers dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnTimeParsersPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeParsersProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeParsers.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.FormatProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FormatProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its Format.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._actualFormat">
            <summary>
            BackingField for ActualFormat.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.CultureProperty">
            <summary>
            Identifies the Culture dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnCulturePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CultureProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Culture.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.TimeGlobalizationInfoProperty">
            <summary>
            Identifies the TimeGlobalizationInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnTimeGlobalizationInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeGlobalizationInfoProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeGlobalizationInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._actualTimeGlobalizationInfo">
            <summary>
            BackingField for ActualTimeGlobalizationInfo.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.PopupProperty">
            <summary>
            Identifies the Popup dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnPopupPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its Popup.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.PopupTemplateProperty">
            <summary>
            Identifies the PopupTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnPopupTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupTemplateProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupTemplate.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._instantiatedPopupFromTemplate">
            <summary>
            BackingField for InstantiatedPopupFromTemplate.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.PopupSecondsIntervalProperty">
            <summary>
            Identifies the PopupSecondsInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnPopupSecondsIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupSecondsIntervalProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupSecondsInterval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._isPopupSecondsInitialized">
            <summary>
            Determines whether PopupSeconds has been changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.PopupMinutesIntervalProperty">
            <summary>
            Identifies the PopupMinutesInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnPopupMinutesIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupMinutesIntervalProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupMinutesInterval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimePicker._isPopupMinutesInitialized">
            <summary>
            Determines whether PopupMinutes has been changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimePicker.PopupTimeSelectionModeProperty">
            <summary>
            Identifies the PopupTimeSelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnPopupTimeSelectionModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PopupTimeSelectionModeProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its PopupTimeSelectionMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimePicker"/> 
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TimePicker control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.GetSelectedValue">
            <summary>
            Gets the selected time  represented in the control.
            </summary>
            <returns>The value that is picked.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanging event when Value property is changing.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.TimeUpDownValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Reacts to a change in value in TimeUpDown.
            </summary>
            <param name="sender">The TimeUpDown that changed its value.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.TimeUpDownParseError(System.Object,System.Windows.Controls.UpDownParseErrorEventArgs)">
            <summary>
            Raised when TimeUpDown raises this event.
            </summary>
            <param name="sender">The TimeUpDown instance raising this event.</param>
            <param name="e">The instance containing the event data.</param>
            <remarks>Here to make it easier to access
            these events.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.TimeUpDownParsing(System.Object,System.Windows.Controls.UpDownParsingEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raised when TimeUpDown raises this event.
            </summary>
            <param name="sender">The TimeUpDown instance raising this event.</param>
            <param name="e">The instance containing the event data.</param>
            <remarks>Here to make it easier to access
            these events.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownOpened event when the IsDropDownOpen property
            changed from false to true.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownClosed event when the IsDropDownOpen property
            changed from true to false.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.PopupValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Reacts to a Value change in a popup.
            </summary>
            <param name="sender">The Popup that raised a ValueChange.</param>
            <param name="e">The  instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.PopupCommitted(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The Popup has been committed. Will close the popup.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.PopupCanceled(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The Popup has been canceled. Will close the popup,
            and set the value back to its initial value.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.RegisterPopup(System.Windows.Controls.TimePickerPopup)">
            <summary>
            Called when a new Popup is set.
            </summary>
            <param name="popup">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.UnregisterPopup(System.Windows.Controls.TimePickerPopup)">
            <summary>
            Unregisters the popup.
            </summary>
            <param name="popup">The old value.</param>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.InstantiatePopupFromTemplate">
            <summary>
            Instantiates the template.
            </summary>
            <remarks>Will only use template if Popup is not set.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.PropagateNewValue">
            <summary>
            Propagates the new value to components that are part of
            our template.
            </summary>
            <remarks>Workaround for SL2 inability to do twoway 
            templatebinding. Should remove in SL3.</remarks>
        </member>
        <member name="M:System.Windows.Controls.TimePicker.OnCreateAutomationPeer">
            <summary>
            Returns a PickerAutomationPeer for use by the Silverlight 
            automation infrastructure.
            </summary>
            <returns>A PickerAutomationPeer for the Picker object.</returns>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.TimeUpDownPart">
            <summary>
            Gets or sets the time up down part.
            </summary>
            <value>The time up down part.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.PopupPlaceHolderPart">
            <summary>
            Gets or sets the popup place holder part.
            </summary>
            <remarks>This is the ContentControl that is used to display
            Popups.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Value">
            <summary>
            Gets or sets the currently selected time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Minimum">
            <summary>
            Gets or sets the minimum time considered valid by the control.
            </summary>
            <remarks>Setting the minimum property is applicable for the following 
            features: Selecting a value through a popup, Parsing a new value from 
            the textbox, spinning a new value and programmatically specifying a value.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Maximum">
            <summary>
            Gets or sets the maximum time considered valid by the control.
            </summary>
            <remarks>Setting the Maximum property is applicable for the following 
            features: Selecting a value through a popup, Parsing a new value 
            from the textbox, spinning a new value and programmatically specifying 
            a value. </remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.TimeUpDownStyle">
            <summary>
            Gets or sets the Style applied to the TimeUpDown portion of the TimePicker 
            control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.SpinnerStyle">
            <summary>
            Gets or sets the Style that is applied to the spinner.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.TimeParsers">
            <summary>
            Gets or sets a collection of TimeParsers that are used when parsing 
            text to time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.ActualTimeParsers">
            <summary>
            Gets the actual TimeParsers that will be used for parsing by the control.
            </summary>
            <remarks>Includes the TimeParsers introduced in the TimeGlobalizationInfo.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Format">
            <summary>
            Gets or sets the Format used by the control. From XAML Use either 
            "Short", "Long" or a custom format. 
            Custom formats can only contain "H", "h", "m", "s" or "t". 
            For example: use 'hh:mm:ss' is used to format time as "13:45:30".
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.ActualFormat">
            <summary>
            Gets the actual format that will be used to display Time in the 
            TimePicker. If no format is specified, ShortTimeFormat is used.
            </summary>
            <value>The actual display format.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Culture">
            <summary>
            Gets or sets the culture that will be used by the control for 
            parsing and formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.ActualCulture">
            <summary>
            Gets the actual culture used by the control for formatting and parsing.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.TimeGlobalizationInfo">
            <summary>
            Gets or sets the strategy object that determines how the control 
            interacts with DateTime and CultureInfo. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.ActualTimeGlobalizationInfo">
            <summary>
            Gets the actual TimeGlobalization info used by the control.
            </summary>
            <remarks>If TimeGlobalizationInfo is not set, will return 
            default TimeGlobalizationInfo instance.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.ActualTimePickerPopup">
            <summary>
            Gets the TimePickerPopup that is used by the TimePicker. This
            can be either a popup created from the PopupTemplate, or a popup
            set directly to the Popup property. When both are set, the Popup
            property will win.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.Popup">
            <summary>
            Gets or sets the TimePickerPopup that will be shown to the user by the 
            TimePicker control. This property may not be styled. To style a 
            TimePicker with a Popup, please use the PopupTemplate property.
            When both PopupTemplate and Popup are set, Popup will be used.
            </summary>
            <remark>This property might be null, since a template can be used.</remark>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.PopupTemplate">
            <summary>
            Gets or sets the template used as Popup. A Popup can also be set
            directly on the Popup property. When both PopupTemplate and Popup
            are set, Popup will be used. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.PopupSecondsInterval">
            <summary>
            Gets or sets the seconds interval between time values allowed by 
            the TimePickerPopup.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.PopupMinutesInterval">
            <summary>
            Gets or sets the minutes interval between time values allowed by the 
            TimePickerPopup.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.PopupTimeSelectionMode">
            <summary>
            Gets or sets the whether the TimePickerPopup supports selecting 
            designators and/or seconds.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePicker.ValueChanging">
            <summary>
            Occurs when Value property is changing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePicker.ValueChanged">
            <summary>
            Occurs when Value property has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePicker.Parsing">
            <summary>
            Occurs when a value is being parsed and allows custom parsing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TimePicker.ParseError">
            <summary>
            Occurs when there is an error in parsing user input and allows adding parsing logic.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.System#Windows#Controls#ITimeInput#Value">
            <summary>
            Gets or sets the Value property.
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.System#Windows#Controls#ITimeInput#Minimum">
            <summary>
            Gets or sets the minimum time.
            </summary>
            <value>The minimum time.</value>
        </member>
        <member name="P:System.Windows.Controls.TimePicker.System#Windows#Controls#ITimeInput#Maximum">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:System.Windows.Controls.TimeTypeConverter">
            <summary>
            Allows time to be set from xaml.
            </summary>
            <QualityBand>Preview</QualityBand>
            <remarks>This converter is used by xaml and thus uses the 
            English formats.</remarks>
        </member>
        <member name="F:System.Windows.Controls.TimeTypeConverter._timeFormats">
            <summary>
            BackingField for the TimeFormats being used.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeTypeConverter._dateFormats">
            <summary>
            BackingField for the DateFormats being used.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert from 
            the specified type descriptor context.
            </summary>
            <param name="typeDescriptorContext">The type descriptor context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>True</c> if this instance can convert from the specified type 
            descriptor context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert to the specified 
            type descriptor context.
            </summary>
            <param name="typeDescriptorContext">The type descriptor context.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>
            	<c>True</c> if this instance can convert to the specified type 
            descriptor context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts instances of other data types into instances of DateTime that
            represent a time.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert. This culture
            is not used during conversion, but a specific set of formats is used.</param>
            <param name="source">
            The string being converted to the DateTime.
            </param>
            <returns>
            A DateTime that is the value of the conversion.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TimeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a DateTime into a string.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert.</param>
            <param name="value">
            The value that is being converted to a specified type.
            </param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.TimeUpDown">
            <summary>
            Represents a control that uses a spinner and textbox to allow a user to 
            input time.
            </summary>
            <remarks>TimeInput supports only the following formatting characters:
            'h', 'm', 's', 'H', 't'. All other characters are filtered out:
            'd', 'f', 'F', 'g', 'K', 'M', 'y', 'z'.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeHintFormat">
            <summary>
            StringFormat used in the TimeHint.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.ElementTimeHintPopupName">
            <summary>
            The name for the TimeHint element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.GroupTimeHint">
            <summary>
            The group name "TimeHintStates".
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.GroupTimeParsingStates">
            <summary>
            The group name "ParsingStates".
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeHintOpenedUpStateName">
            <summary>
            The state name "TimeHintOpenedUp" indicates that the hint is being
            shown on the top of the control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeHintOpenedDownStateName">
            <summary>
            The state name "TimeHintOpenedDown" indicates that the hint is
            being shown at the bottom of the control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeHintClosedStateName">
            <summary>
            The state name "TimeHintClosed" indicates that no hint is being 
            shown.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.ValidTimeStateName">
            <summary>
            The state name "ValidTime" that indicates that currently the textbox
            text parses to a valid Time.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.InvalidTimeStateName">
            <summary>
            The state name "InvalidTime" that indicates that currently the textbox 
            text does not allow parsing.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.EmptyTimeStateName">
            <summary>
            The state name "EmptyTime" that indicates that currently the textbox
            text would parse to a Null.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._timeHintPopupPart">
            <summary>
            BackingField for TimeHintPopupPart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._timeCoercionHelper">
            <summary>
            Helper class that centralizes the coercion logic across all 
            TimeInput controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._lastParsedText">
            <summary>
            The text that was last parsed. Used in comparisons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._timeHintExpandDirection">
            <summary>
            The direction in which the TimeHint will expand.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._isShowTimeHint">
            <summary>
            BackingField for IsShowTimeHint.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._ignoreValueChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMinimumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMaximumChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeParsersProperty">
            <summary>
            Identifies the TimeParsers dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnTimeParsersPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeParsersProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeParsers.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.FormatProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FormatProperty property changed handler.
            </summary>
            <param name="d">TimePicker that changed its Format.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._actualFormat">
            <summary>
            BackingField for ActualFormat.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.CultureProperty">
            <summary>
            Identifies the Culture dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnCulturePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CultureProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its Culture.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeGlobalizationInfoProperty">
            <summary>
            Identifies the TimeGlobalizationInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnTimeGlobalizationInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeGlobalizationInfoProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeGlobalizationInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._actualTimeGlobalizationInfo">
            <summary>
            BackingField for ActualTimeGlobalizationInfo.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.IsCyclicProperty">
            <summary>
            Identifies the IsCyclic dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnIsCyclicPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsCyclicProperty property changed handler.
            </summary>
            <param name="d">DomainUpDown instance that changed its IsCyclic value.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown.TimeHintContentProperty">
            <summary>
            Identifies the TimeHintContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnTimeHintContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TimeHintContentProperty property changed handler.
            </summary>
            <param name="d">TimeUpDown that changed its TimeHintContent.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._timeHintDate">
            <summary>
            Represents the formatted DateTime that is used in the TimeHint hint.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._isIgnoreSelectionOfAllText">
            <summary>
            Indicates whether the control should not proceed with selecting all
            text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TimeUpDown._allowHintContentChange">
            <summary>
            BackingField for AllowHintContentChange.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TimeUpDown"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TimeUpDown control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Provides handling for the ValueChanging event.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.DateTime}})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.FormatValue">
            <summary>
            Renders the value property into the textbox text.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.SetValidSpinDirection">
            <summary>
            Sets the valid spin direction based on the position of the caret,
            the value and the minimum and maximum.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.SelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the SelectionChanged event from TextBox.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.InputChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the TextChanged event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.TextChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.DetermineHint">
            <summary>
            Determines the value of the hint property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnTimeHintMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the Left Mouse Button Down event of the TimeHint.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Key event args.</param>
            <remarks>
            Only support up and down arrow keys.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.SelectAllText">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnTextLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for Text template part's LostFocus event.
            We use this event to compare current TextBox.Text with cached previous
            value to decide whether user has typed in a new value.
            </summary>
            <param name="sender">The Text template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">True to use transitions when updating the visual state, false to
            snap directly to the new visual state.</param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TimeUpDown.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific 
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations 
            for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 
            subclass to return.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.TimeHintPopupPart">
            <summary>
            Gets or sets the time hint popup part.
            </summary>
            <value>The time hint popup part.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.IsShowTimeHint">
            <summary>
            Gets or sets a value indicating whether this instance is showing a
            TimeHint visual.
            </summary>
            <value><c>True</c> if this instance is showing the TimeHint; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualMinimum">
            <summary>
            Gets the actual minimum. If a Minimum is set, use that, otherwise
            use the start of the day.
            </summary>        
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualMaximum">
            <summary>
            Gets the actual maximum. If a Maximum is set, use that, otherwise
            use the end of the day.
            </summary>
            <value>The actual maximum.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.Value">
            <summary>
            Gets or sets the currently selected time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.Minimum">
            <summary>
            Gets or sets the minimum time considered valid by the control.
            </summary>
            <remarks>Setting the minimum property is applicable for the following 
            features: Parsing a new value from the textbox, spinning a new value 
            and programmatically specifying a value.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.Maximum">
            <summary>
            Gets or sets the maximum time considered valid by the control.
            </summary>
            <remarks>Setting the Maximum property is applicable for the following 
            features: Parsing a new value from the textbox, spinning a new value 
            and programmatically specifying a value. </remarks>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.TimeParsers">
            <summary>
            Gets or sets a collection of TimeParsers that are used when parsing 
            text to time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualTimeParsers">
            <summary>
            Gets the actual TimeParsers that will be used for parsing by the control.
            </summary>
            <remarks>Includes the TimeParsers introduced in the TimeGlobalizationInfo.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.Format">
            <summary>
            Gets or sets the Format used by the control. 
            From XAML Use either "Short", "Long" or a custom format. 
            Custom formats can only contain "H", "h", "m", "s" or "t". 
            For example: use 'hh:mm:ss' is used to format time as "13:45:30".
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualFormat">
            <summary>
            Gets the actual format that will be used to display Time  in the 
            TimeUpDown. If no format is specified, ShortTimeFormat is used.
            </summary>
            <value>The actual display format.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.Culture">
            <summary>
            Gets or sets the culture that will be used by the control for 
            parsing and formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualCulture">
            <summary>
            Gets the actual culture used by the control for formatting and parsing.
            </summary>
            <value>The actual culture.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.TimeGlobalizationInfo">
            <summary>
            Gets or sets the strategy object that determines how the control 
            interacts with DateTime and CultureInfo.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.ActualTimeGlobalizationInfo">
            <summary>
            Gets the actual TimeGlobalization info used by the control.
            </summary>
            <remarks>If TimeGlobalizationInfo is not set, will return 
            default TimeGlobalizationInfo instance.</remarks>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.IsCyclic">
            <summary>
            Gets or sets a value indicating whether the TimeUpDown control will 
            cycle through values when trying to spin the first and last item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.TimeHintContent">
            <summary>
            Gets the text used to guide the user when entering time.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.System#Windows#Controls#ITimeInput#Value">
            <summary>
            Gets or sets the Value property.
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.System#Windows#Controls#ITimeInput#Minimum">
            <summary>
            Gets or sets the minimum time.
            </summary>
            <value>The minimum time.</value>
        </member>
        <member name="P:System.Windows.Controls.TimeUpDown.System#Windows#Controls#ITimeInput#Maximum">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:System.Windows.Controls.UpDownParseErrorEventArgs">
            <summary>
            Provides data for the UpDownBase.ParseError event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.UpDownParseErrorEventArgs.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UpDownParseErrorEventArgs class.
            </summary>
            <param name="text">The text that caused the parsing error.</param>
            <param name="error">The exception thrown by ParseValue method.</param>
        </member>
        <member name="P:System.Windows.Controls.UpDownParseErrorEventArgs.Text">
            <summary>
            Gets the original string value that failed to parse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownParseErrorEventArgs.Error">
            <summary>
            Gets the exception that was raised during the initial parsing 
            attempt.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownParseErrorEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event is handled.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.UpDownParsingEventArgs`1">
            <summary>
            Provides data for the UpDownBase.Parsing event.
            </summary>
            <typeparam name="T">Type of Value property.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.UpDownParsingEventArgs`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.UpDownParsingEventArgs`1"/> class.
            </summary>
            <param name="text">The text that will be parsed.</param>
        </member>
        <member name="P:System.Windows.Controls.UpDownParsingEventArgs`1.Text">
            <summary>
            Gets the original string value that will be parsed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownParsingEventArgs`1.Value">
            <summary>
            Gets or sets the value to be used.
            </summary>
            <value>The parsed value.</value>
        </member>
        <member name="P:System.Windows.Controls.UpDownParsingEventArgs`1.Handled">
            <summary>
            Gets or sets a value indicating whether 
            this <see cref="T:System.Windows.Controls.UpDownParsingEventArgs`1"/> is handled.
            </summary>
            <value><c>True</c> if handled; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Layout.Toolkit.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Layout.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Layout.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.InternalOnly.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.InternalOnly</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.AnonymousDisposable">
            <summary>
            A class that facilitates the creation of anonymous IDisposable objects.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.AnonymousDisposable._dispose">
            <summary>
            The action to execute when the Dispose method is called.
            </summary>
        </member>
        <member name="M:System.AnonymousDisposable.#ctor(System.Action)">
            <summary>
            Creates a new instance of the GenericDispose class.
            </summary>
            <param name="dispose">The action to execute when the Dispose method
            is called.</param>
        </member>
        <member name="M:System.AnonymousDisposable.Dispose">
            <summary>
            Executes the dispose action.
            </summary>
        </member>
        <member name="T:System.Linq.AnonymousObservable`1">
            <summary>
            A class that facilitates the creation of anonymous IObservable objects.
            </summary>
            <typeparam name="T">The type of the items in the sequence.</typeparam>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Linq.AnonymousObservable`1._subscribe">
            <summary>
            The function to invoke when the subscribe method is called.
            </summary>
        </member>
        <member name="M:System.Linq.AnonymousObservable`1.#ctor(System.Func{System.Collections.Generic.IObserver{`0},System.IDisposable})">
            <summary>
            Initializes a new instance of the AnonymousObservable class.
            </summary>
            <param name="subscribe">The method to invoke when the subscribe 
            method is called.</param>
        </member>
        <member name="M:System.Linq.AnonymousObservable`1.Subscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            This method ensures that an observer is subscribing to the 
            information in the observable.
            </summary>
            <param name="observer">The observer that is subscribing to the 
            information in the observable.</param>
            <returns>An disposable object used to unsubscribe from the 
            observable.</returns>
        </member>
        <member name="T:System.Windows.Controls.CollectionHelper">
            <summary>
            A set of extension methods for manipulating collections.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CollectionHelper.CanInsert(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns a value Indicating whether an item can be inserted in a 
            collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be inserted.</param>
            <returns>A value Indicating whether an item can be inserted in a 
            collection.</returns>
        </member>
        <member name="M:System.Windows.Controls.CollectionHelper.Insert(System.Collections.IEnumerable,System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at an index.
            </summary>
            <param name="collection">The collection.</param>
            <param name="index">The index at which to insert the item.</param> 
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.CollectionHelper.Count(System.Collections.IEnumerable)">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <param name="collection">The collection.</param>
            <returns>The number of items in the collection.</returns>
        </member>
        <member name="M:System.Windows.Controls.CollectionHelper.Add(System.Collections.IEnumerable,System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be added.</param>
        </member>
        <member name="M:System.Windows.Controls.CollectionHelper.Remove(System.Collections.IEnumerable,System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be removed.</param>
        </member>
        <member name="T:System.Windows.Controls.TypeTypeConverter">
            <summary>
            Converts Strings to and from Types.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the TypeTypeConverter class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible from a specified type to a
            Type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="sourceType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>true if conversion is possible; otherwise, false.</returns>
        </member>
        <member name="M:System.Windows.Controls.TypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts instances of other data types into instances of Type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="culture">The culture used to convert.</param>
            <param name="value">
            The value that is being converted to a Type.
            </param>
            <returns>
            An instance of Type that is the value of the conversion.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type from a
            Type instance.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a Type to the specified type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="culture">The culture used to convert.</param>
            <param name="value">
            The value that is being converted to a specified type.
            </param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDisplayMode">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInputValid">
            <summary>
            InputInvalid state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalid">
            <summary>
            Invalid of the InputInvalid state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            Valid of the InputInvalid state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.BaseItemsControlDragDropBehavior`1">
            <summary>
            A control that enabled drag and drop operations on an ItemsControl.
            </summary>
            <QualityBand>Experimental</QualityBand>
            <typeparam name="TItemContainerType">The type of the item container.</typeparam>
        </member>
        <member name="T:System.Windows.Controls.DragDropBehavior`2">
            <summary>
            A control that enabled drag and drop operations on an ItemsControl.
            </summary>
            <typeparam name="TItemsControlType">The type of the items control.</typeparam>
            <typeparam name="TItemContainerType">The type of the item container.</typeparam>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.IAcceptDrop">
            <summary>
            An object that can handle routed drag and drop events.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Initiates a DragEnter event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Initiates a DragOver event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Initiates a DragLeave event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Initiates a Drop event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Initiates a GiveFeedback event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.IAcceptDrop.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Initiates a QueryContinueDrag event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2.DragPopupName">
            <summary>
            The name of the DragPopup template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2.DragCanvasName">
            <summary>
            The name of the DragCanvas template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2.DragDecoratorName">
            <summary>
            The name of the DragDecorator template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2.InsertionIndicatorName">
            <summary>
            The name of the insertion indicator template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2.InsertionIndicatorContainerName">
            <summary>
            The name of the insertion indicator container.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._keyStates">
            <summary>
            The state of the keys relevant to drag and drop operation.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._itemsControlChanged">
            <summary>
            An event raised when the ItemsControl is changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._itemDragStarted">
            <summary>
            An event raised when an item drag is started.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._itemDragCompleted">
            <summary>
            An event raised when an item drag is completed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._currentItemDragEventArgs">
            <summary>
            Information about an ongoing item drag event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._itemDragStarting">
            <summary>
            A list of ItemDragStarting event handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnItemDragStarting(System.Windows.Controls.ItemDragEventArgs)">
            <summary>
            A method that raises the item drag starting event.
            </summary>
            <param name="eventArgs">Information about the drag starting event.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._itemDragCompletedHandlers">
            <summary>
            A list of ItemDragCompleted event handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnItemDragCompleted(System.Windows.Controls.ItemDragEventArgs)">
            <summary>
            Raises the ItemDragCompleted event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._IndicatingInsertionLocation">
            <summary>
            A list of IndicatingInsertionLocation handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnIndicatingInsertionLocation(System.Windows.Controls.IndicatingInsertionLocationEventArgs)">
            <summary>
            A method which raises the IndicatingInsertionLocation event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetInsertionIndicatorGeometry(System.Windows.Controls.IndicatingInsertionLocationEventArgs,`0,System.Windows.Controls.Orientation)">
            <summary>
            Returns a geometry to use for the insertion indicator given 
            information about an IndicatingInsertionLocation event.
            </summary>
            <param name="args">Information about the IndicatingInsertionLocation 
            event.</param>
            <param name="itemsControl">The items control.</param>
            <param name="orientation">The orientation of the stack panel items 
            host.</param>
            <returns>The geometry to use for the insertion indicator given 
            information about an IndicatingInsertionLocation event.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetInsertionIndicatorGeometry(System.Windows.UIElement,System.Windows.Controls.Orientation,System.Boolean)">
            <summary>
            Returns a geometry to use for the insertion indicator given 
            an item container, the orientation of the items host panel, and a 
            value indicating whether to insert before or after the item 
            container.
            </summary>
            <param name="element">The item container.</param>
            <param name="orientation">The orientation of the items host.
            </param>
            <param name="insertBefore">A value indicating whether to insert 
            before or after the item container.</param>
            <returns>The geometry to use for the insertion indicator given 
            information about an IndicatingInsertionLocation event.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragEnter event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragEnter event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._dragEnter">
            <summary>
            A list of event handles for the DragEnter event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragOver event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragOver event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._dragOver">
            <summary>
            A list of event handles for the DragOver event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragLeave event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragLeave event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._dragLeave">
            <summary>
            A list of event handles for the DragLeave event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Raises the Drop event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Raises the Drop event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._drop">
            <summary>
            A list of event handles for the Drop event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Raises the GiveFeedback event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Raises the GiveFeedback event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._giveFeedback">
            <summary>
            A list of event handles for the GiveFeedback event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.System#Windows#IAcceptDrop#OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Raises the QueryContinueDrag event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Raises the QueryContinueDrag event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DragDropBehavior`2._queryContinueDrag">
            <summary>
            A list of event handles for the QueryContinueDrag event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.#ctor">
            <summary>
            Initializes a new instance of the ItemsControlDragAdorner class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetKeyStatesChanged">
            <summary>
            Gets an event that is raised whenever the drag and drop key states
            are changed.
            </summary>
            <returns>An event that is raised whenever the drag and drop key 
            states are changed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetOffset(System.Windows.Input.MouseEventArgs,System.Windows.UIElement)">
            <summary>
            Retrieves the offset of a mouse position relative to an element.
            </summary>
            <param name="args">The mouse event arguments.</param>
            <param name="source">The element to use as the origin.</param>
            <returns>The offset of a mouse position relative to an element.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetItemDragStarting">
            <summary>
            Returns an observable that raises whenever a drag operation begins
            on an item.
            </summary>
            <returns>An observable that raises whenever a drag operation begins
            on an item.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetAllowedEffects">
            <summary>
            Returns the allowed effects for an item drag operation.  Excludes
            move if an item cannot be removed from the items control.
            </summary>
            <returns>The allowed effects for an item drag operation.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnApplyTemplate">
            <summary>
            This method is invoked when the template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnContentChanged(System.Object,System.Object)">
            <summary>
            This method is invoked when the content property changes.
            </summary>
            <param name="oldContent">The old value.</param>
            <param name="newContent">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDragging(System.Windows.Input.MouseEventArgs)">
            <summary>
            This method moves the drag decorator with the mouse when the mouse
            position changes during a drag operation.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnItemDragStarted(System.Windows.Controls.ItemDragEventArgs)">
            <summary>
            This method initializes graphical elements when an item drag 
            operation begins.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.OnDragEvent(System.Windows.DragEventArgs)">
            <summary>
            Updates the drag event information whenever a drag event occurs.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.InsertItem(`0,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.AddItem(`0,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.RemoveItem(`0,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetItemCount(`0)">
            <summary>
            Gets the number of items in an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The number of items in the items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.ContainerFromIndex(`0,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetItemsHost(`0)">
            <summary>
            Retrieves the items host for a given items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The items host for a given items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.IndexFromContainer(`0,`1)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.ItemFromContainer(`0,`1)">
            <summary>
            Gets the item from an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The data contained by the item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.CanRemove(`0)">
            <summary>
            Returns a value indicating whether an item can be removed from the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>A value indicating whether an item can be removed from the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.CanAddItem(`0,System.Object)">
            <summary>
            Returns a value indicating whether an item can be added to the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be added.</param>
            <returns>A value indicating whether an item can be added to the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.IsItemContainerOfItemsControl(`0,System.Windows.DependencyObject)">
            <summary>
            Returns a value indicating whether a container belongs to an items 
            control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>A value indicating whether a container belongs to an items 
            control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetItemsControlAncestor(System.Windows.DependencyObject)">
            <summary>
            Returns the items control ancestor of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object to retrieve the
            element for.</param>
            <returns>The items control ancestor of the dependency object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.GetItemContainerAncestor(`0,System.Windows.DependencyObject)">
            <summary>
            Returns the item container ancestor of a dependency object.
            </summary>
            <param name="itemsControl">The items control that contains the
            item container.</param>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The item container ancestor of the dependency object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.Dispose">
            <summary>
            Disposes of the instance.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDropBehavior`2.Dispose(System.Boolean)">
            <summary>
            Disposes of resources.
            </summary>
            <param name="disposeUnmanaged">Whether to dispose of unmanaged 
            resources.</param>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.DragPopup">
            <summary>
            Gets or sets the popup used to move the drag decorator with the 
            mouse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.DragCanvas">
            <summary>
            Gets or sets the canvas used to move the drag decorator with the
            mouse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.DragDecorator">
            <summary>
            Gets the drag decorator that moves with the mouse during a 
            drag operation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.InsertionIndicator">
            <summary>
            Gets the insertion indicator path used to indicate where an item
            will be inserted.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.InsertionIndicatorContainer">
            <summary>
            Gets the insertion indicator container.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDropBehavior`2.RootItemsControl">
            <summary>
            Gets the ItemsControl that this control adorns.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.ItemDragStarting">
            <summary>
            An event raised when a drag operation is starting on an item.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.ItemDragCompleted">
            <summary>
            This event is raised when an item drag operation is ended.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.DragEnter">
            <summary>
            An event raised when the an item is dragged into the adorner.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.DragOver">
            <summary>
            An event raised when the an item is dragged over the adorner.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.DragLeave">
            <summary>
            An event raised when the an item is dragged out of the adorner.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.Drop">
            <summary>
            An event raised when the an item is dropped onto the adorner.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.GiveFeedback">
            <summary>
            An event raised when the feedback about the drag operations is 
            requested from the adorner.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragDropBehavior`2.QueryContinueDrag">
            <summary>
            An event raised when the adorner is queries regarding the drag 
            operation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.CanAddItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Returns a value indicating whether an item can be added to the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be added.</param>
            <returns>A value indicating whether an item can be added to the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.GetItemCount(System.Windows.Controls.ItemsControl)">
            <summary>
            Retrieves the number of items in an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The number of items in the items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.ContainerFromIndex(System.Windows.Controls.ItemsControl,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.IndexFromContainer(System.Windows.Controls.ItemsControl,`0)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Retrieves the items host for a given items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The items host for a given items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.CanRemove(System.Windows.Controls.ItemsControl)">
            <summary>
            Returns a value indicating whether an item can be removed from the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>A value indicating whether an item can be removed from the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.AddItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.RemoveItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.InsertItem(System.Windows.Controls.ItemsControl,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.IsItemContainerOfItemsControl(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
            <summary>
            Returns a value indicating whether a container belongs to an items 
            control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>A value indicating whether a container belongs to an items 
            control.</returns>
        </member>
        <member name="M:System.Windows.Controls.BaseItemsControlDragDropBehavior`1.ItemFromContainer(System.Windows.Controls.ItemsControl,`0)">
            <summary>
            Gets the item from an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The data contained by the item container.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataGridDragDropBehavior">
            <summary>
            A control that enabled drag and drop operations on an Chart.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.#ctor">
            <summary>
            Initializes a new instance of the DataGridDragDropBehavior class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.CanAddItem(System.Windows.Controls.DataGrid,System.Object)">
            <summary>
            Returns a value indicating whether an item can be added to the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be added.</param>
            <returns>A value indicating whether an item can be added to the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.GetItemCount(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the number of items in an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The number of items in the items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.ContainerFromIndex(System.Windows.Controls.DataGrid,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.IndexFromContainer(System.Windows.Controls.DataGrid,System.Windows.Controls.DataGridRow)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.GetItemsHost(System.Windows.Controls.DataGrid)">
            <summary>
            Retrieves the items host for a given items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The items host for a given items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.CanRemove(System.Windows.Controls.DataGrid)">
            <summary>
            Returns a value indicating whether an item can be removed from the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>A value indicating whether an item can be removed from the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.AddItem(System.Windows.Controls.DataGrid,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.RemoveItem(System.Windows.Controls.DataGrid,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.InsertItem(System.Windows.Controls.DataGrid,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.IsItemContainerOfItemsControl(System.Windows.Controls.DataGrid,System.Windows.DependencyObject)">
            <summary>
            Returns a value indicating whether a container belongs to an items 
            control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>A value indicating whether a container belongs to an items 
            control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.ItemFromContainer(System.Windows.Controls.DataGrid,System.Windows.Controls.DataGridRow)">
            <summary>
            Gets the item from an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The data contained by the item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDragDropBehavior.OnItemDragStarting(System.Windows.Controls.ItemDragEventArgs)">
            <summary>
            Adds all selected items when drag operation begins.
            </summary>
            <param name="eventArgs">Information about the event.</param>
        </member>
        <member name="T:System.Windows.DataObject">
            <summary>
            Provides a basic implementation of the System.Windows.IDataObject interface,
            which defines a format-independent mechanism for transferring data.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.IDataObject">
            <summary>
            Provides a format-independent mechanism for transferring data.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.IDataObject.GetData(System.String)">
            <summary>
            Retrieves a data object in a specified format; the data format is specified
            by a string.
            </summary>
            <param name="format">A string that specifies what format to retrieve
            the data as.</param>
            <returns>A data object with the data in the specified format, or null if the data
            is not available in the specified format.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetData(System.Type)">
            <summary>
            Retrieves a data object in a specified format; the data format is specified
            by a System.Type object.
            </summary>
            <param name="format">A System.Type object that specifies what format
            to retrieve the data as.</param>
            <returns>A data object with the data in the specified format, or null if the data
            is not available in the specified format.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)">
            <summary>
            Retrieves a data object in a specified format, optionally converting the data to the specified format.
            </summary>
            <param name="format">A string that specifies what format to retrieve
            the data as. See the System.Windows.DataFormats class for a set of predefined data formats.</param>
            <param name="autoConvert">True to attempt to automatically convert the data to the specified format;
            false for no data format conversion.    If this parameter is false, the method
            returns data in the specified format if available, or null if the data is
            not available in the specified format.</param>
            <returns>A data object with the data in the specified format, or null if the data is not available in the specified format.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetDataPresent(System.String)">
            <summary>
            Checks to see whether the data is available in, or can be converted 
            to, a specified format; the data format is specified by a string.
            </summary>
            <param name="format">A string that specifies what format to check for.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetDataPresent(System.Type)">
            <summary>
            Checks to see whether the data is available in, or can be converted 
            to, a specified format. The data format is specified by a 
            System.Type object.
            </summary>
            <param name="format">A System.Type that specifies what format to 
            check for. See the System.Windows.DataFormats class for a set of 
            predefined data formats.</param>
            <returns>True if the data is in, or can be converted to, the 
            specified format; otherwise, false.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetFormats">
            <summary>
            Returns a list of formats in which the data in this data object is stored,
            or can be converted to.
            </summary>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetFormats(System.Boolean)">
            <summary>
            Returns a list of formats in which the data in this data object is stored.
            A flag indicates whether to also include formats that the data can
            be automatically converted to.
            </summary>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.Type,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
        </member>
        <member name="M:System.Windows.DataObject.#ctor">
            <summary>
            Initializes a new instance of the DataObject class.
            </summary>
        </member>
        <member name="M:System.Windows.DataObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the DataObject class.
            </summary>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.GetData(System.String)">
            <summary>
            Returns data in a format specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the 
            data.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetData(System.Type)">
            <summary>
            Returns a data object in a format specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <returns>A data object with the data in the specified format, or null if the data
            is unavailable in the specified format.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetData(System.String,System.Boolean)">
            <summary>
            Returns data in a format specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the 
            data.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetDataPresent(System.String)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetDataPresent(System.Type)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetFormats">
            <summary>
            Returns a list of formats in which the data in this data object is stored,
            or can be converted to.
            </summary>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetFormats(System.Boolean)">
            <summary>
            Returns a list of formats in which the data in this data object is stored.
            A Boolean flag indicates whether to also include formats that the data can
            be automatically converted to.
            </summary>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.Type,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
        </member>
        <member name="P:System.Windows.DataObject.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataPointSeriesDragDropBehavior">
            <summary>
            A control that enabled drag and drop operations on an Chart.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.#ctor">
            <summary>
            Initializes a new instance of the DataPointSeriesDragDropBehavior.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.CanAddItem(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Object)">
            <summary>
            Returns a value indicating whether an item can be added to the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be added.</param>
            <returns>A value indicating whether an item can be added to the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.GetItemCount(System.Windows.Controls.DataVisualization.Charting.DataPointSeries)">
            <summary>
            Gets the number of items in an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The number of items in the items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.ContainerFromIndex(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.IndexFromContainer(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.GetItemsHost(System.Windows.Controls.DataVisualization.Charting.DataPointSeries)">
            <summary>
            Retrieves the items host for a given items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The items host for a given items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.CanRemove(System.Windows.Controls.DataVisualization.Charting.DataPointSeries)">
            <summary>
            Returns a value indicating whether an item can be removed from the
            items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>A value indicating whether an item can be removed from the
            items control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.AddItem(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.RemoveItem(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.InsertItem(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.IsItemContainerOfItemsControl(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Windows.DependencyObject)">
            <summary>
            Returns a value indicating whether a container belongs to an items 
            control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>A value indicating whether a container belongs to an items 
            control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPointSeriesDragDropBehavior.ItemFromContainer(System.Windows.Controls.DataVisualization.Charting.DataPointSeries,System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Gets the item from an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The data contained by the item container.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataPointSeriesDragDropBehavior.RootItemsControl">
            <summary>
            Gets the root DataPointSeries control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataProviderParameter">
            <summary>
            The DataProviderParameter class is used to provide parameter values to
            methods on a DataSourceProvider (such as ObjectDataProvider or
            WebServiceDataProvider).
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataProviderParameterBase">
            <summary>
            The DataProviderParameterBase class is used to provide parameter values
            to methods on a DataSourceProvider (such as ObjectDataProvider or
            WebServiceDataProvider).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataProviderParameterBase.ProviderProperty">
            <summary>
            Identifies the Provider dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameterBase.OnProviderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ProviderProperty property changed handler.
            </summary>
            <param name="d">DataProviderParameterBase that changed its Provider.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataProviderParameterBase.RefreshesProviderProperty">
            <summary>
            Identifies the RefreshesProvider dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameterBase.#ctor">
            <summary>
            Initializes a new instance of the DataProviderParameterBase class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameterBase.RefreshProvider">
            <summary>
            Refresh the DataSourceProvider using this parameter.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameterBase.GetParameterValue">
            <summary>
            Get the current value of the parameter.
            </summary>
            <returns>The current value of the parameter.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataProviderParameterBase.Provider">
            <summary>
            Gets or sets the DataSourceProvider using this parameter.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataProviderParameterBase.RefreshesProvider">
            <summary>
            Gets or sets a value indicating whether the parameter automatically
            refreshes its Provider when changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataProviderParameter.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameter.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValueProperty property changed handler.
            </summary>
            <param name="d">DataProviderParameter that changed its Value.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameter.#ctor">
            <summary>
            Initializes a new instance of the DataProviderParameter class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataProviderParameter.GetParameterValue">
            <summary>
            Get the current value of the parameter.
            </summary>
            <returns>The current value of the parameter.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataProviderParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataSourceProvider">
            <summary>
            Common base class and contract for DataSourceProvider objects, which are
            factories that execute some queries to produce a single object or a list
            of objects that you can use as binding source objects.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataSourceProvider.UpdateWithNewResultCallback">
            <summary>
            A callback used to update the DataSourceProvider with new results
            after a refresh.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataSourceProvider._deferLevel">
            <summary>
            The defer level tracks the number of requests to defer an implicit
            Refresh (using the DeferRefresh method).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataSourceProvider._isInitialLoadEnabled">
            <summary>
            A value that indicates whether to prevent or delay the automatic
            loading of data.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataSourceProvider._initialLoadCalled">
            <summary>
            Indicates whether an initial request for the data has been provided.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.#ctor">
            <summary>
            Initializes a new instance of the DataSourceProvider class. This is
            a protected constructor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.BeginInit">
            <summary>
            Indicates that initialization of this object is about to begin; no
            implicit Refresh occurs until the matched EndInit method is called.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.EndInit">
            <summary>
            Indicates that the initialization of this object has completed; this
            causes a Refresh if no other DeferRefresh is outstanding.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.InitialLoad">
            <summary>
            Starts the initial query to the underlying data model.  The result
            is returned on the Data property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.Refresh">
            <summary>
            Initiates a refresh operation to the underlying data model.  The
            result is returned on the Data property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.BeginQuery">
            <summary>
            When overridden in a derived class, this base class calls this
            method when InitialLoad or Refresh has been called.  The base class
            delays the call if refresh is deferred or initial load is disabled.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.OnQueryFinished(System.Object)">
            <summary>
            Derived classes call this method to indicate that a query has
            finished.
            </summary>
            <param name="newData">
            The data that is the result of the query.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Controls.DispatcherOperationCallback,System.Object)">
            <summary>
            Derived classes call this method to indicate that a query has
            finished.
            </summary>
            <param name="newData">
            The data that is the result of the query.
            </param>
            <param name="error">
            The error that occurred while running the query.  This value is null
            if there is no error.
            </param>
            <param name="completionWork">
            Optional delegate that is used to execute completion work on the UI
            thread, for example, to set additional properties.
            </param>
            <param name="callbackArguments">
            Optional arguments to send as a parameter with the completionWork
            delegate.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.UpdateWithNewResult(System.Object,System.Exception,System.Windows.Controls.DispatcherOperationCallback,System.Object)">
            <summary>
            Update the DataSourceProvider with the result of a refresh
            operation.
            </summary>
            <param name="newData">
            The data that is the result of the query.
            </param>
            <param name="error">
            The error that occurred while running the query.  This value is null
            if there is no error.
            </param>
            <param name="completionWork">
            Optional delegate that is used to execute completion work on the UI
            thread, for example, to set additional properties.
            </param>
            <param name="callbackArguments">
            Optional arguments to send as a parameter with the completionWork
            delegate.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.UpdateWithNewResult(System.Object)">
            <summary>
            Update the DataSourceProvider with the result of a refresh
            operation.
            </summary>
            <param name="arg">
            An array of arguments used to invoke
            DataSourceProvider.UpdateWithNewResult with the provider as the
            first element and the rest of the arguments in order.
            </param>
            <returns>Always returns null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.DeferRefresh">
            <summary>
            Enters a defer cycle that you can use to change properties of the
            provider and delay automatic refresh.
            </summary>
            <returns>
            An IDisposable object that you can use to dispose of the calling
            object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.EndDefer">
            <summary>
            Release a request to defer an implicit Refresh operation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event with the provided arguments.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.DataSourceProvider.Data">
            <summary>
            Gets the underlying data object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataSourceProvider.Error">
            <summary>
            Gets the error of the last query operation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataSourceProvider.Dispatcher">
            <summary>
            Gets or sets the current Dispatcher object to the UI thread to use.
            By default, this is the Dispatcher object that is associated with
            the thread on which this instance was created.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataSourceProvider.IsInitialLoadEnabled">
            <summary>
            Gets or sets a value indicating whether to prevent or delay the
            automatic loading of data.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataSourceProvider.IsRefreshDeferred">
            <summary>
            Gets a value indicating whether there is an outstanding DeferRefresh
            in use.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataSourceProvider.DataChanged">
            <summary>
            Occurs when the Data property has a new value.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataSourceProvider.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <remarks>
            The INotifyPropertyChanged.PropertyChanged
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.DeferHelper">
            <summary>
            DeferHelper is used to defer implicit refreshes of a DataSourceProvider.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DeferHelper._provider">
            <summary>
            The DataSourceProvider to prevent from refreshing implicitly.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DeferHelper.#ctor(System.Windows.Controls.DataSourceProvider)">
            <summary>
            Initializes a new instance of the DeferHelper class.
            </summary>
            <param name="provider">
            The DataSourceProvider to prevent from refreshing implicitly.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DeferHelper.Dispose">
            <summary>
            Notify the DataSourceProvider that refresh operations may resume.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DispatcherOperationCallback">
            <summary>
            Represents a delegate to use for dispatcher operations.
            </summary>
            <param name="arg">The argument provided to the callback.</param>
            <returns>The object returned by the callback.</returns>
        </member>
        <member name="T:System.Windows.Controls.ObjectDataProvider">
            <summary>
            Wraps and creates an object that you can use as a binding source.
            </summary>
            <remarks>
            TODO: Determine if Cider/Blend utilize the ShouldSerializeFoo methods.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._mode">
            <summary>
            Describes how the source in  ObjectDataSource.ObjectInstance was
            obtained.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._needNewInstance">
            <summary>
            A value indicating whether the ObjectDataProvider needs to create a
            new ObjectInstance.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._isAsynchronous">
            <summary>
            A value that indicates whether to perform object creation in a
            worker thread or in the active context.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._constructorParameters">
            <summary>
            The list of parameters to pass to the constructor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.ShouldSerializeConstructorParameters">
            <summary>
            Indicates whether the ConstructorParameters property should be
            persisted at design time.
            </summary>
            <returns>
            A value indicating if the property should be serialized.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._methodName">
            <summary>
            The name of the method to call.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._methodParameters">
            <summary>
            The list of parameters to pass to the method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.ShouldSerializeMethodParameters">
            <summary>
            Indicates whether the MethodParameters property should be
            persisted at design time.
            </summary>
            <returns>
            A value indicating if the property should be serialized.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._objectType">
            <summary>
            The type of object to create an instance of.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.ShouldSerializeObjectType">
            <summary>
            Indicates whether the ObjectType property should be persisted at
            design time.
            </summary>
            <returns>
            A value indicating if the property should be serialized.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._objectInstance">
            <summary>
            The object instance used as the binding source.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._instanceProvider">
            <summary>
            The object instance used as the binding source.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProvider._sourceDataChangedHandler">
            <summary>
            A DataChanged handler for any instances that are
            DataSourceProviders.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.ShouldSerializeObjectInstance">
            <summary>
            Indicates whether the ObjectInstance property should be persisted at
            design time.
            </summary>
            <returns>
            A value indicating if the property should be serialized.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.#ctor">
            <summary>
            Initializes a new instance of the ObjectDataProvider class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.OnParametersChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Refresh the data when constructor or method parameters change.
            </summary>
            <param name="sender">The changed ParameterCollection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.SetObjectType(System.Type)">
            <summary>
            Set type of object to create an instance of.
            </summary>
            <param name="newType">
            The type of object to create an instance of.
            </param>
            <returns>
            A value indicating whether the object type was changed.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.SetObjectInstance(System.Object)">
            <summary>
            Set the object instance used as the binding source.
            </summary>
            <param name="value">
            The object instance used as the binding source.
            </param>
            <returns>
            A value indicating whether the object instance was changed.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.OnSourceDataChanged(System.Object,System.EventArgs)">
            <summary>
            Handle changes to the Data property of a DataSourceProvider that has
            been set as the ObjectInstance.
            </summary>
            <param name="sender">THe DataSourceProvider.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.BeginQuery">
            <summary>
            Starts to create the requested object, either immediately or on a
            background thread, based on the value of the IsAsynchronous
            property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.GetData(System.Object)">
            <summary>
            Get the Data from the object.
            </summary>
            <param name="state">
            Object state required to be a WaitCallback.  This parameter is
            always null.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.CreateObjectInstance(System.Exception@)">
            <summary>
            Create the ObjectInstance.
            </summary>
            <param name="error">Any exceptions thrown during creation.</param>
            <returns>The constructed ObjectInstance.</returns>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.InvokeMethodOnInstance(System.Exception@)">
            <summary>
            Invoke a method on the ObjectInstance.
            </summary>
            <param name="error">Any exceptions thrown during invocation.</param>
            <returns>The resulting ObjectInstance.</returns>
        </member>
        <member name="M:System.Windows.Controls.ObjectDataProvider.IsCriticalException(System.Exception)">
            <summary>
            Check if an exception is a critical exception.
            </summary>
            <param name="ex">The exception.</param>
            <returns>
            Value indicating whether the exception is critical.
            </returns>
            <remarks>
            This is dangerous (i.e., we're only rethrowing today's critical
            exceptions but will be swalling the critical exceptions of tomorow),
            but compatible with WPF.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.IsAsynchronous">
            <summary>
            Gets or sets a value indicating whether to perform object creation
            in a worker thread or in the active context.  The default value is
            false.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.ConstructorParameters">
            <summary>
            Gets the list of parameters to pass to the constructor.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.MethodName">
            <summary>
            Gets or sets the name of the method to call.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.MethodParameters">
            <summary>
            Gets the list of parameters to pass to the method.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.ObjectType">
            <summary>
            Gets or sets the type of object to create an instance of.  This
            property is null when the ObjectDataProvider is uninitialized or
            explicitly set to null.  If ObjectInstance is assigned, ObjectType
            returns the type of the object or null if the object is null.  The
            default value is null.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ObjectDataProvider.ObjectInstance">
            <summary>
            Gets or sets the object instance used as the binding source.  The
            instance of the object constructed from ObjectType and
            ConstructorParameters, or the DataSourceProvider of which the Data
            is used as the ObjectInstance.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ObjectDataProviderSourceMode">
            <summary>
            ObjectDataProviderSourceMode describes how the source in 
            ObjectDataSource.ObjectInstance was obtained.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProviderSourceMode.NoSource">
            <summary>
            No source source has been provided.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProviderSourceMode.FromType">
            <summary>
            A type was provided for the source which was dynamically created.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ObjectDataProviderSourceMode.FromInstance">
            <summary>
            A live instance was provided for the source.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ParameterCollection">
            <summary>
            A Collection of parameters to a method or constructor used by
            ObjectDataProvider.
            </summary>
            <remarks>
            The ParameterCollection is only used by ObjectDataProvider for its
            ConstructorParameters and MethodParameters.  The collection will be made
            read only if the ObjectDataProvider is using a user provided object
            instance and this collection is used for ConstructorParameters.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.#ctor(System.Windows.Controls.DataSourceProvider)">
            <summary>
            Initializes a new instance of the ParameterCollection class.
            </summary>
            <param name="provider">
            A reference to the the DataSourceProvider using this
            ParameterCollection.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.RaiseCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise a collection changed notification.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.EnsureCanChangeCollection">
            <summary>
            Ensure the collection can be modified.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.InsertItem(System.Int32,System.Object)">
            <summary>
            Inserts an element into the Collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">
            The object to insert. The value can be null for reference types.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.SetItem(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.  The value can
            be null for reference types.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the Collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.ForceClearItems">
            <summary>
            Removes all elements from the collection without checking whether
            it is read only or raising a change notification.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ParameterCollection.GetParameterValues">
            <summary>
            Get the values for the parameters.
            </summary>
            <returns>Values for the parameters.</returns>
        </member>
        <member name="P:System.Windows.Controls.ParameterCollection.Provider">
            <summary>
            Gets or sets a reference to the the DataSourceProvider using this
            ParameterCollection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ParameterCollection.IsObjectDataProviderUsingExistingObjectInstance">
            <summary>
            Gets or sets a value indicating whether the ObjectDataProvider using
            this ParameterCollection for ConstructorParameters has been given a
            user provided ObjectInstance and the collection should be made read
            only.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ParameterCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read only.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ParameterCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ParameterCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ResolveElementNameEventArgs">
            <summary>
            Provides data to resolve an element name.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ResolveElementNameEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResolveElementNameEventArgs class.
            </summary>
            <param name="elementName">
            The name of the element to resolve.
            </param>
        </member>
        <member name="P:System.Windows.Controls.ResolveElementNameEventArgs.ElementName">
            <summary>
            Gets the name of the element to resolve.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ResolveElementNameEventArgs.Element">
            <summary>
            Gets or sets the resolved element.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ResolveElementNameEventHandler">
            <summary>
            Represents the method that that resolves element names.
            </summary>
            <param name="sender">Object that raised the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:System.Windows.Controls.UIDataProviderParameter">
            <summary>
            The UIDataProviderParameter class is used to provide parameter values
            obtained from UIElements to methods on a DataSourceProvider (such as
            ObjectDataProvider or WebServiceDataProvider).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.OnElementRefreshEventMethod">
            <summary>
            Reference to the OnElementRefreshEvent method that can be used to
            attach to the RefreshOnEvent event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter._element">
            <summary>
            The element represented by the ElementName property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.ElementNameProperty">
            <summary>
            Identifies the ElementName dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnElementNamePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ElementNameProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its ElementName.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.PropertyProperty">
            <summary>
            Identifies the Property dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnPropertyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its Property.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.ParameterTypeProperty">
            <summary>
            Identifies the ParameterType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnParameterTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ParameterTypeProperty property changed handler.
            </summary>
            <param name="d">UIDataProviderParameter that changed its ParameterType.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter._refreshOnEventInfo">
            <summary>
            The EventInfo of the event specified by the RefreshOnEvent property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter._onElementRefreshEventHandler">
            <summary>
            Cached event handler used to listen for the event specified by the
            RefreshOnEvent property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.RefreshOnEventProperty">
            <summary>
            Identifies the RefreshOnEvent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnRefreshOnEventPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RefreshOnEventProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its RefreshOnEvent.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.ConverterProperty">
            <summary>
            Identifies the Converter dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnConverterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ConverterProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its Converter.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.ConverterParameterProperty">
            <summary>
            Identifies the ConverterParameter dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnConverterParameterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ConverterParameterProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its ConverterParameter.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.UIDataProviderParameter.ConverterCultureProperty">
            <summary>
            Identifies the ConverterCulture dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnConverterCulturePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ConverterCultureProperty property changed handler.
            </summary>
            <param name="d">
            UIDataProviderParameter that changed its ConverterCulture.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.#ctor">
            <summary>
            Initializes a new instance of the UIDataProviderParameter class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the UIDataProviderParameter's Loaded event.
            </summary>
            <param name="sender">The UIDataProviderParameter.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.LoadElement">
            <summary>
            Load the element represented by the ElementName property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.FindElement(System.Windows.FrameworkElement,System.String)">
            <summary>
            Find an element using FindName by walking up the parent chain until
            the element is found.
            </summary>
            <param name="element">
            An element in the same namescope as the element to find.
            </param>
            <param name="name">Name of the element to find.</param>
            <returns>
            The desired FrameworkElement, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.UnregisterRefreshOnEventHandler">
            <summary>
            Unregister from the RefreshOnEvent event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.RegisterRefreshOnEventHandler">
            <summary>
            Unregister for the RefreshOnEvent event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnElementRefreshEvent(System.Object,System.EventArgs)">
            <summary>
            Handle the RefreshOnEvent event.
            </summary>
            <param name="sender">The element.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handle updates to element represented by the ElementName property.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.UIDataProviderParameter.GetParameterValue">
            <summary>
            Get the current value of the parameter.
            </summary>
            <returns>The current value of the parameter.</returns>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.ElementName">
            <summary>
            Gets or sets the name of the UIElement that has the
            UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.Property">
            <summary>
            Gets or sets the property of the UIElement that has the
            UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.ParameterType">
            <summary>
            Gets or sets type of the UIDataProviderParameter.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.RefreshOnEvent">
            <summary>
            Gets or sets the name of an event on the UIElement that indicates a
            change in  UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.Converter">
            <summary>
            Gets or sets a value converter applied to the
            UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.ConverterParameter">
            <summary>
            Gets or sets the parameter for the value converter applied to the
            UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UIDataProviderParameter.ConverterCulture">
            <summary>
            Gets or sets the culture for the value converter applied to the
            UIDataProviderParameter's value.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.UIDataProviderParameter.ResolveElementName">
            <summary>
            Occurs when the ElementName property could not be resolved.
            </summary>
        </member>
        <member name="T:System.Windows.DependencyObjectExtensions">
            <summary>
            A set of extension methods for DependencyObjects.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.RaiseRoutedEvent``1(System.Windows.DependencyObject,``0,System.Action{System.Windows.DependencyObject,``0})">
            <summary>
            Raises a routed event by executing an operation on an element and
            all of its ancestors.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
            <param name="that">The element to raise the event on.</param>
            <param name="eventArgs">Information about the event.</param>
            <param name="action">An action that raises the event on a given
            element.</param>
            <returns>The event args after the event has been raised.</returns>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnDragEnter(System.Windows.DependencyObject,System.Windows.DragEventArgs)">
            <summary>
            Raises the attached DragEnter event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnDragOver(System.Windows.DependencyObject,System.Windows.DragEventArgs)">
            <summary>
            Raises the attached DragOver event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnDragLeave(System.Windows.DependencyObject,System.Windows.DragEventArgs)">
            <summary>
            Raises the attached DragLeave event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnDrop(System.Windows.DependencyObject,System.Windows.DragEventArgs)">
            <summary>
            Raises the attached Drop event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnGiveFeedback(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Raises the attached GiveFeedback event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DependencyObjectExtensions.OnQueryContinueDrag(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Raises the attached QueryContinueDrag event on a element.
            </summary>
            <param name="element">The element to raise the event on.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="T:System.Windows.DragAction">
            <summary>
            Specifies how and if a drag-and-drop operation should continue.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.DragAction.Continue">
            <summary>
            The operation will continue.
            </summary>
        </member>
        <member name="F:System.Windows.DragAction.Drop">
            <summary>
            The operation will stop with a drop.
            </summary>
        </member>
        <member name="F:System.Windows.DragAction.Cancel">
            <summary>
            The operation is canceled with no drop message.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DragDecorator">
            <summary>
            A content control that visually indicates what actions are available
            during a drag operation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DragDecorator.EffectsProperty">
            <summary>
            Identifies the Effects dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDecorator.OnEffectsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EffectsProperty property changed handler.
            </summary>
            <param name="d">DragContainer that changed its Effects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DragDecorator.OnEffectsPropertyChanged">
            <summary>
            Changes the appearance of the DragDecorator when the effects 
            property is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDecorator.Update">
            <summary>
            Updates the visual state of the DragContainer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragDecorator.#ctor">
            <summary>
            Initializes a new instance of the DragDecorator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DragDecorator.Effects">
            <summary>
            Gets or sets the drag drop effects.
            </summary>
        </member>
        <member name="T:System.Windows.DragDropCompletedEventArgs">
            <summary>
            Information about the DragDropCompleted event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.DragDropCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the DragCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:System.Windows.DragDropCompletedEventArgs.Effects">
            <summary>
            Gets the effect of the drag operation.
            </summary>
        </member>
        <member name="T:System.Windows.DragDrop">
            <summary>
            Provides helper methods and fields for initiating drag-and-drop operations,
            including a method to begin a drag-and-drop operation, and facilities for
            adding and removing drag-and-drop related event handlers.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.DragDrop.DragEnterEvent">
            <summary>
            Identifies the System.Windows.DragDrop.DragEnter attached event.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop.DragLeaveEvent">
            <summary>
            Identifies the System.Windows.UIElement.DragLeave attached event.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop.DragOverEvent">
            <summary>
            Identifies the System.Windows.UIElement.DragOver attached event.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop.DropEvent">
            <summary>
            Identifies the System.Windows.UIElement.Drop attached event.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop.GiveFeedbackEvent">
            <summary>
            Identifies the System.Windows.UIElement.GiveFeedback attached event.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop.QueryContinueDragEvent">
            <summary>
            Identifies the System.Windows.UIElement.QueryContinueDrag attached event.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.GetAllowDrop(System.Windows.UIElement)">
            <summary>
            Gets the value of the AllowDrop attached property for a specified UIElement.
            </summary>
            <param name="element">The UIElement from which the property value is read.</param>
            <returns>The AllowDrop property value for the UIElement.</returns>
        </member>
        <member name="M:System.Windows.DragDrop.SetAllowDrop(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the AllowDrop attached property to a specified UIElement.
            </summary>
            <param name="element">The UIElement to which the attached property is written.</param>
            <param name="value">The needed AllowDrop value.</param>
        </member>
        <member name="F:System.Windows.DragDrop.AllowDropProperty">
            <summary>
            Identifies the AllowDrop dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.DragDrop._dragOperationInProgress">
            <summary>
            The drag operation in progress.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.OnDragCompleted(System.Windows.DragDropCompletedEventArgs)">
            <summary>
            Raises the DragCompleted event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetDragCompleted">
            <summary>
            Returns an observable that wraps the DragCompleted event.
            </summary>
            <returns>An observable that wraps the DragCompleted event.</returns>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Removes a handler from the attached DragEnter event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached DragEnter event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the handler if the event is handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Adds a handler to the attached DragEnter event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetDragEnterHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the drag enter handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.DragEnterHandlerProperty">
            <summary>
            Identifies the DragEnterHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Removes a handler from the attached DragOver event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached DragOver event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the handler if the event is handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Adds a handler to the attached DragOver event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetDragOverHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the drag Over handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.DragOverHandlerProperty">
            <summary>
            Identifies the DragOverHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Removes a handler from the attached DragLeave event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached DragLeave event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the handler if the event is handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Adds a handler to the attached DragLeave event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetDragLeaveHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the drag Leave handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.DragLeaveHandlerProperty">
            <summary>
            Identifies the DragLeaveHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Removes a handler from the attached Drop event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached Drop event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the handler if the event is handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)">
            <summary>
            Adds a handler to the attached Drop event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetDropHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the drag Leave handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.DropHandlerProperty">
            <summary>
            Identifies the DropHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)">
            <summary>
            Removes a handler from the attached GiveFeedback event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached GiveFeedback event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the 
            handler if the event has been handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)">
            <summary>
            Adds a handler to the attached GiveFeedback event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetGiveFeedbackHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the GiveFeedback Leave handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.GiveFeedbackHandlerProperty">
            <summary>
            Identifies the GiveFeedbackHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)">
            <summary>
            Removes a handler from the attached QueryContinueDrag event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler,System.Boolean)">
            <summary>
            Adds a handler to the attached QueryContinueDrag event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">A value Indicating whether to invoke the 
            handler if the event has been handled.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)">
            <summary>
            Adds a handler to the attached QueryContinueDrag event.
            </summary>
            <param name="element">The DependencyObject to attach an event handler for.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:System.Windows.DragDrop.GetQueryContinueDragHandlers(System.Windows.DependencyObject)">
            <summary>
            Gets the QueryContinueDrag Leave handler.
            </summary>
            <param name="element">The element to attach the event handler to.</param>
            <returns>The event handler.</returns>
        </member>
        <member name="F:System.Windows.DragDrop.QueryContinueDragHandlerProperty">
            <summary>
            Identifies the QueryContinueDragHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject,System.Object,System.Windows.DragDropEffects,System.Windows.DragDropKeyStates)">
            <summary>
            Initiates a drag-and-drop operation.
            </summary>
            <param name="dragSource">A reference to the dependency object that is the source of the data being
            dragged.</param>
            <param name="data">A data object that contains the data being dragged.</param>
            <param name="allowedEffects">One of the System.Windows.DragDropEffects values that specifies permitted
            effects of the drag-and-drop operation.</param>
            <param name="initialKeyState">The initial key state when the drag operation begins.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddHandler(System.Windows.UIElement,System.Windows.ExtendedRoutedEvent,System.Delegate,System.Boolean)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler
            to the handler collection on the current element.
            </summary>
            <param name="that">The element to add a handler for.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
            <param name="handledEventsToo">True to register the handler such that it is invoked even when the routed
            event is marked handled in its event data; false to register the handler
            with the default condition that it will not be invoked if the routed event
            is already marked handled. The default is false.</param>
        </member>
        <member name="M:System.Windows.DragDrop.AddHandler(System.Windows.UIElement,System.Windows.ExtendedRoutedEvent,System.Delegate)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler
            to the handler collection on the current element.
            </summary>
            <param name="that">The element to add a handler for.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
        </member>
        <member name="M:System.Windows.DragDrop.RemoveHandler(System.Windows.UIElement,System.Windows.ExtendedRoutedEvent,System.Delegate)">
            <summary>
            Removes a routed event handler for a specified routed event, removing the handler
            from the handler collection on the current element.
            </summary>
            <param name="that">The element to remove the handler from.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
        </member>
        <member name="P:System.Windows.DragDrop.IsDragInProgress">
            <summary>
            Gets a value indicating whether a drag is in progress.
            </summary>
        </member>
        <member name="E:System.Windows.DragDrop.DragDropCompleted">
            <summary>
            An event that is raised when a drag operation is completed.
            </summary>
        </member>
        <member name="T:System.Windows.DragDropEffects">
            <summary>
            Specifies the effects of a drag-and-drop operation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.DragDropEffects.Scroll">
            <summary>
            Scrolling is about to start or is currently occurring in the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.All">
            <summary>
            The data is copied, removed from the drag source, and scrolled in the drop
            target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.None">
            <summary>
            The drop target does not accept the data.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Copy">
            <summary>
            The data is copied to the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Move">
            <summary>
            The data from the drag source is moved to the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Link">
            <summary>
            The data from the drag source is linked to the drop target.
            </summary>
        </member>
        <member name="T:System.Windows.DragDropKeyStates">
            <summary>
            Specifies the current state of the modifier keys (SHIFT, CTRL, and ALT),
            as well as the state of the mouse buttons.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.None">
            <summary>
            No modifier keys or mouse buttons are pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.LeftMouseButton">
            <summary>
            The left mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.RightMouseButton">
            <summary>
            The right mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.ShiftKey">
            <summary>
            The shift (SHIFT) key is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.ControlKey">
            <summary>
            The control (CTRL) key is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.MiddleMouseButton">
            <summary>
            The middle mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.AltKey">
            <summary>
            The ALT key is pressed.
            </summary>
        </member>
        <member name="T:System.Windows.DragEventArgs">
            <summary>
            Contains arguments relevant to all drag-and-drop events (System.Windows.DragDrop.DragEnter,
            System.Windows.DragDrop.DragLeave, System.Windows.DragDrop.DragOver, and
            System.Windows.DragDrop.Drop).
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.ExtendedRoutedEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the ExtendedRoutedEventArgs class.
            </summary>
        </member>
        <member name="P:System.Windows.ExtendedRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the present state of the 
            event handling for a routed event as it travels the route.
            </summary>
        </member>
        <member name="P:System.Windows.ExtendedRoutedEventArgs.OriginalSource">
            <summary>
            Gets the original reporting source as determined by pure hit testing, before
            any possible System.Windows.RoutedEventArgs.Source adjustment by a parent
            class.
            </summary>
        </member>
        <member name="M:System.Windows.DragEventArgs.#ctor">
            <summary>
            Initializes a new instance of the DragEventArgs class.
            </summary>
        </member>
        <member name="M:System.Windows.DragEventArgs.#ctor(System.Windows.DragEventArgs)">
            <summary>
            Initializes a new instance of the DragEventArgs class.
            </summary>
            <param name="args">The DragEventArgs object to use as the base for
            this DragEventArgs.</param>
        </member>
        <member name="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns a drop point that is relative to a specified System.Windows.UIElement.
            </summary>
            <param name="relativeTo">A UIElement object for which to get a relative drop point.</param>
            <returns>A drop point that is relative to the element specified in relativeTo.</returns>
        </member>
        <member name="P:System.Windows.DragEventArgs.AllowedEffects">
            <summary>
            Gets a member of the System.Windows.DragDropEffects enumeration that specifies
            which operations are allowed by the originator of the drag event.
            </summary>
        </member>
        <member name="P:System.Windows.DragEventArgs.Data">
            <summary>
            Gets a data object that contains the data associated with the corresponding
            drag event.
            </summary>
        </member>
        <member name="P:System.Windows.DragEventArgs.Effects">
            <summary>
            Gets or sets the target drop-and-drop operation.
            </summary>
        </member>
        <member name="P:System.Windows.DragEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the MouseEventArgs related to the DragEventArgs.
            </summary>
        </member>
        <member name="T:System.Windows.DragEventHandler">
            <summary>
            Represents a method that will handle drag-and-drop routed events, for example
            System.Windows.UIElement.DragEnter.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.DragOperation">
            <summary>
            An asynchronous drag operation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.DragOperation._dragStartEventArgs">
            <summary>
            Information retrieved when the drag operation began.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._allowedEffects">
            <summary>
            The effects authorized by the drag source.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._lastDragEventArgs">
            <summary>
            Information about the last drag event.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._dragStarted">
            <summary>
            An event that is raised when a drag operations is started.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._dragSourceQueryContinueDrag">
            <summary>
            An event that is raised when the drag source should be queried 
            whether to continue the drag operation.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._dragCompleted">
            <summary>
            An event that is raised when the drag operation is completed.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._dragSource">
            <summary>
            The source of the data being dragged.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._keyStates">
            <summary>
            The state of the input keys relevant to drag operations.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._currentDragOverElement">
            <summary>
            The element currently being dragged over.
            </summary>
        </member>
        <member name="F:System.Windows.DragOperation._escapePressed">
            <summary>
            A value indicating whether the escape key is pressed.
            </summary>
        </member>
        <member name="M:System.Windows.DragOperation.#ctor(System.Windows.DependencyObject,System.Object,System.Windows.DragDropEffects,System.Windows.DragDropKeyStates)">
            <summary>
            Initializes a new instance of the DragOperation class.
            </summary>
            <param name="dragSource">The source of the drag operation.</param>
            <param name="data">The data associated with the drag operation.
            </param>
            <param name="allowedEffects">The allowed effects of the drag 
            operation.
            </param>
            <param name="initialKeyState">The initial state of the keys relevant 
            to drag operations.</param>
        </member>
        <member name="M:System.Windows.DragOperation.Subscribe(System.Collections.Generic.IObserver{System.Windows.DragDropEffects})">
            <summary>
            This method starts the drag operation and sends the results to 
            an observer.
            </summary>
            <param name="observer">The observer listening for the result of
            the drag operation.</param>
            <returns>A disposable object used to detach from a drag operation.
            </returns>
        </member>
        <member name="M:System.Windows.DragOperation.RaiseRoutedDragEvent(System.Windows.DependencyObject,System.Windows.DragEventArgs,System.Action{System.Windows.DependencyObject,System.Windows.DragEventArgs})">
            <summary>
            Raises a routed drag event and stores information about the drag
            event.
            </summary>
            <param name="element">An element that accepts a drop.</param>
            <param name="eventArgs">Information about the drag event.</param>
            <param name="raiseAction">An action that raises the specific drag event.
            </param>
            <returns>Information about the drag event that may have been
            modified by handlers.</returns>
        </member>
        <member name="M:System.Windows.DragOperation.RaiseDragSourceEvents(System.Windows.DragEventArgs)">
            <summary>
            Raises the GiveFeedback and QueryContinueDrag events on the drag
            source.
            </summary>
            <param name="args">Information about the last drag event.</param>
        </member>
        <member name="M:System.Windows.DragOperation.GetDragDropEffects(System.Windows.DragDropEffects)">
            <summary>
            Returns the allowed effects by analyzing the state of the keys 
            pressed.  If the control key is pressed the user is requesting a 
            copy. If copy is available the effect will be only copy, if not 
            available the effect will be None.
            </summary>
            <param name="allowedEffects">The allowed effects.</param>
            <returns>The effects of the drag operation.</returns>
        </member>
        <member name="M:System.Windows.DragOperation.OnDragSourceGiveFeedback(System.Windows.DragEventArgs)">
            <summary>
            Raises the GiveFeedback event on the drag source.
            </summary>
            <param name="args">Information about the GiveFeedback event.
            </param>
        </member>
        <member name="M:System.Windows.DragOperation.OnDragSourceQueryContinueDrag">
            <summary>
            Raises the QueryContinueDragEvent on the drag source.
            </summary>
            <returns>Information about the QueryContinueDrag event.</returns>
        </member>
        <member name="M:System.Windows.DragOperation.OnCancel">
            <summary>
            This method is invoked when the drag operation is cancelled.
            </summary>
        </member>
        <member name="M:System.Windows.DragOperation.OnTargetDrop">
            <summary>
            This method raises the Drop event.
            </summary>
        </member>
        <member name="M:System.Windows.DragOperation.GetDragOver">
            <summary>
            Gets an event raised when an item is dragged over any object in the 
            visual tree.
            </summary>
            <returns>An event raised when an item is dragged over any object in the 
            visual tree.</returns>
        </member>
        <member name="M:System.Windows.DragOperation.GetPreviousAndNextDragOver">
            <summary>
            Gets an event that raises all drag over events pair-wise.
            </summary>
            <returns>An event that raises all drag over events pair-wise.
            </returns>
        </member>
        <member name="M:System.Windows.DragOperation.OnDragEnter(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Raises the DragEnter event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DragOperation.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Raises the DragOver event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">Information about the event.</param>
        </member>
        <member name="M:System.Windows.DragOperation.OnDragLeave">
            <summary>
            Raises the DragLeave event.
            </summary>
        </member>
        <member name="M:System.Windows.DragOperation.Dispose">
            <summary>
            Disposes of the subject objects.
            </summary>
        </member>
        <member name="P:System.Windows.DragOperation.IsDragging">
            <summary>
            Gets or sets a value indicating whether a drag operation is in 
            process.
            </summary>
        </member>
        <member name="P:System.Windows.DragOperation.AllowedEffects">
            <summary>
            Gets the effective allowed effects based on the allowed effects and
            the keys pressed.
            </summary>
        </member>
        <member name="T:System.Linq.EnumerableExtensions">
            <summary>
            A set of extension methods for IEnumerable.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Linq.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepend an item to a sequence.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to append the item to.</param>
            <param name="value">The item to append to the sequence.</param>
            <returns>A new sequence.</returns>
        </member>
        <member name="T:System.Windows.ExtendedRoutedEvent">
            <summary>
            Represents and identifies a routed event and declares its characteristics.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEvent.#ctor">
            <summary>
            Creates a new instance of the ExtendedRoutedEvent class.
            </summary>
        </member>
        <member name="T:System.Windows.ExtendedRoutedEventHandlerCollection`2">
            <summary>
            Stores a collection of routed event handlers.
            </summary>
            <typeparam name="THandler">The type of the event handler.</typeparam>
            <typeparam name="TEventArgs">The type of the event arguments.
            </typeparam>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.ExtendedRoutedEventHandlerCollection`2._handlers">
            <summary>
            A collection of handlers and flags indicating whether to raise 
            invoke the handler if the event has already been handled.
            </summary>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventHandlerCollection`2.#ctor(System.Action{`0,`1})">
            <summary>
            Initializes a new instance of the ExtendedRoutedEventHandlerCollection class.
            </summary>
            <param name="raiseAction">The action invoked when the event is
            raised.</param>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventHandlerCollection`2.Add(`0)">
            <summary>
            Adds a handler to the collection.
            </summary>
            <param name="handler">The handler to add to the collection.</param>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventHandlerCollection`2.Add(`0,System.Boolean)">
            <summary>
            Adds a handler to the collection.
            </summary>
            <param name="handler">The handler to add to the collection.</param>
            <param name="handledEventsToo">A value indicating whether to invoke
            the handler if the event has been handled.</param>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventHandlerCollection`2.Remove(`0)">
            <summary>
            Removes a handler from the collection.
            </summary>
            <param name="handler">The handler to remove from the collection.
            </param>
        </member>
        <member name="M:System.Windows.ExtendedRoutedEventHandlerCollection`2.Raise(`1)">
            <summary>
            Raises the event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="P:System.Windows.ExtendedRoutedEventHandlerCollection`2.RaiseAction">
            <summary>
            Gets an action invoked when the event is raised.
            </summary>
        </member>
        <member name="T:System.Windows.GiveFeedbackEventArgs">
            <summary>
            Contains arguments for the System.Windows.DragDrop.GiveFeedback event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.GiveFeedbackEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GiveFeedbackEventArgs class.
            </summary>
        </member>
        <member name="P:System.Windows.GiveFeedbackEventArgs.Effects">
            <summary>
            Gets a value that indicates the effects of drag-and-drop operation.
            </summary>
        </member>
        <member name="T:System.Windows.GiveFeedbackEventHandler">
            <summary>
            Represents a method that will handle the feedback routed event from in-process
            drag-and-drop operations, for instance System.Windows.UIElement.GiveFeedback.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.IDataObjectExtensions">
            <summary>
            A collection of extension methods for the IDataObject type.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IDataObjectExtensions.GetData(System.Windows.IDataObject)">
            <summary>
            Retrieves the data based using the first acceptable format.
            </summary>
            <param name="that">The data object.</param>
            <returns>The data retrieved from the data object.</returns>
        </member>
        <member name="T:System.Windows.Controls.IndicatingInsertionLocationEventArgs">
            <summary>
            Information about the IndicatingInsertionLocation event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.IndicatingInsertionLocationEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns a drop point that is relative to a specified System.Windows.UIElement.
            </summary>
            <param name="relativeTo">A UIElement object for which to get a relative drop point.</param>
            <returns>A drop point that is relative to the element specified in relativeTo.</returns>
        </member>
        <member name="M:System.Windows.Controls.IndicatingInsertionLocationEventArgs.#ctor">
            <summary>
            Initializes a new instance of the IndicationInsertionLocationEventArgs class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.IndicatingInsertionLocationEventArgs.DragEventArgs">
            <summary>
            Gets or sets the DragEventArgs related to the event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.IndicatingInsertionLocationEventArgs.DropTarget">
            <summary>
            Gets or sets the drop target.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.IndicatingInsertionLocationEventArgs.InsertionIndicatorGeometry">
            <summary>
            Gets or sets the geometry to use to indicate the insertion point.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemDragEventArgs">
            <summary>
            Information describing a drag event on a UIElement.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ItemDragEventArgs.#ctor">
            <summary>
            Initializes a new instance of the ItemDragEventArgs class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemDragEventArgs.#ctor(System.Windows.Controls.ItemDragEventArgs)">
            <summary>
            Initializes a new instance of the ItemDragEventArgs class using an
            existing instance.
            </summary>
            <param name="args">The instance to use as the template when creating
            the new instance.</param>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.KeyStates">
            <summary>
            Gets the key states.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.AllowedEffects">
            <summary>
            Gets or sets the allowed effects.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.Effects">
            <summary>
            Gets or sets the effects of the completed drag operation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.DragSource">
            <summary>
            Gets the control that is the source of the drag.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.Item">
            <summary>
            Gets the data associated with the item container being dragged.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.Offset">
            <summary>
            Gets or sets the mouse offset from the item being dragged at the 
            beginning of the drag operation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemDragEventArgs.DragDecoratorContent">
            <summary>
            Gets or sets the content to insert into the DragDecorator.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlDragDropBehavior">
            <summary>
            Adds drag and drop capabilities to ItemsControls.
            </summary> 
        </member>
        <member name="M:System.Windows.Controls.ItemsControlDragDropBehavior.#ctor">
            <summary>
            Initializes a new instance of the ItemsControlDragDropBehavior class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlExtensions">
            <summary>
            A set of extension methods for ItemsControls.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.CanAddItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Returns a value indicating whether an item can be added to an
            ItemsControl.
            </summary>
            <param name="that">The ItemsControl instance.</param>
            <param name="item">The item to be added.</param>
            <returns>A value Indicating whether an item can be added to an
            ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.CanRemoveItem(System.Windows.Controls.ItemsControl)">
            <summary>
            Returns a value indicating whether an item can be removed from the
            ItemsControl.
            </summary>
            <param name="that">The items control.</param>
            <returns>A value indicating whether an item can be removed from the
            ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.InsertItem(System.Windows.Controls.ItemsControl,System.Int32,System.Object)">
            <summary>
            Inserts an item into an ItemsControl.
            </summary>
            <param name="that">The ItemsControl instance.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.AddItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Adds an item to an ItemsControl.
            </summary>
            <param name="that">The ItemsControl instance.</param>
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.RemoveItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Removes an item from an ItemsControl.
            </summary>
            <param name="that">The ItemsControl instance.</param>
            <param name="item">The item to be removed.</param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemCount(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the number of items in an ItemsControl.
            </summary>
            <param name="that">The ItemsControl instance.</param>
            <returns>The number of items in the ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="T:System.Linq.ObservableExtensions">
            <summary>
            A set of extension methods for IObservable objects.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Linq.ObservableExtensions.IgnoreAll``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Converts an observable sequence of values into unit values.
            </summary>
            <typeparam name="T">The type of the observable sequence.</typeparam>
            <param name="that">The sequence to convert.</param>
            <returns>A sequence of unit values.</returns>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DockPanel_OnDockPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Dock value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_EnsureValidDoubleValue_InvalidDoubleValue">
            <summary>
              Looks up a localized string similar to Invalid double value &apos;{0}&apos;: valid value is of double type and within decimal range..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_EnsureValidIncrementValue_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Increment value &apos;{0}&apos;: valid value is of double type, within decimal range, and non negative..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_OnDecimalPlacesPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DecimalPlaces value &apos;{0}&apos;: valid value is of int type and within 1 and 15 inclusive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ObjectDataProvider_GetData_NoSource">
            <summary>
              Looks up a localized string similar to ObjectDataProvider needs either an ObjectType or ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ObjectDataProvider_GetData_NoSource1">
            <summary>
              Looks up a localized string similar to ObjectDataProvider needs either an ObjectType or ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ObjectDataProvider_OnlyOneSource">
            <summary>
              Looks up a localized string similar to ObjectDataProvider can only be assigned an ObjectType or an ObjectInstance, not both..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ObjectDataProvider_OnlyOneSource1">
            <summary>
              Looks up a localized string similar to ObjectDataProvider can only be assigned an ObjectType or an ObjectInstance, not both..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.RoutedPropertyChangingEventArgs_CancelSet_InvalidOperation">
            <summary>
              Looks up a localized string similar to The RoutedPropertyChangingEvent cannot be canceled!.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeView_OnSelectedItemPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedItem..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeView_OnSelectedValuePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedValue..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewItem_OnHasItemsPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property HasItems..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewItem_OnIsSelectionActivePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property IsSelectionActive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnApplyTemplate_OnlyOnce">
            <summary>
              Looks up a localized string similar to The template can only be applied one time..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid StretchDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Stretch value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid length value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnOrientationPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Orientation value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:System.Windows.QueryContinueDragEventArgs">
            <summary>
            Contains arguments for the System.Windows.DragDrop.QueryContinueDrag event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.QueryContinueDragEventArgs.#ctor">
            <summary>
            Initializes a new instance of the QueryContinueDragEventArgs class.
            </summary>
        </member>
        <member name="P:System.Windows.QueryContinueDragEventArgs.Action">
            <summary>
            Gets or sets the current status of the associated drag-and-drop operation.
            </summary>
        </member>
        <member name="P:System.Windows.QueryContinueDragEventArgs.EscapePressed">
            <summary>
            Gets a value indicating whether the ESC key has been pressed.
            </summary>
        </member>
        <member name="P:System.Windows.QueryContinueDragEventArgs.KeyStates">
            <summary>
            Gets a flag enumeration Indicating the current state of the SHIFT, CTRL,
            and ALT keys, as well as the state of the mouse buttons.
            </summary>
        </member>
        <member name="T:System.Windows.QueryContinueDragEventHandler">
            <summary>
            Represents a method that will handle the routed events that enables a drag-and-drop
            operation to be canceled by the drag source, for example System.Windows.UIElement.QueryContinueDrag.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Collections.ObjectModel.SelectionCollection">
            <summary>
            A collection of selected items.
            </summary>
        </member>
        <member name="M:System.Collections.ObjectModel.SelectionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of a SelectionCollection.
            </summary>
            <param name="items">The items to include in the selection 
            collection.</param>
        </member>
        <member name="T:System.Windows.ExtendedSystemParameters">
            <summary>
            Contains properties that you can use to query system settings.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="P:System.Windows.ExtendedSystemParameters.MinimumHorizontalDragDistance">
            <summary>
            Gets the minimum amount of horizontal drag distance before a drag operation occurs.
            </summary>
            <returns>The minimum amount of horizontal drag distance before a drag operation occurs.</returns>
        </member>
        <member name="P:System.Windows.ExtendedSystemParameters.MinimumVerticalDragDistance">
            <summary>
            Gets the minimum amount of vertical drag distance before a drag operation occurs.
            </summary>
            <returns>The minimum amount of vertical drag distance before a drag operation occurs.</returns>
        </member>
        <member name="T:System.Tuple`2">
            <summary>
            Represents a 2-tuple, or pair.
            </summary>
            <typeparam name="T1">The type of the first component.</typeparam>
            <typeparam name="T2">The type of the second component.</typeparam>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
            <param name="value1">The value of the first component.</param>
            <param name="value2">The value of the second component.</param>
        </member>
        <member name="P:System.Tuple`2.Item1">
            <summary>
            Gets the value of the first component.
            </summary>
        </member>
        <member name="P:System.Tuple`2.Item2">
            <summary>
            Gets the value of the second component.
            </summary>
        </member>
        <member name="T:System.Tuple">
            <summary>
            Provides static methods for creating tuple objects.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Tuple.Create``2(``0,``1)">
            <summary>
            Creates a new 2-tuple, or pair.
            </summary>
            <typeparam name="T1">The type of the first component of the tuple.</typeparam>
            <typeparam name="T2">The type of the second component of the tuple.</typeparam>
            <param name="value1">The value of the first component of the tuple.</param>
            <param name="value2">The value of the second component of the tuple.</param>
            <returns>A 2-tuple whose value is (item1, item2).</returns>
        </member>
        <member name="T:System.Windows.UIElementExtensions">
            <summary>
            A collection of extension methods for the UIElement class.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetMouseMove(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the MouseMove event.
            </summary>
            <param name="that">The instance to retrieve the event for.</param>
            <returns>An observable that wraps the MouseMove event.</returns>	
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetMouseMoveOnAllDescendents(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the MouseMove event on an instance 
            and all of it's descendents.
            </summary>
            <param name="that">The instance to retrieve the event for.</param>
            <returns>An observable that wraps the MouseMove event on an instance 
            and all of it's descendents.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetMouseLeftButtonDownAlways(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the MouseLeftButtonDown event and
            returns even if one of the events involved is handled.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that that wraps the MouseLeftButtonDown event 
            and returns even if one of the events involved is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetMouseLeftButtonUpAlways(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the MouseLeftButtonUp event and
            returns even if one of the events involved is handled.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that that wraps the MouseLeftButtonUp event 
            and returns even if one of the events involved is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyDownAlways(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the KeyDown event and
            returns even if one of the events involved is handled.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that that wraps the KeyDown event 
            and returns even if one of the events involved is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyUpAlways(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the KeyUp event and
            returns even if one of the events involved is handled.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that that wraps the KeyUp event 
            and returns even if one of the events involved is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyUpAlwaysOnAllDescendents(System.Windows.UIElement)">
            <summary>
            Returns an observable that wraps the KeyUp event and returns even if 
            one of the events involved is handled or occurs in a descendent.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that wraps the KeyUp event and returns even if 
            one of the events involved is handled or occurs in a descendent.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyStateChanged(System.Collections.Generic.IObservable{System.Collections.Generic.Event{System.Windows.Input.MouseButtonEventArgs}},System.Collections.Generic.IObservable{System.Collections.Generic.Event{System.Windows.Input.MouseButtonEventArgs}},System.Collections.Generic.IObservable{System.Collections.Generic.Event{System.Windows.Input.KeyEventArgs}},System.Collections.Generic.IObservable{System.Collections.Generic.Event{System.Windows.Input.KeyEventArgs}},System.Windows.DragDropKeyStates)">
            <summary>
            Returns an observable that returns a DragDropKeyStates value.  The
            observable is composed of mouse down and up observables and key down
            and up observables.
            </summary>
            <param name="mouseDownObservable">An event raised when a mouse 
            button is depressed.</param>
            <param name="mouseUpObservable">An event raised when a mouse button
            is released.</param>
            <param name="keyDownObservable">An event raised when a key is
            pressed down.</param> 
            <param name="keyUpObservable">An event raised when a key is 
            released.</param>
            <param name="initialState">The initial state of the drag and
            drop keys.</param>
            <returns>An observable that returns a DragDropKeyStates value
            whenever it changes, even if one of the events involved
            is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyStateChangedAlways(System.Windows.UIElement,System.Windows.DragDropKeyStates)">
            <summary>
            Returns an observable that returns a DragDropKeyStates value
            whenever it changes, even if one of the events involved
            is handled.
            </summary>
            <param name="that">The element to listen to.</param>
            <param name="initialState">The initial state DragDropKeyStates.
            </param>
            <returns>An observable that returns a DragDropKeyStates value
            whenever it changes, even if one of the events involved
            is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetKeyStateChangedAlwaysOnAllDescendents(System.Windows.UIElement,System.Windows.DragDropKeyStates)">
            <summary>
            Returns an observable that returns a DragDropKeyStates value
            whenever it changes, even if one of the events involved
            is handled or occurs in a descendent.
            </summary>
            <param name="that">The element to listen to.</param>
            <param name="initialState">The initial state DragDropKeyStates.
            </param>
            <returns>An observable that returns a DragDropKeyStates value
            whenever it changes, even if one of the events involved
            is handled.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.GetEscapePressedChangedAlwaysOnAllDescendents(System.Windows.UIElement)">
            <summary>
            Returns an observable that returns a value indicating 
            whether escape is pressed, even if one of the events involved
            is handled or occurs in a descendent.
            </summary>
            <param name="that">The element to listen to.</param>
            <returns>An observable that returns a value indicating 
            whether escape is pressed, even if one of the events involved
            is handled or occurs in a descendent.</returns>
        </member>
        <member name="M:System.Windows.UIElementExtensions.ToDragDropKeyStates(System.Windows.Input.Key)">
            <summary>
            Converts the key enumeration into the appropriate DragDropKeyStates
            value.
            </summary>
            <param name="key">The key value.</param>
            <returns>The appropriate DragDropKeyStates value.</returns>
        </member>
        <member name="T:System.Windows.Media.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Media.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)">
            <summary>
            Returns the visual tree ancestors of an element.
            </summary>
            <param name="dependencyObject">The descendent of the ancestors.</param>
            <returns>The visual tree ancestors of the element.</returns>
        </member>
        <member name="M:System.Windows.Media.VisualTreeExtensions.GetVisualDescendents(System.Windows.DependencyObject)">
            <summary>
            Use VisualTreeHelper to enumerate the descendants of a dependency
            object.
            </summary>
            <param name="parent">Dependency object.</param>
            <returns>Sequence of the object's visual children.</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.PopupHelper">
            <summary>
            PopupHelper is a simple wrapper type that helps abstract platform
            differences out of the Popup.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PopupHelper._hasControlLoaded">
            <summary>
            A value indicating whether Silverlight has loaded at least once, 
            so that the wrapping canvas is not recreated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the PopupHelper class.
            </summary>
            <param name="parent">The parent control.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.#ctor(System.Windows.Controls.Control,System.Windows.Controls.Primitives.Popup)">
            <summary>
            Initializes a new instance of the PopupHelper class.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="popup">The Popup template part.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.Arrange">
            <summary>
            Arrange the popup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.OnClosed(System.EventArgs)">
            <summary>
            Fires the Closed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.OnPopupClosedStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Actually closes the popup after the VSM state animation completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.BeforeOnApplyTemplate">
            <summary>
            Should be called by the parent control before the base
            OnApplyTemplate method is called.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.AfterOnApplyTemplate">
            <summary>
            Should be called by the parent control after the base
            OnApplyTemplate method is called.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.PopupChild_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            The size of the popup child has changed.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.OutsidePopup_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse has clicked outside of the popup.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.Popup_Closed(System.Object,System.EventArgs)">
            <summary>
            Connected to the Popup Closed event and fires the Closed event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.OnFocusChanged(System.EventArgs)">
            <summary>
            Connected to several events that indicate that the FocusChanged 
            event should bubble up to the parent control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.OnUpdateVisualStates(System.EventArgs)">
            <summary>
            Fires the UpdateVisualStates event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.PopupChild_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has received focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.PopupChild_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has lost focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.PopupChild_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The popup child has had the mouse enter its bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.PopupHelper.PopupChild_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The mouse has left the popup child's bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.UsesClosingVisualState">
            <summary>
            Gets a value indicating whether a visual popup state is being used
            in the current template for the Closed state. Setting this value to
            true will delay the actual setting of Popup.IsOpen to false until
            after the visual state's transition for Closed is complete.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.Parent">
            <summary>
            Gets or sets the parent control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.OutsidePopupCanvas">
            <summary>
            Gets or sets the expansive area outside of the popup.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.PopupChildCanvas">
            <summary>
            Gets or sets the canvas for the popup child.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum drop down height value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.Popup">
            <summary>
            Gets the Popup control instance.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.IsOpen">
            <summary>
            Gets or sets a value indicating whether the actual Popup is open.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PopupHelper.PopupChild">
            <summary>
            Gets or sets the popup child framework element. Can be used if an
            assumption is made on the child type.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.PopupHelper.Closed">
            <summary>
            The Closed event is fired after the Popup closes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.PopupHelper.FocusChanged">
            <summary>
            Fired when the popup children have a focus event change, allows the
            parent control to update visual states or react to the focus state.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.PopupHelper.UpdateVisualStates">
            <summary>
            Fired when the popup children intercept an event that may indicate
            the need for a visual state update by the parent control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.BindingEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.BindingEvaluator`1._binding">
            <summary>
            Gets or sets the string value binding used by the control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.BindingEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.#ctor">
            <summary>
            Initializes a new instance of the BindingEvaluator class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingEvaluator class,
            setting the initial binding to the provided parameter.
            </summary>
            <param name="binding">The initial string value binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.ClearDataContext">
            <summary>
            Clears the data context so that the control does not keep a
            reference to the last-looked up item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.GetDynamicValue(System.Object,System.Boolean)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <param name="clearDataContext">If set to true, this parameter will
            clear the data context immediately after retrieving the value.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="P:System.Windows.Controls.BindingEvaluator`1.Value">
            <summary>
            Gets or sets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingEvaluator`1.ValueBinding">
            <summary>
            Gets or sets the value binding.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.Controls.ScrollExtensions">
            <summary>
            The ScrollExtensions class provides utility methods for scrolling items
            ScrollViewers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ScrollExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.GetTopAndBottom(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Double@,System.Double@)">
            <summary>
            Get the top and bottom of an element with respect to its parent.
            </summary>
            <param name="element">The element to get the position of.</param>
            <param name="parent">The parent of the element.</param>
            <param name="top">Vertical offset to the top of the element.</param>
            <param name="bottom">
            Vertical offset to the bottom of the element.
            </param>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteBox">
            <summary>
            Represents a control that provides a text box for user input and a
            drop-down that contains possible matches based on the input in the text
            box.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementSelectionAdapter">
            <summary>
            Specifies the name of the selection adapter TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementSelector">
            <summary>
            Specifies the name of the Selector TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementPopup">
            <summary>
            Specifies the name of the Popup TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementTextBox">
            <summary>
            The name for the text box part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementTextBoxStyle">
            <summary>
            The name for the text box style.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ElementItemContainerStyle">
            <summary>
            The name for the adapter's item container style.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._items">
            <summary>
            Gets or sets a local cached copy of the items data.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._view">
            <summary>
            Gets or sets the observable collection that contains references to 
            all of the items in the generated view of data that is provided to 
            the selection-style control adapter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._ignoreTextPropertyChange">
            <summary>
            Gets or sets a value to ignore a number of pending change handlers. 
            The value is decremented after each use. This is used to reset the 
            value of properties without performing any of the actions in their 
            change handlers.
            </summary>
            <remarks>The int is important as a value because the TextBox 
            TextChanged event does not immediately fire, and this will allow for
            nested property changes to be ignored.</remarks>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._ignorePropertyChange">
            <summary>
            Gets or sets a value indicating whether to ignore calling a pending 
            change handlers. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._ignoreTextSelectionChange">
            <summary>
            Gets or sets a value indicating whether to ignore the selection 
            changed event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._skipSelectedItemTextUpdate">
            <summary>
            Gets or sets a value indicating whether to skip the text update 
            processing when the selected item is updated.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._textSelectionStart">
            <summary>
            Gets or sets the last observed text box selection start location.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._userCalledPopulate">
            <summary>
            Gets or sets a value indicating whether the user initiated the 
            current populate call.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._popupHasOpened">
            <summary>
            A value indicating whether the popup has been opened at least once.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._delayTimer">
            <summary>
            Gets or sets the DispatcherTimer used for the MinimumPopulateDelay 
            condition for auto completion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._allowWrite">
            <summary>
            Gets or sets a value indicating whether a read-only dependency 
            property change handler should allow the value to be set.  This is 
            used to ensure that read-only properties cannot be changed via 
            SetValue, etc.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._valueBindingEvaluator">
            <summary>
            Gets or sets the BindingEvaluator, a framework element that can
            provide updated string values from a single binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._collectionChangedWeakEventListener">
            <summary>
            A weak event listener for the collection changed event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLengthProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnMinimumPrefixLengthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPrefixLengthProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its MinimumPrefixLength.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelayProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnMinimumPopulateDelayPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPopulateDelayProperty property changed handler. Any current 
            dispatcher timer will be stopped. The timer will not be restarted 
            until the next TextUpdate call by the user.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its 
            MinimumPopulateDelay.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled" />
            dependency property.</value>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ItemTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate" />
            dependency property.</value>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ItemContainerStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle" />
            dependency property.</value>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.TextBoxStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle" />
            dependency property.</value>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnMaxDropDownHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxDropDownHeightProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its MaxDropDownHeight.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.IsDropDownOpenProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnIsDropDownOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its IsDropDownOpen.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ItemsSourceProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemsSource.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SelectedItem" />
            dependency property.
            </summary>
            <value>The identifier the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SelectedItem" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler. Fires the 
            SelectionChanged event. The event data will contain any non-null
            removed items and non-null additions.
            </summary>
            <param name="d">AutoCompleteBox that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnSelectedItemChanged(System.Object)">
            <summary>
            Called when the selected item is changed, updates the text value
            that is displayed in the text box part.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.TextProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its Text.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.SearchTextProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnSearchTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OnSearchTextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its SearchText.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.FilterModeProperty">
            <summary>
            Gets the identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.FilterMode" />
            dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnFilterModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FilterModeProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its FilterMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.ItemFilterProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" />
            dependency property.</value>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnItemFilterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemFilterProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemFilter.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox.TextFilterProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" />
            dependency property.</value>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._text">
            <summary>
            The TextBox template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteBox._adapter">
            <summary>
            The SelectionAdapter.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control and its contents.
            </summary>
            <param name="finalSize">The size allowed for the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
            <returns>The <paramref name="finalSize" />, unchanged.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownPopupUpdateVisualStates(System.Object,System.EventArgs)">
            <summary>
            Allows the popup wrapper to fire visual state change events.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownFocusChanged(System.Object,System.EventArgs)">
            <summary>
            Allows the popup wrapper to fire the FocusChanged event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.ClosingDropDown(System.Boolean)">
            <summary>
            Begin closing the drop-down.
            </summary>
            <param name="oldValue">The original value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OpeningDropDown(System.Boolean)">
            <summary>
            Begin opening the drop down by firing cancelable events, opening the
            drop-down or reverting, depending on the event argument values.
            </summary>
            <param name="oldValue">The original value, if needed for a revert.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an expand/collapse event through the automation peer.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.DropDownPopup_Closed(System.Object,System.EventArgs)">
            <summary>
            Connects to the DropDownPopup Closed event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>A
            <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            object.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.FocusChanged(System.Boolean)">
            <summary>
            Handles the FocusChanged event.
            </summary>
            <param name="hasFocus">A value indicating whether the control 
            currently has the focus.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.HasFocus">
            <summary>
            Determines whether the text box or drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control has
            focus.
            </summary>
            <returns>true to indicate the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus;
            otherwise, false.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.GotFocus" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.LostFocus" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.ControlIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the change of the IsEnabled property.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.GetSelectionAdapterPart">
            <summary>
            Returns the
            <see cref="T:System.Windows.Controls.ISelectionAdapter" /> part, if
            possible.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ISelectionAdapter" /> object,
            if possible. Otherwise, null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.PopulateDropDown(System.Object,System.EventArgs)">
            <summary>
            Handles the timer tick when using a populate delay.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnPopulating(System.Windows.Controls.PopulatingEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnPopulated(System.Windows.Controls.PopulatedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.SelectionChanged" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownOpening(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpening" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpened" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownClosing(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosing" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosed" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            which contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.FormatValue(System.Object,System.Boolean)">
            <summary>
            Formats an Item for text comparisons based on Converter 
            and ConverterCulture properties.
            </summary>
            <param name="value">The object to format.</param>
            <param name="clearDataContext">A value indicating whether to clear
            the data context after the lookup is performed.</param>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.FormatValue(System.Object)">
            <summary>
            Converts the specified object to a string by using the
            <see cref="P:System.Windows.Data.Binding.Converter" /> and
            <see cref="P:System.Windows.Data.Binding.ConverterCulture" /> values
            of the binding object specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ValueMemberBinding" />
            property.
            </summary>
            <param name="value">The object to format as a string.</param>
            <returns>The string representation of the specified object.</returns>
            <remarks>
            Override this method to provide a custom string conversion.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnTextChanged(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.TextChanged" />
            event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handle the TextChanged event that is directly attached to the 
            TextBox part. This ensures that only user initiated actions will 
            result in an AutoCompleteBox suggestion and operation.
            </summary>
            <param name="sender">The source TextBox object.</param>
            <param name="e">The TextChanged event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnTextBoxSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When selection changes, save the location of the selection start.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.UpdateTextValue(System.String)">
            <summary>
            Updates both the text box value and underlying text dependency 
            property value if and when they change. Automatically fires the 
            text changed events when there is a change.
            </summary>
            <param name="value">The new string value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.UpdateTextValue(System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates both the text box value and underlying text dependency 
            property value if and when they change. Automatically fires the 
            text changed events when there is a change.
            </summary>
            <param name="value">The new string value.</param>
            <param name="userInitiated">A nullable bool value indicating whether
            the action was user initiated. In a user initiated mode, the 
            underlying text dependency property is updated. In a non-user 
            interaction, the text box value is updated. When user initiated is 
            null, all values are updated.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.TextUpdated(System.String,System.Boolean)">
            <summary>
            Handle the update of the text for the control from any source, 
            including the TextBox part and the Text dependency property.
            </summary>
            <param name="newText">The new text.</param>
            <param name="userInitiated">A value indicating whether the update 
            is a user-initiated action. This should be a True value when the 
            TextUpdated method is called from a TextBox event handler.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.PopulateComplete">
            <summary>
            Notifies the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> that the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property has been set and the data can be filtered to provide
            possible matches in the drop-down.
            </summary>
            <remarks>
            Call this method when you are providing custom population of 
            the drop-down portion of the AutoCompleteBox, to signal the control 
            that you are done with the population process. 
            Typically, you use PopulateComplete when the population process 
            is a long-running process and you want to cancel built-in filtering
             of the ItemsSource items. In this case, you can handle the 
            Populated event and set PopulatingEventArgs.Cancel to true. 
            When the long-running process has completed you call 
            PopulateComplete to indicate the drop-down is populated.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.UpdateTextCompletion(System.Boolean)">
            <summary>
            Performs text completion, if enabled, and a lookup on the underlying
            item values for an exact match. Will update the SelectedItem value.
            </summary>
            <param name="userInitiated">A value indicating whether the operation
            was user initiated. Text completion will not be performed when not 
            directly initiated by the user.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.TryGetMatch(System.String,System.Collections.ObjectModel.ObservableCollection{System.Object},System.Windows.Controls.AutoCompleteFilterPredicate{System.String})">
            <summary>
            Attempts to look through the view and locate the specific exact 
            text match.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="view">The view reference.</param>
            <param name="predicate">The predicate to use for the partial or 
            exact match.</param>
            <returns>Returns the object or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.ClearView">
            <summary>
            A simple helper method to clear the view and ensure that a view 
            object is always present and not null.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.RefreshView">
            <summary>
            Walks through the items enumeration. Performance is not going to be 
            perfect with the current implementation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Handle any change to the ItemsSource dependency property, update 
            the underlying ObservableCollection view, and set the selection 
            adapter's ItemsSource to the view if appropriate.
            </summary>
            <param name="oldValue">The old enumerable reference.</param>
            <param name="newValue">The new enumerable reference.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnAdapterSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnAdapterSelectionComplete(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Commit event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnAdapterSelectionCanceled(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Cancel event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnMaxDropDownHeightChanged(System.Double)">
            <summary>
            Handles MaxDropDownHeightChanged by re-arranging and updating the 
            popup arrangement.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OpenDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly opens the popup, checks the expander 
            button, and then fires the Opened event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.CloseDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly closes the popup, flips the Checked 
            value, and then fires the Closed event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteBox.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum number of characters required to be entered
            in the text box before the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> displays
            possible matches.
            matches.
            </summary>
            <value>
            The minimum number of characters to be entered in the text box
            before the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            displays possible matches. The default is 1.
            </value>
            <remarks>
            If you set MinimumPrefixLength to -1, the AutoCompleteBox will
            not provide possible matches. There is no maximum value, but
            setting MinimumPrefixLength to value that is too large will
            prevent the AutoCompleteBox from providing possible matches as well.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay">
            <summary>
            Gets or sets the minimum delay, in milliseconds, after text is typed
            in the text box before the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control
            populates the list of possible matches in the drop-down.
            </summary>
            <value>The minimum delay, in milliseconds, after text is typed in
            the text box, but before the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> populates
            the list of possible matches in the drop-down. The default is 0.</value>
            <exception cref="T:System.ArgumentException">The set value is less than 0.</exception>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled">
            <summary>
            Gets or sets a value indicating whether the first possible match
            found during the filtering process will be displayed automatically
            in the text box.
            </summary>
            <value>
            True if the first possible match found will be displayed
            automatically in the text box; otherwise, false. The default is
            false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used
            to display each item in the drop-down portion of the control.
            </summary>
            <value>The <see cref="T:System.Windows.DataTemplate" /> used to
            display each item in the drop-down. The default is null.</value>
            <remarks>
            You use the ItemTemplate property to specify the visualization 
            of the data objects in the drop-down portion of the AutoCompleteBox 
            control. If your AutoCompleteBox is bound to a collection and you 
            do not provide specific display instructions by using a 
            DataTemplate, the resulting UI of each item is a string 
            representation of each object in the underlying collection. 
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the selection adapter contained in the drop-down portion
            of the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The <see cref="T:System.Windows.Style" /> applied to the
            selection adapter contained in the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            The default is null.</value>
            <remarks>
            The default selection adapter contained in the drop-down is a 
            ListBox control. 
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> applied to
            the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The <see cref="T:System.Windows.Style" /> applied to the text
            box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            The default is null.</value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The maximum height of the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            The default is <see cref="F:System.Double.PositiveInfinity" />.</value>
            <exception cref="T:System.ArgumentException">The specified value is less than 0.</exception>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the drop-down portion of
            the control is open.
            </summary>
            <value>
            True if the drop-down is open; otherwise, false. The default is
            false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the items for the
            drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The collection that is used to generate the items of the
            drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.SelectedItem">
            <summary>
            Gets or sets the selected item in the drop-down.
            </summary>
            <value>The selected item in the drop-down.</value>
            <remarks>
            If the IsTextCompletionEnabled property is true and text typed by 
            the user matches an item in the ItemsSource collection, which is 
            then displayed in the text box, the SelectedItem property will be 
            a null reference.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.Text">
            <summary>
            Gets or sets the text in the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The text in the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.SearchText">
            <summary>
            Gets the text that is used to filter items in the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            item collection.
            </summary>
            <value>The text that is used to filter items in the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            item collection.</value>
            <remarks>
            The SearchText value is typically the same as the 
            Text property, but is set after the TextChanged event occurs 
            and before the Populating event.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.FilterMode">
            <summary>
            Gets or sets how the text in the text box is used to filter items
            specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <value>One of the
            <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" />
            values The default is
            <see cref="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith" />.</value>
            <exception cref="T:System.ArgumentException">The specified value is
            not a valid
            <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" />.</exception>
            <remarks>
            Use the FilterMode property to specify how possible matches are 
            filtered. For example, possible matches can be filtered in a 
            predefined or custom way. The search mode is automatically set to 
            Custom if you set the ItemFilter property. 
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ItemFilter">
            <summary>
            Gets or sets the custom method that uses user-entered text to filter
            the items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <value>The custom method that uses the user-entered text to filter
            the items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property. The default is null.</value>
            <remarks>
            The filter mode is automatically set to Custom if you set the 
            ItemFilter property. 
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.TextFilter">
            <summary>
            Gets or sets the custom method that uses the user-entered text to
            filter items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property in a text-based way for display in the drop-down.
            </summary>
            <value>The custom method that uses the user-entered text to filter
            items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property in a text-based way for display in the drop-down.</value>
            <remarks>
            The search mode is automatically set to Custom if you set the 
            TextFilter property. 
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.DropDownPopup">
            <summary>
            Gets or sets the drop down popup control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.TextBox">
            <summary>
            Gets or sets the Text template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.SelectionAdapter">
            <summary>
            Gets or sets the selection adapter used to populate the drop-down
            with a list of selectable items.
            </summary>
            <value>The selection adapter used to populate the drop-down with a
            list of selectable items.</value>
            <remarks>
            You can use this property when you create an automation peer to 
            use with AutoCompleteBox or deriving from AutoCompleteBox to 
            create a custom control.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.TextChanged">
            <summary>
            Occurs when the text in the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.Populating">
            <summary>
            Occurs when the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> is
            populating the drop-down with possible matches based on the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" />
            property.
            </summary>
            <remarks>
            If the event is canceled, by setting the PopulatingEventArgs.Cancel 
            property to true, the AutoCompleteBox will not automatically 
            populate the selection adapter contained in the drop-down. 
            In this case, if you want possible matches to appear, you must 
            provide the logic for populating the selection adapter.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.Populated">
            <summary>
            Occurs when the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has
            populated the drop-down with possible matches based on the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" />
            property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownOpening">
            <summary>
            Occurs when the value of the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            property is changing from false to true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownOpened">
            <summary>
            Occurs when the value of the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            property has changed from false to true and the drop-down is open.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownClosing">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            property is changing from true to false.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownClosed">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" />
            property was changed from true to false and the drop-down is open.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AutoCompleteBox.SelectionChanged">
            <summary>
            Occurs when the selected item in the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ValueMemberBinding">
            <summary>
            Gets or sets the  <see cref="T:System.Windows.Data.Binding" /> that
            is used to get the values for display in the text portion of
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The <see cref="T:System.Windows.Data.Binding" /> object used
            when binding to a collection property.</value>
        </member>
        <member name="P:System.Windows.Controls.AutoCompleteBox.ValueMemberPath">
            <summary>
            Gets or sets the property path that is used to get values for
            display in the text portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The property path that is used to get values for display in
            the text portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer">
            <summary>
            Exposes AutoCompleteBox types to UI Automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.AutoCompleteBoxClassNameCore">
            <summary>
            The name reported as the core class name.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.#ctor(System.Windows.Controls.AutoCompleteBox)">
            <summary>
            Initializes a new instance of the AutoCompleteBoxAutomationPeer
            class.
            </summary>
            <param name="owner">
            The AutoCompleteBox that is associated with this
            AutoCompleteBoxAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the AutoCompleteBox that is associated
            with this AutoCompleteBoxAutomationPeer. This method is called by
            GetAutomationControlType.
            </summary>
            <returns>ComboBox AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the AutoCompleteBox that is associated with this
            AutoCompleteBoxAutomationPeer. This method is called by
            GetClassName.
            </summary>
            <returns>The name AutoCompleteBox.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the AutoCompleteBox that is associated
            with this AutoCompleteBoxAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Blocking method that returns after the element has been expanded.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Blocking method that returns after the element has been collapsed.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raises the ExpandCollapse automation event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible
            for converting the value to the appropriate data type.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of the AutoCompleteBox that
            are associated with this AutoCompleteBoxAutomationPeer. This method
            is called by GetChildren.
            </summary>
            <returns>
            A collection of automation peer elements, or an empty collection
            if there are no child elements.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.OwnerAutoCompleteBox">
            <summary>
            Gets the AutoCompleteBox that owns this
            AutoCompleteBoxAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows
            more than one child element to be selected concurrently.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
            <value>True if multiple selection is allowed; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
            <value>True if selection is required; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets an element's current Collapsed or Expanded state.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is
            read-only.
            </summary>
            <value>True if the value is read-only; false if it can be modified.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value>The value of the control.</value>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteSearch">
            <summary>
            A predefined set of filter functions for the known, built-in 
            AutoCompleteFilterMode enumeration values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.GetFilter(System.Windows.Controls.AutoCompleteFilterMode)">
            <summary>
            Index function that retrieves the filter for the provided 
            AutoCompleteFilterMode.
            </summary>
            <param name="FilterMode">The built-in search mode.</param>
            <returns>Returns the string-based comparison function.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.StartsWith(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.StartsWithCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.StartsWithOrdinal(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.StartsWithOrdinalCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.Contains(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value. The current 
            culture's case insensitive string comparison operator is used.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.ContainsCaseSensitive(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.ContainsOrdinal(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.ContainsOrdinalCaseSensitive(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.Equals(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.EqualsCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.EqualsOrdinal(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:System.Windows.Controls.AutoCompleteSearch.EqualsOrdinalCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteFilterMode">
            <summary>
            Specifies how text in the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control is used
            to filter items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.None">
            <summary>
            Specifies that no filter is used. All items are returned.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Contains">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Equals">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the search comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Custom">
            <summary>
            Specifies that a custom filter is used. This mode is used when the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" />
            or
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" />
            properties are set.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteFilterPredicate`1">
            <summary>
            Represents the filter used by the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control to
            determine whether an item is a possible match for the specified text.
            </summary>
            <returns>true to indicate <paramref name="item" /> is a possible match
            for <paramref name="search" />; otherwise false.</returns>
            <param name="search">The string used as the basis for filtering.</param>
            <param name="item">The item that is compared with the
            <paramref name="search" /> parameter.</param>
            <typeparam name="T">The type used for filtering the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" />. This type can
            be either a string or an object.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.ISelectionAdapter">
            <summary>
            Defines an item collection, selection members, and key handling for the
            selection adapter contained in the drop-down portion of an
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ISelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs
            when a key is pressed while the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains data about the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
        </member>
        <member name="M:System.Windows.Controls.ISelectionAdapter.CreateAutomationPeer">
            <summary>
            Returns an automation peer for the selection adapter, for use by the
            Silverlight automation infrastructure.
            </summary>
            <returns>An automation peer for the selection adapter, if one is
            available; otherwise, null.</returns>
        </member>
        <member name="P:System.Windows.Controls.ISelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The currently selected item.</value>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.ISelectionAdapter.SelectedItem" />
            property value changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ISelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate content for the
            selection adapter.
            </summary>
            <value>The collection that is used to generate content for the
            selection adapter.</value>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.Commit">
            <summary>
            Occurs when a selected item is not cancelled and is committed as the
            selected item.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.Cancel">
            <summary>
            Occurs when a selection has been canceled.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.PopulatedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.PopulatedEventArgs.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" />.
            </summary>
            <param name="data">The list of possible matches added to the
            drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
        </member>
        <member name="P:System.Windows.Controls.PopulatedEventArgs.Data">
            <summary>
            Gets the list of possible matches added to the drop-down portion of
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The list of possible matches added to the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</value>
        </member>
        <member name="T:System.Windows.Controls.PopulatedEventHandler">
            <summary>
            Represents the method that will handle the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" /> that
            contains the event data.</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.PopulatingEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.PopulatingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" />.
            </summary>
            <param name="parameter">The value of the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" />
            property, which is used to filter items for the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
        </member>
        <member name="P:System.Windows.Controls.PopulatingEventArgs.Parameter">
            <summary>
            Gets the text that is used to determine which items to display in
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The text that is used to determine which items to display in
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</value>
        </member>
        <member name="P:System.Windows.Controls.PopulatingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event should be canceled.
            </summary>
            <value>True to cancel the event, otherwise false. The default is
            false.</value>
        </member>
        <member name="T:System.Windows.Controls.PopulatingEventHandler">
            <summary>
            Represents the method that will handle the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that
            contains the event data.</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.SelectorSelectionAdapter">
            <summary>
            Represents the selection adapter contained in the drop-down portion of
            an <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SelectorSelectionAdapter._selector">
            <summary>
            The Selector instance.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor(System.Windows.Controls.Primitives.Selector)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />
            class with the specified
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
            <param name="selector">The
            <see cref="T:System.Windows.Controls.Primitives.Selector" /> control
            to wrap as a
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.ResetScrollViewer">
            <summary>
            If the control contains a ScrollViewer, this will reset the viewer 
            to be scrolled to the top.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnSelectorMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse left button up event on the selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event on the Selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexIncrement">
            <summary>
            Increments the
            <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" />
            property of the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexDecrement">
            <summary>
            Decrements the
            <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" />
            property of the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs
            when a key is pressed while the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains data about the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCommit">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Commit" />
            event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCommit(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Commit event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCancel">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel" />
            event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Cancel event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.AfterAdapterAction">
            <summary>
            Change the selection after the actions are complete.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.CreateAutomationPeer">
            <summary>
            Returns an automation peer for the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control, for use by the Silverlight automation infrastructure.
            </summary>
            <returns>An automation peer for use by the Silverlight automation
            infrastructure.</returns>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.IgnoringSelectionChanged">
            <summary>
            Gets or sets a value indicating whether the selection change event 
            should not be fired.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectorControl">
            <summary>
            Gets or sets the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
            <value>The underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.</value>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem" />
            property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Commit">
            <summary>
            Occurs when an item is selected and is committed to the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel">
            <summary>
            Occurs when a selection is canceled before it is committed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item of the selection adapter.
            </summary>
            <value>The selected item of the underlying selection adapter.</value>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of
            the selection adapter.
            </summary>
            <value>The collection used to generate content for the selection
            adapter.</value>
        </member>
        <member name="T:System.Windows.Controls.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Extensions.Invert(System.Windows.Media.Matrix,System.Windows.Media.Matrix@)">
            <summary>
            Inverts a Matrix. The Invert functionality on the Matrix type is 
            internal to the framework only. Since Matrix is a struct, an out 
            parameter must be presented.
            </summary>
            <param name="m">The Matrix object.</param>
            <param name="outputMatrix">The matrix to return by an output 
            parameter.</param>
            <returns>Returns a value indicating whether the type was 
            successfully inverted. If the determinant is 0.0, then it cannot 
            be inverted and the original instance will remain untouched.</returns>
        </member>
        <member name="M:System.Windows.Controls.Extensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            An implementation of the Contains member of string that takes in a 
            string comparison. The traditional .NET string Contains member uses 
            StringComparison.Ordinal.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The string value to search for.</param>
            <param name="comparison">The string comparison type.</param>
            <returns>Returns true when the substring is found.</returns>
        </member>
        <member name="T:System.Windows.Controls.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a framework element.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The visual children of the framework element.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualTreeExtensions.GetLogicalChildrenBreadthFirst(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search.  A visual element is assumed to be a logical 
            child of another visual element if they are in the same namescope.
            For performance reasons this method manually manages the queue 
            instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid maximum drop down height value &apos;{0}&apos;. The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid MinimumPopulateDelay value &apos;{0}&apos;. The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AutoComplete_OnFilterModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid FilterMode enumeration value. The value must be one of the defined AutoCompleteFilterMode values to be accepted..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AutoComplete_OnSearchTextPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SearchText..
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Layout.Toolkit.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Layout.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionItemMetadata">
            <summary>
            To register design time metadata for AccordionItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionItemMetadata.#ctor">
            <summary>
            To register design time metadata for AccordionItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionMetadata">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionMetadata.#ctor">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.ExpandableContentControlMetadata">
            <summary>
            To register design time metadata for SSWC.ExpandableContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.ExpandableContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.ExpandableContentControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.LayoutTransformerMetadata">
            <summary>
            To register design time metadata for SSWC.LayoutTransformer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.LayoutTransformerMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.LayoutTransformer.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.TransitioningContentControlMetadata">
            <summary>
            To register design time metadata for SSWC.TransitioningContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.TransitioningContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.TransitioningContentControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Layout.Toolkit.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Layout.Toolkit.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Layout.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Navigation.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Navigation.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.EmptyDefaultInitializer">
            <summary>
            Empty default initializer to prevent Blend from adding its own default initialization. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.FrameMetadata">
            <summary>
            To register design time metadata for Frame.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.FrameMetadata.#ctor">
            <summary>
            To register design time metadata for Frame.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.PageMetadata">
            <summary>
            To register design time metadata for Page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.PageMetadata.#ctor">
            <summary>
            To register design time metadata for Page.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Layout.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Layout.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Accordion">
            <summary>
            Represents a collection of collapsed and expanded AccordionItem controls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.AccordionButtonStyleName">
            <summary>
            The name used to indicate AccordionButtonStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._scheduledActions">
            <summary>
            The items that are currently waiting to perform an action.
            </summary>
            <remarks>An action can be expanding, resizing or collapsing.</remarks>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isAllowedToWriteSelectedItems">
            <summary>
            Determines whether the SelectedItemsProperty may be written.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isAllowedToWriteSelectedIndices">
            <summary>
            Determines whether the SelectedIndicesProperty may be written.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isIgnoringSelectedIndicesChanges">
            <summary>
            Indicates that changes to the SelectedIndices collection should
            be ignored.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isIgnoringSelectedItemsChanges">
            <summary>
            Indicates that changes to the SelectedItems collection should
            be ignored.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isInSelectedItemsCollectionChanged">
            <summary>
            Determines whether we are currently in the SelectedItems Collection
            Changed handling.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._isInSelectedIndicesCollectionChanged">
            <summary>
            Determines whether we are currently in the SelectedIndices Collection
            Changed handling.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion._currentActioningItem">
            <summary>
            The item that is currently visually performing an action.
            </summary>
            <remarks>An action can be expanding, resizing or collapsing.</remarks>
        </member>
        <member name="F:System.Windows.Controls.Accordion.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its ExpandDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectionModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectionModeProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its SelectionMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.IsValidItemForSelection(System.Object)">
            <summary>
            Determines whether the new value can be selected.
            </summary>
            <param name="newValue">The new value.</param>
            <returns>
            	<c>True</c> if this item can be selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.Accordion._selectedItemNestedLevel">
            <summary>
            Nested level for SelectedItemCoercion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndexProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its SelectedIndex.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.IsValidIndexForSelection(System.Int32)">
            <summary>
            Determines whether the new value can be selected.
            </summary>
            <param name="newValue">The new value.</param>
            <returns>
            	<c>True</c> if this item can be selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.Accordion._selectedIndexNestedLevel">
            <summary>
            Coercion level.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectionSequenceProperty">
            <summary>
            Identifies the SelectionSequence dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectionSequencePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when SelectionSequenceProperty changed.
            </summary>
            <param name="d">Accordion that changed its SelectionSequence property.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler of SelectedItems.
            </summary>
            <param name="d">Accordion that changed the collection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.SelectedIndicesProperty">
            <summary>
            Identifies the SelectedIndices dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedIndicesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler of SelectedIndices.
            </summary>
            <param name="d">Accordion that changed the collection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            TreeView that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.AccordionButtonStyleProperty">
            <summary>
            Identifies the AccordionButtonStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnAccordionButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AccordionButtonStyleProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its AccordionButtonStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Accordion.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Accordion"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Accordion control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnCreateAutomationPeer">
            <summary>
            Returns a AccordionAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A AccordionAutomationPeer object for the Accordion.</returns>
        </member>
        <member name="M:System.Windows.Controls.Accordion.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given 
            item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Accordion.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own 
            container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            True if the item is (or is eligible to be) its own container; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Accordion.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> 
            method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item that should be cleared.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 
            property changes.
            </summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.InitializeNewItemsSource">
            <summary>
            Initializes the SelectedItem property when a new ItemsSource is set.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnAccordionItemUnselected(System.Windows.Controls.AccordionItem)">
            <summary>
            Called when an AccordionItem is unselected.
            </summary>
            <param name="accordionItem">The accordion item that was unselected.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.UnselectItem(System.Int32,System.Object)">
            <summary>
            Unselects the item.
            </summary>
            <param name="index">The index of the item that will be unselected.</param>
            <param name="item">The item that will be unselected. Can be null.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnAccordionItemSelected(System.Windows.Controls.AccordionItem)">
            <summary>
            Called when an AccordionItem selected.
            </summary>
            <param name="accordionItem">The accordion item that was selected.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.SelectItem(System.Int32)">
            <summary>
            Selects the item.
            </summary>
            <param name="index">The index of the item to select.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.ChangeSelectedIndex(System.Int32,System.Int32)">
            <summary>
            Changes the selected item, by unselecting and selecting where 
            necessary.
            </summary>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedItemsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when selected items collection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedIndicesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when selected indices collection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.ProposeSelectedIndexCandidate(System.Int32)">
            <summary>
            Gets an item that is suitable for selection.
            </summary>
            <param name="nonCandidateIndex">Index that should not be considered if 
            possible.</param>
            <returns>An item that should be selected. This could be nonCandidateIndex, 
            if no other possibility was found.</returns>
        </member>
        <member name="M:System.Windows.Controls.Accordion.SelectAll">
            <summary>
            Selects all the AccordionItems in the Accordion control.
            </summary>
            <remarks>If the Accordion SelectionMode is OneOrMore or ZeroOrMore all 
            AccordionItems would be selected. If the Accordion SelectionMode is 
            One or ZeroOrOne all items would be selected and unselected. Only 
            the last AccordionItem would remain selected. </remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.UnselectAll">
            <summary>
            Unselects all the AccordionItems in the Accordion control.
            </summary>
            <remarks>If the Accordion SelectionMode is Zero or ZeroOrMore all 
            AccordionItems would be Unselected. If SelectionMode is One or  
            OneOrMode  than all items would be Unselected and selected. Only the 
            first AccordionItem would still be selected.</remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.UpdateAccordionItemsSelection(System.Boolean)">
            <summary>
            Updates all accordionItems to be selected or unselected.
            </summary>
            <param name="selectedValue">True to select all items, false to unselect.</param>
            <remarks>Will not attempt to change a locked accordionItem.</remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.SetLockedProperties">
            <summary>
            Sets the locked properties on all the items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnSelectedItemChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the SelectedItemChanged event when the SelectedItem 
            property value changes.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.RaiseOnSelectedItemsCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise the SelectedItemsCollectionChanged event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> 
            instance containing the event data.</param>
            <remarks>This event is raised after the changes to the collection 
            have been processed.</remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnAccordionSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the size of the Accordion changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnHeaderSizeChange(System.Windows.Controls.AccordionItem)">
            <summary>
            Called when size of a Header on the item changes.
            </summary>
            <param name="item">The item whose Header changed.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.ScheduleAction(System.Windows.Controls.AccordionItem,System.Windows.Controls.AccordionAction)">
            <summary>
            Allows an AccordionItem to signal the need for a visual action 
            (resize, collapse, expand).
            </summary>
            <param name="item">The AccordionItem that signals for a schedule.</param>
            <param name="action">The action it is scheduling for.</param>
            <returns>True if the item is allowed to proceed without scheduling, 
            false if the item needs to wait for a signal to execute the action.</returns>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnActionFinish(System.Windows.Controls.AccordionItem)">
            <summary>
            Signals the finish of an action by an item.
            </summary>
            <param name="item">The AccordionItem that finishes an action.</param>
            <remarks>An AccordionItem should always signal a finish, for this call
            will start the next scheduled action.</remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.StartNextAction">
            <summary>
            Starts the next action in the list, in a particular order.
            </summary>
            <remarks>An AccordionItem is should always signal that it is 
            finished with an action.</remarks>
        </member>
        <member name="M:System.Windows.Controls.Accordion.LayoutChildren">
            <summary>
            Determines and sets the height of the accordion items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.SetPanelOrientation">
            <summary>
            Sets the orientation of the panel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Accordion.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Accordion.ItemsControlHelper">
            <summary>
            Gets the ItemsControlHelper that is associated with this control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.IsResizing">
            <summary>
            Gets a value indicating whether this instance is currently resizing.
            </summary>
            <value>True if this instance is resizing; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Controls.Accordion.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.ExpandDirection">
            <summary>
            Gets or sets the ExpandDirection property of each 
            AccordionItem in the Accordion control and the direction in which
            the Accordion does layout.
            </summary>
            <remarks>Setting the ExpandDirection will set the expand direction 
            on the accordionItems.</remarks>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectionMode">
            <summary>
            Gets or sets the AccordionSelectionMode used to determine the minimum 
            and maximum selected AccordionItems allowed in the Accordion.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.IsMinimumOneSelected">
            <summary>
            Gets a value indicating whether at least one item is selected at 
            all times.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.IsMaximumOneSelected">
            <summary>
            Gets a value indicating whether at most one item is selected at all times.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <remarks>
            The default value is null.
            When multiple items are allowed (IsMaximumOneSelected false), 
            return the first of the selectedItems.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected AccordionItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectionSequence">
            <summary>
            Gets or sets the SelectionSequence used to determine 
            the order of AccordionItem selection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <remarks>Does not allow setting.</remarks>
        </member>
        <member name="P:System.Windows.Controls.Accordion.SelectedIndices">
            <summary>
            Gets the indices of the currently selected AccordionItems.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the container element
            generated for each item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.AccordionButtonStyle">
            <summary>
            Gets or sets the Style that is applied to AccordionButton elements
            in the AccordionItems.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.ContentTemplate">
            <summary>
            Gets or sets the DataTemplate used to display the content 
            of each generated AccordionItem. 
            </summary>
            <remarks>Either ContentTemplate or ItemTemplate is used. 
            Setting both will result in an exception.</remarks>
        </member>
        <member name="E:System.Windows.Controls.Accordion.SelectionChanged">
            <summary>
            Occurs when the SelectedItem or SelectedItems property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Accordion.SelectedItemsChanged">
            <summary>
            Occurs when the SelectedItems collection changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.IsShouldFillWidth">
            <summary>
            Gets a value indicating whether the accordion fills width.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Accordion.IsShouldFillHeight">
            <summary>
            Gets a value indicating whether the accordion fills height.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.AccordionAction">
            <summary>
            Determines the action the AccordionItem will perform.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AccordionAction.None">
            <summary>
            No action will be performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionAction.Collapse">
            <summary>
            A collapse will be performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionAction.Expand">
            <summary>
            An expand will be performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionAction.Resize">
            <summary>
            A resize will be performed.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.AccordionAutomationPeer">
            <summary>
            Exposes Accordion types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.#ctor(System.Windows.Controls.Accordion)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.AccordionAutomationPeer"/> class.
            </summary>
            <param name="owner">The Accordion that is associated with this
            AccordionAutomationPeer.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the Accordion that is associated with this
            AccordionAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name Accordion.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the Accordion that is associated
            with this AccordionAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>List AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the Accordion that is associated
            with this AccordionAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of 
            the <see cref="T:System.Windows.Controls.ItemsControl"/> that is 
            associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>.
            </summary>
            <returns>
            A collection of AccordionItemAutomationPeer elements, or null if the
            Accordion that is associated with this AccordionAutomationPeer is
            empty.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI Automation provider for each child element that is 
            selected.
            </summary>
            <returns>An array of UI Automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionAutomationPeer.OwnerAccordion">
            <summary>
            Gets the Accordion that owns this AccordionAutomationPeer.
            </summary>
            <value>The accordion.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            allows more than one child element to be selected concurrently.
            </summary>
            <returns>true if multiple selection is allowed; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            requires at least one child element to be selected.
            </summary>
            <returns>true if selection is required; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.AccordionItem">
            <summary>
            Represents a control that displays a header and has a collapsible 
            content window.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.ElementExpandSiteName">
            <summary>
            The name of the ExpandSite template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's 
            used to select and unselect this AccordionItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._expandSite">
            <summary>
            BackingField for the ExpandSite property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._collapseStoryboard">
            <summary>
            BackingField for CollapseStoryboard.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._expandStoryboard">
            <summary>
            BackingField for ExpandStoryboard.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._isBusyWithAction">
            <summary>
            Indicates that the control is currently executing an action.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._allowedToWriteExpandDirection">
            <summary>
            Determines whether the ExpandDirection property may be written.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection dependency property. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static 
            function.
            This function validates the new value before calling virtual function 
            OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is 
            changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains 
            the old and new values.</param>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the 
            old and new values.</param>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._isSelectedNestedLevel">
            <summary>
            Nested level for IsSelectedCoercion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._isLocked">
            <summary>
            BackingField for IsLocked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.AccordionButtonStyleProperty">
            <summary>
            Identifies the AccordionButtonStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnAccordionButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AccordionButtonStyleProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its AccordionButtonStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnAccordionButtonStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when AccordionButtonStyle is changed.
            </summary>
            <param name="oldStyle">The old style.</param>
            <param name="newStyle">The new style.</param>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.ExpandableContentControlStyleProperty">
            <summary>
            Identifies the ExpandableContentControlStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnExpandableContentControlStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandableContentControlStyleProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its ExpandableContentControlStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnExpandableContentControlStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when ExpandableContentControlStyle is changed.
            </summary>
            <param name="oldStyle">The old style.</param>
            <param name="newStyle">The new style.</param>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._allowedToWriteContentTargetSize">
            <summary>
            Determines whether it is allowed to set the ContentTargetSize
            property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem.ContentTargetSizeProperty">
            <summary>
            Identifies the ContentTargetSize dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnContentTargetSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentTargetSizeProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its ContentTargetSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.#ctor">
            <summary>
            Initializes a new instance of the AccordionItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnHeaderSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the size of the control changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.Schedule(System.Windows.Controls.AccordionAction)">
            <summary>
            Schedules the specified action.
            </summary>
            <param name="action">The action to be performed.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.StartAction">
            <summary>
            Starts an action, such as resize, collapse or expand.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnStoryboardFinished(System.Object,System.EventArgs)">
            <summary>
            Called when a storyboard finishes.
            </summary>
            <param name="sender">The AccordionItem that finished a storyboard.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing 
            the event data.</param>
            <remarks>AccordionItem is required to make this call.</remarks>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnExpandSiteContentSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the content changes size.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the AccordionItem control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnCreateAutomationPeer">
            <summary>
            Returns a AccordionItemAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A AccordionItemAutomationPeer object for the AccordionItem.</returns>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.PreparePrepareHeaderedContentControlContainerForItemOverride(System.Windows.Controls.HeaderedContentControl,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
            <param name="parent">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.HasDefaultValue(System.Windows.Controls.Control,System.Windows.DependencyProperty)">
            <summary>
            Check whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>
            True if the property has the default value; false otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnSelected">
            <summary>
            Raises the Selected event when the IsSelected property changes 
            from false to true.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnUnselected">
            <summary>
            Raises the Unselected event when the IsSelected property changes 
            from true to false.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.ToggleSelected(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsSelected property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="F:System.Windows.Controls.AccordionItem._interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.AccordionItem.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ExpandSite">
            <summary>
            Gets or sets the expand site template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.CollapseStoryboard">
            <summary>
            Gets or sets the collapse storyboard.
            </summary>
            <value>The collapse storyboard.</value>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ExpandStoryboard">
            <summary>
            Gets or sets the expand storyboard.
            </summary>
            <value>The expand storyboard.</value>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ExpandDirection">
            <summary>
            Gets the direction in which the AccordionItem content window opens.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the AccordionItem is 
            selected and its content window is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.IsLocked">
            <summary>
            Gets a value indicating whether the AccordionItem cannot be 
            selected by the user.
            </summary>
            <value><c>True</c> if this instance is locked; otherwise, <c>false</c>.</value>
            <remarks>The IsSelected property may not be changed when the 
            AccordionItem is locked. Locking occurs when the item is the first 
            in the list, the SelectionMode of Accordion requires atleast one selected
            AccordionItem and the AccordionItem is currently selected.</remarks>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.AccordionButtonStyle">
            <summary>
            Gets or sets the Style used by AccordionButton.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ExpandableContentControlStyle">
            <summary>
            Gets or sets the Style used by ExpandableContentControl.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ContentTargetSize">
            <summary>
            Gets the Size that the content will animate to.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ParentAccordion">
            <summary>
            Gets or sets a reference to the parent Accordion of an
            AccordionItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ScheduledAction">
            <summary>
            Gets the scheduled action.
            </summary>
            <value>The scheduled action.</value>
        </member>
        <member name="E:System.Windows.Controls.AccordionItem.Selected">
            <summary>
            Occurs when the accordionItem is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.AccordionItem.Unselected">
            <summary>
            Occurs when the accordionItem is unselected.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.RelevantContentSize">
            <summary>
            Gets the relevant size of the current content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ShouldFillWidth">
            <summary>
            Gets a value indicating whether the AccordionItem fills width.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AccordionItem.ShouldFillHeight">
            <summary>
            Gets a value indicating whether the AccordionItem fills height.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.AccordionItemAutomationPeer">
            <summary>
            Exposes AccordionItem types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.#ctor(System.Windows.Controls.AccordionItem)">
            <summary>
            Initializes a new instance of the AccordionAutomationPeer class.
            </summary>
            <param name="owner">
            The Accordion that is associated with this
            AccordionAutomationPeer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the AccordionItem that is associated
            with this AccordionItemAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Custom AutomationControlType.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the AccordionItem that is associated with this
            AccordionItemAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name AccordionItem.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the AccordionItem that is associated
            with this AccordionItemAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Collapses the AccordionItem.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Expands the AccordionItem.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the AccordionItem to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current Accordion from the collection of selected
            items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears selection from currently selected items and then proceeds to
            select the current Accordion.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionItemAutomationPeer.OwnerAccordionItem">
            <summary>
            Gets the AccordionItem that owns this AccordionItemAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the Accordion.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether the Accordion is selected.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements ISelectionProvider
            and acts as the container for the calling object.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Primitives.AccordionButton">
            <summary>
            Represents the header for an accordion item.
            </summary>
            <remarks>By creating a seperate control, there is more flexibility in 
            the templating possibilities.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.AccordionButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.AccordionButton"/> 
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.AccordionButton.UpdateVisualState(System.Boolean)">
            <summary>
            Updates the state of the visual.
            </summary>
            <param name="useTransitions">If set to <c>true</c> use transitions.</param>
            <remarks>The header will follow the parent accordionitem states.</remarks>
        </member>
        <member name="P:System.Windows.Controls.Primitives.AccordionButton.ParentAccordionItem">
            <summary>
            Gets or sets a reference to the parent AccordionItem 
            of an AccordionButton.
            </summary>
            <value>The parent accordion item.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.ExpandableContentControl">
            <summary>
            Represents a control with a single piece of content that expands or 
            collapses in a sliding motion to a specified desired size.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl.ElementContentSiteName">
            <summary>
            The name of the ContentSite template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl._clippingRectangle">
            <summary>
            The Geometry used to clip this control. The control will potentially
            have less available space than the content it is arranging. That
            part will be clipped.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl._contentSite">
            <summary>
            BackingField for the ContentSite property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl.RevealModeProperty">
            <summary>
            Identifies the RevealMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.OnRevealModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RevealModeProperty property changed handler.
            </summary>
            <param name="d">ExpandableContentControl that changed its RevealMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl.PercentageProperty">
            <summary>
            Identifies the Percentage dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.OnPercentagePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PercentageProperty property changed handler.
            </summary>
            <param name="d">Page that changed its Percentage.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Primitives.ExpandableContentControl.TargetSizeProperty">
            <summary>
            Identifies the TargetSize dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.OnTargetSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TargetSizeProperty property changed handler.
            </summary>
            <param name="d">ExpandableContentControl that changed its TargetSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Does a measure pass of the control and its content. The content will
            get measured according to the TargetSize and is clipped.
            </summary>
            <param name="availableSize">The available size that this object can 
            give to child objects. Infinity can be specified as a value to 
            indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based 
            on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.MeasureContent(System.Windows.Size)">
            <summary>
            Measures the content with a specific size.
            </summary>
            <param name="desiredSize">The size passed to the content.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.CalculateDesiredContentSize">
            <summary>
            Interprets TargetSize.
            </summary>
            <returns>A size that can be safely used to measure content.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the control and its content. Content is arranged according
            to the TargetSize and clipped.
            </summary>
            <param name="finalSize">The final area within the parent that this 
            object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.UpdateClip(System.Windows.Size)">
            <summary>
            Updates the clip geometry.
            </summary>
            <param name="arrangeSize">Size of the visible part of the control.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.RecalculatePercentage(System.Windows.Size)">
            <summary>
            Recalculates the percentage based on a new size.
            </summary>
            <param name="value">The new size used to base percentages on.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.SetRevealDimension">
            <summary>
            Sets the dimensions according to the current percentage.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.SetNonRevealDimension">
            <summary>
            Sets the opposite dimension.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ExpandableContentControl"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ExpandableContentControl control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.ExpandableContentControl.OnContentSiteSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Raises the ContentSizeChanged event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.ContentSite">
            <summary>
            Gets or sets the ContentSite template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.RevealMode">
            <summary>
            Gets or sets the direction in which the ExpandableContentControl 
            content window opens.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.IsVerticalRevealMode">
            <summary>
            Gets a value indicating whether the content should be revealed vertically.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.IsHorizontalRevealMode">
            <summary>
            Gets a value indicating whether the content should be revealed horizontally.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.Percentage">
            <summary>
            Gets or sets the relative percentage of the content that is 
            currently visible. A percentage of 1 corresponds to the complete
            TargetSize.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.TargetSize">
            <summary>
            Gets or sets the desired size of the ExpandableContentControl content.
            </summary>
            <remarks>Use the percentage property to animate to this size.</remarks>
        </member>
        <member name="E:System.Windows.Controls.Primitives.ExpandableContentControl.ContentSizeChanged">
            <summary>
            Occurs when the content changed its size.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.ExpandableContentControl.RelevantContentSize">
            <summary>
            Gets the content current visible size.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.AccordionSelectionMode">
            <summary>
            Defines the minimum and maximum number of selected items allowed in an Accordion control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AccordionSelectionMode.One">
            <summary>
            Exactly one item must be selected in the Accordion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionSelectionMode.OneOrMore">
            <summary>
            At least one item must be selected in the Accordion. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionSelectionMode.ZeroOrOne">
            <summary>
            No more than one item can be selected in the accordion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AccordionSelectionMode.ZeroOrMore">
            <summary>
            Any number of  items can be selected in the Accordion. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.SelectionSequence">
            <summary>
            Determines the order in which visual states are set.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SelectionSequence.CollapseBeforeExpand">
            <summary>
            Collapses are set before expansions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SelectionSequence.Simultaneous">
            <summary>
            No delays, all states are set immediately.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlHelper">
            <summary>
            The ItemContainerGenerator provides useful utilities for ItemsControls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.LayoutTransformer">
            <summary>
            Represents a control that applies a layout transformation to its Content.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer.TransformRootName">
            <summary>
            Name of the TransformRoot template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer.PresenterName">
            <summary>
            Name of the Presenter template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer.AcceptableDelta">
            <summary>
            Acceptable difference between two doubles.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer.DecimalsAfterRound">
            <summary>
            Number of decimals to round the Matrix to.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer._transformRoot">
            <summary>
            Root element for performing transformations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer._contentPresenter">
            <summary>
            ContentPresenter element for displaying the content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to _transformRoot.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer._transformation">
            <summary>
            Transformation matrix corresponding to _matrixTransform.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.LayoutTransformer._childActualSize">
            <summary>
            Actual DesiredSize of Child element (the value it returned from its MeasureOverride method).
            </summary>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformer class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.OnApplyTemplate">
            <summary>
            Builds the visual tree for the LayoutTransformer control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.LayoutTransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">Source of the change.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.ApplyLayoutTransform">
            <summary>
            Applies the layout transform on the LayoutTransformer control content.
            </summary>
            <remarks>
            Only used in advanced scenarios (like animating the LayoutTransform). 
            Should be used to notify the LayoutTransformer control that some aspect 
            of its Transform property has changed. 
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform(Group) and returns the corresponding Matrix.
            </summary>
            <param name="transform">Transform(Group) to walk.</param>
            <returns>Computed Matrix.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's finalSize for clarity
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Compute the largest usable size (greatest area) after applying the transformation to the specified bounds.
            </summary>
            <param name="arrangeBounds">Arrange bounds.</param>
            <returns>Largest Size possible.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Returns true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">Second Size.</param>
            <param name="b">First Size.</param>
            <returns>True if Size a is smaller than Size b in either dimension.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a Matrix to avoid issues due to floating point imprecision.
            </summary>
            <param name="matrix">Matrix to round.</param>
            <param name="decimals">Number of decimal places to round to.</param>
            <returns>Rounded Matrix.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Rect.Transform on Silverlight.
            </summary>
            <param name="rect">Rect to transform.</param>
            <param name="matrix">Matrix to transform with.</param>
            <returns>Bounding box of transformed Rect.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse on Silverlight.
            </summary>
            <param name="matrix">Matrix to check for inverse.</param>
            <returns>True if the Matrix has an inverse.</returns>
        </member>
        <member name="M:System.Windows.Controls.LayoutTransformer.DiagnosticWriteLine(System.String)">
            <summary>
            Outputs diagnostic info if DIAGNOSTICWRITELINE is defined.
            </summary>
            <param name="message">Diagnostic message.</param>
        </member>
        <member name="P:System.Windows.Controls.LayoutTransformer.LayoutTransform">
            <summary>
            Gets or sets the layout transform to apply on the LayoutTransformer 
            control content.
            </summary>
            <remarks>
            Corresponds to UIElement.LayoutTransform.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.LayoutTransformer.Child">
            <summary>
            Gets the child element being transformed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_InvalidManipulationOfSelectionCollections">
            <summary>
              Looks up a localized string similar to The modification made to the collection lead to an invalid Selection state. Please check the SelectionMode to allow zero or multiple items..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnActionFinish_InvalidFinish">
            <summary>
              Looks up a localized string similar to Should not signal a finish when item is not expected to perform an action..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnSelectedIndicesChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedIndices..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnSelectedItemsChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedItems..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnSelectionModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectionMode value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_OnSelectionSequencepropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectionSequence value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Accordion_UnsupportedCollectionAction">
            <summary>
              Looks up a localized string similar to Unsupported collection action &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AccordionItem_InvalidWriteToContentTargetSize">
            <summary>
              Looks up a localized string similar to ContentTargetSize is a read-only value and is set through Accordion..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AccordionItem_InvalidWriteToExpandDirection">
            <summary>
              Looks up a localized string similar to ExpandDirection is a read-only value and is set through Accordion..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AccordionItem_OnIsSelectedPropertyChanged_InvalidChange">
            <summary>
              Looks up a localized string similar to Cannot modify the IsSelected property while item is locked..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AccordionItem_StartAction_InvalidAction">
            <summary>
              Looks up a localized string similar to Invalid Action &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.AccordionItem_StartAction_InvalidCall">
            <summary>
              Looks up a localized string similar to Cannot start an action when there is no action scheduled..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TransitioningContentControl_TransitionNotFound">
            <summary>
              Looks up a localized string similar to Transition &apos;{0}&apos; was not defined..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TransitiotioningContentControl_IsTransitioningReadOnly">
            <summary>
              Looks up a localized string similar to IsTransitioning property is read-only..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TransitioningContentControl">
            <summary>
            Represents a control with a single piece of content and when that content 
            changes performs a transition animation. 
            </summary>
            <QualityBand>Experimental</QualityBand>
            <remarks>The API for this control will change considerably in the future.</remarks>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.PresentationGroup">
            <summary>
            The name of the group that holds the presentation states.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.NormalState">
            <summary>
            The name of the state that represents a normal situation where no
            transition is currently being used.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.DefaultTransitionState">
            <summary>
            The name of the state that represents the default transition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.PreviousContentPresentationSitePartName">
            <summary>
            The name of the control that will display the previous content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.CurrentContentPresentationSitePartName">
            <summary>
            The name of the control that will display the current content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl._allowIsTransitioningWrite">
            <summary>
            Indicates whether the control allows writing IsTransitioning.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.IsTransitioningProperty">
            <summary>
            Identifies the IsTransitioning dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnIsTransitioningPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTransitioningProperty property changed handler.
            </summary>
            <param name="d">TransitioningContentControl that changed its IsTransitioning.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl._currentTransition">
            <summary>
            The storyboard that is used to transition old and new content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.TransitionProperty">
            <summary>
            Identifies the Transition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnTransitionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TransitionProperty property changed handler.
            </summary>
            <param name="d">TransitioningContentControl that changed its Transition.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TransitioningContentControl.RestartTransitionOnContentChangeProperty">
            <summary>
            Identifies the RestartTransitionOnContentChange dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnRestartTransitionOnContentChangePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RestartTransitionOnContentChangeProperty property changed handler.
            </summary>
            <param name="d">TransitioningContentControl that changed its RestartTransitionOnContentChange.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnRestartTransitionOnContentChangeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the RestartTransitionOnContentChangeProperty changes.
            </summary>
            <param name="oldValue">The old value of RestartTransitionOnContentChange.</param>
            <param name="newValue">The new value of RestartTransitionOnContentChange.</param>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.TransitioningContentControl"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TransitioningContentControl control 
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.StartTransition(System.Object,System.Object)">
            <summary>
            Starts the transition.
            </summary>
            <param name="oldContent">The old content.</param>
            <param name="newContent">The new content.</param>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.OnTransitionCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the Completed event of the transition storyboard.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.AbortTransition">
            <summary>
            Aborts the transition and releases the previous content.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TransitioningContentControl.GetStoryboard(System.String)">
            <summary>
            Attempts to find a storyboard that matches the newTransition name.
            </summary>
            <param name="newTransition">The new transition.</param>
            <returns>A storyboard or null, if no storyboard was found.</returns>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.CurrentContentPresentationSite">
            <summary>
            Gets or sets the current content presentation site.
            </summary>
            <value>The current content presentation site.</value>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.PreviousContentPresentationSite">
            <summary>
            Gets or sets the previous content presentation site.
            </summary>
            <value>The previous content presentation site.</value>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.IsTransitioning">
            <summary>
            Gets a value indicating whether this instance is currently performing
            a transition.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.CurrentTransition">
            <summary>
            Gets or sets the storyboard that is used to transition old and new content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.Transition">
            <summary>
            Gets or sets the name of the transition to use. These correspond
            directly to the VisualStates inside the PresentationStates group.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TransitioningContentControl.RestartTransitionOnContentChange">
            <summary>
            Gets or sets a value indicating whether the current transition
            will be aborted when setting new content during a transition.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TransitioningContentControl.TransitionCompleted">
            <summary>
            Occurs when the current transition has completed.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Navigation.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Navigation.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.FrameMetadata">
            <summary>
            To register design time metadata for Frame.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.FrameMetadata.#ctor">
            <summary>
            To register design time metadata for Frame.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.PageMetadata">
            <summary>
            To register design time metadata for Page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Design.PageMetadata.#ctor">
            <summary>
            To register design time metadata for Page.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Navigation.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only once.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Navigation.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Navigation.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Navigation.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Navigation.Expression.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Expression.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Expression.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Navigation.Expression.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Navigation.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Navigation</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Common.DependencyObjectExtensions">
            <summary>
            Utility class for DependencyObject/DependencyProperty related operations
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationCacheMode">
            <summary>
            Used to describe how a <see cref="T:System.Windows.Controls.Page"/> should be cached when
            used by a <see cref="T:System.Windows.Controls.Frame"/>
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationCacheMode.Disabled">
            <summary>
            The <see cref="T:System.Windows.Controls.Page"/> should never be cached, and a new
            instance should be created on each navigation.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationCacheMode.Required">
            <summary>
            The <see cref="T:System.Windows.Controls.Page"/> should always be cached, and kept
            around forever, reused in all subsequent navigations
            to the same Uri.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationCacheMode.Enabled">
            <summary>
            The <see cref="T:System.Windows.Controls.Page"/> should be cached only within
            the size of the cache on the <see cref="T:System.Windows.Controls.Frame"/>,
            and thrown away if it would exceed that.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
            <summary>
                 FragmentNavigationEventArgs exposes the fragment being navigated to
                 in an event fired from NavigationService to notify a listening client
                 that a navigation to fragment is about to occur.
            </summary> 
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
            <summary>
             The fragment part of the URI that was passed to the Navigate() API which initiated this navigation.
             The fragment may be String.Empty.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
            <summary>
            Event data used to qualify navigating events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Default constructor.
            </summary>
            <param name="uri">A URI representing the navigation destination.</param>
            <param name="mode">What type of navigation this is (New, Forward or Back)</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
            <summary>
            Gets the Uri that is being navigated to
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
            <summary>
            Gets the type of navigation that has been initiated (New, Forward or Back)
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationContext">
            <summary>
            Represents the state of a navigation operation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Default constructor.
            </summary>
            <param name="queryString">Dictionary of query string values.</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationContext.QueryString">
            <summary>
            Gets a dictionary of query string values.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
            <summary>
            Delegate for the Navigating event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
            <summary>
            Delegate for the NavigationFailed event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigatedEventHandler">
            <summary>
            Delegate for the Navigated event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
            <summary>
            Delegate for the NavigationStopped event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
            <summary>
            Delegate for FragmentNavigation event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationEventArgs">
            <summary>
            Event data used to qualify navigation events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
            <summary>
            Default constructor.
            </summary>
            <param name="content">A reference to the content being navigated to (if available).</param>
            <param name="uri">A URI representing the navigation destination.</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
            <summary>
            Gets a reference to the content being navigated to (if available).
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
            <summary>
            Gets a URI representing the navigation destination.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
            <summary>
            Event arguments used by the <see cref="E:System.Windows.Controls.Frame.NavigationFailed"/> and <see cref="E:System.Windows.Navigation.NavigationService.NavigationFailed"/> events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationFailedEventArgs.#ctor(System.Uri,System.Exception)">
            <summary>
            Constructs a set of event arguments
            </summary>
            <param name="uri">The Uri to which navigation failed</param>
            <param name="error">The error that occurred</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
            <summary>
            Gets the Uri that failed to be navigated to
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
            <summary>
            Gets the error that caused navigation to fail
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this failure event has been handled.
            If this is false after NavigationFailed completes, the exception will
            be thrown.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Frame">
            <summary>
            Represents a content control that supports navigation.
            </summary>
            <seealso cref="T:System.Windows.Controls.Page"/>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Frame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Frame" /> class. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.SourceProperty">
            <summary>
            The DependencyProperty for the Source property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.SourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Source property is changed
            </summary>
            <param name="depObj">The dependency property</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
            <summary>
            The DependencyProperty for the JournalOwnership property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
            <summary>
            The DependencyProperty for the CanGoBack property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
            <summary>
            The DependencyProperty for the CanGoForward property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.CurrentSourceProperty">
            <summary>
            The DependencyProperty for the CurrentSource property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.UriMapperProperty">
            <summary>
            The DependencyProperty for the UriMapper property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.CacheSizeProperty">
            <summary>
            The DependencyProperty for the CacheSize property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.ApplyDeepLinks">
            <summary>
            This will check for deep link values in the URL if the Frame's 
            Journal is integrated with the browser.
            </summary>
            <returns>A value indicating whether or not deep links were found.</returns>
        </member>
        <member name="M:System.Windows.Controls.Frame.StopLoading">
            <summary>
            Stops further downloading of content for the current navigation request.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.GoBack">
            <summary>
            Navigates to the most recent entry in the back navigation history, if one exists.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.GoForward">
            <summary>
            Navigates to the most recent entry in the forward navigation history, if one exists.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
            <summary>
            Navigates to the content specified by the uniform resource identifier (URI).
            </summary>
            <param name="source">The URI representing a page to display in the frame.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
            <summary>
            Called when the template generation for the visual tree is created.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
            <summary>
            Returns a <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"/> for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"/> for the Frame object.</returns>
        </member>
        <member name="M:System.Windows.Controls.Frame.OnReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a Read-Only dependency property is changed
            </summary>
            <param name="depObj">The dependency object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Controls.Frame.Frame_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the Frame.Loaded event fires.
            </summary>
            <param name="sender">The object raising the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Controls.Frame.PART_nextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Next button handler
            </summary>
            <param name="sender">The object raising the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Controls.Frame.PART_previousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Previous button handler
            </summary>
            <param name="sender">The object raising the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="E:System.Windows.Controls.Frame.Navigated">
            <summary>
            Occurs when the content that is being navigated to has been found and is available.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.Navigating">
            <summary>
            Occurs when a new navigation is requested.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.NavigationFailed">
            <summary>
            Occurs when an error is encountered while navigating to the requested content.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.NavigationStopped">
            <summary>
            Occurs when the <see cref="M:System.Windows.Controls.Frame.StopLoading" /> method is 
            called, or when a new navigation is requested while the current navigation is in progress. 
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
            <summary>
            Occurs when navigation to a content fragment begins.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.Source">
            <summary>
            Gets or sets the uniform resource identifier (URI) of the current
            content or the content that is being navigated to.
            </summary>
            <remarks>
            This value may be different from CurrentSource if you set Source and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Frame.JournalOwnership">
            <summary>
            Gets or sets whether a frame is responsible for managing its own navigation history,
            or whether it integrates with the web browser journal.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one entry in the back navigation history.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.Frame.CanGoForward">
            <summary>
            Gets a value that indicates whether there is at least one entry in the forward navigation history.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CurrentSource">
            <summary>
            Gets the uniform resource identifier (URI) of the content that was last navigated to.
            </summary>
            <remarks>
            This value may be different from Source if you set Source and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Frame.UriMapper">
            <summary>
            Gets or sets the object to manage converting a uniform resource identifier (URI) 
            to another URI for this frame.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CacheSize">
            <summary>
            Gets or sets the number of pages that can be cached for the frame.
            </summary> 
        </member>
        <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
            <summary>
            Exposes Frame types to UI Automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
            <summary>
            Initializes a new instance of the FrameAutomationPeer class.
            </summary>
            <param name="owner">The Frame.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI
            Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in
            addition to AutomationControlType, differentiates the control
            represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetNameCore">
            <summary>
            Called by GetName.
            </summary>
            <returns>
            Returns the first of these that is not null or empty:
            - Value returned by the base implementation
            - Name of the owning Frame
            - Frame class name
            </returns>
        </member>
        <member name="T:System.Windows.Controls.Page">
            <summary>
            Encapsulates content that can be navigated to by a <see cref="T:System.Windows.Controls.Frame"/>. 
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Page.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Page.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
            <summary>
            This method is called when fragment navigation occurs on a page - either because a fragment
            was present in the original Uri that navigated to this page, or because a later fragment
            navigation occurs.
            </summary>
            <remarks>
            This should be used rather than signing up for NavigationService.FragmentNavigation
            because that event may be difficult to sign up for in time to get the first fragment navigation.
            </remarks>
            <param name="e">The event arguments, containing the fragment navigated to</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)">
            <summary>
            This method is called when a Page has been navigated to, and becomes the active Page in a Frame.
            This method is the preferred place to inspect NavigationContext, and react to load-time
            information and prepare the page for viewing.
            </summary>
            <remarks>
            This should be used rather than Loaded because Loaded signifies you have been added to the visual
            tree, but that could potentially happen more than once during a logical navigation event, in
            some advanced scenarios.  This method is guaranteed to be called only once when the Page becomes
            active.
            </remarks>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)">
            <summary>
            This method is called when a Page is about to be navigated away from.
            </summary>
            <remarks>
            This is similar to signing up for NavigationService.Navigating, but this method is preferred
            as then you do not need to remove the event handler from NavigationService to avoid object lifetime
            issues.
            </remarks>
            <param name="e">The event arguments.  If Cancel is set to true, it will cancel the pending operation that triggered this method call.</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatedFrom(System.Windows.Navigation.NavigationEventArgs)">
            <summary>
            This method is called when a Page has been navigated away from, and is no longer the active
            Page in a Frame.  This is a good time to save dirty data or otherwise react to being
            inactive.
            </summary>
            <remarks>
            This is similar to signing up for NavigationService.Navigated, but this method is preferred
            as then you do not need to remove the event handler from NavigationService to avoid object lifetime
            issues.
            </remarks>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:System.Windows.Controls.Page.NavigationContext">
            <summary>
            Gets an object that contains information about the navigation request.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Page.NavigationService">
            <summary>
            Gets the service that the host used to navigate to this page.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.Page.Title">
            <summary>
            Gets or sets the name for the page to display to the user in the navigation history.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.Page.NavigationCacheMode">
            <summary>
            Gets or sets a value indicating whether this page should never be cached, should be cached
            for an indefinite length of time, or should only be cached within the size limitations of
            the cache.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.ContentLoaderBase">
            <summary>
            ContentLoaderBase serves as the base class for all content loaders that plug into NavigationService.
            </summary>
            <remarks>ContentLoaderBase types should always generate and load content asychronously.</remarks>
            <seealso cref="T:System.Windows.Navigation.PageResourceContentLoader"/>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins asynchronous loading of the provided <paramref name="uri"/>.
            </summary>
            <param name="uri">A URI value to resolve and begin loading.</param>
            <param name="userCallback">A callback function that will be called when this asynchronous request is ready to have <see cref="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)"/> called on it.</param>
            <param name="asyncState">A custom state object that will be returned in <see cref="P:System.IAsyncResult.AsyncState"/>, to correlate between multiple async calls.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be passed to <see cref="M:System.Windows.Navigation.ContentLoaderBase.CancelLoad(System.IAsyncResult)"/> at any time, or <see cref="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)"/> after the <paramref name="userCallback"/> has been called.</returns>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.CancelLoad(System.IAsyncResult)">
            <summary>
            Attempts to cancel a pending load operation.
            </summary>
            <param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned from <see cref="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/> for the operation you wish to cancel.</param>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)">
            <summary>
            Completes the asynchronous loading of content
            </summary>
            <param name="asyncResult">The result returned from <see cref="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/>, and passed in to the callback function.</param>
            <returns>The content loaded, or null if content was not loaded</returns>
        </member>
        <member name="T:System.Windows.Navigation.PageResourceContentLoader">
            <summary>
            Default implementation of ContentLoaderBase that is capable of resolving URI values to XAML types located in the application deployment XAP.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.GetLocalXaml(System.String)">
            <summary>
            Returns the XAML string of the page at the given path.
            If that page cannot be found (path does not exist, etc.)
            then it returns null.
            </summary>
            <param name="pagePathAndName">The path and name of the XAML (with the ".xaml" included)</param>
            <returns>See summary</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins asynchronous loading of the provided <paramref name="uri"/>.
            </summary>
            <param name="uri">A URI value to resolve and begin loading.</param>
            <param name="userCallback">A callback function that will be called when this asynchronous request is ready to have <see cref="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)"/> called on it.</param>
            <param name="asyncState">A custom state object that will be returned in <see cref="P:System.IAsyncResult.AsyncState"/>, to correlate between multiple async calls.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be passed to <see cref="M:System.Windows.Navigation.PageResourceContentLoader.CancelLoad(System.IAsyncResult)"/> at any time, or <see cref="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)"/> after the <paramref name="userCallback"/> has been called.</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.CancelLoad(System.IAsyncResult)">
            <summary>
            Attempts to cancel a pending load operation.
            </summary>
            <param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned from <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/> for the operation you wish to cancel.</param>
            <remarks>Cancellation is not guaranteed.  Check the result from EndLoad to determine if cancellation was successful.</remarks>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)">
            <summary>
            Completes the asynchronous loading of content
            </summary>
            <param name="asyncResult">The result returned from <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/>, and passed in to the callback function.</param>
            <returns>The content loaded, or null if content was not loaded</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.PageResourceContentLoaderAsyncResult.#ctor(System.Uri,System.Object)">
            <summary>
            Constructs an instance of the <see cref="T:System.Windows.Navigation.PageResourceContentLoader.PageResourceContentLoaderAsyncResult"/>
            </summary>
            <param name="uri">The Uri that the <see cref="T:System.Windows.Navigation.PageResourceContentLoader"/> is loading.</param>
            <param name="asyncState">The state object the user passed in to <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="T:System.Windows.Navigation.Journal">
            <summary>
            Journal used to manage a history list of JournalEntry items.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.Journal._syncLock">
            <summary>
            Synchronization lock object.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.Journal._suppressNavigationEvent">
            <summary>
            Used to indicate whether or not to suppress navigation events.
            </summary>
            <remarks>
            This is used internally to avoid redundant browser navigation calls after deep link values are detected.
            </remarks>
        </member>
        <member name="F:System.Windows.Navigation.Journal._weakRefEventHandler">
            <summary>
            Internal event handler reference used to sign up to the SilverlightHost.NavigationStateChanged event.
            </summary>
            <remarks>
            The event handler constructed here will use a weak reference to self in order to allow for this instance to be collected.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.AddHistoryPoint(System.Windows.Navigation.JournalEntry)">
            <summary>
            Adds a new JournalEntry to the history stack.
            </summary>
            <param name="journalEntry">A new JournalEntry to add to the history stack.</param>
            <remarks>
            Any JournalEntry items existing on the ForwardStack will be removed.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.CheckForDeeplinks">
            <summary>
            Forces the Journal to check for deep-link values in 
            the browser address URI.
            </summary>
            <returns>
            A Boolean indicating whether or not a deep-link value was found.
            </returns>
        </member>
        <member name="M:System.Windows.Navigation.Journal.GoBack">
            <summary>
            Navigates the Journal instance back to the previous 
            JournalEntry item in the history stack.
            </summary>
            <remarks>
            If CanGoBack is false, this method will throw an InvalidOperationException.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.GoForward">
            <summary>
            Navigates the Journal instance forward to the next 
            JournalEntry item in the history stack.
            </summary>
            <remarks>
            If CanGoForward is false, this method will throw an InvalidOperationException.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.UpdateNavigationState(System.Windows.Navigation.JournalEntry)">
            <summary>
            Updates NavigationState to reflect the Journal state, if the Journal is using NavigationState.
            </summary>
            <param name="journalEntry">JournalEntry used to update the browser location.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.Browser_Navigated(System.Object,System.EventArgs)">
            <summary>
            Occurs when the browser has navigated (usually due to the user hitting Back or Forward in the browser's UI).
            </summary>
            <param name="sender">Event sender.</param>
            <param name="eventArgs">Empty event args.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.AddHistoryPointIfDifferent(System.String)">
            <summary>
            Conditionally adds a new history point if the new state information differs from the current journal entry Uri value.
            </summary>
            <param name="newState">An updated state value to examine.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.InitializeNavigationState">
            <summary>
            Signs up for the Application.NavigationStateChanged event using a weak-reference based event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.Journal.OnNavigated(System.String,System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Raises the Navigated event.
            </summary>
            <param name="name">A value representing a journal entry name.</param>
            <param name="uri">A value representing a journal entry URI.</param>
            <param name="mode">A value representing a journal entry navigation mode.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.UpdateObservables(System.Windows.Navigation.JournalEntry,System.Windows.Navigation.NavigationMode)">
            <summary>
            Updates observable properties of the journal.
            </summary>
            <param name="currentEntry">The current journal entry.</param>
            <param name="mode">The mode of navigation that triggered the update.</param>
        </member>
        <member name="P:System.Windows.Navigation.Journal.UseNavigationState">
            <summary>
            Gets a value indicating whether or not this journal instance is
            using the NavigationState property of the Application class.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CanGoBack">
            <summary>
            Gets a value indicating whether or not the Journal instance
            can navigate backward.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CanGoForward">
            <summary>
            Gets a value indicating whether or not the Journal instance
            can navigate forward.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CurrentEntry">
            <summary>
            Gets the current JournalEntry or null if no history items exist.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.BackStack">
            <summary>
            Gets a stack of back entries in this journal
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.ForwardStack">
            <summary>
            Gets a stack of forward entries in this journal
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalEntry">
            <summary>
            A journal history entry.
            </summary>
            <seealso cref="T:System.Windows.Navigation.Journal"/>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.String,System.Uri)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">The journal entry name.</param>
            <param name="uri">The journal entry URI value.</param>
        </member>
        <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
            <summary>
            An attached dependency property used to specify a name for a journal entry, which may be reflected in the browser window
            if the journal is integrated with the browser.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property on the <paramref name="obj"/>.
            </summary>
            <param name="obj">The object to inspect for a <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/></param>
            <returns>The value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property.</returns>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property on the <paramref name="obje"/>.
            </summary>
            <param name="obj">The object to set the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> on.</param>
            <param name="name">The name to set</param>
        </member>
        <member name="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty">
            <summary>
            An attached dependency property used to specify a <see cref="P:System.Windows.Navigation.JournalEntry.NavigationContext"/> for a piece of content which
            has been navigated to.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.GetNavigationContext(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property on the <paramref name="obj"/>.
            </summary>
            <param name="obj">The object to inspect for a <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/></param>
            <returns>The value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property.</returns>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.SetNavigationContext(System.Windows.DependencyObject,System.Windows.Navigation.NavigationContext)">
            <summary>
            Sets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property on the <paramref name="obje"/>.
            </summary>
            <param name="obj">The object to set the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> on.</param>
            <param name="navigationContext">The navigation context to set</param>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.Name">
            <summary>
            Gets or sets the journal entry name.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.NavigationContext">
            <summary>
            Gets or sets the <see cref="P:System.Windows.Navigation.JournalEntry.NavigationContext"/> for the journal entry
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.Source">
            <summary>
            Gets or sets the Uri that for this journal entry
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalEventArgs">
            <summary>
            Event arguments used to describe journaling events.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEventArgs.#ctor(System.String,System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">A value representing a journal event name.</param>
            <param name="uri">A value representing a journal event URI.</param>
            <param name="mode">A value representing a journal event navigation mode.</param>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.Name">
            <summary>
            Gets a value containing the journal event name.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.Uri">
            <summary>
            Gets a value containing the journal event URI.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.NavigationMode">
            <summary>
            Gets a value representing the journal event navigation mode.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalOwnership">
            <summary>
            Used by the <see cref="T:System.Windows.Controls.Frame"/> to indicate what type of journal it should use.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should walk up the visual tree to determine if it is top-level.
            If it is top-level, this is the same as <see cref="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal"/>.
            If it is not top-level, this is the same as <see cref="F:System.Windows.Navigation.JournalOwnership.OwnsJournal"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should keep its own journal and not integrate with the browser.
            This option can be set on any <see cref="T:System.Windows.Controls.Frame"/>
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should integrate with the browser journal.  If this <see cref="T:System.Windows.Controls.Frame"/> is not
            a top-level Frame, this is not valid and an exception will be thrown.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationMode">
            <summary>
            Enum describing the NavigationMode (New, Back, Forward)
            where New means a new navigation, Forward, and Back mean 
            the navigation was initiated from the GoForward or 
            GoBack methods on <see cref="T:System.Windows.Controls.Frame"/>.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.New">
            <summary>
            New navigation.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.Back">
            <summary>
            Navigating back in history.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.Forward">
            <summary>
            Navigating forward in history.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationService">
            <summary>
            Used to programmatically initiate navigation, primarily from within a <see cref="T:System.Windows.Controls.Page"/>.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.#ctor(System.Windows.Controls.Frame)">
            <summary>
            Internal class used to host content and handles all navigations
            </summary>
            <param name="nav">
            Parent navigator that uses and owns this NavigationService.
            </param>
        </member>
        <member name="F:System.Windows.Navigation.NavigationService.NavigationServiceProperty">
            <summary>
            Attached DependencyProperty. It gives an element the NavigationService of the navigation container it's in.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
            <summary>
            Gets NavigationService of the navigation container the given dependencyObject is in.
            </summary>
            <param name="dependencyObject">The object to retrieve the attached <see cref="T:System.Windows.Navigation.NavigationService"/> for</param>
            <returns>The <see cref="T:System.Windows.Navigation.NavigationService"/> attached to the <paramref name="dependencyObject"/></returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
            <summary>
            Navigate to source
            </summary>
            <param name="source">The Uri to begin navigating to</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GoForward">
            <summary>
            Navigate to the next entry in the Journal
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GoBack">
            <summary>
            Navigate to the previous entry in the Journal
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
            <summary>
            StopLoading aborts asynchronous navigations that haven't been processed yet.
            The <see cref="E:System.Windows.Navigation.NavigationService.NavigationStopped"/> event is raised only if the navigation was actually aborted - if navigation is
            too far along to be canceled, then navigation may still complete and the <see cref="E:System.Windows.Navigation.NavigationService.Navigated"/> event
            will be raised.
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigated(System.Object,System.Uri,System.Windows.Controls.Page,System.Windows.Controls.Page)">
            <summary>
            Raises the Navigated event synchronously.
            </summary>
            <param name="content">A reference to the object content that is being navigated to.</param>
            <param name="uri">A URI value representing the navigation content.</param>
            <param name="existingContentPage">The existing content cast to a Page</param>
            <param name="newContentPage">The new content cast to a Page</param>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigating(System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
            <summary>
            Raises the Navigating event synchronously.
            </summary>
            <param name="uri">A URI value representing the navigation content.</param>
            <param name="mode">The mode of navigation being initiated (New, Forward or Back)</param>
            <param name="isFragmentNavigationOnly">True if this navigation is only a fragment navigation on the existing page, false if it is any other type of navigation</param>
            <returns>A value indicating whether or not to cancel the navigation operation.</returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigationFailed(System.Uri,System.Exception)">
            <summary>
            Raises the Failed event synchronously.
            </summary>
            <param name="uri">A URI value representing the navigation content.</param>
            <param name="exception">The error that occurred</param>
            <returns>true if the the exception should be re-thrown, false if it was handled</returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigationStopped(System.Object,System.Uri)">
            <summary>
            Raises the Stopped event synchronously.
            </summary>
            <param name="content">A reference to the object content that is being navigated to.</param>
            <param name="uri">A URI value representing the navigation content.</param>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseFragmentNavigation(System.String)">
            <summary>
            Raises the Fragment Navigation event synchronously
            </summary>
            <param name="fragment">The fragment that was navigated to</param>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
            <summary>
            Occurs when the an exception is raised during navigation.
            </summary>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.Navigating">
            <summary>
            Occurs when the NavigationService is starting to navigate.
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.Navigated">
            <summary>
            Occurs when the NavigationService has navigated.
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
            <summary>
            Occurs when a navigation operation has been cancelled.
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
            <summary>
            Occurs when a navigation occurs within a page.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.Source">
            <summary>
            Gets or sets the Uri of the content currently hosted in the Frame.
            </summary>
            <remarks>
            This value may be different from CurrentSource if Source is set and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
            <summary>
            Gets the Uri of the content currently hosted in the Frame.
            </summary>
            <remarks>
            This value may be different from Source if Source is set and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
            <summary>
            Gets a value used to determine if there are any entries on the forward stack
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
            <summary>
            Gets a value used to determine if there are any entries on the back stack
            </summary>
            <value></value>
        </member>
        <member name="T:System.Windows.Navigation.NavigationService.NavigationOperation">
            <summary>
            Class used within the Frame to manage navigation operations.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.NavigationOperation.#ctor(System.Uri,System.Uri,System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="uri">The Uri after it was mapped</param>
            <param name="uriBeforeMapping">The Uri before it was mapped</param>
            <param name="uriForJournal">The Uri to use for the journal</param>
            <param name="mode">The mode (new, forward, or back) of this operation</param>
            <param name="suppressJournalUpdate">True if the journal shouldn't be updated by this operation, false otherwise</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.Uri">
            <summary>
            Gets or sets Uri used in the navigation operation, after passing through the UriMapper
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.Mode">
            <summary>
            Gets or sets NavigationMode used in the current operation.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.SuppressNotifications">
            <summary>
            Gets or sets a value indicating whether or not the operation is altering the Source property.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.SuppressJournalAdd">
            <summary>
            Gets or sets a value indicating whether the Journal should be updated based on this navigation operation
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.UriMapperBase">
            <summary>
            Maps a URI into a new URI based on mapping rules defined in a concrete implementation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)">
            <summary>
            Maps a given URI and returns a mapped URI.
            </summary>
            <param name="uri">Original URI value to be mapped to a new URI.</param>
            <returns>A URI derived from the <paramref name="uri"/> parameter.</returns>
        </member>
        <member name="T:System.Windows.Navigation.UriMapper">
            <summary>
            Default UriMapperBase implementation that uses a List of UriMapping 
            objects to map and transform URI values.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriMapper.MapUri(System.Uri)">
            <summary>
            Maps a given URI and returns a mapped URI.
            </summary>
            <param name="uri">Original URI value to be mapped to a new URI.</param>
            <returns>A URI derived from the <paramref name="uri"/> parameter.</returns>
        </member>
        <member name="P:System.Windows.Navigation.UriMapper.UriMappings">
            <summary>
            Gets a list of UriMapping objects.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.UriMapping">
            <summary>
            Defines a URI to URI mapping.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapping.MapUri(System.Uri)">
            <summary>
            Attempts to process a Uri, if it matches the Uri template
            </summary>
            <param name="uri">The Uri to map</param>
            <returns>The Uri after mapping, or null if mapping did not succeed</returns>
        </member>
        <member name="P:System.Windows.Navigation.UriMapping.Uri">
            <summary>
            Gets or sets the original URI value or pattern.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.UriMapping.MappedUri">
            <summary>
            Gets or sets the mapped URI value or pattern.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriIsFragment(System.Uri)">
            <summary>
            Parses the Uri to determine if it is a fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>True if this Uri is a fragment, false if it is not</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetFragment(System.Uri)">
            <summary>
            Parses the Uri to retrieve the fragment, if present
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The fragment, or null if there is not one</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetAllButFragment(System.Uri)">
            <summary>
            Parses the Uri to strip off the fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The uri without the fragment</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetQueryString(System.Uri)">
            <summary>
            Parse the query string out of a Uri (the part following the '?')
            </summary>
            <param name="uri">The uri to parse for a query string</param>
            <returns>The query string, without a leading '?'.  Empty string in the case of no query string present.</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetBaseValue(System.Uri)">
            <summary>
            Cut the query string off a given Uri, to process only the part before the '?', and strips off the fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The uri without its query string, and without its fragment</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriParseQueryStringToDictionary(System.Uri,System.Boolean)">
            <summary>
            Parses the query string into name/value pairs
            </summary>
            <param name="uri">The Uri to parse the query string from</param>
            <param name="decodeResults">True if the resulting dictionary should contain decoded values, false if not</param>
            <returns>A dictionary containing one entry for each name/value pair in the query string</returns>
        </member>
        <member name="T:System.Windows.Navigation.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.CannotGoBack">
            <summary>
              Looks up a localized string similar to Cannot go back when {0} is false..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.CannotGoForward">
            <summary>
              Looks up a localized string similar to Cannot go forward when {0} is false..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Frame_CacheSizeMustBeGreaterThanOrEqualToZero">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Frame_DefaultContent">
            <summary>
              Looks up a localized string similar to ({0}).
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_ContentIsNotAUserControl">
            <summary>
              Looks up a localized string similar to The content loaded was of type {0}, which is not a subclass of {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_FragmentNavigationRequiresContent">
            <summary>
              Looks up a localized string similar to Navigation to a fragment requires the {0} to have content currently..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_JournalOwnership_UsesParentJournal_OnlyTopLevel">
            <summary>
              Looks up a localized string similar to {0} can only be set to {1} if this is a top-level {2}..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_NavigationToANullUriIsNotSupported">
            <summary>
              Looks up a localized string similar to Navigation to a null URI is not supported..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_UriNotNavigable">
            <summary>
              Looks up a localized string similar to Navigation is only supported to relative URIs that are fragments, or begin with &apos;/&apos;, or which contain &apos;;component/&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_InvalidComponentSyntax">
            <summary>
              Looks up a localized string similar to Attempted to load local XAML with an invalid syntax.  When a &apos;;component/&apos; is present, it must have the assembly name on the left side, and the page path and name on the right..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_NoXAMLWasFound">
            <summary>
              Looks up a localized string similar to No XAML was found at the location &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_TheTypeSpecifiedInTheXClassCouldNotBeFound">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos;, specified in the x:Class of &apos;{1}&apos; could not be found in any loaded assembly..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_XAMLWasUnloadable">
            <summary>
              Looks up a localized string similar to XAML at location &apos;{0}&apos; could not be loaded..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapper_MustNotHaveANullUriMappingCollection">
            <summary>
              Looks up a localized string similar to {0} must not have a null {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_MappedUriCannotBeOnlyFragment">
            <summary>
              Looks up a localized string similar to {0} cannot be a URI fragment (cannot begin with &apos;#&apos;)..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_MappedUriCannotBeOnlyQueryString">
            <summary>
              Looks up a localized string similar to {0} cannot be only a query string..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_TemplateMustBeSpecified">
            <summary>
              Looks up a localized string similar to {0} template must be specified..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotContainTheSameIdentifierMoreThanOnce">
            <summary>
              Looks up a localized string similar to {0} template cannot contain the same identifier more than once..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotHaveAFragment">
            <summary>
              Looks up a localized string similar to {0} template cannot have a fragment..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotHaveAQueryString">
            <summary>
              Looks up a localized string similar to {0} template cannot have a query string..
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Theming.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Samples.Common.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Samples.Common</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Samples.Airport">
            <summary>
            An Airport class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Airport.#ctor">
            <summary>
            Initializes a new Airport class instance.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Airport.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new Airport class instance. This is a data-entry 
            friendly constructor.
            </summary>
            <param name="city">The city or cities name.</param>
            <param name="state">The state or region.</param>
            <param name="faa">The Federal Aviation Administration code.</param>
            <param name="iata">The International Air Transport Association code.</param>
            <param name="icao">The four-digit International Civil Aviation
            Organization code.</param>
            <param name="airport">The friendly airport name.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.Airport.ToString">
            <summary>
            The code and name together.
            </summary>
            <returns>Returns a string.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.Name">
            <summary>
            Gets or sets the friendly airport name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.LimitedName">
            <summary>
            Gets a sometimes shorter representation of the Name property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.City">
            <summary>
            Gets or sets the airport city or cities name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.State">
            <summary>
            Gets or sets the state, region, or territory name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.CodeFaa">
            <summary>
            Gets or sets the Federal Aviation Administration code.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.CodeIata">
            <summary>
            Gets or sets the International Air Transport Association code.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.CodeIcao">
            <summary>
            Gets or sets the four-digit International Civil Aviation 
            Organization code.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Airport.SampleAirports">
            <summary>
            Gets a collection of sample airports.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.City">
            <summary>
            City business object used for charting samples.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.City.#ctor">
            <summary>
            Initializes a new instance of the City class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.City.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.City.Name">
            <summary>
            Gets or sets the name of the city.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.City.Population">
            <summary>
            Gets or sets the population of the city.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.City.PugetSound">
            <summary>
            Gets a collection of cities in the Puget Sound area.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Department">
            <summary>
            Represents a department in an organization.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Department.#ctor">
            <summary>
            Initializes a new instance of the Department class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Department.Title">
            <summary>
            Gets or sets the title of the department.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Department.Employees">
            <summary>
            Gets a collection of employees in the department.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Department.Divisions">
            <summary>
            Gets a collection of divisions inside the department.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Department.AllDepartments">
            <summary>
            Gets a sample hierarchy of departments and employees.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Feature">
            <summary>
            Represents a feature that can be installed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Feature.#ctor">
            <summary>
            Initializes a new instance of the Feature class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.Feature._shouldInstall">
            <summary>
            Backing variable for the ShouldInstall property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Feature.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName">Property that changed.</param>
        </member>
        <member name="P:System.Windows.Controls.Samples.Feature.FeatureName">
            <summary>
            Gets or sets the name of the feature.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Feature.Description">
            <summary>
            Gets or sets the description of the feature.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Feature.Subcomponents">
            <summary>
            Gets a collection of sub-components that make up the feature.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Feature.HasSubcomponents">
            <summary>
            Gets a value indicating whether the feature has subcomponents.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Feature.ShouldInstall">
            <summary>
            Gets or sets whether the feature should be installed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Samples.Feature.PropertyChanged">
            <summary>
            Implements the INotifyPropertyChanged interface.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.GizmoPopularityPollCollection">
            <summary>
            Tracks the popularity of Gizmos.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.GizmoPopularityPollCollection.GetEnumerator">
            <summary>
            Returns a stream of popularity polls.
            </summary>
            <returns>A stream of popularity polls.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.GizmoPopularityPollCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a stream of popularity polls.
            </summary>
            <returns>A stream of popularity polls.</returns>
        </member>
        <member name="T:System.Windows.Controls.Samples.MemberInfoData">
            <summary>
            A wrapper type that can be used for visually displaying reflected type 
            information.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.MemberInfoData.GetSetForType(System.Type)">
            <summary>
            Gets an enumerable set of PME information objects.
            </summary>
            <param name="type">The type to reflect over.</param>
            <returns>Returns the set of MemberInfoData objects.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.MemberInfoData.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the MemberInfoData class 
            with the provided MemberInfo object's data.
            </summary>
            <param name="mi">The member info object.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.MemberInfoData.ToString">
            <summary>
            Overrides the ToString method to display the name.
            </summary>
            <returns>Returns the name as a string.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.MemberInfoData.MemberInfo">
            <summary>
            Gets the member information object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.MemberInfoData.IconName">
            <summary>
            Gets or sets the icon string name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.MemberInfoData.Icon">
            <summary>
            Gets the icon.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.MemberInfoData.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.MemberInfoData.ForegroundColor">
            <summary>
            Gets the foreground color based on method properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Album">
            <summary>
            Represents a music album.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Album.#ctor">
            <summary>
            Initializes a new instance of the Album class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Album.Title">
            <summary>
            Gets or sets the title of the Album.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Album.ReleaseYear">
            <summary>
            Gets or sets the year the Album was released.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Album.Icon">
            <summary>
            Gets the icon.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Album.Songs">
            <summary>
            Gets a collection of songs contained in the Album.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Artist">
            <summary>
            Represents a musical artist.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Artist.#ctor">
            <summary>
            Initializes a new instance of the Artist class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Artist.ArtistName">
            <summary>
            Gets or sets the name of the Artist.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Artist.Genre">
            <summary>
            Gets or sets the genre of the Artist.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Artist.Albums">
            <summary>
            Gets a collection of albums released by the Artist.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Artist.Icon">
            <summary>
            Gets the icon.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Artist.AllArtists">
            <summary>
            Gets a collection of artists.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Song">
            <summary>
            Represents a music song.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Song.Title">
            <summary>
            Gets or sets the title of the Song.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Song.Length">
            <summary>
            Gets or sets the length of the Song.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Song.Icon">
            <summary>
            Gets the icon.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.ParticulateLevel">
            <summary>
            ParticulateLevel business object used for charting samples.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.ParticulateLevel.#ctor">
            <summary>
            Initializes a new instance of the ParticulateLevel class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.ParticulateLevel.Particulate">
            <summary>
            Gets or sets the particulate count.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.ParticulateLevel.Rainfall">
            <summary>
            Gets or sets the daily rainfall.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.ParticulateLevel.LevelsInRainfall">
            <summary>
            Gets a collection of particulate levels for rainfall.
            </summary>
            <remarks>
            Sample data from http://office.microsoft.com/en-us/help/HA102274781033.aspx.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Samples.Employee">
            <summary>
            Employee business object used in DataTemplate examples.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Employee.#ctor">
            <summary>
            Initializes a new instance of the Employee class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Employee.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Employee class.
            </summary>
            <param name="firstName">First name of the employee.</param>
            <param name="lastName">Last name of the employee.</param>
            <param name="resourceName">
            Name of a resource containing a photograph of the employee.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Samples.Employee.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Employee class.
            </summary>
            <param name="firstName">First name of the employee.</param>
            <param name="lastName">Last name of the employee.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.Employee.ToString">
            <summary>
            Overrides the ToString method to return the DisplayName for the 
            Employee.
            </summary>
            <returns>Returns the full name of the employee.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.FirstName">
            <summary>
            Gets or sets the first name of the employee.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.LastName">
            <summary>
            Gets or sets the last name of the employee.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.Photograph">
            <summary>
            Gets or sets a Photograph of the employee.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.DisplayName">
            <summary>
            Gets the display name for the employee. Uses simple concatenation 
            currently.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.BillGates">
            <summary>
            Gets an Employee object that represents Bill Gates.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.SteveBallmer">
            <summary>
            Gets an Employee object that represents Steve Ballmer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.Somasegar">
            <summary>
            Gets an Employee object that represents S. Somasegar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.ScottGuthrie">
            <summary>
            Gets an Employee object that represents Scott Guthrie.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.Executives">
            <summary>
            Gets a collection of various executives at the company.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Employee.AllExecutives">
            <summary>
            Gets a collection of executive leaders as defined online, as of 
            10/14/08.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.PopularityPoll">
            <summary>
            A popularity poll for something, taken on a given date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.PopularityPoll.Date">
            <summary>
            Gets or sets the date on which the poll was taken.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.PopularityPoll.Percent">
            <summary>
            Gets or sets the percentage of support the thing had.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.WidgetPopularityPollCollection">
            <summary>
            Tracks the popularity of widgets.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.WidgetPopularityPollCollection.GetEnumerator">
            <summary>
            Returns a stream of popularity polls.
            </summary>
            <returns>A stream of popularity polls.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.WidgetPopularityPollCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a stream of popularity polls.
            </summary>
            <returns>A stream of popularity polls.</returns>
        </member>
        <member name="T:System.Windows.Controls.Samples.Class">
            <summary>
            Represents a Class in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Taxonomy">
            <summary>
            Represents an item contained in a level of a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Taxonomy.#ctor">
            <summary>
            Initializes a new instance of the TaxonomicItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Taxonomy.ToString">
            <summary>
            Get a string representation of the TaxonomicItem.
            </summary>
            <returns>String representation of the TaxonomicItem.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.Taxonomy.Life">
            <summary>
            Gets a subset of all life on the planet.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Taxonomy.Rank">
            <summary>
            Gets the name of the TaxonomicRank.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Taxonomy.Classification">
            <summary>
            Gets or sets the classification of the item being ranked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Taxonomy.Subclasses">
            <summary>
            Gets the subclasses of of the item being ranked.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Class.#ctor">
            <summary>
            Initializes a new instance of the Class class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Domain">
            <summary>
            Represents a Domain in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Domain.#ctor">
            <summary>
            Initializes a new instance of the Domain class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Family">
            <summary>
            Represents a Family in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Family.#ctor">
            <summary>
            Initializes a new instance of the Family class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Genus">
            <summary>
            Represents a Genus in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Genus.#ctor">
            <summary>
            Initializes a new instance of the Genus class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Kingdom">
            <summary>
            Represents a Kingdom in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Kingdom.#ctor">
            <summary>
            Initializes a new instance of the Kingdom class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Order">
            <summary>
            Represents an Order in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Order.#ctor">
            <summary>
            Initializes a new instance of the Order class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Phylum">
            <summary>
            Represents a Phylum in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Phylum.#ctor">
            <summary>
            Initializes a new instance of the Phylum class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Species">
            <summary>
            Represents a Species in a Linnaean taxonomy.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Species.#ctor">
            <summary>
            Initializes a new instance of the Species class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Words">
            <summary>
            A set of words to use in control samples.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Words.GetAliceInWonderland">
            <summary>
            Gets a list of words from the book Alice in Wonderland.
            </summary>
            <returns>Returns a very large string array.</returns>
        </member>
        <member name="F:System.Windows.Controls.Samples.Words.AliceInWonderland">
            <summary>
            A static string array of words.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.Photograph">
            <summary>
            Photograph business object used in examples.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.Photograph.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Photograph class.
            </summary>
            <param name="resourceName">
            Name of the resource defining the photograph.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Samples.Photograph.ToString">
            <summary>
            Overrides the string to return the name.
            </summary>
            <returns>Returns the photograph name.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.Photograph.GetPhotographs">
            <summary>
            Get all of the photographs defined in the assembly as embedded
            resources.
            </summary>
            <returns>
            All of the photographs defined in the assembly as embedded
            resources.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.Photograph.Name">
            <summary>
            Gets or sets the name of the Photograph.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.Photograph.Image">
            <summary>
            Gets an Image control containing the Photograph.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.EmbeddedImage">
            <summary>
            ImageLoader is used to load an Embedded Resource Image.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.EmbeddedImage.ImageLoaderName">
            <summary>
            Name of the Image part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.EmbeddedImage._resourceName">
            <summary>
            Name of the resource to be loaded.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.EmbeddedImage.#ctor">
            <summary>
            Initializes a new instance of the ImageLoader class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.EmbeddedImage.OnApplyTemplate">
            <summary>
            Retrieve select elements from a control template.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.EmbeddedImage.SetEmbeddedImage(System.String)">
            <summary>
            Helper function to set the embedded image source.
            </summary>
            <param name="resourceName">Resource name to be loaded.</param>
        </member>
        <member name="P:System.Windows.Controls.Samples.EmbeddedImage.ResourceName">
            <summary>
            Gets or sets the name of the image to be loaded.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SampleTreeItem">
            <summary>
            The SampleTreeItem represents a node in the TreeView.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleTreeItem.#ctor">
            <summary>
            Initialize a SampleTreeItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleTreeItem.TreeItemName">
            <summary>
            Gets or sets the name of the TreeView node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleTreeItem.Items">
            <summary>
             Gets a collection of SampleTreeItems.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleTreeItem.IconResourceName">
            <summary>
            Gets or sets the resource name of the Icon representing this 
            node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleTreeItem.Icon">
            <summary>
            Gets the icon representing this type. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SampleAttribute">
            <summary>
            The SampleAttribute identifies sample name and level of difficulty.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleAttribute.#ctor(System.String,System.Windows.Controls.Samples.DifficultyLevel)">
            <summary>
            Initializes a new instance of the SampleAttribute class.
            </summary>
            <param name="name">
            Name of the sample.
            </param>
            <param name="difficultyLevel">
            Difficulty Level of the sample.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleAttribute.Name">
            <summary>
            Gets the path to the sample in the Sample Browser tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleAttribute.DifficultyLevel">
            <summary>
            Gets the difficulty level of the sample.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SampleBrowser">
            <summary>
            The SampleBrowser is used to display interactive samples of controls,
            styles, and scenarios.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SourceViewerRow">
            <summary>
            SampleDisplayArea Grid row number where the source viewer is 
            located.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.DeepPathLinkQueryStringParamName">
            <summary>
            Deep Path Link QueryString Parameter Name.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SampleSelectionName">
            <summary>
            Name of the sample selection TreeView.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SamplesTabName">
            <summary>
            Name of the samples TabControl .
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.FullScreenButtonName">
            <summary>
            Name of the button that toggles full screen.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SourceListName">
            <summary>
            Name of the source list ListBox.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SourceTextName">
            <summary>
            Name of the source text TextBox.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.RootName">
            <summary>
            Name of root layout for the Sample Browser.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SampleDisplayAreaName">
            <summary>
            Name of the grid containing the sample and source file viewer.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SourceExpanderName">
            <summary>
            Name of the expander containing the source file viewer.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SampleGridSplitterName">
            <summary>
            Name of the GridSplitter that separates the sample from the source
            file viewer.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.TabItemStyleName">
            <summary>
            Name of the TabItem style defined in generic.xaml.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SampleHeaderName">
            <summary>
            Name of the Sample Header.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser.SampleLevelName">
            <summary>
            Name of the Label containing the Sample Level defined in 
            generic.xaml.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser._sampleSelection">
            <summary>
            The TreeView used for selecting samples.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser._fullscreenButton">
            <summary>
            The button that toggles full screen view.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SampleBrowser._sourceList">
            <summary>
            ListBox used to select the sample or source file to view.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.#ctor(System.Reflection.Assembly,System.Collections.Generic.IEnumerable{System.Windows.Controls.Samples.SampleTreeItem})">
            <summary>
            Initializes a new instance of the SampleBrowser class.
            </summary>
            <param name="sampleAssembly">Instance from the samples assembly.</param>
            <param name="sampleTreeItems">Items used to populate the TreeView.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.PopulateSamplesTab(System.Reflection.Assembly,System.String)">
            <summary>
            Populate the Tab with samples name for a given control.
            </summary>
            <param name="sampleAssembly">Name of the sample assembly.</param>
            <param name="controlName">Name of the control.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.GetPathForLevel(System.Int32)">
            <summary>
            Returns the Initial Deep Path Link Lookup.
            </summary>
            <param name="level">Deep path link level.</param>
            <returns>The deep path for that level.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSampleLayoutUpdated(System.Object,System.EventArgs)">
            <summary>
            Expands the Sample TreeView.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnApplyTemplate">
            <summary>
            Retrieve select elements from a control template.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.SelectNavigationOnDeepLinkPath">
            <summary>
            Select a TreeViewItem and a TabItem used for navigation based on the query string
            deep link path. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.SelectTreeViewItemFor(System.Windows.Controls.Samples.SampleTreeItem,System.Windows.Controls.Samples.SampleTreeItem)">
            <summary>
            Selects a tree view item based on an item.
            </summary>
            <param name="firstLevelItem">Item that correlates to a the first level TreeViewItem.</param>
            <param name="secondLevelItem">Item that correlates to a the second level TreeViewItem.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.SelectTreeViewItemFor(System.Windows.Controls.Samples.SampleTreeItem)">
            <summary>
            Selects a tree view item based on an item.
            </summary>
            <param name="firstLevelItem">Item that correlates to a the TreeViewItem.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSelectedSampleChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Change the selected sample.
            </summary>
            <param name="sender">The samples TreeView.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSourceCollapsed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Collapse the Source File Viewer.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSourceExpanded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Expands the Source File Viewer.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSamplesTabSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            SamplesTab selection changed.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnToggleFullScreen(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Toggle the full screen view of the samples.
            </summary>
            <param name="sender">The ToggleButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnFullScreenChanged(System.Object,System.EventArgs)">
            <summary>
            Handle full screen changes to the application.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.LoadSample">
            <summary>
            Change the selected sample.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.UpdateDifficultyLevel(System.Windows.Controls.Samples.SampleBrowserItem)">
            <summary>
            Updates the Sample Name and the Level labels.
            </summary>
            <param name="item">SampleBrowserItem containing Sample related
            information.</param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.SetSourceViewer(System.Windows.Controls.Samples.SourceViewer)">
            <summary>
            Set the SourceViewer for the current sample.
            </summary>
            <param name="viewer">The SourceViewer.</param>
            <remarks>
            This is called by the SourceViewer when loaded as a way to notify
            the browser that it has source without resorting to walking the
            visual tree, etc.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.ExpandSourceViewerArea">
            <summary>
            Expands the Source Viewer Area when there are source files to 
            display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.ExpandSampleDisplayArea">
            <summary>
            Expands the Sample Display Area when there is no Source File to 
            display. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.Show(System.Windows.Controls.Control)">
            <summary>
            Helper method to begin a storyboard associated with a control.
            </summary>
            <param name="control">Control containing a storyboard to be played.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.CreateMenuItem(System.String,System.String)">
            <summary>
            Helper method to create menu items.
            </summary>
            <param name="resourceName">Name of the resource to be loaded.</param>
            <param name="text">Text representing the menu item.</param>
            <returns>Returns a stack panel with Image and Text.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.CreateTextBlock(System.String)">
            <summary>
            Helper function used to generate TextBlock that share common
            properties.
            </summary>
            <param name="text">Text to be used when creating the TextBlock.
            </param>
            <returns>TextBlock control with common properties set.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowser.OnSourceFileChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Choose the source file to view.
            </summary>
            <param name="sender">The SourceList.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleSelection">
            <summary>
            Gets or sets the TreeView used for selecting samples.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleRoot">
            <summary>
            Gets or sets the root layout.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleDisplayArea">
            <summary>
            Gets or sets the sample display area grid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleGridSplitter">
            <summary>
            Gets or sets the grid splitter that separates the sample
            from the source viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleTabItemStyle">
            <summary>
            Gets or sets the style for the sample tab items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser._sourceExpander">
            <summary>
            Gets or sets The expander that holds the list of files and content area where
            they are rendered.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SourceExpander">
            <summary>
            Gets or sets the Expander that hosts the samples.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SamplesTab">
            <summary>
            Gets or sets the tabControl that hosts the samples.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.FullScreenButton">
            <summary>
            Gets or sets the button that toggles full screen view.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SourceList">
            <summary>
            Gets or sets the ListBox used to select the sample or source file to
            view.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SourceText">
            <summary>
            Gets or sets the source text TextBox.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleHeader">
            <summary>
            Gets or sets the sample header label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleDifficultyLevel">
            <summary>
            Gets or sets the sample difficulty level label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.Current">
            <summary>
            Gets or sets a reference to the current SampleBrowser control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleAssembly">
            <summary>
            Gets or sets the sample assembly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.SampleTreeItems">
            <summary>
            Gets or sets the items used to populate the TreeView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.IsSourceViewCollapsed">
            <summary>
            Gets or sets a value indicating whether the SourceView expander 
            is collapsed by the user.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.CurrentSourceFile">
            <summary>
            Gets or sets a value indicating the current source file displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowser.IsDeepPathLinkSpecified">
            <summary>
            Gets a value indicating whether the Deep Path Link query string parameter was specified.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SampleBrowserItem">
            <summary>
            The SampleBrowserItem class represents an individual sample in tab control
            samples. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowserItem.#ctor">
            <summary>
            Initializes a new instance of the SampleBrowserItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowserItem.ToString">
            <summary>
            Overrides the ToString method to return the Name of the Sample.
            </summary>
            <returns>Returns the Name of the sample.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowserItem.GetSample">
            <summary>
            Gets the sample represented by this item.
            </summary>
            <returns>The sample represented by this item.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SampleBrowserItem.AddSample(System.Collections.Generic.IList{System.Windows.Controls.Samples.SampleBrowserItem},System.Type,System.Windows.Controls.Samples.SampleAttribute)">
            <summary>
            Create a SampleBrowserItem and inserts into the right location.
            </summary>
            <param name="Samples">Collections of Samples.</param>
            <param name="type">Type of Sample.</param>
            <param name="attribute">Attributes for the Sample.</param>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowserItem.Name">
            <summary>
            Gets or sets the name of the sample.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowserItem.OriginalName">
            <summary>
            Gets or sets the name of the sample to use for sorting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowserItem.SampleType">
            <summary>
            Gets or sets the sample type that was declared using the SampleAttribute.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SampleBrowserItem.SampleLevel">
            <summary>
            Gets or sets the level difficulty of the sample.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.DifficultyLevel">
            <summary>
            Describes the level of difficulty of the sample.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.DifficultyLevel.None">
            <summary>
            Used when Sample does not need to be categorized.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.DifficultyLevel.Basic">
            <summary>
            Used for basic samples.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.DifficultyLevel.Intermediate">
            <summary>
            Used for intermediate samples.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.DifficultyLevel.Advanced">
            <summary>
            Used for advanced samples.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.DifficultyLevel.Scenario">
            <summary>
            Used for scenario samples.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SharedResources">
            <summary>
            Utility to to load shared resources into another ResourceDictionary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SharedResources.ResourceImagePrefix">
            <summary>
            Prefix of images loaded as resources.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SharedResources.ResourceIconPrefix">
            <summary>
            Prefix of icons loaded as resources.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetImage(System.String)">
            <summary>
            Get an embedded resource image from the assembly.
            </summary>
            <param name="name">Name of the image resource.</param>
            <returns>
            Desired embedded resource image from the assembly.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetIcon(System.String)">
            <summary>
            Get an embedded resource icon from the assembly.
            </summary>
            <param name="name">Name of the icon resource.</param>
            <returns>
            Desired embedded resource icon from the assembly.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.Samples.SharedResources.cachedBitmapImages">
            <summary>
            A cached dictionary of the bitmap images.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.CreateImage(System.String,System.String)">
            <summary>
            Get an embedded resource image from the assembly.
            </summary>
            <param name="prefix">The prefix of the full name of the resource.</param>
            <param name="name">Name of the image resource.</param>
            <returns>
            Desired embedded resource image from the assembly.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetImageNames">
            <summary>
            Get all of the names of embedded resources images in the assembly.
            </summary>
            <returns>
            All of the names of embedded resources images in the assembly.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetIconNames">
            <summary>
            Get all of the names of embedded resources icons in the assembly.
            </summary>
            <returns>
            All of the names of embedded resources icons in the assembly.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetImages">
            <summary>
            Get all of the images in the assembly.
            </summary>
            <returns>All of the images in the assembly.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetIcons">
            <summary>
            Get all of the icons in the assembly.
            </summary>
            <returns>All of the icons in the assembly.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.SharedResources.GetResourceNames(System.String)">
            <summary>
            Get all the names of embedded resources in the assembly with the 
            provided prefix value.
            </summary>
            <param name="prefix">The prefix for the full resource name.</param>
            <returns>Returns an enumerable of all the resource names that match.</returns>
        </member>
        <member name="T:System.Windows.Controls.Samples.SourceFile">
            <summary>
            Represents a file used by a sample and its source.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SourceFile.#ctor">
            <summary>
            Initializes a new instance of the SourceFile class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SourceFile.Path">
            <summary>
            Gets or sets the path to the file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SourceFile.Source">
            <summary>
            Gets or sets the source code in the file.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.SourceViewer">
            <summary>
            The SourceViewer is used to browse the source for a sample.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.SourceViewer._files">
            <summary>
            A collection of source files to view.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.SourceViewer.#ctor">
            <summary>
            Initializes a new instance of the SourceViewer class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Samples.SourceViewer.Files">
            <summary>
            Gets a collection of source files to view.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Samples.WebServiceHelper">
            <summary>
            A set of simple helpers to enable the creation of more robust web 
            service samples. Includes a centralized place to get generic addresses 
            for service requests and web pages.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.WebServiceHelper.LiveSuggestionsJsonUriFormat">
            <summary>
            The format of the URI for JSON requests to Live Suggestions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.WebServiceHelper.LiveSearchUriFormat">
            <summary>
            Standard Live Search URI.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Samples.WebServiceHelper.AirfareSearchUriFormat">
            <summary>
            A format string for creating a link to look at airline fares online.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Samples.WebServiceHelper.CreateWebSearchUri(System.String)">
            <summary>
            Creates a Uri to navigate to a web search service.
            </summary>
            <param name="searchText">The search string.</param>
            <returns>Returns a new Uri instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.WebServiceHelper.CreateWebSearchSuggestionsUri(System.String)">
            <summary>
            Creates a Uri for retrieving search suggestion phrases.
            </summary>
            <param name="searchText">The search string.</param>
            <returns>Returns a new Uri instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.Samples.WebServiceHelper.CreateAirfareSearchUri(System.Windows.Controls.Samples.Airport,System.Windows.Controls.Samples.Airport,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Creates a Uri to look up flight pricing trends online using the 
            Live Farecast service from Microsoft.
            </summary>
            <param name="departureAirport">The departure airport object.</param>
            <param name="arrivalAirport">The arrival airport object.</param>
            <param name="departure">The departure date.</param>
            <param name="arrival">The arrival date.</param>
            <param name="persons">The number of people that will be traveling.</param>
            <returns>Returns a new Uri object.</returns>
        </member>
        <member name="P:System.Windows.Controls.Samples.WebServiceHelper.CanMakeHttpRequests">
            <summary>
            Gets a value indicating whether the document scheme allows for web 
            service access.
            </summary>
            <returns>Returns true when the scheme should permit web requests.</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Theming.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.ThemeMetadata">
            <summary>
            To register design time metadata for Theme.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Design.ThemeMetadata.#ctor">
            <summary>
            To register design time metadata for Theme.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Theming.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.ThemeMetadata">
            <summary>
            To register design time metadata for Theme.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Design.ThemeMetadata.#ctor">
            <summary>
            To register design time metadata for Theme.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Theming.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.EmptyDefaultInitializer">
            <summary>
            Empty default initializer to prevent Blend from adding its own default initialization. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1">
            <summary>
            Design mode value provider base class that always returns true for a Boolean property 
            of a model item when the item or any of its visual tree descendants is selected; and 
            returns the real value of the property when the item is de-selected. This is used to 
            expand and show hidden parts during of control at design time.
            </summary>
            <remarks>
            * SelectionPolicy can't be applied to DesignModeValueProvider directoly,
              so the AdornerProxy is needed as a proxy to apply the selection policy; 
            * The use of static variable InSelection is OK, because UI is singled 
              threaded, and ValueTranslationService.InvalidateProperty is synchronous.
            * Nest SelfOrDescendantSelectedPolicy and AdornerProxy inside the
              TrueIfSelectedDesignModeValueProvider because they are tightly coupled.
            * No need to abstract the DMVP class further to support multiple porperties, 
              types, and/or custom value translation logic yet.
            </remarks>
            <typeparam name="T">
            The Silverlight type whose property this DMVP is used for. 
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.InSelection">
            <summary>
            Flag to TranslatePropertyValue method whether it is called by 
            AdornerProxy for the model item selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.#cctor">
            <summary>
            Default constructor to add the property for translation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.TranslatePropertyValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
            <summary>
            Translate property value at design time.
            </summary>
            <param name="item">The model item whose property is to be translated.</param>
            <param name="identifier">The property to translate.</param>
            <param name="value">Value of the property.</param>
            <returns>Translated value of the property at design time.</returns>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.Identifiers">
            <summary>
            Gets the static dictionary of control type and its Boolean property to be translated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy">
            <summary>
            Item policy to apply extensibility features when an model item 
            or any of its visual tree descendants is selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
            <summary>
            Return the policy items from the specified selection.
            </summary>
            <param name="selection">The current selection.</param>
            <returns>An enumeration of ModelItem objects to use for this policy.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            CS0416: type parameter can't be used as attribute argument.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.cachedItem">
            <summary>
            Cached model item for InvalidateValue call in Deactivate.
            </summary>
            <remarks>
            Assume there is a separate AdornerCheap instance for each item in policy.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Activate(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Set selection state and trigger value translation.
            </summary>
            <param name="item">The model item.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Deactivate">
            <summary>
            Revert selection state and revert to real property value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ExpanderIsExpandedDesignModeValueProvider">
            <summary>
            Design mode value provider for Expander.IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.ExpanderIsExpandedDesignModeValueProvider._propertyIdentifier">
            <summary>
            Identifier of the property this DMVP is for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ExpanderIsExpandedDesignModeValueProvider.#cctor">
            <summary>
            Use the static constructor to add one property identifier to base.Identifiers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ExpanderIsExpandedDesignModeValueProvider.#ctor">
            <summary>
            Default constructor to add the property for design time translation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ExpanderIsExpandedDesignModeValueProvider.AdornerProxy">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            Work around CS0416: have specialized types for and to apply UsesItemPolicy attribute.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Design.GlobalCalendarDayButtonMetadata">
            <summary>
            To register design time metadata for GlobalCalendarDayButton.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GlobalCalendarDayButtonMetadata.#ctor">
            <summary>
            To register design time metadata for GlobalCalendarDayButton.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.GlobalCalendarButtonMetadata">
            <summary>
            To register design time metadata for GlobalCalendarButton.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GlobalCalendarButtonMetadata.#ctor">
            <summary>
            To register design time metadata for GlobalCalendarButton.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.GlobalCalendarItemMetadata">
            <summary>
            To register design time metadata for GlobalCalendarItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GlobalCalendarItemMetadata.#ctor">
            <summary>
            To register design time metadata for GlobalCalendarItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.GlobalCalendarMetadata">
            <summary>
            To register design time metadata for GlobalCalendar.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GlobalCalendarMetadata.#ctor">
            <summary>
            To register design time metadata for GlobalCalendar.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Calendar">
            <summary>
              Looks up a localized string similar to Calendar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DockPanelMetadata">
            <summary>
            To register design time metadata for DockPanel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DockPanelMetadata.#ctor">
            <summary>
            To register design time metadata for DockPanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ExpanderMetadata">
            <summary>
            To register design time metadata for Expander.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ExpanderMetadata.#ctor">
            <summary>
            To register design time metadata for Expander.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.HeaderedContentControlMetadata">
            <summary>
            To register design time metadata for HeaderedContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.HeaderedContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for HeaderedContentControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ViewboxMetadata">
            <summary>
            To register design time metadata for Viewbox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ViewboxMetadata.#ctor">
            <summary>
            To register design time metadata for Viewbox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.WrapPanelMetadata">
            <summary>
            To register design time metadata for WrapPanel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.WrapPanelMetadata.#ctor">
            <summary>
            To register design time metadata for WrapPanel.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Theming.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Theming.DefaultStyleKeyRetriever">
            <summary>
            This class retrieves the default style key of a control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.DefaultStyleKeyRetriever.#ctor">
            <summary>
            Initializes a new instance of the DefaultStyleKeyRetriever class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.DefaultStyleKeyRetriever.GetDefaultStyleKey(System.Windows.Controls.Control)">
            <summary>
            This method retrieves the default style key of a control.
            </summary>
            <param name="control">The control to retrieve the default style key 
            from.</param>
            <returns>The default style key of the control.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.BaseMergedStyleDictionary">
            <summary>
            A class that defines the behavior of looking for an item recursively up 
            a chain of dictionaries.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.BaseMergedStyleDictionary.Parent">
            <summary>
            Gets or sets the parent of this merged dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.BaseMergedStyleDictionary.Item(System.String)">
            <summary>
            Retrieves an item using a key.  If the item is not found in the 
            local dictionary a lookup is attempted on the parent.
            </summary>
            <param name="key">The key to use to retrieve the item.</param>
            <returns>A style corresponding to the key.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.FunctionalProgramming">
            <summary>
            Collection of functions for functional programming tasks.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.TraverseDepthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Appends an item to the front of a stream.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="that">The stream.</param>
            <param name="value">The value to append to the front of the stream.
            </param>
            <returns>A stream with the item appended to the front.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.ImplicitStyleManager">
            <summary>
            Encapsulates an attached behavior that propagates styles in a framework 
            element's associated resource dictionary to its children.  The class 
            also provides attached properties that allow the resource dictionary to 
            be loaded from an external source.  Hierarchical styling is supported in
            a way similar to WPF.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetHasBeenStyled(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the HasBeenStyled attached property for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The HasBeenStyled property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetHasBeenStyled(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets the value of the HasBeenStyled attached property to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached property is written.</param>
            <param name="value">The needed HasBeenStyled value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.HasBeenStyledProperty">
            <summary>
            Identifies the HasBeenStyled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetApplyMode(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ImplicitStyleManager.ApplyMode attached property 
            for a specified framework element. 
            The value indicates whether the style implicitly applied on descendent
            framework elements.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The ApplyMode property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetApplyMode(System.Windows.FrameworkElement,System.Windows.Controls.Theming.ImplicitStylesApplyMode)">
            <summary>
            Sets the value of the ImplicitStyleManager.ApplyMode attached
            property on a specified framework element. 
            This value indicates whether the style should be implicitly applied
            on descendent framework elements.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The ApplyMode value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ApplyModeProperty">
            <summary>
            Identifies the ApplyMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnApplyModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ApplyModeProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its 
            ApplyMode.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetExternalResourceDictionary(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ExternalResourceDictionary attached property 
            for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The ExternalResourceDictionary property value for the 
            FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetExternalResourceDictionary(System.Windows.FrameworkElement,System.Windows.ResourceDictionary)">
            <summary>
            Sets the value of the ExternalResourceDictionary attached property 
            to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed ExternalResourceDictionary value.
            </param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ExternalResourceDictionaryProperty">
            <summary>
            Identifies the ExternalResourceDictionary dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetLayoutUpdatedHandler(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the LayoutUpdatedHandler attached property for a 
            specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The LayoutUpdatedHandler property value for the 
            FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetLayoutUpdatedHandler(System.Windows.FrameworkElement,System.EventHandler)">
            <summary>
            Sets the value of the LayoutUpdatedHandler attached property to a 
            specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed LayoutUpdatedHandler value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.LayoutUpdatedHandlerProperty">
            <summary>
            Identifies the LayoutUpdatedHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetResourceDictionaryUri(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ImplicitStyleManager.ResourceDictionaryUri 
            attached property for a specified framework element.
            The value indicates the URI address for the resource dictionary that 
            is implicitly applied.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The ResourceDictionaryUri property value for the 
            FrameworkElement.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetResourceDictionaryUri(System.Windows.FrameworkElement,System.Uri)">
            <summary>
            Sets the value of the ImplicitStyleManager.ResourceDictionaryUri 
            attached property for a specified framework element. 
            The value indicates the URI address for the resource dictionary 
            that is implicitly applied.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed ResourceDictionaryUri value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ResourceDictionaryUriProperty">
            <summary>
            Identifies the ResourceDictionaryUri dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnResourceDictionaryUriPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ResourceDictionaryUriProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its 
            ResourceDictionaryUri.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager._useApplicationResources">
            <summary>
            Gets or sets a value indicating whether to use application
            resources.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager._applicationResourceDictionaryUri">
            <summary>
            A field that stores a resource dictionary uri which is used to 
            retrieve resources associated with the application.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetStyle(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the Style attached property for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The Style property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetStyle(System.Windows.FrameworkElement,System.Windows.Style)">
            <summary>
            Sets the value of the Style attached property to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached property is written.</param>
            <param name="value">The needed Style value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.StyleProperty">
            <summary>
            Identifies the Style dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StyleProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its Style.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.Apply(System.Windows.FrameworkElement)">
            <summary>
            Applies implicit styles to an element and its descendents.
            </summary>
            <param name="element">The element to apply implicit styles to.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetMergedStyleDictionary(System.Windows.FrameworkElement)">
            <summary>
            Retrieves or creates the merged style dictionary of an element.
            </summary>
            <param name="styledElement">A styled element.</param>
            <returns>The merged dictionary of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetStyleKey(System.Windows.FrameworkElement)">
            <summary>
            Retrieves the style key for a given element by first checking to
            see if it can retrieve its default style key and then using the
            full name of its concrete type.
            </summary>
            <param name="element">The element to retrieve the style key for.
            </param>
            <returns>The style key.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.Parse(System.Uri)">
            <summary>
            Retrieves a style collection from a uri of a resource
            dictionary.
            </summary>
            <param name="uri">The uri of a resource dictionary.</param>
            <returns>A style collection containing the styles in the resource
            dictionary.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.PropagateStyles(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            This method propagates the styles in the resources associated with
            a framework element to its descendents. This results in a  
            style inheritance that mimics WPF's behavior.
            </summary>
            <param name="element">The element that will have its styles 
            propagated to its children.</param>
            <param name="recurse">Whether to recurse over styled elements that
            are set to OneTime and have already been styled.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.UseApplicationResources">
            <summary>
            Gets or sets a value indicating whether the implicitly applied 
            styles are based on values from 
            ImplicitStyleManager.ApplicationResourceDictionaryUri.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.ApplicationResourceDictionaryUri">
            <summary>
            Gets or sets the ResourceDictionary URI that is implicitly applied 
            to all FrameworksElements in the Application.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.ApplicationExternalResourceDictionary">
            <summary>
            Gets or sets the external resource dictionary to use for the 
            application.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.ImplicitStylesApplyMode">
            <summary>
            Specifies the mode in which styles are implicitly applied in 
            ImplicitStyleManager.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.None">
            <summary>
            Specifies that the ImplicitStyleManager does not implicitly apply 
            styles.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.OneTime">
            <summary>
            Specifies that the ImplicitStyleManager will implicitly apply styles 
            to the descendent visual tree once and will not attempt refreshes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.Auto">
            <summary>
            Specifies that the ImplicitStyleManager will implicitly apply styles 
            to the descendent visual tree once the visual tree changes. 
            Using this setting may incur a serious performance hit.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.InvalidResourceException">
            <summary>
            Exception thrown when resource is not found.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.InvalidResourceException.Uri">
            <summary>
            Gets the uri of the resource that could not be found.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.MergedStyleResourceDictionary">
            <summary>
            A dictionary that merges a resource dictionary with a parent dictionary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.MergedStyleResourceDictionary._resourceDictionary">
            <summary>
            The resource dictionary to check for a value before checking the 
            parent.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.MergedStyleResourceDictionary.#ctor(System.Windows.ResourceDictionary,System.Windows.Controls.Theming.BaseMergedStyleDictionary)">
            <summary>
            Initializes a new instance of the MergedResourceDictionary class.
            </summary>
            <param name="resourceDictionary">A resource dictionary to check for 
            a value before checking the parent.</param>
            <param name="parentResourceDictionary">The parent merged resource 
            dictionary to check if no match is found in the resource 
            dictionary.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.MergedStyleResourceDictionary.#ctor(System.Windows.ResourceDictionary)">
            <summary>
            Initializes a new instance of the MergedResourceDictionary class.
            </summary>
            <param name="resourceDictionary">A resource dictionary to check for a value 
            before checking the parent.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.MergedStyleResourceDictionary.Item(System.String)">
            <summary>
            Retrieves an item using a key.  If the item is not found in the 
            local dictionary a lookup is attempted on the parent.
            </summary>
            <param name="key">The key to use to retrieve the item.</param>
            <returns>A style corresponding to the key.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.ResourceNotFoundException">
            <summary>
            Exception thrown when resource is not found.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.ResourceNotFoundException.Uri">
            <summary>
            Gets the uri of the resource that could not be found.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.EnsureName(System.Windows.FrameworkElement)">
            <summary>
            Ensures that a framework element has a unique name.
            </summary>
            <param name="element">The element to set the name of.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetVisualAncestors(System.Windows.FrameworkElement)">
            <summary>
            Returns the visual tree ancestors of an element.
            </summary>
            <param name="element">The descendent of the ancestors.</param>
            <returns>The visual tree ancestors of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetLogicalChildrenDepthFirst(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            depth-first search.  A visual element is assumed to be a logical 
            child of another visual element if they are in the same namescope.
            For performance reasons this method manually manages the stack 
            instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a framework element.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The visual children of the framework element.</returns>
        </member>
        <member name="P:System.Windows.Controls.Theming.VisualTreeExtensions.UniqueId">
            <summary>
            Gets or sets an identity integer that ensures that names are unique.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ImplicitStyleManager_Parse_CanOnlyParseXAMLFilesWithResourceDictionaryAsTheRootElement">
            <summary>
              Looks up a localized string similar to Cannot parse XAML files which do not have a ResourceDictionary as the root element..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ImplicitStyleManager_ResourceNotFound">
            <summary>
              Looks up a localized string similar to Resource not found at &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.InvalidResourceException_UnableToLoadResources">
            <summary>
              Looks up a localized string similar to Unable to load resources..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.ResourceParser">
            <summary>
            Parse streams containing theme resources.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.OldXamlNamespace">
            <summary>
            The default old XAML namespace.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.NewXamlNamespace">
            <summary>
            The default new XAML namespace.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.StyleXaml">
            <summary>
            The XAML markup for an empty Style declaration.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.StyleXamlWithPrefix">
            <summary>
            The XAML markup for an empty Style declaration with a TargetType
            using an XML prefix.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.IsXamlElement``1(System.String,System.String)">
            <summary>
            Determines whether an XML element is a type in the core Silverlight
            namespace.
            </summary>
            <typeparam name="T">The type to check for.</typeparam>
            <param name="name">The name of the element.</param>
            <param name="ns">The namespace of the element.</param>
            <returns>
            A value indicating whether an the element is the Silverlight type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.Parse(System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a resource dictionary from an input stream.
            </summary>
            <param name="stream">
            A stream containing the XAML for a  resource dictionary.
            </param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <returns>A resource dictionary.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.ParseResources(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Transform a ResourceDictionary defined in the reader into a
            ContentControl in the writer and nest all of its resources in
            ContentControl.Resources.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.ParseElement(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Process an element's opening tag.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.IsStyleTargetTypeLoaded(System.Xml.XmlReader)">
            <summary>
            Determine if the current element in the reader represents a Style
            whose TargetType has been loaded in the assembly.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <returns>
            A value indicating whether the element is not a style or it is a
            Style with a TargetType loaded in this assembly.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.Theme">
            <summary>
            Uses ImplicitStyleManager to implicitly apply a set of styles to all of
            its descendent FrameworkElements.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
            <param name="themeAssembly">
            Assembly with the embedded resource containing the theme to apply.
            </param>
            <param name="themeResourceName">
            Name of the embedded resource containing the theme to apply.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
            <param name="themeResourceStream">
            A resource stream containing the theme to apply.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.LoadTheme(System.IO.Stream)">
            <summary>
            Load a theme from a resource stream.
            </summary>
            <param name="themeResourceStream">
            A resource stream containing the theme to load.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Theme.ApplyMode">
            <summary>
            Gets or sets the mode defining how styles in the theme are
            implicitly applied.
            </summary>
            <remarks>
            The default value is OneTime.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Theming.Tuple`2">
            <summary>
            A structure that groups two values.
            </summary>
            <typeparam name="T0">The type of the first value.</typeparam>
            <typeparam name="T1">The type of the second value.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.Theming.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple structure.
            </summary>
            <param name="first">The first value.</param>
            <param name="second">The second value.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Tuple`2.First">
            <summary>
            Gets the first value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Tuple`2.Second">
            <summary>
            Gets the second value.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Toolkit.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Toolkit.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.CalendarMetadata">
            <summary>
            To register design time metadata for Calendar.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.CalendarMetadata.#ctor">
            <summary>
            To register design time metadata for Calendar.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ChildWindowMetadata">
            <summary>
            To register design time metadata for ChildWindow.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ChildWindowMetadata.#ctor">
            <summary>
            To register design time metadata for ChildWindow.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerMetadata">
            <summary>
            To register design time metadata for DatePicker.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerMetadata.#ctor">
            <summary>
            To register design time metadata for DatePicker.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerTextBoxMetadata">
            <summary>
            To register design time metadata for DatePickerTextBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerTextBoxMetadata.#ctor">
            <summary>
            To register design time metadata for DatePickerTextBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.GridSplitterMetadata">
            <summary>
            To register design time metadata for GridSplitter.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GridSplitterMetadata.#ctor">
            <summary>
            To register design time metadata for GridSplitter.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.HeaderedItemsControlMetadata">
            <summary>
            To register design time metadata for HeaderedItemsControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.HeaderedItemsControlMetadata.#ctor">
            <summary>
            To register design time metadata for HeaderedItemsControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TabControlMetadata">
            <summary>
            To register design time metadata for TabControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TabControlMetadata.#ctor">
            <summary>
            To register design time metadata for TabControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TabItemMetadata">
            <summary>
            To register design time metadata for TabItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TabItemMetadata.#ctor">
            <summary>
            To register design time metadata for TabItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TreeViewItemMetadata">
            <summary>
            To register design time metadata for TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TreeViewItemMetadata.#ctor">
            <summary>
            To register design time metadata for TreeViewItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Calendar">
            <summary>
              Looks up a localized string similar to Calendar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.DatePicker">
            <summary>
              Looks up a localized string similar to Date Picker.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Toolkit.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DockPanelMetadata">
            <summary>
            To register design time metadata for DockPanel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DockPanelMetadata.#ctor">
            <summary>
            To register design time metadata for DockPanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ExpanderMetadata">
            <summary>
            To register design time metadata for Expander.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ExpanderMetadata.#ctor">
            <summary>
            To register design time metadata for Expander.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.HeaderedContentControlMetadata">
            <summary>
            To register design time metadata for HeaderedContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.HeaderedContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for HeaderedContentControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ViewboxMetadata">
            <summary>
            To register design time metadata for Viewbox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ViewboxMetadata.#ctor">
            <summary>
            To register design time metadata for Viewbox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.WrapPanelMetadata">
            <summary>
            To register design time metadata for WrapPanel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.WrapPanelMetadata.#ctor">
            <summary>
            To register design time metadata for WrapPanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Data.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Data</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Data.CollectionViewGroup">
            <summary>
            A CollectionViewGroup, as created by a PagedCollectionView according to a GroupDescription.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemCount">
            <summary>
            The number of data items (leaves) in the subtree under this group.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemsRO">
            <summary>
            The immediate children of the group.
            These may be data items (leaves) or subgroups.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemsRW">
            <summary>
            A writable copy of the collection of children of the group.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._name">
            <summary>
            The name of the group, which is the common value of the
            property used to divide data items into groups.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the CollectionViewGroup class.
            </summary>
            <param name="name">Name of the CollectionViewGroup</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
            <param name="e">EventArgs for the PropertyChange</param>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
            <summary>
            Gets a value indicating whether this group is at the 
            bottom level (not further sub-grouped).
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.Items">
            <summary>
            Gets the immediate children of the group.
            These may be data items (leaves) or subgroups.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
            <summary>
            Gets the number of data items (leaves) in the subtree under this group.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.Name">
            <summary>
            Gets the name of the group, which is the common value of the
            property used to divide data items into groups.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
            <summary>
            Gets or sets the number of data items (leaves) in the subtree 
            under this group. Derived classes can change the count using 
            this property; the changes will be reflected in the public 
            ItemCount property.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
            <summary>
            Gets the items of the group.
            Derived classes can add or remove items using this property;
            the changes will be reflected in the public Items property.
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal">
            <summary>
            A CollectionViewGroupInternal, as created by a PagedCollectionView 
            according to a GroupDescription.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._groupBy">
            <summary>
            GroupDescription used to define how to group the items
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._parentGroup">
            <summary>
            Parent group of this CollectionViewGroupInternal
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._version">
            <summary>
            Used for detecting stale enumerators
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.#ctor(System.Object,System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Initializes a new instance of the CollectionViewGroupInternal class.
            </summary>
            <param name="name">Name of the CollectionViewGroupInternal</param>
            <param name="parent">Parent node of the CollectionViewGroup</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Add(System.Object)">
            <summary>
            Adds the specified item to the collection
            </summary>
            <param name="item">Item to add</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Clear">
            <summary>
            Clears the collection of items
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.FindIndex(System.Object,System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
            <summary>
            Finds the index of the specified item
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <param name="low">Low range of item index</param>
            <param name="high">High range of item index</param>
            <returns>Index of the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.GetLeafEnumerator">
            <summary>
            Returns an enumerator over the leaves governed by this group
            </summary>
            <returns>Enumerator of leaves</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Insert(System.Object,System.Object,System.Collections.IComparer)">
            <summary>
            Insert a new item or subgroup and return its index.  Seed is a
            representative from the subgroup (or the item itself) that
            is used to position the new item/subgroup w.r.t. the order given
            by the comparer. (If comparer is null, just add at the end).
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <returns>The index where the item was inserted</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafAt(System.Int32)">
            <summary>
            Return the item at the given index within the list of leaves governed
            by this group
            </summary>
            <param name="index">Index of the leaf</param>
            <returns>Item at given index</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafIndexFromItem(System.Object,System.Int32)">
            <summary>
            Returns the index of the given item within the list of leaves governed
            by the full group structure.  The item must be a (direct) child of this
            group.  The caller provides the index of the item within this group,
            if known, or -1 if not.
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="index">Index of the leaf</param>
            <returns>Number of items under that leaf</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafIndexOf(System.Object)">
            <summary>
            Returns the index of the given item within the list of leaves governed
            by this group
            </summary>
            <param name="item">Item we are looking for</param>
            <returns>Number of items under that leaf</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.OnGroupByChanged">
            <summary>
            The group's description has changed - notify parent 
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Remove(System.Object,System.Boolean)">
            <summary>
            Removes the specified item from the collection
            </summary>
            <param name="item">Item to remove</param>
            <param name="returnLeafIndex">Whether we want to return the leaf index</param>
            <returns>Leaf index where item was removed, if value was specified. Otherwise '-1'</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.RemoveEmptyGroup(System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Removes an empty group from the PagedCollectionView grouping
            </summary>
            <param name="group">Empty subgroup to remove</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ChangeCounts(System.Object,System.Int32)">
            <summary>
            Update the item count of the CollectionViewGroup
            </summary>
            <param name="item">CollectionViewGroup to update</param>
            <param name="delta">Delta to change count by</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.OnGroupByChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handler for the GroupBy PropertyChanged event
            </summary>
            <param name="sender">CollectionViewGroupInternal whose GroupBy property changed</param>
            <param name="e">The args for the PropertyChanged event</param>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.IsBottomLevel">
            <summary>
            Gets a value indicating whether this group 
            is at the bottom level (not further sub-grouped).
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.FullCount">
            <summary>
            Gets or sets the number of items and groups in the subtree under this group
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.GroupBy">
            <summary>
            Gets or sets how this group divides into subgroups
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.LastIndex">
            <summary>
            Gets or sets the most recent index where activity took place
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.SeedItem">
            <summary>
            Gets the first item (leaf) added to this group.  If this can't be determined,
            DependencyProperty.UnsetValue.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.Parent">
            <summary>
            Gets the parent node for this CollectionViewGroupInternal
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.ListComparer">
            <summary>
            This comparer is used to insert an item into a group in a position consistent
            with a given IList.  It only works when used in the pattern that FindIndex
            uses, namely first call Reset(), then call Compare(item, itemSequence) any number of
            times with the same item (the new item) as the first argument, and a sequence
            of items as the second argument that appear in the IList in the same sequence.
            This makes the total search time linear in the size of the IList.  (To give
            the correct answer regardless of the sequence of arguments would involve
            calling IndexOf and leads to O(N^2) total search time.) 
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.#ctor(System.Collections.IList)">
            <summary>
            Constructor for the ListComparer that takes
            in an IList.
            </summary>
            <param name="list">IList used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.Reset">
            <summary>
            Sets the index that we start comparing
            from to 0.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.ResetList(System.Collections.IList)">
            <summary>
            Sets our IList to a new instance
            of a list being passed in and resets
            the index.
            </summary>
            <param name="list">IList used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares objects x and y to see which one
            should appear first.
            </summary>
            <param name="x">The first object</param>
            <param name="y">The second object</param>
            <returns>-1 if x is less than y, +1 otherwise</returns>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer">
            <summary>
            This comparer is used to insert an item into a group in a position consistent
            with a given CollectionViewGroupRoot. We will only use this when dealing with
            a temporary CollectionViewGroupRoot that points to the correct grouping of the
            entire collection, and we have paging that requires us to keep the paged group
            consistent with the order of items in the temporary group.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.#ctor(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Constructor for the CollectionViewGroupComparer that takes
            in an CollectionViewGroupRoot.
            </summary>
            <param name="group">CollectionViewGroupRoot used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.Reset">
            <summary>
            Sets the index that we start comparing
            from to 0.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.ResetGroup(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Sets our group to a new instance of a
            CollectionViewGroupRoot being passed in
            and resets the index.
            </summary>
            <param name="group">CollectionViewGroupRoot used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares objects x and y to see which one
            should appear first.
            </summary>
            <param name="x">The first object</param>
            <param name="y">The second object</param>
            <returns>-1 if x is less than y, +1 otherwise</returns>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator">
            <summary>
            Enumerator for the leaves in the CollectionViewGroupInternal class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.#ctor(System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Initializes a new instance of the LeafEnumerator class.
            </summary>
            <param name="group">CollectionViewGroupInternal that uses the enumerator</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.DoReset">
            <summary>
            Private helper to reset the enumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Reset implementation for IEnumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            MoveNext implementation for IEnumerator
            </summary>
            <returns>Returns whether the MoveNext operation was successful</returns>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current implementation for IEnumerator
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupRoot">
            <summary>
            PagedCollectionView classes use this class as the manager 
            of all Grouping functionality
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.RootName">
            <summary>
            String constant used for the Root Name
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.UseAsItemDirectly">
            <summary>
            Private accessor for empty object instance
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.topLevelGroupDescription">
            <summary>
            Private accessor for the top level GroupDescription
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._groupBy">
            <summary>
            Private accessor for an ObservableCollection containing group descriptions
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._isDataInGroupOrder">
            <summary>
            Indicates whether the list of items (after applying the sort and filters, if any) 
            is already in the correct order for grouping.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._view">
            <summary>
            Private accessor for the owning ICollectionView
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.#ctor(System.ComponentModel.ICollectionView,System.Boolean)">
            <summary>
            Initializes a new instance of the CollectionViewGroupRoot class.
            </summary>
            <param name="view">PagedCollectionView that contains this grouping</param>
            <param name="isDataInGroupOrder">True if items are already in correct order for grouping</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroups(System.Object,System.Boolean)">
            <summary>
            Adds specified item to subgroups
            </summary>
            <param name="item">Item to add</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.FindIndex(System.Object,System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
            <summary>
            Finds the index of the specified item
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <param name="low">Low range of item index</param>
            <param name="high">High range of item index</param>
            <returns>Index of the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.Initialize">
            <summary>
            Initializes the group descriptions
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.InsertSpecialItem(System.Int32,System.Object,System.Boolean)">
            <summary>
            Inserts specified item into the collection
            </summary>
            <param name="index">Index to insert into</param>
            <param name="item">Item to insert</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Notify listeners that this View has changed
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should take their filter/sort/grouping
            into account before calling this method to forward CollectionChanged events.
            </remarks>
            <param name="args">The NotifyCollectionChangedEventArgs to be passed to the EventHandler</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.OnGroupByChanged">
            <summary>
            Notify host that a group description has changed somewhere in the tree
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroups(System.Object)">
            <summary>
            Remove specified item from subgroups
            </summary>
            <param name="item">Item to remove</param>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveItemFromSubgroupsByExhaustiveSearch(System.Object)">
            <summary>
            Remove specified item from subgroups using an exhaustive search
            </summary>
            <param name="item">Item to remove</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveSpecialItem(System.Int32,System.Object,System.Boolean)">
            <summary>
            Removes specified item into the collection
            </summary>
            <param name="index">Index to remove from</param>
            <param name="item">Item to remove</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroup(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object,System.Boolean)">
            <summary>
            Add an item to the subgroup with the given name
            </summary>
            <param name="item">Item to add</param>
            <param name="group">Group to add item to</param>
            <param name="level">The level of grouping.</param>
            <param name="name">Name of subgroup to add to</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroups(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Boolean)">
            <summary>
            Add an item to the desired subgroup(s) of the given group
            </summary>
            <param name="item">Item to add</param>
            <param name="group">Group to add item to</param>
            <param name="level">The level of grouping</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.GetGroupDescription(System.Windows.Data.CollectionViewGroup,System.Int32)">
            <summary>
            Returns the description of how to divide the given group into subgroups
            </summary>
            <param name="group">CollectionViewGroup to get group description from</param>
            <param name="level">The level of grouping</param>
            <returns>GroupDescription of how to divide the given group</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.GetGroupName(System.Object,System.ComponentModel.GroupDescription,System.Int32)">
            <summary>
            Get the group name(s) for the given item
            </summary>
            <param name="item">Item to get group name for</param>
            <param name="groupDescription">GroupDescription for the group</param>
            <param name="level">The level of grouping</param>
            <returns>Group names for the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.InitializeGroup(System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object)">
            <summary>
            Initialize the given group
            </summary>
            <param name="group">Group to initialize</param>
            <param name="level">The level of grouping</param>
            <param name="seedItem">The seed item to compare with to see where to insert</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromGroupDirectly(System.Windows.Data.CollectionViewGroupInternal,System.Object)">
            <summary>
            Remove an item from the direct children of a group.
            </summary>
            <param name="group">Group to remove item from</param>
            <param name="item">Item to remove</param>
            <returns>True if item could not be removed</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroup(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object)">
            <summary>
            Remove an item from the subgroup with the given name.
            </summary>
            <param name="item">Item to remove</param>
            <param name="group">Group to remove item from</param>
            <param name="level">The level of grouping</param>
            <param name="name">Name of item to remove</param>
            <returns>Return true if the item was not in one of the subgroups it was supposed to be.</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroups(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32)">
            <summary>
            Remove an item from the desired subgroup(s) of the given group.
            </summary>
            <param name="item">Item to remove</param>
            <param name="group">Group to remove item from</param>
            <param name="level">The level of grouping</param>
            <returns>Return true if the item was not in one of the subgroups it was supposed to be.</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveItemFromSubgroupsByExhaustiveSearch(System.Windows.Data.CollectionViewGroupInternal,System.Object)">
            <summary>
            The item did not appear in one or more of the subgroups it
            was supposed to.  This can happen if the item's properties
            change so that the group names we used to insert it are
            different from the names used to remove it. If this happens,
            remove the item the hard way.
            </summary>
            <param name="group">Group to remove item from</param>
            <param name="item">Item to remove</param>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroupRoot.CollectionChanged">
            <summary>
            Raise this event when the (grouped) view changes
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroupRoot.GroupDescriptionChanged">
            <summary>
            Raise this event when the GroupDescriptions change
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.GroupBySelector">
            <summary>
            Gets or sets a delegate to select the group description as a 
            function of the parent group and its level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.GroupDescriptions">
            <summary>
            Gets the description of grouping, indexed by level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.ActiveComparer">
            <summary>
            Gets or sets the current IComparer being used
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.Culture">
            <summary>
            Gets the culture to use during sorting.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.IsDataInGroupOrder">
            <summary>
            Gets or sets a value indicating whether the data is in group order
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription">
            <summary>
            TopLevelGroupDescription class
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription.#ctor">
            <summary>
            Initializes a new instance of the TopLevelGroupDescription class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            We have to implement this abstract method, but it should never be called
            </summary>
            <param name="item">Item to get group name from</param>
            <param name="level">The level of grouping</param>
            <param name="culture">Culture used for sorting</param>
            <returns>We do not return a value here</returns>
        </member>
        <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
            <summary>
            Describes the desired position of the new item placeholder in an
            <seealso cref="T:System.ComponentModel.IEditableCollectionView"/>.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
            <summary> Do not include a placeholder. </summary>
        </member>
        <member name="T:System.ComponentModel.IEditableCollectionView">
            <summary>
            IEditableCollectionView is an interface that a collection view
            can implement to enable editing-related functionality.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
            <summary>
            Add a new item to the underlying collection.  Returns the new item.
            After calling AddNew and changing the new item as desired, either
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.CommitNew"/> or <seealso cref="M:System.ComponentModel.IEditableCollectionView.CancelNew"/> should be
            called to complete the transaction.
            </summary>
            <returns>
            The new item that gets created
            </returns>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.  The new
            item remains in the collection, and the view's sort, filter, and grouping
            specifications (if any) are applied to the new item.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.  The new
            item is removed from the collection.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
            <summary>
            Remove the item at the given index from the underlying collection.
            The index is interpreted with respect to the view (not with respect to
            the underlying collection).
            </summary>
            <param name="index">Index of item to remove</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
            <summary>
            Remove the given item from the underlying collection.
            </summary>
            <param name="item">Object we want to remove</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
            <summary>
            Begins an editing transaction on the given item.  The transaction is
            completed by calling either <seealso cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit"/> or
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit"/>.  Any changes made to the item during
            the transaction are considered "pending", provided that the view supports
            the notion of "pending changes" for the given item.
            </summary>
            <param name="item">Object we want to edit</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are committed.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are discarded.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets whether to include a placeholder for a new item, and if so,
            where to put it.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
            <summary>
            Gets a value indicating whether the view supports <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
            <summary>
            Gets a value indicating whether an <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/> transaction is in progress.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
            <summary>
            Gets the new item when an <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/> transaction is in progress.
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
            <summary>
            Gets a value indicating whether the view supports <seealso cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)"/> and
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
            <summary>
            Gets a value indicating whether the view supports the notion 
            of "pending changes" on the current edit item.  This may vary, depending 
            on the view and the particular item.  For example, a view might return 
            true if the current edit item implements IEditableObject, or if the view has 
            special knowledge about the item that it can use to support rollback of 
            pending changes.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
            <summary>
            Gets a value indicating whether an <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/> transaction is in progress.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
            <summary>
            Gets the affected item when an <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/> transaction is in progress.
            Otherwise it returns null.
            </summary>
        </member>
        <member name="T:System.ComponentModel.IPagedCollectionView">
            <summary>
            Interface used to drive paging of collection views.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToFirstPage">
            <summary>
            Moves to the first page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToLastPage">
            <summary>
            Moves to the last page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)">
            <summary>
            Moves to page <paramref name="pageIndex"/>.
            </summary>
            <param name="pageIndex">The index of the page to which to move.</param>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="E:System.ComponentModel.IPagedCollectionView.PageChanged">
            <summary>
            Raised when a page index change completed.
            </summary>
        </member>
        <member name="E:System.ComponentModel.IPagedCollectionView.PageChanging">
            <summary>
            Raised when a page index change is requested.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.CanChangePage">
            <summary>
            Gets a value indicating whether the PageIndex value is allowed to change or not.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.IsPageChanging">
            <summary>
            Gets a value indicating whether a page index change is in process or not.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.ItemCount">
            <summary>
            Gets the number of known items in the view before paging is applied.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.PageIndex">
            <summary>
            Gets the current page we are on. (zero based)
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the view before paging is applied,
            or -1 if that total number is unknown.
            </summary>
        </member>
        <member name="T:System.ComponentModel.PageChangingEventArgs">
            <summary>
            Event argument used for page index change notifications. The requested page move
            can be canceled by setting e.Cancel to True.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.ComponentModel.PageChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor that takes the target page index
            </summary>
            <param name="newPageIndex">Index of the requested page</param>
        </member>
        <member name="P:System.ComponentModel.PageChangingEventArgs.NewPageIndex">
            <summary>
            Gets the index of the requested page
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView">
            <summary>
            PagedCollectionView view over an IEnumerable.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.uncancelableCurrentChangingEventArgs">
            <summary>
            Since there's nothing in the un-cancelable event args that is mutable,
            just create one instance to be used universally.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._cachedPageIndex">
            <summary>
            Value that we cache for the PageIndex if we are in a DeferRefresh,
            and the user has attempted to move to a different page.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._cachedPageSize">
            <summary>
            Value that we cache for the PageSize if we are in a DeferRefresh,
            and the user has attempted to change the PageSize.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._culture">
            <summary>
            CultureInfo used in this PagedCollectionView
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentChangedMonitor">
            <summary>
            Private accessor for the Monitor we use to prevent recursion
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentItem">
            <summary>
            Private accessor for the CurrentItem
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentPosition">
            <summary>
            Private accessor for the CurrentPosition
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._deferLevel">
            <summary>
            The number of requests to defer Refresh()
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._editItem">
            <summary>
            The item we are currently editing
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._filter">
            <summary>
            Private accessor for the Filter
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._flags">
            <summary>
            Private accessor for the CollectionViewFlags
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._group">
            <summary>
            Private accessor for the Grouping data
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._internalList">
            <summary>
            Private accessor for the InternalList
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._isGrouping">
            <summary>
            Keeps track of whether groups have been applied to the
            collection already or not. Note that this can still be set
            to false even though we specify a GroupDescription, as the 
            collection may not have gone through the PrepareGroups function.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._isUsingTemporaryGroup">
            <summary>
            Private accessor for indicating whether we want to point to the temporary grouping data for calculations
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._itemConstructor">
            <summary>
            ConstructorInfo obtained from reflection for generating new items
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._itemConstructorIsValid">
            <summary>
            Whether we have the correct ConstructorInfo information for the ItemConstructor
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._newItem">
            <summary>
            The new item we are getting ready to add to the collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pageIndex">
            <summary>
            Private accessor for the PageIndex
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pageSize">
            <summary>
            Private accessor for the PageSize
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pollForChanges">
            <summary>
            Whether the source needs to poll for changes
            (if it did not implement INotifyCollectionChanged)
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._sortDescriptions">
            <summary>
            Private accessor for the SortDescriptions
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._sourceCollection">
            <summary>
            Private accessor for the SourceCollection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._temporaryGroup">
            <summary>
            Private accessor for the Grouping data on the entire collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._timestamp">
            <summary>
            Timestamp used to see if there was a collection change while 
            processing enumerator changes
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._trackingEnumerator">
            <summary>
            Private accessor for the TrackingEnumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Helper constructor that sets default values for isDataSorted and isDataInGroupOrder.
            </summary>
            <param name="source">The source for the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PagedCollectionView class.
            </summary>
            <param name="source">The source for the collection</param>
            <param name="isDataSorted">Determines whether the source is already sorted</param>
            <param name="isDataInGroupOrder">Whether the source is already in the correct order for grouping</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AddNew">
            <summary>
            Add a new item to the underlying collection.  Returns the new item.
            After calling AddNew and changing the new item as desired, either
            CommitNew or CancelNew" should be called to complete the transaction.
            </summary>
            <returns>The new item we are adding</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CancelEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are discarded.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CancelNew">
            <summary>
            Complete the transaction started by AddNew. The new
            item is removed from the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CommitEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are committed.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CommitNew">
            <summary>
            Complete the transaction started by AddNew. We follow the WPF
            convention in that the view's sort, filter, and paging
            specifications (if any) are applied to the new item.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Contains(System.Object)">
            <summary>
            Return true if the item belongs to this view.  No assumptions are
            made about the item. This method will behave similarly to IList.Contains().
            If the caller knows that the item belongs to the
            underlying collection, it is more efficient to call PassesFilter.
            </summary>
            <param name="item">The item we are checking to see whether it is within the collection</param>
            <returns>Boolean value of whether or not the collection contains the item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferRefresh">
            <summary>
            Enter a Defer Cycle.
            Defer cycles are used to coalesce changes to the ICollectionView.
            </summary>
            <returns>IDisposable used to notify that we no longer need to defer, when we dispose</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)">
            <summary>
            Begins an editing transaction on the given item.  The transaction is
            completed by calling either CommitEdit or CancelEdit.  Any changes made 
            to the item during the transaction are considered "pending", provided 
            that the view supports the notion of "pending changes" for the given item.
            </summary>
            <param name="item">Item we want to edit</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetEnumerator">
            <summary> 
            Implementation of IEnumerable.GetEnumerator().
            This provides a way to enumerate the members of the collection
            without changing the currency.
            </summary>
            <returns>IEnumerator for the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Interface Implementation for GetEnumerator()
            </summary>
            <returns>IEnumerator that we get from our internal collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieve item at the given zero-based index in this PagedCollectionView, after the source collection
            is filtered, sorted, and paged.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if index is out of range
            </exception>
            <param name="index">Index of the item we want to retrieve</param>
            <returns>Item at specified index</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.IndexOf(System.Object)">
            <summary> 
            Return the index where the given item appears, or -1 if doesn't appear.
            </summary>
            <param name="item">Item we are searching for</param>
            <returns>Index of specified item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentTo(System.Object)">
            <summary> 
            Move to the given item. 
            </summary>
            <param name="item">Item we want to move the currency to</param>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToFirst">
            <summary> 
            Move to the first item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToLast">
            <summary> 
            Move to the last item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToNext">
            <summary> 
            Move to the next item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Move CurrentItem to this index
            </summary>
            <param name="position">Position we want to move the currency to</param>
            <returns>True if the resulting CurrentItem is an item within the view; otherwise False</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPrevious">
            <summary> 
            Move to the previous item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToFirstPage">
            <summary>
            Moves to the first page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToLastPage">
            <summary>
            Moves to the last page.
            The move is only attempted when TotalItemCount is known.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToPage(System.Int32)">
            <summary>
            Requests a page move to page <paramref name="pageIndex"/>.
            </summary>
            <param name="pageIndex">Index of the target page</param>
            <returns>Whether or not the move was successfully initiated.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PassesFilter(System.Object)">
            <summary>
            Return true if the item belongs to this view.  The item is assumed to belong to the
            underlying DataCollection;  this method merely takes filters into account.
            It is commonly used during collection-changed notifications to determine if the added/removed
            item requires processing.
            Returns true if no filter is set on collection view.
            </summary>
            <param name="item">The item to compare against the Filter</param>
            <returns>Whether the item passes the filter</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Refresh">
            <summary>
            Re-create the view, using any SortDescriptions and/or Filters.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Remove(System.Object)">
            <summary>
            Remove the given item from the underlying collection. It
            needs to be in the current filtered, sorted, and paged view
            to call this.
            </summary>
            <param name="item">Item we want to remove</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RemoveAt(System.Int32)">
            <summary>
            Remove the item at the given index from the underlying collection.
            The index is interpreted with respect to the view (filtered, sorted,
            and paged list).
            </summary>
            <param name="index">Index of the item we want to remove</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InvokePath(System.Object,System.String,System.Type)">
            <summary>
            Helper for SortList to handle nested properties (e.g. Address.Street)
            </summary>
            <param name="item">parent object</param>
            <param name="propertyPath">property names path</param>
            <param name="propertyType">property type that we want to check for</param>
            <returns>child object</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForAdd(System.Object,System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            </summary>
            <param name="newCurrentItem">Item that we want to set currency to</param>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForEdit(System.Object,System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            </summary>
            <param name="newCurrentItem">Item that we want to set currency to</param>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForRemove(System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            The index can be -1 if the item was removed from a previous page
            </summary>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CheckFlag(System.Windows.Data.PagedCollectionView.CollectionViewFlags)">
            <summary>
            Returns true if specified flag in flags is set.
            </summary>
            <param name="flags">Flag we are checking for</param>
            <returns>Whether the specified flag is set</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CompletePageMove(System.Int32)">
            <summary>
            Called to complete the page move operation to set the
            current page index.
            </summary>
            <param name="pageIndex">Final page index</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ConvertToInternalIndex(System.Int32)">
            <summary>
            Convert a value for the index passed in to the index it would be
            relative to the InternalIndex property.
            </summary>
            <param name="index">Index to convert</param>
            <returns>Value for the InternalIndex</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CopySourceToInternalList">
            <summary>
            Copy all items from the source collection to the internal list for processing.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EndAddNew(System.Boolean)">
            <summary>
            Common functionality used by CommitNew, CancelNew, and when the
            new item is removed by Remove or Refresh.
            </summary>
            <param name="cancel">Whether we canceled the add</param>
            <returns>The new item we ended adding</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EndDefer">
            <summary>
            Subtracts from the deferLevel counter and calls Refresh() if there are no other defers
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EnsureItemConstructor">
            <summary>
            Makes sure that the ItemConstructor is set for the correct type
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EnsureCollectionInSync">
            <summary>
             If the IEnumerable has changed, bring the collection up to date.
             (This isn't necessary if the IEnumerable is also INotifyCollectionChanged
             because we keep the collection in sync incrementally.)
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetItemType(System.Boolean)">
            <summary>
            Helper function used to determine the type of an item
            </summary>
            <param name="useRepresentativeItem">Whether we should use a representative item</param>
            <returns>The type of the items in the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetRepresentativeItem">
            <summary>
            Gets a representative item from the collection
            </summary>
            <returns>An item that can represent the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InternalIndexOf(System.Object)">
            <summary>
            Return index of item in the internal list.
            </summary>
            <param name="item">The item we are checking</param>
            <returns>Integer value on where in the InternalList the object is located</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InternalItemAt(System.Int32)">
            <summary>
            Return item at the given index in the internal list.
            </summary>
            <param name="index">The index we are checking</param>
            <returns>The item at the specified index</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OkToChangeCurrent">
            <summary>
            Ask listeners (via ICollectionView.CurrentChanging event) if it's OK to change currency
            </summary>
            <returns>False if a listener cancels the change, True otherwise</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Notify listeners that this View has changed
            </summary>
            <remarks>
                CollectionViews (and sub-classes) should take their filter/sort/grouping/paging
                into account before calling this method to forward CollectionChanged events.
            </remarks>
            <param name="args">
                The NotifyCollectionChangedEventArgs to be passed to the EventHandler
            </param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanged">
            <summary>
            Raises the CurrentChanged event
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanging">
            <summary>
            Raise a CurrentChanging event that is not cancelable.
            This is called by CollectionChanges (Add, Remove, and Refresh) that 
            affect the CurrentItem.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
            <summary>
            Raises the CurrentChanging event
            </summary>
            <param name="args">
                CancelEventArgs used by the consumer of the event.  args.Cancel will
                be true after this call if the CurrentItem should not be changed for
                any reason.
            </param>
            <exception cref="T:System.InvalidOperationException">
                This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnGroupByChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            GroupBy changed handler
            </summary>
            <param name="sender">CollectionViewGroup whose GroupBy has changed</param>
            <param name="e">Arguments for the NotifyCollectionChanged event</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnGroupDescriptionChanged(System.Object,System.EventArgs)">
            <summary>
            GroupDescription changed handler
            </summary>
            <param name="sender">CollectionViewGroup whose GroupDescription has changed</param>
            <param name="e">Arguments for the GroupDescriptionChanged event</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event.
            </summary>
            <param name="e">PropertyChangedEventArgs for this change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnPropertyChanged(System.String)">
            <summary>
            Helper to raise a PropertyChanged event.
            </summary>
            <param name="propertyName">Property name for the property that changed</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroupingComparer(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Sets up the ActiveComparer for the CollectionViewGroupRoot specified
            </summary>
            <param name="groupRoot">The CollectionViewGroupRoot</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroups">
            <summary>
            Use the GroupDescriptions to place items into their respective groups.
            This assumes that there is no paging, so we just group the entire collection
            of items that the CollectionView holds.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareTemporaryGroups">
            <summary>
            Use the GroupDescriptions to place items into their respective groups.
            Because of the fact that we have paging, it is possible that we are only
            going to need a subset of the items to be displayed. However, before we 
            actually group the entire collection, we can't display the items in the
            correct order. We therefore want to just create a temporary group with
            the entire collection, and then using this data we can create the group
            that is exposed with just the items we need.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroupsForCurrentPage">
            <summary>
            Update our Groups private accessor to point to the subset of data
            covered by the current page, or to display the entire group if paging is not
            being used.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareLocalArray(System.Collections.IEnumerable)">
            <summary>
            Create, filter and sort the local index array.
            called from Refresh(), override in derived classes as needed.
            </summary>
            <param name="enumerable">new IEnumerable to associate this view with</param>
            <returns>new local array to use for this view</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessAddEvent(System.Object,System.Int32)">
            <summary>
            Process an Add operation from an INotifyCollectionChanged event handler.
            </summary>
            <param name="addedItem">Item added to the source collection</param>
            <param name="addIndex">Index item was added into</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Process CollectionChanged event on source collection 
            that implements INotifyCollectionChanged.
            </summary>
            <param name="args">
            The NotifyCollectionChangedEventArgs to be processed.
            </param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessRemoveEvent(System.Object,System.Boolean)">
            <summary>
            Process a Remove operation from an INotifyCollectionChanged event handler.
            </summary>
            <param name="removedItem">Item removed from the source collection</param>
            <param name="isReplace">Whether this was part of a Replace operation</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessInsertToCollection(System.Object,System.Int32)">
            <summary>
            Handles adding an item into the collection, and applying sorting, filtering, grouping, paging.
            </summary>
            <param name="item">Item to insert in the collection</param>
            <param name="index">Index to insert item into</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaiseCurrencyChanges(System.Boolean,System.Object,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Raises Currency Change events
            </summary>
            <param name="fireChangedEvent">Whether to fire the CurrentChanged event even if the parameters have not changed</param>
            <param name="oldCurrentItem">CurrentItem before processing changes</param>
            <param name="oldCurrentPosition">CurrentPosition before processing changes</param>
            <param name="oldIsCurrentBeforeFirst">IsCurrentBeforeFirst before processing changes</param>
            <param name="oldIsCurrentAfterLast">IsCurrentAfterLast before processing changes</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaisePageChanged">
            <summary>
            Raises the PageChanged event
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaisePageChanging(System.Int32)">
            <summary>
            Raises the PageChanging event
            </summary>
            <param name="newPageIndex">Index of the requested page</param>
            <returns>True if the event is cancelled (e.Cancel was set to True), False otherwise</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshInternal">
            <summary>
            Will call RefreshOverride and clear the NeedsRefresh flag
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshOrDefer">
            <summary>
            Refresh, or mark that refresh is needed when defer cycle completes.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshOverride">
            <summary>
            Re-create the view, using any SortDescriptions. 
            Also updates currency information.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ResetCurrencyValues(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Set currency back to the previous value it had if possible. If the item is no longer in view
            then either use the first item in the view, or if the list is empty, use null.
            </summary>
            <param name="oldCurrentItem">CurrentItem before processing changes</param>
            <param name="oldIsCurrentBeforeFirst">IsCurrentBeforeFirst before processing changes</param>
            <param name="oldIsCurrentAfterLast">IsCurrentAfterLast before processing changes</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrent(System.Object,System.Int32)">
            <summary>
            Set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should use this method to update
            the Current values.
            </remarks>
            <param name="newItem">New CurrentItem</param>
            <param name="newPosition">New CurrentPosition</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
            <summary>
            Set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            This method can be called from a constructor - it does not call
            any virtuals.  The 'count' parameter is substitute for the real Count,
            used only when newItem is null.
            In that case, this method sets IsCurrentAfterLast to true if and only
            if newPosition >= count.  This distinguishes between a null belonging
            to the view and the dummy null when CurrentPosition is past the end.
            </remarks>
            <param name="newItem">New CurrentItem</param>
            <param name="newPosition">New CurrentPosition</param>
            <param name="count">Numbers of items in the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrentToPosition(System.Int32)">
            <summary>
            Just move it. No argument check, no events, just move current to position.
            </summary>
            <param name="position">Position to move the current item to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetFlag(System.Windows.Data.PagedCollectionView.CollectionViewFlags,System.Boolean)">
            <summary>
            Sets the specified Flag(s)
            </summary>
            <param name="flags">Flags we want to set</param>
            <param name="value">Value we want to set these flags to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetSortDescriptions(System.ComponentModel.SortDescriptionCollection)">
            <summary>
            Set new SortDescription collection; re-hook collection change notification handler
            </summary>
            <param name="descriptions">SortDescriptionCollection to set the property value to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            SortDescription was added/removed, refresh PagedCollectionView
            </summary>
            <param name="sender">Sender that triggered this handler</param>
            <param name="e">NotifyCollectionChangedEventArgs for this change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortList(System.Collections.Generic.List{System.Object})">
            <summary>
            Sort the List based on the SortDescriptions property.
            </summary>
            <param name="list">List of objects to sort</param>
            <returns>The sorted list</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.VerifyRefreshNotDeferred">
            <summary>
            Helper to validate that we are not in the middle of a DeferRefresh
            and throw if that is the case.
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CollectionChanged">
            <summary>
            Raise this event when the (filtered) view changes
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <summary>
            CollectionChanged event (per INotifyCollectionChanged).
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanged">
            <summary>
            Raised when the CurrentItem property changed
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanging">
            <summary>
            Raised when the CurrentItem property is changing
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PageChanged">
            <summary>
            Raised when a page index change completed
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PageChanging">
            <summary>
            Raised when a page index change is requested
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PropertyChanged">
            <summary>
            PropertyChanged event.
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per INotifyPropertyChanged)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanAddNew">
            <summary>
            Gets a value indicating whether the view supports AddNew.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanCancelEdit">
            <summary>
            Gets a value indicating whether the view supports the notion of "pending changes" 
            on the current edit item.  This may vary, depending on the view and the particular
            item.  For example, a view might return true if the current edit item
            implements IEditableObject, or if the view has special knowledge about 
            the item that it can use to support rollback of pending changes.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanChangePage">
            <summary>
            Gets a value indicating whether the PageIndex value is allowed to change or not.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanFilter">
            <summary>
            Gets a value indicating whether we support filtering with this ICollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanGroup">
            <summary>
            Gets a value indicating whether this view supports grouping.
            When this returns false, the rest of the interface is ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanRemove">
            <summary>
            Gets a value indicating whether the view supports Remove and RemoveAt.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanSort">
            <summary>
            Gets a value indicating whether we support sorting with this ICollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Count">
            <summary>
            Gets the number of records in the view after 
            filtering, sorting, and paging.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Culture">
            <summary>
            Gets or sets Culture to use during sorting.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentAddItem">
            <summary>
            Gets the new item when an AddNew transaction is in progress
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentEditItem">
            <summary>
            Gets the affected item when an EditItem transaction is in progress
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentItem">
            <summary> 
            Gets the "current item" for this view 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the CurrentItem within the 
            (optionally sorted and filtered) view.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Filter">
            <summary>
            Gets or sets the Filter, which is a callback set by the consumer of the ICollectionView
            and used by the implementation of the ICollectionView to determine if an
            item is suitable for inclusion in the view.
            </summary>        
            <exception cref="T:System.NotSupportedException">
            Simpler implementations do not support filtering and will throw a NotSupportedException.
            Use <seealso cref="P:System.Windows.Data.PagedCollectionView.CanFilter"/> property to test if filtering is supported before
            assigning a non-null value.
            </exception>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.GroupDescriptions">
            <summary>
            Gets the description of grouping, indexed by level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Groups">
            <summary>
            Gets the top-level groups, constructed according to the descriptions
            given in GroupDescriptions.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsAddingNew">
            <summary>
            Gets a value indicating whether an "AddNew" transaction is in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentAfterLast">
            <summary> 
            Gets a value indicating whether currency is beyond the end (End-Of-File). 
            </summary>
            <returns>Whether IsCurrentAfterLast</returns>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentBeforeFirst">
            <summary> 
            Gets a value indicating whether currency is before the beginning (Beginning-Of-File). 
            </summary>
            <returns>Whether IsCurrentBeforeFirst</returns>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsEditingItem">
            <summary>
            Gets a value indicating whether an EditItem transaction is in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsEmpty">
            <summary>
            Gets a value indicating whether the resulting (filtered) view is empty.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsPageChanging">
            <summary>
            Gets a value indicating whether a page index change is in process or not.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.ItemCount">
            <summary>
            Gets the minimum number of items known to be in the source collection
            that verify the current filter if any
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NeedsRefresh">
            <summary>
            Gets a value indicating whether this view needs to be refreshed.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets whether to include a placeholder for a new item, and if so,
            where to put it. Only the value NewItemPlaceholderPosition.None is supported.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageIndex">
            <summary>
            Gets the current page we are on. (zero based)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page. If the
            PageSize = 0, then we are not paging, and will display all items
            in the collection. Otherwise, we will have separate pages for 
            the items to display.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SortDescriptions">
            <summary>
            Gets the Sort criteria to sort items in collection.
            </summary>
            <remarks>
            <p>
            Clear a sort criteria by assigning SortDescription.Empty to this property.
            One or more sort criteria in form of <seealso cref="T:System.ComponentModel.SortDescription"/>
            can be used, each specifying a property and direction to sort by.
            </p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            Simpler implementations do not support sorting and will throw a NotSupportedException.
            Use <seealso cref="P:System.Windows.Data.PagedCollectionView.CanSort"/> property to test if sorting is supported before adding
            to SortDescriptions.
            </exception>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SourceCollection">
            <summary>
            Gets the source of the IEnumerable collection we are using for our view.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the view before paging is applied.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanConstructItem">
            <summary>
            Gets a value indicating whether we have a valid ItemConstructor of the correct type
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.InternalCount">
            <summary>
            Gets the private count without taking paging or
            placeholders into account
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.InternalList">
            <summary>
            Gets the InternalList
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentInSync">
            <summary>
            Gets a value indicating whether CurrentItem and CurrentPosition are
            up-to-date with the state and content of the collection.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentInView">
            <summary>
            Gets a value indicating whether the current item is in the view
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsGrouping">
            <summary>
            Gets a value indicating whether or not we have grouping 
            taking place in this collection.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsRefreshDeferred">
            <summary>
            Gets a value indicating whether there
            is still an outstanding DeferRefresh in
            use.  If at all possible, derived classes
            should not call Refresh if IsRefreshDeferred
            is true.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NeedToMoveToPreviousPage">
            <summary>
            Gets whether the current page is empty and we need
            to move to a previous page.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.OnLastLocalPage">
            <summary>
            Gets a value indicating whether we are on the last local page
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageCount">
            <summary>
            Gets the number of pages we currently have
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.RootGroup">
            <summary>
            Gets the root of the Group that we expose to the user
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SourceList">
            <summary>
            Gets the SourceCollection as an IList
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Timestamp">
            <summary>
            Gets Timestamp used by the NewItemAwareEnumerator to determine if a
            collection change has occurred since the enumerator began.  (If so,
            MoveNext should throw.)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.UsesLocalArray">
            <summary>
            Gets a value indicating whether a private copy of the data 
            is needed for sorting, filtering, and paging. We want any deriving 
            classes to also be able to access this value to see whether or not 
            to use the default source collection, or the internal list.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Item(System.Int32)">
            <summary>
            Return the item at the specified index
            </summary>
            <param name="index">Index of the item we want to retrieve</param>
            <returns>The item at the specified index</returns>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.RequestPageMoveDelegate">
            <summary>
            Delegate used to asynchronously trigger a page move.
            </summary>
            <param name="pageIndex">Requested page index</param>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.CollectionViewFlags">
            <summary>
            Enum for CollectionViewFlags
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsDataInGroupOrder">
            <summary>
            Whether the list of items (after applying the sort and filters, if any) 
            is already in the correct order for grouping. 
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsDataSorted">
            <summary>
            Whether the source collection is already sorted according to the SortDescriptions collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.ShouldProcessCollectionChanged">
            <summary>
            Whether we should process the collection changed event
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsCurrentBeforeFirst">
            <summary>
            Whether the current item is before the first
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsCurrentAfterLast">
            <summary>
            Whether the current item is after the last
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.NeedsRefresh">
            <summary>
            Whether we need to refresh
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.CachedIsEmpty">
            <summary>
            Whether we cache the IsEmpty value
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsPageChanging">
            <summary>
            Indicates whether a page index change is in process or not
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsMoveToPageDeferred">
            <summary>
            Whether we need to move to another page after EndDefer
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsUpdatePageSizeDeferred">
            <summary>
            Whether we need to update the PageSize after EndDefer
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.DeferHelper">
            <summary>
            Used to keep track of Defer calls on the PagedCollectionView, which
            will prevent the user from calling Refresh() on the view. In order
            to allow refreshes again, the user will have to call IDisposable.Dispose,
            to end the Defer operation.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.DeferHelper.collectionView">
            <summary>
            Private reference to the CollectionView that created this DeferHelper
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferHelper.#ctor(System.Windows.Data.PagedCollectionView)">
            <summary>
            Initializes a new instance of the DeferHelper class
            </summary>
            <param name="collectionView">CollectionView that created this DeferHelper</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferHelper.Dispose">
            <summary>
            Cleanup method called when done using this class
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.SimpleMonitor">
            <summary>
            A simple monitor class to help prevent re-entrant calls
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.SimpleMonitor.entered">
            <summary>
            Whether the monitor is entered
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SimpleMonitor.Enter">
            <summary>
            Sets a value indicating that we have been entered
            </summary>
            <returns>Boolean value indicating whether we were already entered</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SimpleMonitor.Dispose">
            <summary>
            Cleanup method called when done using this class
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SimpleMonitor.Busy">
            <summary>
            Gets a value indicating whether we have been entered or not
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator">
            <summary>
            IEnumerator generated using the new item taken into account
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.#ctor(System.Windows.Data.PagedCollectionView,System.Collections.IEnumerator,System.Object)">
            <summary>
            Initializes a new instance of the NewItemAwareEnumerator class.
            </summary>
            <param name="collectionView">The PagedCollectionView we are creating the enumerator for</param>
            <param name="baseEnumerator">The baseEnumerator that we pass in</param>
            <param name="newItem">The new item we are adding to the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.MoveNext">
            <summary>
            Implements the MoveNext function for IEnumerable
            </summary>
            <returns>Whether we can move to the next item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Reset">
            <summary>
            Implements the Reset function for IEnumerable
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._collectionView">
            <summary>
            CollectionView that we are creating the enumerator for
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._baseEnumerator">
            <summary>
            The Base Enumerator that we are passing in
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._position">
            <summary>
            The position we are appending items to the enumerator
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._newItem">
            <summary>
            Reference to any new item that we want to add to the collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._timestamp">
            <summary>
            Timestamp to let us know whether there have been updates to the collection
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Current">
            <summary>
            Gets the Current value for IEnumerable
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.BeforeNewItem">
            <summary>
            Whether the position is before the new item
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.OnNewItem">
            <summary>
            Whether the position is on the new item that is being created
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.AfterNewItem">
            <summary>
            Whether the position is after the new item
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.SortFieldComparer">
            <summary>
            IComparer class to sort by class property value (using reflection).
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.#ctor(System.ComponentModel.SortDescriptionCollection)">
            <summary>
            Create a comparer, using the SortDescription and a Type;
            tries to find a reflection PropertyInfo for each property name
            </summary>
            <param name="sortFields">list of property names and direction to sort by</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to or greater than the other.
            </summary>
            <param name="x">first item to compare</param>
            <param name="y">second item to compare</param>
            <returns>Negative number if x is less than y, zero if equal, and a positive number if x is greater than y</returns>
            <remarks>
            Compares the 2 items using the list of property names and directions.
            </remarks>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.FindInsertIndex(System.Object,System.Collections.IList)">
            <summary>
            Steps through the given list using the comparer to find where
            to insert the specified item to maintain sorted order
            </summary>
            <param name="x">Item to insert into the list</param>
            <param name="list">List where we want to insert the item</param>
            <returns>Index where we should insert into</returns>
        </member>
        <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
            <summary>
            Represents a method that is used to provide custom logic to select 
            the GroupDescription based on the parent group and its level. 
            </summary>
            <param name="group">The parent group.</param>
            <param name="level">The level of group.</param>
            <returns>The GroupDescription chosen based on the parent group and its level.</returns>
        </member>
        <member name="T:System.ComponentModel.PagedCollectionViewResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.CancelEditNotSupported">
            <summary>
              Looks up a localized string similar to CancelEdit is not supported for the current edit item..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.CannotFilter">
            <summary>
              Looks up a localized string similar to The Filter property cannot be set when the CanFilter property returns false..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.ChangingPageSizeNotAllowedDuringAddOrEdit">
            <summary>
              Looks up a localized string similar to Changing the PageSize is not allowed during an AddNew or EditItem transaction..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.EnumeratorVersionChanged">
            <summary>
              Looks up a localized string similar to Collection was modified; enumeration operation cannot execute..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.IndexOutOfRange">
            <summary>
              Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.InvalidPageSize">
            <summary>
              Looks up a localized string similar to PageSize cannot have a negative value..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.NoCheckOrChangeWhenDeferred">
            <summary>
              Looks up a localized string similar to Cannot change or check the contents or current position of the PagedCollectionView while Refresh is being deferred..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedDuringAddOrEdit">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed during an AddNew or EditItem transaction..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedDuringTransaction">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed during a transaction started by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedForView">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed for this view..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.PropertyNotReadable">
            <summary>
              Looks up a localized string similar to The property named &apos;{0}&apos; on type &apos;{1}&apos; cannot be read..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.RemoveNotSupported">
            <summary>
              Looks up a localized string similar to Remove/RemoveAt is not supported..
            </summary>
        </member>
        <member name="T:System.Windows.Data.PropertyGroupDescription">
            <summary>
            Describes the grouping of items using a property name as the criteria. 
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._cachedType">
            <summary>
            Cached Type that we store when we are looking for a property value
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._converter">
            <summary>
            Private accessor for the Converter
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._propertyName">
            <summary>
            Private accessor for the PropertyName
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._stringComparison">
            <summary>
            Private accessor for the StringComparison
            </summary>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
            <param name="converter">Converter applied to the property value before determining the group name</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
            <param name="converter">Converter applied to the property value before determining the group name</param>
            <param name="stringComparison">The type of string comparison to use</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Returns the group name(s) for the given item
            </summary>
            <param name="item">The item to return group names for</param>
            <param name="level">The level of grouping</param>
            <param name="culture">The CultureInfo to supply to the converter</param>
            <returns>The group name(s) for the given item</returns>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
            <summary>
            Returns a value that indicates whether the group name and 
            the item name match so that the item belongs to the group.
            </summary>
            <param name="groupName">The name of the group to check</param>
            <param name="itemName">The name of the item to check</param>
            <returns>true if the names match and the item belongs to the group; otherwise, false</returns>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
            <summary>
            Gets or sets a converter to apply to the property value or the item to 
            produce the final value that is used to determine which group(s) an 
            item belongs to. 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
            <summary>
            Gets or sets the name of the property that is used to determine which 
            group(s) an item belongs to. 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
            <summary>
            Gets or sets a StringComparison value that specifies the comparison 
            between the value of an item (as determined by PropertyName and Converter) 
            and the name of a group. 
            </summary>
        </member>
        <member name="T:System.Windows.Common.TypeHelper">
            <summary>
            Utility class for Type related operations
            </summary>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetNestedPropertyType(System.Type,System.String)">
            <summary>
            Extension method that returns the type of a property. That property can be nested.
            Each element of the path needs to be a public instance property.
            </summary>
            <param name="parentType">Type that exposes that property</param>
            <param name="propertyPath">Property path</param>
            <returns>Property type</returns>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetNestedPropertyValue(System.Object,System.String,System.Type,System.Exception@)">
            <summary>
            Retrieves the value of a property. That property can be nested.
            Each element of the path needs to be a public instance property.
            </summary>
            <param name="item">Object that exposes the property</param>
            <param name="propertyPath">Property path</param>
            <param name="propertyType">Property type</param>
            <param name="exception">Potential exception</param>
            <returns>Property value</returns>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetTypeName(System.Type)">
            <summary>
            Returns the friendly name for a type
            </summary>
            <param name="type">The type to get the name from</param>
            <returns>Textual representation of the input type</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Calendar">
            <summary>
            Represents a control that enables a user to select a date by using a
            visual calendar display.
            </summary>
            <remarks>
            <para>
            A Calendar control can be used on its own, or as a drop-down part of a
            DatePicker control. For more information, see DatePicker.  A Calendar
            displays either the days of a month, the months of a year, or the years
            of a decade, depending on the value of the DisplayMode property.  When
            displaying the days of a month, the user can select a date, a range of
            dates, or multiple ranges of dates.  The kinds of selections that are
            allowed are controlled by the SelectionMode property.
            </para>
            <para>
            The range of dates displayed is governed by the DisplayDateStart and
            DisplayDateEnd properties.  If DisplayMode is Year or Decade, only
            months or years that contain displayable dates will be displayed.
            Setting the displayable range to a range that does not include the
            current DisplayDate will throw an ArgumentOutOfRangeException.
            </para>
            <para>
            The BlackoutDates property can be used to specify dates that cannot be
            selected. These dates will be displayed as dimmed and disabled.
            </para>
            <para>
            By default, Today is highlighted.  This can be disabled by setting
            IsTodayHighlighted to false.
            </para>
            <para>
            The Calendar control provides basic navigation using either the mouse or
            keyboard. The following table summarizes keyboard navigation.
            
                Key Combination     DisplayMode     Action
                ARROW               Any             Change focused date, unselect
                                                    all selected dates, and select
                                                    new focused date.
                                                    
                SHIFT+ARROW         Any             If SelectionMode is not set to
                                                    SingleDate or None begin
                                                    selecting a range of dates.
                                                    
                CTRL+UP ARROW       Any             Switch to the next larger
                                                    DisplayMode.  If DisplayMode is
                                                    already Decade, no action.
                                                    
                CTRL+DOWN ARROW     Any             Switch to the next smaller
                                                    DisplayMode.  If DisplayMode is
                                                    already Month, no action.
                                                    
                SPACEBAR            Month           Select focused date.
                
                SPACEBAR            Year or Decade  Switch DisplayMode to the Month
                                                    or Year represented by focused
                                                    item.
            </para>
            <para>
            XAML Usage for Classes Derived from Calendar
            If you define a class that derives from Calendar, the class can be used
            as an object element in XAML, and all of the inherited properties and
            events that show a XAML usage in the reference for the Calendar members
            can have the same XAML usage for the derived class. However, the object
            element itself must have a different prefix mapping than the controls:
            mapping shown in the usages, because the derived class comes from an
            assembly and namespace that you create and define.  You must define your
            own prefix mapping to an XML namespace to use the class as an object
            element in XAML.
            </para>
            </remarks>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Calendar.RowsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.ColumnsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.RowsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.ColumnsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.ElementRoot">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.ElementMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnCalendarButtonStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.EnsureCalendarButtonStyle(System.Windows.Controls.Primitives.CalendarButton,System.Windows.Style,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
            <param name="oldCalendarButtonStyle">Inherited code: Requires comment 2.</param>
            <param name="newCalendarButtonStyle">Inherited code: Requires comment 3.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
            dependency property.
            </summary>
            <remarks>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
            dependency property.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnCalendarDayButtonStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.EnsureDayButtonStyle(System.Windows.Controls.Primitives.CalendarDayButton,System.Windows.Style,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="dayButton">Inherited code: Requires comment 1.</param>
            <param name="oldDayButtonStyle">Inherited code: Requires comment 2.</param>
            <param name="newDayButtonStyle">Inherited code: Requires comment 3.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnCalendarItemStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.EnsureMonthStyle(System.Windows.Controls.Primitives.CalendarItem,System.Windows.Style,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="month">Inherited code: Requires comment 1 .</param>
            <param name="oldMonthStyle">Inherited code: Requires comment 2 .</param>
            <param name="newMonthStyle">Inherited code: Requires comment 3.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">
            Calendar that changed its IsTodayHighlighted.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.DisplayMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.DisplayMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayModeProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsValidDisplayMode(System.Windows.Controls.CalendarMode)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="mode">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="args">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its FirstDayOfWeek.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsValidFirstDayOfWeek(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.SelectionMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.SelectionMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsValidSelectionMode(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.SelectedDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.SelectedDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its SelectedDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnSelectedDatesCollectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar._selectedMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar._selectedYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayDate(System.Windows.Controls.CalendarDateChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDateStart.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.SelectedDateMin(System.Windows.Controls.Calendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDateEnd.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.SelectedDateMax(System.Windows.Controls.Calendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.Calendar._isShiftPressed">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Calendar" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Calendar" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ResetStates">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>
            A text representation of the selected date, or an empty string if
            <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> is
            null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.Calendar" /> object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarAutomationPeer instance if one has
            not been created for the control instance; otherwise, it returns the
            CalendarAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
             Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.FindDayButtonFromDay(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="day">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.UpdateMonths">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnSelectedMonthChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnSelectedYearChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedYear">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsValidDateSelection(System.Windows.Controls.Calendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.IsValidKeyboardSelection(System.Windows.Controls.Calendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.AddSelection">
            <summary>
            This method adds the days that were selected by Keyboard to the
            SelectedDays Collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessSelection(System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
            <param name="lastSelectedDate">Inherited code: Requires comment 2.</param>
            <param name="index">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.HighlightDays">
            <summary>
            This method highlights the days in MultiSelection mode without
            adding them to the SelectedDates collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.UnHighlightDays">
            <summary>
            This method un-highlights the days that were hovered over but not
            added to the SelectedDates collection or un-highlighted the
            previously selected days in SingleRange Mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.SortHoverIndexes(System.Int32@,System.Int32@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="endIndex">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnHeaderClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnNextClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnPreviousClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDayClick(System.DateTime)">
            <summary>
            If the day is a trailing day, Update the DisplayDate.
            </summary>
            <param name="selectedDate">Inherited code: Requires comment.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnMonthClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.OnDayButtonMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessCalendarKey(System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessUpKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessDownKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessLeftKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessRightKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessEnterKey">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessHomeKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessEndKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessPageDownKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessPageUpKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.ProcessShiftKeyUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Calendar.Calendar_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment1 .</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.Calendar.Root">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.MonthControl">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.FocusButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.FocusCalendarButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.CalendarItem" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarItem" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date is
            highlighted.
            </summary>
            <value>
            True if the current date is highlighted; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayMode">
            <summary>
            Gets or sets a value indicating whether the calendar is displayed in
            months, years, or decades.
            </summary>
            <value>
            A value indicating what length of time the
            <see cref="T:System.Windows.Controls.Calendar" /> should display.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek" /> representing the beginning of
            the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Calendar.SelectionMode">
            <summary>
            Gets or sets a value that indicates what kind of selections are
            allowed.
            </summary>
            <value>
            A value that indicates the current selection mode. The default is
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.
            </value>
            <remarks>
            <para>
            This property determines whether the Calendar allows no selection,
            selection of a single date, or selection of multiple dates.  The
            selection mode is specified with the CalendarSelectionMode
            enumeration.
            </para>
            <para>
            When this property is changed, all selected dates will be cleared.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            <value>The date currently selected. The default is null.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is outside the range specified by
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
            and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
            -or-
            The given date is in the
            <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" />
            collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If set to anything other than null when
            <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> is
            set to
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.
            </exception>
            <remarks>
            Use this property when SelectionMode is set to SingleDate.  In other
            modes, this property will always be the first date in SelectedDates.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.SelectedDates">
            <summary>
            Gets a collection of selected dates.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.SelectedDatesCollection" />
            object that contains the currently selected dates. The default is an
            empty collection.
            </value>
            <remarks>
            Dates can be added to the collection either individually or in a
            range using the AddRange method.  Depending on the value of the
            SelectionMode property, adding a date or range to the collection may
            cause it to be cleared.  The following table lists how
            CalendarSelectionMode affects the SelectedDates property.
            
                CalendarSelectionMode   Description
                None                    No selections are allowed.  SelectedDate
                                        cannot be set and no values can be added
                                        to SelectedDates.
                                        
                SingleDate              Only a single date can be selected,
                                        either by setting SelectedDate or the
                                        first value in SelectedDates.  AddRange
                                        cannot be used.
                                        
                SingleRange             A single range of dates can be selected.
                                        Setting SelectedDate, adding a date
                                        individually to SelectedDates, or using
                                        AddRange will clear all previous values
                                        from SelectedDates.
                MultipleRange           Multiple non-contiguous ranges of dates
                                        can be selected. Adding a date
                                        individually to SelectedDates or using
                                        AddRange will not clear SelectedDates.
                                        Setting SelectedDate will still clear
                                        SelectedDates, but additional dates or
                                        range can then be added.  Adding a range
                                        that includes some dates that are
                                        already selected or overlaps with
                                        another range results in the union of
                                        the ranges and does not cause an
                                        exception.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.RemovedItems">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.LastSelectedDateInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.LastSelectedDate">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.SelectedMonth">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.SelectedYear">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
            <summary>
            Gets a collection of dates that are marked as not selectable.
            </summary>
            <value>
            A collection of dates that cannot be selected. The default value is
            an empty collection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Adding a date to this collection when it is already selected or
            adding a date outside the range specified by DisplayDateStart and
            DisplayDateEnd.
            </exception>
            <remarks>
            <para>
            Dates in this collection will appear as disabled on the calendar.
            </para>
            <para>
            To make all past dates not selectable, you can use the
            AddDatesInPast method provided by the collection returned by this
            property.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            <value>The date to display.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is not in the range specified by
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />.
            </exception>
            <remarks>
            <para>
            This property allows the developer to specify a date to display.  If
            this property is a null reference (Nothing in Visual Basic),
            SelectedDate is displayed.  If SelectedDate is also a null reference
            (Nothing in Visual Basic), Today is displayed.  The default is
            Today.
            </para>
            <para>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDateInternal">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            <value>The first date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDateRangeStart">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            <value>The last date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DisplayDateRangeEnd">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HoverStart">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HoverStartIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HoverEndInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HoverEnd">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HoverEndIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.HasFocusInternal">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.IsMouseSelection">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Calendar.DatePickerDisplayDateFlag">
            <summary>
            Gets or sets a value indicating whether DatePicker should change its 
            DisplayDate because of a SelectedDate change on its Calendar.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
            <summary>
            Occurs when the collection returned by the
            <see cref="P:System.Windows.Controls.Calendar.SelectedDates" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.Calendar.DisplayDate" />
            property is changed.
            </summary>
            <remarks>
            This event occurs after DisplayDate is assigned its new value.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.Calendar.DisplayMode" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Calendar.DayButtonMouseUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.Calendar" /> types to UI automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.Calendar" /> instance to
            associate with the
            <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the Calendar that is associated with
            this CalendarAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the UIElement that is associated with this
            FrameworkElementAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            CalendarAutomationPeer. 
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the Calendar that is associated with this
            CalendarAutomationPeer.  This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
            <summary>
            Retrieves the UI automation provider for the specified cell.
            </summary>
            <param name="row">
            The ordinal number of the row.
            </param>
            <param name="column">
            The ordinal number of the column.
            </param>
            <returns>
            The UI automation provider for the specified cell.
            </returns>
            <remarks>
            <para>
            Grid coordinates are zero-based. The upper-left cell (or upper-right
            cell, depending on locale) has coordinates (0,0).
            </para>
            <para>
            If a cell is empty, a UI Automation provider must still be returned
            in order to support the ContainingGrid property for that cell.  This
            is possible when the layout of child elements in the grid is similar
            to a ragged array.
            </para>
            <para>
            Hidden rows and columns can be loaded in the tree, depending on the
            provider implementation.  Therefore, they will be reflected in the
            RowCount and ColumnCount properties.  If the hidden rows and columns
            have not yet been loaded, they should not be counted.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
            <summary>
            Retrieves a collection of control-specific view identifiers.
            </summary>
            <returns>
            A collection of values that identifies the views that are available
            for a UI automation element.
            </returns>
            <remarks>
            The collection of view identifiers must be identical across
            instances.  View identifier values can be passed to GetViewName.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
            <summary>
            Retrieves the name of a control-specific view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <returns>A localized name for the view.</returns>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.  The
            collection of view identifiers must be identical across instances.
            View names must be suitable for use in text-to-speech, Braille, and
            other accessible applications.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
            <summary>
            Sets the current control-specific view.
            </summary>
            <param name="viewId">A view identifier.</param>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>
            A collection of UI automation providers.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.RaiseSelectionEvents(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raise selection AutomationEvents when the Calendar's SelectedDates
            collection changes.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.RaiseDayButtonSelectionEvent(System.Windows.Controls.Calendar,System.DateTime,System.Windows.Automation.Peers.AutomationEvents)">
            <summary>
            Raise an automation peer event for the selection of a day button.
            </summary>
            <param name="calendar">
            The Calendar associated with this automation peer.
            </param>
            <param name="date">The selected date.</param>
            <param name="eventToRaise">The selection event to raise.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
            <summary>
            Gets a collection of UI automation providers that represents all the
            column headers in a table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
            <summary>
            Retrieves a collection of UI automation providers that represents
            all row headers in the table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.OwningCalendar">
            <summary>
            Gets the Calendar associated with the CalendarAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.OwningGrid">
            <summary>
            Gets the current top-level Grid of with the Calendar.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
            <summary>
            Gets the total number of columns in a grid.
            </summary>
            <value>
            The total number of columns in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
            <summary>
            Gets the total number of rows in a grid.
            </summary>
            <value>
            The total number of rows in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
            <summary>
            Gets the current control-specific view.
            </summary>
            <value>
            The value for the current view of the UI automation element.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows
            more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
            <summary>
            Gets the primary direction of traversal for the table.
            </summary>
            <value>
            The primary direction of traversal.
            </value>
        </member>
        <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
            <summary>
            Represents a collection of non-selectable dates in a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarBlackoutDatesCollection._owner">
            <summary>
            The Calendar whose dates this object represents.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarBlackoutDatesCollection._dispatcherThread">
            <summary>
            The dispatcher thread.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.Calendar" /> whose dates
            this object represents.
            </param>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
            <summary>
            Adds all dates before <see cref="P:System.DateTime.Today" /> to the
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified date.
            </summary>
            <param name="date">The date to search for.</param>
            <returns>
            True if the collection contains the specified date; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified range of dates.
            </summary>
            <param name="start">The start of the date range.</param>
            <param name="end">The end of the date range.</param>
            <returns>
            True if all dates in the range are contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns a value that represents whether this collection contains any
            date in the specified range.
            </summary>
            <param name="range">The range of dates to search for.</param>
            <returns>
            True if any date in the range is contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.InsertItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.SetItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.IsValid(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="item">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.EnsureValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.CalendarButton">
            <summary>
            Represents a button on a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarButton._isCalendarButtonFocused">
            <summary>
            A value indicating whether the button is focused.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The CalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnCreateAutomationPeer">
            <summary>
            Returns a CalendarButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            CalendarButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarButtonAutomationPeer instance if
            one has not been created for the CalendarButton; otherwise, it
            returns the CalendarButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            CalendarButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarButton.Owner">
            <summary>
            Gets or sets the Calendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsCalendarButtonFocused">
            <summary>
            Gets or sets a value indicating whether the button is focused.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> types
            to UI automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the CalendarButton that is associated
            with this CalendarButtonAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this CalendarButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            CalendarButton that is associated with this
            CalendarButtonAutomationPeer.  This method is called by GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the CalendarButton that is associated with this
            CalendarButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            CalendarButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the CalendarButton that is associated with
            this CalendarButtonAutomationPeer. This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.OwningCalendarButton">
            <summary>
            Gets the CalendarButton to associate with this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the Calendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the Calendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>
            The number of rows that are spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>
            True if the element is selected; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>
            The provider that supports
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
            event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarDateChangedEventArgs.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CalendarDateChangedEventArgs
            class.
            </summary>
            <param name="removedDate">
            The date that was previously displayed.
            </param>
            <param name="addedDate">The date to be newly displayed.</param>
        </member>
        <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
            <summary>
            Gets the date that was previously displayed.
            </summary>
            <value>
            The date previously displayed.
            </value>
        </member>
        <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
            <summary>
            Gets the date to be newly displayed.
            </summary>
            <value>The new date to display.</value>
        </member>
        <member name="T:System.Windows.Controls.CalendarDateRange">
            <summary>
            Represents a range of dates in a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.CalendarDateRange" /> class
            with a single date.
            </summary>
            <param name="day">The date to be represented by the range.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.CalendarDateRange" /> class
            with a range of dates.
            </summary>
            <param name="start">
            The start of the range to be represented.
            </param>
            <param name="end">The end of the range to be represented.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarDateRange.ContainsAny(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns true if any day in the given DateTime range is contained in
            the current CalendarDateRange.
            </summary>
            <param name="range">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="P:System.Windows.Controls.CalendarDateRange.Start">
            <summary>
            Gets the first date in the represented range.
            </summary>
            <value>The first date in the represented range.</value>
        </member>
        <member name="P:System.Windows.Controls.CalendarDateRange.End">
            <summary>
            Gets the last date in the represented range.
            </summary>
            <value>The last date in the represented range.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
            <summary>
            Represents a day on a <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.StateBlackoutDay">
            <summary>
            Identifies the BlackoutDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.StateNormalDay">
            <summary>
            Identifies the NormalDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.GroupBlackout">
            <summary>
            Name of the BlackoutDay state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.DefaultContent">
            <summary>
            Default content for the CalendarDayButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._ignoringMouseOverState">
            <summary>
            A value indicating whether the button should ignore the MouseOver
            visual state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._isBlackout">
            <summary>
            A value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._isToday">
            <summary>
            A value indicating whether this button represents today.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._isCurrent">
            <summary>
            A value indicating whether the button is the focused element on the
            Calendar control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarDayButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The CalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnCreateAutomationPeer">
            <summary>
            Returns a CalendarDayButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            CalendarDayButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarDayButtonAutomationPeer instance
            if one has not been created for the CalendarButton; otherwise, it
            returns the CalendarDayButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            CalendarDayButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.IgnoreMouseOverState">
            <summary>
            Ensure the button is not in the MouseOver state.
            </summary>
            <remarks>
            If a button is in the MouseOver state when a Popup is closed (as is
            the case when you select a date in the DatePicker control), it will
            continue to think it's in the mouse over state even when the Popup
            opens again and it's not.  This method is used to forcibly clear the
            state by changing the CommonStates state group.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.Owner">
            <summary>
            Gets or sets the Calendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackout">
            <summary>
            Gets or sets a value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
            <summary>
            Gets or sets a value indicating whether this button represents
            today.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the button is the focused
            element on the Calendar control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            types to UI Automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarDayButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />
            instance that is associated with this
            <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern implementation for this
            <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the CalendarDayButton that is
            associated with this CalendarDayButtonAutomationPeer.  This method
            is called by GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this CalendarDayButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            CalendarDayButton that is associated with this
            CalendarDayButtonAutomationPeer.  This method is called by
            GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the CalendarDayButton that is associated with
            this CalendarDayButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            CalendarDayButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the CalendarDayButton that is associated
            with this CalendarDayButtonAutomationPeer. This method is called by
            GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and to initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clear any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.EnsureSelection">
            <summary>
            Ensure selection of the CalendarDayButton is possible.
            </summary>
            <returns>
            A value indicating whether selection of the CalendarDayButton is
            possible.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the column headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the row headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.OwningCalendarDayButton">
            <summary>
            Gets the CalendarDayButton instance that is associated with this
            CalendarDayButtonAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the Calendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the Calendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
            <value>
            The UI Automation provider.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>The number of rows.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if the element is selected; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>The UI Automation provider.</value>
        </member>
        <member name="T:System.Windows.Controls.CalendarExtensions">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarExtensions._suspendedHandlers">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.IsHandlerSuspended(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="property">Inherited code: Requires comment 2.</param>
            <param name="value">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SuspendHandler(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <param name="suspend">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@,System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 2.</param>
            <param name="shift">Inherited code: Requires comment 3.</param>
        </member>
        <member name="T:System.Windows.Controls.Primitives.CalendarItem">
            <summary>
            Represents the currently displayed month or year on a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.NumberOfDaysPerWeek">
            <summary>
            The number of days per week.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementRoot">
            <summary>
            The name of the Root template part.
            </summary>
            <remarks>
            TODO: It appears this template part is no longer used.  Verify with
            compat whether we can remove the attribute.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementHeaderButton">
            <summary>
            The name of the HeaderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementPreviousButton">
            <summary>
            The name of the PreviousButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementNextButton">
            <summary>
            The name of the NextButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementDayTitleTemplate">
            <summary>
            The name of the DayTitleTemplate template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementMonthView">
            <summary>
            The name of the MonthView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementYearView">
            <summary>
            The name of the YearView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem.ElementDisabledVisual">
            <summary>
            The name of the DisabledVisual template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._headerButton">
            <summary>
            The button that allows switching between month mode, year mode, and
            decade mode. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._nextButton">
            <summary>
            The button that displays the next page of the calendar when it is
            clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._previousButton">
            <summary>
            The button that displays the previous page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._dayTitleTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._monthView">
            <summary>
            Hosts the content when in month mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._yearView">
            <summary>
            Hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._disabledVisual">
            <summary>
            The overlay for the disabled state.
            </summary>
            <remarks>
            The disabled visual isn't necessary given that we also have a
            Disabled visual state.  It's only being left in for compatability
            with existing templates.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._lastCalendarButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._lastCalendarDayButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._downEventArg">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._downEventArgYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._isMouseLeftButtonDown">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._isMouseLeftButtonDownYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._isTopLeftMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._isTopRightMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._currentMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.CalendarItem._calendar">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.CalendarItem" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.CalendarItem" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.PopulateGrids">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.UpdateDisabledGrid(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isEnabled">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.UpdateMonthMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetDayTitles">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.PreviousMonthDays(System.DateTime)">
            <summary>
            How many days of the previous month need to be displayed.
            </summary>
            <param name="firstOfMonth">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetButtonState(System.Windows.Controls.Primitives.CalendarDayButton,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="childButton">Inherited code: Requires comment 1.</param>
            <param name="dateToAdd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetCalendarDayButtons(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetMonthButtonsForYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetMonthModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetMonthModeNextButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetMonthModePreviousButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.UpdateYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetYearButtons(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetYearModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetYearModePreviousButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetYearModeNextButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.UpdateYearViewSelection(System.Windows.Controls.Primitives.CalendarButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.UpdateDecadeMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetDecadeModeHeaderButton(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetDecadeModeNextButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decadeEnd">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.SetDecadeModePreviousButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Cell_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Cell_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Cell_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.AddSelection(System.Windows.Controls.Primitives.CalendarDayButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="b">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Cell_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Cell_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.HeaderButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.PreviousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.NextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Month_CalendarButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Month_CalendarButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Month_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.Month_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.MonthView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.CalendarItem.YearView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.HeaderButton">
            <summary>
            Gets the button that allows switching between month mode, year mode,
            and decade mode. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.NextButton">
            <summary>
            Gets the button that displays the next page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.PreviousButton">
            <summary>
            Gets the button that displays the previous page of the calendar when
            it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.MonthView">
            <summary>
            Gets the Grid that hosts the content when in month mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.YearView">
            <summary>
            Gets the Grid that hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.Owner">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.CalendarItem.CurrentButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CalendarMode">
            <summary>
            Specifies values for the different modes of operation of a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarMode.Month">
            <summary>
            The <see cref="T:System.Windows.Controls.Calendar" /> displays a
            month at a time.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarMode.Year">
            <summary>
            The <see cref="T:System.Windows.Controls.Calendar" /> displays a
            year at a time.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarMode.Decade">
            <summary>
            The <see cref="T:System.Windows.Controls.Calendar" /> displays a
            decade at a time.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" />
            event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" />
            class.
            </summary>
            <param name="oldMode">The previous mode.</param>
            <param name="newMode">The new mode.</param>
        </member>
        <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
            <summary>
            Gets the previous mode of the
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.CalendarMode" /> representing
            the previous mode.
            </value>
        </member>
        <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
            <summary>
            Gets the new mode of the
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.CalendarMode" /> 
            the new mode.
            </value>
        </member>
        <member name="T:System.Windows.Controls.CalendarSelectionMode">
            <summary>
            Specifies values that describe the available selection modes for a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <remarks>
            This enumeration provides the values that are used by the SelectionMode
            property.
            </remarks>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
            <summary>
            Only a single date can be selected. Use the
            <see cref="P:System.Windows.Controls.Calendar.SelectedDate" />
            property to retrieve the selected date.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
            <summary>
            A single range of dates can be selected. Use 
            <see cref="P:System.Windows.Controls.Calendar.SelectedDates" />
            property to retrieve the selected dates.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
            <summary>
            Multiple non-contiguous ranges of dates can be selected. Use the
            <see cref="P:System.Windows.Controls.Calendar.SelectedDates" />
            property to retrieve the selected dates.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
            <summary>
            No selections are allowed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DateTimeHelper">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.AddDays(System.DateTime,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="time">Inherited code: Requires comment 1.</param>
            <param name="days">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="time">Inherited code: Requires comment 1.</param>
            <param name="months">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.AddYears(System.DateTime,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="time">Inherited code: Requires comment 1.</param>
            <param name="years">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.CompareDays(System.DateTime,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="dt1">Inherited code: Requires comment 1.</param>
            <param name="dt2">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.CompareYearMonth(System.DateTime,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="dt1">Inherited code: Requires comment 1.</param>
            <param name="dt2">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.DecadeOfDate(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="date">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.DiscardDayTime(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.DiscardTime(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.EndOfDecade(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="date">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.GetCurrentDateFormat">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeHelper.InRange(System.DateTime,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns if the date is included in the range.
            </summary>
            <param name="date">Inherited code: Requires comment 1.</param>
            <param name="range">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="T:System.Windows.Controls.DateTimeTypeConverter">
            <summary>
            Provides a converter to convert <see cref="T:System.DateTime" /> objects
            to and from other representations.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DateTimeTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DateTimeTypeConverter" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a value indicating whether it is possible to convert the
            specified type to a <see cref="T:System.DateTime" /> with the
            specified format context.
            </summary>
            <param name="context">
            The format context that is used to convert the specified type.
            </param>
            <param name="sourceType">The type to convert.</param>
            <returns>
            True if the conversion is possible; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to a <see cref="T:System.DateTime"/>
            with the specified culture with the specified format context.
            </summary>
            <param name="context">
            The format context that is used to convert the specified type.
            </param>
            <param name="culture">The culture to use for the result.</param>
            <param name="value">The value to convert.</param>
            <returns>
            A <see cref="T:System.DateTime"/> object that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.FormatException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The culture is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a value indicating whether it is possible to convert a
            <see cref="T:System.DateTime" /> to the specified type within the
            specified format context.
            </summary>
            <param name="context">
            The format context that is used to convert.
            </param>
            <param name="destinationType">The type to convert to.</param>
            <returns>
            True if the conversion is possible; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> with the specified
            culture to the specified object with the specified format context.
            </summary>
            <param name="context">
            The format context that is used to convert to the specified type.
            </param>
            <param name="culture">
            The culture to use for the converting date.
            </param>
            <param name="value">The date to convert.</param>
            <param name="destinationType">The type to convert to.</param>
            <returns>
            An object of the specified type that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The culture is a null reference (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The destinationType is a null reference (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.NotSupportedException">
            The value is not a DateTime or the destinationType is not a string.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.SelectedDatesCollection">
            <summary>
            Represents a set of selected dates in a
            <see cref="T:System.Windows.Controls.Calendar" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SelectedDatesCollection._addedItems">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SelectedDatesCollection._dispatcherThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SelectedDatesCollection._isCleared">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SelectedDatesCollection._isRangeAdded">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SelectedDatesCollection._owner">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.SelectedDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.Calendar" /> associated
            with this object.
            </param>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds all the dates in the specified range, which includes the first
            and last dates, to the collection.
            </summary>
            <param name="start">The first date to add to the collection.</param>
            <param name="end">The last date to add to the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.ClearInternal">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.CheckSelectionMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.SelectedDatesCollection.IsValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="T:System.Windows.Controls.ChildWindow">
            <summary>
            Provides a window that can be displayed over a parent window and blocks
            interaction with the parent window.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_Chrome">
            <summary>
            The name of the Chrome template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_CloseButton">
            <summary>
            The name of the CloseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_ContentPresenter">
            <summary>
            The name of the ContentPresenter template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_ContentRoot">
            <summary>
            The name of the ContentRoot template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_Overlay">
            <summary>
            The name of the Overlay template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.PART_Root">
            <summary>
            The name of the Root template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.VSMGROUP_Window">
            <summary>
            The name of the WindowStates VSM group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.VSMSTATE_StateClosed">
            <summary>
            The name of the Closing VSM state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.VSMSTATE_StateOpen">
            <summary>
            The name of the Opening VSM state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.HasCloseButtonProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnHasCloseButtonPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HasCloseButtonProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose HasCloseButton property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.OverlayBrushProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnOverlayBrushPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OverlayBrushProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose OverlayBrush property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.OverlayOpacityProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnOverlayOpacityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OverlayOpacityProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose OverlayOpacity property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow.TitleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.ChildWindow.Title" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.ChildWindow.Title" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._chrome">
            <summary>
            Private accessor for the Chrome.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._clickPoint">
            <summary>
            Private accessor for the click point on the chrome.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._closed">
            <summary>
            Private accessor for the Closing storyboard.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._contentPresenter">
            <summary>
            Private accessor for the ContentPresenter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._contentRootTransform">
            <summary>
            Private accessor for the translate transform that needs to be applied on to the ContentRoot.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._desiredContentWidth">
            <summary>
            Content area desired width.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._desiredContentHeight">
            <summary>
            Content area desired height.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._desiredMargin">
            <summary>
            Desired margin for the window.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._dialogresult">
            <summary>
            Private accessor for the Dialog Result property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._interactionState">
            <summary>
            Private accessor for the ChildWindow InteractionState.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._isAppExit">
            <summary>
            Boolean value that specifies whether the application is exit or not.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._isClosing">
            <summary>
            Boolean value that specifies whether the window is in closing state or not.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._isOpen">
            <summary>
            Boolean value that specifies whether the window is opened.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._opened">
            <summary>
            Private accessor for the Opening storyboard.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._isMouseCaptured">
            <summary>
            Boolean value that specifies whether the mouse is captured or not.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._root">
            <summary>
            Private accessor for the Root of the window.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ChildWindow._windowPosition">
            <summary>
            Private accessor for the position of the window with respect to RootVisual.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.ChildWindow" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.InvertMatrix(System.Windows.Media.Matrix@)">
            <summary>
            Inverts the input matrix.
            </summary>
            <param name="matrix">The matrix values that is to be inverted.</param>
            <returns>Returns a value indicating whether the inversion was successful or not.</returns>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Application_Exit(System.Object,System.EventArgs)">
            <summary>
            Executed when the application is exited.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.ChangeVisualState">
            <summary>
            Changes the visual state of the ChildWindow.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.ChildWindow_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Executed when ChildWindow size is changed.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Size changed event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Close">
            <summary>
            Closes a <see cref="T:System.Windows.Controls.ChildWindow" />.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Executed when the CloseButton is clicked.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Closing_Completed(System.Object,System.EventArgs)">
            <summary>
            Executed when the Closing storyboard ends.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.ChildWindow_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Executed when the a key is presses when the window is open.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.ChildWindow_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Executed when the window loses focus.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Chrome_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Executed when mouse left button is down on the chrome.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Mouse button event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Chrome_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Executed when mouse left button is up on the chrome.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Mouse button event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Chrome_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Executed when mouse moves on the chrome.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Mouse event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.ContentPresenter_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Executed when the ContentPresenter size changes.
            </summary>
            <param name="sender">Content Presenter object.</param>
            <param name="e">SizeChanged event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.FindPositionX(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Finds the X coordinate of a point that is defined by a line.
            </summary>
            <param name="p1">Starting point of the line.</param>
            <param name="p2">Ending point of the line.</param>
            <param name="y">Y coordinate of the point.</param>
            <returns>X coordinate of the point.</returns>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.FindPositionY(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Finds the Y coordinate of a point that is defined by a line.
            </summary>
            <param name="p1">Starting point of the line.</param>
            <param name="p2">Ending point of the line.</param>
            <param name="x">X coordinate of the point.</param>
            <returns>Y coordinate of the point.</returns>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.ChildWindow" /> control when a
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.ChildWindow.Closed" /> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.ChildWindow.Closing" /> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.ChildWindow" /> object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.OnOpened">
            <summary>
            This method is called every time a
            <see cref="T:System.Windows.Controls.ChildWindow" /> is displayed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Opening_Completed(System.Object,System.EventArgs)">
            <summary>
            Executed when the opening storyboard finishes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Page_Resized(System.Object,System.EventArgs)">
            <summary>
            Executed when the page resizes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.RootVisual_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Executed when the root visual gets focus.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.Show">
            <summary>
            Opens a <see cref="T:System.Windows.Controls.ChildWindow" /> and
            returns without waiting for the
            <see cref="T:System.Windows.Controls.ChildWindow" /> to close.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The child window is already in the visual tree.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.SubscribeToEvents">
            <summary>
            Subscribes to events when the ChildWindow is opened.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.SubscribeToStoryBoardEvents">
            <summary>
            Subscribes to events that are on the storyboards. 
            Unsubscribing from these events happen in the event handlers individually.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.SubscribeToTemplatePartEvents">
            <summary>
            Subscribes to events on the template parts.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UnSubscribeFromEvents">
            <summary>
            Unsubscribe from events when the ChildWindow is closed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UnsubscribeFromTemplatePartEvents">
            <summary>
            Unsubscribe from the events that are subscribed on the template part elements.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UpdateOverlaySize">
            <summary>
            Updates the size of the overlay of the window.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UpdatePosition">
            <summary>
            Updates the position of the window in case the size of the content changes.
            This allows ChildWindow only scale from right and bottom.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UpdateRenderTransform">
            <summary>
            Updates the render transform applied on the overlay.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ChildWindow.UpdateContentRootTransform(System.Double,System.Double)">
            <summary>
            Updates the ContentRootTranslateTransform.
            </summary>
            <param name="X">X coordinate of the transform.</param>
            <param name="Y">Y coordinate of the transform.</param>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.HasCloseButton">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.ChildWindow" /> has a close
            button.
            </summary>
            <value>
            True if the child window has a close button; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.OverlayBrush">
            <summary>
            Gets or sets the visual brush that is used to cover the parent
            window when the child window is open.
            </summary>
            <value>
            The visual brush that is used to cover the parent window when the
            <see cref="T:System.Windows.Controls.ChildWindow" /> is open. The
            default is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.OverlayOpacity">
            <summary>
            Gets or sets the opacity of the overlay brush that is used to cover
            the parent window when the child window is open.
            </summary>
            <value>
            The opacity of the overlay brush that is used to cover the parent
            window when the <see cref="T:System.Windows.Controls.ChildWindow" />
            is open. The default is 1.0.
            </value>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.RootVisual">
            <summary>
            Gets the root visual element.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.Title">
            <summary>
            Gets or sets the title that is displayed in the frame of the
            <see cref="T:System.Windows.Controls.ChildWindow" />.
            </summary>
            <value>
            The title displayed at the top of the window. The default is null.
            </value>
        </member>
        <member name="E:System.Windows.Controls.ChildWindow.Closed">
            <summary>
            Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" />
            is closed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ChildWindow.Closing">
            <summary>
            Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" />
            is closing.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.ContentRoot">
            <summary>
            Gets the internal accessor for the ContentRoot of the window.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.DialogResult">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.ChildWindow" /> was accepted or
            canceled.
            </summary>
            <value>
            True if the child window was accepted; false if the child window was
            canceled. The default is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.ChildWindowPopup">
            <summary>
            Gets the internal accessor for the PopUp of the window.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.CloseButton">
            <summary>
            Gets the internal accessor for the close button of the window.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.InteractionState">
            <summary>
            Gets the InteractionState for the ChildWindow.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.IsOpen">
            <summary>
            Gets a value indicating whether the PopUp is open or not.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ChildWindow.Overlay">
            <summary>
            Gets the internal accessor for the overlay of the window.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.ChildWindow" /> types to UI
            automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Automation.Peers.ChildWindowAutomationPeer._isTopMost">
            <summary>
            Specifies whether the ChildWindow is the top most element.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.#ctor(System.Windows.Controls.ChildWindow)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.ChildWindow" /> to
            associate with this
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the
            <see cref="T:System.Windows.Automation.Peers.AutomationControlType" />
            for the element associated with this
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.
            Called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the class for the object associated with this
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.
            Called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>
            A string value that represents the type of the child window.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetNameCore">
            <summary>
            Gets the text label of the
            <see cref="T:System.Windows.Controls.ChildWindow" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.
            Called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#SetVisualState(System.Windows.Automation.WindowVisualState)">
            <summary>
            Changes the visual state of the window (such as minimizing or
            maximizing it).
            </summary>
            <param name="state">
            The visual state of the window to change to, as a value of the
            enumeration.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#WaitForInputIdle(System.Int32)">
            <summary>
            Blocks the calling code for the specified time or until the
            associated process enters an idle state, whichever completes first.
            </summary>
            <param name="milliseconds">
            The amount of time, in milliseconds, to wait for the associated
            process to become idle.
            </param>
            <returns>
            True if the window has entered the idle state; false if the timeout
            occurred.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
            <summary>
            Moves the control.
            </summary>
            <param name="x">
            The absolute screen coordinates of the left side of the control.
            </param>
            <param name="y">
            The absolute screen coordinates of the top of the control.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
            <summary>
            Resizes the control.
            </summary>
            <param name="width">The new width of the window, in pixels.</param>
            <param name="height">
            The new height of the window, in pixels.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
            <summary>
            Rotates the control.
            </summary>
            <param name="degrees">
            The number of degrees to rotate the control.  A positive number
            rotates the control clockwise.  A negative number rotates the
            control counterclockwise.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetIsTopMostCore">
            <summary>
            Returns if the ChildWindow is the top most element.
            </summary>
            <returns>Bool value.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.RaiseInteractionStatePropertyChangedEvent(System.Windows.Automation.WindowInteractionState,System.Windows.Automation.WindowInteractionState)">
            <summary>
            Raises PropertyChangedEvent for WindowInteractionStateProperty.
            </summary>
            <param name="oldValue">Old WindowInteractionStateProperty.</param>
            <param name="newValue">New WindowInteractionStateProperty.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.RefreshIsTopMostProperty">
            <summary>
            Updates the IsTopMostPrivate property.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.IsTopMostPrivate">
            <summary>
            Gets or sets a value indicating whether the ChildWindow is the top most element.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.OwningChildWindow">
            <summary>
            Gets the owning ChildWindow.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#InteractionState">
            <summary>
            Gets the interaction state of the window.
            </summary>
            <value>
            The interaction state of the control, as a value of the enumeration.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsModal">
            <summary>
            Gets a value indicating whether the window is modal.
            </summary>
            <value>
            True in all cases.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsTopmost">
            <summary>
            Gets a value indicating whether the window is the topmost
            element in the z-order of layout.
            </summary>
            <value>
            True if the window is topmost; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Maximizable">
            <summary>
            Gets a value indicating whether the window can be maximized.
            </summary>
            <value>False in all cases.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Minimizable">
            <summary>
            Gets a value indicating whether the window can be minimized.
            </summary>
            <value>False in all cases.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#VisualState">
            <summary>
            Gets the visual state of the window.
            </summary>
            <value>
            <see cref="F:System.Windows.Automation.WindowVisualState.Normal" />
            in all cases.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
            <summary>
            Gets a value indicating whether the element can be moved.
            </summary>
            <value>True in all cases.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
            <summary>
            Gets a value indicating whether the element can be resized.
            </summary>
            <value>False in all cases.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
            <summary>
            Gets a value indicating whether the element can be rotated.
            </summary>
            <value>False in all cases.</value>
        </member>
        <member name="T:System.Windows.Controls.BindingEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.BindingEvaluator`1._binding">
            <summary>
            Gets or sets the string value binding used by the control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.BindingEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.#ctor">
            <summary>
            Initializes a new instance of the BindingEvaluator class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingEvaluator class,
            setting the initial binding to the provided parameter.
            </summary>
            <param name="binding">The initial string value binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.ClearDataContext">
            <summary>
            Clears the data context so that the control does not keep a
            reference to the last-looked up item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.GetDynamicValue(System.Object,System.Boolean)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <param name="clearDataContext">If set to true, this parameter will
            clear the data context immediately after retrieving the value.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="M:System.Windows.Controls.BindingEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="P:System.Windows.Controls.BindingEvaluator`1.Value">
            <summary>
            Gets or sets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingEvaluator`1.ValueBinding">
            <summary>
            Gets or sets the value binding.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Dock">
            <summary>
            Specifies values that control the behavior of a control positioned
            inside another control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Dock.Left">
            <summary>
            Specifies that the control should be positioned on the left of the
            control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Dock.Top">
            <summary>
            Specifies that the control should be positioned on top of the
            control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Dock.Right">
            <summary>
            Specifies that the control should be positioned on the right of the
            control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Dock.Bottom">
            <summary>
            Specifies that the control should be positioned at the bottom of 
            control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlHelper">
            <summary>
            The ItemContainerGenerator provides useful utilities for ItemsControls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions">
            <summary>
            Numeric utility methods used by controls.  These methods are similar in
            scope to the WPF DoubleUtil class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Determine if one number is greater than another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is greater than the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsLessThanOrClose(System.Double,System.Double)">
            <summary>
            Determine if one number is less than or close to another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is less than or close to the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.AreClose(System.Double,System.Double)">
            <summary>
            Determine if two numbers are close in value.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is close in value to the second, false
            otherwise.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1">
            <summary>
            Provides event data for various routed events that track property values
            changing.  Typically the events denote a cancellable action.
            </summary>
            <typeparam name="T">
            The type of the value for the dependency property that is changing.
            </typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.RoutedPropertyChangingEventArgs`1._cancel">
            <summary>
            Private member variable for Cancel property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            class.
            </summary>
            <param name="property">
            The <see cref="T:System.Windows.DependencyProperty" /> identifier
            for the property that is changing.
            </param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">
            The new value of the property, assuming that the property change is
            not cancelled.
            </param>
            <param name="isCancelable">
            True if the property change is cancellable by setting
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel" />
            to true in event handling. false if the property change is not
            cancellable.
            </param>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Property">
            <summary>
            Gets the <see cref="T:System.Windows.DependencyProperty" />
            identifier for the property that is changing.
            </summary>
            <value>
            The <see cref="T:System.Windows.DependencyProperty" /> identifier
            for the property that is changing.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue">
            <summary>
            Gets a value that reports the previous value of the changing
            property.
            </summary>
            <value>
            The previous value of the changing property.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue">
            <summary>
            Gets or sets a value that reports the new value of the changing
            property, assuming that the property change is not cancelled.
            </summary>
            <value>
            The new value of the changing property.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable">
            <summary>
            Gets a value indicating whether the property change that originated
            the RoutedPropertyChanging event is cancellable.
            </summary>
            <value>
            True if the property change is cancellable. false if the property
            change is not cancellable.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel">
            <summary>
            Gets or sets a value indicating whether the property change that
            originated the RoutedPropertyChanging event should be cancelled.
            </summary>
            <value>
            True to cancel the property change; this resets the property to
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue" />.
            false to not cancel the property change; the value changes to
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue" />.
            </value>
            <exception cref="T:System.InvalidOperationException">
            Attempted to cancel in an instance where
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable" />
            is false.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.InCoercion">
            <summary>
            Gets or sets a value indicating whether internal value coercion is
            acting on the property change that originated the
            RoutedPropertyChanging event.
            </summary>
            <value>
            True if coercion is active. false if coercion is not active.
            </value>
            <remarks>
            This is a total hack to work around the class hierarchy for Value
            coercion in NumericUpDown.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.RoutedPropertyChangingEventHandler`1">
            <summary>
            Represents methods that handle various routed events that track property
            values changing.  Typically the events denote a cancellable action.
            </summary>
            <typeparam name="T">
            The type of the value for the dependency property that is changing.
            </typeparam>
            <param name="sender">
            The object where the initiating property is changing.
            </param>
            <param name="e">Event data for the event.</param>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.ScrollExtensions">
            <summary>
            The ScrollExtensions class provides utility methods for scrolling items
            ScrollViewers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ScrollExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollExtensions.GetTopAndBottom(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Double@,System.Double@)">
            <summary>
            Get the top and bottom of an element with respect to its parent.
            </summary>
            <param name="element">The element to get the position of.</param>
            <param name="parent">The parent of the element.</param>
            <param name="top">Vertical offset to the top of the element.</param>
            <param name="bottom">
            Vertical offset to the bottom of the element.
            </param>
        </member>
        <member name="T:System.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.HierarchicalDataTemplate">
            <summary>
            Represents a <see cref="T:System.Windows.DataTemplate" /> that supports
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> objects,
            such as <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.HierarchicalDataTemplate._itemTemplate">
            <summary>
            The DataTemplate to apply to the ItemTemplate property on a
            generated HeaderedItemsControl (such as a MenuItem or a
            TreeViewItem), to indicate how to display items from the next level
            in the data hierarchy.
            </summary>
        </member>
        <member name="F:System.Windows.HierarchicalDataTemplate._itemContainerStyle">
            <summary>
            The Style to apply to the ItemContainerStyle property on a generated
            HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to
            indicate how to style items from the next level in the data
            hierarchy.
            </summary>
        </member>
        <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.
            </summary>
        </member>
        <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the collection that is used to generate content for the
            next sublevel in the data hierarchy.
            </summary>
            <value>
            The collection that is used to generate content for the next
            sublevel in the data hierarchy.  The default value is null.
            </value>
        </member>
        <member name="P:System.Windows.HierarchicalDataTemplate.IsItemTemplateSet">
            <summary>
            Gets a value indicating whether the ItemTemplate property was set on
            the template.
            </summary>
        </member>
        <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to
            apply to the
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
            property on a generated
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to
            indicate how to display items from the next sublevel in the data
            hierarchy.
            </summary>
            <value>
            The <see cref="T:System.Windows.DataTemplate" /> to apply to the
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
            property on a generated
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to
            indicate how to display items from the next sublevel in the data
            hierarchy.
            </value>
        </member>
        <member name="P:System.Windows.HierarchicalDataTemplate.IsItemContainerStyleSet">
            <summary>
            Gets a value indicating whether the ItemContainerStyle property was
            set on the template.
            </summary>
        </member>
        <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the item container for each child item.
            </summary>
            <value>
            The style that is applied to the item container for each child item.
            </value>
        </member>
        <member name="T:System.Windows.Controls.DatePicker">
            <summary>
            Represents a control that allows the user to select a date.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents a control that allows the user to select a date.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.ElementRoot">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.ElementTextBox">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.ElementButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.ElementPopup">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._calendar">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._defaultText">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._dropDownButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._outsideCanvas">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._outsidePopupCanvas">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._popUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._root">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._onOpenSelectedDate">
            <summary>
            The value of the SelectedDate just before the Calendar Popup is opened.
            This is used for cancelling the date selection with ESC key.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._settingSelectedDate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._textBox">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DatePicker" /> class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnCalendarStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CalendarStyleProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its CalendarStyle.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its DisplayDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its DisplayDateEnd.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">
            DatePicker that changed its DisplayDateStart.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its FirstDayOfWeek.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnIsDropDownOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its IsDropDownOpen.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">
            DatePicker that changed its IsTodayHighlighted.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its SelectedDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateFormatProperty property changed handler.
            </summary>
            <param name="d">
            DatePicker that changed its SelectedDateFormat.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.SelectionBackgroundProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.TextProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DatePicker.Text" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.DatePicker.Text" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TextProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its Text.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.DatePicker" /> control when a
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>
            A text representation of the selected date, or an empty string if
            SelectedDate is a null reference.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.DatePicker" /> object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </summary>
            <param name="e">
            A
            <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
            that contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_DayButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_DisplayDateChanged(System.Object,System.Windows.Controls.CalendarDateChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_SelectedDatesChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.Calendar_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DateTimeToString(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DatePicker_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DatePicker_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DiscardDayTime(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DiscardTime(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.DropDownButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.HandlePopUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InitializeCalendar">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InvertMatrix(System.Windows.Media.Matrix@)">
            <summary>
            Sets the matrix to its inverse.
            </summary>
            <param name="matrix">Matrix to be inverted.</param>
            <returns>
            True if the Matrix is invertible, false otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.IsValidSelectedDateFormat(System.Windows.Controls.DatePickerFormat)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OnDateSelected(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OpenDropDown">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OpenPopUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.OutsidePopupCanvas_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.ParseText(System.String)">
            <summary>
            Input text is parsed in the correct format and changed into a
            DateTime object.  If the text can not be parsed TextParseError Event
            is thrown.
            </summary>
            <param name="text">Inherited code: Requires comment.</param>
            <returns>
            IT SHOULD RETURN NULL IF THE STRING IS NOT VALID, RETURN THE
            DATETIME VALUE IF IT IS VALID.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.ProcessDatePickerKey(System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.ProcessTextBox">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.SetPopUpPosition">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.SetSelectedDate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.SetTextBoxValue(System.String)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="s">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.SetWaterMarkText">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.TextBox_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.TextBox_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.TextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.UpdateDisabledVisual">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker._testHook">
            <summary>
            Exposes test hooks to unit tests with internal access.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
            <summary>
            Occurs when the drop-down
            <see cref="T:System.Windows.Controls.Calendar" /> is closed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
            <summary>
            Occurs when the drop-down
            <see cref="T:System.Windows.Controls.Calendar" /> is opened.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
            <summary>
            Occurs when <see cref="P:System.Windows.Controls.DatePicker.Text" />
            is assigned a value that cannot be interpreted as a date.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" />
            property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
            <summary>
            Gets a collection of dates that are marked as not selectable.
            </summary>
            <value>
            A collection of dates that cannot be selected. The default value is
            an empty collection.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
            <summary>
            Gets or sets the style that is used when rendering the calendar.
            </summary>
            <value>
            The style that is used when rendering the calendar.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            <value>
            The date to display. The default 
            <see cref="P:System.DateTime.Today" />.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified date is not in the range defined by
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            <value>The last date to display.</value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            <value>The first date to display.</value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek" /> representing the beginning of
            the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the drop-down
            <see cref="T:System.Windows.Controls.Calendar" /> is open or closed.
            </summary>
            <value>
            True if the <see cref="T:System.Windows.Controls.Calendar" /> is
            open; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date will be
            highlighted.
            </summary>
            <value>
            True if the current date is highlighted; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            <value>
            The date currently selected. The default is null.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified date is not in the range defined by
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />,
            or the specified date is in the
            <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" />
            collection.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
            <summary>
            Gets or sets the format that is used to display the selected date.
            </summary>
            <value>
            The format that is used to display the selected date. The default is
            <see cref="F:System.Windows.Controls.DatePickerFormat.Short" />.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An specified format is not valid.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.SelectionBackground">
            <summary>
            Gets or sets the background used for selected dates.
            </summary>
            <value>
            The background used for selected dates.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.Text">
            <summary>
            Gets or sets the text that is displayed by the
            <see cref="T:System.Windows.Controls.DatePicker" />.
            </summary>
            <value>
            The text displayed by the
            <see cref="T:System.Windows.Controls.DatePicker" />.
            </value>
            <exception cref="T:System.FormatException">
            The text entered cannot be parsed to a valid date, and the exception
            is not suppressed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The text entered parses to a date that is not selectable.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.TestHook">
            <summary>
            Gets a test hook for unit tests with internal access.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DatePicker.InternalTestHook">
            <summary>
            Expose test hooks for internal and private members of the
            DatePicker.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePicker.InternalTestHook._datePicker">
            <summary>
            Reference to the outer 'parent' date picker.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InternalTestHook.#ctor(System.Windows.Controls.DatePicker)">
            <summary>
            Initializes a new instance of the InternalTestHook class.
            </summary>
            <param name="datePicker">The parent DatePicker.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InternalTestHook.DateTimeToString(System.DateTime)">
            <summary>
            Convert a DateTime to a String.
            </summary>
            <param name="d">The DateTime.</param>
            <returns>A String representation of the DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InternalTestHook.DropDownButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click the DatePicker's DropDown Button.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DatePicker.InternalTestHook.SetSelectedDate">
            <summary>
            Set the selected date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.InternalTestHook.DropDown">
            <summary>
            Gets the DatePicker's DropDown.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.InternalTestHook.DropDownButton">
            <summary>
            Gets the DatePicker's DropDownButton.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.InternalTestHook.DropDownCalendar">
            <summary>
            Gets or sets the DatePicker's DropDownCalendar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DatePicker.InternalTestHook.DatePickerWatermarkedTextBox">
            <summary>
            Gets the DatePicker's Watermarked TextBox.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.DatePicker" /> types to UI
            automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.DatePicker" /> to associate
            with the
            <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.DatePicker" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI
            Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in
            addition to AutomationControlType, differentiates the control
            represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Overrides the GetLocalizedControlTypeCore method for DatePicker.
            </summary>
            <returns>Inherited code: Requires comment.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetNameCore">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">
            The value to set. The provider is responsible for converting the
            value to the appropriate data type.
            </param>
        </member>
        <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.OwningDatePicker">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state, expanded or collapsed, of the control.
            </summary>
            <value>The state, expanded or collapsed, of the control.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is
            read-only.
            </summary>
            <value>Returns false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value>The value of the control as a string.</value>
        </member>
        <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DatePickerDateValidationErrorEventArgs._throwException">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
            class.
            </summary>
            <param name="exception">
            The initial exception from the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </param>
            <param name="text">
            The text that caused the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
            <summary>
            Gets the initial exception associated with the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </summary>
            <value>
            The exception associated with the validation failure.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
            <summary>
            Gets the text that caused the
            <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
            event.
            </summary>
            <value>
            The text that caused the validation failure.
            </value>
        </member>
        <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
            <summary>
            Gets or sets a value indicating whether
            <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" />
            should be thrown.
            </summary>
            <value>
            True if the exception should be thrown; otherwise, false.
            </value>
            <exception cref="T:System.ArgumentException">
            If set to true and
            <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" />
            is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DatePickerFormat">
            <summary>
            Specifies date formats for a
            <see cref="T:System.Windows.Controls.DatePicker" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DatePickerFormat.Long">
            <summary>
            Specifies that the date should be displayed using unabbreviated days
            of the week and month names.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DatePickerFormat.Short">
            <summary>
            Specifies that the date should be displayed using abbreviated days
            of the week and month names.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
            <summary>
            Represents the text input of a
            <see cref="T:System.Windows.Controls.DatePicker" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DatePickerTextBox.ElementContentName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.ChangeVisualState">
            <summary>
            Change to the correct visual state for the textbox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the textbox.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" />
            when a new template is applied.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DatePickerTextBox.WatermarkProperty">
            <summary>
            Watermark dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.ExtractTemplatePart``1(System.String)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <typeparam name="T">Inherited code: Requires comment 1.</typeparam>
            <param name="partName">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.ExtractTemplatePart``1(System.String,System.Windows.DependencyObject)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <typeparam name="T">Inherited code: Requires comment 1.</typeparam>
            <param name="partName">Inherited code: Requires comment 2.</param>
            <param name="obj">Inherited code: Requires comment 3.</param>
            <returns>Inherited code: Requires comment 4.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnWatermarkChanged">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnWatermarkPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when watermark property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.SetDefaults">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.ElementContent">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.IsHovered">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.HasFocusInternal">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.Watermark">
            <summary>
            Gets or sets the Watermark content.
            </summary>
            <value>The watermark.</value>
        </member>
        <member name="T:System.Windows.Controls.DragValidator">
            <summary>
            Class to encapsulate drag behavior for a UIElement.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DragValidator._targetElement">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragValidator._start">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DragValidator._draggingActive">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.#ctor(System.Windows.UIElement)">
            <summary>
            Create an instance of the DragValidator class.
            </summary>
            <param name="targetElement">
            UIElement that represents the source of the drag operation.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.TargetElement_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handle the MouseMove event for the UIElement to update the drag
            operation.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.TargetElement_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle the MouseLeftButtonUp event for the UIElement to complete the
            drag operation.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.TargetElement_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle the MouseLeftButtonDown event for the UIElement to start a
            drag operation.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.OnDragStarted">
            <summary>
            Invoke the DragStartedEvent handlers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.OnDragDelta(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke the DragDeltaEvent handlers.
            </summary>
            <param name="e">Inherited code: Requires comment.</param>
        </member>
        <member name="M:System.Windows.Controls.DragValidator.OnDragCompleted(System.Windows.Input.MouseEventArgs,System.Boolean)">
            <summary>
            Invoke the DragCompletedEvent handlers.
            </summary>
            <param name="e">Inherited code: Requires comment.</param>
            <param name="canceled">Inherited code: Requires comment 1.</param>
        </member>
        <member name="E:System.Windows.Controls.DragValidator.DragStartedEvent">
            <summary>
            Occurs when a drag operation has started.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragValidator.DragCompletedEvent">
            <summary>
            Occurs when a drag operation has completed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DragValidator.DragDeltaEvent">
            <summary>
            Occurs when a drag operation has progressed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter">
            <summary>
            Represents a control that redistributes space between the rows of
            columns of a <see cref="T:System.Windows.Controls.Grid" /> control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            Represents the control that redistributes space between columns or rows
            of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.ElementHorizontalTemplateName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.ElementVerticalTemplateName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.DragIncrement">
            <summary>
            Default increment parameter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrement">
            <summary>
            Default increment parameter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" />
            dependency property.
            </summary>
            <value>
            An identifier for the
            <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" />
            dependency property.
            </summary>
            <value>
            An identifier for the
            <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter._previewLayer">
            <summary>
            Is Null until a resize operation is initiated with ShowsPreview ==
            True, then it persists for the life of the GridSplitter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter._dragValidator">
            <summary>
            Is initialized in the constructor.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter._currentGridResizeDirection">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter._isMouseOver">
            <summary>
            Holds the state for whether the mouse is over the control or not.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GridSplitter" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.GridSplitter" />
            control when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.GridSplitter" />
            object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.ChangeVisualState">
            <summary>
            Method to change the visual state of the control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the GridSplitter.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.DragValidator_DragCompletedEvent(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Handle the drag completed event to commit or cancel the resize
            operation in progress.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.DragValidator_DragDeltaEvent(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Handle the drag delta event to update the UI for the resize
            operation in progress.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.DragValidator_DragStartedEvent(System.Object,System.Windows.Controls.Primitives.DragStartedEventArgs)">
            <summary>
            Handle the drag started event to start a resize operation if the
            control is enabled.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GridSplitter_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handle the key down event to allow keyboard resizing or canceling a
            resize operation.
            </summary>
            <param name="sender">Inherited code: Requires comment.</param>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InitializeAndMoveSplitter(System.Double,System.Double)">
            <summary>
            Initialize the resize data and move the splitter by the specified
            amount.
            </summary>
            <param name="horizontalChange">
            Horizontal amount to move the splitter.
            </param>
            <param name="verticalChange">
            Vertical amount to move the splitter.
            </param>
            <returns>Inherited code: Requires comment.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.KeyboardMoveSplitter(System.Double,System.Double)">
            <summary>
            Called by keyboard event handler to move the splitter if allowed.
            </summary>
            <param name="horizontalChange">
            Horizontal amount to move the splitter.
            </param>
            <param name="verticalChange">
            Vertical amount to move the splitter.
            </param>
            <returns>Inherited code: Requires comment.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.CreatePreviewLayer(System.Windows.Controls.Grid)">
            <summary>
            Creates the preview layer and adds it to the parent grid.
            </summary>
            <param name="parentGrid">Grid to add the preview layer to.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.SetupPreview">
            <summary>
            Add the preview layer to the Grid if it is not there already and
            then show the preview control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.RemovePreviewControl">
            <summary>
            Remove the preview control from the preview layer if it exists.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InitializeData(System.Boolean)">
            <summary>
            Initialize the resizeData object to hold the information for the
            resize operation in progress.
            </summary>
            <param name="showsPreview">
            Whether or not the preview should be shown.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.MoveSplitter(System.Double,System.Double)">
            <summary>
            Move the splitter and resize the affected columns or rows.
            </summary>
            <param name="horizontalChange">
            Amount to resize horizontally.
            </param>
            <param name="verticalChange">
            Amount to resize vertically.
            </param>
            <remarks>
            Only one of horizontalChange or verticalChange will be non-zero.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.SetupDefinitionsToResize">
            <summary>
            Determine which adjacent column or row definitions need to be
            included in the resize operation and set up resizeData accordingly.
            </summary>
            <returns>True if it is a valid resize operation.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.CancelResize">
            <summary>
            Cancel the resize operation in progress.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GetActualLength(System.Windows.Controls.GridSplitter.DefinitionAbstraction)">
            <summary>
            Get the actual length of the given definition.
            </summary>
            <param name="definition">
            Row or column definition to get the actual length for.
            </param>
            <returns>
            Height of a row definition or width of a column definition.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GetDeltaConstraints">
            <summary>
            Determine the max and min that the two definitions can be resized.
            </summary>
            <returns>Inherited code: Requires comment.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GetEffectiveResizeBehavior(System.Windows.Controls.GridSplitter.GridResizeDirection)">
            <summary>
            Determine the resize behavior based on the given direction and
            alignment.
            </summary>
            <param name="direction">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GetEffectiveResizeDirection">
            <summary>
            Determine the resize direction based on the horizontal and vertical
            alignments.
            </summary>
            <returns>Inherited code: Requires comment.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.GetGridDefinition(System.Windows.Controls.Grid,System.Int32,System.Windows.Controls.GridSplitter.GridResizeDirection)">
            <summary>
            Create a DefinitionAbstraction instance for the given row or column
            index in the grid.
            </summary>
            <param name="grid">Inherited code: Requires comment.</param>
            <param name="index">Inherited code: Requires comment 1.</param>
            <param name="direction">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.SetLengths(System.Double,System.Double)">
            <summary>
            Set the lengths of the two definitions depending on the split
            behavior.
            </summary>
            <param name="definition1Pixels">
            Inherited code: Requires comment.
            </param>
            <param name="definition2Pixels">
            Inherited code: Requires comment 1.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.SetDefinitionLength(System.Windows.Controls.GridSplitter.DefinitionAbstraction,System.Windows.GridLength)">
            <summary>
            Set the height/width of the given row/column.
            </summary>
            <param name="definition">Inherited code: Requires comment.</param>
            <param name="length">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.IsStar(System.Windows.Controls.GridSplitter.DefinitionAbstraction)">
            <summary>
            Determine if the given definition has its size set to the "*" value.
            </summary>
            <param name="definition">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.UpdateTemplateOrientation">
            <summary>
            This code will run whenever the effective resize direction changes,
            to update the template being used to display this control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter._testHook">
            <summary>
            Exposes test hooks to unit tests with internal access.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ElementHorizontalTemplateFrameworkElement">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ElementVerticalTemplateFrameworkElement">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeDataInternal">
            <summary>
            Gets or sets the resize data.  This is null unless a resize
            operation is in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.GridSplitter" /> displays a
            preview.
            </summary>
            <value>
            True if a preview is displayed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is used
            for previewing changes.
            </summary>
            <value>
            The style that is used to preview changes.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.HasKeyboardFocus">
            <summary>
            Gets a value indicating whether or not the control has keyboard
            focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.TestHook">
            <summary>
            Gets a test hook for unit tests with internal access.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.DefinitionAbstraction">
            <summary>
            Pretends to be the base class for RowDefinition and ClassDefinition
            types so that objects of either type can be treated as one.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.DefinitionAbstraction.#ctor(System.Windows.DependencyObject)">
            <summary>
            Creates an instance of the DefinitionAbstraction class based on
            the given row or column definition.
            </summary>
            <param name="definition">
            RowDefinition or ColumnDefinition instance.
            </param>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.DefinitionAbstraction.AsRowDefinition">
            <summary>
            Gets the stored definition cast as a row definition.
            </summary>
            <value>Null if not a RowDefinition.</value>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.DefinitionAbstraction.AsColumnDefinition">
            <summary>
            Gets the stored definition cast as a column definition.
            </summary>
            <value>Null if not a ColumnDefinition.</value>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.DefinitionAbstraction.MaxSize">
            <summary>
            Gets the MaxHeight/MaxWidth for the row/column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.DefinitionAbstraction.MinSize">
            <summary>
            Gets the MinHeight/MinWidth for the row/column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.DefinitionAbstraction.Size">
            <summary>
            Gets the Height/Width for the row/column.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.DoubleUtil">
            <summary>
            A collection of helper methods for working with double data types.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.DoubleUtil.Epsilon">
            <summary>
            Epsilon is the smallest value such that 1.0+epsilon != 1.0.  It
            can be used to determine the acceptable tolerance for rounding
            errors.
            </summary>
            <remarks>
            Epsilon is normally 2.2204460492503131E-16, but Silverlight 2
            uses floats so the effective epsilon is really 1.192093E-07.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.DoubleUtil.ScalarAdjustment">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.DoubleUtil.AreClose(System.Double,System.Double)">
            <summary>
            Determine if the two doubles are effectively equal within
            tolerances.
            </summary>
            <param name="value1">Inherited code: Requires comment.</param>
            <param name="value2">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.GridResizeBehavior">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.GridResizeDirection">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeDirection.Auto">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeDirection.Columns">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.GridResizeDirection.Rows">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.ResizeData">
            <summary>
            Type to hold the data for the resize operation in progress.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.PreviewControl">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.Definition1">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.Definition1Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.Definition2">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.Definition2Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.Grid">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.MaxChange">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.MinChange">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.OriginalDefinition1ActualLength">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.OriginalDefinition1Length">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.OriginalDefinition2ActualLength">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.OriginalDefinition2Length">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.ResizeBehavior">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.ResizeDirection">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.ShowsPreview">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.SplitBehavior">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.SplitterIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.ResizeData.SplitterLength">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.SplitBehavior">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.SplitBehavior.Split">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.SplitBehavior.ResizeDefinition1">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.SplitBehavior.ResizeDefinition2">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GridSplitter.InternalTestHook">
            <summary>
            Expose test hooks for internal and private members of the
            GridSplitter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GridSplitter.InternalTestHook._gridSplitter">
            <summary>
            Reference to the outer 'parent' GridSplitter.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InternalTestHook.#ctor(System.Windows.Controls.GridSplitter)">
            <summary>
            Initializes a new instance of the InternalTestHook class.
            </summary>
            <param name="gridSplitter">The grid splitter to hook.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InternalTestHook.DragValidator_DragCompletedEvent(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Simulate the DragValidator's DragCompleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InternalTestHook.DragValidator_DragDeltaEvent(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Simulate the DragValidator's DragDelta event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InternalTestHook.DragValidator_DragStartedEvent(System.Object,System.Windows.Controls.Primitives.DragStartedEventArgs)">
            <summary>
            Simulate the DragValidator's DragStarted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.GridSplitter.InternalTestHook.KeyboardMoveSplitter(System.Double,System.Double)">
            <summary>
            Simulate using the keyboard to move the splitter.
            </summary>
            <param name="horizontalChange">Horizontal change.</param>
            <param name="verticalChange">Vertical change.</param>
            <returns>
            A value indicating whether the splitter was moved.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.InternalTestHook.GridResizeDirection">
            <summary>
            Gets the GridSplitter's GridResizeDirection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.InternalTestHook.PreviewLayer">
            <summary>
            Gets the GridSplitter's PreviewLayer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GridSplitter.InternalTestHook.ResizeData">
            <summary>
            Gets the GridSplitter's ResizeData.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.GridSplitter" /> types to
            UI automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GridSplitter" /> to
            associate with the
            <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI
            Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in
            addition to AutomationControlType,  differentiates the control
            represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.GridSplitter" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
            <summary>
            Moves the control.
            </summary>
            <param name="x">
            Absolute screen coordinates of the left side of the control.
            </param>
            <param name="y">
            Absolute screen coordinates of the top of the control.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
            <summary>
            Resizes the control.
            </summary>
            <param name="width">The new width of the window, in pixels.</param>
            <param name="height">
            The new height of the window, in pixels.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
            <summary>
            Rotates the control.
            </summary>
            <param name="degrees">
            The number of degrees to rotate the control. A positive number
            rotates clockwise; a negative number rotates counterclockwise.
            </param>
        </member>
        <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
            <summary>
            Gets a value indicating whether the control can be moved.
            </summary>
            <value>
            True if the element can be moved; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
            <summary>
            Gets a value indicating whether the UI automation element can be
            resized.
            </summary>
            <value>
            True if the element can be resized; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
            <summary>
            Gets a value indicating whether the control can be rotated.
            </summary>
            <value>
            True if the element can be rotated; otherwise, false.
            </value>
        </member>
        <member name="T:System.Windows.Controls.PreviewControl">
            <summary>
            Represents the control that shows a preview of the GridSplitter's
            redistribution of space between columns or rows of a Grid control.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.PreviewControl.ElementHorizontalTemplateName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PreviewControl.ElementVerticalTemplateName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PreviewControl._currentGridResizeDirection">
            <summary>
            Is Null until the PreviewControl is bound to a GridSplitter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PreviewControl._gridSplitterOrigin">
            <summary>
            Tracks the bound GridSplitter's location for calculating the
            PreviewControl's offset.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PreviewControl.#ctor">
            <summary>
            Instantiate the PreviewControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PreviewControl.OnApplyTemplate">
            <summary>
            Called when template should be applied to the control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PreviewControl.Bind(System.Windows.Controls.GridSplitter)">
            <summary>
            Bind the the dimensions of the preview control to the associated
            grid splitter.
            </summary>
            <param name="gridSplitter">GridSplitter instance to target.</param>
        </member>
        <member name="P:System.Windows.Controls.PreviewControl.ElementHorizontalTemplateFrameworkElement">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PreviewControl.ElementVerticalTemplateFrameworkElement">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PreviewControl.OffsetX">
            <summary>
            Gets or sets the x-axis offset for the underlying render transform.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PreviewControl.OffsetY">
            <summary>
            Gets or sets the y-axis offset for the underlying render transform.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.HeaderedItemsControl">
            <summary>
            Represents a control that contains a collection of items and a header.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            dependency property.
            </value>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderProperty.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its Header.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            dependency property.
            </value>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderTemplateProperty.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its HeaderTemplate.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> when a
            new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">
            The container element used to display the specified item.
            </param>
            <param name="item">The content to display.</param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.PreparePrepareHeaderedItemsControlContainerForItemOverride(System.Windows.DependencyObject,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
            <param name="parent">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.PrepareHeaderedItemsControlContainer(System.Windows.Controls.HeaderedItemsControl,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <summary>
            Prepare a PrepareHeaderedItemsControlContainer container for an
            item.
            </summary>
            <param name="control">Container to prepare.</param>
            <param name="item">Item to be placed in the container.</param>
            <param name="parentItemsControl">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedItemsControl.HasDefaultValue(System.Windows.Controls.Control,System.Windows.DependencyProperty)">
            <summary>
            Check whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>
            True if the property has the default value; false otherwise.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderIsItem">
            <summary>
            Gets or sets a value indicating whether the Header property has been
            set to the item of an ItemsControl.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the item that labels the control.
            </summary>
            <value>
            The item that labels the control. The default value is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets a data template that is used to display the contents of
            the control's header.
            </summary>
            <value>
            Gets or sets a data template that is used to display the contents of
            the control's header. The default is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the container element generated for each item.
            </summary>
            <value>
            The <see cref="T:System.Windows.Style" /> that is applied to the
            container element generated for each item. The default is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedItemsControl.ItemsControlHelper">
            <summary>
            Gets the ItemsControlHelper that is associated with this control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_CheckSelectionMode_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_NextButtonName">
            <summary>
              Looks up a localized string similar to next button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnDisplayModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to DisplayMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnFirstDayOfWeekChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to FirstDayOfWeek value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDate property cannot be set when the selection mode is None..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectedDate value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectionModeChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectionMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_PreviousButtonName">
            <summary>
              Looks up a localized string similar to previous button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_UnSelectableDates">
            <summary>
              Looks up a localized string similar to Value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_BlackoutDayHelpText">
            <summary>
              Looks up a localized string similar to Blackout Day - {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_CalendarButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to calendar button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DayButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to day button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DecadeMode">
            <summary>
              Looks up a localized string similar to Decade.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_MonthMode">
            <summary>
              Looks up a localized string similar to Month.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_YearMode">
            <summary>
              Looks up a localized string similar to Year.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarCollection_MultiThreadedCollectionChangeNotSupported">
            <summary>
              Looks up a localized string similar to This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ChildWindow_InvalidOperation">
            <summary>
              Looks up a localized string similar to Cannot call Show() on a ChildWindow that is in the visual tree. ChildWindow should be the top-most element in the .xaml file..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePicker_DropDownButtonName">
            <summary>
              Looks up a localized string similar to Show Calendar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePicker_OnSelectedDateFormatChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to DatePickerFormat value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePicker_WatermarkText">
            <summary>
              Looks up a localized string similar to &lt;{0}&gt;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePickerAutomationPeer_LocalizedControlType">
            <summary>
              Looks up a localized string similar to date picker.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePickerDateValidationErrorEventArgs_ThrowException_NoException">
            <summary>
              Looks up a localized string similar to Cannot Throw Null Exception.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePickerTextBox_DefaultWatermarkText">
            <summary>
              Looks up a localized string similar to &lt;enter text here&gt;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DatePickerTextBox_TemplatePartIsOfIncorrectType">
            <summary>
              Looks up a localized string similar to The template part {0} is not an instance of {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DateTimeTypeConverter_FormatException">
            <summary>
              Looks up a localized string similar to DateTime value is in the wrong format..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.RoutedPropertyChangingEventArgs_CancelSet_InvalidOperation">
            <summary>
              Looks up a localized string similar to The RoutedPropertyChangingEvent cannot be canceled!.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TabControl_InvalidChild">
            <summary>
              Looks up a localized string similar to Unable to cast object of type &apos;{0}&apos; to type &apos;System.Windows.Controls.TabItem&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TabControl_InvalidIndex">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid value for property &apos;SelectedIndex&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeView_OnSelectedItemPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedItem..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeView_OnSelectedValuePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedValue..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewItem_OnHasItemsPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property HasItems..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewItem_OnIsSelectionActivePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property IsSelectionActive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TabControl">
            <summary>
            Represents a control that contains multiple items that share the same
            space on the screen.
            </summary>
            <remarks>
            TabControl allows a developer to arrange visual content in a compacted
            and organized form.  The real-world analog of the control might be a
            tabbed notebook, in which visual content is displayed in discreet pages
            which are accessed by selecting the appropriate tab.  Each tab/page is
            encapsulated by a TabItem, the generated item of TabControl.  A TabItem
            has a Header property which corresponds to the content in the tab button
            and a Content property which corresponds to the content in the tab page.
            This control is useful for minimizing screen space usage while allowing
            an application to expose a large amount of data.  The user navigates
            through TabItems by clicking on a tab button using the mouse or by using
            the keyboard.
            </remarks>
            <QualityBand>Mature</QualityBand>
            <summary>
            TabControl allows a developer to arrange visual content in a compacted
            and organized form.  The real-world analog of the control might be a
            tabbed notebook, in which visual content is displayed in discreet pages
            which are accessed by selecting the appropriate tab.  Each tab/page is
            encapsulated by a TabItem, the generated item of TabControl.  A TabItem
            has a Header property which corresponds to the content in the tab button
            and a Content property which corresponds to the content in the tab page.
            This control is useful for minimizing screen space usage while allowing
            an application to expose a large amount of data.  The user navigates
            through TabItems by clicking on a tab button using the mouse or by using
            the keyboard.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTemplateTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTemplateBottomName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTemplateLeftName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTemplateRightName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTabPanelTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTabPanelBottomName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTabPanelLeftName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementTabPanelRightName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementContentTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementContentBottomName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementContentLeftName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.ElementContentRightName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TabControl" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TabControl" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
            <summary>
            Returns 
            <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.TabControl" /> object.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.TabControl.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedItem" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedItem" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnSelectedItemChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItem property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedItem.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.TabControl.SelectedIndexProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnSelectedIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndex property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedIndex.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.SelectItem(System.Object,System.Object)">
            <summary>
            Given the TabItem in the list of Items, we will set that item as the
            currently selected item, and un-select the rest of the items.
            </summary>
            <param name="oldItem">Previous TabItem that was unselected.</param>
            <param name="newItem">New TabItem to set as the SelectedItem.</param>
        </member>
        <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedContent" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedContent" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnSelectedContentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedContent property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedContent.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnTabStripPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TabStripPlacement property changed handler.
            </summary>
            <param name="d">
            TabControl that changed its TabStripPlacement.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">
            Control that triggers this property change.
            </param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.UpdateTabPanelLayout(System.Windows.Controls.Dock,System.Windows.Controls.Dock)">
            <summary>
            This will hide the templates for the TabStripPlacements that are not
            being displayed, and show the template for the TabStripPlacement
            that is currently selected.
            </summary>
            <param name="oldValue">Inherited code: Requires comment.</param>
            <param name="newValue">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.UpdateVisualState">
            <summary>
            Update the current visual state of the TabControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the TabControl.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the current selection when Items has changed.
            </summary>
            <param name="e">Data used by the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" />
            event.
            </summary>
            <param name="args">
            Provides data for the
            <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" />
            event.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            This is the method that responds to the KeyDown event.
            </summary>
            <param name="e">Data used by the event.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.FindNextTabItem(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="direction">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.TabControl.GetItemAtIndex(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="index">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.TabControl.UpdateSelectedContent(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="content">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.AddToTabPanel(System.Windows.Controls.TabItem)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabItem">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.InsertIntoTabPanel(System.Int32,System.Windows.Controls.TabItem)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="index">Inherited code: Requires comment 1.</param>
            <param name="tabItem">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.RemoveFromTabPanel(System.Windows.Controls.TabItem)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabItem">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.ClearTabPanel">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.GetTabPanel(System.Windows.Controls.Dock)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabPlacement">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.TabControl.GetTemplate(System.Windows.Controls.Dock)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabPlacement">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.TabControl.GetContentHost(System.Windows.Controls.Dock)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabPlacement">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.TabControl._desiredIndex">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl._updateIndex">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl._testHook">
            <summary>
            Exposes test hooks to unit tests with internal access.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.SelectedItem">
            <summary>
            Gets or sets the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The currently selected
            <see cref="T:System.Windows.Controls.TabItem" />, or null if a
            <see cref="T:System.Windows.Controls.TabItem" /> is not selected.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The index of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />, or -1 if a
            <see cref="T:System.Windows.Controls.TabItem" /> is not selected.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabControl.SelectedContent">
            <summary>
            Gets the content of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The content of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />. The default is
            null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
            <summary>
            Gets or sets how <see cref="T:System.Windows.Controls.TabItem" />
            headers align relative to the
            <see cref="T:System.Windows.Controls.TabItem" /> content.
            </summary>
            <value>
            The alignment of <see cref="T:System.Windows.Controls.TabItem" />
            headers relative to the
            <see cref="T:System.Windows.Controls.TabItem" /> content. The
            default is <see cref="F:System.Windows.Controls.Dock.Top" />.
            </value>
        </member>
        <member name="E:System.Windows.Controls.TabControl.SelectionChanged">
            <summary>
            Occurs when the selected
            <see cref="T:System.Windows.Controls.TabItem" /> changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTemplateTop">
            <summary>
            Gets or sets the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTemplateBottom">
            <summary>
            Gets or sets the TabStripPlacement Bottom template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTemplateLeft">
            <summary>
            Gets or sets the TabStripPlacement Left template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTemplateRight">
            <summary>
            Gets or sets the TabStripPlacement Right template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTabPanelTop">
            <summary>
            Gets or sets the TabPanel of the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTabPanelBottom">
            <summary>
            Gets or sets the TabPanel of the TabStripPlacement Bottom template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTabPanelLeft">
            <summary>
            Gets or sets the TabPanel of the TabStripPlacement Left template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementTabPanelRight">
            <summary>
            Gets or sets the TabPanel of the TabStripPlacement Right template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementContentTop">
            <summary>
            Gets or sets the ContentHost of the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementContentBottom">
            <summary>
            Gets or sets the ContentHost of the TabStripPlacement Bottom
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementContentLeft">
            <summary>
            Gets or sets the ContentHost of the TabStripPlacement Left template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.ElementContentRight">
            <summary>
            Gets or sets the ContentHost of the TabStripPlacement Right
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabControl.TestHook">
            <summary>
            Gets a test hook for unit tests with internal access.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TabControl.InternalTestHook">
            <summary>
            Expose test hooks for internal and private members of the
            TabControl.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabControl.InternalTestHook._tabControl">
            <summary>
            Reference to the outer 'parent' TabControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabControl.InternalTestHook.#ctor(System.Windows.Controls.TabControl)">
            <summary>
            Initializes a new instance of the InternalTestHook class.
            </summary>
            <param name="tabControl">The TabControl to hook.</param>
        </member>
        <member name="M:System.Windows.Controls.TabControl.InternalTestHook.FindNextTabItem(System.Int32,System.Int32)">
            <summary>
            Find the next tab item.
            </summary>
            <param name="startIndex">Initial index.</param>
            <param name="direction">Direction to search.</param>
            <returns>The next tab item.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.TabControl" /> types to UI
            automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.TabControl" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
            <summary>
            Creates a new System.Windows.Automation.Peers.TabItemAutomationPeer.
            </summary>
            <param name="item">
            The System.Windows.Controls.TabItem that is associated with the new
            System.Windows.Automation.Peers.TabItemAutomationPeer.
            </param>
            <returns>The TabItemAutomationPeer that is created.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI
            Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in
            addition to AutomationControlType, differentiates the control
            represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
            <summary>
            This method is called by
            System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint().
            </summary>
            <returns>
            A System.Windows.Point containing System.Double.NaN,
            System.Double.NaN; the only clickable points in a
            System.Windows.Controls.TabControl are the child
            System.Windows.Controls.TabItem elements.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.TabControl" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider
            allows more than one child element to be selected concurrently.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
        </member>
        <member name="T:System.Windows.Controls.TabItem">
            <summary>
            Represents a selectable item in a
            <see cref="T:System.Windows.Controls.TabControl" />.
            </summary>
            <QualityBand>Mature</QualityBand>
            <summary>
            A child item of TabControl.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateTopSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateBottomSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateLeftSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateRightSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateTopUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateBottomUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateLeftUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementTemplateRightUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderTopSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderBottomSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderLeftSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderRightSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderTopUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderBottomUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderLeftUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.ElementHeaderRightUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TabItem" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TabItem" /> when a new template
            is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
            <summary>
            Creates and returns an
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />
            for this <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <returns>
            An automation peer for this
            <see cref="T:System.Windows.Controls.TabItem" />.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.TabItem.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnHeaderChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Header property changed handler.
            </summary>
            <param name="d">TabItem that changed its Header.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the
            <see cref="P:System.Windows.Controls.TabItem.Header" /> property
            changes.
            </summary>
            <param name="oldHeader">
            The previous value of the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.UpdateHeaderVisuals">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.HasHeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.HasHeader" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.HasHeader" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.TabItem.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnHeaderTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplate property changed handler.
            </summary>
            <param name="d">TabItem that changed its HeaderTemplate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The previous value of the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnIsSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelected changed handler.
            </summary>
            <param name="d">TabItem that changed IsSelected.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.GetTabItemAutomationPeer(System.Windows.Controls.TabItem)">
            <summary>
            We use this function to get the TabItemAutomationPeer associated
            with the TabItem.
            </summary>
            <param name="item">
            TabItem that we are seeking to find the AutomationPeer for.
            </param>
            <returns>
            The TabItemAutomationPeer for the specified TabItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
            <summary>
            Called to indicate that the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property
            has changed to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
            <summary>
            Called to indicate that the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property
            has changed to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
            <summary>
            This method is invoked when the Content property changes.
            </summary>
            <param name="oldContent">
            The previous <see cref="T:System.Windows.Controls.TabItem" />
            content.
            </param>
            <param name="newContent">
            The new <see cref="T:System.Windows.Controls.TabItem" /> content.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            This is the method that responds to the KeyDown event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">
            Control that triggers this property change.
            </param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="F:System.Windows.Controls.TabItem.IsFocusedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.IsFocused" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.IsFocused" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnIsFocusedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsFocusedProperty property changed handler.
            </summary>
            <param name="d">TabItem that changed IsFocused.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnIsFocusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
            that contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.UpdateVisualState">
            <summary>
            Change to the correct visual state for the TabItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the TabItem.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.UpdateTabItemVisuals">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles when the mouse leaves the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles when the mouse enters the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse left button down.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseButtonEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.GetTemplate(System.Boolean,System.Windows.Controls.Dock)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isSelected">Inherited code: Requires comment 1.</param>
            <param name="tabPlacement">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.TabItem.GetContentControl(System.Boolean,System.Windows.Controls.Dock)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isSelected">Inherited code: Requires comment 1.</param>
            <param name="tabPlacement">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="F:System.Windows.Controls.TabItem._previousTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem._previousHeader">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem._testHook">
            <summary>
            Exposes test hooks to unit tests with internal access.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.Header">
            <summary>
            Gets or sets the header of the
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The current header of the
            <see cref="T:System.Windows.Controls.TabItem" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabItem.HasHeader">
            <summary>
            Gets a value indicating whether the
            <see cref="T:System.Windows.Controls.TabItem" /> has a header.
            </summary>
            <value>
            True if <see cref="P:System.Windows.Controls.TabItem.Header" /> is
            not null; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabItem.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            <see cref="T:System.Windows.Controls.TabItem" /> header.
            </summary>
            <value>
            The current template that is used to display
            <see cref="T:System.Windows.Controls.TabItem" /> header content.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.TabItem" /> is currently
            selected.
            </summary>
            <value>
            True if the <see cref="T:System.Windows.Controls.TabItem" /> is
            selected; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
            <summary>
            Gets the location of the tab strip relative to the
            <see cref="T:System.Windows.Controls.TabItem" /> content.
            </summary>
            <value>
            The location of the tab strip relative to the
            <see cref="T:System.Windows.Controls.TabItem" /> content.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TabItem.IsFocused">
            <summary>
            Gets a value indicating whether this element has logical focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.TabControlParent">
            <summary>
            Gets a reference to the TabControl that holds this TabItem.  It will
            step up the UI tree to find the TabControl that contains this
            TabItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateTopSelected">
            <summary>
            Gets or sets the TabStripPlacement Top Selected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateBottomSelected">
            <summary>
            Gets or sets the TabStripPlacement Bottom Selected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateLeftSelected">
            <summary>
            Gets or sets the TabStripPlacement Left Selected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateRightSelected">
            <summary>
            Gets or sets the TabStripPlacement Right Selected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateTopUnselected">
            <summary>
            Gets or sets the TabStripPlacement Top Unselected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateBottomUnselected">
            <summary>
            Gets or sets the TabStripPlacement Bottom Unselected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateLeftUnselected">
            <summary>
            Gets or sets the TabStripPlacement Left Unselected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementTemplateRightUnselected">
            <summary>
            Gets or sets the TabStripPlacement Right Unselected template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderTopSelected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Top Selected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderBottomSelected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Bottom Selected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderLeftSelected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Left Selected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderRightSelected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Right Selected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderTopUnselected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Top Unselected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderBottomUnselected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Bottom Unselected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderLeftUnselected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Left Unselected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.ElementHeaderRightUnselected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Right Unselected
            template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem._isMouseOver">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.TestHook">
            <summary>
            Gets a test hook for unit tests with internal access.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TabItem.InternalTestHook">
            <summary>
            Expose test hooks for internal and private members of the TabItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TabItem.InternalTestHook._tabItem">
            <summary>
            Reference to the outer 'parent' TabItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TabItem.InternalTestHook.#ctor(System.Windows.Controls.TabItem)">
            <summary>
            Initializes a new instance of the InternalTestHook class.
            </summary>
            <param name="tabItem">The TabItem to hook.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.InternalTestHook.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Simulate the MouseLeftButtonDown event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.InternalTestHook.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Simulate the MouseLeave event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TabItem.InternalTestHook.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Simulate the MouseEnter event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.TabItem.InternalTestHook.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether the TabItem has the
            mouse over it.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TabItem.InternalTestHook.TabControlParent">
            <summary>
            Gets the TabItem's TabControlParent property.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.TabItem" /> types to  UI
            automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.TabItem" /> to associate
            with the
            <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI
            Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
            <summary>
            Returns the ChildrenCore.
            </summary>
            <returns>List of AutomationPeers for the Children.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in
            addition to AutomationControlType, differentiates the control
            represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.TabItem" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
            <summary>
            Gets the text label of the TabItem that is associated with this
            TabItemAutomationPeer. Called by GetName. 
            </summary>
            <returns>
            The string that contains the label. If set, this method returns the
            value of the Name property; otherwise this method will return the
            value of the Header property. 
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
            <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
            Owner element is not enabled.
            </exception>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Deselects any selected items and then selects the current element.
            </summary>
            <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
            Owner element is not enabled.
            </exception>
        </member>
        <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.RaiseAutomationIsSelectedChanged(System.Boolean)">
            <summary>
            Raise the event for when the IsSelectedProperty changes.
            </summary>
            <param name="isSelected">Inherited code: Requires comment.</param>
        </member>
        <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if the element is selected; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and acts as the container for the calling object.
            </summary>
            <value>
            The provider that supports
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.TabOwner">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.TabPanel">
            <summary>
            Handles the layout of <see cref="T:System.Windows.Controls.TabItem" />
            objects on a <see cref="T:System.Windows.Controls.TabControl" />.
            </summary>
            <remarks>
            TabPanel is a Panel designed to handle the intricacies of laying out the
            tab buttons in a TabControl.  Specifically, it handles:
              Serving as an ItemsHost for TabItems within a TabControl
              Determining correct sizing and positioning for TabItems 
              Handling the logic associated with MultiRow scenarios, namely: 
                Calculating row breaks in a collection of TabItems 
                Laying out TabItems in multiple rows based on those breaks 
              Performing specific layout for a selected item to indicate selection,
              namely: 
                Bringing the selected tab to the front, or, in other words, making
                  the selected tab appear to be in front of other tabs. 
                Increasing the size pre-layout size of a selected item (note that
                  this is not a transform, but rather an increase in the size
                  allotted to the element in which to perform layout). 
                Bringing the selected tab to the front 
              Exposing attached properties that allow TabItems to be styled based on
              their placement within the TabPanel.
            </remarks>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Called when re-measuring the control is required.
            </summary>
            <param name="availableSize">
            Constraint size as an upper limit. The return value should not
            exceed this size.
            </param>
            <returns>
            The measured size of the control.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the content of a
            <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> object.
            </summary>
            <param name="finalSize">
            The size that a tab panel uses to position child elements.
            </param>
            <returns>The size of the arranged control.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeHorizontal(System.Windows.Size)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="arrangeSize">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeVertical(System.Windows.Size)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="arrangeSize">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.GetDesiredSizeWithoutMargin(System.Windows.UIElement)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="element">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.GetActiveRow(System.Int32[])">
            <summary>
            Returns the row which contain the child with IsSelected==true.
            </summary>
            <param name="solution">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.CalculateHeaderDistribution(System.Double,System.Double[])">
            <summary>
            Input: Row width and width of all headers.  Output: int array which
            size is the number of separators and contains each separator
            position.
            </summary>
            <param name="rowWidthLimit">
            Inherited code: Requires comment.
            </param>
            <param name="headerWidth">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.TabPanel.GetHeadersSize">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="P:System.Windows.Controls.Primitives.TabPanel.TabAlignment">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.TabPanel.TabControlParent">
            <summary>
            Gets the TabControl that contains this TabPanel by walking up the
            visual tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.TabPanel.NumberOfRows">
            <summary>
            Gets or sets the number of rows calculated in measure and used in
            arrange.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.TabPanel.RowHeight">
            <summary>
            Gets or sets the maximum of all headers height.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeView">
            <summary>
            Represents a control that displays hierarchical data in a tree structure
            that has items that can expand and collapse.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TreeView._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeView._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnSelectedValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValueProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnSelectedValuePathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValuePathProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValuePath.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeView.ItemContainerStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            TreeView that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TreeView" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.TreeView" /> control.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TreeView" /> control when a new
            control template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeView.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the TreeView.
            </summary>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to
            display content.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a
            container for content.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is a
            <see cref="T:System.Windows.Controls.TreeViewItem" />, which is the
            default container for items in the
            <see cref="T:System.Windows.Controls.TreeView" /> control.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>
            True if the item is a
            <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container element to display the specified item.
            </summary>
            <param name="element">
            The container element used to display the specified item.
            </param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </summary>
            <param name="element">
            The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to
            clear.
            </param>
            <param name="item">
            The item that is contained in the
            <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Makes adjustments to the
            <see cref="T:System.Windows.Controls.TreeView" /> control when the
            value of the
            <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property
            changes.
            </summary>
            <param name="e">
            A
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
            that contains data about the change.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.CheckForSelectedDescendents(System.Windows.Controls.TreeViewItem)">
            <summary>
            Select any descendents when adding new TreeViewItems to a TreeView.
            </summary>
            <param name="item">The added item.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.PropagateKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Propagate OnKeyDown messages from the root TreeViewItems to their
            TreeView.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Because Silverlight's ScrollViewer swallows many useful key events
            (which it can ignore on WPF if you override HandlesScrolling or use
            an internal only variable in Silverlight), the root TreeViewItems
            explicitly propagate KeyDown events to their parent TreeView.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event when a key
            is pressed while the control has focus.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e " />is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeView.HandleScrollKeys(System.Windows.Input.Key)">
            <summary>
            Handle keys related to scrolling.
            </summary>
            <param name="key">The key to handle.</param>
            <returns>A value indicating whether the key was handled.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.HandleScrollByPage(System.Boolean)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseMove event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
            event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.HandleMouseButtonDown">
            <summary>
            Provides handling for mouse button events.
            </summary>
            <returns>A value indicating whether the event was handled.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" />
            event when the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property value changes.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            that contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.ChangeSelection(System.Object,System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Change whether a TreeViewItem is selected.
            </summary>
            <param name="itemOrContainer">
            Item whose selection is changing.
            </param>
            <param name="container">
            Container of the item whose selection is changing.
            </param>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.UpdateSelectedValue(System.Object)">
            <summary>
            Update the selected value of the of the TreeView based on the value
            of the currently selected TreeViewItem and the SelectedValuePath.
            </summary>
            <param name="item">
            Value of the currently selected TreeViewItem.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeView.SelectFirstItem">
            <summary>
            Select the first item of the TreeView.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeView.FocusFirstItem">
            <summary>
            Focus the first item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeView.FocusLastItem">
            <summary>
            Focus the last item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="P:System.Windows.Controls.TreeView.SelectedItem">
            <summary>
            Gets the selected item in a
            <see cref="T:System.Windows.Controls.TreeView" />.
            </summary>
            <value>
            The currently selected item or null if no item is selected. The
            default value is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeView.SelectedValue">
            <summary>
            Gets the value of the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property that is specified by the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
            property.
            </summary>
            <value>
            The value of the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property that is specified by the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
            property, or null if no item is selected. The default value is null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
            <summary>
            Gets or sets the property path that is used to get the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />
            property of the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property in a <see cref="T:System.Windows.Controls.TreeView" />.
            </summary>
            <value>
            The property path that is used to get the
            <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />
            property of the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property in a <see cref="T:System.Windows.Controls.TreeView" />. The
            default value is <see cref="F:System.String.Empty" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeView.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the container element generated for each item.
            </summary>
            <value>
            The <see cref="T:System.Windows.Style" /> applied to the container
            element that contains each item.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeView.SelectedContainer">
            <summary>
            Gets the currently selected TreeViewItem container.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.IsSelectedContainerHookedUp">
            <summary>
            Gets a value indicating whether the currently selected TreeViewItem
            container is properly hooked up to the TreeView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.IsSelectionChangeActive">
            <summary>
            Gets or sets a value indicating whether the selected item is
            currently being changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.ItemsControlHelper">
            <summary>
            Gets the ItemsControlHelper that is associated with this control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.IsControlKeyDown">
            <summary>
            Gets a value indicating whether the Control key is currently
            pressed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeView.IsShiftKeyDown">
            <summary>
            Gets a value indicating whether the Shift key is currently pressed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
            <summary>
            Occurs when the value of the
            <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />
            property changes.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.TreeView" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.TreeView" /> to associate
            with the
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:System.Windows.Controls.TreeView" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:System.Windows.Controls.TreeView" /> that is associated
            with 
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains TreeView.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern for the
            <see cref="T:System.Windows.Controls.TreeView" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values that indicates the control pattern.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of the
            <see cref="T:System.Windows.Controls.TreeView" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            </summary>
            <returns>The collection of child elements.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.OwnerTreeView">
            <summary>
            Gets the TreeView that owns this TreeViewAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider
            allows more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItem">
            <summary>
            Provides a selectable item for the
            <see cref="T:System.Windows.Controls.TreeView" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.ExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.HeaderName">
            <summary>
            The name of the Header template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem._expanderButton">
            <summary>
            The ExpanderButton template part is used to expand and collapse the
            TreeViewItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem._headerElement">
            <summary>
            The Header template part is used to distinguish the bound Header
            content of the TreeViewItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem._expansionStateGroup">
            <summary>
            The ExpansionStates visual state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.HasItemsProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnHasItemsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HasItemsProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its HasItems.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpandedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsExpanded.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelected.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnIsSelectionActivePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionActiveProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelectionActive.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItem._parentItemsControl">
            <summary>
            A reference to the parent ItemsControl of a TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            object for the
            <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> control when a
            new control template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnExpansionStateGroupStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Provides handling for the ExpansionStates CurrentChanged event.
            </summary>
            <param name="sender">The ExpansionState VisualStateGroup.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.BringIntoView">
            <summary>
            Scroll the TreeViewItem into view.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to
            display content.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a
            container for content.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a
            <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>
            True if <paramref name="item" /> is a
            <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container element to display the specified
            item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </summary>
            <param name="element">
            The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to
            clear.
            </param>
            <param name="item">
            The item that is contained in the
            <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Makes adjustments to the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> when the value
            of the <see cref="P:System.Windows.Controls.ItemsControl.Items" />
            property changes.
            </summary>
            <param name="e">
            A
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
            that contains data about the change.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
            <summary>
            Raises an
            <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> event
            when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            property changes from false to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
            <summary>
            Raises a
            <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" />
            event when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            property changes from true to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> event
            when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            property changes from false to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" />
            event when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            property changes from true to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.GotFocus" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.LostFocus" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnExpanderGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the ExpanderButton's GotFocus event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseEnter" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeave" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnHeaderMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the Header's MouseLeftButtonDown event.
            </summary>
            <param name="sender">The Header template part.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnExpanderClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the ExpanderButton's Click event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event when the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.HandleDownKey">
            <summary>
            Try moving the focus down from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyUp" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.HandleUpKey">
            <summary>
            Try moving the focus up from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.HandleScrollByPage(System.Boolean,System.Windows.Controls.ScrollViewer,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="viewportHeight">The height of the viewport.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="currentDelta">The height of this item.</param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.CalculateDelta(System.Boolean,System.Windows.FrameworkElement,System.Windows.Controls.ScrollViewer,System.Double,System.Double,System.Double@)">
            <summary>
            Calculate the distance between this TreeViewItem and the item being
            paged from.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="element">The element being paged from.</param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="closeEdge">
            The distance between the top/bottom of one item to the other.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.Select(System.Boolean)">
            <summary>
            Change the selected status of the TreeViewItem.
            </summary>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.UpdateContainsSelection(System.Boolean)">
            <summary>
            Update the ancestors of this item when it changes selection.
            </summary>
            <param name="selected">
            A value indicating whether the item is selected.
            </param>
            <remarks>
            Unselection updates need to occur before selection updates because
            the old and new selected items may share a partial path.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.AllowKeyHandleEvent">
            <summary>
            Determine whether the TreeViewItem should be allowed to handle a key
            event.
            </summary>
            <returns>
            A value indicating whether the key event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.FocusDown">
            <summary>
            Navigate the focus to the next TreeViewItem below this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.FocusInto">
            <summary>
            Navigate the focus to the very last TreeViewItem descendent of the
            this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.FindNextFocusableItem(System.Boolean)">
            <summary>
            Find the next focusable TreeViewItem below this item.
            </summary>
            <param name="recurse">
            A value indicating whether the item should recurse into its child
            items when searching for the next focusable TreeViewItem.
            </param>
            <returns>The next focusable TreeViewItem below this item.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.FindLastFocusableItem">
            <summary>
            Find the last focusable TreeViewItem contained by this item.
            </summary>
            <returns>
            The last focusable TreeViewItem contained by this item.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItem.FindPreviousFocusableItem">
            <summary>
            Find the previous focusable TreeViewItem above this item.
            </summary>
            <returns>
            The previous focusable TreeViewItem above this item.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part is used to expand and
            collapse the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.HeaderElement">
            <summary>
            Gets the Header template part that is used to distinguish the bound
            Header content of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ExpansionStateGroup">
            <summary>
            Gets or sets the ExpansionStates visual state group.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.IgnorePropertyChange">
            <summary>
            Gets or sets a value indicating whether a dependency property change
            handler should ignore the next change notification.  This is used to
            reset the value of properties without performing any of the actions
            in their change handlers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.HasItems">
            <summary>
            Gets a value indicating whether this
            <see cref="T:System.Windows.Controls.TreeViewItem" /> contains
            items.
            </summary>
            <value>
            True if this <see cref="T:System.Windows.Controls.TreeViewItem" />
            contains items; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="P:System.Windows.Controls.ItemsControl.Items" />
            contained by this
            <see cref="T:System.Windows.Controls.TreeViewItem" /> are expanded
            or collapsed.
            </summary>
            <value>
            True to indicate the contents of the
            <see cref="P:System.Windows.Controls.ItemsControl.Items" />
            collection are expanded; false to indicate the items are collapsed.
            The default is false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected.
            </summary>
            <value>
            True if this <see cref="T:System.Windows.Controls.TreeViewItem" />
            is selected; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
            <summary>
            Gets a value indicating whether the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.
            </summary>
            <value>
            True if this <see cref="T:System.Windows.Controls.TreeViewItem" />
            has focus; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ContainsSelection">
            <summary>
            Gets or sets a value indicating whether the TreeView's currently
            selected item is a descendent of this TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.CancelGotFocusBubble">
            <summary>
            Gets or sets a value indicating whether the TreeViewItem should
            ignore the next GotFocus event it receives because it has already
            been handled by one of its children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.RequiresContainsSelectionUpdate">
            <summary>
            Gets or sets a value indicating whether checking ContainsSelection
            should actually perform the update notifications because the item
            was selected before it was in the visual tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.UserInitiatedExpansion">
            <summary>
            Gets or sets a value indicating whether a user initiated action
            caused the IsExpanded property to be set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ParentItemsControl">
            <summary>
            Gets or sets a reference to the parent ItemsControl of a
            TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ParentTreeViewItem">
            <summary>
            Gets a reference to the parent TreeViewItem of this TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.ParentTreeView">
            <summary>
            Gets a reference to the parent TreeView of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.IsRoot">
            <summary>
            Gets a value indicating whether this TreeViewItem is a root of the
            TreeView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItem.CanExpandOnInput">
            <summary>
            Gets a value indicating whether the TreeViewItem can expand when it
            receives appropriate user input.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TreeViewItem.Selected">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            property of a <see cref="T:System.Windows.Controls.TreeViewItem" />
            changes from false to true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" />
            property of a <see cref="T:System.Windows.Controls.TreeViewItem" />
            changes from true to false.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
            <summary>
            Exposes the items in
            <see cref="T:System.Windows.Controls.TreeViewItem" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.TreeViewItem" /> instance
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains TreeViewItem.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.RaiseAutomationIsSelectedChanged(System.Boolean)">
            <summary>
            Raise the IsSelected property changed event.
            </summary>
            <param name="isSelected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a TreeViewItem is expanded or
            collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the TreeViewItem was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the TreeViewItem is expanded.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any selection and then selects the current element.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>
            Scrolls the content area of a container object in order to display
            the control within the visible region (viewport) of the container.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.OwnerTreeViewItem">
            <summary>
            Gets the TreeViewItem that owns this TreeViewItemAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value>
            The state (expanded or collapsed) of the control.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if an item is selected; otherwise, false.</value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and acts as the container for the calling object.
            </summary>
            <value>The UI automation provider.</value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.LengthConverter">
            <summary>
            Converts instances of other types to and from instances of a double that
            represent an object measurement such as a height or width.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.LengthConverter.UnitToPixelConversions">
            <summary>
            Conversions from units to pixels.
            </summary>
        </member>
        <member name="M:System.Windows.LengthConverter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.LengthConverter" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible from a specified type to a
            <see cref="T:System.Double" /> that represents an object
            measurement.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="sourceType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert from.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to values of the
            <see cref="T:System.Double" /> type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="source">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert a measurement to the
            specified type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified measurement to the specified type.
            </summary>
            <param name="typeDescriptorContext">
            An object that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions">
            <summary>
            Numeric utility methods used by controls.  These methods are similar in
            scope to the WPF DoubleUtil class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Determine if one number is greater than another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is greater than the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsLessThanOrClose(System.Double,System.Double)">
            <summary>
            Determine if one number is less than or close to another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is less than or close to the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.AreClose(System.Double,System.Double)">
            <summary>
            Determine if two numbers are close in value.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is close in value to the second, false
            otherwise.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.VisualTreeExtensions">
            <summary>
            Provides useful extensions for working with the visual tree.
            </summary>
            <remarks>
            Since many of these extension methods are declared on types like
            DependencyObject high up in the class hierarchy, we've placed them in
            the Primitives namespace which is less likely to be imported for normal
            scenarios.
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree ancestors of the element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree descendants of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree siblings of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree siblings of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Get the bounds of an element relative to another element.
            </summary>
            <param name="element">The element.</param>
            <param name="otherElement">
            The element relative to the other element.
            </param>
            <returns>
            The bounds of the element relative to another element, or null if
            the elements are not related.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="otherElement"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,System.Action)">
            <summary>
            Perform an action when the element's LayoutUpdated event fires.
            </summary>
            <param name="element">The element.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="action"/> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DockPanel">
            <summary>
            Arranges child elements around the edges of the panel.  Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" />
            dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>
            The <see cref="P:System.Windows.Controls.DockPanel.Dock" /> property
            value for the element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
            <summary>
            Sets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element to the specified dock value.
            </summary>
            <param name="element">
            The element to which the attached property is assigned.
            </param>
            <param name="dock">
            The dock value to assign to the specified element.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.DockProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" />
            attached property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Dock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DockPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.DockPanel" /> in preparation
            for arranging them during the
            <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The area available to the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </param>
            <returns>
            The desired size of the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the child elements of the
            <see cref="T:System.Windows.Controls.DockPanel" /> control.
            </summary>
            <param name="arrangeSize">
            The area in the parent element that the
            <see cref="T:System.Windows.Controls.DockPanel" /> should use to
            arrange its child elements.
            </param>
            <returns>
            The actual size of the
            <see cref="T:System.Windows.Controls.DockPanel" /> after the child
            elements are arranged. The actual size should always equal
            <paramref name="arrangesize" />.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether the last child element
            added to a <see cref="T:System.Windows.Controls.DockPanel" />
            resizes to fill the remaining space.
            </summary>
            <value>
            True if the last element added resizes to fill the remaining space,
            false to indicate the last element does not resize. The default is
            true.
            </value>
        </member>
        <member name="T:System.Windows.Controls.ExpandDirection">
            <summary>
            Specifies the direction in which an
            <see cref="T:System.Windows.Controls.Expander" /> control opens.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Down">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the down direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Up">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the up direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Left">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the left direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Right">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the right direction.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Expander">
            <summary>
            Represents a control that displays a header and has a collapsible
            content window.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.HeaderedContentControl">
            <summary>
            Provides the base implementation for controls that contain a single
            content element and a header.
            </summary>
            <remarks>
            HeaderedContentControl adds Header and HeaderTemplatefeatures to a
            ContentControl. HasHeader and HeaderTemplateSelector are removed for
            lack of support and consistency with other Silverlight controls.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose Header property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose HeaderTemplate property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedContentControl" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets the content for the header of the control.
            </summary>
            <value>
            The content for the header of the control. The default value is
            null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            control's header.
            </summary>
            <value>
            The template that is used to display the content of the control's
            header. The default is null.
            </value>
        </member>
        <member name="F:System.Windows.Controls.Expander.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's used 
            to expand and collapse the ExpandSite, which hosts the content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static function.
            This function validates the new value before calling virtual function OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.IsValidExpandDirection(System.Object)">
            <summary>
            Check whether the passed in value o is a valid ExpandDirection enum value.
            </summary>
            <param name="o">The value to be checked.</param>
            <returns>True if o is a valid ExpandDirection enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Expander" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Expander" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            object for the <see cref="T:System.Windows.Controls.Expander" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanded">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Expanded" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCollapsed">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Collapsed" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Expander.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the
            <see cref="T:System.Windows.Controls.Expander" /> content window
            opens.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.ExpandDirection" />
            values that define which direction the content window opens.  The
            default is
            <see cref="F:System.Windows.Controls.ExpandDirection.Down" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.Expander" /> content window is
            visible.
            </summary>
            <value>
            True if the content window is expanded; otherwise, false. The
            default is false.
            </value>
        </member>
        <member name="E:System.Windows.Controls.Expander.Expanded">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control opens to
            display both its header and content.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Expander.Collapsed">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control closes and
            only the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.Expander" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The element associated with this automation peer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains Expander.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            </summary>
            <param name="pattern">One of the enumeration values.</param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a Expander is expanded or collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the Expander was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the Expander is expanded.
            </param>
        </member>
        <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value>
            The state (expanded or collapsed) of the control.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.BindingSourceEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node. Uses the BindingSource to do the evaluation.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
            <remarks>Mimicks the class BindingEvaluator that uses DataContext
            to do evaluation.</remarks>
        </member>
        <member name="F:System.Windows.Controls.BindingSourceEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingSourceEvaluator class.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Evaluates the specified source.
            </summary>
            <param name="source">The object used as a source for the
            evaluation.</param>
            <returns>The evaluated binding.</returns>
            <remarks>Only uses Path, Converter, ConverterCulture and
            ConverterParameter.</remarks>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.Value">
            <summary>
            Gets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.ValueBinding">
            <summary>
            Gets the value binding that is used as a template
            for the actual evaluation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlExtensions">
            <summary>
            Provides useful extensions to ItemsControl instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the ScrollViewer that contains the containers of an
            ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The ScrollViewer that contains the containers of an ItemsControl, or
            null if a ScrollViewer could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.ScrollViewerExtensions">
            <summary>
            Provides useful extensions to ScrollViewer instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.GetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer)">
            <summary>
            Gets a value indicating whether the ScrollViewer has enabled
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <returns>
            A value indicating whether the ScrollViewer has enabled scrolling
            via the mouse wheel.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.SetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer,System.Boolean)">
            <summary>
            Sets a value indicating whether the ScrollViewer will enable
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="value">
            A value indicating whether the ScrollViewer will enable scrolling
            via the mouse wheel.
            </param>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.IsMouseWheelScrollingEnabledProperty">
            <summary>
            Identifies the IsMouseWheelScrollingEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnIsMouseWheelScrollingEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsMouseWheelScrollingEnabledProperty property changed handler.
            </summary>
            <param name="d">ScrollViewerExtensions that changed its IsMouseWheelScrollingEnabled.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the mouse wheel event.
            </summary>
            <param name="sender">The ScrollViewer.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a vertical offset to fall within the vertical bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to coerce.</param>
            <returns>
            The coerced vertical offset that falls within the ScrollViewer's
            vertical bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a horizontal offset to fall within the horizontal bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to coerce.</param>
            <returns>
            The coerced horizontal offset that falls within the ScrollViewer's
            horizontal bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the left.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the right.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollIntoView(System.Windows.Controls.ScrollViewer,System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollViewer's viewport.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="element">The element to scroll into view.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.CalendarExtensions">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarExtensions._suspendedHandlers">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.IsHandlerSuspended(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="property">Inherited code: Requires comment 2.</param>
            <param name="value">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SuspendHandler(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <param name="suspend">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@,System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 2.</param>
            <param name="shift">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.ContainsAny(System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarInfo)">
            <summary>
            Returns true if any day in the given DateTime range is contained in
            the current CalendarDateRange.
            </summary>
            <param name="value">The current range.</param>
            <param name="range">The range to compare.</param>
            <param name="info">The CalendarInfo.</param>
            <returns>
            A value indicating whether any day in the given DateTime range is\
            contained in the current CalendarDateRange.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDateNullable(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Set the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <param name="date">The date of the button.</param>
        </member>
        <member name="T:System.Windows.Controls.CalendarInfo">
            <summary>
            Provides globalized calendar operations.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.EnsureDateFormatInfo">
            <summary>
            Get the DateFormatInfo and ensure it's not null.
            </summary>
            <returns>The DateFormatInfo.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.Compare(System.DateTime,System.DateTime)">
            <summary>
            Compares two instances of DateTime and returns an integer that
            indicates whether the first instance is earlier than, the same as,
            or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.CompareDays(System.DateTime,System.DateTime)">
            <summary>
            Compares the days of two instances of DateTime and returns an
            integer that indicates whether the first instance is earlier than,
            the same as, or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetMonthDifference(System.DateTime,System.DateTime)">
            <summary>
            Get the number of months between two dates.
            </summary>
            <param name="first">The first date.</param>
            <param name="second">The second date.</param>
            <returns>The number of months between the two dates.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeStart(System.DateTime)">
            <summary>
            Get the start of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The start of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeEnd(System.DateTime)">
            <summary>
            Get the end of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The end of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDayOfWeek(System.DateTime)">
            <summary>
            Get the day of the week of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The day of the week of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInYear(System.DateTime)">
            <summary>
            Get the first day in the year of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInMonth(System.DateTime)">
            <summary>
            Get the first day in the month of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the month of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetShortestDayName(System.Int32)">
            <summary>
            Get the shortest day name for a given day of week.
            </summary>
            <param name="dayOfWeekIndex">Index of the day of week.</param>
            <returns>The shortest day name for a given day of week.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetAbbreviatedMonthName(System.Int32)">
            <summary>
            Get the abbreviated month name for a given month.
            </summary>
            <param name="monthIndex">Index of the month.</param>
            <returns>The abbreviated month name for a given month.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DayToString(System.DateTime)">
            <summary>
            Convert the day of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the day of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.MonthAndYearToString(System.DateTime)">
            <summary>
            Convert the year and month of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>
            String representation of the year and month of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.YearToString(System.DateTime)">
            <summary>
            Convert the year of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DecadeToString(System.Int32,System.Int32)">
            <summary>
            Convert a decade range to a string.
            </summary>
            <param name="decadeStart">The start of the decade.</param>
            <param name="decadeEnd">The end of the decade.</param>
            <returns>String representation of the decade range.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToString(System.DateTime)">
            <summary>
            Convert a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the date.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToLongString(System.DateTime)">
            <summary>
            Convert a DateTime to a long format string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>Long format string representation of the date.</returns>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DaysInWeek">
            <summary>
            Gets the number of days in a week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.FirstDayOfWeek">
            <summary>
            Gets the first day of the week.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CultureCalendarInfo">
            <summary>
            Provides globalized calendar operations based on a specific culture.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the calendar operations.
            </param>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.Culture">
            <summary>
            Gets the culture used to provide the calendar operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GregorianCalendarInfo">
            <summary>
            Provides globalized calendar operations based on the GregorianCalendar.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._calendar">
            <summary>
            The Calendar that provides our date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._formatInfo">
            <summary>
            The DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <remarks>
            Uses the most appropriate GregorianCalendar for
            CultureInfo.CurrentCulture.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the GregorianCalendar and date
            formatting information.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.GregorianCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CalendarDayButtonStyleSelector">
            <summary>
            Provides a way to apply GlobalCalendarDayButton Styles based on custom
            logic. 
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.#ctor">
            <summary>
            Initializes a new instance of the CalendarDayButtonStyleSelector
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.SelectStyle(System.DateTime,System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            When overridden in a derived class, returns a
            GlobalCalendarDayButton Style based on custom logic.
            </summary>
            <param name="day">The day to select a Style for.</param>
            <param name="container">The GlobalCalendarDayButton.</param>
            <returns>A Style for the GlobalCalendarDayButton.</returns>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendar">
            <summary>
            Represents a control that enables a user to select a date by using a
            visual calendar display.
            </summary>
            <remarks>
            <para>
            A GlobalCalendar control can be used on its own, or as a drop-down part of a
            DatePicker control. For more information, see DatePicker.  A GlobalCalendar
            displays either the days of a month, the months of a year, or the years
            of a decade, depending on the value of the DisplayMode property.  When
            displaying the days of a month, the user can select a date, a range of
            dates, or multiple ranges of dates.  The kinds of selections that are
            allowed are controlled by the SelectionMode property.
            </para>
            <para>
            The range of dates displayed is governed by the DisplayDateStart and
            DisplayDateEnd properties.  If DisplayMode is Year or Decade, only
            months or years that contain displayable dates will be displayed.
            Setting the displayable range to a range that does not include the
            current DisplayDate will throw an ArgumentOutOfRangeException.
            </para>
            <para>
            The BlackoutDates property can be used to specify dates that cannot be
            selected. These dates will be displayed as dimmed and disabled.
            </para>
            <para>
            By default, Today is highlighted.  This can be disabled by setting
            IsTodayHighlighted to false.
            </para>
            <para>
            The GlobalCalendar control provides basic navigation using either the mouse or
            keyboard. The following table summarizes keyboard navigation.
            
                Key Combination     DisplayMode     Action
                ARROW               Any             Change focused date, unselect
                                                    all selected dates, and select
                                                    new focused date.
                                                    
                SHIFT+ARROW         Any             If SelectionMode is not set to
                                                    SingleDate or None begin
                                                    selecting a range of dates.
                                                    
                CTRL+UP ARROW       Any             Switch to the next larger
                                                    DisplayMode.  If DisplayMode is
                                                    already Decade, no action.
                                                    
                CTRL+DOWN ARROW     Any             Switch to the next smaller
                                                    DisplayMode.  If DisplayMode is
                                                    already Month, no action.
                                                    
                SPACEBAR            Month           Select focused date.
                
                SPACEBAR            Year or Decade  Switch DisplayMode to the Month
                                                    or Year represented by focused
                                                    item.
                                                    
                CTRL+HOME           Any             Switch DisplayMode to Month,
                                                    show today's date, and try to
                                                    select the date if allowed.
            </para>
            <para>
            XAML Usage for Classes Derived from GlobalCalendar
            If you define a class that derives from GlobalCalendar, the class can be used
            as an object element in XAML, and all of the inherited properties and
            events that show a XAML usage in the reference for the GlobalCalendar members
            can have the same XAML usage for the derived class. However, the object
            element itself must have a different prefix mapping than the controls:
            mapping shown in the usages, because the derived class comes from an
            assembly and namespace that you create and define.  You must define your
            own prefix mapping to an XML namespace to use the class as an object
            element in XAML.
            </para>
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementRoot">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DefaultCalendarInfo">
            <summary>
            The default CalendarInfo used to provide globalized date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarInfoProperty">
            <summary>
            Identifies the CalendarInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CalendarInfoProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its CalendarInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarButtonStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureCalendarButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarButton,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
            <param name="calendarButtonStyle">Inherited code: Requires comment 2.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </summary>
            <remarks>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelectorProperty">
            <summary>
            Identifies the CalendarDayButtonStyleSelector dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarDayButtonStyleOrSelectorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ApplyDayButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Apply a Style to a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarItemStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarItemStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureMonthStyle(System.Windows.Controls.Primitives.GlobalCalendarItem,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="month">Inherited code: Requires comment 1 .</param>
            <param name="monthStyle">Inherited code: Requires comment 2 .</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.IsTodayHighlightedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">
            GlobalCalendar that changed its IsTodayHighlighted.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayModeProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDisplayMode(System.Windows.Controls.CalendarMode)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="mode">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="args">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its FirstDayOfWeek.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidFirstDayOfWeek(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectionModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidSelectionMode(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectedDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its SelectedDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDatesCollectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDate(System.Windows.Controls.GlobalCalendarDateChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateStartProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateStart.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMin(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateEndProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateEnd.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMax(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._isShiftPressed">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ResetStates">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>
            A text representation of the selected date, or an empty string if
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" /> is
            null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.GlobalCalendar" /> object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarAutomationPeer instance if one has
            not been created for the control instance; otherwise, it returns the
            GlobalCalendarAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
             Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.FindDayButtonFromDay(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="day">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UpdateMonths">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedMonthChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedYearChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedYear">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDateSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidKeyboardSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.AddSelection">
            <summary>
            This method adds the days that were selected by Keyboard to the
            SelectedDays Collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessSelection(System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
            <param name="lastSelectedDate">Inherited code: Requires comment 2.</param>
            <param name="index">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.HighlightDays">
            <summary>
            This method highlights the days in MultiSelection mode without
            adding them to the SelectedDates collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UnHighlightDays">
            <summary>
            This method un-highlights the days that were hovered over but not
            added to the SelectedDates collection or un-highlighted the
            previously selected days in SingleRange Mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SortHoverIndexes(System.Int32@,System.Int32@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="endIndex">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnHeaderClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnNextClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnPreviousClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayClick(System.DateTime)">
            <summary>
            If the day is a trailing day, Update the DisplayDate.
            </summary>
            <param name="selectedDate">Inherited code: Requires comment.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnMonthClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayButtonMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessCalendarKey(System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessUpKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessDownKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessLeftKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessRightKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEnterKey">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessHomeKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">
            A value indicating whether the Control key is pressed.
            </param>
            <param name="shift">
            A value indicating whether the Shift key is pressed.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEndKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageDownKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageUpKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessShiftKeyUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment1 .</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Root">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarInfo">
            <summary>
            Gets or sets the CalendarInfo that provides globalized date
            operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.MonthControl">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusCalendarButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelector">
            <summary>
            Gets or sets a CalendarDayButtonStyleSelector that enables an application writer
            to provide custom style-selection logic for the day buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date is
            highlighted.
            </summary>
            <value>
            True if the current date is highlighted; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayMode">
            <summary>
            Gets or sets a value indicating whether the calendar is displayed in
            months, years, or decades.
            </summary>
            <value>
            A value indicating what length of time the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> should display.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek" /> representing the beginning of
            the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDay">
            <summary>
            Gets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectionMode">
            <summary>
            Gets or sets a value that indicates what kind of selections are
            allowed.
            </summary>
            <value>
            A value that indicates the current selection mode. The default is
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.
            </value>
            <remarks>
            <para>
            This property determines whether the GlobalCalendar allows no selection,
            selection of a single date, or selection of multiple dates.  The
            selection mode is specified with the CalendarSelectionMode
            enumeration.
            </para>
            <para>
            When this property is changed, all selected dates will be cleared.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            <value>The date currently selected. The default is null.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is outside the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            -or-
            The given date is in the
            <see cref="P:System.Windows.Controls.GlobalCalendar.BlackoutDates" />
            collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If set to anything other than null when
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" /> is
            set to
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.
            </exception>
            <remarks>
            Use this property when SelectionMode is set to SingleDate.  In other
            modes, this property will always be the first date in SelectedDates.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDates">
            <summary>
            Gets a collection of selected dates.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            object that contains the currently selected dates. The default is an
            empty collection.
            </value>
            <remarks>
            Dates can be added to the collection either individually or in a
            range using the AddRange method.  Depending on the value of the
            SelectionMode property, adding a date or range to the collection may
            cause it to be cleared.  The following table lists how
            CalendarSelectionMode affects the SelectedDates property.
            
                CalendarSelectionMode   Description
                None                    No selections are allowed.  SelectedDate
                                        cannot be set and no values can be added
                                        to SelectedDates.
                                        
                SingleDate              Only a single date can be selected,
                                        either by setting SelectedDate or the
                                        first value in SelectedDates.  AddRange
                                        cannot be used.
                                        
                SingleRange             A single range of dates can be selected.
                                        Setting SelectedDate, adding a date
                                        individually to SelectedDates, or using
                                        AddRange will clear all previous values
                                        from SelectedDates.
                MultipleRange           Multiple non-contiguous ranges of dates
                                        can be selected. Adding a date
                                        individually to SelectedDates or using
                                        AddRange will not clear SelectedDates.
                                        Setting SelectedDate will still clear
                                        SelectedDates, but additional dates or
                                        range can then be added.  Adding a range
                                        that includes some dates that are
                                        already selected or overlaps with
                                        another range results in the union of
                                        the ranges and does not cause an
                                        exception.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.RemovedItems">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDateInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDate">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedMonth">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedYear">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.BlackoutDates">
            <summary>
            Gets a collection of dates that are marked as not selectable.
            </summary>
            <value>
            A collection of dates that cannot be selected. The default value is
            an empty collection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Adding a date to this collection when it is already selected or
            adding a date outside the range specified by DisplayDateStart and
            DisplayDateEnd.
            </exception>
            <remarks>
            <para>
            Dates in this collection will appear as disabled on the calendar.
            </para>
            <para>
            To make all past dates not selectable, you can use the
            AddDatesInPast method provided by the collection returned by this
            property.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            <value>The date to display.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is not in the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />.
            </exception>
            <remarks>
            <para>
            This property allows the developer to specify a date to display.  If
            this property is a null reference (Nothing in Visual Basic),
            SelectedDate is displayed.  If SelectedDate is also a null reference
            (Nothing in Visual Basic), Today is displayed.  The default is
            Today.
            </para>
            <para>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateInternal">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            <value>The first date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeStart">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            <value>The last date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeEnd">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStart">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStartIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEnd">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HasFocusInternal">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsMouseSelection">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DatePickerDisplayDateFlag">
            <summary>
            Gets or sets a value indicating whether DatePicker should change its 
            DisplayDate because of a SelectedDate change on its GlobalCalendar.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.SelectedDatesChanged">
            <summary>
            Occurs when the collection returned by the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDates" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayDateChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            property is changed.
            </summary>
            <remarks>
            This event occurs after DisplayDate is assigned its new value.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayModeChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DayButtonMouseUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.GlobalCalendar" /> types to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> instance to
            associate with the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendar that is associated with
            this GlobalCalendarAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the UIElement that is associated with this
            FrameworkElementAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarAutomationPeer. 
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendar that is associated with this
            GlobalCalendarAutomationPeer.  This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
            <summary>
            Retrieves the UI automation provider for the specified cell.
            </summary>
            <param name="row">
            The ordinal number of the row.
            </param>
            <param name="column">
            The ordinal number of the column.
            </param>
            <returns>
            The UI automation provider for the specified cell.
            </returns>
            <remarks>
            <para>
            Grid coordinates are zero-based. The upper-left cell (or upper-right
            cell, depending on locale) has coordinates (0,0).
            </para>
            <para>
            If a cell is empty, a UI Automation provider must still be returned
            in order to support the ContainingGrid property for that cell.  This
            is possible when the layout of child elements in the grid is similar
            to a ragged array.
            </para>
            <para>
            Hidden rows and columns can be loaded in the tree, depending on the
            provider implementation.  Therefore, they will be reflected in the
            RowCount and ColumnCount properties.  If the hidden rows and columns
            have not yet been loaded, they should not be counted.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
            <summary>
            Retrieves a collection of control-specific view identifiers.
            </summary>
            <returns>
            A collection of values that identifies the views that are available
            for a UI automation element.
            </returns>
            <remarks>
            The collection of view identifiers must be identical across
            instances.  View identifier values can be passed to GetViewName.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
            <summary>
            Retrieves the name of a control-specific view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <returns>A localized name for the view.</returns>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.  The
            collection of view identifiers must be identical across instances.
            View names must be suitable for use in text-to-speech, Braille, and
            other accessible applications.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
            <summary>
            Sets the current control-specific view.
            </summary>
            <param name="viewId">A view identifier.</param>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>
            A collection of UI automation providers.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseSelectionEvents(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raise selection AutomationEvents when the GlobalCalendar's SelectedDates
            collection changes.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseDayButtonSelectionEvent(System.Windows.Controls.GlobalCalendar,System.DateTime,System.Windows.Automation.Peers.AutomationEvents)">
            <summary>
            Raise an automation peer event for the selection of a day button.
            </summary>
            <param name="calendar">
            The GlobalCalendar associated with this automation peer.
            </param>
            <param name="date">The selected date.</param>
            <param name="eventToRaise">The selection event to raise.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
            <summary>
            Gets a collection of UI automation providers that represents all the
            column headers in a table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
            <summary>
            Retrieves a collection of UI automation providers that represents
            all row headers in the table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the GlobalCalendarAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningGrid">
            <summary>
            Gets the current top-level Grid of with the GlobalCalendar.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
            <summary>
            Gets the total number of columns in a grid.
            </summary>
            <value>
            The total number of columns in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
            <summary>
            Gets the total number of rows in a grid.
            </summary>
            <value>
            The total number of rows in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
            <summary>
            Gets the current control-specific view.
            </summary>
            <value>
            The value for the current view of the UI automation element.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows
            more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
            <summary>
            Gets the primary direction of traversal for the table.
            </summary>
            <value>
            The primary direction of traversal.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection">
            <summary>
            Represents a collection of non-selectable dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._owner">
            <summary>
            The GlobalCalendar whose dates this object represents.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._dispatcherThread">
            <summary>
            The dispatcher thread.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> whose dates
            this object represents.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.AddDatesInPast">
            <summary>
            Adds all dates before <see cref="P:System.DateTime.Today" /> to the
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified date.
            </summary>
            <param name="date">The date to search for.</param>
            <returns>
            True if the collection contains the specified date; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified range of dates.
            </summary>
            <param name="start">The start of the date range.</param>
            <param name="end">The end of the date range.</param>
            <returns>
            True if all dates in the range are contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns a value that represents whether this collection contains any
            date in the specified range.
            </summary>
            <param name="range">The range of dates to search for.</param>
            <returns>
            True if any date in the range is contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InsertItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.SetItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InRange(System.Windows.Controls.CalendarDateRange,System.DateTime)">
            <summary>
            Returns a value indicating whether a date is included in the range.
            </summary>
            <param name="range">The range to check.</param>
            <param name="day">The date to check.</param>
            <returns>
            A value indicating whether a date is included in the range.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.IsValid(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="item">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.EnsureValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarButton">
            <summary>
            Represents a button on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isCalendarButtonFocused">
            <summary>
            A value indicating whether the button is focused.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnCreateAutomationPeer">
            <summary>
            Returns a GlobalCalendarButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            GlobalCalendarButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarButtonAutomationPeer instance if
            one has not been created for the GlobalCalendarButton; otherwise, it
            returns the GlobalCalendarButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsCalendarButtonFocused">
            <summary>
            Gets or sets a value indicating whether the button is focused.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" /> types
            to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarButton that is associated
            with this GlobalCalendarButtonAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarButton that is associated with
            this GlobalCalendarButtonAutomationPeer. This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarButton">
            <summary>
            Gets the GlobalCalendarButton to associate with this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>
            The number of rows that are spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>
            True if the element is selected; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>
            The provider that supports
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarDateChangedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
            event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the GlobalCalendarDateChangedEventArgs
            class.
            </summary>
            <param name="removedDate">
            The date that was previously displayed.
            </param>
            <param name="addedDate">The date to be newly displayed.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.RemovedDate">
            <summary>
            Gets the date that was previously displayed.
            </summary>
            <value>
            The date previously displayed.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.AddedDate">
            <summary>
            Gets the date to be newly displayed.
            </summary>
            <value>The new date to display.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton">
            <summary>
            Represents a day on a <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateBlackoutDay">
            <summary>
            Identifies the BlackoutDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateNormalDay">
            <summary>
            Identifies the NormalDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupBlackout">
            <summary>
            Name of the BlackoutDay state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.DefaultContent">
            <summary>
            Default content for the GlobalCalendarDayButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._ignoringMouseOverState">
            <summary>
            A value indicating whether the button should ignore the MouseOver
            visual state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isBlackout">
            <summary>
            A value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isToday">
            <summary>
            A value indicating whether this button represents today.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isCurrent">
            <summary>
            A value indicating whether the button is the focused element on the
            GlobalCalendar control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnCreateAutomationPeer">
            <summary>
            Returns a CalendarDayButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            CalendarDayButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarDayButtonAutomationPeer instance
            if one has not been created for the GlobalCalendarButton; otherwise, it
            returns the CalendarDayButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarDayButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IgnoreMouseOverState">
            <summary>
            Ensure the button is not in the MouseOver state.
            </summary>
            <remarks>
            If a button is in the MouseOver state when a Popup is closed (as is
            the case when you select a date in the DatePicker control), it will
            continue to think it's in the mouse over state even when the Popup
            opens again and it's not.  This method is used to forcibly clear the
            state by changing the CommonStates state group.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsBlackout">
            <summary>
            Gets or sets a value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsToday">
            <summary>
            Gets or sets a value indicating whether this button represents
            today.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the button is the focused
            element on the GlobalCalendar control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            types to UI Automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            instance that is associated with this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern implementation for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarDayButton that is
            associated with this GlobalCalendarDayButtonAutomationPeer.  This method
            is called by GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarDayButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarDayButton that is associated with this
            GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarDayButton that is associated with
            this GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarDayButton that is associated
            with this GlobalCalendarDayButtonAutomationPeer. This method is called by
            GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and to initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clear any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.EnsureSelection">
            <summary>
            Ensure selection of the GlobalCalendarDayButton is possible.
            </summary>
            <returns>
            A value indicating whether selection of the GlobalCalendarDayButton is
            possible.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the column headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the row headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarDayButton">
            <summary>
            Gets the GlobalCalendarDayButton instance that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
            <value>
            The UI Automation provider.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>The number of rows.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if the element is selected; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>The UI Automation provider.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarItem">
            <summary>
            Represents the currently displayed month or year on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementRoot">
            <summary>
            The name of the Root template part.
            </summary>
            <remarks>
            TODO: It appears this template part is no longer used.  Verify with
            compat whether we can remove the attribute.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementHeaderButton">
            <summary>
            The name of the HeaderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementPreviousButton">
            <summary>
            The name of the PreviousButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementNextButton">
            <summary>
            The name of the NextButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDayTitleTemplate">
            <summary>
            The name of the DayTitleTemplate template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementMonthView">
            <summary>
            The name of the MonthView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementYearView">
            <summary>
            The name of the YearView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDisabledVisual">
            <summary>
            The name of the DisabledVisual template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._headerButton">
            <summary>
            The button that allows switching between month mode, year mode, and
            decade mode. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._nextButton">
            <summary>
            The button that displays the next page of the calendar when it is
            clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._previousButton">
            <summary>
            The button that displays the previous page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._dayTitleTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._monthView">
            <summary>
            Hosts the content when in month mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._yearView">
            <summary>
            Hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._disabledVisual">
            <summary>
            The overlay for the disabled state.
            </summary>
            <remarks>
            The disabled visual isn't necessary given that we also have a
            Disabled visual state.  It's only being left in for compatability
            with existing templates.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarDayButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArg">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArgYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDown">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDownYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopLeftMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopRightMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._currentMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PopulateGrids">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDisabledGrid(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isEnabled">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateMonthMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDayTitles">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousMonthDays(System.DateTime)">
            <summary>
            How many days of the previous month need to be displayed.
            </summary>
            <param name="firstOfMonth">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetButtonState(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="childButton">Inherited code: Requires comment 1.</param>
            <param name="dateToAdd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetCalendarDayButtons(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthButtonsForYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeNextButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModePreviousButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearButtons(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModePreviousButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeNextButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearViewSelection(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDecadeMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeHeaderButton(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeNextButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decadeEnd">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModePreviousButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.AddSelection(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="b">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton">
            <summary>
            Gets the button that allows switching between month mode, year mode,
            and decade mode. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton">
            <summary>
            Gets the button that displays the next page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton">
            <summary>
            Gets the button that displays the previous page of the calendar when
            it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView">
            <summary>
            Gets the Grid that hosts the content when in month mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView">
            <summary>
            Gets the Grid that hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Owner">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.CurrentButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GlobalSelectedDatesCollection">
            <summary>
            Represents a set of selected dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._addedItems">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._dispatcherThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isCleared">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isRangeAdded">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._owner">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" />
            associated with this object.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds all the dates in the specified range, which includes the first
            and last dates, to the collection.
            </summary>
            <param name="start">The first date to add to the collection.</param>
            <param name="end">The last date to add to the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearInternal">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.CheckSelectionMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.IsValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemConnectingLineInfo">
            <summary>
            Represents the necessary information to draw connecting lines in a
            TreeViewItem.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.#ctor(System.Windows.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the TreeViewItemConnectingLineInfo
            class.
            </summary>
            <param name="item">The TreeViewItem.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionConnectingLines">
            <summary>
            Position the connecting lines in the TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionVerticalConnectingLine">
            <summary>
            Position the vertical connecting line in the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Item">
            <summary>
            Gets the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.VerticalConnectingLine">
            <summary>
            Gets or sets the vertical connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.HorizontalConnectingLine">
            <summary>
            Gets or sets the horizontal connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.ExpanderButton">
            <summary>
            Gets or sets the expander button of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Header">
            <summary>
            Gets or sets the header of the TreeViewItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewConnectingLines">
            <summary>
            Provides the necessary infrastructure to enable drawing connecting
            lines between the TreeViewItems in a TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetConnectingLineInfo(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the ConnectingLineInfo attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The ConnectingLineInfo property value for the TreeViewItem.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.ConnectingLineInfoProperty">
            <summary>
            Identifies the ConnectingLineInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsVerticalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">The Line from which the property value is read.</param>
            <returns>The IsVerticalConnectingLineOf property value for the Line.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsVerticalConnectingLineOf attached property to a specified Line.
            </summary>
            <param name="element">The Line to which the attached property is written.</param>
            <param name="value">The needed IsVerticalConnectingLineOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty">
            <summary>
            Identifies the IsVerticalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsVerticalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsVerticalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsVerticalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsHorizontalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">
            The Line from which the property value is read.
            </param>
            <returns>
            The IsHorizontalConnectingLineOf property value for the Line.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHorizontalConnectingLineOf attached property
            to a specified Line.
            </summary>
            <param name="element">
            The Line to which the attached property is written.
            </param>
            <param name="value">
            The needed IsHorizontalConnectingLineOf value.
            </param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty">
            <summary>
            Identifies the IsHorizontalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHorizontalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHorizontalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsHorizontalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the value of the IsExpanderButtonOf attached property for a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton from which the property value is read.
            </param>
            <returns>
            The IsExpanderButtonOf property value for the ToggleButton.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsExpanderButtonOf attached property to a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton to which the attached property is written.
            </param>
            <param name="value">The needed IsExpanderButtonOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty">
            <summary>
            Identifies the IsExpanderButtonOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsExpanderButtonOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpanderButtonOfProperty property changed handler.
            </summary>
            <param name="d">
            ToggleButton that changed its IsExpanderButtonOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the IsHeaderOf attached property for a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement from which the property value is read.
            </param>
            <returns>
            The IsHeaderOf property value for the FrameworkElement.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHeaderOf attached property to a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement to which the attached property is written.
            </param>
            <param name="value">The needed IsHeaderOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty">
            <summary>
            Identifies the IsHeaderOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHeaderOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHeaderOfProperty property changed handler.
            </summary>
            <param name="d">
            FrameworkElement that changed its IsHeaderOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemCheckBox">
            <summary>
            Represents a CheckBox whose value is associated with the
            TreeViewExtensions.IsChecked attached property of TreeViewItems.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItemCheckBox._parent">
            <summary>
            The parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemCheckBox class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.AssociateParentTreeViewItem">
            <summary>
            Associate the parent TreeViewItem with the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.OnIsCheckedChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Update the TreeViewItem's IsChecked property when this IsChecked
            property is changed.
            </summary>
            <param name="sender">The CheckBox.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemCheckBox.ParentTreeViewItem">
            <summary>
            Gets the parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewExtensions">
            <summary>
            Provides useful extensions to TreeView and TreeViewItem instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItemsControl(System.Windows.DependencyObject)">
            <summary>
            Get the parent ItemsControl of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The parent ItemsControl of an element, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAncestorItemsControls(System.Windows.DependencyObject)">
            <summary>
            Get the ancestor ItemsControls of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The ancestor ItemsControls of an element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeViewItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeViewItem of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The parent TreeViewItem if found, otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeView(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeView of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The parent TreeView if found, otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the child TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The child TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the items and TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the descendant items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant items and TreeViewItem containers of a
            TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainersIterator(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView or
            TreeViewItem.
            </summary>
            <param name="control">The TreeView or TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView or TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSiblingItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the sibling items and containers of the item.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The sibling items and containers of the item.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainersFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItems already created that are used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            A sequence of TreeViewItems that represent the given item, or an
            empty sequence if none were found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainerFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItem already created that is used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            The TreeViewItems that represents the given item, or null if no
            container was found.
            </returns>
            <remarks>
            If multiple TreeViewItems represent the same item, the first item
            found via a breadth-first search will be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPathIterator(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the item wrapped by this container.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The item wrapped by the container, or null if not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the item of the parent container for a specified
            <paramref name="item" />.
            </summary>
            <param name="view">
            The TreeView containing the <paramref name="item" />.
            </param>
            <param name="item">The child item.</param>
            <returns>
            The item of the parent container for the specified
            <paramref name="item" />, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsRoot(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a root of its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a root of its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsLeaf(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> is not in a TreeView.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedContainer(System.Windows.Controls.TreeView)">
            <summary>
            Get the selected TreeViewItem in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The selected TreeViewItem, or null if no selected item found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetSelectedContainer(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the selected TreeViewItem of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The TreeViewItem to select.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ClearSelection(System.Windows.Controls.TreeView)">
            <summary>
            Clear the selection of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SelectItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Select an item in the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item to select.</param>
            <returns>
            A value indicating whether the item was successfully set as the
            TreeView's SelectedItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Gets the path to the TreeView's selected item.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The path to the TreeView's selected item.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeViewItem,System.Boolean,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Recursively expand or collapse the TreeViewItem and all of its
            descendants.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="depth">
            The number of levels that have already been collapsed or expanded.
            This is used in conjunction with the optional maximumDepth to only
            expand a specified number of layers.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeView,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Expand or collapse all of the descendants of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandAll(System.Windows.Controls.TreeView)">
            <summary>
            Expand all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAll(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandToDepth(System.Windows.Controls.TreeView,System.Int32)">
            <summary>
            Expand a specified number of layers in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="depth">The number of layers to expand.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPathToRoot(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Expand a path from the given item to the root of it's TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="collapseSiblings">
            A value indicating whether to collapse siblings while expanding the
            path.  This will result in only the path from the item to the root
            being expanded.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Expand a path from the TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Expand the path from the SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAllButSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all TreeViewItems except those along the path from the
            TreeView's SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeView,System.Object[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},``0[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsChecked(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the IsChecked attached property for a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The IsChecked property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetIsChecked(System.Windows.Controls.TreeViewItem,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the IsChecked attached property to a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed IsChecked value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.IsCheckedProperty">
            <summary>
            Identifies the IsChecked dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnIsCheckedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsCheckedProperty property changed handler.
            </summary>
            <param name="d">The TreeViewItem that changed IsChecked.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAssociatedCheckBox(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the AssociatedCheckBox attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The AssociatedCheckBox property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetAssociatedCheckBox(System.Windows.Controls.TreeViewItem,System.Windows.Controls.TreeViewItemCheckBox)">
            <summary>
            Sets the value of the AssociatedCheckBox attached property to a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed AssociatedCheckBox value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.AssociatedCheckBoxProperty">
            <summary>
            Identifies the AssociatedCheckBox dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnAssociatedCheckBoxPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AssociatedCheckBoxProperty property changed handler.
            </summary>
            <param name="d">
            The TreeViewItem that changed its AssociatedCheckBox.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView,System.Boolean)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="includeIndeterminate">
            A value indicating whether to include TreeViewItems with an
            indeterminate IsChecked value.
            </param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True or also set to null if indeterminate values are
            included.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedBubbling">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should ignore their notifications or
            process them accordingly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedChildNotifications">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should update their children when their
            IsChecked value has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ObjectCollection">
            <summary>
            Implements a collection of objects.
            </summary>
            <remarks>
            ObjectCollection is intended to simplify the task of populating an
            ItemsSource property in XAML.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <ItemsControl.ItemsSource>
                <controls:ObjectCollection>
                    <TextBlock Text="Object 1" />
                    <TextBlock Text="Object 2" />
                </controls:ObjectCollection>
            </ItemsControl.ItemsSource>
            ]]>
            </code>
            </example>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new ObjectCollection.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemIndentationConverter">
            <summary>
            Used to convert TreeViewItems into a value based on their depth in
            the TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemIndentationConverter
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a TreeViewItem into a value based on the depth of the item
            in the TreeView.
            </summary>
            <param name="value">The TreeViewItem.</param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.  A
            default value of 15.0 will be used if no parameter is provided.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.WrapIndentation(System.Double,System.Type)">
            <summary>
            Wrap the indentation in the desired type.
            </summary>
            <param name="indentation">
            The number of pixels to indent the TreeViewItem.
            </param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an indentation back into a TreeViewItem.  This always throws
            a NotSupportedException.
            </summary>
            <param name="value">The indentation.</param>
            <param name="targetType">The type of the indentation.</param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>Always throws a NotSupportedException.</returns>
        </member>
        <member name="T:System.Windows.Controls.StretchDirection">
            <summary>
            Describes the direction that content is scaled.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
            <summary>
            The content scales upward only when it is smaller than the parent.
            If the content is larger, no scaling downward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
            <summary>
            The content scales downward only when it is larger than the parent.
            If the content is smaller, no scaling upward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.Both">
            <summary>
            The content stretches to fit the parent according to the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Viewbox">
            <summary>
            Defines a content decorator that can stretch and scale a single child to
            fill the available space.
            </summary>
            <remarks>
            Viewbox should inherit from Decorator (which inherits from 
            FrameworkElement), but the closest working base in Silverlight is the 
            ContentControl class.  This provides a number of extra APIs not present 
            in WPF that should be avoided (including the Template property which 
            should not be changed from its default value).  Viewbox has been sealed 
            to prevent the creation of derived classes that depend on these features 
            not available on its WPF counterpart.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.ChildElementName">
            <summary>
            Name of  child element in Viewbox's default template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.DefaultTemplateMarkup">
            <summary>
            XAML markup used to define the write-once Viewbox template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency
            property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its Stretch.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid Stretch enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid Stretch enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchDirectionProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its StretchDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchDirectionValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid StretchDirection enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid StretchDirection enum value, false o/w.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Viewbox" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Viewbox" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child element of a Viewbox to prepare for arranging
            it during the ArrangeOverride pass.
            </summary>
            <remarks>
            Viewbox measures it's child at an infinite constraint; it allows the child to be however large it so desires.
            The child's returned size will be used as it's natural size for scaling to Viewbox's size during Arrange.
            </remarks>
            <param name="availableSize">
            An upper limit Size that should not be exceeded.
            </param>
            <returns>The target Size of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a Viewbox element.
            Viewbox always sets the child to its desired size.  It then computes and applies a transformation
            from that size to the space available: Viewbox's own input size less child margin.
            </summary>
            <param name="finalSize">
            The Size this element uses to arrange its child content.
            </param>
            <returns>
            The Size that represents the arranged size of this Viewbox element
            and its child.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ComputeScaleFactor(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compute the scale factor of the Child content.
            </summary>
            <param name="availableSize">
            Available size to fill with content.
            </param>
            <param name="contentSize">Desired size of the content.</param>
            <returns>Width and Height scale factors.</returns>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.DefaultTemplate">
            <summary>
            Gets or sets the default ControlTemplate of the Viewbox.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.ChildElement">
            <summary>
            Gets or sets the element of the Viewbox that will render the child.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Scale">
            <summary>
            Gets or sets the transformation on the ChildElement used to scale the
            Child content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Child">
            <summary>
            Gets or sets the single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </summary>
            <value>
            The single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </value>
            <remarks>
            Child must be an alias of ContentControl.Content property to ensure 
            continuous namescope, ie, named element within Viewbox can be found.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Stretch">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Stretch" /> mode,
            which determines how content fits into the available space.
            </summary>
            <value>
            A <see cref="T:System.Windows.Media.Stretch" /> mode, which
            determines how content fits in the available space.  The default is
            <see cref="F:System.Windows.Media.Stretch.Uniform" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
            <summary>
            Gets or sets the
            <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />. The default is
            <see cref="F:System.Windows.Controls.StretchDirection.Both" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WrapPanel">
            <summary>
            Positions child elements sequentially from left to right or top to
            bottom.  When elements extend beyond the panel edge, elements are
            positioned in the next row or column.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation
            of arranging them during the
            <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The size available to child elements of the wrap panel.
            </param>
            <returns>
            The size required by the
            <see cref="T:System.Windows.Controls.WrapPanel" /> and its 
            elements.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:System.Windows.Controls.WrapPanel" /> control and its
            child elements.
            </summary>
            <param name="finalSize">
            The area within the parent that the
            <see cref="T:System.Windows.Controls.WrapPanel" /> should use 
            arrange itself and its children.
            </param>
            <returns>
            The actual size used by the
            <see cref="T:System.Windows.Controls.WrapPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:System.Windows.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.Orientation" />
            values.  The default is
            <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_CheckSelectionMode_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_NextButtonName">
            <summary>
              Looks up a localized string similar to next button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnDisplayModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to DisplayMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnFirstDayOfWeekChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to FirstDayOfWeek value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDate property cannot be set when the selection mode is None..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectedDate value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectionModeChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectionMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_PreviousButtonName">
            <summary>
              Looks up a localized string similar to previous button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_UnSelectableDates">
            <summary>
              Looks up a localized string similar to Value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_BlackoutDayHelpText">
            <summary>
              Looks up a localized string similar to Blackout Day - {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_CalendarButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to calendar button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DayButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to day button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DecadeMode">
            <summary>
              Looks up a localized string similar to Decade.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_MonthMode">
            <summary>
              Looks up a localized string similar to Month.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_YearMode">
            <summary>
              Looks up a localized string similar to Year.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarCollection_MultiThreadedCollectionChangeNotSupported">
            <summary>
              Looks up a localized string similar to This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarInfo_DateFormatInfoRequired">
            <summary>
              Looks up a localized string similar to DateFormatInfo cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DateTimeTypeConverter_FormatException">
            <summary>
              Looks up a localized string similar to DateTime value is in the wrong format..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DockPanel_OnDockPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Dock value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewExtensions_GetDepth_NotInTreeView">
            <summary>
              Looks up a localized string similar to The item is not in a TreeView..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnApplyTemplate_OnlyOnce">
            <summary>
              Looks up a localized string similar to The template can only be applied one time..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid StretchDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Stretch value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid length value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnOrientationPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Orientation value &apos;{0}&apos;..
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Xml.Linq.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Linq</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary>Contains the LINQ to XML extension methods.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of elements that contains the ancestors of every node in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the ancestors of every node in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the ancestors of every node in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the ancestors of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of the attributes of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains the attributes of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of the descendant nodes of every document and element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> of the descendant nodes of every document and element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains every element in the source collection, and the descendant nodes of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the descendant elements of every element and document in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the descendent elements of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see