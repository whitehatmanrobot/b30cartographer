thodBase,System.Type)">
            <summary>
            Finds the matching method on the generated type and returns it to the caller.
            </summary>
            <param name="method">The method to find</param>
            <param name="generatedType">The generated type to search</param>
            <returns>The matching method info</returns>
            <exception cref="T:System.ArgumentException">Thrown if the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.FindReplacementMethodOnGeneratedType(System.Reflection.MethodBase,System.Type,System.Boolean)">
            <summary>
            Finds the equivelent method on the generated type.  When throwOnNoMatch is true, the method will throw an exception
            if no method can be found.  Otherwise, it will return null.
            </summary>
            <param name="method">The method to find</param>
            <param name="generatedType">The type to find the method on</param>
            <param name="throwOnNoMatch">When true, an exception will be thrown if no match is found.  Otherwise, it will return null</param>
            <returns>The matching method on the generated type</returns>
            <exception cref="T:System.ArgumentException">Thrown if throwOnNoMatch is true and the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.FindReplacementMethodOnGeneratedType(System.Type[],System.String,System.Type[],System.Type,System.Type,System.Boolean)">
            <summary>
            This overload is used to find replacement methods when the original method info is unknown.  For this search,
            we need the generic arguments, the method name, and the argument types to figure out which method was called.
            </summary>
            <param name="genericArguments">The generic arguments of the method</param>
            <param name="methodName">The name of the method</param>
            <param name="parameterTypes">The types of the parameters of the method</param>
            <param name="generatedType">The generated type to search</param>
            <param name="declaredType">This is the type that declared the method that was invoked</param>
            <param name="throwOnNoMatch">When true, this method will throw an exception if no method can be found.  Otherwise, it will return null</param>
            <returns>A method info that can invoke the method on the generatedType</returns>
            <exception cref="T:System.ArgumentException">Thrown if throwOnNoMatch is true and the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.WriteInt(System.Collections.Generic.List{System.Byte},System.Int32)">
            <summary>
            Utility method that writes a token to the IL byte array.
            </summary>
            <param name="newByteCode">A list of new byte code commands.</param>
            <param name="token">The token to write to the stream.</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractLong(System.Byte[])">
            <summary>
            Extracts a long from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The long we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractInt(System.Byte[])">
            <summary>
            Extracts an int from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The int we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractShort(System.Byte[])">
            <summary>
            Extracts a short from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The int we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GetNonByReferenceType(System.Type,System.Type[])">
            <summary>
            If we have a byref type, then finding its regular type is a real pain in the butt.  
            We have to do some funky type searching to find it.  And sadly, a lot of properties can
            differ between ref and regular types. 
            </summary>
            <param name="type">The reference type to lookup</param>
            <param name="genericArguments">An array of generic arguments</param>
            <returns>The regular, non-byref type of type</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.TemplateClassAttribute">
            <summary>
            The TemplateClass attribute marks a class that as a template for generating code.  TemplateClasses
            generate dynamic classes by having their IL cloned.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateClassAttribute.#ctor(Microsoft.MMF.Generation.EClassTemplateTypes)">
            <summary>
            Creates a new TemplateClass attribute.
            </summary>
            <param name="templateType">The type that this class templates</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.TemplateClassAttribute.Type">
            <summary>
            Gets / sets the class template type.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\m4\doc\m4_V7.pdf ===
%PDF-1.2 6 0 obj <</Length 7 0 R/Filter /FlateDecode>> stream EgnMO 6HqkM? (T'29 l5-<O& endstream endobj 7 0 obj endobj 14 0 obj <</R4 4 0 R>> endobj 15 0 obj <</R9 9 0 R/R13 13 0 R/R11 11 0 R>> endobj 18 0 obj <</Length 19 0 R/Filter /FlateDecode>> stream z.Zo> 3u:5u 6}`I\ ]H!{] m3JJI 0?u,z ;LPk& ]c+qI>\ ,H,}B endstream endobj 19 0 obj endobj 28 0 obj <</R16 16 0 R>> endobj 29 0 obj <</R21 21 0 R/R25 25 0 R/R23 23 0 R/R27 27 0 R>> endobj 32 0 obj <</Length 33 0 R/Filter /FlateDecode>> stream #~M/R6 )BR^MT {>q3L lJuS.M<" ZqFE)" A21~H `$TrBJ pYvSg| Pb<q} 6J3RWHgz q4UAcB+a"F g)D'# h#@+7'\ eNJjuzi 7$@X=n U31W| endstream endobj 33 0 obj endobj 40 0 obj <</R30 30 0 R>> endobj 41 0 obj <</R37 37 0 R/R35 35 0 R/R39 39 0 R>> endobj 44 0 obj <</Length 45 0 R/Filter /FlateDecode>> stream %q CZ rVvW< z3+)G x*c;!( #4ZF) u[epZ k>m\m p^EOx KOCKF CB&G4 =mG<B )ve~p &IlSm8 Zendstream endobj 45 0 obj endobj 52 0 obj <</R42 42 0 R>> endobj 53 0 obj <</R49 49 0 R/R47 47 0 R/R51 51 0 R>> endobj 56 0 obj <</Length 57 0 R/Filter /FlateDecode>> stream Jbv?\ BB__b. DCj2v  _ jv xx:Wy| &I]_+ j'dt@ +5*qQ ^hO]v 9o:v* ALQ/Y zx%S#`# LEz;E \fRc*H O_H<IH /LH~/ F*QWn endstream endobj 57 0 obj endobj 66 0 obj <</R54 54 0 R>> endobj 67 0 obj <</R61 61 0 R/R59 59 0 R/R65 65 0 R/R63 63 0 R>> endobj 70 0 obj <</Length 71 0 R/Filter /FlateDecode>> stream D r)IN >`$(J WOAG\JR [?>|\>- ;7]Ih }Y$gmP& j5o^, ]9%l6 )nuJ"\ rHBL@ EU]9t %1uqR pzDo1 &='v\ AY<}3d 4{F)% yVNsz7. z4qK: endstream endobj 71 0 obj endobj 78 0 obj <</R68 68 0 R>> endobj 79 0 obj <</R75 75 0 R/R73 73 0 R/R77 77 0 R>> endobj 82 0 obj <</Length 83 0 R/Filter /FlateDecode>> stream &ZZpg6 Jh$IJ endstream endobj 83 0 obj endobj 90 0 obj <</R80 80 0 R>> endobj 91 0 obj <</R87 87 0 R/R85 85 0 R/R89 89 0 R>> endobj 5 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 14 0 R /Font 15 0 R /Contents 6 0 R endobj 17 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 28 0 R /Font 29 0 R /Contents 18 0 R endobj 31 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 40 0 R /Font 41 0 R /Contents 32 0 R endobj 43 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 52 0 R /Font 53 0 R /Contents 44 0 R endobj 55 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 66 0 R /Font 67 0 R /Contents 56 0 R endobj 69 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 78 0 R /Font 79 0 R /Contents 70 0 R endobj 81 0 obj <</Type/Page/MediaBox [0 0 595 842] /Rotate 0/Parent 3 0 R /Resources<</ProcSet[/PDF /Text] /ExtGState 90 0 R /Font 91 0 R /Contents 82 0 R endobj 3 0 obj << /Type /Pages /Kids [ 5 0 R 17 0 R 31 0 R 43 0 R 55 0 R 69 0 R 81 0 R ] /Count 7 endobj 1 0 obj <</Type /Catalog /Pages 3 0 R endobj 4 0 obj <</Type/ExtGState/Name/R4/TR/Identity>> endobj 16 0 obj <</Type/ExtGState/Name/R16/TR/Identity>> endobj 30 0 obj <</Type/ExtGState/Name/R30/TR/Identity>> endobj 42 0 obj <</Type/ExtGState/Name/R42/TR/Identity>> endobj 54 0 obj <</Type/ExtGState/Name/R54/TR/Identity>> endobj 68 0 obj <</Type/ExtGState/Name/R68/TR/Identity>> endobj 80 0 obj <</Type/ExtGState/Name/R80/TR/Identity>> endobj 86 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 74 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 60 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 48 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 36 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 20 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 8 0 obj <</Type/FontDescriptor/FontName/Times-Bold>> endobj 87 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R87/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 75 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R75/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 61 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R61/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 49 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R49/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 37 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R37/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 21 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R21/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 9 0 obj <</Subtype/Type1/BaseFont/Times-Bold/Type/Font/Name/R9/FirstChar 32/LastChar 251/Widths[ 250 333 555 500 500 1000 833 333 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 278 500 500 333 333 556 556 250 500 500 500 250 250 540 350 333 500 500 500 1000 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 1000 250 300 250 250 250 250 667 778 1000 330 250 250 250 250 250 722 250 250 250 278 250 250 278 500 722 556] endobj 84 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 72 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 58 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 46 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 34 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 24 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 12 0 obj <</Type/FontDescriptor/FontName/Times-Roman>> endobj 85 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R85/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 73 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R73/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 59 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R59/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 47 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R47/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 35 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R35/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 25 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R25/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 13 0 obj <</Subtype/Type1/BaseFont/Times-Roman/Type/Font/Name/R13/FirstChar 32/LastChar 251/Widths[ 250 333 408 500 500 833 778 333 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 333 500 500 167 500 500 500 500 180 444 500 333 333 556 556 250 500 500 500 250 250 453 350 333 444 444 500 1000 1000 250 444 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 1000 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 611 722 889 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 722 500] endobj 88 0 obj <</Type/FontDescriptor/FontName/Times-Italic>> endobj 64 0 obj <</Type/FontDescriptor/FontName/Times-Italic>> endobj 38 0 obj <</Type/FontDescriptor/FontName/Times-Italic>> endobj 22 0 obj <</Type/FontDescriptor/FontName/Times-Italic>> endobj 10 0 obj <</Type/FontDescriptor/FontName/Times-Italic>> endobj 89 0 obj <</Subtype/Type1/BaseFont/Times-Italic/Type/Font/Name/R89/FirstChar 32/LastChar 251/Widths[ 250 333 420 500 500 833 778 333 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 389 500 500 167 500 500 500 500 214 556 500 333 333 500 500 250 500 500 500 250 250 523 350 333 556 556 500 889 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 889 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 556 722 944 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 667 500] endobj 65 0 obj <</Subtype/Type1/BaseFont/Times-Italic/Type/Font/Name/R65/FirstChar 32/LastChar 251/Widths[ 250 333 420 500 500 833 778 333 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 389 500 500 167 500 500 500 500 214 556 500 333 333 500 500 250 500 500 500 250 250 523 350 333 556 556 500 889 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 889 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 556 722 944 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 667 500] endobj 39 0 obj <</Subtype/Type1/BaseFont/Times-Italic/Type/Font/Name/R39/FirstChar 32/LastChar 251/Widths[ 250 333 420 500 500 833 778 333 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 389 500 500 167 500 500 500 500 214 556 500 333 333 500 500 250 500 500 500 250 250 523 350 333 556 556 500 889 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 889 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 556 722 944 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 667 500] endobj 23 0 obj <</Subtype/Type1/BaseFont/Times-Italic/Type/Font/Name/R23/FirstChar 32/LastChar 251/Widths[ 250 333 420 500 500 833 778 333 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 389 500 500 167 500 500 500 500 214 556 500 333 333 500 500 250 500 500 500 250 250 523 350 333 556 556 500 889 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 889 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 556 722 944 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 667 500] endobj 11 0 obj <</Subtype/Type1/BaseFont/Times-Italic/Type/Font/Name/R11/FirstChar 32/LastChar 251/Widths[ 250 333 420 500 500 833 778 333 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 389 500 500 167 500 500 500 500 214 556 500 333 333 500 500 250 500 500 500 250 250 523 350 333 556 556 500 889 1000 250 500 250 333 333 333 333 333 333 333 333 250 333 333 250 333 333 333 889 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 889 250 276 250 250 250 250 556 722 944 310 250 250 250 250 250 667 250 250 250 278 250 250 278 500 667 500] endobj 76 0 obj <</Type/FontDescriptor/FontName/Symbol>> endobj 62 0 obj <</Type/FontDescriptor/FontName/Symbol>> endobj 50 0 obj <</Type/FontDescriptor/FontName/Symbol>> endobj 26 0 obj <</Type/FontDescriptor/FontName/Symbol>> endobj 77 0 obj <</Subtype/Type1/BaseFont/Symbol/Type/Font/Name/R77/FirstChar 32/LastChar 254/Widths[ 250 333 713 500 549 833 778 439 333 333 500 549 250 549 250 278 500 500 500 500 500 500 500 500 500 500 278 278 549 549 549 444 549 722 667 722 612 611 763 603 722 333 631 722 686 889 722 722 768 741 556 592 611 690 439 768 645 795 611 333 863 333 658 500 500 631 549 549 494 439 521 411 603 329 603 549 549 576 521 549 549 521 549 603 439 576 713 686 493 686 494 480 200 480 549 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 762 620 247 549 167 713 500 753 753 753 753 1042 987 603 987 603 400 549 411 549 549 713 494 460 549 549 549 549 1000 603 1000 658 823 686 795 987 768 768 823 768 768 713 713 713 713 713 713 713 768 713 790 790 890 823 549 250 713 603 603 1042 987 603 987 603 494 329 790 790 786 713 384 384 384 384 384 384 494 494 494 494 250 329 274 686 686 686 384 384 384 384 384 384 494 494 494] endobj 63 0 obj <</Subtype/Type1/BaseFont/Symbol/Type/Font/Name/R63/FirstChar 32/LastChar 254/Widths[ 250 333 713 500 549 833 778 439 333 333 500 549 250 549 250 278 500 500 500 500 500 500 500 500 500 500 278 278 549 549 549 444 549 722 667 722 612 611 763 603 722 333 631 722 686 889 722 722 768 741 556 592 611 690 439 768 645 795 611 333 863 333 658 500 500 631 549 549 494 439 521 411 603 329 603 549 549 576 521 549 549 521 549 603 439 576 713 686 493 686 494 480 200 480 549 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 762 620 247 549 167 713 500 753 753 753 753 1042 987 603 987 603 400 549 411 549 549 713 494 460 549 549 549 549 1000 603 1000 658 823 686 795 987 768 768 823 768 768 713 713 713 713 713 713 713 768 713 790 790 890 823 549 250 713 603 603 1042 987 603 987 603 494 329 790 790 786 713 384 384 384 384 384 384 494 494 494 494 250 329 274 686 686 686 384 384 384 384 384 384 494 494 494] endobj 51 0 obj <</Subtype/Type1/BaseFont/Symbol/Type/Font/Name/R51/FirstChar 32/LastChar 254/Widths[ 250 333 713 500 549 833 778 439 333 333 500 549 250 549 250 278 500 500 500 500 500 500 500 500 500 500 278 278 549 549 549 444 549 722 667 722 612 611 763 603 722 333 631 722 686 889 722 722 768 741 556 592 611 690 439 768 645 795 611 333 863 333 658 500 500 631 549 549 494 439 521 411 603 329 603 549 549 576 521 549 549 521 549 603 439 576 713 686 493 686 494 480 200 480 549 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 762 620 247 549 167 713 500 753 753 753 753 1042 987 603 987 603 400 549 411 549 549 713 494 460 549 549 549 549 1000 603 1000 658 823 686 795 987 768 768 823 768 768 713 713 713 713 713 713 713 768 713 790 790 890 823 549 250 713 603 603 1042 987 603 987 603 494 329 790 790 786 713 384 384 384 384 384 384 494 494 494 494 250 329 274 686 686 686 384 384 384 384 384 384 494 494 494] endobj 27 0 obj <</Subtype/Type1/BaseFont/Symbol/Type/Font/Name/R27/FirstChar 32/LastChar 254/Widths[ 250 333 713 500 549 833 778 439 333 333 500 549 250 549 250 278 500 500 500 500 500 500 500 500 500 500 278 278 549 549 549 444 549 722 667 722 612 611 763 603 722 333 631 722 686 889 722 722 768 741 556 592 611 690 439 768 645 795 611 333 863 333 658 500 500 631 549 549 494 439 521 411 603 329 603 549 549 576 521 549 549 521 549 603 439 576 713 686 493 686 494 480 200 480 549 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 250 762 620 247 549 167 713 500 753 753 753 753 1042 987 603 987 603 400 549 411 549 549 713 494 460 549 549 549 549 1000 603 1000 658 823 686 795 987 768 768 823 768 768 713 713 713 713 713 713 713 768 713 790 790 890 823 549 250 713 603 603 1042 987 603 987 603 494 329 790 790 786 713 384 384 384 384 384 384 494 494 494 494 250 329 274 686 686 686 384 384 384 384 384 384 494 494 494] endobj 2 0 obj <</Producer (AFPL Ghostscript 6.50) >>endobj 0000000000 65535 f  0000021899 00000 n  0000046655 00000 n  0000021798 00000 n  0000021947 00000 n  0000020666 00000 n  0000000015 00000 n  0000001187 00000 n  0000022710 00000 n  0000028752 00000 n  0000037391 00000 n  0000041426 00000 n  0000030119 00000 n  0000036145 00000 n  0000001207 00000 n  0000001237 00000 n  0000022002 00000 n  0000020826 00000 n  0000001289 00000 n  0000004590 00000 n  0000022649 00000 n  0000027755 00000 n  0000037328 00000 n  0000040433 00000 n  0000030057 00000 n  0000035151 00000 n  0000042590 00000 n  0000045653 00000 n  0000004611 00000 n  0000004643 00000 n  0000022059 00000 n  0000020988 00000 n  0000004708 00000 n  0000008402 00000 n  0000029995 00000 n  0000034157 00000 n  0000022588 00000 n  0000026758 00000 n  0000037265 00000 n  0000039440 00000 n  0000008423 00000 n  0000008455 00000 n  0000022116 00000 n  0000021150 00000 n  0000008509 00000 n  0000012396 00000 n  0000029933 00000 n  0000033163 00000 n  0000022527 00000 n  0000025761 00000 n  0000042533 00000 n  0000044651 00000 n  0000012417 00000 n  0000012449 00000 n  0000022173 00000 n  0000021312 00000 n  0000012503 00000 n  0000016528 00000 n  0000029871 00000 n  0000032169 00000 n  0000022466 00000 n  0000024764 00000 n  0000042476 00000 n  0000043649 00000 n  0000037202 00000 n  0000038447 00000 n  0000016549 00000 n  0000016581 00000 n  0000022230 00000 n  0000021474 00000 n  0000016646 00000 n  0000020073 00000 n  0000029809 00000 n  0000031175 00000 n  0000022405 00000 n  0000023767 00000 n  0000042419 00000 n  0000042647 00000 n  0000020094 00000 n  0000020126 00000 n  0000022287 00000 n  0000021636 00000 n  0000020180 00000 n  0000020560 00000 n  0000029747 00000 n  0000030181 00000 n  0000022344 00000 n  0000022770 00000 n  0000037139 00000 n  0000037454 00000 n  0000020580 00000 n  0000020612 00000 n  trailer << /Size 92 /Root 1 0 R /Info 2 0 R startxref 46708 %%EOF %%EOF
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MMF\4.0\Release\Microsoft.MMF.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.MMF</name>
    </assembly>
    <members>
        <member name="T:Microsoft.MMF.StateMachine.ReportGenerator">
            <summary>
            This class is used to generate HTML reports of failed tests.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.ReportGenerator.mXslTransform">
            <summary>
            This is the XSLT file that is used to generate the logs.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ReportGenerator.#cctor">
            <summary>
            Loads the xslt file.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ReportGenerator.GetTestMethodNameFromStackTrace">
            <summary>
            This method looks at the stack trace from the currently executing method.  It traverses down the list until 
            it finds a method that has the TestMethodAttribute defined in its metadata.
            </summary>
            <returns>The name of the test</returns>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ReportGenerator.GenerateMockReport(System.String,Microsoft.MMF.StateMachine.AutomataState,System.Collections.Generic.List{Microsoft.MMF.StateMachine.ExpectationLogEntry})">
            <summary>
            Generates a mock report, which is an HTML document that can be used to view the mock state machine
            and all of the methods and states that it inspected during a replay.
            </summary>
            <param name="testName">The name of the test to generate a report on</param>
            <param name="initialState">The initial state of the recorded state machine</param>
            <param name="logEntries">A list of log entries for each state</param>
            <returns>An HTML report illustrating the failure</returns>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ReportGenerator.GenerateStubReport(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean})">
            <summary>
            Generates a stub report.
            </summary>
            <param name="testName">The name of the test</param>
            <param name="validationMessages">A list of validation messages</param>
            <param name="results">A list of validation results</param>
            <returns>An HTML report illustrating the failure</returns>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ReportGenerator.TransformDocumentIntoHTML(System.Xml.XmlDocument)">
            <summary>
            Transforms an XML document into HTML.
            </summary>
            <param name="document">The document to transform</param>
            <returns>An HTML document in string form</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineVarTranslator">
            <summary>
            Translates the inlinevar instruction.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.Translator">
            <summary>
            A translator is an object that is used to translate a target method into 
            a redirected method.  The translator operates based on the operand type.  
            Depending on the operand type, the translator will do different things.  The 
            redirection context object is used keep track of the data between translator 
            invocations.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.Translator.#ctor">
            <summary>
            Default constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.Translator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the current instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
            
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.Translator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            All subclaases must know how to emit the opcodes that they generated.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator to emit the code for</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.Translator.ExtractIntAt(System.Byte[],System.Int32)">
            <summary>
            Extracts the first four bytes from the byte array starting at the specified index.
            </summary>
            <param name="bytes">The byte array</param>
            <param name="offset">The starting offset</param>
            <returns>An integer</returns>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.Translator.ResolveModule">
            <summary>
            This module is used to resolve tokens.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.Translator.GenericTypeArguments">
            <summary>
            These are the generic type arguments.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.Translator.GenericMethodArguments">
            <summary>
            These are the generic method arguments.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.Translator.ShouldRedirect">
            <summary>
            When true, subclasses should redirect all method calls, stfld and ldfld calls.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineVarTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineVarTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the inlinevar instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineVarTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline var instruction.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.ExpectationViolationException">
            <summary>
            Defines an exception that signifies that an expectation was not met.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.ExpectationViolationException.#ctor(System.String)">
            <summary>
            Creates an expectation violation exception with a specific message.
            </summary>
            <param name="message">The message to create the exception from.</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.ExpectationViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.ExpectationViolationException.SaveReport">
            <summary>
            Saves the report to the current directory.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Exceptions.ExpectationViolationException.HTMLReport">
            <summary>
            Getting this property in the debugger will allow you to view the HTML report without 
            having to save it to disc.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.ObjectWrapper`2">
            <summary>
            Defines the base class for the object wrapper library.
            </summary>
            <typeparam name="T">This is the type that we're wrapping</typeparam>
            <typeparam name="U">This is the type that we refer to T by. They can be different if we are mimicking</typeparam>
        </member>
        <member name="M:Microsoft.MMF.ObjectWrapper`2.#ctor(`1)">
            <summary>
            Creates the mock object wrapper.
            </summary>
            <param name="target">The target object</param>
        </member>
        <member name="M:Microsoft.MMF.ObjectWrapper`2.op_Implicit(Microsoft.MMF.ObjectWrapper{`0,`1})~`1">
            <summary>
            Used to cast the wrapper as an instance of U.
            </summary>
            <param name="wrapper">The object to cast.</param>
            <returns>An instance of U.</returns>
        </member>
        <member name="P:Microsoft.MMF.ObjectWrapper`2.Target">
            <summary>
            Returns the actual mock or stub object that this class wraps.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.ITestHarness">
            <summary>
            Defines a test harness.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedInstances">
            <summary>
            These are the instances that the test harness is redirecting
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedNewTypes">
            <summary>
            This is a collection of types that, when newed, we should redirect.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedNewTypesCallConstructors">
            <summary>
            This dictionary keeps track of whether or not the constructors should
            be called when a dynamically created type is created.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedNewTypesReturnUninitializedObjects">
            <summary>
            This dictionary stores bools that determine whether we should return an uninitialized
            object for a given type when it's being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedStaticTypes">
            <summary>
            Keeps track of all the static types that should be redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedTypes">
            <summary>
            Keeps track of all the types that are redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.RedirectedAssemblies">
            <summary>
            A list of all of the assemblies that a test harness is redirecting into.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.ITestHarness.Scope">
            <summary>
            This is the scope of the redirection test.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.TypeGenerationCache">
            <summary>
            This class is used to cache generated object types that are created from the dynamic type factory.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TypeGenerationCache.mInstance">
            <summary>
            The one and only instance of the cache.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TypeGenerationCache.mCacheEntries">
            <summary>
            This is a list of all the cache entries.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TypeGenerationCache.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TypeGenerationCache.#ctor">
            <summary>
            Creates the cache.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TypeGenerationCache.RegisterType(Microsoft.MMF.Generation.EClassTemplateTypes,Microsoft.MMF.Generation.EMethodTemplateTypes,System.Boolean,System.Type,System.Type,System.Type)">
            <summary>
            Registers a generated object wrapper with the cache.
            </summary>
            <param name="classTemplateType">The class template type</param>
            <param name="methodTemplateType">The method template type</param>
            <param name="includesPrivateMethods">True if the generated type includes private methods</param>
            <param name="interfaceType">The interface type</param>
            <param name="baseClassType">The base class type</param>        
            <param name="generatedType">The generated type</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.TypeGenerationCache.Lookup(Microsoft.MMF.Generation.EClassTemplateTypes,Microsoft.MMF.Generation.EMethodTemplateTypes,System.Boolean,System.Type,System.Type)">
            <summary>
            Looks up a template from the cache.  If it doesn't exist, then it returns null.
            </summary>
            <param name="classTemplateType">The class template type</param>
            <param name="methodTemplateType">The method template type</param>
            <param name="includesPrivateMethods">True if the generated type includes private methods</param>
            <param name="interfaceType">The interface type</param>
            <param name="baseClassType">The base class type</param>
            <returns>The type that was generated, or null if nothing could be found</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry">
            <summary>
            This class represents an entry in the generation cache.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.#ctor">
            <summary>
            Creates the cache entry.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.ClassTemplateType">
            <summary>
            This is the class template type.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.MethodTemplateType">
            <summary>
            This is the method template type.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.BaseType">
            <summary>
            This is the base class type.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.InterfaceType">
            <summary>
            This is the interface type.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.IncludesPrivateMethods">
            <summary>
            Determines whether the generated type includes private methods.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TypeGenerationCache.CacheEntry.GeneratedType">
            <summary>
            This is the generated type.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Templates.StubAssertingListAttribute">
            <summary>
            Defines an attribute that marks a field as a list of assertions for a stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubAssertingListAttribute.#ctor">
            <summary>
            Creates the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.CallBaseMethodPatch">
            <summary>
            Patches a method so that the base methods gets called at the specific point.  The method 
            that is called is assumed to not have a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.IPatch">
            <summary>
            This is the base interface for the generic IPatch interface.  This defines an object that is 
            able to patch the current instruction in a translated method with method-specific, dynamic
            data.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.IPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Defines a patch that can patch code in a dynamically generated method.
            </summary>
            <param name="tracker">The opcode tracker</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.CallBaseMethodPatch.#ctor">
            <summary>
            Creates the patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.CallBaseMethodPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the method to call the base class.
            </summary>
            <param name="tracker">The track to patch the template with</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patcher">
            <summary>
            The patch class is used to mark a point in a template where something should be patched.  The generic parameters 
            in the Patch static method supply the translation API with the data neccessary to figure out which class should be 
            called in order to patch the template with dynamically generated code.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patcher.#ctor">
            <summary>
            Can't be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patcher.PatchWithNoReturnValue``1">
            <summary>
            Instructs the translation API to insert dynamic code at a particlar point in the code.
            </summary>
            <typeparam name="T">The type of patch object</typeparam>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patcher.PatchWithNoReturnValue``2(``1)">
            <summary>
            Instructs the translation API to insert dynamic code at a particlar point in the code.  This 
            patch overload operates in cases where the patch needs to do something with an value on the top 
            of the stack.  Passing an argument into this method allows it the patched code to operate on 
            whatever is on the top of the stack, which will always be an argument into this method.
            </summary>
            <typeparam name="T">The type of patch object</typeparam>
            <typeparam name="U">The type of the parameter to patch</typeparam>
            <param name="u">An instance of U</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patcher.PatchWithReturnValue``2">
            <summary>
            Defines a point in a template where a patch with a return value should be used.  Type T is an IPatch object
            that has a default constructor.  The translation API will dynamically create type T when it is cloning the code,
            and will ask it to patch the code with dynamically generated code.
            
            Type U is the return value from the patched code.  This allows the method to compile as though it were a function call.
            </summary>
            <typeparam name="T">The type of the patch to insert</typeparam>
            <typeparam name="U">The type that the patch will leave on the top of the stack when it's completed</typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patcher.PatchWithReturnValue``3(``2)">
            <summary>
            Sometimes we need a patch that operates on whatever is at the top of the stack.  In order 
            to compile a method so that this object is on the top of the stack when the patch is 
            applied, we need a method argument into the Patch method.  That's where this overload comes 
            in.  The template methods pass the argument into the patch method, and what we end up with 
            is something like this:
            
            ldarg.2
            call Patcher.Patch
            
            The patch can then emit code that does something with whatever was in ldarg.2, such as casting it.
            </summary>
            <typeparam name="T">The patch type</typeparam>
            <typeparam name="U">The return value of the patch</typeparam>
            <typeparam name="V">The argument type of the patch</typeparam>
            <param name="v">An instance of type V</param>
            <returns>An instance of type U</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.FrequentlyUsedMethodCache">
            <summary>
            This class is used to cache frequently used methods in one place, so that we don't need 
            to keep calling GetMethod again and again to get the same commonly used methods.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.GetMethodFromHandleMethod">
            <summary>
            This method is called to get a MethodBase from a method handle.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.GetTypeFromHandleMethod">
            <summary>
            This method gets a type from a handle.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.GetFieldFromHandleMethod">
            <summary>
            This method is used to get a field from runtime type handles.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.GetCurrentMethodMethod">
            <summary>
            This method that returns the MethodInfo from whatever method is currently executing.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.MakeGenericMethodMethod">
            <summary>
            This method is used to make a method generic.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.IsBeingParameterizedMethod">
            <summary>
            This method is used to tell us when we should rethrow an exception in a redirected method-in-test.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.IsDoneMethod">
            <summary>
            This method is used within a parameterized loop to see whether or not we should break back to 
            the top for another iteration.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.MethodInvokeMethodTwoParams">
            <summary>
            This is the invoke method on the MethodBase class that takes just two parameters.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.MethodInvokeMethodFiveParams">
            <summary>
            This is the invoke method on the MethodBase class that takes five parameters.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.ConstructorInvokeOneParam">
            <summary>
            This is the basic invoke method for constructors that takes one parameter.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.ConstructorInvokeFourParams">
            <summary>
            This is the other constructor info override, which is used to invoke a constructor on a specific instance.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.TypeGetTypeOneParam">
            <summary>
            This is the GetType override that takes one parameter.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.TypeGetTypeTwoParams">
            <summary>
            This is the GetType override that takes two parameters.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.TypeGetTypeThreeParams">
            <summary>
            This is the GetType override that takes three parameters.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.FrequentlyUsedMethodCache.#ctor">
            <summary>
            Can't be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.EClassTemplateTypes">
            <summary>
            This enumeration defines the types of class templates that we can define.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EClassTemplateTypes.Mock">
            <summary>
            The class is a mock object template.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EClassTemplateTypes.Stub">
            <summary>
            The class is a stub object template.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EClassTemplateTypes.Patch">
            <summary>
            The class is a patch class.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.EMethodTemplateTypes">
            <summary>
            This enumeration defines the characteristics of a template method.
            The enumeration allows clients to search for a specific template based on
            specific characteristics.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.NoReturnValue">
            <summary>
            Indicates a template that has no return value.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.ReturnValue">
            <summary>
            Indicates a template that has a return value.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.Static">
            <summary>
            The template method is static.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.Mimic">
            <summary>
            The template method is a mimic method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.Partial">
            <summary>
            The template method is for a partial mock.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.Default">
            <summary>
            Indicates that this is the default template.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EMethodTemplateTypes.Constructor">
            <summary>
            Indicates that this template intercepts constructors.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.EThisPointerLocation">
            <summary>
            When we are redirecting new objects, we need to have a way to tell the API where
            the this pointer is.  It could be at the beginning, at the end, or not there at all
            depending on what instruction was used.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EThisPointerLocation.None">
            <summary>
            There is no this pointer.  This occurs when we get a newobj opcode (the most common occurance).
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EThisPointerLocation.AtStart">
            <summary>
            This occurs either when we are newing a value type (via initobj), or when we are invoking a constructor
            from another constructor.  In that case, the this pointer is explicit.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EThisPointerLocation.AtEnd">
            <summary>
            This occurs in a rare fringe case when we are newing a value type via newobj instead of via initobj.  In these cases,
            the MMF needs to add a byref argument to the end of the arg list so that we can set it by reference.  But this is not
            how the compiler does it for us; it won't use a byref arg at all.  We need these because of the blasted 
            visibility checks in CLR4.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.ECallType">
            <summary>
            When we are redirecting into methods, we need to know whether the call was virtual or not.  Otherwise,
            we won't have any idea which method to call: do we call the method on the current instance, or it's base class?
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ECallType.Virtual">
            <summary>
            Signals that the method is being called virtually.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ECallType.NonVirtual">
            <summary>
            Signals that the method is being called directly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ECallType.MockCall">
            <summary>
            Signals that the method call is coming from a mock or stub.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.EExceptionClauseType">
            <summary>
            This enumeration is a special case that the OpCodeTracker uses to know when patched methods
            should define exception blocks.  This allows a patcher to insert an exception block as part
            of their patch.  To do so, Patch with OpCodes.nop and one of these values.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartOfBlock">
            <summary>
            Indicates the start of an exception block.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartExceptionHandler">
            <summary>
            Indicates the start of an exception block handler.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartExceptionFilter">
            <summary>
            Indicates the start of an exception filter.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartExceptionFilterHandler">
            <summary>
            After an exception filter, this value declares the portion of the code that will
            handle the exception should the filter pass.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartFaultHandler">
            <summary>
            Indicates the start of a fault block handler.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.StartFinallyHandler">
            <summary>
            Indicates the start of a finally handler.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.EExceptionClauseType.EndHandler">
            <summary>
            Indicates the end of an exception block handler.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.AutomataState">
            <summary>
            This class represents a state in the finite automata.  When validating the 
            next method call in the mock framework, we try to move from state to state
            using MethodExpectations.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.AutomataState.mIsFinalState">
            <summary>
            This 
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.AutomataState.mLinks">
            <summary>
            A list of links to other automata states.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.AutomataState.mExpectations">
            <summary>
            A list of method expectations that map to each link.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.AutomataState.#ctor">
            <summary>
            Create the AutomataState object and initialize the lists.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.AutomataState.Link(Microsoft.MMF.StateMachine.MethodExpectation,Microsoft.MMF.StateMachine.AutomataState)">
            <summary>
            Links two automata together using a method expectation.
            </summary>
            <param name="expectation">The expectation that moves from one state to the next.</param>
            <param name="state">The state that the expectation, if true, moves us the finate automata to.</param>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.AutomataState.MoveToNextState(System.Object,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Attempts to move to the next method in the automata using the method expectations 
            to pre validate the method call and ensure that it's valid.
            </summary>
            <param name="mockedObject">The type of object that is being mocked</param>
            <param name="calledMethod">The method that is being called</param>
            <param name="args">The arguments of the method</param>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.AutomataState.Expectations">
            <summary>
            This is a list of method expectations.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.AutomataState.Links">
            <summary>
            This is a list of states.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.AutomataState.IsFinalState">
            <summary>
            Returns true if this is the final state.  If we are backpatching, however, then this property
            will get and set the backpatched states final state value instead of ours.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.AutomataState.StateNumber">
            <summary>
            Gets / sets the state number.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.AutomataState.BackpatchState">
            <summary>
            In cases where we embed ordered expectations inside of unordered expectations,
            we end up in a situation where the last state in the ordered list needs to
            act as if it's TWO states.  
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.TemplateMemberAttribute">
            <summary>
            Defines a field, method or property on a template class that should be cloned as part of that template.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateMemberAttribute.#ctor">
            <summary>
            Creates the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.MethodInvokeSpecialCase">
            <summary>
            This special case allows us to handle method invocations via reflection
            using redirection.  When we see a method call to MethodBase.Invoke, we instead
            redirect the call to a trap method on the RedirectionHelper class.  There we can 
            intercept the call and potentially redirect the method 
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.ISpecialCase">
            <summary>
            This interface defines a class that can handle a special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.ISpecialCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if this special case applies to a particular method.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if it matches, otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.ISpecialCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the redirected method using custom code.
            </summary>
            <param name="matchingMethod">The method that matched the special case</param>
            <param name="tracker">The tracker to use to patch the code</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.MethodInvokeSpecialCase.#ctor">
            <summary>
            Creates the special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.MethodInvokeSpecialCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if a method matches this special case.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if it matches; otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.MethodInvokeSpecialCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code so that this method gets redirected to the API.
            </summary>
            <param name="matchingMethod">The method that matched the special case</param>
            <param name="tracker">The tracker to use to patch</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.BeginInvokeSpecialCase">
            <summary>
            Handles calls the Delegate.BeginInvoke.  The runtime doesn't allow a redirected method 
            to be invoked asynchronously via BeginInvoke, so we need to handle it seperately.
            
            Note that BeginInvoke is not defined in Delegate, it's defined on their derivatives.  So we need
            to search for this method by comparing the base type and the method name since there 
            are an unlimited number of defined BeginInvoke methods with different parameters for each of them.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.BeginInvokeSpecialCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Matches any method whose base type is Delegate and whose method name is "BeginInvoke".
            </summary>
            <param name="method">The method to match</param>
            <returns>True if the method matches, otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.BeginInvokeSpecialCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code to call the RedirectionHelper class where we can handle asynchronous calling on
            our own.
            </summary>
            <param name="matchingMethod">The method that we matched</param>
            <param name="tracker">The tracker to patch the code</param>
        </member>
        <member name="T:Microsoft.MMF.Constraints.RegexConstraint">
            <summary>
            This is a constraint that will match a regular expression.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Constraints.Constraint">
            <summary>
            Defines a class that can validate a single argument value using a constraint.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.Constraint.#ctor(System.Int32)">
            <summary>
            Creates the constraint.
            </summary>
            <param name="argIndex">The index of the argument</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.Constraint.Validate(System.Object)">
            <summary>
            Validates the argument.
            </summary>
            <param name="argValue">The argument to validate</param>
            <returns>True if the argument satisfies the constraint.  Otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.MMF.Constraints.Constraint.Index">
            <summary>
            Defines a property that holds the argument index of the argument to accept a constraint on.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constraints.RegexConstraint.mRegEx">
            <summary>
            The regular expression to match
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.RegexConstraint.#ctor(System.Int32,System.String)">
            <summary>
            Creates the regular expression constraint.
            </summary>
            <param name="index">The index of the constraint</param>
            <param name="regex">The regex to match</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.RegexConstraint.Validate(System.Object)">
            <summary>
            Validates the object matches the regular expression.
            </summary>
            <param name="argValue">The argument value to match</param>
            <returns>True if it matches; otherwise false</returns>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.StartUnorderedRecording">
            <summary>
            Starts an unordered recording.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.StartRecording">
            <summary>
            Allows for a more convinient syntax using the using keyword.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.StartRecording.#ctor">
            <summary>
            When created, tells the recorder to start.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.StartRecording.Dispose">
            <summary>
            Tells the Recorder to stop.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.StartRecording.IsOrdered">
            <summary>
            Subclasses need to define for us whether they are ordered or not.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.StartUnorderedRecording.IsOrdered">
            <summary>
            Since this is an unordered recording, this value is false.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineTokTranslator">
            <summary>
            Translates an inline token instruction.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTokTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTokTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline token instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTokTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline tok operand.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineNoneTranslator">
            <summary>
            Translates an inline none instruction.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineNoneTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineNoneTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline none instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineNoneTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits the opcode.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.MockExtensionMethods">
            <summary>
            This class contains all of the extension methods used by the mock system.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``2(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Action{``0})">
            <summary>
            Creates an expectation on the method invoked by handler.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="mock">The mock object to create the expectation on</param>
            <param name="handler">The handler to call</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ExpectsNew``2(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Func{``0})">
            <summary>
            Creates an expectation on a constructor of this mock object.
            </summary>
            <param name="mock">The mock object to create the expectation on</param>
            <param name="handler">A lambda expression that invokes a constructor</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects(Microsoft.MMF.MockObjectWrapper{Microsoft.MMF.MMFStatic},System.Action)">
            <summary>
            Creates an expectation on the static method invoked by the handler.
            </summary>
            <param name="mock">The mock object to create the expectation on</param>
            <param name="handler">A handler to call</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``2(Microsoft.MMF.MockObjectWrapper{``0,``1},System.String,System.Object[])">
            <summary>
            Creates an expectation on any non-public methods by passing in the name of the method to
            set an expectation on.  This will attempt to find the method on the mock object by its name; if it can't find 
            a method by that name, a MockRecordingException exception will be thrown.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="mock">The mock object</param>
            <param name="methodName">The name of the method that we're invoking</param>
            <param name="args">The arguments to the method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.MockRecordingException">Thrown if no method can be found on the mock object by the name passed in by methodName</exception>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``2(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Creates an expectation on any method with no return value that is defined on the mock object.  Use this 
            method in cases where you want to set an expectation on a mock object, but that method is not public and 
            can't be discovered using just it's name.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="mock">The mock object</param>
            <param name="methodBase">The method to invoke</param>
            <param name="args">The arguments to the method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.MockRecordingException">Thrown if the method invoked by calling methodInfo did not actually call the mock object</exception>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``3(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Func{``0,``2})">
            <summary>
            Creates an expectation on the method invoked by the handler that has a return value.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method that we're mocking</typeparam>
            <typeparam name="V">The return type of the method we're setting an expectation on</typeparam>
            <param name="mock">The mock object to create the expectation on</param>
            <param name="handler">The function that has a return value</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``1(Microsoft.MMF.MockObjectWrapper{Microsoft.MMF.MMFStatic},System.Func{``0})">
            <summary>
            Creates an expectation on the static method invoked by the handler that has a return value.
            </summary>
            <typeparam name="V">The return type of the method we're setting an expectation on</typeparam>
            <param name="mock">The mock object to create the expectation on</param>
            <param name="handler">The function that has a return value</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``3(Microsoft.MMF.MockObjectWrapper{``0,``1},System.String,System.Object[])">
            <summary>
            Creates an expectation on any public or non-public method that has a return value by passing in the name of the method to
            set an expectation on.  This will attempt to find the method on the mock object by its name and the types passed into
            this method.  If it can't find a method by that name which takes those types, a MockRecordingException 
            exception will be thrown.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type</typeparam>
            <typeparam name="V">The return type for this method</typeparam>
            <param name="mock">The mock object</param>
            <param name="methodName">The name of the method to set an expectation on</param>
            <param name="args">The arguments to the method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.MockRecordingException">Thrown when no method by methodName could be found on the mock object</exception>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.Expects``3(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Creates an expectation on any method with a return value that is defined on the mock object.  Use this 
            method in cases where you want to set an expectation on a mock object, but that method is not public and 
            can't be discovered using just it's name.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type</typeparam>
            <typeparam name="V">The return type from the method</typeparam>
            <param name="mock">The mock object</param>
            <param name="methodBase">The method to invoke</param>
            <param name="args">The arguments to the method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.MockRecordingException">Thrown if the method invoked by calling methodInfo did not actually call the mock object</exception>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledOneTime``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal 1.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledOneTime``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal 1.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledTwoTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal 2.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledTwoTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times in the current expectation to equal 2.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledThreeTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal 3.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledThreeTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times in the current expectation to equal 3.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledFourTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal 4.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledFourTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times in the current expectation to equal 4.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledXTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Int32)">
            <summary>
            Sets the maximum number of times in the current expectation to equal X.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The number of times this method should be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledXTimes``1(Microsoft.MMF.States.VoidState2{``0},System.Int32)">
            <summary>
            Sets the minimum and maximum number of times in the current expectation to equal x.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The number of times we expect this method to be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastOneTime``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum number of times to 1, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastOneTime``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the minimum number of times to 1, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastTwoTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum number of times to 2, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastTwoTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the minimum number of times to 2, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastThreeTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum number of times to 3, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastThreeTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the minimum number of times to 3, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastFourTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the minimum number of times to 4, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastFourTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the minimum number of times to 4, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastXTimes``1(Microsoft.MMF.States.VoidState2{``0},System.Int32)">
            <summary>
            Sets the minimum number of times to x, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The minimum number of times that this can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAtLeastXTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Int32)">
            <summary>
            Sets the minimum number of times to x, and the max to anything.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The minimum number of times that this can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanOneTime``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the maximum number of times to 1, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanOneTime``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times to 1, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanTwoTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the maximum number of times to 2, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanTwoTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times to 2, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanThreeTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the maximum number of times to 3, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanThreeTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times to 3, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanFourTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Sets the maximum number of times to 4, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanFourTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Sets the maximum number of times to 4, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanXTimes``1(Microsoft.MMF.States.VoidState2{``0},System.Int32)">
            <summary>
            Sets the maximum number of times to x, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The maximum number of times that this can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledNoMoreThanXTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Int32)">
            <summary>
            Sets the maximum number of times to x, and the minimum to 0.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method or property</typeparam>
            <param name="state2">The previous state</param>
            <param name="x">The maximum number of times that this can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledBetweenXAndYTimes``1(Microsoft.MMF.States.VoidState2{``0},System.Int32,System.Int32)">
            <summary>
            Creates an expectation that the current method will be called between x and y times.
            </summary>
            <param name="state2">The previous state</param>
            <param name="x">The minimum number of times the current method can be called</param>
            <param name="y">The maximum number of times the current method can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledBetweenXAndYTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Int32,System.Int32)">
            <summary>
            Creates an expectation that the current method will be called between x and y times.
            </summary>
            <param name="state2">The previous state</param>
            <param name="x">The minimum number of times the current method can be called</param>
            <param name="y">The maximum number of times the current method can be called</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAnyNumberOfTimes``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Allows the method to be called any number of times.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ToBeCalledAnyNumberOfTimes``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Allows the method to be called any number of times.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturns``2(Microsoft.MMF.States.ReturnState2{``0,``1},``1)">
            <summary>
            Sets the return value for an expectation.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="returnValue">The return value</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state2">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturnsByCalling``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Func{System.Object[],``1})">
            <summary>
            Sets a delegate that can supply a return value when the expected method is called.  The delegate 
            can return custom values depending on the methods' arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property that we're mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="returnHandler">A delegate that will supply the return value for this expectation depending on the methods' arguments</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``1(Microsoft.MMF.States.VoidState2{``0},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the mocked method</typeparam>
            <param name="state2">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``1(Microsoft.MMF.States.VoidState3{``0},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state3">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``2(Microsoft.MMF.States.ReturnState3{``0,``1},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the mocked method</typeparam>
            <param name="state3">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``1(Microsoft.MMF.States.VoidState4{``0},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state4">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``2(Microsoft.MMF.States.ReturnState4{``0,``1},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the mocked method</typeparam>
            <param name="state4">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``1(Microsoft.MMF.States.VoidState5{``0},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state5">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.ButThrows``2(Microsoft.MMF.States.ReturnState5{``0,``1},System.Exception)">
            <summary>
            Sets an exception to be thrown if the expectation is matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the mocked method</typeparam>
            <param name="state5">The previous state</param>
            <param name="e">The exception to throw</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringArgumentsAt``1(Microsoft.MMF.States.VoidState2{``0},System.Int32[])">
            <summary>
            Tells the expectation to ignore arguments at specific indexes.  The indexes are 0-based.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>        
            <param name="indexes">The indexes of the arguments to ignore</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringArgumentsAt``2(Microsoft.MMF.States.ReturnState2{``0,``1},System.Int32[])">
            <summary>
            Tells the expectation to ignore arguments at specific indexes.  The indexes are 0-based.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>        
            <param name="indexes">The indexes of the arguments to ignore</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringAllArguments``1(Microsoft.MMF.States.VoidState2{``0})">
            <summary>
            Tells the expectation to ignore all arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringAllArguments``2(Microsoft.MMF.States.ReturnState2{``0,``1})">
            <summary>
            Tells the expectation to ignore all arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.WithValidatingCallback``1(Microsoft.MMF.States.VoidState2{``0},Microsoft.MMF.CallbackHandler)">
            <summary>
            Sets a callback method for the current method expectation.  This callback is invoked in order to validate
            the arguments that were passed into the method.  If the CallbackHandler returns true, the API assumes
            that the expectation was matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="callback">A callback that validates the arguments of the expectation</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.WithValidatingCallback``2(Microsoft.MMF.States.ReturnState2{``0,``1},Microsoft.MMF.CallbackHandler)">
            <summary>
            Sets a callback method for the current method expectation.  This callback is invoked in order to validate
            the arguments that were passed into the method.  If the CallbackHandler returns true, the API assumes
            that the expectation was matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>    
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <param name="callback">A callback that validates the arguments of the expectation</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturns``2(Microsoft.MMF.States.ReturnState3{``0,``1},``1)">
            <summary>
            Sets the return value for this expectation.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state3">The previous state</param>
            <param name="returnValue">The return value</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``2(Microsoft.MMF.States.ReturnState3{``0,``1})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state3">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``1(Microsoft.MMF.States.VoidState3{``0})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state3">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturnsByCalling``2(Microsoft.MMF.States.ReturnState3{``0,``1},System.Func{System.Object[],``1})">
            <summary>
            Sets a delegate that can supply a return value when the expected method is called.  The delegate 
            can return custom values depending on the methods' arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property that we're mocking</typeparam>
            <param name="state3">The previous state</param>
            <param name="returnHandler">A delegate that will supply the return value for this expectation depending on the methods' arguments</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringArgumentsAt``1(Microsoft.MMF.States.VoidState3{``0},System.Int32[])">
            <summary>
            Tells the expectation to ignore arguments at specific indexes.  The indexes are 0-based.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state3">The previous state</param>        
            <param name="indexes">The indexes of the arguments to ignore</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringArgumentsAt``2(Microsoft.MMF.States.ReturnState3{``0,``1},System.Int32[])">
            <summary>
            Tells the expectation to ignore arguments at specific indexes.  The indexes are 0-based.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The previous state</param>        
            <param name="indexes">The indexes of the arguments to ignore</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringAllArguments``1(Microsoft.MMF.States.VoidState3{``0})">
            <summary>
            Tells the expectation to ignore all arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state3">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.IgnoringAllArguments``2(Microsoft.MMF.States.ReturnState3{``0,``1})">
            <summary>
            Tells the expectation to ignore all arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The previous state</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.WithValidatingCallback``1(Microsoft.MMF.States.VoidState3{``0},Microsoft.MMF.CallbackHandler)">
            <summary>
            Sets a callback method for the current method expectation.  This callback is invoked in order to validate
            the arguments that were passed into the method.  If the CallbackHandler returns true, the API assumes
            that the expectation was matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state3">The previous state</param>
            <param name="callback">A callback that validates the arguments of the method</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.WithValidatingCallback``2(Microsoft.MMF.States.ReturnState3{``0,``1},Microsoft.MMF.CallbackHandler)">
            <summary>
            Sets a callback method for the current method expectation.  This callback is invoked in order to validate
            the arguments that were passed into the method.  If the CallbackHandler returns true, the API assumes
            that the expectation was matched.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The previous state</param>
            <param name="callback">A callback that validates the arguments of the method</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturns``2(Microsoft.MMF.States.ReturnState4{``0,``1},``1)">
            <summary>
            Sets the return value for this expectation.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state4">The previous state</param>
            <param name="returnValue">The return value</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``2(Microsoft.MMF.States.ReturnState4{``0,``1})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``1(Microsoft.MMF.States.VoidState4{``0})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturnsByCalling``2(Microsoft.MMF.States.ReturnState4{``0,``1},System.Func{System.Object[],``1})">
            <summary>
            Sets a delegate that can supply a return value when the expected method is called.  The delegate 
            can return custom values depending on the methods' arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property that we're mocking</typeparam>
            <param name="state4">The previous state</param>
            <param name="returnHandler">A delegate that will supply the return value for this expectation depending on the methods' arguments</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturns``2(Microsoft.MMF.States.ReturnState5{``0,``1},``1)">
            <summary>
            Sets the return value for this expectation.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state5">The previous state</param>
            <param name="returnValue">The return value</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``2(Microsoft.MMF.States.ReturnState5{``0,``1})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property we're mocking</typeparam>
            <param name="state5">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndDoesDefault``1(Microsoft.MMF.States.VoidState5{``0})">
            <summary>
            Tells the mock to do the default action when the expectation is met.  If the mock
            is mocking a concrete method, then that method will be called.  Otherwise, the 
            default value will be returned or the method will be eaten.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <param name="state5">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.AndReturnsByCalling``2(Microsoft.MMF.States.ReturnState5{``0,``1},System.Func{System.Object[],``1})">
            <summary>
            Sets a delegate that can supply a return value when the expected method is called.  The delegate 
            can return custom values depending on the methods' arguments.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The return type of the method / property that we're mocking</typeparam>
            <param name="state5">The previous state</param>
            <param name="returnHandler">A delegate that will supply the return value for this expectation depending on the methods' arguments</param>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.InvokeMockMethod``2(Microsoft.MMF.MockObjectWrapper{``0,``1},System.Delegate)">
            <summary>
            This is a private method that invokes a delegate which sets an expectation on a particular
            method on the mock object.
            </summary>
            <typeparam name="T">The object type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="mock">The mock object to invoke the handler on</param>
            <param name="handler">The handler to invoke</param>        
            <exception cref="T:Microsoft.MMF.Exceptions.MockRecordingException">Thrown if the mock method was not actually called.  This can happen if the mock is not being redirected, or if the mocked method is not virtual.</exception>
        </member>
        <member name="M:Microsoft.MMF.MockExtensionMethods.FindNonPublicMethod(System.String,System.Object[],System.Object)">
            <summary>
            This private method is used to search the mock object for a method by its name and parameter types.
            If no method by that name, with those parameters, can be found, then a MockRecordingException is thrown.
            </summary>
            <param name="methodName">The name of the method to find</param>
            <param name="args">The arguments of the method</param>
            <param name="mock">The mock object</param>
            <returns>A MethodInfo that can be used to set an expectation on the mock object</returns>
        </member>
        <member name="T:Microsoft.MMF.ExtensionMethods">
            <summary>
            This class has a number of extension methods used throughout the application.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.ExtensionMethods.Append(System.String,System.String)">
            <summary>
            Used for easy syntax in creating strings with string builder.
            </summary>
            <param name="s">The string to append to.</param>
            <param name="appendedString">This is the string that gets appended to s</param>
            <returns>A new string builder.</returns>
        </member>
        <member name="M:Microsoft.MMF.ExtensionMethods.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            The default foreach extension method does not work with anything other than lists.
            </summary>
            <typeparam name="T">The type of object to enumerate through.</typeparam>
            <param name="enumerable">The enumerable to iterate through.</param>
            <param name="handler">The handler to invoke for each item.</param>
        </member>
        <member name="M:Microsoft.MMF.ExtensionMethods.ToTypeArray(System.Reflection.ParameterInfo[])">
            <summary>
            This helpful utility method converts an array of parameter info's into an
            array of Types.
            </summary>
            <param name="parameters">An array of ParameterInfos</param>
            <returns>An array of Types</returns>
        </member>
        <member name="M:Microsoft.MMF.ExtensionMethods.ReturnType(System.Reflection.MethodBase)">
            <summary>
            The method base class has no ReturnType property.  So, to make parity between
            ConstructorInfo's and MethodBase's, we have this extension method - which 
            returns void if the method base is a ConstructorInfo, or it returns the actual MethodInfo's
            return type if it's a MethodInfo.
            </summary>
            <param name="methodBase">The method base to get a return type for</param>
            <returns>Void if the method is a constructor.  Otherwise, the type returned from the MethodInfo</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.VarArgsParameters">
            <summary>
            This class contains the parameters neccessary for emitting a varargs call.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.VarArgsParameters.#ctor(System.Reflection.MethodInfo,System.Type[])">
            <summary>
            Creates the varargs parameters class.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.VarArgsParameters.Method">
            <summary>
            gets / sets the method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.VarArgsParameters.CallTypes">
            <summary>
            Gets / sets an array of call types.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator">
            <summary>
            This singleton creates and stores the assembly builder that is used to create all of the types
            used by the TestHarness class.  We need to create a singleton instance of the assembly builder so 
            that we can have a single dynamic assembly with a static name  Otherwise, we wouldn't be able to 
            support the InternalsVisibleTo attribute.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.DynamicTypeFactory">
            <summary>
            This is the base class for all factory objects.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.DynamicTypeFactory.mAssemblyName">
            <summary>
            This is the name of the assembly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.DynamicTypeFactory.mAssemblyBuilder">
            <summary>
            The assembly builder is used to create the assembly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.DynamicTypeFactory.mModuleBuilder">
            <summary>
            The module builder creates the module.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.#ctor(System.String)">
            <summary>
            Only subclasses can create this class.
            </summary>
            <param name="name">The name of the dynamic assembly to create</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.Finalize">
            <summary>
            Implement a finalizer that writes the dynamic assembly to disk when the program exits.  This is 
            not the ideal way to do this, but we can't expect individual tests to save this (or know when to,
            since they will run in a random order).
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.RegularMethods(System.Type)">
            <summary>
            Returns an enumerable list of methods that should be mocked or stubbed.
            </summary>
            <param name="type">The type to find methods for</param>
            <returns>An enumerable of methods</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.PrivateMethods(System.Type)">
            <summary>
            Returns an enumerable list of private methods to be mocked or stubbed.  Only private methods
            on the declared type are returned.
            </summary>
            <param name="type">The type to enumerate through</param>
            <returns>An enumerable of methods to mock or stub</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.PublicStaticMethods(System.Type[])">
            <summary>
            Returns an enumerable of public static methods to mock from an array of static types.
            </summary>
            <param name="staticTypes">An array of types to mock</param>
            <returns>An enumerable of public static methods from each of these types to mock</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.PrivateStaticMethods(System.Type[])">
            <summary>
            Returns an enumerable of private static methods to mock from an array of static types.
            </summary>
            <param name="staticTypes">An array of types to mock</param>
            <returns>An enumerable of private static methods from each of these types to mock</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.DynamicTypeFactory.GenerateTypeFromTemplate``2(Microsoft.MMF.Generation.EClassTemplateTypes,Microsoft.MMF.Generation.EMethodTemplateTypes,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo},System.Object[])">
            <summary>
            This is the code that will generate a mock or stub object using the template of a particular type.
            </summary>
            <typeparam name="T">The type of object to generate a mock for</typeparam>
            <typeparam name="U">The base class of the object</typeparam>
            <param name="templateType">The class template type to use</param>
            <param name="methodTemplateType">The method template type to use</param>
            <param name="includePrivateMethods">True if the type that's generated includes private methods</param>
            <param name="methods">A sequence of methods to mock</param>
            <param name="args">The arguments to the constructor</param>
            <returns>An instance of U</returns>
        </member>
        <member name="F:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator.mInstance">
            <summary>
            The one and only instance of this generator.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator.#cctor">
            <summary>
            Creates the singleton instance.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator.#ctor">
            <summary>
            Creates the test harness assembly and make it debuggable!
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator.AssemblyBuilder">
            <summary>
            Returns the assembly builder object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TestHarnessAssemblyGenerator.ModuleBuilder">
            <summary>
            Returns the module builder object.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.TypeSpecialCase">
            <summary>
            Handles the special cases where the code calls Type.GetType(...).
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.TypeSpecialCase.#ctor">
            <summary>
            Creates the special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.TypeSpecialCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if a method matches this special case.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if it matches; otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.TypeSpecialCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code to handle Type.GetType(...).  We need to do this because dynamic assemblies aren't able 
            to resolve modules, so we need to intercept the calls and do it manually.
            </summary>
            <param name="matchingMethod">The method base that was matched</param>
            <param name="tracker">The opcode tracker to use to patch</param>
        </member>
        <member name="T:Microsoft.MMF.Recorder">
            <summary>
            The UnorderedRecording class is defined inside the Recorder class to make sure 
            it can only be created using the StartUnorderedRecording method.
            </summary>
            <summary>
            The OrderedRecording class is defined inside the Recorder class to make sure 
            it can only be created using the StartOrderedRecording method.
            </summary>
            <summary>
            The Recorder class is a singleton that is used to build and walk the state machine that is created
            during mock recordings and replays.  Because the Recorder class is a singleton, only one test can execute 
            at any given time within a single AppDomain.  The Recorder class is currently not thread-safe.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mInstance">
            <summary>
            This is the one and only instance of the recorder.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mIsRecording">
            <summary>
            This is true when the recorder is recording method calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mIsOrdered">
            <summary>
            When true, the recorder will record methods in an ordered fashion.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mWasCalled">
            <summary>
            This bool is used to ensure that mocked or mimicked methods 
            actually call the Recorder.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mReturnValueWasSet">
            <summary>
            This bool is set to true when an expectations return value is set.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mInitialState">
            <summary>
            This is the initial state of the state machine.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mCurrentState">
            <summary>
            This is the current state of the state machine.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mPreviousState">
            <summary>
            The previous state.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mCurrentExpectation">
            <summary>
            This is the current expectation.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mStateCount">
            <summary>
            These are the number of states created in the recorder.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mLog">
            <summary>
            This log records all of the method comparisons that took place during a replay.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mRecordingTypeStack">
            <summary>
            This stack keeps track of whether we are doing ordered or unordered recordings.
            True values indicate that yes, this is an ordered recording.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Recorder.mTransitionStack">
            <summary>
            Whenever we make a transition from one type of recording to another, we
            put the current state on the top of this stack so that we can refer to it later.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.#cctor">
            <summary>
            The static constructor creates the singleton instance of the Recorder object.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.#ctor">
            <summary>
            Only one of these.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.Ordered">
            <summary>
            Returns a new ordered recording.  Any method expectations set before the object returned
            from this method is disposed will have their order recorded.
            </summary>
            <returns>An ordered recording object.</returns>
        </member>
        <member name="M:Microsoft.MMF.Recorder.Unordered">
            <summary>
            Returns a new unordered recording.  Any method expectations set before the object returned
            from this method is disposed will not have their order recorded.
            </summary>
            <returns>An unordered recording object.</returns>
        </member>
        <member name="M:Microsoft.MMF.Recorder.StartOrderedRecording">
            <summary>
            Starts an ordered recording.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.StartUnorderedRecording">
            <summary>
            Starts an unordered recording.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.ValidateReplay">
            <summary>
            Validates that the current state is a final state.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.ValidateReplay(System.Boolean)">
            <summary>
            Validates the replay and saves the replay log to disk.
            </summary>
            <param name="saveReport">When true, a report XML file will be saved in the output directory</param>
        </member>
        <member name="M:Microsoft.MMF.Recorder.Reset">
            <summary>
            Resets the state machine to it's initial state before anything gets recorded.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.RecordMethodCall(System.Object,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Records a method call into the state machine.  This method is called from
            inside the the mock objects, and only during the recording phase.  Calling it creates a new expectation
            on the current state machine.
            </summary>
            <param name="callingObject">The object that we are recording</param>
            <param name="callingMethod">The method that we are recording</param>
            <param name="args">The arguments of the method</param>
        </member>
        <member name="M:Microsoft.MMF.Recorder.BacktrackCurrentExpectation">
            <summary>
            In cases where an expectation is set where the min # of times is 0,
            this method will backtrack the expectation so that it's as though the current
            expectation is an unordered expectation on the previous expectation.  This way something
            like:
            
            mock1.Expects(m => m.Whatever()).ToBeCalledAnyNumberOfTimes();
            mock1.Expects(m => m.Whatever());
            
            Can work properly.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.CheckThatReturnValueWasSet">
            <summary>
            Checks that, if applicable, the last method that had an expectation set on it had its return value set.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.IsOrdered">
            <summary>
            The recorder will record in an ordered fashion when this is true.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.IsRecording">
            <summary>
            True when the recorder is recording.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.WasCalled">
            <summary>
            This is set to true after the RecordNextMethodCall is called,
            and after the AutomataState.MoveToNextState method is called.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.ReturnValueWasSet">
            <summary>
            This is set to true after an expectations return value is set.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.InitialState">
            <summary>
            Gets / sets the initial expectation that is created once a recording begins.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.CurrentExpectation">
            <summary>
            Returns the current method expectation.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.CurrentState">
            <summary>
            Gets / sets the current state.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.PreviousState">
            <summary>
            Gets / sets the previous state.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.StateCount">
            <summary>
            This is the number of states that have been created in the state machine.  
            It should be reset when a new recording begins, and then incremented when a new state
            is added to the recorder.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.ExpectationLog">
            <summary>
            Returns the expectation log.  The log can be used to debug failed tests and to view the history
            of method calls that came into the Recorder class.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.RecordingTypeStack">
            <summary>
            Returns the recording type stack.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Recorder.TransitionStack">
            <summary>
            Returns the transition stack.  These are the states that were current 
            when the order switched from Ordered to Unordered, or vice versa.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Recorder.UnorderedRecording">
            <summary>
            This class is used in using statements to tell the recorder when to 
            switch to unordered method calls.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.UnorderedRecording.#ctor">
            <summary>
            Creates the ordered recorder.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.UnorderedRecording.Dispose">
            <summary>
            When this is disposed of manually, revert to the original value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Recorder.OrderedRecording">
            <summary>
            This class is used in using statements to tell the recorder when to 
            switch to ordered method calls.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.OrderedRecording.#ctor">
            <summary>
            Creates the ordered recorder.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Recorder.OrderedRecording.Dispose">
            <summary>
            When this is disposed of manually, revert to the original value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.ShortInlineBrTargetTranslator">
            <summary>
            Translates an short inline br instruction.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineBrTargetTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineBrTargetTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the ShortInlineBr instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineBrTargetTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an ShortInlineBr operand.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineBrTargetTranslator">
            <summary>
            Translates an inline break statement.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineBrTargetTranslator.#ctor">
            <summary>
            Constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineBrTargetTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline break statement using the specific context.  To make this work, 
            we need to define a label that can be used later for break statements.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineBrTargetTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an opcode whose operand type is InlineBr.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Instruction">
            <summary>
            This is the base class for all instruction objects.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Instruction.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Instruction.OpCode">
            <summary>
            Gets / sets the opcode.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.ExpectationLogEntry">
            <summary>
            This is a data structure that represents a method expecation match or failure.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ExpectationLogEntry.#ctor">
            <summary>
            Creates the expectation log entry.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.FromState">
            <summary>
            This is the state number where we are where we make the comparison.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.ToState">
            <summary>
            This is the state number where we are comparing where we go to.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.Method">
            <summary>
            This is the method that we expected to be called.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.IterationNumber">
            <summary>
            This is the iteration that this method was compared against.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.IsDefaultRange">
            <summary>
            To handle cases where we have expectations that loop back
            on themselves, this bool is set to false to indicate that 
            we should print it out for debug logs.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.Succeeded">
            <summary>
            This is the result of the expectation matching.  True if successful, otherwise,
            false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLogEntry.ErrorMessage">
            <summary>
            This is the error message that explains why the comparison didn't succeed.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.ArgumentObjectArrayPatch">
            <summary>
            This patch generates an object array and pushes the values of the arguments 
            of the mocked method into the array.  The value left on the top of the stack 
            is an object array filled with the arguments' values.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.ArgumentObjectArrayPatch.#ctor">
            <summary>
            Creates the patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.ArgumentObjectArrayPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code with an object array that is filled with the arguments of the translated method.
            </summary>
            <param name="tracker">The opcode tracker</param>
        </member>
        <member name="T:Microsoft.MMF.States.VoidState2`1">
            <summary>
            Represents the second state in the expectation building process.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.VoidState3`1">
            <summary>
            Represents the third state in the expectation building process.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.VoidState4`1">
            <summary>
            Represents the fourth state in the expectation building process.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.VoidState5`1">
            <summary>
            Represents the fifth state in the expectation building process.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.VoidState6`1">
            <summary>
            Represents the sixth state in the expectation building process.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.StubVoidState2`2">
            <summary>
            Represents the second state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="T:Microsoft.MMF.States.StubState`2">
            <summary>
            This is the base class for all stub states.  It has a number of properties that are 
            used to set up the stub during the arrange and assert stages.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.StubState`2.#ctor(`1)">
            <summary>
            Creates the stub state.
            </summary>
            <param name="stubbedObject">The object that is stubbed</param>
        </member>
        <member name="P:Microsoft.MMF.States.StubState`2.StubbedObject">
            <summary>
            Allow the void states to hold a reference to the stubbed object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.StubState`2.IgnoresAllArguments">
            <summary>
            Allows the void states to hold 
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.StubState`2.ArgumentsToIgnore">
            <summary>
            Gets / sets the arguments to ignore array.  
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.StubState`2.Callback">
            <summary>
            Gets / sets a callback delegate that is used to assert each
            method call on a stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.StubVoidState2`2.#ctor(`1)">
            <summary>
            Creates an instance of StubVoidState2.
            </summary>
            <param name="stubbedObject">The obhect that we're stubbings</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubVoidState3`2">
            <summary>
            This is the third state in the stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubVoidState3`2.#ctor(`1)">
            <summary>
            Creates an instance of state3.
            </summary>
            <param name="stubbedObject">The object that we are stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubVoidState4`2">
            <summary>
            This is the fourth state in the stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubVoidState4`2.#ctor(`1)">
            <summary>
            Creates an instance of state4
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubVoidState5`2">
            <summary>
            This is the fifth state in the stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubVoidState5`2.#ctor(`1)">
            <summary>
            Creates an instance of state5.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubVoidState6`2">
            <summary>
            This is the sixth state in the stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubVoidState6`2.#ctor(`1)">
            <summary>
            Creates an instance of state6.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.StartOrderedRecording">
            <summary>
            Starts an ordered recording.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.StartOrderedRecording.IsOrdered">
            <summary>
            The ordered recording is ... ordered.  So this is true.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineStringTranslator">
            <summary>
            Translates an inline string.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineStringTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineStringTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline string.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineStringTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline string opcode.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineMethodTranslator">
            <summary>
            Translates an inline method.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineMethodTranslator.#ctor">
            <summary>
            Default constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineMethodTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline method call.  This is where a lot of the magic happens.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineMethodTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a method call.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.IMock">
            <summary>
            An interface that all mocks implement.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.IGeneratedObject">
            <summary>
            Defines an object that is generated from the MMF.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IGeneratedObject.IsDoneConstructing">
            <summary>
            True when the constructor is done constructing.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IGeneratedObject.AggregatedObject">
            <summary>
            In cases where we are generating a partial mock, this allows 
            us to call an agregated object instead of the base class.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.StackCounter">
            <summary>
            The stack counter object maintains the number of objects that are on the stack,
            based on the instruction that comes into the Increment method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.StackCounter.mResolveModule">
            <summary>
            This is the module that we use to resolve tokens.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.StackCounter.mGenericTypeArguments">
            <summary>
            These are the types of the generic type arguments.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.StackCounter.mGenericMethodTypeArguments">
            <summary>
            These are the types of the generic method arguments.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.StackCounter.#ctor(System.Reflection.Module,System.Type[],System.Type[])">
            <summary>
            Creates the stack counter.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.StackCounter.Update(Microsoft.MMF.Generation.ILInstruction)">
            <summary>
            Updates the count based on the instruction before it operates.
            </summary>
            <param name="instruction">The instruction to update on</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.StackCounter.Reset">
            <summary>
            Resets the counter
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.StackCounter.StackCount">
            <summary>
            Gets / sets the current count.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.NameManager">
            <summary>
            The name manager class helps us generate unique names for auto-generated types.  It's a singleton
            to make sure that in any given app domain, there are no name conflicts between types.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.NameManager.mInstance">
            <summary>
            This is the singleton instance of the manager.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.NameManager.mTypeNameToCountMap">
            <summary>
            This dictionary maps types to the number of instances of a type to make sure that 
            we never generate the same type twice.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.NameManager.#cctor">
            <summary>
            The static constructor creates the NameManager instance.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.NameManager.#ctor">
            <summary>
            Private constructor is only instantiated one time.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.NameManager.GetNameForType(System.Type,Microsoft.MMF.Generation.EClassTemplateTypes)">
            <summary>
            Returns a unique name for a mock or stub of a particular type.
            </summary>
            <param name="type">The type to generate a name for</param>
            <param name="classTemplate">The class template to generate a name for</param>
            <returns>A unique name for this type</returns>
        </member>
        <member name="T:Microsoft.MMF.Constraints.IsOneOfConstraint`1">
            <summary>
            Checks to see the argument value is one of a list of values.
            </summary>
            <typeparam name="T">The type that the argument value must be one of</typeparam>
        </member>
        <member name="F:Microsoft.MMF.Constraints.IsOneOfConstraint`1.mValues">
            <summary>
            A list of values to check against.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.IsOneOfConstraint`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates the constraint out of the specified index and list of values.
            </summary>
            <param name="argIndex">The argument index to check</param>
            <param name="values">An enumerable list of values to check against</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.IsOneOfConstraint`1.Validate(System.Object)">
            <summary>
            Checks to see if the arg value is in the argument array.
            </summary>
            <param name="argValue">The arg value to check</param>
            <returns>True if the argument value is contained inside the array</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineRTranslator">
            <summary>
            Translates an inline R instruction.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineRTranslator.#ctor">
            <summary>
            Nothing to do
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineRTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline R instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineRTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a double.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.SymbolDocumentFactory">
            <summary>
            Much of this class was taken from Mike Stalls debugging blog at:
            
            http://blogs.msdn.com/jmstall/pages/sample-pdb2xml.aspx
            
            The code here instantiates some COM objects that can read symbol information for us and return
            instances of the right objects so that we can read debugging information from the pdb
            files.  But, this stuff is super messy!
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SymbolDocumentFactory.mDispenserClassID">
            <summary>
            This is the GUID for the dispenser class iD (CLSID_CorMetaDataDispenser)
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SymbolDocumentFactory.mDispenserIID">
            <summary>
            This is the GUID for the dispenser metadata class ID (IID_IMetaDataDispenser)
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SymbolDocumentFactory.mImporterIID">
            <summary>
            This is the GUID for the importer ID (IID_IMetaDataImport)
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SymbolDocumentFactory.mDispenserObject">
            <summary>
            This is the dispenser COM object.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SymbolDocumentFactory.#ctor">
            <summary>
            Creates the symbol document factory.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SymbolDocumentFactory.GetReader(System.String)">
            <summary>
            Returns a symbol reader for a particular assembly file.
            </summary>
            <param name="assemblyFilePath">The file path to the assembly that we should load debug information from</param>
            <returns>The symbol reader</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.SymbolDocumentFactory.IMetaDataDispenser">
            <summary>
            One of the interfaces needed to read debug information.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SymbolDocumentFactory.IMetaDataDispenser.DefineScope_Placeholder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SymbolDocumentFactory.IMetaDataDispenser.OpenScope(System.String,System.Int32,System.Guid@,System.Object@)">
            <summary>
            
            </summary>
            <param name="szScope"></param>
            <param name="dwOpenFlags"></param>
            <param name="riid"></param>
            <param name="punk"></param>
        </member>
        <member name="T:Microsoft.MMF.Generation.SymbolDocumentFactory.IMetadataImport">
            <summary>
            One of the interfaces needed to read debug information.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SymbolDocumentFactory.IMetadataImport.Placeholder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Configuration.MMFConfigurationSection">
            <summary>
            This is the configuration section for the MMF project.  Users can add this to to 
            their app.config in order to configure the MMF library to behave a certain way in their tests.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Configuration.MMFConfigurationSection.#ctor">
            <summary>
            Creates the Configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFConfigurationSection.StrongNameGeneratedAssemblies">
            <summary>
            Determines whether the generated assemblies should be strong-named or not.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFConfigurationSection.CleanupExceptions">
            <summary>
            Determines whether exceptions thrown from redirected methods should be cleaned up so that they
            are more readable.  For debug builds, the default value is true.  For release builds, it is false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFConfigurationSection.WriteRecordingLogByDefault">
            <summary>
            Determinse whether the recording logs are saved to disk or not on validation failures.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFConfigurationSection.SaveGeneratedAssembliesToDisk">
            <summary>
            Determinse whether the recording logs are saved to disk or not on validation failures.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.MimicTestExtensionMethods">
            <summary>
            This class contains the extension methods for the Test class.  This is where we run
            tests using the redirection API.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByCalling``3(Microsoft.MMF.States.MimicTestState1{``0,``1},Microsoft.MMF.ObjectWrapper{``1,``2})">
            <summary>
            Tells the test to call a specific mock object in order to redirect a particular object instance or type
            </summary>
            <typeparam name="T">The type of object that the test is testing</typeparam>
            <typeparam name="U">The type of object that we are mocking</typeparam>
            <typeparam name="V">The type that we refer to U by</typeparam>
            <param name="state1">The previous state</param>
            <param name="wrapper">An object wrapper that aggregates the actual mock object</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByCalling``2(Microsoft.MMF.States.MimicTestState1{``0,``1},``1)">
            <summary>
            Tells the test to redirect a call to a particular object instance.  This does not need to be an MMF 
            generated mock or stub - it could be anything!
            </summary>
            <typeparam name="T">The type we are testing</typeparam>
            <typeparam name="U">The type we are redirecting</typeparam>
            <param name="state1">The previous state</param>
            <param name="objectInstance">The instance to call when the redirected object or type is invoked</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByReturning``2(Microsoft.MMF.States.MimicTestState2{``0,``1},Microsoft.MMF.ObjectWrapper{``1,``1})">
            <summary>
            Tells the test to return a strongly typed mock or stub when a new object of type U is created.  The wrapper
            can be null, but cannot be a mimic as the return value will be cast as whatever type the constructor creates.
            </summary>
            <typeparam name="T">The type of object that the test is testing</typeparam>
            <typeparam name="U">The type of object that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="wrapper">An object wrapper that aggregates the actual mock object</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByReturning``2(Microsoft.MMF.States.MimicTestState2{``0,``1},``1)">
            <summary>
            Tells the test to return a particular object or stub when a new object of type U is created.
            </summary>
            <typeparam name="T">The type of object that the test is testing</typeparam>
            <typeparam name="U">The type of object that we are mocking</typeparam>
            <param name="state2">The previous state</param>
            <param name="returnObject">An object to return when a new object is created</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByReturning``2(Microsoft.MMF.States.MimicTestState2{``0,``1},Microsoft.MMF.IMimicObjectWrapper{``1})">
            <summary>
            Tells the test to return a mimic when a new object is newed up.
            </summary>
            <typeparam name="T">The type we are testing</typeparam>
            <typeparam name="U">The type we are returning</typeparam>
            <param name="state2">The second state</param>
            <param name="mimicWrapper">The object that wraps the mimic</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTestExtensionMethods.ByReturningUninitializedObjects``2(Microsoft.MMF.States.MimicTestState2{``0,``1})">
            <summary>
            Tells the test to return an uninitialized object whenever a new instance of type U is created.  Uninitialized
            objects are dynamically created types, but their constructors have not been invoked.  This method is very useful for
            cases where you want to stub a call to constructors of type U but still want to have an object instance returned 
            from the new call.
            </summary>
            <typeparam name="T">The type of object that the test is testing</typeparam>
            <typeparam name="U">The type of object that we are mocking</typeparam>
            <param name="state2">The previous state</param>
        </member>
        <member name="T:Microsoft.MMF.MMFType">
            <summary>
            Defines the base class for all mmf types.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MMFType.#ctor">
            <summary>
            Creates the base type for all MMFTypes.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.MMFStatic">
            <summary>
            This class is a placeholder for creating mocks and stubs that can set expectations on static methods.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MMFStatic.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.MMFStatic.StaticTypes">
            <summary>
            This is an array of all of the types that this static object inherits from.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.MMFMimic">
            <summary>
            This is a placeholder for creating expectations on mimics.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.StoreRefAndOutParametersPatch">
            <summary>
            This patch is used to store out arguments by assigning them to the specified argument indexes.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.StoreRefAndOutParametersPatch.#ctor">
            <summary>
            Creates the store out parameters patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.StoreRefAndOutParametersPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code so that the out parameters array that's on top of the stack has it's indexes at 
            various points assigned to the out parameters that were passed into the method.
            </summary>
            <param name="tracker">The tracker object</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.GetCurrentTypePatch">
            <summary>
            Returns the type that we are currently generating.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetCurrentTypePatch.#ctor">
            <summary>
            Creates the patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetCurrentTypePatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code so that the current type is left on the stack.
            </summary>
            <param name="tracker">The tracker to use to patch the method</param>
        </member>
        <member name="T:Microsoft.MMF.StubFactory">
            <summary>
            This class is used to generate stub objects.  Stubs can be used to follow the arrange / act / assert pattern.
            In the first stage of a unit test a stubs behavior is defined.  In the second phase, the test code is executed,
            and in the third stage, the test asserts (optionally) that certain methods were called a certain number of times 
            and with certain argument values.  By default, stubs do not have any behavior defined at all.  A call to a stubbed 
            method simply calls into the base class, or returns the default value of that method if it is abstract.  Specific 
            behavior must be programmed into the stub during the arrangement phase.  At the same time, stubs will not throw
            any exceptions if they were called without an arrangement set on them.  Stubs do not need to be asserted.  It is up
            to the tester to decide whether they want to assert that a method was called or not.
            
            Stubs do not have any concept of order to them; that is, it is not possible to assert that method A() was called
            on stub 1 before method B() was called on stub 2.  It is also not possible to assert that A was called before B on
            the same object.  To do that sort of testing, use the mock framework.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StubFactory.mInstance">
            <summary>
            This is the one and only instance of the stub factory.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.#cctor">
            <summary>
            The static constructor will create the dyanmic assembly.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.#ctor">
            <summary>
            Can't be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.Create``1(System.Object[])">
            <summary>
            Creates a stub object that extends or implements type T.  Any method calls to virtual methods 
            on type T will be automatically redirected to the stub.  In order to redirect method calls to 
            non-virtual methods, the stub will need to be used within a Test.
            </summary>
            <typeparam name="T">The type to generate and return</typeparam>
            <param name="args">These are the arguments for the constructor of the stub</param>
            <returns>A stub object wrapper</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.DynamicTypeCreationException">Thrown if T is sealed</exception>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateMimic``1">
            <summary>
            Creates a stub mimic object of type T.  The mimic will not inherit from T in any way.  Instead,
            it will simply copy all of the method signatures and names from T and implement stubbed
            versions of them instead.  The dynamic keyword in .NET 4.0 allows stub mimics to be used in place
            of the objects they are stubbing since the method calls are determined dynamically at runtime.
            MimicTests also allow users to manually map object instances to mimics that define the same 
            methods.
            </summary>
            <typeparam name="T">The type we are stubbing</typeparam>
            <returns>A stub object wrapper</returns>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateMimic``1(System.Boolean)">
            <summary>
            Creates a stub mimic out of object T. The extra boolean in the method parameters determines whether the 
            mimic also implements the private methods of the target type T.  By default, the mimic not implement private 
            methods, but you can change this behavior by passing true into this method.
            </summary>
            <typeparam name="T">The type to mimic</typeparam>
            <param name="includePrivateMethods">Determines whether the mimic should also mock private methods on type T</param>
            <returns>A stub object wrapper</returns>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateMimic``1(``0)">
            <summary>
            Creates a stub mimic object of type T that aggregates another object.  Normally, when a mimic is created,
            any non-stubbed method will return the default value of that method type - or just stub the call by default. 
            That happens because the mimic does not inherit from what it's mimicking.  So in order to have a default implementation
            called in the event that a method isn't stubbed, this overload will create a mimic that aggregates another object of
            type T which will be called in these cases.
            </summary>
            <typeparam name="T">The type we are stubbing</typeparam>
            <param name="aggregatedObject">An instance of T to be called for all non-stubbed method calls</param>
            <returns>A stub object wrapper</returns>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateMimic``1(System.Boolean,``0)">
            <summary>
            Creates a new partial mimic of type T that optionally implements the private methods on type T.
            </summary>
            <typeparam name="T">The type to mimic</typeparam>
            <param name="includePrivateMethods">Determines whether the mimic should also mock private methods on type T</param>
            <param name="aggregatedObject">An instance of T to be called for all non-stubbed method calls</param>
            <returns>A stub object wrapper</returns>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateStatic(System.Type[])">
            <summary>
            Creates a stub object wrapper that can be used to stub the static methods on the types that are passed 
            into this method.  If the invoked method has not been stubbed, the stub will call the static method
            instead.
            </summary>
            <param name="staticTypes">A list of static types to stub</param>
            <returns>A stub object wrapper that can stub each of these types</returns>
        </member>
        <member name="M:Microsoft.MMF.StubFactory.CreateStatic(System.Boolean,System.Type[])">
            <summary>
            Creates a stub object wrapper that can be used to stub the static methods on the types that are passed in.
            The includePrivateMethods bool allows users to stub private methods as well as public ones.
            </summary>
            <param name="includePrivateMethods">When true, the stub will include the private methods on the types that passed in</param>
            <param name="staticTypes">An array of types to stub</param>
            <returns>A stub object wrapper that can stub each of these types</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.TranslatorFactory">
            <summary>
            This class is used to return a specific factory for a specific operand type.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TranslatorFactory.mShouldRedirect">
            <summary>
            When true, the translators should redirect method calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TranslatorFactory.mResolveModule">
            <summary>
            This is the module used to resolve fields, methods, etc.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TranslatorFactory.mGenericTypeArguments">
            <summary>
            These are the generic type arguments.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TranslatorFactory.mGenericMethodArguments">
            <summary>
            These are the generic method types.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TranslatorFactory.#ctor(System.Reflection.Module,System.Type[],System.Type[],System.Boolean)">
            <summary>
            Creates the factory.
            </summary>
            <param name="resolveModule">The module used to resolve tokens</param>
            <param name="genericOwnerTypes">The type params for the generic type</param>
            <param name="genericMethodTypes">The type params for the generic method</param>
            <param name="shouldRedirect">When true, the translators will redirect code to use reflection instead of what it was compiled against</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.TranslatorFactory.GetTranslator(Microsoft.MMF.Generation.Instruction)">
            <summary>
            Returns a specific translator for a given operand type.
            </summary>
            <param name="instruction">The instruction to get a translator for</param>
            <returns>An ITranslator object that can translate the current instruction</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.RedirectionHelper">
            <summary>
            This class contains a number of helper methods that the redirection API will call instead 
            of the compiled opcodes.  This allows us to get around some issues with visibility checks
            that cropped up in CLR4.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_ISINST">
            <summary>
            This is the IsInst method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_NEWARR">
            <summary>
            This is the newarr method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_THROW">
            <summary>
            This method traps calls to the throw opcode.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_BOX">
            <summary>
            This is the box method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_UNBOX">
            <summary>
            This is the unbox method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_LDFLD">
            <summary>
            This method traps all ldfld calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_LDFLDA">
            <summary>
            This traps all ldflda calls so that we can compute the address of a field.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_STFLD">
            <summary>
            This method traps all stfld calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_LDFTN">
            <summary>
            This method traps all ldftn calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_LDVIRTFTN">
            <summary>
            This method traps all ldvirtldftn calls.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_START_REDIRECTION">
            <summary>
            This method is called when a profiled method starts.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_END_REDIRECTION">
            <summary>
            This method is called when a profiled method ends.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_METHOD">
            <summary>
            This method is used to trap method calls for redirected methods.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_METHOD_INVOKE_METHOD">
            <summary>
            This method is used to trap method calls to the reflection API.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_TYPE_GETTYPE_METHOD">
            <summary>
            This is the method that is used to handle calls to Type.GetType(string).
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_DELEGATE_BEGIN_INVOKE">
            <summary>
            This is the method that is used to handle calls to Delegate.BeginInvoke(...)
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.TRAP_NEW">
            <summary>
            This method is used to trap new object calls for redirected methods.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.#cctor">
            <summary>
            Creates the redirection helper.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.#ctor">
            <summary>
            Nothing to do.  can't be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapIsInst(System.Object,System.RuntimeTypeHandle)">
            <summary>
            This method replaces the isinst opcode, which now checks visibility of the type
            when it executes.  Instead of emitting isinst, redirection will emit ldtoken and a 
            method call to this method.  ldtoken is allowed in the CLR4 rules, and this method 
            checks whether o1 is an instance of a given type using reflection.
            </summary>
            <param name="instance">The instance to check</param>
            <param name="typeHandle">The type handle to check</param>
            <returns>True if the object can be assigned to a given type</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapNewarr(System.Int32,System.RuntimeTypeHandle)">
            <summary>
            Instantiates an array of a certain type with a certain dimension using reflection.
            </summary>
            <param name="size">The size of the array</param>
            <param name="typeHandle">The type of the array to create</param>
            <returns>An array of a certain size that contains a certain type</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapBox()">
            <summary>
            Boxes a value type programatically to avoid visibility checks.
            </summary>        
            <returns>A boxed version of the value type that was passed in</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapUnbox()">
            <summary>
            Allows us to unbox an object and set the value directly.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapLdfld()">
            <summary>
            Grabs the value of a field.  If the field is a reference type, then it is returned.
            Otherwise, this method expects the value type to be passed in by reference, where it will
            be set.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapStfld()">
            <summary>
            Stores the value of a field into the object passed into this method.  The object can be a reference 
            or value type, it doesn't matter.  
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapLdflda()">
            <summary>
            Traps the ldflda opcodes.  The first arg should be the instance, or null if the field is static.
            The second arg should either be an IntPtr or an object reference.
            </summary>
            <returns>A pointer to the field</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapLdftn(System.Reflection.MethodBase)">
            <summary>
            Traps a call to the ldftn opcode and determines whether the method should be redirected 
            or not.
            </summary>
            <param name="methodBase">A method to return the address for</param>
            <returns>The address of a method to invoke</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapLdvirtftn(System.Object,System.Reflection.MethodBase)">
            <summary>
            Traps a call to the ldvirtftn method, which occurs when we are loading a function 
            pointer to a virtual method.
            </summary>
            <param name="target">The object where the method is being loaded from</param>
            <param name="methodBase">The method to load</param>
            <returns>A function pointer to the method</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapStartRedirection()">
            <summary>
            This method is called to redirect a root method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapEndRedirection()">
            <summary>
            This method is called when a profiled method ends.  This is how we will notify any listeners via the 
            profiler API that the method is finished.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapMethod()">
            <summary>
            Traps a method call from a redirected method.  The arglist parameter allows us to handle any number of 
            arbitrary arguments.  The last method should always be the MethodBase that we're trapping.
            </summary>        
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapReflectionInvocation()">
            <summary>
            Traps a method call to a reflection invocation.  There are a number of methods that this helper traps, 
            depending on the overridden method.  ConstructorInfo objects define their own overrides, while MethodInfo
            uses the default methods defined in the MethodBase class.
            
            Trapping reflection calls with this method allows us to redirect them, even if they are late-bound calls.
            </summary>
            <returns>The result of invoking the method</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapTypeGetTypeMethod()">
            <summary>
            Type.GetType does not return any values from redirected methods.  It's not entirely clear why, but to 
            get around this, we need to handle it manually.
            
            The first argument is the typename to load.  The second is the original methodbase from which the call was
            compiled into.  From this, we can get the method's assembly and use that to resolve the type.
            </summary>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapDelegateBeginInvoke()">
            <summary>
            Handles calling begin method delegates asynchronously.
            </summary>
            <returns>The IAsyncResult from calling the delegate</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapThrow(System.Exception)">
            <summary>
            Traps a call to throw, allowing us to send an event to the profiler API before we throw the exception.
            </summary>
            <param name="exception">The exception that's about to be thrown</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.TrapNew()">
            <summary>
            Traps a call to a constructor that is newing an object or value type.
            </summary>
            <returns>The new instance of the object.  Or, if it's a valud type, null (in those cases, the value is passed in byref)</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.RedirectionHelper.IUnboxHelper">
            <summary>
            We need to be able to reference the UnboxHelper via an abstraction
            so that we can call SetValue without using reflection.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.IUnboxHelper.UnboxAndStoreValue(System.Object,System.TypedReference)">
            <summary>
            Gets the value of the local field and assigns it to the typed reference.
            </summary>
            <param name="boxedValue">The boxed value of a type</param>
            <param name="typedReference">The typed reference to write the value to</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.RedirectionHelper.UnboxHelper`1">
            <summary>
            This class is used to help us unbox objects by reference.  Because we create it via the reflection API,
            we don't get visibility checking issues when SetValue and GetValue are called!  This way, we can write 
            the value of a boxed value type to a TypedReference - IE, a managed pointer - easily, and unbox whatever 
            we need to.  
            </summary>
            <typeparam name="T">The type to unbox</typeparam>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.UnboxHelper`1.UnboxAndStoreValue(System.Object,System.TypedReference)">
            <summary>
            Store the value of a boxed value type into a typedReference.
            </summary>
            <param name="boxedValue">The boxed value to unbox</param>
            <param name="typedReference">The place to store the unboxed value</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1">
            <summary>
            Another sad scenario.  Occasionally, the compiler compiles methods such that objects of type 
            IEnumerator get assigned to fields of type IEnumerator(T).  This principly happens with arrays,
            which for whatever reason, don't implement IEnumerator(T) - just IEnumerator.
            
            So we need some help so that we can set this field through reflection.  To make it happen, we've got this
            helper class that basically just wraps an IEnumerator.
            </summary>
            <typeparam name="T">The type that we are wrapping</typeparam>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.mEnumerator">
            <summary>
            This is the original enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Creates the enumerator helper.
            </summary>
            <param name="enumerator">The enumerator</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.MoveNext">
            <summary>
            Returns the result from movenext.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.RedirectionHelper.EnumeratorWrapper`1.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.TemplateMethodAttribute">
            <summary>
            Marks a method as a template method of a certain type.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateMethodAttribute.#ctor(Microsoft.MMF.Generation.EMethodTemplateTypes)">
            <summary>
            Creates a new template method attribute that templates the specified type.
            </summary>
            <param name="methodType">The type of template method</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.TemplateMethodAttribute.Type">
            <summary>
            Gets / sets the method template type.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.GetMethodBasePatch">
            <summary>
            This is the abstract base class for any patch that needs to create generic methods.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetMethodBasePatch.#ctor">
            <summary>
            Default constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetMethodBasePatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Subclasses will still need to provide this.
            </summary>
            <param name="tracker">The tracker object</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetMethodBasePatch.MakeGenericMethod(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Adds IL to the method that makes a concrete method out of a generic method definition.
            </summary>
            <param name="method">The method to make generic</param>
            <param name="tracker">The opcode tracker</param>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState`1">
            <summary>
            Defines an object that can be a test state.
            </summary>
            <typeparam name="T">The type that we're testing.</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState`1.#ctor">
            <summary>
            Creates the mimic test state.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState`1.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            This is the copy constructor.  Clones the variables on the previous state.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.RedirectedInstance">
            <summary>
            This is the instance that's being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.RedirectedType">
            <summary>
            This is the type that's being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.RedirectConstructor">
            <summary>
            True if the constructor for a given type should be redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.CallConstructorAnyway">
            <summary>
            True if the constructor for a given type should be called even if 
            it's being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.ReturnUninitializedObject">
            <summary>
            When true, a redirected constructor should return a blank object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.States.MimicTestState`1.Test">
            <summary>
            Gets / sets the test harness.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState`2">
            <summary>
            This is the base class for all test states that have a mock type defined already.
            </summary>
            <typeparam name="T">The type that we're testing</typeparam>
            <typeparam name="U">The type that we're mocking</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState`2.#ctor">
            <summary>
            Blank constructor.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState`2.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            This is the copy constructor.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState1`2">
            <summary>
            This is the first state for the test syntax.
            </summary>
            <typeparam name="T">The object that we're testing</typeparam>
            <typeparam name="U">The object that we're redirecting</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState1`2.#ctor">
            <summary>
            Creates an instance of mimic test state1.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState1`2.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            Creates an instance of state1 out of another state.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState2`2">
            <summary>
            This is the second state for the test syntax.
            </summary>
            <typeparam name="T">The object that we're testing</typeparam>
            <typeparam name="U">The object that we're redirecting</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState2`2.#ctor">
            <summary>
            Creates an instance of mimic test state2.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState2`2.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            Creates an instance of state2 out of another state.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState3`2">
            <summary>
            This is the second state for the test syntax.
            </summary>
            <typeparam name="T">The object that we're testing</typeparam>
            <typeparam name="U">The object that we're redirecting</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState3`2.#ctor">
            <summary>
            Creates an instance of mimic test state3.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState3`2.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            Creates an instance of state3 out of another state.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="T:Microsoft.MMF.States.MimicTestState4`2">
            <summary>
            This is the second state for the test syntax.
            </summary>
            <typeparam name="T">The object that we're testing</typeparam>
            <typeparam name="U">The object that we're redirecting</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState4`2.#ctor">
            <summary>
            Creates an instance of mimic test state4.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.States.MimicTestState4`2.#ctor(Microsoft.MMF.States.MimicTestState{`0})">
            <summary>
            Creates an instance of state4 out of another state.
            </summary>
            <param name="stateToClone">The state to clone</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineTypeTranslator">
            <summary>
            Translates an inline type.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTypeTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTypeTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the inline type instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineTypeTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline type opcode.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.TranslatedInstruction">
            <summary>
            This is a data structure that we use to track translated opcodes and patches.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TranslatedInstruction.#ctor(System.Reflection.Emit.OpCode,System.Object)">
            <summary>
            Creates the translated instruction.
            </summary>
            <param name="opCode">The opcode</param>
            <param name="argument">The argument</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.TranslatedInstruction.ToString">
            <summary>
            Override to string so that we can get some useful diagnostic information in the debugger.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MMF.Generation.TranslatedInstruction.Argument">
            <summary>
            This is the argument of that opcode.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TranslatedInstruction.IsExceptionHandlingClause">
            <summary>
            Returns true if the argument is an exception handling clause.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.TranslatedInstruction.IsMarkLabel">
            <summary>
            Returns true if this instruction should mark a point in the IL
            stream where a label should be marked.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.MockFactory">
            <summary>
            Used to create MockObjectWrapper objects.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.MockFactory.mInstance">
            <summary>
            Create an instance of this so that we get an object in the finalizer queue.  OK, not
            neccessarily the greatest way to write the generated assembly - but the safest.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.#cctor">
            <summary>
            The static constructor will create the dyanmic assembly.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.#ctor">
            <summary>
            Allows us to potentially write the assemblies to disk when the factory is unloaded and disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.Create``1(System.Object[])">
            <summary>
            Creates a mock object by subclassing type T.  Any virtual method on T will be redirected to a mock method 
            on the mock object.  Non-virtual methods can only be mocked if they are redirected using a Test.  
            
            If T is an interface, then the mock will extend object and implement T.  If the methods in T are invoked
            outside of a Recorder.StartOrderedRecording() block, then the methods will attempt to validate
            the method call using the MMF API.  If you want any non-recorded methods to call the base class,
            use a partial mock instead.
            </summary>
            <typeparam name="T">The type of object to mock.</typeparam>
            <param name="args">A list arguments for the constructor on type T</param>
            <returns>A mock object wrapper that encapsulates the mocked object</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.DynamicTypeCreationException">Thrown if T is sealed</exception>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreatePartial``1(System.Object[])">
            <summary>
            This method creates a partial mock.  Partial mocks are like regular mocks, except that methods
            are only validated on partial mocks if they've had expectations set against them.  If a method 
            is not invoked on a partial mock inside a Recorder.StartOrderedRecording() block, then that method
            call is automatically passed down to the base class.  
            
            Like regular mock objects, partial mocks extend or implement type T.  The argument list passed into
            this method are the arguments for the constructor on type T that you want invoked when the object is 
            created.
            </summary>
            <typeparam name="T">The type of object to mock</typeparam>
            <param name="args">A list of arguments for the constructor on the base class</param>
            <returns>A mock object wrapper that encapsulates the mocked object</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.DynamicTypeCreationException">Thrown if T is sealed</exception>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateStatic(System.Type[])">
            <summary>
            Creates a mock object that can be used to set expectations on static methods of certain types.  Static
            mocks can only be used within MimicTests.  
            
            For each type that is passed into this method, the MMF API will iterate through each of those types' 
            static methods.  For each of them, it will create an indentical static method that has the same method
            signature on a dynamically generated type.  These methods can be then be swapped for the static types' 
            methods so that all of the arguments and return values match regardless of the type that declared the method.
            </summary>
            <param name="staticTypes">A list of the types of object that whose static methods you want to mock</param>
            <returns>A mock object wrapper that encapsulates the mocked object</returns>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateStatic(System.Boolean,System.Type[])">
            <summary>
            Generates a static mock out of an array of types, with the option of including private methods in the 
            generated type.  
            </summary>
            <param name="includePrivateMethods">When true, the stub will include the private methods on the types that passed in</param>
            <param name="staticTypes">A list of the types of object that whose static methods you want to mock</param>
            <returns>A mock object wrapper that encapsulates the mocked object</returns>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateMimic``1">
            <summary>
            Creates a mimic object for a particular type.  Mimics are objects that have identical methods to
            the type they are mimicking, exception that the mimic does not inherit from type T.  In .NET 4.0,
            the dynamic keyword allows mimics to be used interchangeably with the type they are mimicking,
            even though the two types are not polymorphically equivalent.  Mimics can also be used within a 
            MimicTest by mapping one type to a mimic.  Mimics can be used to test any object, including sealed
            types and objects that can't be constructed.
            </summary>
            <typeparam name="T">The type that we are mimicking</typeparam>
            <returns>An object wrapper that is used to set expectations on mimics</returns>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateMimic``1(System.Boolean)">
            <summary>
            Creates a mimic object for a particular type, optionally including the private methods of that 
            type.
            </summary>
            <typeparam name="T">The type that we are mimicking</typeparam>
            <param name="includePrivateMethods">When true, the mimic will include private methods</param>
            <returns>An object wrapper that is used to set expectations on mimics</returns>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateMimic``1(``0)">
            <summary>
            Creates a mimic object for a particular type that calls the aggregated class in cases where an 
            expectation is not set on the mimic.  This creates an object that has similar behavior to a 
            partial mock, except it does not inherit from the class it is mimicking.  
            </summary>
            <typeparam name="T">The type to mimic</typeparam>
            <param name="aggregatedInstance">The aggregated instance</param>
            <returns>An object wrapper that is used to set expectations on mimics</returns>
        </member>
        <member name="M:Microsoft.MMF.MockFactory.CreateMimic``1(System.Boolean,``0)">
            <summary>
            Creates a partial mimic and optionally includes the target types' private methods.
            </summary>
            <typeparam name="T">The type to mimic</typeparam>
            <param name="includePrivateMethods">When true, the mimic will include private methods</param>
            <param name="aggregatedInstance">The aggregated instance</param>
            <returns>An object wrapper that is used to set expectations on mimics</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.OpCodeTracker">
            <summary>
            The opcode tracker is used to track the translation of old opcodes to new ones.  This is 
            neccessary because as we alter the opcodes during the translation, there is no garunatee
            that the new method will be identical in length to the old one.  In order for us to deal 
            with this discrepency, we need an object that can keep track fo the old opcodes as well as 
            the new ones and allow us to refer to them the same way.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mNewInstructions">
            <summary>
            This is a list of opcodes that we use to translate.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mLocalBuilderMap">
            <summary>
            Before we write out info, we need to keep track of the local variables
            so that we can determine what their scope is in the translated method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTempBuilderMap">
            <summary>
            This dictionary is used to keep track of temp variables, which we use 
            to box and unbox non-visible types.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mOffsets">
            <summary>
            This is a list of offsets, using the original opcodes.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mGenerator">
            <summary>
            This is the ILGenerator that we are using to generate the translated opcodes.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mMethod">
            <summary>
            This is the method that we're currently cloning.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTypeBuilder">
            <summary>
            This is the type builder that we are using to build the current type.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mLabelLookup">
            <summary>
            This dictionary helps us track the location of labels.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mPatchLookup">
            <summary>
            This is a dictionary where we match patch indexes to lists of patches.  When an index 
            in an opcode sequence has been patched we will keep the overwritten sequence stored in this dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mPrependedLookup">
            <summary>
            This is a dictionay where we match indexes to patches that should come before an instruction is emitted.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mExceptions">
            <summary>
            This is a list of exception handling clauses that we need
            to define when we're emitting opcodes.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetSymbolReader">
            <summary>
            This is the symbol reader for the target method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetSymbolMethod">
            <summary>
            This is the target symbol method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodSymbolDocs">
            <summary>
            These are the symbol documents for the target method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodSymbolDocWriters">
            <summary>
            The document writers allow symbol information to be written while we are emitting code.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodOffsets">
            <summary>
            These are the offsets to the test method.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodStartColumns">
            <summary>
            These are the test method start columns.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodEndColumns">
            <summary>
            These are the test method end columns.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodStartLines">
            <summary>
            These are the test method start lines.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTargetMethodEndLines">
            <summary>
            These are the test method end lines.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.OpCodeTracker.mTestMethodLocalSymbols">
            <summary>
            This is a list of the test method local symbols.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.#ctor">
            <summary>
            The protected constructor is used for testing purposes.
            This should never be called by anybody else!
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.#ctor(System.Reflection.Emit.ILGenerator,System.Reflection.MethodBase)">
            <summary>
            Creates an opcode tracker that will not emit any debug information.
            </summary>
            <param name="generator">The ILGenerator that will be used to emit the opcodes.</param>
            <param name="method">The method that we're cloning</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.#ctor(System.Reflection.Emit.ILGenerator,System.Reflection.MethodBase,System.Reflection.MethodBase,System.Reflection.Emit.TypeBuilder)">
            <summary>
            Creates an opcode tracker that knows about the type it is creating.  This constructor is 
            neccessary when creating templated types, because those types require local fields to be defined as 
            they are being templated.  This opcode tracker is created with a type builder that can be used
            to define those local fields.
            </summary>
            <param name="generator">The generator to emit method calls with</param>
            <param name="method">The method that we are cloning</param>
            <param name="templateMethod">The method that the template is based off of</param>
            <param name="typeBuilder">The type that we're cloning the method into</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.#ctor(System.Reflection.Module,System.Reflection.MethodBase,System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.ILGenerator)">
            <summary>
            Creates an opcode tracker that will also emit debug information.
            </summary>
            <param name="module">The module where the method is defined</param>
            <param name="methodInfo">The method that we're redirecting</param>
            <param name="moduleBuilder">The module builder</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.AppendInstruction(Microsoft.MMF.Generation.ILInstruction)">
            <summary>
            Appends an instruction to the tracker.
            </summary>
            <param name="ilInstruction">The ILInstruction to append</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.SetArgument(System.Object)">
            <summary>
            Sets the argument for the current translated instruction.
            </summary>
            <param name="argument">The argument for the current instruction</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.GetLabel">
            <summary>
            Defines a label and returns it.
            </summary>
            <returns>A new label that the user can break to</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.MarkLabelAt(System.Int32)">
            <summary>
            Tells the tracker to mark a label at the specified break target, which is the IL offset in the 
            original code where a label should be marked during translation.
            </summary>
            <param name="breakTarget">The offset in the original code where we should mark a label</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.ClearPatchesAt(System.Int32)">
            <summary>
            This will clear patches at the specified index.
            </summary>
            <param name="index">The index to clear patches from</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Prepend(System.Reflection.Emit.OpCode)">
            <summary>
            Prepends an instruction at the current index.
            </summary>
            <param name="opCode">The opcode to prepend</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Prepend(Microsoft.MMF.Generation.EExceptionClauseType)">
            <summary>
            Prepends a portion of an exception handling clause.
            </summary>
            <param name="clauseType">The clause type</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Prepend(System.Reflection.Emit.Label)">
            <summary>
            Prepends an instruction that will mark the given label.
            </summary>
            <param name="label">The label that is prepended</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Prepend(System.Reflection.Emit.OpCode,System.Object)">
            <summary>
            Prepends an instruction at the current index with a specific argument.
            </summary>
            <param name="opCode">The opcode to prepend</param>
            <param name="argument">The argument of the opcode</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.PrependAt(System.Reflection.Emit.OpCode,System.Object,System.Int32)">
            <summary>
            Prepends an instruction at the specific index.
            </summary>
            <param name="opCode">The opcode to prepend</param>
            <param name="argument">The argument of the opcode</param>
            <param name="index">The index to prepend the instruction at</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Patch(Microsoft.MMF.Generation.EExceptionClauseType)">
            <summary>
            Patches the code so that at this particular instruction, the tracker 
            will define a part of an exception handling clause.
            </summary>
            <param name="clauseType">The type of clause to patch</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Patch(System.Reflection.Emit.Label)">
            <summary>
            Patches the code with a special instruction that tells the tracker to mark a label
            at this point in the IL stream.
            </summary>
            <param name="label">The label to mark in the patch</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Patch(System.Reflection.Emit.OpCode)">
            <summary>
            Patches the most current instruction with an opcode that has no arguments.
            </summary>
            <param name="opCode">The opcode to patch</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.Patch(System.Reflection.Emit.OpCode,System.Object)">
            <summary>
            Patches the most current instruction.
            </summary>
            <param name="opCode">The opcode to patch with</param>
            <param name="argument">The argument to patch</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.PatchAt(System.Int32,System.Reflection.Emit.OpCode,System.Object)">
            <summary>
            This will patch the opcode stream at the specified index.  If a patch already exists
            at that index, this method will append the opcode and argument to that patch.
            </summary>
            <param name="index">The index to patch</param>
            <param name="opCode">The opcode to patch</param>
            <param name="argument">The argument to patch</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.AddDebugInfoForLocalBuilder(System.Reflection.LocalVariableInfo,System.Reflection.Emit.LocalBuilder)">
            <summary>
            Since the opcode tracker contains debug info for the method we're testing,
            it also has the debug info for local variables.  This is where we add them.
            </summary>
            <param name="variableInfo">The variable info from the method we're cloning</param>
            <param name="localBuilder">The local builder of the method we're building</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.GetTempForType(System.Type)">
            <summary>
            Returns the local index of a temporary variable for a particular type.
            </summary>
            <param name="tempType">The type to get a temp for</param>
            <returns>The index of the temp's type</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.EmitExceptionClause(Microsoft.MMF.Generation.TranslatedInstruction)">
            <summary>
            This utility method makes it easier for us to emit exception handling blocks, since
            it's done in a few locations.
            </summary>
            <param name="instruction">The instruction whose clause type we should emit</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.OpCodeTracker.GetOffsetIncrement(Microsoft.MMF.Generation.TranslatedInstruction)">
            <summary>
            This private utility method returns the number of additional bytes that the given
            transalted instruction will add to the current offset.  We need this value to define the 
            lexical scope of local variables!
            </summary>
            <param name="instruction">A translated instruction</param>
            <returns>The number of bytes that this instruction will increment the offset by</returns>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.Generator">
            <summary>
            Returns the ILGenerator that is being used to generate this method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.Method">
            <summary>
            Returns the method that's currently being cloned.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.TypeBuilder">
            <summary>
            Returns the type builder that is being used to create this type.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.CurrentOffset">
            <summary>
            Returns the current offset at this location.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.ConstrainedType">
            <summary>
            When instrumenting a method, if we come across a Constrained opcode, we nop it and store the 
            type here for later so that we can emit a proper method instead.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.CurrentIndex">
            <summary>
            Returns the current index in the original opcode stream.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.AlteredInstructions">
            <summary>
            This enumerator is used to iterate through all of the opcodes that we have translated and altered.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.OpCodeTracker.RawAlteredInstructions">
            <summary>
            This is primary used for debugging purposes.  It returns an array of the altered opcodes with their 
            arugments in an object array.  This property does not generate the method and its debug information - 
            it simply allows us to look at the translated opcodes and their arguments.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.RedirectionRepository">
            <summary>
            This class serves as registry for all of the types and instances that should be redirected.  When a
            redirected method is invoked, all of the methods that are invoked within that method end up getting 
            passed into this classes Redirect method.  The redirect method checks to see if the invoked object is 
            a mock or a stub.  If it is, then it invokes the method on the mock directly.  This is how we get non-virtual
            methods to be invoked on the mock objects instead of on the subclasses.
            
            Another thing we do however, is check the type of the object that's passed in.  If the type has been redirected,
            then we invoke the equivelent method on the type's mock instead.  This allows us to mock sealed types, types with
            inaccessable constructors, and dynamically new'ed objects.
            
            Static methods also come in here.  For those cases, we just allow mappings between the type that is being redirected
            and the mock object that has the equivelent mocked static methods. 
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionRepository.mInstance">
            <summary>
            The one and only instance.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionRepository.mTestHarness">
            <summary>
            This is the test harness that we are currently redirecting.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.RedirectionRepository.mObjectTypeInTest">
            <summary>
            This is the type of the object that is currently being tested.  We need this instance
            to determine the recursive scope.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.#cctor">
            <summary>
            The static constructor creates the singleton instance.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.#ctor">
            <summary>
            Cannot be created.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.SetTestHarness(Microsoft.MMF.ITestHarness,System.Type)">
            <summary>
            Resets the redirection mappings.
            </summary>
            <param name="harness">The test harness to redirect</param>
            <param name="methodInTestType">The type that we are testing</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.Redirect(System.Object@,System.Reflection.MethodBase,System.Object[]@,Microsoft.MMF.Generation.ECallType)">
            <summary>
            Checks the mappings and determines whether the given method, invoked on the given object
            with the given arguments, should be redirected.  If the object instance passed in is a
            mock object, we will automatically redirect it.  Otherwise, we will check the type of the instance
            and determine whether it should be redirected.  If the instance is null, we will instead check
            the type that method was declared on.
            
            This method is called from within redirected methods.
            </summary>
            <param name="instance">The instance that the method was invoked on</param>
            <param name="methodBase">The method that was invoked</param>
            <param name="args">The arguments of the method</param>
            <param name="callType">The call type; needed to determine which method to redirect recursively into</param>
            <returns>The return value of the method, or null if nothing was returned</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.RedirectNew(System.Reflection.ConstructorInfo,System.Object[]@)">
            <summary>
            Redirects a constructor.  If the constructor's type is being redirected, then we will 
            invoke it only if it was set up to be invoked.  Otherwise, we will bypass the constructor entirely.
            In either case, we will return the mock object instead of whatever the constructor returned.
            </summary>
            <param name="constructor">The constructor to invoke</param>
            <param name="args">The arguments for the constructor</param>
            <returns>Either the dynamically created object, or a mock object</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.IsInRedirectedContextAndShouldBeRedirected(System.Object,System.Type,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Checks the current call stack to determine whether a method should redirect recursively.
            </summary>
            <param name="target">The target object</param>
            <param name="type">The type to get the actual method from</param>
            <param name="currentMethod">The current method</param>
            <param name="args">The arguments</param>
            <returns>True if the method should be redirected.  Otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.RedirectFromMockOrStub(System.Object,System.Type,System.Reflection.MethodBase,System.Object[]@)">
            <summary>
            Either calls the method on the target object, or redirects the call recursively.
            </summary>
            <param name="target">The target object.  This is the object which the method gets invoked on.</param>
            <param name="targetType">The target type</param>
            <param name="currentMethod">The current method which was invoked on the mock object</param>
            <param name="args">The arguments of the method</param>
            <returns>The result of the method call</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.ShouldRedirectInto(System.Object,System.Reflection.MethodBase,System.Object[])">
            <summary>
            This method will check whether a method call to method from the typeInTest should be redirected.
            This decision is based on the ScopeFlags that were passed into the repository before the test 
            started.  This method is called whenever a call to the Redirect method comes in, and when we're 
            instrumenting a method and we need to determine whether a delegate should be redirected as well.
            </summary>
            <param name="instance">The instance that the method was invoked on</param>
            <param name="method">The method to check against</param>
            <param name="arguments">The arguments of the method</param>
            <returns>True if the method should be redirected.  Otherwise, false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.GetEventArgs(System.Reflection.MethodBase,System.Object[],System.Object,System.Exception)">
            <summary>
            Returns a fresh RedirectionArgs object with the right parameters.
            </summary>
            <param name="method">The method that was invoked</param>
            <param name="arguments">The arguments of the method</param>
            <param name="returnValue">The return value of the method, or null if there was none</param>
            <param name="exception">The exception that was thrown</param>
            <returns>A new RedirectionArgs object with the right properties</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.InvokeExactMethod(System.Object,System.Reflection.MethodInfo,System.Object[]@)">
            <summary>
            Invokes the exact method on the instance object.  This is only neccessary if the method is being called is virtual.
            </summary>
            <param name="instance">The instance to invoke the method on</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments</param>
            <returns>The result of the method invocation</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.GetBoxedDefaultValue``1">
            <summary>
            This utility method is used in a few fringe cases where we need the runtime to tell us what the default
            value of a particular type is. This method will return the default, boxed value of a particular type.
            </summary>
            <typeparam name="T">The type to get the default value for</typeparam>
            <returns>The boxed default value of type T</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.GetDefaultBoxedValue(System.Type)">
            <summary>
            Using reflection, this method will generate an instance of the method above and execute it.  This is how we can
            generate a default boxed instance of a particular type.
            </summary>
            <param name="type">The type to get the default value for</param>
            <returns>A boxed version of the particular type</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.InsertThisPointerIntoArray(System.Object,System.Object[]@)">
            <summary>
            Inserts the object instance into the front of the array.  This method alters the args array in place.
            </summary>
            <param name="instance">The instance to insert</param>
            <param name="args">The argument array</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.RedirectionRepository.RemoveThisPointerFromArray(System.Object[]@)">
            <summary>
            Resizes the array so that the first argument at index 0 is removed.
            </summary>
            <param name="args">The argument array to modify</param>
        </member>
        <member name="T:Microsoft.MMF.IProfilerObserver">
            <summary>
            Gets notified whenever an event is fired on the profiler.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnMethodInTestStarted(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when the method-in-test is executed.
            </summary>
            <param name="instance">The instance of the method</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnMethodInTestFinished(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when the method-in-test finishes executing.
            </summary>
            <param name="instance">The object that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnMethodStarted(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when a new method is invoked.
            </summary>
            <param name="instance">The instance that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnMethodFinished(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when a method finishes.
            </summary>
            <param name="instance">The instance that the method finished on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnRedirectionConsidered(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when the framework is considering whether or not to redirect
            into a particular method.  The arguments contain all of the information neccessary
            for the tester to determine whether they should redirect into a method or not.  This 
            event gives the user the option to override the default scope of a test.
            </summary>
            <param name="instance">The instance that is being redirected into</param>
            <param name="args">The arguments of the redirection</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnNewObject(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when a new object is created.
            </summary>
            <param name="instance">The instance that the method was invoked on (always null)</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.IProfilerObserver.OnException(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is fired whenever an exception is thrown.
            </summary>
            <param name="instance">The instance that the method was invoked on (always null)</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="T:Microsoft.MMF.WhereArgument">
            <summary>
            This class contains a number of methods that can be used to insert constraints into an expectation, 
            arrangement or assertion.  The methods in this class can be embedded in a method call.  When the API
            sees a method call to this class, it will automatically add the constraint to the MethodExpectation
            class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.WhereArgument.mInstance">
            <summary>
            This is the one and only instance.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.WhereArgument.mSetConstraints">
            <summary>
            This is a list of all the constraints that have been set.  Because the order is such that these constraints are 
            set and created before an expectation or assertion is made, we need to cache them somewhere so that they can be 
            consumed later on.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.#cctor">
            <summary>
            Creates the singleton instance.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.#ctor">
            <summary>
            This is the one and only constructor.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Reset">
            <summary>
            Resets the indexes of the constraints.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsAnyValue">
            <summary>
            Sets a constraint that the argument at the current index can be of any 
            value for the expectation to be validated.  The argument must be a reference
            type for this to work.
            </summary>
            <returns>Null</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsAnyValue(System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda on an 
            expectation, arrangement or assertion.
            </summary>
            <param name="index">The index to set the constraint at</param>
            <returns>Null</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsAnyValue``1">
            <summary>
            Sets a constraint that the argument at the current index can be of any value for the 
            expectation to be validated.
            </summary>
            <typeparam name="T">The type</typeparam>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsAnyValue``1(System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="index">The index to set the constraint at</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.StartsWith(System.String)">
            <summary>
            Sets a constraint that the string argument at the current index starts with the specified text.
            </summary>
            <param name="startsWithString">The string to check against</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.StartsWith(System.String,System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <param name="startsWithString">The string to check against</param>
            <param name="index">The index to set the constraint at</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Contains(System.String)">
            <summary>
            Sets a constraint that the string argument at the current index contains the specified text.
            </summary>
            <param name="containsString">The string to check against</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Contains(System.String,System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <param name="containsString">The string to check against</param>
            <param name="index">The index to add the constraint at</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.EndsWith(System.String)">
            <summary>
            Sets a constraint that the string argument at the current index ends with the specified text.
            </summary>
            <param name="endsWithString">The string to check against</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.EndsWith(System.String,System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <param name="endsWithString">The string to check against</param>
            <param name="index">The index to add the constraint at</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Matches(System.String)">
            <summary>
            Creates a constraint that matches a regular expression.
            </summary>
            <param name="regEx">The regular expression to match</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Matches(System.String,System.Int32)">
            <summary>
            This is the private method that traps the matches call.
            </summary>
            <param name="regEx">The regular expression to match</param>
            <param name="index">The index of the constraint</param>
            <returns>A default string</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsOneOf``1(``0[])">
            <summary>
            Creates a constraint that matches any values of type T in the expectation at the current argument index.
            </summary>
            <typeparam name="T">The type to check against</typeparam>
            <param name="values">An enumerable list of values</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.IsOneOf``1(``0[],System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <typeparam name="T">The type to check against</typeparam>
            <param name="values">An array of values to check</param>
            <param name="index">The index to add the constraint at</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Satisfies``1(System.Func{``0,System.Boolean})">
            <summary>
            Creates a constraint that invokes a callback to match the argument value at the current index.
            </summary>
            <typeparam name="T">The type to check against</typeparam>
            <param name="callback">The callback</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.WhereArgument.Satisfies``1(System.Func{``0,System.Boolean},System.Int32)">
            <summary>
            This is the method that is actually invoked from inside the lambda 
            on an expectation, arrangement, or assertion.
            </summary>
            <typeparam name="T">The type to pass into the callback</typeparam>
            <param name="callback">The callback delegate</param>
            <param name="index">The index to add the constraint at</param>
            <returns>The default value of T</returns>
        </member>
        <member name="P:Microsoft.MMF.WhereArgument.SetConstraints">
            <summary>
            This is a little hokey, but it's the easiest way to handle this.  When setting constraints, the WhereArgument
            class will add a constraint to this list.  When a method expectation is created, it will copy the contents of 
            this array into its list and then empty this list.  It does this because expectations are created from multiple 
            places and at different times, and it is difficult to use a different paradigm.  
            
            This list serves as a bit of cache where the constraints of a method expectation can be stored until 
            the expectation is created.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.ShortInlineITranslator">
            <summary>
            Translates the ShortInlineI opperand.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineITranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineITranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the ShortInlineI instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineITranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a short inline I instruction.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.MimicTest`1">
            <summary>
            The mimic test class allows methods to be tested by mimicking their IL. 
            The test class is a starting point for tests that use the redirection API.  
            </summary>
        </member>
        <member name="T:Microsoft.MMF.TestHarness`1">
            <summary>
            The test harness class is the base class for all types of mimic tests.  
            </summary>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.#ctor(`0)">
            <summary>
            Creates a test harness that can be used to clone the IL of a target method so that its
            compiled methods call mock objects instead.
            </summary>
            <param name="testTarget">The target that we're testing.  If we're testing static methods, this should be MMFStatic</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Redirects``1(System.Func{`0,``0})">
            <summary>
            Tells the Test to redirect a a property of the object that it is testing.  The delegate
            passed into this method will be invoked so that we can determine the instance to redirect.
            </summary>
            <typeparam name="U">The object to redirect</typeparam>
            <param name="propertyAction">A delegate that returns the object to redirect</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Redirects``1(``0)">
            <summary>
            Tells the Test to redirect a particular instance of an object.  All calls to this object will be 
            redirected to the mock or stub that is assigned to it via the ByCalling method.
            </summary>
            <typeparam name="U">The type we will redirect</typeparam>
            <param name="objectInstance">An instance of an object to redirect</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Redirects``1">
            <summary>
            Tells the mimic test to redirect all calls to type U by calling a mock object 
            that has mock implementations of that type.
            </summary>
            <typeparam name="U">The type to redirect</typeparam>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.RedirectsNewObjectsOfType``1">
            <summary>
            Instructs the test to redirect all calls to new objects of type U by returning a mock
            object instead of what the constructor would otherwise return.  By default, the constructor 
            will not be invoked.  The overloaded method allows this behavior to be supressed.
            </summary>
            <typeparam name="U">The type to redirect</typeparam>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.RedirectsNewObjectsOfType``1(System.Boolean)">
            <summary>
            Instructs the test to redirect all calls to new objects of type U by returning a mock
            object instead of what the constructor would otherwise return.  This overload allows 
            users to specify whether the constructor on U is invoked, even if it's not the object
            that's returned.
            </summary>
            <typeparam name="U">The type to redirect</typeparam>
            <param name="callConstructorAnyway">When true, the constructor will be called even if it's not the object that gets returned</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.RedirectsStaticMethodsByCalling``1(Microsoft.MMF.ObjectWrapper{``0,Microsoft.MMF.MMFStatic})">
            <summary>
            Tells the test to redirect calls to static methods by invoking equivalent methods on the mock object
            contained within the staticWrapper class.  The staticWrapper may mock static methods on more than one type.  This
            method may be called more than once for each type one wants to redirect; or, there could be a single mock object
            that handles all static methods and this method could be called just one time.
            </summary>
            <typeparam name="U">The type that we are mocking</typeparam>
            <param name="staticWrapper">An object wrapper that aggregates the actual mock object</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.RedirectsInto(System.Reflection.Assembly)">
            <summary>
            Tells the test harness to redirect into a particular assembly.  By default, the test will not redirect into 
            any assembly other than the one under test.  However, this method allows users to tell the API to explicitly 
            redirect into a particular assembly.
            
            Keep in mind that some classes in some assemblies can't be redirected because the IL for their methods is 
            unretrievable.  But this is usually only prevelant in core assemblies such as mscorlib.
            </summary>
            <param name="assembly">An additional assembly to redirect into</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Reset">
            <summary>
            Resets the state of the test harness so that all of the redirections are erased.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.AddDefaultAssembly(System.Reflection.MethodBase)">
            <summary>
            Adds the default assembly to the redirected assemblies list so that the method in test's 
            assembly is automatically added to the list.
            </summary>
            <param name="methodInTest"></param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Test(System.Delegate)">
            <summary>
            This method is used to invoke statements by duplicating their IL, but replacing calls to the 
            methods that it was compiled against with calls to mock objects instead.  
            </summary>
            <param name="testExpression">A delegate that invokes a method that should be redirected</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.Test(System.Reflection.MethodBase,System.Object[])">
            <summary>
            This method override allows users to test private / protected methods by passing us a MethodBase
            instead of a lambda.  Note that methods invoked through this method can't be parameterized.
            </summary>
            <param name="methodInTest">The method to test under redirection</param>
            <param name="args">The arguments of the method</param>
            <returns>The result of the test</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnMethodInTestStarted(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called when the method-in-test starts.
            </summary>
            <param name="instance">The instance that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnMethodInTestFinished(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when the method-in-test finishes executing.
            </summary>
            <param name="instance">The object that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnMethodStarted(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called when a method started event is fired.
            </summary>
            <param name="instance">The instance that the event was fired on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnMethodFinished(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called when a method finished event is fired.
            </summary>
            <param name="instance">The instance that the event was fired on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnRedirectionConsidered(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called right before a method is cloned (or skipped over) for redirection.  This event
            allows users to override the default behavior.
            </summary>
            <param name="instance">The instance that the method was invoked on</param>
            <param name="args">The arguments of the redirection</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnNewObject(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called when a new object is created.
            </summary>
            <param name="instance">Always null</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.OnException(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Called when an exception is explicitly thrown.  In other words, the following WILL
            generate this event:
            
            if(!NoInitialized)
              throw new Exception();
            
            But the following will NOT generate this event:
            
            object o = null;
            string s = o.ToString(); // null pointer won't be caught here!
            </summary>
            <param name="instance">Always null</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.MethodInTestStarted">
            <summary>
            This event is fired when the method-in-test starts.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.MethodInTestFinished">
            <summary>
            This event is fired when the method-in-test is finished.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.MethodStarted">
            <summary>
            This event is fired before a redirected method is invoked in the TestHarness.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.MethodFinished">
            <summary>
            This event is fired whenever a redirected method finishes executing in the TestHarness.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.RedirectionConsidered">
            <summary>
            This event is fired right before the framework decides whether to clone a method
            for redirection.  It allows users to fine-tune the scope of a test based on whatever
            rules they want by allowing them to override the default scoping of a test.  To 
            change the default decision making of a test, change the ShouldRedirect property 
            on the RedirectionArgs object to true or false.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.NewObject">
            <summary>
            This event is fired whenever an object is dynamically created within a redirected method.
            </summary>
        </member>
        <member name="E:Microsoft.MMF.TestHarness`1.Exception">
            <summary>
            This event is fired whenever an exception is thrown within a redirected method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.Target">
            <summary>
            Gets or sets the object that the test harness should invoke test methods on.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.Scope">
            <summary>
            Defines the scope of what will be redirected during a test.  By default, Test will not 
            redirect into every method that is called.  To change the level of redirection during a test,
            add or remove flags from this enumeration.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedInstances">
            <summary>
            This dictionary maps the redirected object instances to the mock objects
            that will be called instead.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedTypes">
            <summary>
            This dictionary maps the redirected object types to the 
            mock objects that will be called instead.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedStaticTypes">
            <summary>
            This dictionary maps types that will redirect the static methods on those types..
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedNewTypes">
            <summary>
            This dictionary stores the types that should be returned when new instances 
            of that type are created inside the test.  These values can be null.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedNewTypesCallConstructors">
            <summary>
            This dictionary stores bools that determine whether the constructor for a given type
            should be called when it is being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedNewTypesReturnUninitializedObjects">
            <summary>
            This dictionary stores bools that determine whether we should return an uninitialized
            object for a given type when it's being redirected.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.TestHarness`1.RedirectedAssemblies">
            <summary>
            This is a list of assemblies that we will redirect into.  We will automatically 
            redirect into the assembly that contains the method-in-test.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.TestHarness`1.NoHashCodeComparer`1">
            <summary>
            This helper class allows us to compare two objects in a dictionary without 
            using GetHashCode().  This helps us in cases where we are redirecting objects
            that are created through GetUninitializedInstance() which have overloaded 
            implementations of GetHashCode().
            </summary>
            <typeparam name="U">The type that we're comparing.</typeparam>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.NoHashCodeComparer`1.Equals(`1,`1)">
            <summary>
            Compares two objects and returns true if they are equal.
            </summary>
            <param name="x">The first type to compare</param>
            <param name="y">The second type to compare</param>
            <returns>True if x equals y</returns>
        </member>
        <member name="M:Microsoft.MMF.TestHarness`1.NoHashCodeComparer`1.GetHashCode(`1)">
            <summary>
            Returns the hashcode for a particular object.
            </summary>
            <param name="obj">The object to get a hashcode for</param>
            <returns>The hashcode of obj</returns>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.#ctor">
            <summary>
            Create a mimic test whose target is an uninitialized object of type T.  Uninitialized objects
            are dynamically created instances that have no had their constructor called.  You can use this constructor
            to test constructors on objects, or to simply create a harness on an object without having its constructor 
            invoked.  Note that not invoking the constructor can mean that the object is not set up properly, which means
            you may have to do some of this manually in your test.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.#ctor(`0)">
            <summary>
            Creates a test that can be used to unit test methods that invoke non-virtual, static,
            sealed types and dynamically created objects by cloning the IL of a target method but altering 
            it so that mock objects are invoked instead.
            </summary>
            <param name="testTarget">The instance of the object to test</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.Test(System.Action{`0})">
            <summary>
            This method is used to invoke statements by duplicating their IL, but replacing calls to the 
            methods that it was compiled against with calls to mock objects instead.  The method invoked in the 
            testStatement should be the method that you want to test using redirection.
            </summary>
            <param name="testStatement">The test statement, something like t => t.TheMethodIAmTesting()</param>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.Test``1(System.Func{`0,``0})">
            <summary>
            This method is used to invoke statements by duplicating their IL, but replacing calls to the 
            methods that it was compiled against with calls to mock objects instead.  The method invoked in the 
            testStatement should be the method that you want to test using redirection.
            </summary>
            <typeparam name="U">The return type of the method we are testing</typeparam>
            <param name="testStatement">The test statement, something like t => t.TheMethodIAmTesting()</param>
            <returns>A value of U returned by the method invoked in TestStatement</returns>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.Test(System.Reflection.MethodBase,System.Object[])">
            <summary>
            This method can be used to test private / protected methods and constructors.  The method passed into this 
            overload will be cloned for redirection and invoked with the supplied arguments.  Note that methods invoked
            this way can not be parameterized.
            </summary>
            <param name="methodInTest">The method to invoke can either be an instance method or a constructor</param>
            <param name="args">The arguments for method</param>
            <returns>The return value of the method, or null if there is no return value</returns>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.Test(System.Func{System.Object})">
            <summary>
            Deprecated.  Please use TestNew instead.
            </summary>
            <param name="testExpression">A delegate that creates an instance of T, like () => new MyObject()</param>
            <returns>A new instance of T after it has gone through the redirected constructor</returns>
        </member>
        <member name="M:Microsoft.MMF.MimicTest`1.TestNew(System.Func{`0})">
            <summary>
            Tests a constructor on type T.  The target that's passed into the constructor will the object contained in the Target
            property of this object.  You can use this overload to chain together a redirected constructor and method call, 
            in sequence, within one MimicTest.
            </summary>
            <param name="testExpression">A delegate that creates an instance of T, like () => new MyObject()</param>
            <returns>A new instance of T after it has gone through the redirected constructor</returns>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.MockRecordingException">
            <summary>
            This exception is thrown if the API can't create a mock method.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MockRecordingException.#ctor(System.String)">
            <summary>
            Creates the mock recording exception.
            </summary>
            <param name="message">The message of the exception.</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MockRecordingException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a mock recording exception with the specified inner exception.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MockRecordingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Templates.StubTemplate">
            <summary>
            This class contains the template methods that are used to create stub
            objects.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.IStub">
            <summary>
            All generated stub objects will implement this interface.  It allows us to set the state of a stub so
            that we can follow the arrange, act, assert pattern.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.IStub.ResetArrangements">
            <summary>
            This method will reset all of the arrange expectations that were set on a stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.IStub.ResetRecordedMethods">
            <summary>
            This method will reset all of the methods that were recorded on the stub during the act stage.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.IStub.ResetAll">
            <summary>
            This method will reset both the arranged and recorded lists.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.IsArranging">
            <summary>
            True when the stub is arranging.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.IsAsserting">
            <summary>
            True when the stub is asserting.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedMethod">
            <summary>
            When an arrangement is made, this property is set by the stub.  It is later used to make sure 
            that a method with a return value is set properly.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedReturnValue">
            <summary>
            During the arrange stage, this property is set on 
            a stub so that when a method is called, it can copy the value
            locally and return it when it is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedReturnValueHandler">
            <summary>
            Allows us to call a delegate that takes the arguments of the method and returns
            a specific value based on those arguments.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedCallbackHandler">
            <summary>
            Gets / sets the callback handler.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedExceptionToThrow">
            <summary>
            During the arrange stage, this property is set on a stub
            so that when a method is called, it can copy this exception reference locally
            and throw it when that method is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedIgnoresAllArguments">
            <summary>
            When arranging an expectation, this will make sure that the current expectation 
            ignores all arguments when acting.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedArgumentsToIgnore">
            <summary>
            When arranging an expectation, this will enable the current expectation to ignore certain
            arguments when acting.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.ArrangedOutParametersToAssign">
            <summary>
            When arranging an expectation, this will assign out parameters if applicable.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.AssertMethod">
            <summary>
            We need to store this method info for later during the assertion process.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.AssertExpectations">
            <summary>
            If we are arranging or asserting a particular method, the auto-generated
            code will set this expectation property so that we can access it and set 
            properties on it.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.IStub.AssertArguments">
            <summary>
            We also need to store the current arguments when we're in the validation phase so that 
            we can verify whether or not the stub was called with the arguments we were expecting.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Templates.StubTemplate.mStaticThis">
            <summary>
            Define a static reference to ourselves.  We use this to get the this pointer on static methods.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.ResetArrangements">
            <summary>
            This method resets all of the arrangements on the stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.ResetRecordedMethods">
            <summary>
            This method resets all of the recorded methods on the stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.ResetAll">
            <summary>
            This method resets the entire state of the stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.DefaultConstructor">
            <summary>
            This is the default template for constructors.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.DefaultNoReturn">
            <summary>
            This is the default stub method template for a method with no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.DefaultWithReturn``1">
            <summary>
            This is the default stub method template for a method with no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.MimicNoReturn">
            <summary>
            Stub mimics are different because we have no base class to call in case the call isn't stubbed.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.MimicWithReturn``1">
            <summary>
            Stub mimics should just return default values.
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.PartialMimicNoReturn">
            <summary>
            Stub mimics are different because we have no base class to call in case the call isn't stubbed.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.PartialMimicWithReturn``1">
            <summary>
            Stub mimics should just return default values.
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.StaticNoReturn">
            <summary>
            This is the template for static stub methods.  To get the instance of the 'this' pointer,
            we call into the StubTemplates' FindInstance method, using the declaring type as the key.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.StaticWithReturn``1">
            <summary>
            This is the static template with a return value.
            </summary>
            <typeparam name="T">The type that we return</typeparam>
            <returns>A value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.GetArrangementList(Microsoft.MMF.Generation.IStub,System.Reflection.FieldInfo)">
            <summary>
            This helper method is used to help compress the amount of code generated to create stub objects.  It 
            will check the value of a field on a stub to see if it's created.  If it's not, it will create it.  
            Otherwise it won't; instead it will just return it.
            </summary>
            <param name="stub">The stub to set the field on</param>
            <param name="field">The field that stores the list</param>
            <returns>The list on the field</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.GetAssertionList(Microsoft.MMF.Generation.IStub,System.Reflection.FieldInfo)">
            <summary>
            Another optimization method.  Reduces the amount of code we need to generate to create the arrangement
            list.  If it's not set, it will be set here.
            </summary>
            <param name="stub">The stub to get and set the field on</param>
            <param name="field">The field to store the list in</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.AddArrangement(Microsoft.MMF.Generation.IStub,System.Reflection.MethodBase,System.Object[],System.Collections.Generic.List{Microsoft.MMF.StateMachine.MethodExpectation})">
            <summary>
            This is another method to help optimize and speed up the creation of stub objects.  By placing this code in one 
            place, we don't need to generate it again and again every time we create a stub method from a template.
            </summary>
            <param name="stub">The stub</param>
            <param name="method">The method to record</param>
            <param name="arguments">An array of arguments to set an arrangement on</param>
            <param name="list">The list to add the expectation to</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.SetAssertionParameters(Microsoft.MMF.Generation.IStub,System.Reflection.MethodBase,System.Object[],System.Collections.Generic.List{Microsoft.MMF.StateMachine.MethodExpectation})">
            <summary>
            Sets the parameters of a stub so that it can be asserted.
            </summary>
            <param name="stub">The stub</param>
            <param name="method">The method to assert</param>
            <param name="arguments">An array of arguments</param>
            <param name="list">A list of assertion expectations</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubTemplate.RecordAndMatchExpectations(Microsoft.MMF.Generation.IStub,System.Reflection.MethodBase,System.Object[],System.Collections.Generic.List{Microsoft.MMF.StateMachine.MethodExpectation},System.Collections.Generic.List{Microsoft.MMF.StateMachine.MethodExpectation})">
            <summary>
            This is a huge perf optimization that dramatically reduces the time it takes to generate stubs.  By shoving this code
            into one method, we don't need to generate it again and again for each method.
            </summary>
            <param name="stub">The stub to record the expectation on</param>
            <param name="currentMethod">The current method</param>
            <param name="arguments">An array of arguments that were passed into the method</param>
            <param name="arrangedExpectations">A list of expectations that have been arranged</param>
            <param name="assertionExpectations">A list of expectations that have been recorded</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.AggregatedObject">
            <summary>
            This object is used when the stub is a partial mimic to call an aggregated object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.IsDoneConstructing">
            <summary>
            This bool is set to true once the stub has been created and it's constructor has been called.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.WasCalled">
            <summary>
            This bool is set to true when the stub is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.IsArranging">
            <summary>
            This bool is set to true when the stub is arranging.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.IsAsserting">
            <summary>
            This bool is set to true when the stub is asserting.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedMethod">
            <summary>
            This is the method that the stub is arranging.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedReturnValue">
            <summary>
            This is the object that is being returned.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedReturnValueHandler">
            <summary>
            This is the callback that is invoked when the arranged method is called
            to set the return value.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedCallbackHandler">
            <summary>
            This is the callback that is invoked when the arranged method is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedExceptionToThrow">
            <summary>
            This is the exception to throw when the arranged method is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedIgnoresAllArguments">
            <summary>
            This is set to true when the arrangement should ignore all arguments.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedArgumentsToIgnore">
            <summary>
            These are the indexes of the arguments that the arrangement should ignore when matching.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.ArrangedOutParametersToAssign">
            <summary>
            These are the out parameters that the method should assign.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.AssertMethod">
            <summary>
            This is the method that we are asserting.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.AssertExpectations">
            <summary>
            These are the expectations that we are asserting against.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.StubTemplate.AssertArguments">
            <summary>
            These are the arguments that we are asserting against.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Templates.StubArrangingListAttribute">
            <summary>
            Indicates that the field is a list that has arranged expectations for a stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.StubArrangingListAttribute.#ctor">
            <summary>
            Creates the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.GetOriginalMethodPatch">
            <summary>
            This patch is used to emit the original method that a templated method was based on.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetOriginalMethodPatch.#ctor">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetOriginalMethodPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code so that the original method is left on the stack.
            </summary>
            <param name="tracker"></param>
        </member>
        <member name="T:Microsoft.MMF.StubObjectWrapper`2">
            <summary>
            This is the base class for all types of stub wrappers.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.StubObjectWrapper`2.#ctor(`1)">
            <summary>
            Creates the stub object wrapper.
            </summary>
            <param name="target">The target object</param>
        </member>
        <member name="T:Microsoft.MMF.StubObjectWrapper`1">
            <summary>
            The StubObjectWrapper aggregates the actual stub object.  It serves as a starting point 
            for the syntax chain that arranges or asserts methods that were invoked on it.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubObjectWrapper`1.#ctor(`0)">
            <summary>
            Creates the stub wrapper
            </summary>
            <param name="stub">The stub to wrap</param>
        </member>
        <member name="T:Microsoft.MMF.StubMimicObjectWrapper`1">
            <summary>
            The StubMimicObjectWrapper aggregates the actual mimic object.  It serves as a starting point 
            for the syntax chain that arranges or asserts methods that were invoked on it.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
        </member>
        <member name="T:Microsoft.MMF.IMimicObjectWrapper`1">
            <summary>
            Defines an object wrapper for a mimic of type T.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.IMimicObjectWrapper`1.Target">
            <summary>
            Returns the target of the wrapper.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubMimicObjectWrapper`1.#ctor(Microsoft.MMF.MMFMimic)">
            <summary>
            Creates the stub mimic object wrapper.
            </summary>
            <param name="target">The mimic object</param>
        </member>
        <member name="P:Microsoft.MMF.StubMimicObjectWrapper`1.Microsoft#MMF#IMimicObjectWrapper{T}#Target">
            <summary>
            Returns the mimic's target object.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.StubExtensionMethods">
            <summary>
            This class contains extension methods that are used on stub objects.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ResetArrangements``2(Microsoft.MMF.StubObjectWrapper{``0,``1})">
            <summary>
            Resets the arrangements on a stub.
            </summary>
            <typeparam name="T">The type of object that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper that wraps the stub object.</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ResetRecordedMethods``2(Microsoft.MMF.StubObjectWrapper{``0,``1})">
            <summary>
            Resets the methods that have been recorded on a stub.
            </summary>
            <typeparam name="T">The type of object that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper that wraps the stub object.</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ResetAll``2(Microsoft.MMF.StubObjectWrapper{``0,``1})">
            <summary>
            Resets all stubbed and recorded methods.
            </summary>
            <typeparam name="T">The type of object that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper that wraps the stub object.</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.Stubs``2(Microsoft.MMF.StubObjectWrapper{``0,``1})">
            <summary>
            Tells the stub to eat a method call instead of invoking the base or aggragated class.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <returns>An instance of VoidState2</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.StubsByCalling``2(Microsoft.MMF.StubObjectWrapper{``0,``1},Microsoft.MMF.CallbackHandler)">
            <summary>
            Tells the stub to eat a method call instead of invoking the base or aggragated class.  When a stubbed 
            method is invoked, the callback handler will be invoked with the arguments passed into that method.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="callback">The callback to invoke when the method is invoked</param>
            <returns>An instance of VoidState2</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.Throws``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Exception)">
            <summary>
            Tells the current arrangement to throw an exception when the arranged method is invoked.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="exception">The exception to throw</param>
            <returns>An instance of VoidState2</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.Returns``3(Microsoft.MMF.StubObjectWrapper{``0,``1},``2)">
            <summary>
            Sets the return value for this arrangement.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The type that the delegate handler returns</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="returnValue">The return value</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ReturnsByCalling``3(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Func{System.Object[],``2})">
            <summary>
            Sets a delegate that will be invoked to get the return value for this arrangement.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The type that the delegate handler returns</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="returnValueHandler">A delegate that is used to return a custom return value based on the arguments of the method</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.IgnoresAllArguments``2(Microsoft.MMF.StubObjectWrapper{``0,``1})">
            <summary>
            Tells the stub to ignore all arguments when either asserting or stubbing.
            </summary>
            <typeparam name="T">The object type that we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.IgnoresArgumentsAt``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Int32[])">
            <summary>
            Tells the stub to ignore arguments at specific indexes when either asserting or stubbing.  The 
            indexes are 0-based.
            </summary>
            <typeparam name="T">The object type that we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="indexes">The indexes to ignore arguments at</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Action{``0})">
            <summary>
            Asserts that the method invoked by the handler was called.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="handler">The handler to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThatNew``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Func{``0})">
            <summary>
            Asserts that the constructor invoked by the lambda was called.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="handler">>A lambda that invokes a constructor</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat(Microsoft.MMF.StubObjectWrapper{Microsoft.MMF.MMFStatic},System.Action)">
            <summary>
            Asserts that the static method invoked by the handler was called.
            </summary>
            <param name="wrapper">The wrapper object</param>
            <param name="handler">The handler to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.String,System.Object[])">
            <summary>
            Asserts that the method invoked by the handler was called.  This overload searches for the method
            by it's name and the types of the arguments that were passed in.  If it can't a method by that name,
            a StubArrangingException is thrown.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="methodName">The name of the method to assert</param>
            <param name="args">The arguments for method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by methodName, with these arguments, could be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat``2(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Asserts that the method invoked by the handler was called.  Use this method overload to assert 
            that a specific method was called, where the method is not public and can't be discovered just by
            it's name and argument types.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments for method</param>
            <returns>The next state</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by methodName, with these arguments, could be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat``3(Microsoft.MMF.StubObjectWrapper{``0,``1},System.Func{``0,``2})">
            <summary>
            Asserts that the method invoked by the handler was called.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method we are asserting</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="handler">The handler to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AssertsThat``1(Microsoft.MMF.StubObjectWrapper{Microsoft.MMF.MMFStatic},System.Func{``0})">
            <summary>
            Asserts that the static method invoked by the handler was called.
            </summary>
            <typeparam name="V">The return type of the method we are asserting</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="handler">The handler to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.Calls``2(Microsoft.MMF.StubObjectWrapper{``0,``1},Microsoft.MMF.CallbackHandler{System.Boolean})">
            <summary>
            Sets a callback to invoke which can validate that a particular method call qualifies as valid
            during the assertion phase.  This callback will be invoked for every method call that was recorded
            during the act phase of the test.  The callback should return true for every method call that it deems 
            as valid.  The various WasCalled methods will keep track of the number of times the delegate returns true
            and will fail if the handler didn't return true the requisite number of times.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="wrapper">The wrapper object</param>
            <param name="callback">The callback handler to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``2(Microsoft.MMF.States.StubVoidState2{``0,``1},System.Action{``0})">
            <summary>
            Sets an arrangement on the method invoked by handler.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <param name="handler">The handler that invokes a method on the stub</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.OnNew``2(Microsoft.MMF.States.StubVoidState2{``0,``1},System.Func{``0})">
            <summary>
            Sets an arrangement on a constructor.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <param name="handler">>A lambda that invokes a constructor</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On(Microsoft.MMF.States.StubVoidState2{Microsoft.MMF.MMFStatic,Microsoft.MMF.MMFStatic},System.Action)">
            <summary>
            Sets an arrangement on the static method invoked by handler.
            </summary>
            <param name="state2">The previous state</param>
            <param name="handler">The handler that invokes a method on the stub</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``2(Microsoft.MMF.States.StubVoidState2{``0,``1},System.String,System.Object[])">
            <summary>
            Sets an arrangement on a method by its name.  Use this overload to stub a method that is not
            public.  The framework will attempt to find the method by matching the name and the types of 
            the arguments passed into this method.  If no method by that name and arguments can be found,
            a StubRecordingException will be thrown.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <param name="methodName">The name of the method to invoke</param>
            <param name="args">The arguments for the method</param>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by methodName, with these argument types, can be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``2(Microsoft.MMF.States.StubVoidState2{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Sets an arrangement on a method by its method info.  Use this overload to stub a method that is not
            public and is not easily discovered.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state2">The previous state</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments for the method</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``3(Microsoft.MMF.States.StubVoidState2{``0,``1},System.Func{``0,``2})">
            <summary>
            Sets an arrangement on the method invoked by handler.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the delegate</typeparam>
            <param name="state2">The instance of state2</param>
            <param name="handler">The handler that invokes a method on the stub</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``3(Microsoft.MMF.States.StubReturnState2{``0,``1,``2},System.Func{``0,``2})">
            <summary>
            Sets an arrangement on the method invoked by handler.
            </summary>
            <typeparam name="T">The type of object that is wrapped</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The type that is returned from the method call</typeparam>
            <param name="state2">The return state 2 to build off of</param>
            <param name="handler">The handler that invokes a method on the stub</param>
            <returns>An instance of return state 3</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``1(Microsoft.MMF.States.StubReturnState2{Microsoft.MMF.MMFStatic,Microsoft.MMF.MMFStatic,``0},System.Func{``0})">
            <summary>
            Sets an arrangement on the static method invoked by handler.
            </summary>
            <typeparam name="V">The type that is returned from the method call</typeparam>
            <param name="state2">The return state 2 to build off of</param>
            <param name="handler">The handler that invokes a method on the stub</param>
            <returns>An instance of return state 3</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``3(Microsoft.MMF.States.StubReturnState2{``0,``1,``2},System.String,System.Object[])">
            <summary>
            Sets an arrangement on a method by its name.  Use this overload to stub a method that is not
            public.  The framework will attempt to find the method by matching the name and the types of 
            the arguments passed into this method.  If no method by that name and arguments can be found,
            a StubRecordingException will be thrown.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method</typeparam>
            <param name="state2">The previous state</param>
            <param name="methodName">The name of the method to invoke</param>
            <param name="args">The arguments for the method</param>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by methodName, with these argument types, can be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.On``3(Microsoft.MMF.States.StubReturnState2{``0,``1,``2},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Sets an arrangement on a method by its method info.  Use this overload to stub a method that is not
            public and can't easily be discovered.
            </summary>
            <typeparam name="T">The type that the object wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method</typeparam>
            <param name="state2">The previous state</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments for the method</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AndStubs``2(Microsoft.MMF.States.StubVoidState3{``0,``1})">
            <summary>
            Tells the stub to eat a method call instead of invoking the base or aggragated class.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">An instance of state3</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AndStubsByCalling``2(Microsoft.MMF.States.StubVoidState3{``0,``1},Microsoft.MMF.CallbackHandler)">
            <summary>
            Tells the stub to eat a method call instead of invoking the base or aggragated class.  When a stubbed 
            method is invoked, the callback handler will be invoked with the arguments passed into that method.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">An instance of state3</param>
            <param name="callback">A callback to invoke</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AndReturns``3(Microsoft.MMF.States.StubVoidState3{``0,``1},``2)">
            <summary>
            Sets the return value for this arrangement.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method we're stubbing</typeparam>
            <param name="state3">An instance of state3</param>
            <param name="returnValue">The value to return on the method that's stubbed</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AndReturnsByCalling``3(Microsoft.MMF.States.StubVoidState3{``0,``1},System.Func{System.Object[],``2})">
            <summary>
            Sets a delegate that will be invoked to get the return value for this arrangement.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method we're stubbing</typeparam>
            <param name="state3">An instance of state3</param>
            <param name="returnHandler">A method that will supply a specific return value based on the arguments of the method</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.AndThrows``2(Microsoft.MMF.States.StubVoidState3{``0,``1},System.Exception)">
            <summary>
            Tells the current arrangement to throw an exception when the arranged method is invoked.
            </summary>
            <typeparam name="T">The type that the wrapper wraps</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">An instance of state3</param>
            <param name="exception">The exception to throw when the expectation is met</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WhenAssertingThat``2(Microsoft.MMF.States.StubVoidState3{``0,``1},System.Action{``0})">
            <summary>
            Sets up the assertion routine for validating the method in handler was called properly.
            </summary>
            <typeparam name="T">The object type that wrapper is wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The instance of state3</param>
            <param name="handler">The handler to invoke</param>
            <returns>An instance of void state 4</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WhenAssertingThatNew``2(Microsoft.MMF.States.StubVoidState3{``0,``1},System.Func{``0})">
            <summary>
            Sets up the assertion routine for validating the constructor in handler was called properly.
            </summary>
            <typeparam name="T">The object type that wrapper is wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The instance of state3</param>
            <param name="handler">>A lambda that invokes a constructor</param>
            <returns>An instance of void state 4</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WhenAssertingThat(Microsoft.MMF.States.StubVoidState3{Microsoft.MMF.MMFStatic,Microsoft.MMF.MMFStatic},System.Action)">
            <summary>
            Sets up the assertion routine for validating the static method in handler was called properly.
            </summary>
            <param name="state3">The instance of state3</param>
            <param name="handler">The handler to invoke</param>
            <returns>An instance of void state 4</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WhenAssertingThat``2(Microsoft.MMF.States.StubVoidState3{``0,``1},System.String,System.Object[])">
            <summary>
            Sets up the assertion routine for validating that a method was called properly.  This method 
            overload allows the assertion to be setup by name and is useful for cases where the asserted method 
            is not public.  If the method cannot be found, or the parameter types do not match, then a a
            StubRecordingException is thrown.
            </summary>
            <typeparam name="T">The object type that wrapper is wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The previous state</param>
            <param name="methodName">The name of the method to invoke</param>
            <param name="args">The arguments of the method</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WhenAssertingThat``2(Microsoft.MMF.States.StubVoidState3{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Sets up the assertion routine for validating that a particular method was called properly.  This method 
            overload allows the assertion to be setup by a specific method info, and is useful in cases where the 
            method is not public and can't be discovered easily.
            </summary>
            <typeparam name="T">The object type that wrapper is wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state3">The previous state</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments of the method</param>
            <returns>The next state</returns>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalled``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments a single time.  This is analogous to 
            calling WasCalledOneTime().
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledOneTime``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments a single time.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledTwoTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments two times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledThreeTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments three times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledFourTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments four times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledXTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1},System.Int32)">
            <summary>
            Validates that the given method was called with the arguments x times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
            <param name="x">The number of times that the asserted method should have been called</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledAtLeastOneTime``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments at least one time.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledAtLeastTwoTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments at least two times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledAtLeastThreeTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments at least three times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledAtLeastFourTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments at least four times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledAtLeastXTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1},System.Int32)">
            <summary>
            Validates that the given method was called with the arguments at least x times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
            <param name="x">The number of times to ensure that this method was called</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasNotCalled``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the method was not called - at all.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The fourth state in the call sequence</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledNoMoreThanOneTime``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments no more than one time.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledNoMoreThanTwoTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments no more than two times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledNoMoreThanThreeTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments no more than three times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledNoMoreThanFourTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1})">
            <summary>
            Validates that the given method was called with the arguments no more than four times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledNoMoreThanXTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1},System.Int32)">
            <summary>
            Validates that the given method was called with the arguments no more than x times.
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The previous state</param>
            <param name="x">The maximum number of times that we expect this method to be called</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.WasCalledBetweenXAndYTimes``2(Microsoft.MMF.States.StubVoidState4{``0,``1},System.Int32,System.Int32)">
            <summary>
            Validates that the given method was called with the arguments between min and max times
            (both arguments are inclusive).
            </summary>
            <typeparam name="T">The type of object that is being stubbed</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state4">The fourth state</param>
            <param name="minimum">The minimum number of times</param>
            <param name="maximum">The maximum number of times</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ValidateMethodExpectations``2(Microsoft.MMF.States.StubVoidState4{``0,``1},System.Int32,System.Int32)">
            <summary>
            This method holds the validation logic for all assertion methods.
            </summary>
            <typeparam name="T">The type of object that is being wrapped</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state">The base class for all states</param>
            <param name="minimum">The minimum number of times that the method can be called</param>
            <param name="maximum">The maximum number of times that the method can be called (or Int32.MaxValue for infinity)</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThat``2(Microsoft.MMF.States.StubVoidState5{``0,``1},System.Action{``0})">
            <summary>
            Asserts that the method invoked by the handler was called.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state5">The instance of state 5</param>
            <param name="handler">The handler to invoke</param>        
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThatNew``2(Microsoft.MMF.States.StubVoidState5{``0,``1},System.Func{``0})">
            <summary>
            Asserts that the constructor invoked by the handler was called.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state5">The instance of state 5</param>
            <param name="handler">>A lambda that invokes a constructor</param>        
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThat(Microsoft.MMF.States.StubVoidState5{Microsoft.MMF.MMFStatic,Microsoft.MMF.MMFStatic},System.Action)">
            <summary>
            Asserts that the method invoked by the handler was called.
            </summary>
            <param name="state5">The instance of state 5</param>
            <param name="handler">The handler to invoke</param>        
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThat``1(Microsoft.MMF.States.StubVoidState5{Microsoft.MMF.MMFStatic,Microsoft.MMF.MMFStatic},System.Func{``0})">
            <summary>
            Asserts that the method invoked by the handler was called.
            </summary>
            <typeparam name="V">The return type of the asserted method</typeparam>
            <param name="state5">The instance of state 5</param>
            <param name="handler">The handler to invoke</param>        
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThat``2(Microsoft.MMF.States.StubVoidState5{``0,``1},System.String,System.Object[])">
            <summary>
            Asserts that the method with the name methodName was called.  This overload can be used to 
            find a method by its name, and is useful in cases where the method is not public or 
            otherwise accessible.  If the method cannot be found, then a StubArrangingException is thrown.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state5">The previous state</param>
            <param name="methodName">The name of the method to assert</param>
            <param name="args">The arguments for the method</param>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by this name, with these parameter types could be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.ToAssertThat``2(Microsoft.MMF.States.StubVoidState5{``0,``1},System.Reflection.MethodBase,System.Object[])">
            <summary>
            Asserts that the method was called.  This overload can be used to assert method calls where the 
            method is not public and isn't easily discoverable.
            </summary>
            <typeparam name="T">The type of object we are wrapping</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <param name="state5">The previous state</param>
            <param name="method">The method to invoke</param>
            <param name="args">The arguments for the method</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.InvokeStubHandler``1(System.Delegate,Microsoft.MMF.Generation.IStub)">
            <summary>
            Invokes a delegate that calls a stubbed method.
            </summary>
            <typeparam name="T">The type that we refer to the stub by</typeparam>
            <param name="handler">A delegate to invoke</param>
            <param name="stub">The stub to invoke the handler on</param>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.FindNonPublicMethod(System.String,System.Object[],System.Object)">
            <summary>
            This method finds a private / non-public method on the stub type that has the specified name and arguments.
            </summary>
            <param name="methodName">The name of the method to search for</param>
            <param name="args">The arguments for the method</param>
            <param name="stub">The stub to find the method on</param>
            <returns>A MethodInfo that can be used to invoke the method via reflection</returns>
            <exception cref="T:Microsoft.MMF.Exceptions.StubArrangingException">Thrown if no method by this name, with these types, could be found</exception>
        </member>
        <member name="M:Microsoft.MMF.StubExtensionMethods.Reset(Microsoft.MMF.Generation.IStub)">
            <summary>
            Resets the state of a stub object.
            </summary>
            <param name="stub">The stub to reset</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.ILInstruction">
            <summary>
            This is a simple data structure that we use to represent an instruction in IL.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstruction.NO_ARGS">
            <summary>
            This static default value is used instead of newing new empty arrays 
            every time this object is created.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstruction.#ctor">
            <summary>
            Does nothing
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstruction.#ctor(System.Reflection.Emit.OpCode)">
            <summary>
            Creates an instruction out of the specified opcode.
            </summary>
            <param name="opCode">The opcode</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.ILInstruction.Arguments">
            <summary>
            Returns the arguments of the instruction.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry">
            <summary>
            This object holds all of the special cases that we need to properly redirect methods.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.mInstance">
            <summary>
            The one and only instance of this class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.mSpecialCases">
            <summary>
            This is a list of special cases.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.#cctor">
            <summary>
            Creates the special case registry.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.#ctor">
            <summary>
            Creates the special case registry.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.IsSpecialCase(System.Reflection.MethodBase)">
            <summary>
            Tell the caller whether or not this method needs to be handled differently.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if the method is a special case</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.SpecialCaseRegistry.HandleSpecialCase(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Handles a special case.
            </summary>
            <param name="method">The method that is a special case</param>
            <param name="tracker">The tracker to use to patch the special case</param>
        </member>
        <member name="T:Microsoft.MMF.Constraints.ContainsConstraint">
            <summary>
            Creates a constraint that checks the value of a string to see if it contains
            a certain string.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constraints.ContainsConstraint.mContainsString">
            <summary>
            The string to check with contains.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.ContainsConstraint.#ctor(System.Int32,System.String)">
            <summary>
            Creates the contains constraint out of the specified string.
            </summary>
            <param name="argIndex">The argument index to check</param>
            <param name="containsString">The string to check for contains</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.ContainsConstraint.Validate(System.Object)">
            <summary>
            validates that the string contains the specified text.
            </summary>
            <param name="argValue">The argument value to check</param>
            <returns>True if the string value of argValue contains the text</returns>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.StubExpectationViolationException">
            <summary>
            A stub expectation violation exception adds a replay log that allows users to debug 
            failed stub assertions.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.StubExpectationViolationException.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean})">
            <summary>
            Creates the stub expectation violation expection.
            </summary>
            <param name="message">The message of the expection</param>
            <param name="validationMessages">A list of validation messages</param>
            <param name="results">A list of results from the expectations</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.StubExpectationViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="P:Microsoft.MMF.Exceptions.StubExpectationViolationException.ValidationMessages">
            <summary>
            Gets / sets the list of validation messages.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Exceptions.StubExpectationViolationException.Results">
            <summary>
            Gets / sets a list of results from the validation attempts.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Exceptions.StubExpectationViolationException.HTMLReport">
            <summary>
            Returns an html report of the stub assertion.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.ReturnState2`2">
            <summary>
            Represents the second state in the expectation building process, with a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.ReturnState3`2">
            <summary>
            Represents the third state in the expectation building process, with a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.ReturnState4`2">
            <summary>
            Represents the fourth state in the expectation building process, with a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.ReturnState5`2">
            <summary>
            Represents the fifth state in the expectation building process, with a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.ReturnState6`2">
            <summary>
            Represents the sixth state in the expectation building process, with a return value.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.States.StubReturnState2`3">
            <summary>
            Represents the second state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return type of the method that we're stubbing</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubReturnState2`3.#ctor(`1)">
            <summary>
            Creates an instance of StubReturnState2.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubReturnState3`3">
            <summary>
            Represents the third state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return value of the method we are stubbing</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubReturnState3`3.#ctor(`1)">
            <summary>
            Creates the StubReturnState3.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubReturnState4`3">
            <summary>
            Represents the fourth state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return value of the method we are stubbing</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubReturnState4`3.#ctor(`1)">
            <summary>
            Creates the return state4.
            </summary>
            <param name="stubbedObject">The stubbed object wrapper</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubReturnState5`3">
            <summary>
            Represents the fifth state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return value of the method we are stubbing</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubReturnState5`3.#ctor(`1)">
            <summary>
            Creates the return state5.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.States.StubReturnState6`3">
            <summary>
            Represents the sixth state in a stub creation sequence.
            </summary>
            <typeparam name="T">The type that we are stubbing</typeparam>
            <typeparam name="U">The type that we refer to T by</typeparam>
            <typeparam name="V">The return value of the method we are stubbing</typeparam>
        </member>
        <member name="M:Microsoft.MMF.States.StubReturnState6`3.#ctor(`1)">
            <summary>
            Creates an instance of state6.
            </summary>
            <param name="stubbedObject">The object that we're stubbing</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.ShortInlineVarTranslator">
            <summary>
            Translates the short inline var.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineVarTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineVarTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the short inline var instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineVarTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a short inline var instruction.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.MockObjectWrapper`2">
            <summary>
            This is the base class for all mock object wrappers.
            </summary>
            <typeparam name="T">The type that we are mocking</typeparam>
            <typeparam name="U">The type that we refer to the generated type by</typeparam>
        </member>
        <member name="M:Microsoft.MMF.MockObjectWrapper`2.#ctor(`1)">
            <summary>
            Creates the mock object wrapper.
            </summary>
            <param name="target">The target object</param>
        </member>
        <member name="T:Microsoft.MMF.MockObjectWrapper`1">
            <summary>
            The MockObjectWrapper aggregates the actual mock object.  It serves as a starting point 
            for the syntax chain that allows method expectations to be set.
            </summary>
            <typeparam name="T">The type of object to mock.</typeparam>
        </member>
        <member name="M:Microsoft.MMF.MockObjectWrapper`1.#ctor(`0)">
            <summary>
            Creates the mock object wrapper.
            </summary>
            <param name="mockedObject">The mock object that we are wrapping</param>
        </member>
        <member name="T:Microsoft.MMF.MockMimicObjectWrapper`1">
            <summary>
            The MockMimicObjectWrapper aggregates the actual mimic object.  It serves as a starting point 
            for the syntax chain that allows method expectations to be set.
            </summary>
            <typeparam name="T">The type that we are mimicking</typeparam>
        </member>
        <member name="M:Microsoft.MMF.MockMimicObjectWrapper`1.#ctor(Microsoft.MMF.MMFMimic)">
            <summary>
            Creates the mock / mimic object wrapper.
            </summary>
            <param name="target">The generated object</param>
        </member>
        <member name="P:Microsoft.MMF.MockMimicObjectWrapper`1.Microsoft#MMF#IMimicObjectWrapper{T}#Target">
            <summary>
            Returns the mimic object.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Profiler">
            <summary>
            The profiler class serves as an entry point for a test harness to register itself to listen to events.
            When the Redirection API traps a method or a new, it forwards the call to the profiler which 
            then notifies any listeners of the event.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Profiler.mInstance">
            <summary>
            A singleton instance.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Profiler.mObservers">
            <summary>
            This is a list of observers that are paying attention to the events on the profiler.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Profiler.#cctor">
            <summary>
            The static constructor.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Profiler.#ctor">
            <summary>
            Creates the profiler object.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Profiler.AddObserver(Microsoft.MMF.IProfilerObserver)">
            <summary>
            Adds an observer to the list.
            </summary>
            <param name="observer">The observer to add</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.RemoveObserver(Microsoft.MMF.IProfilerObserver)">
            <summary>
            Removes an observer from the list.
            </summary>
            <param name="observer">The observer to remove</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireMethodInTestStartedEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires a method-in-test started event.  This method should be called from the redirection API.
            </summary>
            <param name="instance">The object instance that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireMethodInTestFinishedEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires a method-in-test finished event.  This method should be called from the redirection API.
            </summary>
            <param name="instance">The object instance that the method was invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireMethodStartedEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires a method started event.  This method should be called from the redirection API.
            </summary>
            <param name="instance">The instance that the method is invoked on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireMethodFinishedEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires a method finished event.  This method should be called from the redirection API.
            </summary>
            <param name="instance">The instance that the method finished on</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireRedirectionConsidered(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            This method is called when the framework is considering whether or not to redirect
            into a particular method.  The arguments contain all of the information neccessary
            for the tester to determine whether they should redirect into a method or not.  This 
            event gives the user the option to override the default scope of a test.
            </summary>
            <param name="instance">The instance that is being redirected into</param>
            <param name="args">The arguments of the redirection</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireNewObjectEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires an event that tells all observers that a new object of a particular type was created.
            </summary>
            <param name="instance">Always null</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="M:Microsoft.MMF.Profiler.FireExceptionEvent(System.Object,Microsoft.MMF.RedirectionArgs)">
            <summary>
            Fires an event that tells all observers that an exception was thrown.
            </summary>
            <param name="instance">Always null</param>
            <param name="args">The arguments of the event</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.InterlockedClassSpecialCase">
            <summary>
            The system.threading.Interlocked class can't be intercepted, because doing so causes synchronization
            errors due to the nature of redirection.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.InterlockedClassSpecialCase.#ctor">
            <summary>
            Creates the special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.InterlockedClassSpecialCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if the method's declaring type is Interlocked and the method is public and static.
            </summary>
            <param name="method">The method to match</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.InterlockedClassSpecialCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches by simply calling the method.
            </summary>
            <param name="matchingMethod"></param>
            <param name="tracker"></param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.MakeLocalFieldPatch`1">
            <summary>
            This is a patch that creates a local field of type T on the class that this is patching.
            It leaves the FieldInfo of that field on the stack.
            </summary>
            <typeparam name="T">The type of field that the patch will create</typeparam>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.MakeLocalFieldPatch`1.#ctor">
            <summary>
            Creates the local field patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.MakeLocalFieldPatch`1.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the template by declaring a local field and putting it's FieldInfo on the top of the stack.
            </summary>
            <param name="tracker">The track to patch the template with</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.CallAggregatedClassPatch">
            <summary>
            This class is used to invoke an aggregated class, in cases where we have a partial mock / stub.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.CallAggregatedClassPatch.#ctor">
            <summary>
            Creates the patch class.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.CallAggregatedClassPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code to call the aggregated class.  This assumes that the aggregated class
            is on top of the stack when it's invoked.
            </summary>
            <param name="tracker">The tracker to use to patch</param>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.MimicTestException">
            <summary>
            This exception is thrown from inside the mimic test class to signify that something went wrong creating 
            tests and their redirections.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MimicTestException.#ctor(System.String)">
            <summary>
            Creates the mimic test exception.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MimicTestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:Microsoft.MMF.StaticMimicTest">
            <summary>
            This class can be used to redirect static methods so that they can be tested using the redirection API.
            Because static methods do not need an instance object to be invoked on, nothing needs to be 
            passed into this class when it is created.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StaticMimicTest.#ctor">
            <summary>
            Creates a test object that can be used to test static methods.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StaticMimicTest.Test(System.Action)">
            <summary>
            This method is used to test static methods using redirection.  It duplicates the methods IL, but 
            replaces calls to the methods that it was compiled against with calls to mock objects instead. 
            </summary>
            <param name="testStatement">The test statement for a static method, something like Environment.SetEnvironmentVariable(...)</param>
        </member>
        <member name="M:Microsoft.MMF.StaticMimicTest.Test``1(System.Func{``0})">
            <summary>
            This method is used to test static methods using redirection.  It duplicates the methods IL, but 
            replaces calls to the methods that it was compiled against with calls to mock objects instead. 
            </summary>
            <typeparam name="U">The type that the static method returns</typeparam>
            <param name="testStatement">The test statement, something like Environment.GetEnvironmentVariable(...)</param>
            <returns>A value of U returned by the method invoked in TestStatement</returns>
        </member>
        <member name="M:Microsoft.MMF.StaticMimicTest.Test(System.Reflection.MethodBase,System.Object[])">
            <summary>
            This method can be used to test a private or protected static method under redirection.
            </summary>
            <param name="methodInTest">The method to invoke</param>
            <param name="args">The arguments of the method</param>
            <returns>The result of the redirected method</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineSigTranslator">
            <summary>
            Translates an inline sig call.  The inline sig operand occurs for calli OpCode.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSigTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSigTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the inlinesig operand.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSigTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Not currently supported.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.CalliParameters">
            <summary>
            Holds the parameters neccessary to generate a calli instruction.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Translators.CalliParameters.mCallingConvention">
            <summary>
            The calling convention of the call.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Translators.CalliParameters.mReturnType">
            <summary>
            The return type.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Translators.CalliParameters.mParameterTypes">
            <summary>
            The parameter type array.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Translators.CalliParameters.mReplacementMethod">
            <summary>
            This is the method that we will call instead of the original method.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.CalliParameters.#ctor(System.Reflection.MethodBase,System.Reflection.MethodInfo)">
            <summary>
            Creates a calli parameters object that can be used to emit the opcodes neccessary to call
            a method indirectly.
            </summary>
            <param name="originalMethod">The original method.  This is where we get the calling convention and parameters from</param>
            <param name="replacementMethod">The replacement method</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.CalliParameters.Method">
            <summary>
            Gets the function pointer that we should call indirectly.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.CalliParameters.CallingConvention">
            <summary>
            Returns the calling convention of the indirect call.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.CalliParameters.ReturnType">
            <summary>
            Gets the return type of the calli call.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Translators.CalliParameters.ParameterTypes">
            <summary>
            This is an array of parameter types.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.MakeLocalFieldWithAttributePatch`2">
            <summary>
            Makes a local field and adds a custom attribute to it so that it can be 
            found via reflection.
            </summary>
            <typeparam name="T">The field type</typeparam>
            <typeparam name="U">The attribute type</typeparam>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.MakeLocalFieldWithAttributePatch`2.#ctor">
            <summary>
            Creates the patch object.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.MakeLocalFieldWithAttributePatch`2.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code with a field that has a custom attribute of type U.
            </summary>
            <param name="tracker">The opcode tracker</param>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.StubArrangingException">
            <summary>
            This exception is thrown in cases where a unit test attempted to 
            arrange a stub in a way that was invalid.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.StubArrangingException.#ctor(System.String)">
            <summary>
            Creates the stub arranging exception.
            </summary>
            <param name="message">The message of the exception.</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.StubArrangingException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a stub arranging exception with the specified inner exception.
            </summary>
            <param name="message">The message of the exception</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.StubArrangingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineFieldTranslator">
            <summary>
            Translates an inline field.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineFieldTranslator.#ctor">
            <summary>
            Constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineFieldTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inline field instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineFieldTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a field info object.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.MethodExpectation">
            <summary>
            This object represents the invocation of a method on a mock object.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.MethodExpectation.EMPTY_ARGUMENT_ARRAY">
            <summary>
            This is a static readonly array of empty objects.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.MethodExpectation.EMPTY_INDEX_ARRAY">
            <summary>
            This is a static readonly array of empty integers.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.MethodExpectation.mCount">
            <summary>
            This is the number of times that this method has been invoked.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.MethodExpectation.mMinimumHandler">
            <summary>
            This is the handler that handles minimum number of times.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.StateMachine.MethodExpectation.mMaximumHandler">
            <summary>
            This is the handler that handles maximum number of times.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.#ctor">
            <summary>
            Creates a method expectation.  This should never be created directly.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.Reset">
            <summary>
            Resets the state of the validator.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.PreValidate(System.Object,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Validates that this method call is acceptable.
            </summary>
            <param name="mockedObject">This is the object that is being mocked.</param>
            <param name="mockedMethod">This is the method that is being called on the mocked object.</param>
            <param name="args">The arguments of the method.</param>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.Validate">
            <summary>
            Validates that we can make this move one more time.  Basically, all we do is call
            the MaximumNumberOfTimes method to make sure that this method can be invoked once more.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.PostValidate">
            <summary>
            Validates that this method was invoked the minimum number of times.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.GetReturnValue(System.Object[])">
            <summary>
            Returns the return value for the method expectation either by returning the static value, or 
            by invoking the return value delegate.
            </summary>
            <param name="args">The arguments of the method</param>
            <returns>The return value.</returns>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.InvokeNonValidatingCallback(System.Object[])">
            <summary>
            If there is a non-validating callback set, this will invoke it.
            </summary>
            <param name="args">The arguments of the callback</param>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.CopyOutParametersIntoArgArray(System.Object[])">
            <summary>
            If the method expectation has out parameters and a callback was assigned, then we use the values 
            returned from the callback for out parameters.  Ref parameters get overwritten by default, but this 
            has no consequence usually because it's the same values that are passed in.  If a callback is used,
            we assume that it will assign the out parameter values - otherwise, we copy the default values that
            were set when the expectation was created.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.MethodExpectation.ToLogString">
            <summary>
            Returns a string that represents the method expectation
            </summary>
            <returns>A string that represents the expectation</returns>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.MockedObject">
            <summary>
            This is the object we are mocking.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.MockedMethod">
            <summary>
            This is the method that we are mocking.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.ReturnValue">
            <summary>
            This is the generic object that this method returns.  Can only be 
            set using the strongly typed TypedReturnValue property!
            </summary>        
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.ReturnValueHandler">
            <summary>
            Allows the user to set a return value method instead of a return value
            object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.MinimumNumberOfTimes">
            <summary>
            This is the minimum number of times that the method is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.MaximumNumberOfTimes">
            <summary>
            This is the maximum number of times that the method is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.IsDefaultRangeHandler">
            <summary>
            This bool is true unless somebody explicitly sets 
            a min / max range.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.Arguments">
            <summary>
            These are the arguments into the method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.OutParametersToAssign">
            <summary>
            These are the objects that should be assigned to any out parameters.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.ArgumentsToIgnore">
            <summary>
            These are the indexes of the arguments to ignore.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.IgnoresAllArguments">
            <summary>
            When true, the unit test should ignore every argument in the invoked method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.DoDefault">
            <summary>
            When true, the expectation tells the mock to do the default the default
            action when the expectation is met.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.ExceptionToThrow">
            <summary>
            When this is not null, we are supposed to throw an exception
            when the method is called.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.Callback">
            <summary>
            When this is set, it will be invoked with the arguments 
            that were passed into the method expectation.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.NonValidatingCallback">
            <summary>
            This is a non-validating callback handler that is invoked in some cases.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.ValidationFailureReason">
            <summary>
            If any part of the validation process fails, this property should have a failure reason which
            can be logged for debugging purposes.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.MethodExpectation.Constraints">
            <summary>
            Gets / sets the constraints for this method expectation.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.ILInstructionReader">
            <summary>
            This class is used to read an array of IL and parse instructions from it.  Without
            this class, reading instructions from byte arrays is very difficult.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.ALL_OPCODES">
            <summary>
            Every opcode in the MSIL language 
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.PREFIX_OPCODES">
            <summary>
            For opcodes that are more than 1 byte long, we have an additional lookup.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.mBytes">
            <summary>
            This is the stream of bytes that we're iterating over.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.#cctor">
            <summary>
            The static constructor creates the OpCodes array.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.#ctor(System.Byte[])">
            <summary>
            Creates the instruction reader out of the specified array of bytes.
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.GetEnumerator">
            <summary>
            Returns a new instance of the enumerator.
            </summary>
            <returns>An enumerator which iterates over the byte code</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a new instance of the enumerator.
            </summary>
            <returns>An enumerator which iterates over the byte code</returns>
        </member>
        <member name="P:Microsoft.MMF.Generation.ILInstructionReader.IsLastInstruction">
            <summary>
            Returns true if this is the last instruction in the sequence.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator">
            <summary>
            This is the instance class that will actually iterate over the instruction
            byte array.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.mBytes">
            <summary>
            This is the stream of bytes that we're iterating over.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.mIndex">
            <summary>
            This is the current index in the list of bytes.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.mCurrentInstruction">
            <summary>
            This is the current instruction in the reader.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.mReader">
            <summary>
            This is the instance of the instruction reader.  
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.#ctor(Microsoft.MMF.Generation.ILInstructionReader)">
            <summary>
            Creates the enumerator.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.Dispose">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.MoveNext">
            <summary>
            Moves to the next instruction in the byte array.
            </summary>
            <returns>True if we can move next.  Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.Current">
            <summary>
            Returns the current ILInstruction
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.ILInstructionReader.ILInstructionReaderEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current instruction
            </summary>
        </member>
        <member name="T:Microsoft.MMF.TimesValidationHandler">
            <summary>
            This delegate is used by the mock method invocation object
            to dynamically validate the number of times that a method
            was called is acceptable.
            </summary>
            <param name="numberOfTimes">The number of times that a method was called.</param>
            <returns>True if the method was called an acceptable number of times.</returns>
        </member>
        <member name="T:Microsoft.MMF.RecorderOrderToggledHandler">
            <summary>
            This delegate represents a method that is called by an order toggler 
            to toggle the recording order of method calls.
            </summary>
            <param name="isOrdered">When true, the methods should be added in a ordered fashion.</param>
        </member>
        <member name="T:Microsoft.MMF.CallbackHandler">
            <summary>
            This delegate represents a method that is invoked when a method invocation
            expectation is reached.
            </summary>
            <param name="args">The arguments of the method</param>
        </member>
        <member name="T:Microsoft.MMF.CallbackHandler`1">
            <summary>
            This delegate represents a method that is invoked when a method invocation
            expectation is reached.
            </summary>
            <typeparam name="U">This is the return type of the method</typeparam>
            <param name="args">The arguments of the method</param>
            <returns>The return value of the handler</returns>
        </member>
        <member name="T:Microsoft.MMF.RedirectionHandler">
            <summary>
            This delegate represents a handler that can respond to the events on the profiler API.
            </summary>
            <param name="instance">The instance that was invoked</param>
            <param name="args">The arguments of the method</param>
        </member>
        <member name="T:Microsoft.MMF.RedirectionArgs">
            <summary>
            This class is as the argument for every redirection event fire by the profiler API.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.RedirectionArgs.#ctor">
            <summary>
            Creates the redirection args object.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.ShouldRedirect">
            <summary>
            This property gives users the ability to override the default scoping operator 
            by manually forcing redirection to redirect into a particular method.  If an 
            event handler for the RedirectionStarted event changes this value to true, then
            the method will be redirected even if it's outside the scope of the test.  Alternately,
            if it changes it to false, then it will not redirect the method even if it's within the 
            scope of the test.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.Type">
            <summary>
            This is the type that declares the method that was invoked.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.Exception">
            <summary>
            If the event generated an exception, it will be stored in this property.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.Method">
            <summary>
            This is the method that the redirection took place on.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.Arguments">
            <summary>
            These are the arguments of the method.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.ReturnValue">
            <summary>
            This is the return value from the method, if applicable.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsSameClass">
            <summary>
            This flag is true when the method is being invoked from the same 
            class as the method-in-test.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsBaseClass">
            <summary>
            This flag is true when the method is being invoked on the base 
            class of the method-in-test.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsOtherClass">
            <summary>
            This flag is true when the invoked method is on a different class from
            the type in test.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsSameAssembly">
            <summary>
            This flag is true when the invoked method is in an assembly that is part of the redirection.
            By default, this list only includes the assembly that defines the method-in-test, but it 
            can be expanded using the RedirectsInto method on the TestHarness class.  This flag is true
            so long as the invoked method is within the scope of those assemblies.  Otherwise, it is false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsStatic">
            <summary>
            True when the method is static.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.RedirectionArgs.IsConstructor">
            <summary>
            True when the method is a constructor.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.Template">
            <summary>
            This class represents a class template that we use to generate code.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Template.mClassTemplateType">
            <summary>
            This is the type of the template.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Template.mModuleBuilder">
            <summary>
            This is the module builder that we are using to generate the current template.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Template.mTypeBuilder">
            <summary>
            This is the type builder that we use to create the type.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.#ctor(System.Type)">
            <summary>
            Creates a template out of a specific type.
            </summary>
            <param name="classTemplateType">The class template type</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.StartGeneratingType(System.Type,System.Type,System.Type[],Microsoft.MMF.Generation.EClassTemplateTypes,System.Reflection.Emit.ModuleBuilder)">
            <summary>
            Starts to generate a type based on the template.  This will automatically generated any members,
            properties and methods on the template class that are marked with the TemplateMember attribute.
            
            This method will also automatically generate constructors to to the base class.
            </summary>
            <param name="baseClassType">The base class of the generated type</param>
            <param name="mockedType">The type that we are mocking</param>
            <param name="interfaces">Additional interfaces to implement</param>
            <param name="classTemplate">The class template of the type to start generating</param>
            <param name="moduleBuilder">The module builder to create the type in</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.GenerateMockMethods(System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo},Microsoft.MMF.Generation.EMethodTemplateTypes)">
            <summary>
            Mocks every method in the list using a mock template that fits the passed in parameters.
            </summary>
            <param name="methods">An enumeration of methods to mock</param>
            <param name="methodTemplateType">The parameters of the template to use</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.FinishGeneratingType">
            <summary>
            Once we're done generating the type, this method will create it and return it to the caller.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.GetTemplateMethod(Microsoft.MMF.Generation.EMethodTemplateTypes,System.Type)">
            <summary>
            Searches the class template for a method template that matches the template types
            enumeration.
            </summary>
            <param name="methodTemplate">The method template</param>
            <param name="returnType">The return type of the method</param>
            <returns>A template method info</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.CloneMethod(System.Reflection.Emit.ModuleBuilder,System.Reflection.MethodBase)">
            <summary>
            Clones a method by the same name into the type builder that is part of the dynamic module. This method uses
            the translation API to clone the bits from one method into another.  It does not, however, instrument that 
            method unless there are calls to Patcher.Patch within it.
            </summary>
            <param name="moduleBuilder">The dynamic module builder</param>
            <param name="method">The method to clone</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Template.CloneMethod(System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.ILGenerator,System.Reflection.MethodBase,System.Reflection.MethodBase)">
            <summary>
            Clones a method using a specific methodBuilder.  This allows us to define a method with a different
            signature than the method we are cloning.  Used when we are generating mock methods.
            </summary>
            <param name="moduleBuilder">The module builder</param>
            <param name="generator">The IL Generator used to build the method</param>
            <param name="templateMethod">The method to clone</param>
            <param name="mockedMethod">The method that we're mocking</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.GetCurrentMethodCase">
            <summary>
            This is the special case that handles calls to MethodBase.GetCurrentMethod().
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetCurrentMethodCase.#ctor">
            <summary>
            Creates the special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetCurrentMethodCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if a method matches this special case.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if it matches; otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetCurrentMethodCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patch the redirected method.
            </summary>
            <param name="matchingMethod">The method that matched the special case</param>
            <param name="tracker">The tracker to use to patch</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Patches.GetCurrentMethodPatch">
            <summary>
            This patch is used to insert dynamic code into a template that returns the method 
            that is currently executing.  We need this because in order to handle generic methods,
            we need to explicitly create the method info out of the methods' generic arguments.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetCurrentMethodPatch.#ctor">
            <summary>
            Creates the patch.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Patches.GetCurrentMethodPatch.Patch(Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the template with code that puts the current method on the top of the stack.
            </summary>
            <param name="tracker">The tracker to use</param>
        </member>
        <member name="T:Microsoft.MMF.Constraints.SatisfiesConstraint`1">
            <summary>
            Creates a constraint that invokes a custom delegate to validate an argument value 
            at a specific index.
            </summary>
            <typeparam name="T">The type to validate</typeparam>
        </member>
        <member name="F:Microsoft.MMF.Constraints.SatisfiesConstraint`1.mCallback">
            <summary>
            This is the callback that we will invoke to test the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.SatisfiesConstraint`1.#ctor(System.Int32,System.Func{`0,System.Boolean})">
            <summary>
            Creates the satisfies constraint out of the specified index and callback.
            </summary>
            <param name="argIndex">The argument index</param>
            <param name="callback">The callback</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.SatisfiesConstraint`1.Validate(System.Object)">
            <summary>
            Invokes the callback to validate the argument value.
            </summary>
            <param name="argValue">The argument to validate</param>
            <returns>True if the callback validates, otherwise false</returns>
        </member>
        <member name="T:Microsoft.MMF.UninitializedObject">
            <summary>
            This is a utility class that makes the creation of uninitialized objects
            a little bit easier for consumers.  This class contains extension and static methods
            that make it easier to deal with sealed classes, etc.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.UninitializedObject.Create``1">
            <summary>
            Creates an uninitialized instance of type T.
            </summary>
            <typeparam name="T">The type to create</typeparam>
            <returns>An uninitialized instance of type T</returns>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.DynamicTypeCreationException">
            <summary>
            This exception is thrown if there is a problem creating a mock object.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.DynamicTypeCreationException.#ctor(System.String)">
            <summary>
            Creates the mock creation exception.
            </summary>
            <param name="message">The message of the error.</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.DynamicTypeCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:Microsoft.MMF.StateMachine.ExpectationLog">
            <summary>
            This class is used to log replay exceptions so that we can review them after a failure.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ExpectationLog.#ctor">
            <summary>
            Creates the expectation log.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ExpectationLog.Reset">
            <summary>
            Resets the log.  This should be called at the start of every new recording.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ExpectationLog.Log(Microsoft.MMF.StateMachine.AutomataState,Microsoft.MMF.StateMachine.MethodExpectation,Microsoft.MMF.StateMachine.AutomataState,System.Boolean)">
            <summary>
            Creates a new method expectation log entry.
            </summary>
            <param name="state1">The state that we were in when we ran this expectation</param>
            <param name="expectation">The method expectation object</param>
            <param name="state2">The state that we were evaluating whether we could go to</param>
            <param name="succeeded">True if the expectation was met or not</param>
        </member>
        <member name="M:Microsoft.MMF.StateMachine.ExpectationLog.PrintLogToDebug(System.Boolean)">
            <summary>
            Prints this log to the debug log.
            </summary>
            <param name="isFailure">This should be true when it was called after a failure</param>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLog.ExpectationEntries">
            <summary>
            This is a list of the methods that were executed in the state machine.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLog.LastEntry">
            <summary>
            Returns the last entry in the expectation log.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.StateMachine.ExpectationLog.IterationNumber">
            <summary>
            This is the iteration number.  This is a different value than the to and from
            state.  It's incremented every time an expectation is matched.  This allows us to 
            compare the most recent set of failures instead of all of them and makes erroring 
            a lot easier.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Exceptions.MMFException">
            <summary>
            This is a generic MMF Exception.  It can be thrown from many different places, from many different
            API's and is not specific to Mocks, Stubs, or Redirection.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MMFException.#ctor(System.String)">
            <summary>
            Creates the exception object.
            </summary>
            <param name="message">The message of the exception</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MMFException.#ctor(System.String,System.Exception)">
            <summary>
            Creates the exception out of the specified message and inner exception.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Microsoft.MMF.Exceptions.MMFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A constructor that allows the exception to be serialized.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:Microsoft.MMF.Constraints.AnyValueConstraint">
            <summary>
            Defines a constraint that will always validate the particular argument type.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.AnyValueConstraint.#ctor(System.Int32)">
            <summary>
            Creates the AnyValueConstraint object.
            </summary>
            <param name="argIndex">The argument index</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.AnyValueConstraint.Validate(System.Object)">
            <summary>
            This always returns true, regardless of what the value is.
            </summary>
            <param name="argValue">The argument to validate</param>
            <returns>True, regardless of the argument value</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineITranslator">
            <summary>
            Translates an inline I instruction
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineITranslator.#ctor">
            <summary>
            Default constructor does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineITranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates an inlineI instruction
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineITranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline I opcode.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.ERedirectionScope">
            <summary>
            This enumeration defines the scope of a redirected method.  The scope indicates 
            how recursive redirection will be: whether it will redirect into other classes or 
            assemblies.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.MethodInTest">
            <summary>
            Indicates that only the method in test should be redirected.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.SameClass">
            <summary>
            Indicates that methods in the same class as the method in test should
            be redirected.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.BaseClass">
            <summary>
            Indicates that methods that are defined in the base class of the method
            in test should be redirected.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.AllClasses">
            <summary>
            Indicates that methods in all classes should be redirected, regardless of whether 
            they are the same class that is being tested.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.StaticMethods">
            <summary>
            Indicates that calls into static methods should be redirected.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.Constructors">
            <summary>
            Indicates that the test should redirect into constructors.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.ERedirectionScope.Everything">
            <summary>
            This flag will include everything.  Be careful when expanding the scope this large; it can have 
            unintended consequences.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Constants">
            <summary>
            This class holds constants used throughout the Mock API.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.REPORT_XSLT_FILE_NAME">
            <summary>
            This is the name of the mmf log html file.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.REPORT_XSLT_RESOURCE_PATH">
            <summary>
            This is the resource path to the embeded XSLT file.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.STRONG_NAME_KEY_PATH">
            <summary>
            This is the resource path to the snk file that is used to strong name the generated assemblies.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.MOCKS_ASSEMBLY_NAME">
            <summary>
            This is the name of the mock assembly
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.MIMIC_TESTS_ASSEMBLY_NAME">
            <summary>
            This is the name of the mimic test assembly
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.STUBS_ASSEMBLY_NAME">
            <summary>
            This is the name of the stubs assembly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.INDIRECTION_ASSEMBLY_NAME">
            <summary>
            This is the name of the indirection assembly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.REGISTRY_CLASS_NAME">
            <summary>
            This is the full name of the Registry class in the Indirection assembly.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.ADD_ONCALL_HANDLER_METHOD">
            <summary>
            This is the name of the add method for the OnCall event on the registry class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.REMOVE_ONCALL_HANDLER_METHOD">
            <summary>
            This is the name of the remove method for the OnCall event on the registry class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.ADD_ONSTATICCALL_HANDLER_METHOD">
            <summary>
            This is the name of the add method for the OnStaticCall event on the registry class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constants.REMOVE_ONSTATICCALL_HANDLER_METHOD">
            <summary>
            This is the name of the remove method for the OnStaticCall event on the registry class.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constants.#ctor">
            <summary>
            Not to be created.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Parameterize">
            <summary>
            This class is used to parameterize the arguments of a redirected method.  The static methods within
            the parameterize class can be embedded in a Test statement.  The redirection API will automatically 
            iterate through all of the possible values and invoke a method-in-test with the specified argument values.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Parameterize.mCurrentIndexes">
            <summary>
            This list keeps track of the argument indexes that we are iterating through
            in the order that they come to us.  They will always come to us in the correct 
            order, where the earlier arguments will be added to the front of the list.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Parameterize.mCurrentValues">
            <summary>
            This list keeps track of the current value for a given iteration.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Parameterize.mMaxIndexList">
            <summary>
            This sorted list keeps track of the maximum number of items in each argument index.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Parameterize.mIsBeingParameterized">
            <summary>
            This bool gets set to true if the Parameterize class is being actively used
            in the current redirection.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Parameterize.mInstance">
            <summary>
            This is the one and only instance of the Parameterize class.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.#ctor">
            <summary>
            The private constructor creates the static data structures.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Reset">
            <summary>
            Resets the state of the Parameterize class.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.IsBeingParameterized">
            <summary>
            Returns true if the current method is being parameterized or not.  This 
            property gets consumed by redirected method roots.  When an exception gets caught, it 
            calls this method to see if it should rethrow the exception or not.  If the method's
            parameters are being parameterized, then the catch should NOT rethrow it.  Otherwise, it
            should.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Values``1(``0[])">
            <summary>
            Parameterizes the values in the array when invoking a redirected method.
            </summary>
            <typeparam name="T">The type of the argument to parameterize</typeparam>
            <param name="values">An array of values to iterate through</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Values``1(``0[],System.Int32)">
            <summary>
            This is the actual method that will iterate through a list of values.  Internally,
            it keeps track of where it is in the array using sorted lists and other data structures.  If 
            the values array is empty, the method will throw an exception.
            </summary>
            <typeparam name="T">The type of argument to iterate through</typeparam>
            <param name="values">An array of values to iterate</param>
            <param name="index">The index of the argument to iterate through</param>
            <returns>The next instance of values</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.List``1(System.Collections.Generic.List{``0})">
            <summary>
            Parameterizes the values in the specified list by iterating through each of them.
            </summary>
            <typeparam name="T">The object type to iterate through</typeparam>
            <param name="listOfValues">A list of values to iterate through</param>
            <returns>The default value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.List``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            This is the actual parameterize method that will be invoked.  It simply iterates 
            through a list of values one at a time.
            </summary>
            <typeparam name="T">The type to iterate through</typeparam>
            <param name="listOfValues">A list of values to iterate over</param>
            <param name="index">The argument index</param>
            <returns>The next value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Range(System.Int32,System.Int32)">
            <summary>
            Allows a test to be parameterized with a range of integer values.  The range generated is inclusive, meaning 
            Range(1, 3) will iterate over values 1, 2 and 3.
            </summary>
            <param name="start">The starting index</param>
            <param name="end">The ending index</param>
            <returns>The next integer in the range</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Range(System.Int32,System.Int32,System.Int32)">
            <summary>
            This is the actual method that is called to iterate through a range.
            </summary>
            <param name="start">The starting index</param>
            <param name="end">The ending index</param>
            <param name="index">The argument index to parameterize</param>
            <returns>The next integer in the sequence</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Enumeration``1">
            <summary>
            Parameterizes an enumeration by iterating over all of its values.  The enumeration must have 
            at least 2 values in it.
            </summary>
            <typeparam name="T">The enumeration to parameterize</typeparam>
            <returns>The first value of the enumeration</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.Enumeration``1(System.Int32)">
            <summary>
            This is the actual method that will iterate through the enumeration values.
            </summary>
            <typeparam name="T">The type to enumerate through</typeparam>
            <param name="index">The index of the argument to iterate</param>
            <returns>The next value of the enumeration</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.GetNextIndex(System.Int32,System.Int32)">
            <summary>
            Figures out the next value in the x-nested loops.
            </summary>
            <param name="argIndex">The argument index to get the parameter number for</param>
            <param name="max">The maximum number of iterations at this index</param>
            <returns>The next index of the argument to return</returns>
        </member>
        <member name="M:Microsoft.MMF.Parameterize.IsDone">
            <summary>
            Returns true after we have iterated through all of the possible parameters.
            </summary>
            <returns>True if we have iterated through everything.  Otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Templates.MockTemplate">
            <summary>
            This is the class template for all mock objects.  It contains template methods 
            for every type of mock we may ever want to generate.  The IL of this class and it's 
            methods are cloned for every mock object that the MMF generates.  
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.Templates.MockTemplate.MMFStatic">
            <summary>
            This is a static object that we use to mark the 'this' pointer on static method calls.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.#ctor">
            <summary>
            Creates the mock template.  Generated classes will have their own constructors.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.DefaultConstructor">
            <summary>
            This is the template for constructors.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.DefaultNoReturn">
            <summary>
            This is the default mock method template for a method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.DefaultWithReturn``1">
            <summary>
            This is the default mock template method for a method that has a return value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.PartialNoReturn">
            <summary>
            This is the template for a partial mock method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.PartialWithReturn``1">
            <summary>
            This is the method template for a partial mock method that has a return value.
            </summary>
            <typeparam name="T">The return type for the method</typeparam>
            <returns>The value of T</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.StaticNoReturn">
            <summary>
            This is the static mock method template for a method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.StaticWithReturn``1">
            <summary>
            This is the static mock method template for a method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.DefaultMimicNoReturn">
            <summary>
            This is the default mock / mimmic method template for a method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.DefaultMimicWithReturn``1">
            <summary>
            This is the default mock / mimic template method for a method that has a return value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.PartialMimicNoReturn">
            <summary>
            This is the template for a partial mock method that has no return value.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Templates.MockTemplate.PartialMimicWithReturn``1">
            <summary>
            This is the method template for a partial mock method that has a return value.
            </summary>
            <typeparam name="T">The return type for the method</typeparam>
            <returns>The value of T</returns>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.MockTemplate.IsDoneConstructing">
            <summary>
            This property determines whether the mock's constructor has been called or not.
            If it hasn't, then the mock methods won't attempt to validate.  Instead, they'll pass 
            the call to the base class or eat the call completely.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Generation.Templates.MockTemplate.AggregatedObject">
            <summary>
            This property is used to invoke an aggregated object for partial mimics.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.TemplateRepository">
            <summary>
            This static class holds all of the class templates that reside inside this assembly.  It
            searches the assembly for all classes with the TemplateClass attribute and caches them locally
            so that they can be found easily and quickly.  TemplateClasses are searched for by their flags.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TemplateRepository.mInstance">
            <summary>
            This is the singleton instance of the template repository.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.TemplateRepository.mTemplateMap">
            <summary>
            Maps template types to the types that template them.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateRepository.#cctor">
            <summary>
            The static constructor creates the singleton.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateRepository.#ctor">
            <summary>
            One and only instance.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateRepository.GetTemplate(Microsoft.MMF.Generation.EClassTemplateTypes)">
            <summary>
            Returns the template that matches the template type.
            </summary>
            <param name="templateType">The type of template to return</param>
            <returns>A Template object that can be used to dynamically create a class and method</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.SpecialCases.GetExecutingAssemblyCase">
            <summary>
            Patches the code so that it returns the original assembly of the type-in-test, instead 
            of the dynamic assembly where the method is currently executing.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.SpecialCases.GetExecutingAssemblyCase.mGetExecutingAssemblyMethod">
            <summary>
            This is the special case method that we're patching.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetExecutingAssemblyCase.#ctor">
            <summary>
            Creates the special case.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetExecutingAssemblyCase.IsMatch(System.Reflection.MethodBase)">
            <summary>
            Returns true if a method matches this special case.
            </summary>
            <param name="method">The method to match</param>
            <returns>True if it matches; otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.SpecialCases.GetExecutingAssemblyCase.Patch(System.Reflection.MethodBase,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Patches the code so that we load the original assembly instead of calling 
            the method that it was compiled against.
            </summary>
            <param name="matchingMethod">The method that matched the special case</param>
            <param name="tracker">The tracker to use to patch</param>
        </member>
        <member name="T:Microsoft.MMF.Constraints.StartsWithConstraint">
            <summary>
            Defines a constraint that checks string values to check if they start with a specific string.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constraints.StartsWithConstraint.mStartsWithString">
            <summary>
            This is the string that we check against.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.StartsWithConstraint.#ctor(System.Int32,System.String)">
            <summary>
            Creates the starts with constraint out of the specified index and string.
            </summary>
            <param name="argIndex">The index</param>
            <param name="startsWithString">The string to check</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.StartsWithConstraint.Validate(System.Object)">
            <summary>
            Validates that the string value of the argument begins with the correct string.
            </summary>
            <param name="argValue">The string value to check</param>
            <returns>True if the string begins with the starts with value</returns>
        </member>
        <member name="T:Microsoft.MMF.Constraints.EndsWithConstraint">
            <summary>
            Defines a constraint that checks the end of a string.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Constraints.EndsWithConstraint.mEndsWithString">
            <summary>
            The string to check at the end.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Constraints.EndsWithConstraint.#ctor(System.Int32,System.String)">
            <summary>
            Creates an ends with constraint with the specified string.
            </summary>
            <param name="argIndex">The argument index to check</param>
            <param name="endsWithString">The string to check</param>
        </member>
        <member name="M:Microsoft.MMF.Constraints.EndsWithConstraint.Validate(System.Object)">
            <summary>
            Validates whether the string value of argValue ends with mEndswithString.
            </summary>
            <param name="argValue">The argument value</param>
            <returns>True if the argument value ends with the specified string</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.ShortInlineRTranslator">
            <summary>
            Translates the short inline R instruction.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineRTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineRTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the ShortInlineR opperand.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.ShortInlineRTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits a float.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineSwitchTranslator">
            <summary>
            Translates the inline switch statement.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSwitchTranslator.#ctor">
            <summary>
            Nothing to do.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSwitchTranslator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the inline switch statement.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineSwitchTranslator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inline switch statement.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Generation.Translators.InlineI8Translator">
            <summary>
            Translates an inline I8 instruction
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineI8Translator.#ctor">
            <summary>
            Default constructor does nothing,
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineI8Translator.Translate(Microsoft.MMF.Generation.ILInstruction,Microsoft.MMF.Generation.OpCodeTracker)">
            <summary>
            Translates the inline I8 instruction.
            </summary>
            <param name="instruction">The instruction to translate</param>
            <param name="tracker">The opcode tracker used to set arguments</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.Translators.InlineI8Translator.Emit(Microsoft.MMF.Generation.TranslatedInstruction,System.Reflection.Emit.ILGenerator)">
            <summary>
            Emits an inlineI8 opcode.
            </summary>
            <param name="instruction">The translated instruction</param>
            <param name="generator">The ILGenerator</param>
        </member>
        <member name="T:Microsoft.MMF.Configuration.MMFOptions">
            <summary>
            This class reads the MMFConfigurationSection from the app.config (if it can) and returns the default options to
            any part of the code that wants to read these options.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFOptions.mInstance">
            <summary>
            This is the one and only instance of the MMFOptions class.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFOptions.mConfigSection">
            <summary>
            This is the configuration section that we use.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Configuration.MMFOptions.#cctor">
            <summary>
            The static constructor creates the instance variable.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Configuration.MMFOptions.#ctor">
            <summary>
            Creates the MMFOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFOptions.StrongNameGeneratedAssemblies">
            <summary>
            Returns true if the API should strong-name the generated assemblies.  Otherwise, false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFOptions.CleanupExceptions">
            <summary>
            Returns true of redirected methods should clean up exceptions before they are
            rethrown.  For debug builds, the default is true.  For release builds, it is false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFOptions.WriteRecordingLogByDefault">
            <summary>
            Returns true if the API should write recording logs on validation failures by default.  Otherewise, false.
            </summary>
        </member>
        <member name="P:Microsoft.MMF.Configuration.MMFOptions.WriteGeneratedAssembliesToDisk">
            <summary>
            Returns true if the generated assemblies should be written to disk or not.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants">
            <summary>
            Contains constants that are used in the MMF configuration section.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants.STRONG_NAME_GENERATED_ASSEMBLIES">
            <summary>
            This property is used to determine whether the generated assemblies should be strong-named or not.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants.CLEANUP_EXCEPTIONS">
            <summary>
            This property is used to determine whether exceptions thrown from redirected methods should 
            have their stack traces cleaned up so that they are more readable.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants.WRITE_RECORDING_LOG_BY_DEFAULT">
            <summary>
            This property is used to determine whether the recording logs are written by default or not.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants.SAVE_GENERATED_ASSEMBLIES_TO_DISK">
            <summary>
            This property is used to determine whether the generated assemblies should be saved to 
            the disk at the end of a test run.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Configuration.MMFConfigurationSectionConstants.#ctor">
            <summary>
            Cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.MMF.Generation.ILHelper">
            <summary>
            This class has a number of utility methods that allow us to perform some common
            functionalities in one place.
            </summary>
        </member>
        <member name="F:Microsoft.MMF.Generation.ILHelper.mRedirectedMethodCache">
            <summary>
            This dictionary caches redirected methods so that we don't keep generating them.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.#cctor">
            <summary>
            Creates static members.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.#ctor">
            <summary>
            Can't be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GenerateUniqueName">
            <summary>
            Untility method to generate a unique name that can be used
            to name generated assemblies, modules, and types.
            </summary>
            <returns>The unique name to use.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.CanSeeInternalsOf(System.Reflection.Assembly)">
            <summary>
            Checks to see if the generated assemblies will have access to internal methods
            and properties of the target assembly.  We can figure this out by looking for the
            InternalsVisibleTo attribute in the target assembly and seeing if it matches any of our
            generated assemblies.
            </summary>
            <param name="assembly">The assembly to check</param>
            <returns>True if the MMF has access; otherwise false</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GenerateProperty(System.Reflection.Emit.TypeBuilder,System.String,System.Type)">
            <summary>
            Generates a default property with a randomly named member variable
            for a given type and returns the property builder for that property.
            </summary>
            <param name="typeBuilder">The type builder</param>
            <param name="propertyName">The name of the property to generate</param>
            <param name="propertyType">The type of the property</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.PrepForRethrow(System.Exception)">
            <summary>
            Preps an exception in a way that allows it to be rethrown.  The rethrown exception will preseve the original stack trace.  This allows 
            us to redirect methods and still have useful exceptions to look at.
            </summary>
            <param name="exception">The exception that is about to be rethrown</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractLastExecutedMethod(System.Delegate)">
            <summary>
            Reads the IL of the handler that is passed in and returns the last method that was executed
            in the method that the handler points to.
            </summary>
            <param name="handler">The handler to extract the method from</param>
            <returns>The last method that is invoked in the method that the handler points to</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GenerateRedirectionMethod(System.Type,System.Reflection.MethodBase,System.Boolean)">
            <summary>
            Generates a method that redirects the method calls within methodInTest.
            </summary>
            <param name="typeInTest">The type in test</param>
            <param name="methodInTest">The method in test</param>
            <param name="isRootMethod">When true, the redirected method will be wrapped in code that passes the arg values to the profiler API</param>
            <returns>A static method that instruments the method in test</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.InvokeEquivalentMethodOnGeneratedObject(System.Delegate,System.Object)">
            <summary>
            This method invokes equivelent method that is invoked by the delegate passed into this method.  The generated object
            must define the same method that the handler invokes.  This method assumes that the generated object is also the target.
            See the override below for more information.
            </summary>
            <param name="handler">The delegate to invoke</param>
            <param name="generatedObject">The generated object</param>
            <returns>The return value from the delegate that was invoked</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.InvokeEquivalentMethodOnGeneratedObject(System.Delegate,System.Object,System.Reflection.MethodBase)">
            <summary>
            This method is used to generate a delegate that looks identicle to the one 
            that's passed into this method, but instead of invoking the method on whatever it was compiled against, it will
            find the same method that's defined on the generated object and invoke that method on the target object that's passed in.
            So, for instance:
            
            t => t.TestMe()
            
            Gets replaced with g => g.TestMe()
            
            Where g is the generated object that either subclasses or mimics t.  Alternately, this method makes it possible 
            for the target to be a different object that defines the method.  This works well in cases where the generated method
            is static, while the original method is not.  We do this to make MimicTests work: the generated method is static, but the 
            'target' is still the object that we're testing.
            </summary>
            <param name="handler">The handler we want to replace</param>
            <param name="target">The object to invoke the method on</param>
            <param name="replacementMethod">The method to invoke instead of the last method invoked by the delegate</param>
            <returns>A delegate that can be invoked in order to call the generatedObject when we are recording expecations</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GetLocalSymbols(System.Diagnostics.SymbolStore.ISymbolScope)">
            <summary>
            Traverses the symbol scope tree hierarchy and returns a flat-list of all of the locals in the 
            method.
            </summary>
            <param name="symbolScope">The symbol store to return items for</param>
            <returns>A list of symbol stores</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GetSymbolScopesAtOffset(System.Diagnostics.SymbolStore.ISymbolScope,System.Int32)">
            <summary>
            Recursively finds every symbol scope, and it's children, that start at a particular offset.  This method will
            return a list where the first element will be the parent, the second will be the child, and the third will be the 
            grand parent.
            </summary>
            <param name="symbolScope">The symbol scope to search from</param>
            <param name="offset">The offset to look for</param>
            <returns>A list of symbol scopes that start at this offset</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.FindReplacementMethodOnGeneratedType(System.Reflection.MethodBase,System.Type)">
            <summary>
            Finds the matching method on the generated type and returns it to the caller.
            </summary>
            <param name="method">The method to find</param>
            <param name="generatedType">The generated type to search</param>
            <returns>The matching method info</returns>
            <exception cref="T:System.ArgumentException">Thrown if the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.FindReplacementMethodOnGeneratedType(System.Reflection.MethodBase,System.Type,System.Boolean)">
            <summary>
            Finds the equivelent method on the generated type.  When throwOnNoMatch is true, the method will throw an exception
            if no method can be found.  Otherwise, it will return null.
            </summary>
            <param name="method">The method to find</param>
            <param name="generatedType">The type to find the method on</param>
            <param name="throwOnNoMatch">When true, an exception will be thrown if no match is found.  Otherwise, it will return null</param>
            <returns>The matching method on the generated type</returns>
            <exception cref="T:System.ArgumentException">Thrown if throwOnNoMatch is true and the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.FindReplacementMethodOnGeneratedType(System.Type[],System.String,System.Type[],System.Type,System.Type,System.Boolean)">
            <summary>
            This overload is used to find replacement methods when the original method info is unknown.  For this search,
            we need the generic arguments, the method name, and the argument types to figure out which method was called.
            </summary>
            <param name="genericArguments">The generic arguments of the method</param>
            <param name="methodName">The name of the method</param>
            <param name="parameterTypes">The types of the parameters of the method</param>
            <param name="generatedType">The generated type to search</param>
            <param name="declaredType">This is the type that declared the method that was invoked</param>
            <param name="throwOnNoMatch">When true, this method will throw an exception if no method can be found.  Otherwise, it will return null</param>
            <returns>A method info that can invoke the method on the generatedType</returns>
            <exception cref="T:System.ArgumentException">Thrown if throwOnNoMatch is true and the method cannot be found</exception>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.WriteInt(System.Collections.Generic.List{System.Byte},System.Int32)">
            <summary>
            Utility method that writes a token to the IL byte array.
            </summary>
            <param name="newByteCode">A list of new byte code commands.</param>
            <param name="token">The token to write to the stream.</param>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractLong(System.Byte[])">
            <summary>
            Extracts a long from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The long we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractInt(System.Byte[])">
            <summary>
            Extracts an int from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The int we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.ExtractShort(System.Byte[])">
            <summary>
            Extracts a short from a byte array and returns it.
            </summary>
            <param name="code">An array of byte code</param>
            <returns>The int we're extracting.</returns>
        </member>
        <member name="M:Microsoft.MMF.Generation.ILHelper.GetNonByReferenceType(System.Type,System.Type[])">
            <summary>
            If we have a byref type, then finding its regular type is a real pain in the butt.  
            We have to do some funky type searching to find it.  And sadly, a lot of properties can
            differ between ref and regular types. 
            </summary>
            <param name="type">The reference type to lookup</param>
            <param name="genericArguments">An array of generic arguments</param>
            <returns>The regular, non-byref type of type</returns>
        </member>
        <member name="T:Microsoft.MMF.Generation.TemplateClassAttribute">
            <summary>
            The TemplateClass attribute marks a class that as a template for generating code.  TemplateClasses
            generate dynamic classes by having their IL cloned.
            </summary>
        </member>
        <member name="M:Microsoft.MMF.Generation.TemplateClassAttribute.#ctor(Microsoft.MMF.Generation.EClassTemplateTypes)">
            <summary>
            Creates a new TemplateClass attribute.
            </summary>
            <param name="templateType">The type that this class templates</param>
        </member>
        <member name="P:Microsoft.MMF.Generation.TemplateClassAttribute.Type">
            <summary>
            Gets / sets the class template type.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\m4\doc\m4.pdf ===
%PDF-1.3 3 0 obj << /Length 360        /Filter /FlateDecode stream ::Dy'D h[-6?[ endstream endobj 2 0 obj << /Type /Page /Contents 3 0 R /Resources 1 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R >> endobj 1 0 obj << /Font << /F65 6 0 R /F51 9 0 R >> /ProcSet [ /PDF /Text ] >> endobj 13 0 obj << /Length 811        /Filter /FlateDecode stream NB<)+ floiR &|JqD xBTd@B endstream endobj 12 0 obj << /Type /Page /Contents 13 0 R /Resources 11 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R >> endobj 11 0 obj << /Font << /F51 9 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 19 0 obj << /Length 896        /Filter /FlateDecode stream giVWW zf\kF ;swPS1 Uj[sb +endstream endobj 18 0 obj << /Type /Page /Contents 19 0 R /Resources 17 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R /Annots [ 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 43 0 R 44 0 R 45 0 R ] >> endobj 26 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 694.838 464.882 705.465] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 27 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 677.902 464.882 688.528] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 28 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 663.29 464.882 671.592] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 29 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 646.353 464.882 654.655] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 30 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 627.092 464.882 637.719] /Subtype /Link /A << /S /GoTo /D (15@) >> >> endobj 31 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 610.156 464.882 620.782] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 32 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 593.219 464.882 603.846] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 33 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 578.607 464.882 586.909] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 34 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 559.346 464.882 569.973] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 35 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 542.41 464.882 553.036] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 36 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 525.473 464.882 536.1] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 37 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 508.537 464.882 519.163] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 38 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 493.925 464.882 502.227] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 39 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 474.664 464.882 485.29] /Subtype /Link /A << /S /GoTo /D (38@) >> >> endobj 43 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 457.727 464.882 468.819] /Subtype /Link /A << /S /GoTo /D (40@) >> >> endobj 44 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 440.791 464.882 451.417] /Subtype /Link /A << /S /GoTo /D (42@) >> >> endobj 45 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 426.179 464.882 434.481] /Subtype /Link /A << /S /GoTo /D (44@) >> >> endobj 17 0 obj << /Font << /F65 6 0 R /F101 22 0 R /F84 25 0 R /F86 42 0 R >> /ProcSet [ /PDF /Text ] >> endobj 65 0 obj << /Length 1802       /Filter /FlateDecode stream o5#|P@H Hb9B# '>q+> {Or<f ~Rj^4RX (Bc5yhk" endstream endobj 64 0 obj << /Type /Page /Contents 65 0 R /Resources 63 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R /Annots [ 66 0 R 73 0 R 74 0 R 75 0 R 76 0 R 77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 86 0 R 87 0 R 88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R 94 0 R 95 0 R 96 0 R 97 0 R 98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 105 0 R 106 0 R 107 0 R 108 0 R 109 0 R 110 0 R 111 0 R 112 0 R ] >> endobj 66 0 obj << /Type /Annot /Border [0 0 0] /Rect [456.812 683.693 464.882 696.445] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 73 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 671.539 464.882 679.114] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 74 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 659.584 464.882 667.159] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 75 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 645.507 464.882 655.204] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 76 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 633.552 464.882 643.249] /Subtype /Link /A << /S /GoTo /D (4@) >> >> endobj 77 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 621.597 464.882 631.294] /Subtype /Link /A << /S /GoTo /D (4@) >> >> endobj 78 0 obj << /Type /Annot /Border [0 0 0] /Rect [456.812 593.153 464.882 605.905] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 79 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 580.998 464.882 588.453] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 80 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 566.922 464.882 576.619] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 81 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 557.088 464.882 564.664] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 82 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 545.133 464.882 552.587] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 83 0 obj << /Type /Annot /Border [0 0 0] /Rect [456.812 517.357 464.882 527.319] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 84 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 502.413 464.882 509.867] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 85 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 488.337 464.882 497.912] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 86 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 476.381 464.882 485.957] /Subtype /Link /A << /S /GoTo /D (8@) >> >> endobj 87 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 464.426 464.882 474.002] /Subtype /Link /A << /S /GoTo /D (8@) >> >> endobj 88 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.427 452.471 464.882 462.047] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 89 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 426.816 464.882 436.779] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 90 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 409.751 464.882 419.448] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 91 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 397.796 464.882 407.372] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 92 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 385.841 464.882 395.538] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 93 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 373.886 464.882 383.583] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 94 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 361.931 464.882 371.506] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 95 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 349.975 464.882 359.672] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 96 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 340.141 464.882 347.717] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 97 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 328.186 464.882 335.762] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 98 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 297.621 464.882 310.373] /Subtype /Link /A << /S /GoTo /D (15@) >> >> endobj 99 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 283.345 464.882 293.042] /Subtype /Link /A << /S /GoTo /D (15@) >> >> endobj 100 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 271.39 464.882 280.966] /Subtype /Link /A << /S /GoTo /D (15@) >> >> endobj 101 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 259.435 464.882 269.132] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 102 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 230.991 464.882 243.743] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 103 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 216.715 464.882 226.412] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 104 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 204.76 464.882 214.457] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 105 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 192.805 464.882 202.502] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 106 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 180.85 464.882 190.547] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 107 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 152.405 464.882 165.158] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 108 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 138.13 464.882 147.827] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 109 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 126.175 464.882 135.872] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 110 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 114.219 464.882 123.916] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 111 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 102.264 464.882 111.961] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 112 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 90.309 464.882 99.885] /Subtype /Link /A << /S /GoTo /D (22@) >> >> endobj 63 0 obj << /Font << /F65 6 0 R /F84 25 0 R /F51 9 0 R /F52 69 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 126 0 obj << /Length 1670       /Filter /FlateDecode stream J*gI~ ?bA\,, %VLj! :-1ph\ endstream endobj 125 0 obj << /Type /Page /Contents 126 0 R /Resources 124 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R /Annots [ 127 0 R 128 0 R 129 0 R 130 0 R 131 0 R 132 0 R 133 0 R 134 0 R 135 0 R 136 0 R 137 0 R 138 0 R 139 0 R 140 0 R 141 0 R 142 0 R 143 0 R 144 0 R 145 0 R 146 0 R 147 0 R 148 0 R 149 0 R 150 0 R 151 0 R 152 0 R 153 0 R 154 0 R 155 0 R 156 0 R 157 0 R 158 0 R 159 0 R 160 0 R ] >> endobj 127 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 759.927 464.882 769.89] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 128 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 742.862 464.882 752.559] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 129 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 730.907 464.882 740.604] /Subtype /Link /A << /S /GoTo /D (25@) >> >> endobj 130 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 702.343 464.882 715.095] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 131 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 688.068 464.882 697.643] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 132 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 676.112 464.882 685.809] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 133 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 666.278 464.882 673.854] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 134 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 652.202 464.882 661.899] /Subtype /Link /A << /S /GoTo /D (28@) >> >> endobj 135 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 623.638 464.882 636.39] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 136 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 609.363 464.882 619.06] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 137 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 597.408 464.882 607.104] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 138 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 585.452 464.882 595.149] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 139 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 573.497 464.882 583.194] /Subtype /Link /A << /S /GoTo /D (30@) >> >> endobj 140 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 561.542 464.882 571.239] /Subtype /Link /A << /S /GoTo /D (30@) >> >> endobj 141 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 549.587 464.882 559.284] /Subtype /Link /A << /S /GoTo /D (30@) >> >> endobj 142 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 537.632 464.882 547.329] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 143 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 509.068 464.882 521.82] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 144 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 494.792 464.882 504.489] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 145 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 482.837 464.882 492.534] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 146 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 454.273 464.882 467.026] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 147 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 439.998 464.882 449.695] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 148 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 428.043 464.882 437.74] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 149 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 418.209 464.882 425.784] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 150 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 404.132 464.882 413.829] /Subtype /Link /A << /S /GoTo /D (36@) >> >> endobj 151 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 378.358 464.882 388.321] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 152 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 361.293 464.882 370.869] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 153 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 349.338 464.882 359.035] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 154 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 320.774 464.882 333.526] /Subtype /Link /A << /S /GoTo /D (38@) >> >> endobj 155 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 289.89 464.882 302.642] /Subtype /Link /A << /S /GoTo /D (40@) >> >> endobj 156 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 277.735 464.882 285.19] /Subtype /Link /A << /S /GoTo /D (40@) >> >> endobj 157 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 263.659 464.882 273.356] /Subtype /Link /A << /S /GoTo /D (40@) >> >> endobj 158 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.973 251.704 464.882 261.401] /Subtype /Link /A << /S /GoTo /D (41@) >> >> endobj 159 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 223.14 464.882 235.892] /Subtype /Link /A << /S /GoTo /D (42@) >> >> endobj 160 0 obj << /Type /Annot /Border [0 0 0] /Rect [448.742 195.046 464.882 205.008] /Subtype /Link /A << /S /GoTo /D (44@) >> >> endobj 124 0 obj << /Font << /F65 6 0 R /F84 25 0 R /F51 9 0 R /F54 72 0 R /F52 69 0 R /F86 42 0 R >> /ProcSet [ /PDF /Text ] >> endobj 168 0 obj << /S /GoTo /D (1@) >> endobj 170 0 obj (Introduction and preliminaries) endobj 171 0 obj << /S /GoTo /D (1@) >> endobj 173 0 obj (Introduction to m4) endobj 174 0 obj << /S /GoTo /D (1@) >> endobj 176 0 obj (Historical references) endobj 177 0 obj << /S /GoTo /D (1@) >> endobj 179 0 obj (Invoking m4) endobj 180 0 obj << /S /GoTo /D (4@) >> endobj 182 0 obj (Problems and bugs) endobj 183 0 obj << /S /GoTo /D (4@) >> endobj 185 0 obj (Using this manual) endobj 186 0 obj << /S /GoTo /D (6@) >> endobj 188 0 obj (Lexical and syntactic conventions) endobj 189 0 obj << /S /GoTo /D (6@) >> endobj 191 0 obj (Names) endobj 192 0 obj << /S /GoTo /D (6@) >> endobj 194 0 obj (Quoted strings) endobj 195 0 obj << /S /GoTo /D (6@) >> endobj 197 0 obj (Other tokens) endobj 198 0 obj << /S /GoTo /D (6@) >> endobj 200 0 obj (Comments) endobj 201 0 obj << /S /GoTo /D (7@) >> endobj 203 0 obj (How to invoke macros) endobj 204 0 obj << /S /GoTo /D (7@) >> endobj 206 0 obj (Macro invocation) endobj 207 0 obj << /S /GoTo /D (7@) >> endobj 209 0 obj (Preventing macro invocation) endobj 210 0 obj << /S /GoTo /D (8@) >> endobj 212 0 obj (Macro arguments) endobj 213 0 obj << /S /GoTo /D (8@) >> endobj 215 0 obj (Quoting macro arguments) endobj 216 0 obj << /S /GoTo /D (9@) >> endobj 218 0 obj (Macro expansion) endobj 219 0 obj << /S /GoTo /D (10@) >> endobj 221 0 obj (How to define new macros) endobj 222 0 obj << /S /GoTo /D (10@) >> endobj 224 0 obj (Defining a macro) endobj 225 0 obj << /S /GoTo /D (10@) >> endobj 227 0 obj (Arguments to macros) endobj 228 0 obj << /S /GoTo /D (11@) >> endobj 230 0 obj (Special arguments to macros) endobj 231 0 obj << /S /GoTo /D (12@) >> endobj 233 0 obj (Deleting a macro) endobj 234 0 obj << /S /GoTo /D (12@) >> endobj 236 0 obj (Renaming macros) endobj 237 0 obj << /S /GoTo /D (13@) >> endobj 239 0 obj (Temporarily redefining macros) endobj 240 0 obj << /S /GoTo /D (14@) >> endobj 242 0 obj (Indirect call of macros) endobj 243 0 obj << /S /GoTo /D (14@) >> endobj 245 0 obj (Indirect call of builtins) endobj 246 0 obj << /S /GoTo /D (15@) >> endobj 248 0 obj (Conditionals, loops and recursion) endobj 249 0 obj << /S /GoTo /D (15@) >> endobj 251 0 obj (Testing macro definitions) endobj 252 0 obj << /S /GoTo /D (15@) >> endobj 254 0 obj (Comparing strings) endobj 255 0 obj << /S /GoTo /D (16@) >> endobj 257 0 obj (Loops and recursion) endobj 258 0 obj << /S /GoTo /D (18@) >> endobj 260 0 obj (How to debug macros and input) endobj 261 0 obj << /S /GoTo /D (18@) >> endobj 263 0 obj (Displaying macro definitions) endobj 264 0 obj << /S /GoTo /D (18@) >> endobj 266 0 obj (Tracing macro calls) endobj 267 0 obj << /S /GoTo /D (19@) >> endobj 269 0 obj (Controlling debugging output) endobj 270 0 obj << /S /GoTo /D (19@) >> endobj 272 0 obj (Saving debugging output) endobj 273 0 obj << /S /GoTo /D (20@) >> endobj 275 0 obj (Input control) endobj 276 0 obj << /S /GoTo /D (20@) >> endobj 278 0 obj (Deleting whitespace in input) endobj 279 0 obj << /S /GoTo /D (20@) >> endobj 281 0 obj (Changing the quote characters) endobj 282 0 obj << /S /GoTo /D (21@) >> endobj 284 0 obj (Changing comment delimiters) endobj 285 0 obj << /S /GoTo /D (21@) >> endobj 287 0 obj (Changing the lexical structure of words) endobj 288 0 obj << /S /GoTo /D (22@) >> endobj 290 0 obj (Saving input) endobj 291 0 obj << /S /GoTo /D (24@) >> endobj 293 0 obj (File inclusion) endobj 294 0 obj << /S /GoTo /D (24@) >> endobj 296 0 obj (Including named files) endobj 297 0 obj << /S /GoTo /D (25@) >> endobj 299 0 obj (Searching for include files) endobj 300 0 obj << /S /GoTo /D (26@) >> endobj 302 0 obj (Diverting and undiverting output) endobj 303 0 obj << /S /GoTo /D (26@) >> endobj 305 0 obj (Diverting output) endobj 306 0 obj << /S /GoTo /D (26@) >> endobj 308 0 obj (Undiverting output) endobj 309 0 obj << /S /GoTo /D (27@) >> endobj 311 0 obj (Diversion numbers) endobj 312 0 obj << /S /GoTo /D (28@) >> endobj 314 0 obj (Discarding diverted text) endobj 315 0 obj << /S /GoTo /D (29@) >> endobj 317 0 obj (Macros for text handling) endobj 318 0 obj << /S /GoTo /D (29@) >> endobj 320 0 obj (Calculating length of strings) endobj 321 0 obj << /S /GoTo /D (29@) >> endobj 323 0 obj (Searching for substrings) endobj 324 0 obj << /S /GoTo /D (29@) >> endobj 326 0 obj (Searching for regular expressions) endobj 327 0 obj << /S /GoTo /D (30@) >> endobj 329 0 obj (Extracting substrings) endobj 330 0 obj << /S /GoTo /D (30@) >> endobj 332 0 obj (Translating characters) endobj 333 0 obj << /S /GoTo /D (30@) >> endobj 335 0 obj (Substituting text by regular expression) endobj 336 0 obj << /S /GoTo /D (31@) >> endobj 338 0 obj (Formatted output) endobj 339 0 obj << /S /GoTo /D (33@) >> endobj 341 0 obj (Macros for doing arithmetic) endobj 342 0 obj << /S /GoTo /D (33@) >> endobj 344 0 obj (Decrement and increment operators) endobj 345 0 obj << /S /GoTo /D (33@) >> endobj 347 0 obj (Evaluating integer expressions) endobj 348 0 obj << /S /GoTo /D (35@) >> endobj 350 0 obj (Running UNIX commands) endobj 351 0 obj << /S /GoTo /D (35@) >> endobj 353 0 obj (Executing simple commands) endobj 354 0 obj << /S /GoTo /D (35@) >> endobj 356 0 obj (Reading the output of commands) endobj 357 0 obj << /S /GoTo /D (35@) >> endobj 359 0 obj (Exit codes) endobj 360 0 obj << /S /GoTo /D (36@) >> endobj 362 0 obj (Making names for temporary files) endobj 363 0 obj << /S /GoTo /D (37@) >> endobj 365 0 obj (Miscellaneous builtin macros) endobj 366 0 obj << /S /GoTo /D (37@) >> endobj 368 0 obj (Printing error messages) endobj 369 0 obj << /S /GoTo /D (37@) >> endobj 371 0 obj (Exiting from m4) endobj 372 0 obj << /S /GoTo /D (38@) >> endobj 374 0 obj (Fast loading of frozen states) endobj 375 0 obj << /S /GoTo /D (40@) >> endobj 377 0 obj (Compatibility with other versions of m4) endobj 378 0 obj << /S /GoTo /D (40@) >> endobj 380 0 obj (Extensions in GNU m4) endobj 381 0 obj << /S /GoTo /D (40@) >> endobj 383 0 obj (Facilities in System V m4 not in GNU m4) endobj 384 0 obj << /S /GoTo /D (41@) >> endobj 386 0 obj (Other incompatibilities) endobj 387 0 obj << /S /GoTo /D (42@) >> endobj 389 0 obj (Concept index) endobj 390 0 obj << /S /GoTo /D (44@) >> endobj 392 0 obj (Macro index) endobj 395 0 obj << /Length 3731       /Filter /FlateDecode stream Q~usG=7 +llx| o,px9 L96Rb#U P}D!5 _J0g_ T^[== t!E!0~ Ut_ C& af)z5 )/Cc" fqgJHG _Pu3U !8--5Xo \Vg 3 r0^bSE w-94W5 endstream endobj 394 0 obj << /Type /Page /Contents 395 0 R /Resources 393 0 R /MediaBox [0 0 595.276 841.89] /Parent 10 0 R /Annots [ 398 0 R ] >> endobj 398 0 obj << /Type /Annot /Border [0 0 0] /Rect [160.096 477.997 332.248 488.906] /Subtype /Link /A << /S /GoTo /D (Compatibility@) >> >> endobj 396 0 obj << /D [394 0 R /XYZ 83.339 709.755 null] >> endobj 397 0 obj << /D [394 0 R /XYZ 83.339 619.205 null] >> endobj 399 0 obj << /D [394 0 R /XYZ 83.339 378.358 null] >> endobj 400 0 obj << /D [394 0 R /XYZ 83.339 202.966 null] >> endobj 46 0 obj << /D [394 0 R /XYZ 83.339 90.309 null] >> endobj 393 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F86 42 0 R /F54 72 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 407 0 obj << /Length 2988       /Filter /FlateDecode stream HM`Lv `62Ad jgKT2\5 h6|$N St0Sf bC:9vF 00a8o lP1fOd Wc.C#/ A9:5j" r.t?Cw *?/|0 d)0bFL +8<8? nF?q$ endstream endobj 406 0 obj << /Type /Page /Contents 407 0 R /Resources 405 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R /Annots [ 408 0 R 409 0 R 410 0 R 411 0 R 412 0 R 413 0 R 414 0 R ] >> endobj 408 0 obj << /Type /Annot /Border [0 0 0] /Rect [213.454 657.259 385.606 668.168] /Subtype /Link /A << /S /GoTo /D (Compatibility@) >> >> endobj 409 0 obj << /Type /Annot /Border [0 0 0] /Rect [484.317 549.639 536.882 559.336] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 410 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 537.078 253.727 547.987] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 411 0 obj << /Type /Annot /Border [0 0 0] /Rect [447.304 494.92 536.882 505.829] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 412 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 482.965 216.302 493.874] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 413 0 obj << /Type /Annot /Border [0 0 0] /Rect [312.824 428.852 491.32 439.761] /Subtype /Link /A << /S /GoTo /D (Debug Output@) >> >> endobj 414 0 obj << /Type /Annot /Border [0 0 0] /Rect [210.09 362.784 372.697 373.693] /Subtype /Link /A << /S /GoTo /D (Search Path@) >> >> endobj 415 0 obj << /D [406 0 R /XYZ 83.339 91.392 null] >> endobj 405 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F55 403 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 422 0 obj << /Length 3147       /Filter /FlateDecode stream 3NfLI< %kz&] xWG<w> 9[6&T ,q+;iq `EE3. /xTgH aurF[ RhkTl NP'X>q h&@Wbl n74*L Dk:mI ,(si|<- ;w}Q1 Pq}?Q 7_^q \ (-[|x iX}\2 b+mN> ].{oR8O' W#(dS%6 >tUJ< \endstream endobj 421 0 obj << /Type /Page /Contents 422 0 R /Resources 420 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R /Annots [ 423 0 R 424 0 R ] >> endobj 423 0 obj << /Type /Annot /Border [0 0 0] /Rect [361.166 687.461 525.136 698.371] /Subtype /Link /A << /S /GoTo /D (Changeword@) >> >> endobj 424 0 obj << /Type /Annot /Border [0 0 0] /Rect [158.264 431.998 329.233 442.907] /Subtype /Link /A << /S /GoTo /D (Compatibility@) >> >> endobj 425 0 obj << /D [421 0 R /XYZ 83.339 90.309 null] >> endobj 420 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F55 403 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 429 0 obj << /Length 3236       /Filter /FlateDecode stream <$i+? :,B+i$\ _#VupW [6,l3 ^&G_Y PsJ[!= OVWCW3 ;HgjY m4endstream endobj 428 0 obj << /Type /Page /Contents 429 0 R /Resources 427 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R /Annots [ 430 0 R 431 0 R 432 0 R ] >> endobj 430 0 obj << /Type /Annot /Border [0 0 0] /Rect [507.791 591.82 536.882 602.729] /Subtype /Link /A << /S /GoTo /D (Frozen files@) >> >> endobj 431 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 579.865 275.151 590.774] /Subtype /Link /A << /S /GoTo /D (Frozen files@) >> >> endobj 432 0 obj << /Type /Annot /Border [0 0 0] /Rect [140.939 526.067 300.606 536.976] /Subtype /Link /A << /S /GoTo /D (Frozen files@) >> >> endobj 433 0 obj << /D [428 0 R /XYZ 83.339 428.371 null] >> endobj 434 0 obj << /D [428 0 R /XYZ 83.339 211.185 null] >> endobj 113 0 obj << /D [428 0 R /XYZ 83.339 89.142 null] >> endobj 427 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F55 403 0 R /F65 6 0 R /F60 16 0 R /F56 437 0 R >> /ProcSet [ /PDF /Text ] >> endobj 441 0 obj << /Length 1101       /Filter /FlateDecode stream Og:95 h;wu} F+X?y eKq.T a#YlbL [nP-N 5&&4|jm -="R4 endstream endobj 440 0 obj << /Type /Page /Contents 441 0 R /Resources 439 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R >> endobj 442 0 obj << /D [440 0 R /XYZ 83.339 92.43 null] >> endobj 439 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 445 0 obj << /Length 2156       /Filter /FlateDecode stream M.2o2 I#Jcn hb3eB C^$oy |gr>4 ?#{+EQZ _O~FZ sJ:;. ksQ<.y$ cxiRu endstream endobj 444 0 obj << /Type /Page /Contents 445 0 R /Resources 443 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R /Annots [ 451 0 R 453 0 R 456 0 R ] >> endobj 451 0 obj << /Type /Annot /Border [0 0 0] /Rect [105.217 595.805 234.733 606.714] /Subtype /Link /A << /S /GoTo /D (Macros@) >> >> endobj 453 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 401.036 250.308 411.945] /Subtype /Link /A << /S /GoTo /D (Changequote@) >> >> endobj 456 0 obj << /Type /Annot /Border [0 0 0] /Rect [162.156 217.723 322.156 228.632] /Subtype /Link /A << /S /GoTo /D (Changecom@) >> >> endobj 446 0 obj << /D [444 0 R /XYZ 83.339 710.752 null] >> endobj 447 0 obj << /D [444 0 R /XYZ 83.339 637.387 null] >> endobj 452 0 obj << /D [444 0 R /XYZ 83.339 542.941 null] >> endobj 454 0 obj << /D [444 0 R /XYZ 83.339 365.905 null] >> endobj 455 0 obj << /D [444 0 R /XYZ 83.339 313.103 null] >> endobj 47 0 obj << /D [444 0 R /XYZ 83.339 92.43 null] >> endobj 443 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F58 450 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 462 0 obj << /Length 3223       /Filter /FlateDecode stream LEAN( f7!ML [jF[) %qF&2 H11eQRb %;%xi@ Cz:3NJ #t\s*b tohvTm f64tKU GFDD6sM 5W%djj zaLT\h|J, 7-zm] \B%^a^ endstream endobj 461 0 obj << /Type /Page /Contents 462 0 R /Resources 460 0 R /MediaBox [0 0 595.276 841.89] /Parent 416 0 R /Annots [ 465 0 R 466 0 R ] >> endobj 465 0 obj << /Type /Annot /Border [0 0 0] /Rect [485.07 249.393 536.882 259.09] /Subtype /Link /A << /S /GoTo /D (Changeword@) >> >> endobj 466 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 236.831 191.551 247.74] /Subtype /Link /A << /S /GoTo /D (Changeword@) >> >> endobj 457 0 obj << /D [461 0 R /XYZ 83.339 713.262 null] >> endobj 463 0 obj << /D [461 0 R /XYZ 83.339 658.996 null] >> endobj 464 0 obj << /D [461 0 R /XYZ 83.339 453.636 null] >> endobj 48 0 obj << /D [461 0 R /XYZ 83.339 90.309 null] >> endobj 460 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 469 0 obj << /Length 2916       /Filter /FlateDecode stream hYVV& obCVi| otg|-k  cW:43m 6.I|P#~ H"[|/3 F6H>x 1Mq@/ ^t@}g endstream endobj 468 0 obj << /Type /Page /Contents 469 0 R /Resources 467 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R >> endobj 470 0 obj << /D [468 0 R /XYZ 83.339 438.223 null] >> endobj 471 0 obj << /D [468 0 R /XYZ 83.339 222.697 null] >> endobj 114 0 obj << /D [468 0 R /XYZ 83.339 90.309 null] >> endobj 467 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F65 6 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 475 0 obj << /Length 841        /Filter /FlateDecode stream z?PJ1 endstream endobj 474 0 obj << /Type /Page /Contents 475 0 R /Resources 473 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R >> endobj 476 0 obj << /D [474 0 R /XYZ 83.339 716.291 null] >> endobj 115 0 obj << /D [474 0 R /XYZ 83.339 92.43 null] >> endobj 473 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F55 403 0 R /F52 69 0 R >> /ProcSet [ /PDF /Text ] >> endobj 479 0 obj << /Length 2379       /Filter /FlateDecode stream ^cR7u UsbEq ;R_tx hgtKp k0slD! djsZ1H F_l]~+ reR3m? ZAAad Kxm>uW <S8ev }?M8q  =72z endstream endobj 478 0 obj << /Type /Page /Contents 479 0 R /Resources 477 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R /Annots [ 482 0 R 484 0 R ] >> endobj 482 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 477.499 205.611 488.408] /Subtype /Link /A << /S /GoTo /D (Dnl@) >> >> endobj 484 0 obj << /Type /Annot /Border [0 0 0] /Rect [117.676 223.92 311.707 234.829] /Subtype /Link /A << /S /GoTo /D (Quoting Arguments@) >> >> endobj 480 0 obj << /D [478 0 R /XYZ 83.339 713.74 null] >> endobj 481 0 obj << /D [478 0 R /XYZ 83.339 645.566 null] >> endobj 483 0 obj << /D [478 0 R /XYZ 83.339 424.007 null] >> endobj 49 0 obj << /D [478 0 R /XYZ 83.339 90.309 null] >> endobj 477 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 488 0 obj << /Length 1698       /Filter /FlateDecode stream &T.!J` laThq UiWRH5 T-|G) Px*q&,u }FM@?M m?"^>{  Y ShX +?qBN !ricU U+7B& wlZn0M endstream endobj 487 0 obj << /Type /Page /Contents 488 0 R /Resources 486 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R /Annots [ 490 0 R ] >> endobj 490 0 obj << /Type /Annot /Border [0 0 0] /Rect [102.733 144.948 233.975 155.857] /Subtype /Link /A << /S /GoTo /D (Trace@) >> >> endobj 489 0 obj << /D [487 0 R /XYZ 83.339 632.315 null] >> endobj 116 0 obj << /D [487 0 R /XYZ 83.339 92.43 null] >> endobj 486 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F54 72 0 R /F65 6 0 R >> /ProcSet [ /PDF /Text ] >> endobj 494 0 obj << /Length 2088       /Filter /FlateDecode stream z1gd"2/ 2SGCO2 q1Q*dbg ] -@sb 0LTlF6y 2@.ND M*'+? uCHVbJ Qendstream endobj 493 0 obj << /Type /Page /Contents 494 0 R /Resources 492 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R >> endobj 495 0 obj << /D [493 0 R /XYZ 83.339 640.326 null] >> endobj 496 0 obj << /D [493 0 R /XYZ 83.339 357.28 null] >> endobj 117 0 obj << /D [493 0 R /XYZ 83.339 90.309 null] >> endobj 492 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F65 6 0 R /F55 403 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 499 0 obj << /Length 1632       /Filter /FlateDecode stream 3f3;[ f9AJp& 1LH=d 7AVrfl iixH& 9z"~6 `=.JT O:p.v R5sy> +0endstream endobj 498 0 obj << /Type /Page /Contents 499 0 R /Resources 497 0 R /MediaBox [0 0 595.276 841.89] /Parent 472 0 R >> endobj 500 0 obj << /D [498 0 R /XYZ 83.339 716.291 null] >> endobj 118 0 obj << /D [498 0 R /XYZ 83.339 90.006 null] >> endobj 497 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 503 0 obj << /Length 1231       /Filter /FlateDecode stream aR3$= |2h+49nL ~%5-0 5-Vd: ^Yq/B sT"_M1#R= endstream endobj 502 0 obj << /Type /Page /Contents 503 0 R /Resources 501 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R >> endobj 504 0 obj << /D [502 0 R /XYZ 83.339 719.08 null] >> endobj 505 0 obj << /D [502 0 R /XYZ 83.339 519.329 null] >> endobj 119 0 obj << /D [502 0 R /XYZ 83.339 92.43 null] >> endobj 501 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 509 0 obj << /Length 2648       /Filter /FlateDecode stream CQ#b$Q&) v)"/+ I/\rh nyY88 Ks<l) pinHX (fFr;  ";0_ WN|'?v deH:p' .aa2HS K3p!gg 55&Da U5#=H endstream endobj 508 0 obj << /Type /Page /Contents 509 0 R /Resources 507 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R >> endobj 510 0 obj << /D [508 0 R /XYZ 83.339 708.34 null] >> endobj 511 0 obj << /D [508 0 R /XYZ 83.339 616.009 null] >> endobj 512 0 obj << /D [508 0 R /XYZ 83.339 407.213 null] >> endobj 50 0 obj << /D [508 0 R /XYZ 83.339 90.309 null] >> endobj 507 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 515 0 obj << /Length 2159       /Filter /FlateDecode stream 9?`PH 2h.0*J Es$gv 'o=HE 7w@9!y ECYxlZ aM'1: KuCXx S>s!9 Xhi%* I|g#$ _C>Sy D8{70 endstream endobj 514 0 obj << /Type /Page /Contents 515 0 R /Resources 513 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R >> endobj 516 0 obj << /D [514 0 R /XYZ 83.339 628.687 null] >> endobj 120 0 obj << /D [514 0 R /XYZ 83.339 92.43 null] >> endobj 513 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F65 6 0 R >> /ProcSet [ /PDF /Text ] >> endobj 519 0 obj << /Length 1488       /Filter /FlateDecode stream p]94v #y"c` O./6b e+{Y,XU x8.^g# fendstream endobj 518 0 obj << /Type /Page /Contents 519 0 R /Resources 517 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R /Annots [ 520 0 R ] >> endobj 520 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 660.562 212.763 671.471] /Subtype /Link /A << /S /GoTo /D (Incr@) >> >> endobj 521 0 obj << /D [518 0 R /XYZ 83.339 92.43 null] >> endobj 517 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 525 0 obj << /Length 2188       /Filter /FlateDecode stream u{7nF iZ$A_ &_,MP/ z?_Z  JEl+<@ *6p4nq s!DL' jX:HH  Qow:e f6R`r H|c l knj}^[ HrC@b1 =Mgendstream endobj 524 0 obj << /Type /Page /Contents 525 0 R /Resources 523 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R /Annots [ 528 0 R ] >> endobj 528 0 obj << /Type /Annot /Border [0 0 0] /Rect [119.137 428.445 295.35 439.354] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 526 0 obj << /D [524 0 R /XYZ 83.339 710.514 null] >> endobj 527 0 obj << /D [524 0 R /XYZ 83.339 645.9 null] >> endobj 491 0 obj << /D [524 0 R /XYZ 83.339 378.273 null] >> endobj 51 0 obj << /D [524 0 R /XYZ 83.339 90.006 null] >> endobj 523 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F60 16 0 R /F56 437 0 R >> /ProcSet [ /PDF /Text ] >> endobj 531 0 obj << /Length 3137       /Filter /FlateDecode stream -M$y' LdYyS 0Tx`So =)jb_m f<k\p %/_0l;7 3X-Os @9$3$ |4DDG >e.*d uQA$^ !X.ARu/Ul Gendstream endobj 530 0 obj << /Type /Page /Contents 531 0 R /Resources 529 0 R /MediaBox [0 0 595.276 841.89] /Parent 506 0 R /Annots [ 532 0 R 533 0 R ] >> endobj 532 0 obj << /Type /Annot /Border [0 0 0] /Rect [119.137 685.345 295.35 696.254] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 533 0 obj << /Type /Annot /Border [0 0 0] /Rect [140.939 368.66 303.545 379.569] /Subtype /Link /A << /S /GoTo /D (Search Path@) >> >> endobj 417 0 obj << /D [530 0 R /XYZ 83.339 638.085 null] >> endobj 418 0 obj << /D [530 0 R /XYZ 83.339 170.342 null] >> endobj 121 0 obj << /D [530 0 R /XYZ 83.339 92.43 null] >> endobj 529 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 536 0 obj << /Length 2222       /Filter /FlateDecode stream :VeV$ Y$[fV2 U(**y [.pHn r 9w/ U6,1J ST9_| rW27K '4u7z '4Z7^Njj 'Yo_z endstream endobj 535 0 obj << /Type /Page /Contents 536 0 R /Resources 534 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R /Annots [ 538 0 R ] >> endobj 538 0 obj << /Type /Annot /Border [0 0 0] /Rect [161.036 535.531 311.096 546.44] /Subtype /Link /A << /S /GoTo /D (Comments@) >> >> endobj 537 0 obj << /D [535 0 R /XYZ 83.339 711.211 null] >> endobj 485 0 obj << /D [535 0 R /XYZ 83.339 659.427 null] >> endobj 458 0 obj << /D [535 0 R /XYZ 83.339 423.351 null] >> endobj 52 0 obj << /D [535 0 R /XYZ 83.339 92.43 null] >> endobj 534 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F60 16 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 542 0 obj << /Length 2477       /Filter /FlateDecode stream xf*;_ ,D$2y 3x! )MX vA}R+ K&Vt|_`+ ZON7@9}D;;6 /UQoI0 ]/d$C lzX)0; ,5<}\ 0{8pB jendstream endobj 541 0 obj << /Type /Page /Contents 542 0 R /Resources 540 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R >> endobj 459 0 obj << /D [541 0 R /XYZ 83.339 606.348 null] >> endobj 426 0 obj << /D [541 0 R /XYZ 83.339 236.406 null] >> endobj 122 0 obj << /D [541 0 R /XYZ 83.339 89.703 null] >> endobj 540 0 obj << /Font << /F51 9 0 R /F60 16 0 R /F52 69 0 R /F65 6 0 R /F55 403 0 R /F54 72 0 R >> /ProcSet [ /PDF /Text ] >> endobj 545 0 obj << /Length 3311       /Filter /FlateDecode stream 0m-ot Q;[ 6 7,]w8 6a`"5# gNupO !fNT2 W%.1= BC{Gq _g59  H(rf@B 92RJG )q)bL %iQjOX DmIj' gendstream endobj 544 0 obj << /Type /Page /Contents 545 0 R /Resources 543 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R >> endobj 549 0 obj << /D [544 0 R /XYZ 83.339 182.991 null] >> endobj 123 0 obj << /D [544 0 R /XYZ 83.339 92.43 null] >> endobj 543 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F14 548 0 R /F54 72 0 R /F65 6 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 552 0 obj << /Length 788        /Filter /FlateDecode stream Ko,hC JSm$F9n| /EKG*5 j,eL9XQ "|[)@ yfOyH 2\':9C Vendstream endobj 551 0 obj << /Type /Page /Contents 552 0 R /Resources 550 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R >> endobj 553 0 obj << /D [551 0 R /XYZ 83.339 92.43 null] >> endobj 550 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 556 0 obj << /Length 2150       /Filter /FlateDecode stream #uP~Yl :szZ3 f3CIp ~Advu p-?#!@m j-uQk NK=JY7 f1rB8 c755P ]dqMG# 5Oa'X"` %9pO>| udqiE ;C*S{ dendstream endobj 555 0 obj << /Type /Page /Contents 556 0 R /Resources 554 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R >> endobj 557 0 obj << /D [555 0 R /XYZ 83.339 710.318 null] >> endobj 558 0 obj << /D [555 0 R /XYZ 83.339 648.111 null] >> endobj 53 0 obj << /D [555 0 R /XYZ 83.339 90.309 null] >> endobj 554 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R /F56 437 0 R >> /ProcSet [ /PDF /Text ] >> endobj 561 0 obj << /Length 1023       /Filter /FlateDecode stream }{F|W< M*ui< :kOD} l/endstream endobj 560 0 obj << /Type /Page /Contents 561 0 R /Resources 559 0 R /MediaBox [0 0 595.276 841.89] /Parent 539 0 R /Annots [ 562 0 R 563 0 R ] >> endobj 562 0 obj << /Type /Annot /Border [0 0 0] /Rect [483.842 611.745 536.882 622.654] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 563 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 599.79 196.127 610.699] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 419 0 obj << /D [560 0 R /XYZ 83.339 716.291 null] >> endobj 161 0 obj << /D [560 0 R /XYZ 83.339 92.43 null] >> endobj 559 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R >> /ProcSet [ /PDF /Text ] >> endobj 566 0 obj << /Length 2352       /Filter /FlateDecode stream >j0Tu vuq`;y b29F*m d1@}m eCYgr wtZ_=IM <XeL4a 1*JyXNM~ &7olP.N R#PDR _m_-[ C^j&N{ I@endstream endobj 565 0 obj << /Type /Page /Contents 566 0 R /Resources 564 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R >> endobj 567 0 obj << /D [565 0 R /XYZ 83.339 710.752 null] >> endobj 568 0 obj << /D [565 0 R /XYZ 83.339 547.922 null] >> endobj 569 0 obj << /D [565 0 R /XYZ 83.339 161.87 null] >> endobj 54 0 obj << /D [565 0 R /XYZ 83.339 90.309 null] >> endobj 564 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 573 0 obj << /Length 1673       /Filter /FlateDecode stream 5#>$R Ol\xI 0hkiG qa#n=` >k/?; a[ECmIG 3_wT1\ x25[(:H tendstream endobj 572 0 obj << /Type /Page /Contents 573 0 R /Resources 571 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R /Annots [ 574 0 R ] >> endobj 574 0 obj << /Type /Annot /Border [0 0 0] /Rect [183.561 313.649 322.581 324.558] /Subtype /Link /A << /S /GoTo /D (Include@) >> >> endobj 575 0 obj << /D [572 0 R /XYZ 83.339 164.802 null] >> endobj 162 0 obj << /D [572 0 R /XYZ 83.339 92.43 null] >> endobj 571 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F54 72 0 R /F65 6 0 R >> /ProcSet [ /PDF /Text ] >> endobj 578 0 obj << /Length 1343       /Filter /FlateDecode stream C;bxa 7(`^w (c;=zz8 DPO5} endstream endobj 577 0 obj << /Type /Page /Contents 578 0 R /Resources 576 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R >> endobj 579 0 obj << /D [577 0 R /XYZ 83.339 533.975 null] >> endobj 163 0 obj << /D [577 0 R /XYZ 83.339 92.43 null] >> endobj 576 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F65 6 0 R >> /ProcSet [ /PDF /Text ] >> endobj 582 0 obj << /Length 2127       /Filter /FlateDecode stream dL4Ex. EFIN] e*X@P sY,sl& )@Qsn. <jH1T endstream endobj 581 0 obj << /Type /Page /Contents 582 0 R /Resources 580 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R /Annots [ 587 0 R ] >> endobj 587 0 obj << /Type /Annot /Border [0 0 0] /Rect [141.733 255.986 473.056 265.683] /Subtype /Link /A << /F (emacs.pdf) /S /GoToR /D (Regexps@) >> >> endobj 583 0 obj << /D [581 0 R /XYZ 83.339 709.039 null] >> endobj 584 0 obj << /D [581 0 R /XYZ 83.339 641.842 null] >> endobj 585 0 obj << /D [581 0 R /XYZ 83.339 484.485 null] >> endobj 586 0 obj << /D [581 0 R /XYZ 83.339 315.172 null] >> endobj 55 0 obj << /D [581 0 R /XYZ 83.339 90.006 null] >> endobj 580 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 590 0 obj << /Length 2738       /Filter /FlateDecode stream A8<R$ q@N$b 7RVz}LJ /Z-FU u72uNE3 <k_Ne~n4 ^~g0k[ ~$5?v endstream endobj 589 0 obj << /Type /Page /Contents 590 0 R /Resources 588 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R >> endobj 591 0 obj << /D [589 0 R /XYZ 83.339 716.291 null] >> endobj 592 0 obj << /D [589 0 R /XYZ 83.339 537.386 null] >> endobj 593 0 obj << /D [589 0 R /XYZ 83.339 199.901 null] >> endobj 164 0 obj << /D [589 0 R /XYZ 83.339 90.309 null] >> endobj 588 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 596 0 obj << /Length 2160       /Filter /FlateDecode stream -A H" x6PM3<= 11H-Ma EL>>u_ 35tKa uIV[Z z|wsIe ^Q@W+Wk ]9U5#} 'ExJ\ 7cjVH !r*|leF QHendstream endobj 595 0 obj << /Type /Page /Contents 596 0 R /Resources 594 0 R /MediaBox [0 0 595.276 841.89] /Parent 570 0 R /Annots [ 598 0 R ] >> endobj 598 0 obj << /Type /Annot /Border [0 0 0] /Rect [299.401 217.139 435.973 228.048] /Subtype /Link /A << /S /GoTo /D (Loops@) >> >> endobj 597 0 obj << /D [595 0 R /XYZ 83.339 359.525 null] >> endobj 165 0 obj << /D [595 0 R /XYZ 83.339 90.006 null] >> endobj 594 0 obj << /Font << /F51 9 0 R /F55 403 0 R /F52 69 0 R /F60 16 0 R /F65 6 0 R >> /ProcSet [ /PDF /Text ] >> endobj 601 0 obj << /Length 735        /Filter /FlateDecode stream }@bHdm *5N|s ('8%# QBP*< /y"4f endstream endobj 600 0 obj << /Type /Page /Contents 601 0 R /Resources 599 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R >> endobj 602 0 obj << /D [600 0 R /XYZ 83.339 92.43 null] >> endobj 599 0 obj << /Font << /F51 9 0 R /F60 16 0 R /F52 69 0 R >> /ProcSet [ /PDF /Text ] >> endobj 606 0 obj << /Length 1864       /Filter /FlateDecode stream un~@T Limw<' E5orBP ]-y*X 7;'1Q yWPH,o \]Z(U 6RbzvV {2Az( ,W1t7 $M*=} ]vySeN endstream endobj 605 0 obj << /Type /Page /Contents 606 0 R /Resources 604 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R >> endobj 607 0 obj << /D [605 0 R /XYZ 83.339 709.574 null] >> endobj 522 0 obj << /D [605 0 R /XYZ 83.339 643.315 null] >> endobj 608 0 obj << /D [605 0 R /XYZ 83.339 463.557 null] >> endobj 56 0 obj << /D [605 0 R /XYZ 83.339 90.309 null] >> endobj 604 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 611 0 obj << /Length 2259       /Filter /FlateDecode stream aQ.qg lp7Ff &9MI$ qL@to u>-<W@fW =|~Eg KJZs3 SwkNO endstream endobj 610 0 obj << /Type /Page /Contents 611 0 R /Resources 609 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R >> endobj 612 0 obj << /D [610 0 R /XYZ 83.339 92.43 null] >> endobj 609 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F60 16 0 R /F56 437 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 615 0 obj << /Length 2122       /Filter /FlateDecode stream B33~[;3m^ /7aI, TkvW`! K9 |T Lt:(H as`Vg =IC WDb_ Nn\jH>7 ]VBZd* endstream endobj 614 0 obj << /Type /Page /Contents 615 0 R /Resources 613 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R /Annots [ 618 0 R ] >> endobj 618 0 obj << /Type /Annot /Border [0 0 0] /Rect [351.278 578.038 505.346 588.948] /Subtype /Link /A << /S /GoTo /D (Esyscmd@) >> >> endobj 616 0 obj << /D [614 0 R /XYZ 83.339 709.004 null] >> endobj 617 0 obj << /D [614 0 R /XYZ 83.339 653.701 null] >> endobj 619 0 obj << /D [614 0 R /XYZ 83.339 482.387 null] >> endobj 620 0 obj << /D [614 0 R /XYZ 83.339 243.871 null] >> endobj 57 0 obj << /D [614 0 R /XYZ 83.339 92.43 null] >> endobj 613 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F54 72 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 623 0 obj << /Length 1287       /Filter /FlateDecode stream rp1,"l Z2-s/ -ZJj& SI>zg 4'*&bf _ .PB7*M `)({UR /`E?endstream endobj 622 0 obj << /Type /Page /Contents 623 0 R /Resources 621 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R >> endobj 624 0 obj << /D [622 0 R /XYZ 83.339 716.291 null] >> endobj 166 0 obj << /D [622 0 R /XYZ 83.339 92.43 null] >> endobj 621 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F60 16 0 R >> /ProcSet [ /PDF /Text ] >> endobj 627 0 obj << /Length 2160       /Filter /FlateDecode stream EVYTTM} S/eVXi?# d&C"< m1Vr6" fx%F$ }SPthn P''e8 {endstream endobj 626 0 obj << /Type /Page /Contents 627 0 R /Resources 625 0 R /MediaBox [0 0 595.276 841.89] /Parent 603 0 R /Annots [ 631 0 R ] >> endobj 631 0 obj << /Type /Annot /Border [0 0 0] /Rect [178.611 196.801 322.581 207.711] /Subtype /Link /A << /S /GoTo /D (M4wrap@) >> >> endobj 628 0 obj << /D [626 0 R /XYZ 83.339 714.099 null] >> endobj 629 0 obj << /D [626 0 R /XYZ 83.339 646.552 null] >> endobj 630 0 obj << /D [626 0 R /XYZ 83.339 346.179 null] >> endobj 58 0 obj << /D [626 0 R /XYZ 83.339 92.43 null] >> endobj 625 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F56 437 0 R /F60 16 0 R /F54 72 0 R /F86 42 0 R >> /ProcSet [ /PDF /Text ] >> endobj 634 0 obj << /Length 4017       /Filter /FlateDecode stream obiyw Yw\5N m%KoU VZGTW Qd0AF E{8a- wk/0P dl='^ I|KW{ XWc7?t 2<8r7 *Rf5$ tQwfwp O>4|SW tS[oq %fjs~eeH1 B;0'E (endstream endobj 633 0 obj << /Type /Page /Contents 634 0 R /Resources 632 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R /Annots [ 635 0 R ] >> endobj 635 0 obj << /Type /Annot /Border [0 0 0] /Rect [217.187 152.73 379.793 163.639] /Subtype /Link /A << /S /GoTo /D (Search Path@) >> >> endobj 438 0 obj << /D [633 0 R /XYZ 83.339 710.227 null] >> endobj 59 0 obj << /D [633 0 R /XYZ 83.339 90.309 null] >> endobj 632 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F55 403 0 R /F54 72 0 R /F14 548 0 R /F3 638 0 R /F58 450 0 R >> /ProcSet [ /PDF /Text ] >> endobj 642 0 obj << /Length 1561       /Filter /FlateDecode stream _+ltS <aq3O ;hypE/ I.NqOr '2LDf] endstream endobj 641 0 obj << /Type /Page /Contents 642 0 R /Resources 640 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R >> endobj 643 0 obj << /D [641 0 R /XYZ 83.339 92.43 null] >> endobj 640 0 obj << /Font << /F51 9 0 R /F55 403 0 R /F52 69 0 R /F14 548 0 R /F3 638 0 R >> /ProcSet [ /PDF /Text ] >> endobj 646 0 obj << /Length 3673       /Filter /FlateDecode stream Hh;~d wm[Ja 7]_nX h-yr& 0pFc5 NTi^W |t@eW\9z 6@{;D >2W-S bztfD KV/~  XM.(= -FhNn pmg$` B:I~MGD 83\9tlC OE2a| bH|8y zT,d( w 4Te?( vAP<w }2Lendstream endobj 645 0 obj << /Type /Page /Contents 646 0 R /Resources 644 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R /Annots [ 648 0 R 649 0 R 650 0 R 651 0 R 652 0 R 653 0 R 654 0 R 655 0 R 656 0 R 657 0 R 658 0 R 659 0 R 660 0 R 661 0 R 662 0 R 663 0 R ] >> endobj 648 0 obj << /Type /Annot /Border [0 0 0] /Rect [214.999 544.461 372.06 555.37] /Subtype /Link /A << /S /GoTo /D (Arguments@) >> >> endobj 649 0 obj << /Type /Annot /Border [0 0 0] /Rect [314.575 505.048 477.181 515.957] /Subtype /Link /A << /S /GoTo /D (Search Path@) >> >> endobj 650 0 obj << /Type /Annot /Border [0 0 0] /Rect [262.333 477.59 409.333 488.499] /Subtype /Link /A << /S /GoTo /D (Undivert@) >> >> endobj 651 0 obj << /Type /Annot /Border [0 0 0] /Rect [243.06 450.132 388.09 461.041] /Subtype /Link /A << /S /GoTo /D (Format@) >> >> endobj 652 0 obj << /Type /Annot /Border [0 0 0] /Rect [127.41 422.674 275.233 433.583] /Subtype /Link /A << /S /GoTo /D (Regexp@) >> >> endobj 653 0 obj << /Type /Annot /Border [0 0 0] /Rect [378.029 422.674 532.639 433.583] /Subtype /Link /A << /S /GoTo /D (Patsubst@) >> >> endobj 654 0 obj << /Type /Annot /Border [0 0 0] /Rect [426.984 395.216 536.882 406.125] /Subtype /Link /A << /S /GoTo /D (Esyscmd@) >> >> endobj 655 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 383.261 141.302 394.17] /Subtype /Link /A << /S /GoTo /D (Esyscmd@) >> >> endobj 656 0 obj << /Type /Annot /Border [0 0 0] /Rect [434.725 367.758 536.882 378.667] /Subtype /Link /A << /S /GoTo /D (Builtin@) >> >> endobj 657 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 355.803 141.302 366.712] /Subtype /Link /A << /S /GoTo /D (Builtin@) >> >> endobj 658 0 obj << /Type /Annot /Border [0 0 0] /Rect [352.878 340.3 481.09 351.209] /Subtype /Link /A << /S /GoTo /D (Indir@) >> >> endobj 659 0 obj << /Type /Annot /Border [0 0 0] /Rect [305.18 312.842 454.817 323.751] /Subtype /Link /A << /S /GoTo /D (Errprint@) >> >> endobj 660 0 obj << /Type /Annot /Border [0 0 0] /Rect [126.818 285.384 295.363 296.293] /Subtype /Link /A << /S /GoTo /D (Debug Levels@) >> >> endobj 661 0 obj << /Type /Annot /Border [0 0 0] /Rect [485.849 269.881 536.882 280.79] /Subtype /Link /A << /S /GoTo /D (Debug Output@) >> >> endobj 662 0 obj << /Type /Annot /Border [0 0 0] /Rect [83.339 257.926 223.575 268.835] /Subtype /Link /A << /S /GoTo /D (Debug Output@) >> >> endobj 663 0 obj << /Type /Annot /Border [0 0 0] /Rect [379.361 226.361 533.852 237.27] /Subtype /Link /A << /S /GoTo /D (Invoking m4@) >> >> endobj 404 0 obj << /D [645 0 R /XYZ 83.339 708.516 null] >> endobj 647 0 obj << /D [645 0 R /XYZ 83.339 627.133 null] >> endobj 664 0 obj << /D [645 0 R /XYZ 83.339 145.675 null] >> endobj 60 0 obj << /D [645 0 R /XYZ 83.339 92.43 null] >> endobj 644 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F65 6 0 R /F86 42 0 R /F60 16 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 667 0 obj << /Length 2338       /Filter /FlateDecode stream +'+Kb>ufSg jmeE{ 5}}jdr mA?`  |S^b{( 3DvOq- }82i[ endstream endobj 666 0 obj << /Type /Page /Contents 667 0 R /Resources 665 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R >> endobj 668 0 obj << /D [666 0 R /XYZ 83.339 716.291 null] >> endobj 167 0 obj << /D [666 0 R /XYZ 83.339 92.43 null] >> endobj 665 0 obj << /Font << /F51 9 0 R /F52 69 0 R /F65 6 0 R /F60 16 0 R /F55 403 0 R >> /ProcSet [ /PDF /Text ] >> endobj 671 0 obj << /Length 2514       /Filter /FlateDecode stream q!@@rs SBVo9t lmJ+: endstream endobj 670 0 obj << /Type /Page /Contents 671 0 R /Resources 669 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R /Annots [ 679 0 R 680 0 R 681 0 R 682 0 R 683 0 R 684 0 R 685 0 R 686 0 R 687 0 R 688 0 R 689 0 R 690 0 R 691 0 R 692 0 R 693 0 R 694 0 R 695 0 R 696 0 R 697 0 R 698 0 R 699 0 R 700 0 R 701 0 R 702 0 R 703 0 R 704 0 R 705 0 R 706 0 R 707 0 R 708 0 R 709 0 R 710 0 R 711 0 R 712 0 R 713 0 R 714 0 R 715 0 R 716 0 R 717 0 R 718 0 R 719 0 R 723 0 R 724 0 R 725 0 R 726 0 R 727 0 R 728 0 R 729 0 R 730 0 R 731 0 R 732 0 R 733 0 R 734 0 R 735 0 R 736 0 R 737 0 R 738 0 R 739 0 R 740 0 R 741 0 R 742 0 R 743 0 R 744 0 R 745 0 R 746 0 R 747 0 R 748 0 R 749 0 R 750 0 R 751 0 R 752 0 R 753 0 R 754 0 R 755 0 R 756 0 R 757 0 R 758 0 R 759 0 R 760 0 R 761 0 R 762 0 R ] >> endobj 679 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 664.828 300.691 672.349] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 680 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 652.245 300.691 660.115] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 681 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 639.662 300.691 647.632] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 682 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 627.079 300.691 635.049] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 683 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 616.239 300.691 622.466] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 684 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 561.528 300.691 569.498] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 685 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 508.56 300.691 516.53] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 686 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 495.977 300.691 503.947] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 687 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 483.394 300.691 491.364] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 688 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 470.811 300.691 478.781] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 689 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 458.228 300.691 466.198] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 690 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 445.645 300.691 453.615] /Subtype /Link /A << /S /GoTo /D (4@) >> >> endobj 691 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 433.062 300.691 441.032] /Subtype /Link /A << /S /GoTo /D (3@) >> >> endobj 692 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 420.479 300.691 428.449] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 693 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 407.896 300.691 415.866] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 694 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 395.313 300.691 403.283] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 695 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 382.73 300.691 390.701] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 696 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 371.891 300.691 377.669] /Subtype /Link /A << /S /GoTo /D (5@) >> >> endobj 697 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 357.565 300.691 365.535] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 698 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 344.982 300.691 352.724] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 699 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 332.399 300.691 340.369] /Subtype /Link /A << /S /GoTo /D (36@) >> >> endobj 700 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 321.559 300.691 327.786] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 701 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 307.233 300.691 315.203] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 702 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 294.65 300.691 302.62] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 703 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 241.682 300.691 249.652] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 704 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 229.099 300.691 237.069] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 705 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 216.516 300.691 224.486] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 706 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 203.933 300.691 211.903] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 707 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 191.35 300.691 199.32] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 708 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 178.767 300.691 186.737] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 709 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 166.184 300.691 174.154] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 710 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 153.601 300.691 161.572] /Subtype /Link /A << /S /GoTo /D (25@) >> >> endobj 711 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 141.019 300.691 148.989] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 712 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 130.179 300.691 136.406] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 713 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 115.853 300.691 123.823] /Subtype /Link /A << /S /GoTo /D (25@) >> >> endobj 714 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 103.27 300.691 111.24] /Subtype /Link /A << /S /GoTo /D (23@) >> >> endobj 715 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 90.687 300.691 98.657] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 716 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 664.452 536.882 672.195] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 717 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 651.699 536.882 659.669] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 718 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 638.945 536.882 646.916] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 719 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 627.935 536.882 634.162] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 723 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 613.439 536.882 621.409] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 724 0 obj << /Type /Annot /Border [0 0 0] /Rect [532.274 600.685 536.882 608.655] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 725 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 587.932 536.882 595.674] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 726 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 575.178 536.882 583.148] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 727 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 562.425 536.882 570.395] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 728 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 508.058 536.882 516.028] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 729 0 obj << /Type /Annot /Border [0 0 0] /Rect [512.819 495.305 522.035 503.275] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 730 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 495.305 536.882 503.275] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 731 0 obj << /Type /Annot /Border [0 0 0] /Rect [532.274 482.551 536.882 490.521] /Subtype /Link /A << /S /GoTo /D (4@) >> >> endobj 732 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 469.798 536.882 477.768] /Subtype /Link /A << /S /GoTo /D (23@) >> >> endobj 733 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 457.044 536.882 465.014] /Subtype /Link /A << /S /GoTo /D (32@) >> >> endobj 734 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 444.291 536.882 452.261] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 735 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 431.537 536.882 439.507] /Subtype /Link /A << /S /GoTo /D (28@) >> >> endobj 736 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 418.784 536.882 426.754] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 737 0 obj << /Type /Annot /Border [0 0 0] /Rect [397.007 364.417 401.615 372.288] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 738 0 obj << /Type /Annot /Border [0 0 0] /Rect [407.145 364.417 416.36 372.288] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 739 0 obj << /Type /Annot /Border [0 0 0] /Rect [421.89 364.417 431.105 372.288] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 740 0 obj << /Type /Annot /Border [0 0 0] /Rect [436.635 364.417 445.851 372.288] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 741 0 obj << /Type /Annot /Border [0 0 0] /Rect [451.381 364.417 460.596 372.288] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 742 0 obj << /Type /Annot /Border [0 0 0] /Rect [466.126 364.417 475.341 372.288] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 743 0 obj << /Type /Annot /Border [0 0 0] /Rect [480.871 364.417 490.086 372.288] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 744 0 obj << /Type /Annot /Border [0 0 0] /Rect [495.616 364.417 504.832 372.288] /Subtype /Link /A << /S /GoTo /D (28@) >> >> endobj 745 0 obj << /Type /Annot /Border [0 0 0] /Rect [510.361 364.417 519.577 372.288] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 746 0 obj << /Type /Annot /Border [0 0 0] /Rect [525.107 364.417 534.322 372.288] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 747 0 obj << /Type /Annot /Border [0 0 0] /Rect [337.96 354.205 347.175 359.984] /Subtype /Link /A << /S /GoTo /D (36@) >> >> endobj 748 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 298.095 536.882 306.065] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 749 0 obj << /Type /Annot /Border [0 0 0] /Rect [512.819 285.342 522.035 293.312] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 750 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 285.342 536.882 293.312] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 751 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 272.588 536.882 280.331] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 752 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 261.578 536.882 267.805] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 753 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 248.825 536.882 255.051] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 754 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 234.328 536.882 242.298] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 755 0 obj << /Type /Annot /Border [0 0 0] /Rect [532.274 221.574 536.882 229.545] /Subtype /Link /A << /S /GoTo /D (5@) >> >> endobj 756 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 208.821 536.882 216.564] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 757 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 196.067 536.882 204.038] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 758 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 183.314 536.882 191.284] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 759 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 128.947 536.882 136.917] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 760 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 117.937 536.882 124.164] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 761 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 103.44 536.882 111.411] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 762 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 90.687 536.882 98.657] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 672 0 obj << /D [670 0 R /XYZ 83.339 710.752 null] >> endobj 61 0 obj << /D [670 0 R /XYZ 83.339 90.687 null] >> endobj 669 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F2 675 0 R /F38 678 0 R /F31 722 0 R >> /ProcSet [ /PDF /Text ] >> endobj 765 0 obj << /Length 1830       /Filter /FlateDecode stream VX<yr0 yquof F)G'H fm{{f h$?q>u s`W%A?= IMywkbt Rt%w! h~kIN endstream endobj 764 0 obj << /Type /Page /Contents 765 0 R /Resources 763 0 R /MediaBox [0 0 595.276 841.89] /Parent 639 0 R /Annots [ 766 0 R 767 0 R 768 0 R 769 0 R 770 0 R 771 0 R 772 0 R 773 0 R 774 0 R 775 0 R 776 0 R 777 0 R 778 0 R 779 0 R 780 0 R 781 0 R 782 0 R 783 0 R 784 0 R 785 0 R 786 0 R 787 0 R 788 0 R 789 0 R 790 0 R 791 0 R 792 0 R 793 0 R 794 0 R 795 0 R 796 0 R 797 0 R 798 0 R 799 0 R 800 0 R 801 0 R 802 0 R 803 0 R 804 0 R 805 0 R 806 0 R 807 0 R 808 0 R 809 0 R 810 0 R 811 0 R 812 0 R 813 0 R 814 0 R 815 0 R ] >> endobj 766 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 708.131 300.691 716.101] /Subtype /Link /A << /S /GoTo /D (3@) >> >> endobj 767 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 696.048 300.691 703.791] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 768 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 685.709 300.691 691.709] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 769 0 obj << /Type /Annot /Border [0 0 0] /Rect [285.844 671.884 290.452 679.405] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 770 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 671.884 300.691 679.405] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 771 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 659.801 300.691 667.771] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 772 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 647.719 300.691 655.689] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 773 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 635.637 300.691 643.607] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 774 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 623.554 300.691 631.524] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 775 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 611.472 300.691 619.442] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 776 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 599.39 300.691 607.36] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 777 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 587.307 300.691 595.277] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 778 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 575.225 300.691 582.968] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 779 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 563.143 300.691 571.113] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 780 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 551.06 300.691 559.03] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 781 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 538.978 300.691 546.721] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 782 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 528.639 300.691 534.866] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 783 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 479.776 300.691 485.554] /Subtype /Link /A << /S /GoTo /D (5@) >> >> endobj 784 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 429.169 300.691 437.139] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 785 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 417.087 300.691 425.057] /Subtype /Link /A << /S /GoTo /D (23@) >> >> endobj 786 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 405.004 300.691 412.974] /Subtype /Link /A << /S /GoTo /D (28@) >> >> endobj 787 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 392.922 300.691 400.892] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 788 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 344.059 300.691 352.029] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 789 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 331.976 300.691 339.719] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 790 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 283.113 300.691 291.083] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 791 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 271.03 300.691 279.001] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 792 0 obj << /Type /Annot /Border [0 0 0] /Rect [532.274 724.311 536.882 732.281] /Subtype /Link /A << /S /GoTo /D (5@) >> >> endobj 793 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 676.687 536.882 682.686] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 794 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 662.8 536.882 670.77] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 795 0 obj << /Type /Annot /Border [0 0 0] /Rect [512.819 650.656 522.035 658.626] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 796 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 650.656 536.882 658.626] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 797 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 638.512 536.882 646.482] /Subtype /Link /A << /S /GoTo /D (34@) >> >> endobj 798 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 626.368 536.882 634.111] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 799 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 614.225 536.882 622.195] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 800 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 564.857 536.882 572.828] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 801 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 552.714 536.882 560.456] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 802 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 540.57 536.882 548.54] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 803 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 528.426 536.882 536.396] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 804 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 516.282 536.882 524.252] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 805 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 504.139 536.882 512.109] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 806 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 491.995 536.882 499.965] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 807 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 442.628 536.882 450.598] /Subtype /Link /A << /S /GoTo /D (32@) >> >> endobj 808 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 430.484 536.882 438.454] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 809 0 obj << /Type /Annot /Border [0 0 0] /Rect [532.274 420.083 536.882 426.31] /Subtype /Link /A << /S /GoTo /D (5@) >> >> endobj 810 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 406.196 536.882 413.939] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 811 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 394.052 536.882 402.023] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 812 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 344.685 536.882 352.655] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 813 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 332.541 536.882 340.512] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 814 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 320.398 536.882 328.368] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 815 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 271.03 536.882 279.001] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 816 0 obj << /D [764 0 R /XYZ 83.339 92.43 null] >> endobj 763 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F2 675 0 R /F38 678 0 R >> /ProcSet [ /PDF /Text ] >> endobj 819 0 obj << /Length 1322       /Filter /FlateDecode stream OM'eA _I`gw *JI!,s 5Y"-K im;R8[G kZ\!G CgI}2 ;='eMz endstream endobj 818 0 obj << /Type /Page /Contents 819 0 R /Resources 817 0 R /MediaBox [0 0 595.276 841.89] /Parent 866 0 R /Annots [ 821 0 R 822 0 R 823 0 R 824 0 R 825 0 R 826 0 R 827 0 R 828 0 R 829 0 R 830 0 R 831 0 R 832 0 R 833 0 R 834 0 R 835 0 R 836 0 R 837 0 R 838 0 R 839 0 R 840 0 R 841 0 R 842 0 R 843 0 R 844 0 R 845 0 R 846 0 R 847 0 R 848 0 R 849 0 R 850 0 R 851 0 R 852 0 R 853 0 R 854 0 R 855 0 R 856 0 R 857 0 R 858 0 R 859 0 R 860 0 R 861 0 R 862 0 R 863 0 R 864 0 R 865 0 R ] >> endobj 821 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 641.986 300.691 647.764] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 822 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 591.079 300.691 598.85] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 823 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 578.991 300.691 586.762] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 824 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 566.902 300.691 574.673] /Subtype /Link /A << /S /GoTo /D (19@) >> >> endobj 825 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 517.988 300.691 525.759] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 826 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 505.9 300.691 513.671] /Subtype /Link /A << /S /GoTo /D (17@) >> >> endobj 827 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 495.804 300.691 501.582] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 828 0 obj << /Type /Annot /Border [0 0 0] /Rect [296.084 483.716 300.691 489.494] /Subtype /Link /A << /S /GoTo /D (9@) >> >> endobj 829 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 471.627 300.691 477.405] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 830 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 459.539 300.691 465.317] /Subtype /Link /A << /S /GoTo /D (23@) >> >> endobj 831 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 447.45 300.691 453.228] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 832 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 435.362 300.691 441.14] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 833 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 421.281 300.691 429.051] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 834 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 372.367 300.691 380.137] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 835 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 360.278 300.691 368.049] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 836 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 350.182 300.691 355.96] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 837 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 301.268 300.691 307.047] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 838 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 289.18 300.691 294.958] /Subtype /Link /A << /S /GoTo /D (28@) >> >> endobj 839 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 238.273 300.691 246.044] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 840 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 191.352 300.691 197.13] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 841 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 179.263 300.691 185.042] /Subtype /Link /A << /S /GoTo /D (13@) >> >> endobj 842 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 167.175 300.691 172.953] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 843 0 obj << /Type /Annot /Border [0 0 0] /Rect [291.476 155.086 300.691 160.865] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 844 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 658.18 536.882 663.958] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 845 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 646.211 536.882 651.989] /Subtype /Link /A << /S /GoTo /D (12@) >> >> endobj 846 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 598.278 536.882 604.056] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 847 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 586.309 536.882 592.087] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 848 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 538.376 536.882 544.155] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 849 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 524.415 536.882 532.186] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 850 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 512.446 536.882 520.217] /Subtype /Link /A << /S /GoTo /D (32@) >> >> endobj 851 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 464.513 536.882 472.284] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 852 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 452.544 536.882 460.315] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 853 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 440.576 536.882 448.346] /Subtype /Link /A << /S /GoTo /D (11@) >> >> endobj 854 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 392.643 536.882 400.414] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 855 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 346.703 536.882 352.481] /Subtype /Link /A << /S /GoTo /D (14@) >> >> endobj 856 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 334.734 536.882 340.512] /Subtype /Link /A << /S /GoTo /D (21@) >> >> endobj 857 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 322.765 536.882 328.543] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 858 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 308.803 536.882 316.574] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 859 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 296.835 536.882 304.605] /Subtype /Link /A << /S /GoTo /D (31@) >> >> endobj 860 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 250.894 536.882 256.673] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 861 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 238.925 536.882 244.704] /Subtype /Link /A << /S /GoTo /D (16@) >> >> endobj 862 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 226.957 536.882 232.735] /Subtype /Link /A << /S /GoTo /D (27@) >> >> endobj 863 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 179.024 536.882 184.802] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 864 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 167.055 536.882 172.833] /Subtype /Link /A << /S /GoTo /D (23@) >> >> endobj 865 0 obj << /Type /Annot /Border [0 0 0] /Rect [527.666 155.086 536.882 160.864] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 820 0 obj << /D [818 0 R /XYZ 83.339 714.099 null] >> endobj 62 0 obj << /D [818 0 R /XYZ 83.339 92.43 null] >> endobj 817 0 obj << /Font << /F51 9 0 R /F65 6 0 R /F52 69 0 R /F31 722 0 R /F38 678 0 R /F2 675 0 R >> /ProcSet [ /PDF /Text ] >> endobj 869 0 obj << /Length 904        /Filter /FlateDecode stream ~1>x~ '_"{6 N,pz] G67K9ey zy <1 endstream endobj 868 0 obj << /Type /Page /Contents 869 0 R /Resources 867 0 R /MediaBox [0 0 595.276 841.89] /Parent 866 0 R /Annots [ 870 0 R 871 0 R 872 0 R 873 0 R 874 0 R 875 0 R 876 0 R 877 0 R 878 0 R 879 0 R 880 0 R 881 0 R 882 0 R 883 0 R 884 0 R 885 0 R 886 0 R ] >> endobj 870 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 694.838 464.882 705.465] /Subtype /Link /A << /S /GoTo /D (1@) >> >> endobj 871 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 677.902 464.882 688.528] /Subtype /Link /A << /S /GoTo /D (6@) >> >> endobj 872 0 obj << /Type /Annot /Border [0 0 0] /Rect [459.029 663.29 464.882 671.592] /Subtype /Link /A << /S /GoTo /D (7@) >> >> endobj 873 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 646.353 464.882 654.655] /Subtype /Link /A << /S /GoTo /D (10@) >> >> endobj 874 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 627.092 464.882 637.719] /Subtype /Link /A << /S /GoTo /D (15@) >> >> endobj 875 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 610.156 464.882 620.782] /Subtype /Link /A << /S /GoTo /D (18@) >> >> endobj 876 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 593.219 464.882 603.846] /Subtype /Link /A << /S /GoTo /D (20@) >> >> endobj 877 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 578.607 464.882 586.909] /Subtype /Link /A << /S /GoTo /D (24@) >> >> endobj 878 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 559.346 464.882 569.973] /Subtype /Link /A << /S /GoTo /D (26@) >> >> endobj 879 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 542.41 464.882 553.036] /Subtype /Link /A << /S /GoTo /D (29@) >> >> endobj 880 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 525.473 464.882 536.1] /Subtype /Link /A << /S /GoTo /D (33@) >> >> endobj 881 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 508.537 464.882 519.163] /Subtype /Link /A << /S /GoTo /D (35@) >> >> endobj 882 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 493.925 464.882 502.227] /Subtype /Link /A << /S /GoTo /D (37@) >> >> endobj 883 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 474.664 464.882 485.29] /Subtype /Link /A << /S /GoTo /D (38@) >> >> endobj 884 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 457.727 464.882 468.819] /Subtype /Link /A << /S /GoTo /D (40@) >> >> endobj 885 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 440.791 464.882 451.417] /Subtype /Link /A << /S /GoTo /D (42@) >> >> endobj 886 0 obj << /Type /Annot /Border [0 0 0] /Rect [453.176 426.179 464.882 434.481] /Subtype /Link /A << /S /GoTo /D (44@) >> >> endobj 887 0 obj << /D [868 0 R /XYZ 83.339 92.43 null] >> endobj 867 0 obj << /Font << /F101 22 0 R /F65 6 0 R /F84 25 0 R /F86 42 0 R >> /ProcSet [ /PDF /Text ] >> endobj 721 0 obj << /Length1 1115 /Length2 4614 /Length3 532 /Length 5331       /Filter /FlateDecode stream y!1hm ) XNIFN .^@a- M`))  5</ ^ 2Q3>4 -v/w_ WszuJ R4]=V b=Oj@& G|(^j cA0P$ ix{T7G ^ep._ #s^o] [?-2I"vy y[h!M $O5;e l>d}: xlz-1$ h`d^7 f:uf<j m#axr\f y8-}<u "AHTN B*Jz- FuoGp S/>V- O4pD!` endstream endobj 722 0 obj << /Type /Font /Subtype /Type1 /Encoding 888 0 R /FirstChar 52 /LastChar 121 /Widths 889 0 R /BaseFont /ERYIUX+CMTT9 /FontDescriptor 720 0 R >> endobj 720 0 obj << /Ascent 611 /CapHeight 611 /Descent -222 /FontName /ERYIUX+CMTT9 /ItalicAngle 0 /StemV 74 /XHeight 431 /FontBBox [-6 -233 542 698] /Flags 4 /CharSet (/four/a/b/c/d/e/f/g/h/i/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y) /FontFile 721 0 R >> endobj 889 0 obj [525 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 525 525 525 525 525 525 525 525 525 0 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 ] endobj 888 0 obj << /Type /Encoding /Differences [ 0 /.notdef 52/four 53/.notdef 97/a/b/c/d/e/f/g/h/i 106/.notdef 107/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y 122/.notdef] >> endobj 677 0 obj << /Length1 768 /Length2 987 /Length3 532 /Length 1549       /Filter /FlateDecode stream 8L0)B] UkAQYT =kmJxrG i]EVn MF7*H~ -XeSV +NWoW `WQqur endstream endobj 678 0 obj << /Type /Font /Subtype /Type1 /Encoding 890 0 R /FirstChar 46 /LastChar 46 /Widths 891 0 R /BaseFont /NJNPJI+CMTI9 /FontDescriptor 676 0 R >> endobj 676 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /NJNPJI+CMTI9 /ItalicAngle -14 /StemV 70 /XHeight 431 /FontBBox [-35 -250 1148 750] /Flags 4 /CharSet (/period) /FontFile 677 0 R >> endobj 891 0 obj [315 ] endobj 890 0 obj << /Type /Encoding /Differences [ 0 /.notdef 46/period 47/.notdef] >> endobj 674 0 obj << /Length1 1400 /Length2 7987 /Length3 532 /Length 8837       /Filter /FlateDecode stream Z<@qIpwww 3U}w\i i;S_R 4M+!b :H>0~ZG% (\+J) ]'dY- kJ;$7 -j[LE (P)%j *SJCo dAW%:\ }=qRy ^rWbl +~9WL( Dv}[u  <JJb3 I4!{}f GV2*W'613vd qD5nb phVsM }XG r Z[$*zq oRV7o +o^iB 6EQj? 52^J65 endstream endobj 675 0 obj << /Type /Font /Subtype /Type1 /Encoding 892 0 R /FirstChar 12 /LastChar 122 /Widths 893 0 R /BaseFont /HGXLZN+CMR9 /FontDescriptor 673 0 R >> endobj 673 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /HGXLZN+CMR9 /ItalicAngle 0 /StemV 74 /XHeight 431 /FontBBox [-39 -250 1036 750] /Flags 4 /CharSet (/fi/comma/zero/one/two/three/four/five/six/seven/eight/nine/A/G/I/N/U/X/a/b/c/d/e/f/g/h/i/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z) /FontFile 674 0 R >> endobj 893 0 obj [571 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 286 0 0 0 514 514 514 514 514 514 514 514 514 514 0 0 0 0 0 0 0 771 0 0 0 0 0 807 0 371 0 0 0 0 771 0 0 0 0 0 0 771 0 0 771 0 0 0 0 0 0 0 0 514 571 457 571 457 314 514 571 286 0 542 286 857 571 514 571 542 402 405 400 571 542 742 542 542 457 ] endobj 892 0 obj << /Type /Encoding /Differences [ 0 /.notdef 12/fi 13/.notdef 44/comma 45/.notdef 48/zero/one/two/three/four/five/six/seven/eight/nine 58/.notdef 65/A 66/.notdef 71/G 72/.notdef 73/I 74/.notdef 78/N 79/.notdef 85/U 86/.notdef 88/X 89/.notdef 97/a/b/c/d/e/f/g/h/i 106/.notdef 107/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z 123/.notdef] >> endobj 637 0 obj << /Length1 769 /Length2 1217 /Length3 532 /Length 1781       /Filter /FlateDecode stream aP$$,a lA!-" ]/?{l \XNafvD_ ml=6>p 1endstream endobj 638 0 obj << /Type /Font /Subtype /Type1 /Encoding 894 0 R /FirstChar 76 /LastChar 78 /Widths 895 0 R /BaseFont /SSAGQN+CMR8 /FontDescriptor 636 0 R >> endobj 636 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /SSAGQN+CMR8 /ItalicAngle 0 /StemV 76 /XHeight 431 /FontBBox [-36 -250 1070 750] /Flags 4 /CharSet (/L/N) /FontFile 637 0 R >> endobj 895 0 obj [664 0 796 ] endobj 894 0 obj << /Type /Encoding /Differences [ 0 /.notdef 76/L 77/.notdef 78/N 79/.notdef] >> endobj 547 0 obj << /Length1 807 /Length2 766 /Length3 532 /Length 1338       /Filter /FlateDecode stream (@x)? )Iq7= ~uvaq \endstream endobj 548 0 obj << /Type /Font /Subtype /Type1 /Encoding 896 0 R /FirstChar 104 /LastChar 105 /Widths 897 0 R /BaseFont /OUZBTI+CMSY9 /FontDescriptor 546 0 R >> endobj 546 0 obj << /Ascent 750 /CapHeight 683 /Descent -194 /FontName /OUZBTI+CMSY9 /ItalicAngle -14 /StemV 87 /XHeight 431 /FontBBox [-30 -958 1146 777] /Flags 4 /CharSet (/angbracketleft/angbracketright) /FontFile 547 0 R >> endobj 897 0 obj [400 400 ] endobj 896 0 obj << /Type /Encoding /Differences [ 0 /.notdef 104/angbracketleft/angbracketright 106/.notdef] >> endobj 449 0 obj << /Length1 846 /Length2 1385 /Length3 532 /Length 1997       /Filter /FlateDecode stream R}8Ty D&S0"v> s$..HT Z\NuM9 woc&> 8Tq&t b5r.Z :I\;L~ k:W)T ekj2`WJP endstream endobj 450 0 obj << /Type /Font /Subtype /Type1 /Encoding 898 0 R /FirstChar 35 /LastChar 96 /Widths 899 0 R /BaseFont /ELMJIK+CMSLTT10 /FontDescriptor 448 0 R >> endobj 448 0 obj << /Ascent 611 /CapHeight 611 /Descent -222 /FontName /ELMJIK+CMSLTT10 /ItalicAngle -9 /StemV 69 /XHeight 431 /FontBBox [-20 -233 617 696] /Flags 4 /CharSet (/numbersign/quoteright/underscore/quoteleft) /FontFile 449 0 R >> endobj 899 0 obj [525 0 0 0 525 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 525 525 ] endobj 898 0 obj << /Type /Encoding /Differences [ 0 /.notdef 35/numbersign 36/.notdef 39/quoteright 40/.notdef 95/underscore/quoteleft 97/.notdef] >> endobj 436 0 obj << /Length1 791 /Length2 1229 /Length3 532 /Length 1804       /Filter /FlateDecode stream R{<Ti lDSDZ+! E{{46 51!,Y -z;J} +l{;G+ wfl3s^} diAy_a Y_MH^x_ endstream endobj 437 0 obj << /Type /Font /Subtype /Type1 /Encoding 900 0 R /FirstChar 101 /LastChar 114 /Widths 901 0 R /BaseFont /NXNFHA+CMSS10 /FontDescriptor 435 0 R >> endobj 435 0 obj << /Ascent 694 /CapHeight 694 /Descent -194 /FontName /NXNFHA+CMSS10 /ItalicAngle 0 /StemV 78 /XHeight 444 /FontBBox [-61 -250 999 759] /Flags 4 /CharSet (/e/o/r) /FontFile 436 0 R >> endobj 901 0 obj [444 0 0 0 0 0 0 0 0 0 500 0 0 342 ] endobj 900 0 obj << /Type /Encoding /Differences [ 0 /.notdef 101/e 102/.notdef 111/o 112/.notdef 114/r 115/.notdef] >> endobj 402 0 obj << /Length1 1315 /Length2 8252 /Length3 532 /Length 9067       /Filter /FlateDecode stream A2`;'fv GMk1T1K >e^y^D blUhr{ -U3OY- WhmcY w%9<a :[;tD [(y%K zxx_^ M\^T(I 5c{r# NwGcm 3?})H uk\@* 9KAaI #[P1z} 3mE3C 'A$yx CVBk" }*F~cc x;_WU(U w"EoB h[>K^ '-.$;FW MMg]L SjTf* Ofn,1 #f0\PIxY OSCHH <9_Q( &qY,X {N"e8 MktCg >|o[[ QMx(> I'k7A T;$Y0 JA-[t 6Av]Hk endstream endobj 403 0 obj << /Type /Font /Subtype /Type1 /Encoding 902 0 R /FirstChar 12 /LastChar 122 /Widths 903 0 R /BaseFont /HDHXQU+CMSL10 /FontDescriptor 401 0 R >> endobj 401 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /HDHXQU+CMSL10 /ItalicAngle -9 /StemV 79 /XHeight 431 /FontBBox [-62 -250 1123 750] /Flags 4 /CharSet (/fi/fl/hyphen/one/two/E/G/M/N/P/R/T/U/X/a/b/c/d/e/f/g/h/i/k/l/m/n/o/p/q/r/s/t/u/v/w/x/z) /FontFile 402 0 R >> endobj 903 0 obj [556 556 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 0 0 0 500 500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 681 0 785 0 0 0 0 0 917 750 0 681 0 736 0 722 750 0 0 750 0 0 0 0 0 0 0 0 500 556 444 556 444 306 500 556 278 0 528 278 833 556 500 556 528 392 394 389 556 528 722 528 0 444 ] endobj 902 0 obj << /Type /Encoding /Differences [ 0 /.notdef 12/fi/fl 14/.notdef 45/hyphen 46/.notdef 49/one/two 51/.notdef 69/E 70/.notdef 71/G 72/.notdef 77/M/N 79/.notdef 80/P 81/.notdef 82/R 83/.notdef 84/T/U 86/.notdef 88/X 89/.notdef 97/a/b/c/d/e/f/g/h/i 106/.notdef 107/k/l/m/n/o/p/q/r/s/t/u/v/w/x 121/.notdef 122/z 123/.notdef] >> endobj 71 0 obj << /Length1 1088 /Length2 5312 /Length3 532 /Length 6034       /Filter /FlateDecode stream R@Y)Y `0XFL  Z{d!M N\06z @^:pN mT7e\ UBH/` iI<y,V ~TxfJ ^VH,6K} r=D(;&pA {dOt{|u :i\2=a PM}>%Wu rn'S3 bx"L/ ^N"-7 X6N1> ,gG^gH %FOn,l dRy1& kDyK:y4 SITq$` ~?Rnm= ?CbM,p ~@c{- vWw]|3 o[I7G M,Fw)a,5Zz@ Z1#X@ tP(s~C ce'="d |5RtwaLE o>-<j ^endstream endobj 72 0 obj << /Type /Font /Subtype /Type1 /Encoding 904 0 R /FirstChar 12 /LastChar 121 /Widths 905 0 R /BaseFont /FQZIFU+CMTI10 /FontDescriptor 70 0 R >> endobj 70 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /FQZIFU+CMTI10 /ItalicAngle -14 /StemV 68 /XHeight 431 /FontBBox [-163 -250 1146 969] /Flags 4 /CharSet (/fi/period/D/a/c/d/e/g/h/i/l/m/n/o/p/q/r/s/t/u/w/y) /FontFile 71 0 R >> endobj 905 0 obj [562 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 307 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 755 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 511 0 460 511 460 0 460 511 307 0 0 256 818 562 511 511 460 422 409 332 537 0 664 0 486 ] endobj 904 0 obj << /Type /Encoding /Differences [ 0 /.notdef 12/fi 13/.notdef 46/period 47/.notdef 68/D 69/.notdef 97/a 98/.notdef 99/c/d/e 102/.notdef 103/g/h/i 106/.notdef 108/l/m/n/o/p/q/r/s/t/u 118/.notdef 119/w 120/.notdef 121/y 122/.notdef] >> endobj 68 0 obj << /Length1 2261 /Length2 14587 /Length3 532 /Length 15829      /Filter /FlateDecode stream @scWkG N^@kK+W G{'7Ws @ C\ 5;s Sy'P> 5h?Ufb `D&#> !2a,l_%opS 7MGz` %wiTT7t uH_y+w  *o9[ $[Y#e&D TWBc. yHd?L '%8l] )r_/` W#H@F pHv%7 ZVlMq. %&O^y ojU5n %c+A]( vR~K\ f(fV2 K@4WY OgpB=K .9b9, ;b6HU) p<j6q p|C%> uM-3B W8WPX$ r&SR{ -%Vli wud0w ZMK'q (Y{H- Cxm7z 2p+2A2~* OCkcr (|e=H _V!J2 oTB1u >~)Fr .-!cL Y"%OyQ iivWH /GQVA ,S3}bA MI8[z Fmw|D"G E5_[n KXwqNw ?bLeea osE0H< rVEkL> [g}@j \Q3\PQ t{CLiq' 4Bk!. Q=,h}a qty=6N0Iz |q*lp' <.{%=r e;m+8 endstream endobj 69 0 obj << /Type /Font /Subtype /Type1 /Encoding 906 0 R /FirstChar 33 /LastChar 126 /Widths 907 0 R /BaseFont /EWVPXW+CMTT10 /FontDescriptor 67 0 R >> endobj 67 0 obj << /Ascent 611 /CapHeight 611 /Descent -222 /FontName /EWVPXW+CMTT10 /ItalicAngle 0 /StemV 69 /XHeight 431 /FontBBox [-4 -235 731 800] /Flags 4 /CharSet (/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/less/equal/greater/at/A/B/C/D/E/F/G/H/I/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde) /FontFile 68 0 R >> endobj 907 0 obj [525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 0 525 525 525 0 525 525 525 525 525 525 525 525 525 525 0 0 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 ] endobj 906 0 obj << /Type /Encoding /Differences [ 0 /.notdef 33/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon 59/.notdef 60/less/equal/greater 63/.notdef 64/at/A/B/C/D/E/F/G/H/I 74/.notdef 76/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde 127/.notdef] >> endobj 41 0 obj << /Length1 776 /Length2 1273 /Length3 532 /Length 1847       /Filter /FlateDecode stream RiXSg K6B :b W..pt \ent[ Fff#u #T|@U $WM\~W HS5SHhj@ E\ynVNs endstream endobj 42 0 obj << /Type /Font /Subtype /Type1 /Encoding 908 0 R /FirstChar 52 /LastChar 109 /Widths 909 0 R /BaseFont /AUVWOK+CMTT12 /FontDescriptor 40 0 R >> endobj 40 0 obj << /Ascent 611 /CapHeight 611 /Descent -222 /FontName /AUVWOK+CMTT12 /ItalicAngle 0 /StemV 65 /XHeight 431 /FontBBox [-1 -234 524 695] /Flags 4 /CharSet (/four/m) /FontFile 41 0 R >> endobj 909 0 obj [515 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 515 ] endobj 908 0 obj << /Type /Encoding /Differences [ 0 /.notdef 52/four 53/.notdef 109/m 110/.notdef] >> endobj 24 0 obj << /Length1 775 /Length2 987 /Length3 532 /Length 1543       /Filter /FlateDecode stream P(@`_E c>\%@* (=1jbCo -"{|| ,noLNY 4\cW9 endstream endobj 25 0 obj << /Type /Font /Subtype /Type1 /Encoding 910 0 R /FirstChar 46 /LastChar 46 /Widths 911 0 R /BaseFont /LVDYID+CMBXTI10 /FontDescriptor 23 0 R >> endobj 23 0 obj << /Ascent 694 /CapHeight 686 /Descent -194 /FontName /LVDYID+CMBXTI10 /ItalicAngle -14 /StemV 107 /XHeight 444 /FontBBox [-29 -250 1274 754] /Flags 4 /CharSet (/period) /FontFile 24 0 R >> endobj 911 0 obj [356 ] endobj 910 0 obj << /Type /Encoding /Differences [ 0 /.notdef 46/period 47/.notdef] >> endobj 21 0 obj << /Length1 1457 /Length2 8735 /Length3 532 /Length 9598       /Filter /FlateDecode stream K. G' bbci* zl,ll VS;[[ QSgGG lm,L""e |v<,  k3szK %HV4x 4#~l| IPIan8 QR`*o g:-IJM W@tN& FS{Jd r=~v- vm*/| "#;!o? ,9Sk&|T d`v1S WI;sg ;03M. wlz^*x?z nM%|mE yE.'Y "99ZKdok J6&G%P iEy[T @76aa/ q0FZP skRF3. trOEnL g oVN_ `T'4D*+ >*D+=$ JJn{R Mfq..E tU/:y N{^w  $%Ooy P!1mNzKx/ xVjgt endstream endobj 22 0 obj << /Type /Font /Subtype /Type1 /Encoding 912 0 R /FirstChar 12 /LastChar 122 /Widths 913 0 R /BaseFont /PQAPVT+CMR12 /FontDescriptor 20 0 R >> endobj 20 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /PQAPVT+CMR12 /ItalicAngle 0 /StemV 65 /XHeight 431 /FontBBox [-34 -251 988 750] /Flags 4 /CharSet (/fi/comma/zero/one/two/three/four/five/six/seven/eight/nine/C/D/F/H/I/L/M/N/R/U/X/a/b/c/d/e/f/g/h/i/k/l/m/n/o/p/r/s/t/u/v/w/x/y/z) /FontFile 21 0 R >> endobj 913 0 obj [544 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 272 0 0 0 490 490 490 490 490 490 490 490 490 490 0 0 0 0 0 0 0 0 0 707 748 0 639 0 734 353 0 0 612 897 734 0 0 0 721 0 0 734 0 0 734 0 0 0 0 0 0 0 0 490 544 435 544 435 299 490 544 272 0 517 272 816 544 490 544 0 381 386 381 544 517 707 517 517 435 ] endobj 912 0 obj << /Type /Encoding /Differences [ 0 /.notdef 12/fi 13/.notdef 44/comma 45/.notdef 48/zero/one/two/three/four/five/six/seven/eight/nine 58/.notdef 67/C/D 69/.notdef 70/F 71/.notdef 72/H/I 74/.notdef 76/L/M/N 79/.notdef 82/R 83/.notdef 85/U 86/.notdef 88/X 89/.notdef 97/a/b/c/d/e/f/g/h/i 106/.notdef 107/k/l/m/n/o/p 113/.notdef 114/r/s/t/u/v/w/x/y/z 123/.notdef] >> endobj 15 0 obj << /Length1 823 /Length2 897 /Length3 532 /Length 1484       /Filter /FlateDecode stream t8T15d e8%SB  {|/$n `qQOH endstream endobj 16 0 obj << /Type /Font /Subtype /Type1 /Encoding 914 0 R /FirstChar 13 /LastChar 41 /Widths 915 0 R /BaseFont /AVKCWP+CMSY10 /FontDescriptor 14 0 R >> endobj 14 0 obj << /Ascent 750 /CapHeight 683 /Descent -194 /FontName /AVKCWP+CMSY10 /ItalicAngle -14 /StemV 85 /XHeight 431 /FontBBox [-29 -960 1116 775] /Flags 4 /CharSet (/circlecopyrt/bullet/arrowdblright) /FontFile 15 0 R >> endobj 915 0 obj [1000 0 500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1000 ] endobj 914 0 obj << /Type /Encoding /Differences [ 0 /.notdef 13/circlecopyrt 14/.notdef 15/bullet 16/.notdef 41/arrowdblright 42/.notdef] >> endobj 8 0 obj << /Length1 2063 /Length2 14956 /Length3 532 /Length 16073      /Filter /FlateDecode stream bdci"dgn bbAhfd X^&`" nbokk wHjPa 'g!RFIw, _sGIN RuML= iMQy_ h:E:& %{<;5a 7QW9P^ (.sO5 pbrN2 5,nYVY @Rpoy>{ +>@"iX rE)Hw )A]O`^ 4DGwa 1Z1FRQP ! aHg z""-? zAa|B m!og< tS$&V \pNy. L>=_^CM 61%#` AeJ)0 I)c!lf O[""Dm7;y /^tYZ L~-xQc 1">%' mDwO) ,f'N(< P"@^?} 2<uHF G<C>; o'(ed R-7n!us9 'H>|` 1,{5c 4rc5g kz|}f >YS.y? NO=_Os@z^ 5Ri q h||C2/{ l~7=-r [,1 3 _<3B} zk}*| {L&W4yS d,lZ~ m}n$XP Yd97* R>#.O w`bKM J!wF@ O7q{E qtbq+Y ,8*_. *cF~&n endstream endobj 9 0 obj << /Type /Font /Subtype /Type1 /Encoding 916 0 R /FirstChar 11 /LastChar 124 /Widths 917 0 R /BaseFont /STIWTM+CMR10 /FontDescriptor 7 0 R >> endobj 7 0 obj << /Ascent 694 /CapHeight 683 /Descent -194 /FontName /STIWTM+CMR10 /ItalicAngle 0 /StemV 69 /XHeight 431 /FontBBox [-251 -250 1009 969] /Flags 4 /CharSet (/ff/fi/fl/ffi/exclam/quotedblright/quoteright/parenleft/parenright/comma/hyphen/period/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/question/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/bracketleft/quotedblleft/bracketright/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/emdash) /FontFile 8 0 R >> endobj 917 0 obj [583 556 556 833 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 500 0 0 0 0 278 389 389 0 0 278 333 278 0 500 500 500 500 500 500 500 500 500 500 278 278 0 0 0 472 0 750 708 722 764 681 653 785 750 361 514 778 625 917 750 778 681 778 736 556 722 750 750 1028 750 750 0 278 500 278 0 0 278 500 556 444 556 444 306 500 556 278 306 528 278 833 556 500 556 528 392 394 389 556 528 722 528 528 444 0 1000 ] endobj 916 0 obj << /Type /Encoding /Differences [ 0 /.notdef 11/ff/fi/fl/ffi 15/.notdef 33/exclam/quotedblright 35/.notdef 39/quoteright/parenleft/parenright 42/.notdef 44/comma/hyphen/period 47/.notdef 48/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon 60/.notdef 63/question 64/.notdef 65/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y 90/.notdef 91/bracketleft/quotedblleft/bracketright 94/.notdef 96/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z 123/.notdef 124/emdash 125/.notdef] >> endobj 5 0 obj << /Length1 1665 /Length2 10229 /Length3 532 /Length 11175      /Filter /FlateDecode stream vpebcf  gksS A@fd66 e@L\  -_1C7 V&zJ7$ `Vf2T CN~q;i f@>#: DK.(e W~5P! pwKP(H\a 3jmW6t MM7-kq U;a?K o&Jl\ '~>1BC )Fv]?i b`)T8 kZQgC nk'O/>,A RZ2{aU V;}8m X|#}OG~ i1(x3 R=!K:u 76O[[ ]N,2pK T5NzF 'B+^&/eD Tg;&\ tig.FGSy b[p8T^ 2Su|[ GMrV&( .pV3' ?sf04 Ibe[R0 at F^ wG/+) $nwJVxt VCVQg $x:jYg bu:V; fTNt0 bU)y= YilUV -[_.7z O~85)q O:-ps X3>$endstream endobj 6 0 obj << /Type /Font /Subtype /Type1 /Encoding 918 0 R /FirstChar 12 /LastChar 122 /Widths 919 0 R /BaseFont /AOCKHA+CMBX12 /FontDescriptor 4 0 R >> endobj 4 0 obj << /Ascent 694 /CapHeight 686 /Descent -194 /FontName /AOCKHA+CMBX12 /ItalicAngle 0 /StemV 109 /XHeight 444 /FontBBox [-53 -251 1139 750] /Flags 4 /CharSet (/fi/acute/comma/period/zero/one/two/three/four/five/six/seven/eight/nine/A/B/C/D/E/F/G/H/I/L/M/N/O/P/Q/R/S/T/U/V/W/X/a/b/c/d/e/f/g/h/i/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z) /FontFile 5 0 R >> endobj 919 0 obj [625 0 0 0 0 0 0 562 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 312 0 312 0 562 562 562 562 562 562 562 562 562 562 0 0 0 0 0 0 0 850 800 812 862 738 707 884 880 419 0 0 676 1067 880 845 769 845 839 625 782 865 850 1162 850 0 0 0 0 0 0 0 0 547 625 500 625 513 344 562 625 312 0 594 312 937 625 562 625 594 459 444 437 625 594 812 594 594 500 ] endobj 918 0 obj << /Type /Encoding /Differences [ 0 /.notdef 12/fi 13/.notdef 19/acute 20/.notdef 44/comma 45/.notdef 46/period 47/.notdef 48/zero/one/two/three/four/five/six/seven/eight/nine 58/.notdef 65/A/B/C/D/E/F/G/H/I 74/.notdef 76/L/M/N/O/P/Q/R/S/T/U/V/W/X 89/.notdef 97/a/b/c/d/e/f/g/h/i 106/.notdef 107/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z 123/.notdef] >> endobj 10 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [2 0 R 12 0 R 18 0 R 64 0 R 125 0 R 394 0 R] >> endobj 416 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [406 0 R 421 0 R 428 0 R 440 0 R 444 0 R 461 0 R] >> endobj 472 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [468 0 R 474 0 R 478 0 R 487 0 R 493 0 R 498 0 R] >> endobj 506 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [502 0 R 508 0 R 514 0 R 518 0 R 524 0 R 530 0 R] >> endobj 539 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [535 0 R 541 0 R 544 0 R 551 0 R 555 0 R 560 0 R] >> endobj 570 0 obj << /Type /Pages /Count 6 /Parent 920 0 R /Kids [565 0 R 572 0 R 577 0 R 581 0 R 589 0 R 595 0 R] >> endobj 603 0 obj << /Type /Pages /Count 6 /Parent 921 0 R /Kids [600 0 R 605 0 R 610 0 R 614 0 R 622 0 R 626 0 R] >> endobj 639 0 obj << /Type /Pages /Count 6 /Parent 921 0 R /Kids [633 0 R 641 0 R 645 0 R 666 0 R 670 0 R 764 0 R] >> endobj 866 0 obj << /Type /Pages /Count 2 /Parent 921 0 R /Kids [818 0 R 868 0 R] >> endobj 920 0 obj << /Type /Pages /Count 36 /Parent 922 0 R /Kids [10 0 R 416 0 R 472 0 R 506 0 R 539 0 R 570 0 R] >> endobj 921 0 obj << /Type /Pages /Count 14 /Parent 922 0 R /Kids [603 0 R 639 0 R 866 0 R] >> endobj 922 0 obj << /Type /Pages /Count 50 /Kids [920 0 R 921 0 R] >> endobj 923 0 obj << /Type /Outlines /First 169 0 R /Last 391 0 R /Count 17 >> endobj 391 0 obj << /Title 392 0 R /A 390 0 R /Parent 923 0 R /Prev 388 0 R >> endobj 388 0 obj << /Title 389 0 R /A 387 0 R /Parent 923 0 R /Prev 376 0 R /Next 391 0 R >> endobj 385 0 obj << /Title 386 0 R /A 384 0 R /Parent 376 0 R /Prev 382 0 R >> endobj 382 0 obj << /Title 383 0 R /A 381 0 R /Parent 376 0 R /Prev 379 0 R /Next 385 0 R >> endobj 379 0 obj << /Title 380 0 R /A 378 0 R /Parent 376 0 R /Next 382 0 R >> endobj 376 0 obj << /Title 377 0 R /A 375 0 R /Parent 923 0 R /Prev 373 0 R /Next 388 0 R /First 379 0 R /Last 385 0 R /Count -3 >> endobj 373 0 obj << /Title 374 0 R /A 372 0 R /Parent 923 0 R /Prev 364 0 R /Next 376 0 R >> endobj 370 0 obj << /Title 371 0 R /A 369 0 R /Parent 364 0 R /Prev 367 0 R >> endobj 367 0 obj << /Title 368 0 R /A 366 0 R /Parent 364 0 R /Next 370 0 R >> endobj 364 0 obj << /Title 365 0 R /A 363 0 R /Parent 923 0 R /Prev 349 0 R /Next 373 0 R /First 367 0 R /Last 370 0 R /Count -2 >> endobj 361 0 obj << /Title 362 0 R /A 360 0 R /Parent 349 0 R /Prev 358 0 R >> endobj 358 0 obj << /Title 359 0 R /A 357 0 R /Parent 349 0 R /Prev 355 0 R /Next 361 0 R >> endobj 355 0 obj << /Title 356 0 R /A 354 0 R /Parent 349 0 R /Prev 352 0 R /Next 358 0 R >> endobj 352 0 obj << /Title 353 0 R /A 351 0 R /Parent 349 0 R /Next 355 0 R >> endobj 349 0 obj << /Title 350 0 R /A 348 0 R /Parent 923 0 R /Prev 340 0 R /Next 364 0 R /First 352 0 R /Last 361 0 R /Count -4 >> endobj 346 0 obj << /Title 347 0 R /A 345 0 R /Parent 340 0 R /Prev 343 0 R >> endobj 343 0 obj << /Title 344 0 R /A 342 0 R /Parent 340 0 R /Next 346 0 R >> endobj 340 0 obj << /Title 341 0 R /A 339 0 R /Parent 923 0 R /Prev 316 0 R /Next 349 0 R /First 343 0 R /Last 346 0 R /Count -2 >> endobj 337 0 obj << /Title 338 0 R /A 336 0 R /Parent 316 0 R /Prev 334 0 R >> endobj 334 0 obj << /Title 335 0 R /A 333 0 R /Parent 316 0 R /Prev 331 0 R /Next 337 0 R >> endobj 331 0 obj << /Title 332 0 R /A 330 0 R /Parent 316 0 R /Prev 328 0 R /Next 334 0 R >> endobj 328 0 obj << /Title 329 0 R /A 327 0 R /Parent 316 0 R /Prev 325 0 R /Next 331 0 R >> endobj 325 0 obj << /Title 326 0 R /A 324 0 R /Parent 316 0 R /Prev 322 0 R /Next 328 0 R >> endobj 322 0 obj << /Title 323 0 R /A 321 0 R /Parent 316 0 R /Prev 319 0 R /Next 325 0 R >> endobj 319 0 obj << /Title 320 0 R /A 318 0 R /Parent 316 0 R /Next 322 0 R >> endobj 316 0 obj << /Title 317 0 R /A 315 0 R /Parent 923 0 R /Prev 301 0 R /Next 340 0 R /First 319 0 R /Last 337 0 R /Count -7 >> endobj 313 0 obj << /Title 314 0 R /A 312 0 R /Parent 301 0 R /Prev 310 0 R >> endobj 310 0 obj << /Title 311 0 R /A 309 0 R /Parent 301 0 R /Prev 307 0 R /Next 313 0 R >> endobj 307 0 obj << /Title 308 0 R /A 306 0 R /Parent 301 0 R /Prev 304 0 R /Next 310 0 R >> endobj 304 0 obj << /Title 305 0 R /A 303 0 R /Parent 301 0 R /Next 307 0 R >> endobj 301 0 obj << /Title 302 0 R /A 300 0 R /Parent 923 0 R /Prev 292 0 R /Next 316 0 R /First 304 0 R /Last 313 0 R /Count -4 >> endobj 298 0 obj << /Title 299 0 R /A 297 0 R /Parent 292 0 R /Prev 295 0 R >> endobj 295 0 obj << /Title 296 0 R /A 294 0 R /Parent 292 0 R /Next 298 0 R >> endobj 292 0 obj << /Title 293 0 R /A 291 0 R /Parent 923 0 R /Prev 274 0 R /Next 301 0 R /First 295 0 R /Last 298 0 R /Count -2 >> endobj 289 0 obj << /Title 290 0 R /A 288 0 R /Parent 274 0 R /Prev 286 0 R >> endobj 286 0 obj << /Title 287 0 R /A 285 0 R /Parent 274 0 R /Prev 283 0 R /Next 289 0 R >> endobj 283 0 obj << /Title 284 0 R /A 282 0 R /Parent 274 0 R /Prev 280 0 R /Next 286 0 R >> endobj 280 0 obj << /Title 281 0 R /A 279 0 R /Parent 274 0 R /Prev 277 0 R /Next 283 0 R >> endobj 277 0 obj << /Title 278 0 R /A 276 0 R /Parent 274 0 R /Next 280 0 R >> endobj 274 0 obj << /Title 275 0 R /A 273 0 R /Parent 923 0 R /Prev 259 0 R /Next 292 0 R /First 277 0 R /Last 289 0 R /Count -5 >> endobj 271 0 obj << /Title 272 0 R /A 270 0 R /Parent 259 0 R /Prev 268 0 R >> endobj 268 0 obj << /Title 269 0 R /A 267 0 R /Parent 259 0 R /Prev 265 0 R /Next 271 0 R >> endobj 265 0 obj << /Title 266 0 R /A 264 0 R /Parent 259 0 R /Prev 262 0 R /Next 268 0 R >> endobj 262 0 obj << /Title 263 0 R /A 261 0 R /Parent 259 0 R /Next 265 0 R >> endobj 259 0 obj << /Title 260 0 R /A 258 0 R /Parent 923 0 R /Prev 247 0 R /Next 274 0 R /First 262 0 R /Last 271 0 R /Count -4 >> endobj 256 0 obj << /Title 257 0 R /A 255 0 R /Parent 247 0 R /Prev 253 0 R >> endobj 253 0 obj << /Title 254 0 R /A 252 0 R /Parent 247 0 R /Prev 250 0 R /Next 256 0 R >> endobj 250 0 obj << /Title 251 0 R /A 249 0 R /Parent 247 0 R /Next 253 0 R >> endobj 247 0 obj << /Title 248 0 R /A 246 0 R /Parent 923 0 R /Prev 220 0 R /Next 259 0 R /First 250 0 R /Last 256 0 R /Count -3 >> endobj 244 0 obj << /Title 245 0 R /A 243 0 R /Parent 220 0 R /Prev 241 0 R >> endobj 241 0 obj << /Title 242 0 R /A 240 0 R /Parent 220 0 R /Prev 238 0 R /Next 244 0 R >> endobj 238 0 obj << /Title 239 0 R /A 237 0 R /Parent 220 0 R /Prev 235 0 R /Next 241 0 R >> endobj 235 0 obj << /Title 236 0 R /A 234 0 R /Parent 220 0 R /Prev 232 0 R /Next 238 0 R >> endobj 232 0 obj << /Title 233 0 R /A 231 0 R /Parent 220 0 R /Prev 229 0 R /Next 235 0 R >> endobj 229 0 obj << /Title 230 0 R /A 228 0 R /Parent 220 0 R /Prev 226 0 R /Next 232 0 R >> endobj 226 0 obj << /Title 227 0 R /A 225 0 R /Parent 220 0 R /Prev 223 0 R /Next 229 0 R >> endobj 223 0 obj << /Title 224 0 R /A 222 0 R /Parent 220 0 R /Next 226 0 R >> endobj 220 0 obj << /Title 221 0 R /A 219 0 R /Parent 923 0 R /Prev 202 0 R /Next 247 0 R /First 223 0 R /Last 244 0 R /Count -8 >> endobj 217 0 obj << /Title 218 0 R /A 216 0 R /Parent 202 0 R /Prev 214 0 R >> endobj 214 0 obj << /Title 215 0 R /A 213 0 R /Parent 202 0 R /Prev 211 0 R /Next 217 0 R >> endobj 211 0 obj << /Title 212 0 R /A 210 0 R /Parent 202 0 R /Prev 208 0 R /Next 214 0 R >> endobj 208 0 obj << /Title 209 0 R /A 207 0 R /Parent 202 0 R /Prev 205 0 R /Next 211 0 R >> endobj 205 0 obj << /Title 206 0 R /A 204 0 R /Parent 202 0 R /Next 208 0 R >> endobj 202 0 obj << /Title 203 0 R /A 201 0 R /Parent 923 0 R /Prev 187 0 R /Next 220 0 R /First 205 0 R /Last 217 0 R /Count -5 >> endobj 199 0 obj << /Title 200 0 R /A 198 0 R /Parent 187 0 R /Prev 196 0 R >> endobj 196 0 obj << /Title 197 0 R /A 195 0 R /Parent 187 0 R /Prev 193 0 R /Next 199 0 R >> endobj 193 0 obj << /Title 194 0 R /A 192 0 R /Parent 187 0 R /Prev 190 0 R /Next 196 0 R >> endobj 190 0 obj << /Title 191 0 R /A 189 0 R /Parent 187 0 R /Next 193 0 R >> endobj 187 0 obj << /Title 188 0 R /A 186 0 R /Parent 923 0 R /Prev 169 0 R /Next 202 0 R /First 190 0 R /Last 199 0 R /Count -4 >> endobj 184 0 obj << /Title 185 0 R /A 183 0 R /Parent 169 0 R /Prev 181 0 R >> endobj 181 0 obj << /Title 182 0 R /A 180 0 R /Parent 169 0 R /Prev 178 0 R /Next 184 0 R >> endobj 178 0 obj << /Title 179 0 R /A 177 0 R /Parent 169 0 R /Prev 175 0 R /Next 181 0 R >> endobj 175 0 obj << /Title 176 0 R /A 174 0 R /Parent 169 0 R /Prev 172 0 R /Next 178 0 R >> endobj 172 0 obj << /Title 173 0 R /A 171 0 R /Parent 169 0 R /Next 175 0 R >> endobj 169 0 obj << /Title 170 0 R /A 168 0 R /Parent 923 0 R /Next 187 0 R /First 172 0 R /Last 184 0 R /Count -5 >> endobj 924 0 obj << /Names [(-4@) 887 0 R (10@) 49 0 R (11@) 116 0 R (12@) 117 0 R (13@) 118 0 R (14@) 119 0 R (15@) 50 0 R (16@) 120 0 R (17@) 521 0 R (18@) 51 0 R (19@) 121 0 R (1@) 46 0 R (20@) 52 0 R (21@) 122 0 R (22@) 123 0 R (23@) 553 0 R (24@) 53 0 R (25@) 161 0 R (26@) 54 0 R (27@) 162 0 R (28@) 163 0 R (29@) 55 0 R (2@) 415 0 R (30@) 164 0 R (31@) 165 0 R (32@) 602 0 R (33@) 56 0 R (34@) 612 0 R (35@) 57 0 R (36@) 166 0 R (37@) 58 0 R (38@) 59 0 R (39@) 643 0 R (3@) 425 0 R (40@) 60 0 R (41@) 167 0 R (42@) 61 0 R (43@) 816 0 R (44@) 62 0 R (4@) 113 0 R (5@) 442 0 R (6@) 47 0 R (7@) 48 0 R (8@) 114 0 R (9@) 115 0 R (Arguments@) 483 0 R (Arithmetic@) 607 0 R (Bugs@) 433 0 R (Builtin@) 505 0 R (Changecom@) 459 0 R (Changequote@) 458 0 R (Changeword@) 426 0 R (Cleardiv@) 579 0 R (Comments@) 455 0 R (Compatibility@) 404 0 R (Concept index@) 672 0 R (Conditionals@) 510 0 R (Debug Levels@) 417 0 R (Debug Output@) 418 0 R (Debugging@) 526 0 R (Define@) 481 0 R (Definitions@) 480 0 R (Defn@) 496 0 R (Diversions@) 567 0 R (Divert@) 568 0 R (Divnum@) 575 0 R (Dnl@) 485 0 R (Dumpdef@) 527 0 R (Errprint@) 629 0 R (Esyscmd@) 619 0 R (Eval@) 608 0 R (Extensions@) 647 0 R (File Inclusion@) 557 0 R (Format@) 597 0 R (Frozen files@) 438 0 R (History@) 399 0 R (Ifdef@) 511 0 R (Ifelse@) 512 0 R (Include@) 558 0 R (Incompatibilities@) 664 0 R (Incr@) 522 0 R (Index@) 585 0 R (Indir@) 504 0 R (Inhibiting Invocation@) 464 0 R (Input Control@) 537 0 R (Intro@) 397 0 R (Invocation@) 463 0 R (Invoking m4@) 400 0 R (Len@) 584 0 R (Loops@) 516 0 R (M4exit@) 630 0 R (M4wrap@) 549 0 R (Macro Arguments@) 470 0 R (Macro expansion@) 476 0 R (Macro index@) 820 0 R (Macros@) 457 0 R (Maketemp@) 624 0 R (Manual@) 434 0 R (Miscellaneous@) 628 0 R (Names@) 447 0 R (Other Incompat@) 668 0 R (Other tokens@) 454 0 R (Patsubst@) 593 0 R (Preliminaries@) 396 0 R (Pseudo Arguments@) 489 0 R (Pushdef@) 500 0 R (Quoted strings@) 452 0 R (Quoting Arguments@) 471 0 R (Regexp@) 586 0 R (Search Path@) 419 0 R (Substr@) 591 0 R (Syntax@) 446 0 R (Syscmd@) 617 0 R (Sysval@) 620 0 R (Text handling@) 583 0 R (Trace@) 491 0 R (Translit@) 592 0 R (UNIX commands@) 616 0 R (Undefine@) 495 0 R (Undivert@) 569 0 R] /Limits [(-4@) (Undivert@)] >> endobj 925 0 obj << /Kids [924 0 R] >> endobj 926 0 obj << /Dests 925 0 R >> endobj 927 0 obj << /Type /Catalog /Pages 922 0 R /Outlines 923 0 R /Names 926 0 R /PageMode /UseOutlines >> endobj 928 0 obj << /Producer (pdfTeX-0.14h) /Creator (TeX) /CreationDate (D:20011121091400) >> endobj 0 929 0000000000 65535 f  0000000559 00000 n  0000000447 00000 n  0000000009 00000 n  0000290013 00000 n  0000278560 00000 n  0000289855 00000 n  0000277111 00000 n  0000260761 00000 n  0000276954 00000 n  0000291099 00000 n  0000001643 00000 n  0000001528 00000 n  0000000638 00000 n  0000260303 00000 n  0000258542 00000 n  0000260144 00000 n  0000005198 00000 n  0000002699 00000 n  0000001724 00000 n  0000257503 00000 n  0000247626 00000 n  0000257344 00000 n  0000247309 00000 n  0000245487 00000 n  0000247148 00000 n  0000002945 00000 n  0000003077 00000 n  0000003209 00000 n  0000003340 00000 n  0000003473 00000 n  0000003606 00000 n  0000003739 00000 n  0000003872 00000 n  0000004005 00000 n  0000004138 00000 n  0000004270 00000 n  0000004401 00000 n  0000004534 00000 n  0000004667 00000 n  0000245045 00000 n  0000242919 00000 n  0000244885 00000 n  0000004799 00000 n  0000004932 00000 n  0000005065 00000 n  0000030586 00000 n  0000047813 00000 n  0000051915 00000 n  0000059831 00000 n  0000071748 00000 n  0000079234 00000 n  0000086110 00000 n  0000096658 00000 n  0000101330 00000 n  0000108287 00000 n  0000117850 00000 n  0000123388 00000 n  0000128000 00000 n  0000132652 00000 n  0000141233 00000 n  0000158455 00000 n  0000175889 00000 n  0000013055 00000 n  0000007185 00000 n  0000005304 00000 n  0000007612 00000 n  0000241404 00000 n  0000225294 00000 n  0000241244 00000 n  0000224512 00000 n  0000218198 00000 n  0000224352 00000 n  0000007744 00000 n  0000007876 00000 n  0000008008 00000 n  0000008140 00000 n  0000008272 00000 n  0000008404 00000 n  0000008536 00000 n  0000008668 00000 n  0000008800 00000 n  0000008932 00000 n  0000009064 00000 n  0000009196 00000 n  0000009328 00000 n  0000009460 00000 n  0000009592 00000 n  0000009724 00000 n  0000009856 00000 n  0000009989 00000 n  0000010122 00000 n  0000010255 00000 n  0000010388 00000 n  0000010521 00000 n  0000010654 00000 n  0000010787 00000 n  0000010920 00000 n  0000011053 00000 n  0000011186 00000 n  0000011319 00000 n  0000011452 00000 n  0000011586 00000 n  0000011720 00000 n  0000011854 00000 n  0000011987 00000 n  0000012121 00000 n  0000012254 00000 n  0000012388 00000 n  0000012521 00000 n  0000012655 00000 n  0000012789 00000 n  0000012923 00000 n  0000043051 00000 n  0000055329 00000 n  0000056596 00000 n  0000062123 00000 n  0000064707 00000 n  0000066789 00000 n  0000068530 00000 n  0000074344 00000 n  0000083182 00000 n  0000089084 00000 n  0000092845 00000 n  0000019871 00000 n  0000014921 00000 n  0000013171 00000 n  0000015323 00000 n  0000015456 00000 n  0000015590 00000 n  0000015724 00000 n  0000015858 00000 n  0000015992 00000 n  0000016126 00000 n  0000016260 00000 n  0000016394 00000 n  0000016527 00000 n  0000016660 00000 n  0000016794 00000 n  0000016928 00000 n  0000017062 00000 n  0000017196 00000 n  0000017330 00000 n  0000017464 00000 n  0000017597 00000 n  0000017731 00000 n  0000017865 00000 n  0000017999 00000 n  0000018133 00000 n  0000018266 00000 n  0000018400 00000 n  0000018534 00000 n  0000018668 00000 n  0000018802 00000 n  0000018936 00000 n  0000019070 00000 n  0000019203 00000 n  0000019336 00000 n  0000019470 00000 n  0000019604 00000 n  0000019737 00000 n  0000098445 00000 n  0000103599 00000 n  0000105378 00000 n  0000111584 00000 n  0000114339 00000 n  0000125123 00000 n  0000144019 00000 n  0000020000 00000 n  0000299456 00000 n  0000020040 00000 n  0000020090 00000 n  0000299377 00000 n  0000020130 00000 n  0000020168 00000 n  0000299284 00000 n  0000020208 00000 n  0000020249 00000 n  0000299191 00000 n  0000020289 00000 n  0000020320 00000 n  0000299098 00000 n  0000020360 00000 n  0000020397 00000 n  0000299019 00000 n  0000020437 00000 n  0000020474 00000 n  0000298887 00000 n  0000020514 00000 n  0000020567 00000 n  0000298808 00000 n  0000020607 00000 n  0000020632 00000 n  0000298715 00000 n  0000020672 00000 n  0000020706 00000 n  0000298622 00000 n  0000020746 00000 n  0000020778 00000 n  0000298543 00000 n  0000020818 00000 n  0000020846 00000 n  0000298411 00000 n  0000020886 00000 n  0000020926 00000 n  0000298332 00000 n  0000020966 00000 n  0000021002 00000 n  0000298239 00000 n  0000021042 00000 n  0000021089 00000 n  0000298146 00000 n  0000021129 00000 n  0000021164 00000 n  0000298053 00000 n  0000021204 00000 n  0000021247 00000 n  0000297974 00000 n  0000021287 00000 n  0000021322 00000 n  0000297842 00000 n  0000021363 00000 n  0000021407 00000 n  0000297763 00000 n  0000021448 00000 n  0000021484 00000 n  0000297670 00000 n  0000021525 00000 n  0000021564 00000 n  0000297577 00000 n  0000021605 00000 n  0000021652 00000 n  0000297484 00000 n  0000021693 00000 n  0000021729 00000 n  0000297391 00000 n  0000021770 00000 n  0000021805 00000 n  0000297298 00000 n  0000021846 00000 n  0000021895 00000 n  0000297205 00000 n  0000021936 00000 n  0000021979 00000 n  0000297126 00000 n  0000022020 00000 n  0000022065 00000 n  0000296994 00000 n  0000022106 00000 n  0000022159 00000 n  0000296915 00000 n  0000022200 00000 n  0000022245 00000 n  0000296822 00000 n  0000022286 00000 n  0000022323 00000 n  0000296743 00000 n  0000022364 00000 n  0000022403 00000 n  0000296611 00000 n  0000022444 00000 n  0000022493 00000 n  0000296532 00000 n  0000022534 00000 n  0000022582 00000 n  0000296439 00000 n  0000022623 00000 n  0000022662 00000 n  0000296346 00000 n  0000022703 00000 n  0000022751 00000 n  0000296267 00000 n  0000022792 00000 n  0000022835 00000 n  0000296135 00000 n  0000022876 00000 n  0000022909 00000 n  0000296056 00000 n  0000022950 00000 n  0000022998 00000 n  0000295963 00000 n  0000023039 00000 n  0000023088 00000 n  0000295870 00000 n  0000023129 00000 n  0000023176 00000 n  0000295777 00000 n  0000023217 00000 n  0000023276 00000 n  0000295698 00000 n  0000023317 00000 n  0000023349 00000 n  0000295566 00000 n  0000023390 00000 n  0000023424 00000 n  0000295487 00000 n  0000023465 00000 n  0000023506 00000 n  0000295408 00000 n  0000023547 00000 n  0000023594 00000 n  0000295276 00000 n  0000023635 00000 n  0000023687 00000 n  0000295197 00000 n  0000023728 00000 n  0000023764 00000 n  0000295104 00000 n  0000023805 00000 n  0000023843 00000 n  0000295011 00000 n  0000023884 00000 n  0000023921 00000 n  0000294932 00000 n  0000023962 00000 n  0000024006 00000 n  0000294800 00000 n  0000024047 00000 n  0000024091 00000 n  0000294721 00000 n  0000024132 00000 n  0000024181 00000 n  0000294628 00000 n  0000024222 00000 n  0000024266 00000 n  0000294535 00000 n  0000024307 00000 n  0000024360 00000 n  0000294442 00000 n  0000024401 00000 n  0000024442 00000 n  0000294349 00000 n  0000024483 00000 n  0000024525 00000 n  0000294256 00000 n  0000024566 00000 n  0000024625 00000 n  0000294177 00000 n  0000024666 00000 n  0000024702 00000 n  0000294045 00000 n  0000024743 00000 n  0000024790 00000 n  0000293966 00000 n  0000024831 00000 n  0000024884 00000 n  0000293887 00000 n  0000024925 00000 n  0000024975 00000 n  0000293755 00000 n  0000025016 00000 n  0000025057 00000 n  0000293676 00000 n  0000025098 00000 n  0000025143 00000 n  0000293583 00000 n  0000025184 00000 n  0000025234 00000 n  0000293490 00000 n  0000025275 00000 n  0000025305 00000 n  0000293411 00000 n  0000025346 00000 n  0000025398 00000 n  0000293279 00000 n  0000025439 00000 n  0000025487 00000 n  0000293200 00000 n  0000025528 00000 n  0000025571 00000 n  0000293121 00000 n  0000025612 00000 n  0000025647 00000 n  0000293028 00000 n  0000025688 00000 n  0000025737 00000 n  0000292896 00000 n  0000025778 00000 n  0000025837 00000 n  0000292817 00000 n  0000025878 00000 n  0000025918 00000 n  0000292724 00000 n  0000025959 00000 n  0000026018 00000 n  0000292645 00000 n  0000026059 00000 n  0000026102 00000 n  0000292552 00000 n  0000026143 00000 n  0000026176 00000 n  0000292473 00000 n  0000026217 00000 n  0000030645 00000 n  0000030059 00000 n  0000026248 00000 n  0000030342 00000 n  0000030403 00000 n  0000030197 00000 n  0000030464 00000 n  0000030525 00000 n  0000217256 00000 n  0000207906 00000 n  0000217094 00000 n  0000141050 00000 n  0000035093 00000 n  0000033843 00000 n  0000030775 00000 n  0000034030 00000 n  0000034175 00000 n  0000034319 00000 n  0000034462 00000 n  0000034605 00000 n  0000034748 00000 n  0000034891 00000 n  0000035033 00000 n  0000291210 00000 n  0000083060 00000 n  0000083121 00000 n  0000098384 00000 n  0000038921 00000 n  0000038427 00000 n  0000035200 00000 n  0000038574 00000 n  0000038716 00000 n  0000038861 00000 n  0000089023 00000 n  0000043111 00000 n  0000042344 00000 n  0000039028 00000 n  0000042499 00000 n  0000042642 00000 n  0000042785 00000 n  0000042929 00000 n  0000042990 00000 n  0000207531 00000 n  0000205444 00000 n  0000207368 00000 n  0000132591 00000 n  0000044601 00000 n  0000044423 00000 n  0000043242 00000 n  0000044542 00000 n  0000047871 00000 n  0000046932 00000 n  0000044696 00000 n  0000047508 00000 n  0000047569 00000 n  0000204900 00000 n  0000202620 00000 n  0000204737 00000 n  0000047087 00000 n  0000047630 00000 n  0000047225 00000 n  0000047691 00000 n  0000047752 00000 n  0000047367 00000 n  0000051732 00000 n  0000086049 00000 n  0000088962 00000 n  0000051974 00000 n  0000051305 00000 n  0000048002 00000 n  0000051793 00000 n  0000051854 00000 n  0000051452 00000 n  0000051592 00000 n  0000055389 00000 n  0000055088 00000 n  0000052092 00000 n  0000055207 00000 n  0000055268 00000 n  0000291327 00000 n  0000056655 00000 n  0000056416 00000 n  0000055495 00000 n  0000056535 00000 n  0000059890 00000 n  0000059220 00000 n  0000056761 00000 n  0000059649 00000 n  0000059709 00000 n  0000059367 00000 n  0000059770 00000 n  0000059501 00000 n  0000085988 00000 n  0000062182 00000 n  0000061786 00000 n  0000060008 00000 n  0000062062 00000 n  0000061925 00000 n  0000079173 00000 n  0000064767 00000 n  0000064467 00000 n  0000062299 00000 n  0000064586 00000 n  0000064647 00000 n  0000066849 00000 n  0000066609 00000 n  0000064897 00000 n  0000066728 00000 n  0000068589 00000 n  0000068290 00000 n  0000066979 00000 n  0000068409 00000 n  0000068469 00000 n  0000291444 00000 n  0000071807 00000 n  0000071447 00000 n  0000068719 00000 n  0000071566 00000 n  0000071626 00000 n  0000071687 00000 n  0000074403 00000 n  0000074164 00000 n  0000071925 00000 n  0000074283 00000 n  0000076409 00000 n  0000076076 00000 n  0000074508 00000 n  0000076215 00000 n  0000076350 00000 n  0000117728 00000 n  0000079293 00000 n  0000078771 00000 n  0000076503 00000 n  0000079053 00000 n  0000079114 00000 n  0000078910 00000 n  0000083241 00000 n  0000082628 00000 n  0000079411 00000 n  0000082775 00000 n  0000082918 00000 n  0000086168 00000 n  0000085649 00000 n  0000083347 00000 n  0000085927 00000 n  0000085788 00000 n  0000291561 00000 n  0000089144 00000 n  0000088843 00000 n  0000086286 00000 n  0000092904 00000 n  0000092665 00000 n  0000089274 00000 n  0000202251 00000 n  0000200632 00000 n  0000202089 00000 n  0000092784 00000 n  0000094093 00000 n  0000093915 00000 n  0000093047 00000 n  0000094034 00000 n  0000096717 00000 n  0000096417 00000 n  0000094187 00000 n  0000096536 00000 n  0000096597 00000 n  0000098504 00000 n  0000097951 00000 n  0000096848 00000 n  0000098098 00000 n  0000098242 00000 n  0000101389 00000 n  0000101029 00000 n  0000098597 00000 n  0000101148 00000 n  0000101209 00000 n  0000101270 00000 n  0000291678 00000 n  0000103658 00000 n  0000103260 00000 n  0000101507 00000 n  0000103399 00000 n  0000103538 00000 n  0000105437 00000 n  0000105198 00000 n  0000103775 00000 n  0000105317 00000 n  0000108346 00000 n  0000107749 00000 n  0000105542 00000 n  0000108043 00000 n  0000108104 00000 n  0000108165 00000 n  0000108226 00000 n  0000107888 00000 n  0000111644 00000 n  0000111282 00000 n  0000108464 00000 n  0000111401 00000 n  0000111462 00000 n  0000111523 00000 n  0000114399 00000 n  0000114002 00000 n  0000111762 00000 n  0000114278 00000 n  0000114141 00000 n  0000115510 00000 n  0000115332 00000 n  0000114517 00000 n  0000115451 00000 n  0000291795 00000 n  0000117909 00000 n  0000117548 00000 n  0000115604 00000 n  0000117667 00000 n  0000117789 00000 n  0000120544 00000 n  0000120366 00000 n  0000118027 00000 n  0000120485 00000 n  0000123446 00000 n  0000122866 00000 n  0000120664 00000 n  0000123144 00000 n  0000123205 00000 n  0000123005 00000 n  0000123266 00000 n  0000123327 00000 n  0000125182 00000 n  0000124943 00000 n  0000123576 00000 n  0000125062 00000 n  0000128058 00000 n  0000127540 00000 n  0000125300 00000 n  0000127817 00000 n  0000127878 00000 n  0000127939 00000 n  0000127679 00000 n  0000132711 00000 n  0000132310 00000 n  0000128213 00000 n  0000132449 00000 n  0000200306 00000 n  0000198246 00000 n  0000200147 00000 n  0000291912 00000 n  0000134686 00000 n  0000134508 00000 n  0000132867 00000 n  0000134627 00000 n  0000141291 00000 n  0000138559 00000 n  0000134806 00000 n  0000141111 00000 n  0000138818 00000 n  0000138957 00000 n  0000139100 00000 n  0000139239 00000 n  0000139375 00000 n  0000139512 00000 n  0000139652 00000 n  0000139791 00000 n  0000139928 00000 n  0000140067 00000 n  0000140205 00000 n  0000140339 00000 n  0000140478 00000 n  0000140622 00000 n  0000140765 00000 n  0000140908 00000 n  0000141172 00000 n  0000144078 00000 n  0000143839 00000 n  0000141421 00000 n  0000143958 00000 n  0000158514 00000 n  0000146790 00000 n  0000144196 00000 n  0000158394 00000 n  0000197259 00000 n  0000188141 00000 n  0000197099 00000 n  0000187826 00000 n  0000185998 00000 n  0000187666 00000 n  0000147569 00000 n  0000147702 00000 n  0000147835 00000 n  0000147969 00000 n  0000148102 00000 n  0000148236 00000 n  0000148370 00000 n  0000148502 00000 n  0000148636 00000 n  0000148770 00000 n  0000148904 00000 n  0000149038 00000 n  0000149171 00000 n  0000149304 00000 n  0000149437 00000 n  0000149571 00000 n  0000149705 00000 n  0000149838 00000 n  0000149971 00000 n  0000150105 00000 n  0000150239 00000 n  0000150373 00000 n  0000150507 00000 n  0000150641 00000 n  0000150773 00000 n  0000150907 00000 n  0000151041 00000 n  0000151175 00000 n  0000151308 00000 n  0000151440 00000 n  0000151574 00000 n  0000151708 00000 n  0000151842 00000 n  0000151976 00000 n  0000152110 00000 n  0000152244 00000 n  0000152376 00000 n  0000152508 00000 n  0000152642 00000 n  0000152776 00000 n  0000152910 00000 n  0000185378 00000 n  0000179765 00000 n  0000185217 00000 n  0000153044 00000 n  0000153178 00000 n  0000153311 00000 n  0000153445 00000 n  0000153579 00000 n  0000153713 00000 n  0000153847 00000 n  0000153981 00000 n  0000154115 00000 n  0000154248 00000 n  0000154382 00000 n  0000154516 00000 n  0000154650 00000 n  0000154784 00000 n  0000154918 00000 n  0000155051 00000 n  0000155184 00000 n  0000155317 00000 n  0000155451 00000 n  0000155585 00000 n  0000155719 00000 n  0000155853 00000 n  0000155987 00000 n  0000156121 00000 n  0000156255 00000 n  0000156388 00000 n  0000156522 00000 n  0000156656 00000 n  0000156790 00000 n  0000156924 00000 n  0000157058 00000 n  0000157192 00000 n  0000157326 00000 n  0000157459 00000 n  0000157593 00000 n  0000157727 00000 n  0000157861 00000 n  0000157995 00000 n  0000158129 00000 n  0000158262 00000 n  0000167809 00000 n  0000160543 00000 n  0000158633 00000 n  0000161074 00000 n  0000161207 00000 n  0000161341 00000 n  0000161474 00000 n  0000161607 00000 n  0000161740 00000 n  0000161874 00000 n  0000162007 00000 n  0000162140 00000 n  0000162274 00000 n  0000162408 00000 n  0000162540 00000 n  0000162673 00000 n  0000162807 00000 n  0000162941 00000 n  0000163073 00000 n  0000163207 00000 n  0000163341 00000 n  0000163474 00000 n  0000163607 00000 n  0000163741 00000 n  0000163875 00000 n  0000164009 00000 n  0000164143 00000 n  0000164277 00000 n  0000164411 00000 n  0000164543 00000 n  0000164676 00000 n  0000164810 00000 n  0000164941 00000 n  0000165075 00000 n  0000165209 00000 n  0000165343 00000 n  0000165477 00000 n  0000165611 00000 n  0000165745 00000 n  0000165879 00000 n  0000166011 00000 n  0000166145 00000 n  0000166279 00000 n  0000166413 00000 n  0000166547 00000 n  0000166681 00000 n  0000166815 00000 n  0000166947 00000 n  0000167081 00000 n  0000167215 00000 n  0000167349 00000 n  0000167483 00000 n  0000167617 00000 n  0000167750 00000 n  0000175947 00000 n  0000169317 00000 n  0000167915 00000 n  0000175828 00000 n  0000169808 00000 n  0000169942 00000 n  0000170075 00000 n  0000170209 00000 n  0000170343 00000 n  0000170477 00000 n  0000170609 00000 n  0000170743 00000 n  0000170876 00000 n  0000171010 00000 n  0000171144 00000 n  0000171277 00000 n  0000171410 00000 n  0000171544 00000 n  0000171678 00000 n  0000171812 00000 n  0000171945 00000 n  0000172079 00000 n  0000172212 00000 n  0000172346 00000 n  0000172479 00000 n  0000172613 00000 n  0000172747 00000 n  0000172881 00000 n  0000173014 00000 n  0000173148 00000 n  0000173282 00000 n  0000173416 00000 n  0000173550 00000 n  0000173684 00000 n  0000173818 00000 n  0000173952 00000 n  0000174086 00000 n  0000174220 00000 n  0000174354 00000 n  0000174488 00000 n  0000174622 00000 n  0000174756 00000 n  0000174890 00000 n  0000175024 00000 n  0000175158 00000 n  0000175292 00000 n  0000175426 00000 n  0000175560 00000 n  0000175694 00000 n  0000292029 00000 n  0000179658 00000 n  0000177062 00000 n  0000176078 00000 n  0000177329 00000 n  0000177462 00000 n  0000177595 00000 n  0000177727 00000 n  0000177861 00000 n  0000177995 00000 n  0000178129 00000 n  0000178263 00000 n  0000178397 00000 n  0000178531 00000 n  0000178664 00000 n  0000178796 00000 n  0000178930 00000 n  0000179064 00000 n  0000179197 00000 n  0000179331 00000 n  0000179465 00000 n  0000179599 00000 n  0000185834 00000 n  0000185624 00000 n  0000188054 00000 n  0000188030 00000 n  0000197902 00000 n  0000197574 00000 n  0000200534 00000 n  0000200504 00000 n  0000202507 00000 n  0000202479 00000 n  0000205293 00000 n  0000205141 00000 n  0000207786 00000 n  0000207732 00000 n  0000217858 00000 n  0000217540 00000 n  0000225043 00000 n  0000224759 00000 n  0000242390 00000 n  0000242002 00000 n  0000245384 00000 n  0000245244 00000 n  0000247539 00000 n  0000247515 00000 n  0000258160 00000 n  0000257824 00000 n  0000260619 00000 n  0000260533 00000 n  0000278033 00000 n  0000277621 00000 n  0000290738 00000 n  0000290372 00000 n  0000292114 00000 n  0000292231 00000 n  0000292325 00000 n  0000292395 00000 n  0000299574 00000 n  0000301811 00000 n  0000301850 00000 n  0000301888 00000 n  0000301997 00000 n  trailer /Size 929 /Root 927 0 R /Info 928 0 R startxref 302093 %%EOF %%EOF
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\Docs\ProfileProviderInstallation.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Microsoft TitleNormal.dot Microsoft Office Wordurn:schemas-microsoft-com:office:smarttags State urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttagsbjbj\.\. Prerequisite: Geo class library needs to be set up on the same server before you can install GeoProfileProvider. Make sure the following DLL is already GACed. These are anon related dlls: Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider.dll Microsoft.MSCOM.AnonymousProfileService.CookieHelper.dll Microsoft.MSCOM.CustomerServices.MsiSid.dll Modify Machine.config file.  Find  <connectionStrings>, add the following: <add name="AnonProfileProvider" connectionString="http://zackdevx64.dns.microsoft.com/AnonymousProfileService/AnonymousProfile.asmx"/> **You need to change the URL according to your environment. MSI installation package should install profile privder related dlls into server s gac, if not, you can get dlls from \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Drop 11-10-2006\GeoProfileProvider\ Sample profile provider section in web.config for adopter: <anonymousIdentification enabled="true"/> <profile defaultProvider="GeoProfileProvider"> <providers> <add  name="GeoProfileProvider"              type="Microsoft.MSCOM.GeoProfile.GeoProfileProvider"/> </providers> <properties>         <add name="MapPointID" defaultValue ="-51a"  type="int" allowAnonymous="true"/>         <add name="CountryRegionName" type="string" allowAnonymous="true"/>         <add name="CountryRegionCode" defaultValue="US" type="string" allowAnonymous="true"/>         <add name="StateProvinceName" defaultValue="Washington" type="string" allowAnonymous="true"/>         <add name="StateProvinceCode" defaultValue="WA" type="string" allowAnonymous="true"/>         <add name="IsEU" defaultValue="false" type="bool" allowAnonymous="true"/>         <add name="CityName" defaultValue="Redmond" type="string" allowAnonymous="true"/>         <add name="ZipCodes" defaultValue="98052+98053" type ="string" allowAnonymous ="true"/>         <add name="Latitude" defaultValue="98.2" type="double" allowAnonymous="true"/>         <add name="Longitude" defaultValue="12.4" type="double" allowAnonymous="true"/>         <add name="TimeZoneName" defaultValue="PST" type="string" allowAnonymous="true"/>         <add name="StandardTimeZoneOffset" defaultValue="10" type="double" allowAnonymous="true"/>         <add name="DSTTimeZoneOffset" defaultValue="11" type="double" allowAnonymous="true"/>         <add name="DSTStartTime" defaultValue="4/28/2006 02:00:00" type="string" allowAnonymous="true"/>         <add name="DSTEndTime" defaultValue="10/28/2006 02:00:00" type="string" allowAnonymous="true"/>         <add name="IsInferred"  type="bool" allowAnonymous="true"/>         <add name="IsDefault"  type="bool" allowAnonymous="true"/> </properties> </profile> zbzJz bG/b/b
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\Docs\GeoSegmentationReleasePlan.doc ===
Microsoft Office Word 97-2003 Document MSWordDoc Word.Document.8Microsoft Corp. Project Name Title _PID_HLINKS ContentType DocumentProject Name Microsoft User Normal.dotm ajayka Microsoft Office Word[Content_Types].xml _rels/.rels theme/theme/themeManager.xml theme/theme/theme1.xml F{oc' FPA}H xME$& ~\QYo+ +ek<l )Q+hkk dB|ULvaD +@Ya)hgm theme/theme/_rels/themeManager.xml.rels K(M&$R(.1 [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="yes"?> <a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/> ecRR]0 Uxq@% Z>8vM$Z-$6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6bjbj(((( GeoSegmentation Release Plan  11/27/2006 Author/Primary Contact:hpan; fengj; Secondary Contact: Document Purpose: This document describes the process to release this service to the live microsoft.com environment and contains information on the various components that make up this product. This document addresses the service s build servers and production environment as well as the service s upstream and downstream dependencies. This document also contains the release-to-production timeline and the rollback contingency plan describing the steps to take in the event that a high-severity problem surfaces after the service s release to the live production environment. TABLE OF CONTENTS  TOC \o "1-2" \h \z   HYPERLINK \l "_Toc149985151"  TABLE OF CONTENTS  PAGEREF _Toc149985151 \h   HYPERLINK \l "_Toc149985152"  GENERAL PROJECT INFORMATION  PAGEREF _Toc149985152 \h   HYPERLINK \l "_Toc149985153"  REVISION HISTORY  PAGEREF _Toc149985153 \h   HYPERLINK \l "_Toc149985154"  RELATED DOCUMENT INFORMATION  PAGEREF _Toc149985154 \h   HYPERLINK \l "_Toc149985155"  PROJECT CONTACTS  PAGEREF _Toc149985155 \h   HYPERLINK \l "_Toc149985156"  DOWNTIME & INSTALL METRICS  PAGEREF _Toc149985156 \h   HYPERLINK \l "_Toc149985157"  INTRODUCTION  PAGEREF _Toc149985157 \h   HYPERLINK \l "_Toc149985158"  DEPENDENCIES  PAGEREF _Toc149985158 \h   HYPERLINK \l "_Toc149985159"  UPSTREAM  PAGEREF _Toc149985159 \h   HYPERLINK \l "_Toc149985160"  DOWNSTREAM  PAGEREF _Toc149985160 \h   HYPERLINK \l "_Toc149985161"  Release Criteria  PAGEREF _Toc149985161 \h   HYPERLINK \l "_Toc149985162"  Project Tasks and Deliverables  PAGEREF _Toc149985162 \h   HYPERLINK \l "_Toc149985163"  HOST Environment  PAGEREF _Toc149985163 \h   HYPERLINK \l "_Toc149985164"  SYSTEM PLATFORM  PAGEREF _Toc149985164 \h   HYPERLINK \l "_Toc149985165"  SERVICE COMPONENTS  PAGEREF _Toc149985165 \h   HYPERLINK \l "_Toc149985166"  INSTALLATION AND CONFIGURATION  PAGEREF _Toc149985166 \h   HYPERLINK \l "_Toc149985167"  TEST APPROVED  PAGEREF _Toc149985167 \h   HYPERLINK \l "_Toc149985168"  BACKUP  PAGEREF _Toc149985168 \h   HYPERLINK \l "_Toc149985169"  PREREQUISITES  PAGEREF _Toc149985169 \h   HYPERLINK \l "_Toc149985170"  RELEASE PROCESS  PAGEREF _Toc149985170 \h   HYPERLINK \l "_Toc149985171"  RELEASE STEPS  PAGEREF _Toc149985171 \h   HYPERLINK \l "_Toc149985172"  ISSUES  PAGEREF _Toc149985172 \h   HYPERLINK \l "_Toc149985173"  ROLLBACK PROCESS  PAGEREF _Toc149985173 \h   HYPERLINK \l "_Toc149985174"  ROLLBACK STEPS  PAGEREF _Toc149985174 \h   HYPERLINK \l "_Toc149985175"  ISSUES  PAGEREF _Toc149985175 \h   HYPERLINK \l "_Toc149985176"  FILE CLEANUP PLAN  PAGEREF _Toc149985176 \h   HYPERLINK \l "_Toc149985177"  APPENDIX A: APPENDIX TITLE  PAGEREF _Toc149985177 \h   HYPERLINK \l "_Toc149985178"  APPENDIX B: APPENDIX TITLE  PAGEREF _Toc149985178 \h  GENERAL PROJECT INFORMATION REVISION HISTORY Once this document has been released to   HYPERLINK "\\\\msspades\\golden\\"  \\msspades\golden\  , all revisions are noted below. Author Comments Hpan; jiongf 11/27/2006 First Draft ajayka 12/12/2006 Updated with details of data copy to Production Servers RELATED DOCUMENT INFORMATION Title Location PROJECT CONTACTS Functional Group Contact Names Product Management Primary: Secondary: Program Management (PM) Primary: Chris Worland Secondary: Development Primary: RobZ Secondary: Localization Primary: Secondary: Primary: venkatb Secondary: Usability Primary: Secondary: Web Operations Primary: Secondary: SQL Operations Primary: Secondary: Release Management Primary: brianmcf Secondary: DOWNTIME & INSTALL METRICS Version ID Scheduled Date of Install Actual Date of Install Communicated Downtime Actual Downtime Cause of Downtime Anticipated Time to Install Actual Time to Install Degree of Automation (Low, Med, Hi) INTRODUCTION  FORMTEXT  Provide a summary of the top issues concerning the service s release. This is not a list of general issues concerning the service, but rather it is a list of issues pertaining specifically to the service s release to the production environment. DEPENDENCIES UPSTREAM SQL 2005; .net framework 2.0; DOWNSTREAM Not yet defined Release Criteria Project Tasks and Deliverables GeoSystem database schema and data script GeoSystemETL database schema and data script ETL Sql job script MSI installation bits Scror card and reporting setup HOST Environment  SYSTEM PLATFORM SERVICE COMPONENTS  FORMTEXT  List out each component of the release, a description and the target physical path and server locations for deployment Component Description Beta Servers Pre-Production Servers Staging Server Production Servers GeoSystemETL and GeoSystem Database that provides staging area for transforming data AlexProbe Mappoint db GeoSystem Production db GeoLocationAPI.dll GeoLocation class library dll GeoProvider.dll Geolocation profile provider dll INSTALLATION AND CONFIGURATION Database installation Restore Alexprobe db backup to your designated database server from \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database\AlexProbe. The database name is AlexProbe Create and build GeoSystemETL database. This needs to be on the same server as the Alexprobe Db. Scripts at <\\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database\GeoSystemETL>  Run DB_GeoSystemETL to create database Run TBL_GeoSystemETL to create tables and keys Run DATA_GeoSystemETL to populate domain data Run SP_GeoSystemETL to create stored procedures for this db Create and build GeoSystem database. This needs to be on the same server as the Alexprobe db and GeoSystemETL db. Scripts at: \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database  Run DB_GeoSystem to create database Run Role.Sql to create DB_Executor role Run TBL_GeoSystem to create tables and keys Run DATA_GeoSystem to populate domain data Run SP_GeoSystem to create stored procedures and customer functions for this db Run Perm.Sql to grant execute permissions to  DB_Executor role Create and run GeoSystemETL job to populate the GeoSystem database as per following steps. Copy the contents of ..\GeoSystemETL\SSIS\ folder to a folder on SQL Server.  Run the ETL job from folder..\Databases\GeoSystemETL\Geo System ETL Job.sql  from the SQL Query window. This installs the ETL Job Edit the steps 2 & 8 in this job to reflect the correct folder location of   folder on the server. Please note that network share/UNC path don t work well. So, please mention the path in the job steps 2 & 8 (ex: C:\SSIS In the SSIS package AkamaiDataCopy.dtsx, replace the server name  b10devmptsqlh01  with the correct server name where Akamai data is located (tblGeoLocation). Please edit the package in notepad or any other editor and carefully make this change.  Copy the content of  \Publisher  folder to a drive on Sql Server.  In the SQL Job, step 6, please specify the correct path of the GeoSystemPublisher.exe. In the \Publisher\GeoSystemPublisher.exe.config, change the settings for DBConnectionString and DBDataPath as appropriate for your environment. In SQL Job, Step 7, please specify the correct location for the SQL Lite backup <GeoSystemBackupPath>. This backup is for users to get the versions for their info. GeoSystem DB has a data role called DB_Executor. This has execute permission on all the SPs and User functions on GeoSystem. Assign appropriate user(s) into this role. Please add the names and Production servers to the table GeoSystemETL.dbo.GeoProductiuonServers. The linked servers for these also need to be created on the ETL server. Please verify that the GeoBackupFilePath, GeoBackupFileUNCPath are set to correct folders and the folder structure available on the ETL server. These config values are in the GeoSystemETL.dbo.GeoConfigure table. Please note that these configuration need the filename in the path (not just folder name) SQL Lite Speed needs to be available on the ETLserver and the Production servers for the Step 8 of the ETL job to succeed. Adopter s machine installation (for example, www server, msdn server) In the latest .NET version of machine.config, create the following keys in appsettings (make sure appsettings is not commented out).  Find  <connectionStrings>, add the following: <add key="GeoConfigFilePath" value="c:\windows\syswow64\inetsrv\custom\AppConfig\Geo\Geo.MSCOM.Config " /> <add key="AnonProfileProvider" value="  HYPERLINK "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx" \o "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx"  http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx Note: The value in GeoConfigFilePath could be changed according to your environment. You just need to ensure this path does exist Note: You need to add these entries to both 32bit and 64bit latest machine.config Suggestion: it is better not to use either System32 or Syswow64. You can create another folder to avoid this 32bit and 64bit issue. Make sure the following DLL is already GACed. These are anon related dlls: Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider.dll Microsoft.MSCOM.AnonymousProfileService.CookieHelper.dll Microsoft.MSCOM.CustomerServices.MsiSid.dll Run MSCOMGeoSystemSetup.msi under MSI folder to setup GeoSystem. You need to input following information: Data File path. You will use pubwiz or other approaches to copy the GEO data file to this path SQL Server name which has GeoSystem database GeoSystem database name (by default it is GeoSystem) Port number for TCP socket communication. This port number should not conflict with other applications. Program File installation folder. By default it is C:\Program Files\MS\MSCOMGeoSystem\ Note: You can also execute this silently by running the following command (use correct parameters): msiexec /I MSCOMGeoSystemSetup.msi /qn PARAPORT=4321 PARADATA="c:\data1" PARADBSERVERNAME=mydbserver PARADBNAME=Geomydb Make sure your data file is copied to the Geo data folder you specified in step b), make sure  Network Service  can have all access rights to this folder If it is the first time install of this on the sever, please create event source/event log on the server. Please use the application \GeoEventing\GeoEventing.exe. Please change the event log name/event source name in the config file GeoEventing.exe.config. Just running the .exe creates the eventlog/source for the first time install on the server. The eventlog name/source should match with the config values for the Geo Segmentation service (web.config or the Geo.MSCOM.config). These should be the same on all the Geo Segmentation servers. Start MSCOMGeoInfoService windows service. Score Card Reporting Configuration We need to have these things: SQL Server: Host the ETL relational database Located \ScoreCard\Relationtional in the drop folder Open \Table\ GeoSystemBI_Database.sql. Modify the filegroup, filesize, etc. Then execute it. This will create the database.  Open \Table\ GeoSystemBI_tables.sql. Modify the filegroup, etc. Then execute it. This will create the tables.  Copy \Assembly\MD5d.dll to some place in your server Open \Assembly\CreateMscid.sql, modify the path of MD5d.dll and then execute it. This creates the function MSCID. Execute \Data\tabledata.sql. This populates the necessary data Open \Linked Server\CreateLinkedServer.sql, modify the SQLServerName and User and password. Then execute it to create the linked server.  Execute \Stored Procedures\spEventLog.sql, and then execute the other 3 SPs in the same folder Open \jobs\GeoSystemBI - ETL.sql. Find  Redmond\fengj , modify the user name of the job (using the user who has the right to access linked server created in the previous step), then execute it.  Note: This job is based on the assumption that the OLAP database will be on the same server with this SQL database. If they are on different servers, make sure you move the job step 4 onto the OLAP server and create a separate job for it. Here I suggest touse the same server for SQL and OLAP databases. Analysis Server: Host the OLAP database, which contains dimensions, cubes, etc. Make sure the Analysis Server is installed. It is not necessarily to be in the same server as the relational database. But if they are not in the same server, make sure the service account of  MSSQLSERVEROLAPSERVICE  is using a domain account which has enough rights to access the GeoSystemBI relational database. As we probably do not have sensitive data, the account could be admin to the GeoSystemBI.  Note: If the OLAP database is on a different server than GeoSystemBI, you need to ensure to create a job. The job script should be same as the step 4 in  GeoSegmentationBI   in section 2.2. Open \ScoreCard\OLAPDatabase\GeoSystemStatsOlap.xmla (open it against the Analysis database, using xmla, not MDX or DMX), modify the data source SQL Server name (search for B10devmptsqlh02, replace it with your SQL Server Name). You can use  localhost  if GeoSystemBI is on the same box. Execute it. This will create the OLAP database. Process the whole database. Microsoft Performance Point Server 2007 (CTP1), to host the score card and reports. It is installable from  HYPERLINK "file:///\\\\bizfs\\Public\\Builds\\Concerto\\CTP1_Release\\drop\\3.0.2500.00\\Release\\x86\\en-US\\media" \\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media It will configure your machine, as well as IIS and SQL server (it needs to install something there)  ASP.net environment. Reports will be deployed to ASP.net. Microsoft Performance Point Builder. It is the client tool in which you can develop/deploy the score card.  Install Performance Score Card Builder. On the server machine, it is already installed. If you want to install on another machine which connects to the MPPS server, you can do it. (Either consult fengj or read at its documentation   you probably need to type  HYPERLINK http://your MPPS server:4000  then it can be installed automatically).  Make sure your Builder is link to your MPPS server (click Office orb (top left button) -> Options, change the server name in the URL if necessary Open \ScoreCard\ScoreCard\GeoScoreCard.bswx in notepad, replace B10devmptsqlh02 to your OLAP Server name. Then save it and close it. On the machine which has Score Card Builder, open \ScoreCard\ScoreCard\GeoScoreCard.bswx Note: this is the workspace metadata file.  Publish this workspace to your MPPS server.  (click Home menu, click  publish all  in toolbar) Now, click Export menu, click ASP.net button in toolbar, publish score cards one by one to your IIS server. Enable all users to view the published scorecard - Click Home menu -> Server Administrator in the toolbar -> Connect to first connect to the MPPS server. Then select the Permissions tab > Add button and add the following group: User or group: "NT Authority\Authenticated Users" Role: PowerReader TEST APPROVED         FORMTEXT  \\msspades\golden location. BACKUP   FORMTEXT  Who will be performing the backup and where will it be stored. PREREQUISITES  RELEASE PROCESS RELEASE STEPS Insert steps as necessary in the following table for a given service or feature. This section should be very specific to a particular release. Status Description Environment/server name Owner Handoff Code complete, install doc and TRDs with each drop to Test Installation and Config Doc Review Dev creates- RM establishes review meeting Release plan review Test approval of build Review Project Deliverable checklist and release criteria. If all met, approve for release Go/No-Go meeting  Send release kick off mail Backup files in all environments (PPE, Staging, and Production).  OPS/RM Run SQL scripts in Pre-Production Environment Copy files to PPE environment  (Note what directory and files go to which server.) OPS/RM Verify files in PPE environment Copy files to Staging environment (Note what directory and files go to which server.) OPS/RM Run SQL scripts in Production Environment Verify UI and Web Service functionality in Staging environment against production SQL Publish UI and Web Service files to the live servers (For each file group, create a separate line in this table.) OPS/RM Verify functionality on live servers Activate the new release  Any UI project should live side by side with the ability to prop a single default file that references the new files with rollback only requiring the re-propping of the single backed up default file.   OPS/RM Send mail to appropriate alias that project or service is live with link to URI of scorecard Close out project in RFC  Schedule and facilitate Project Post Mortem meeting Update   HYPERLINK "http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls" \o "http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls"  http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls ISSUES  FORMTEXT  Note issues and concerns related to the release process. ROLLBACK PROCESS ROLLBACK STEPS Status Description Owner  FORMTEXT  Indicate the steps necessary to bring the service out of the live production environment if it should experience a high severity problem. ISSUES  FORMTEXT  Note issues and concerns pertaining to the rollback process. FILE CLEANUP PLAN  FORMTEXT  Outline the plan to remove all outdated files once the new service has been installed. APPENDIX A:   FORMTEXT  APPENDIX TITLE  FORMTEXT  Place additional supporting information in this section of the document. Refer to appendices as necessary throughout the document. Label each appendix separately.  APPENDIX B:   FORMTEXT  APPENDIX TITLE  FORMTEXT  Place additional supporting information in this section of the document. Refer to appendices as necessary throughout the document. Label each appendix separately.  Confidential Page   PAGE   FILENAME  MajMinorreleaseplan template gdog* $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 gdhUp }yjVjy gd|w: gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSBuild.Community.Tasks\MSBuild.Community.Tasks.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSBuild.Community.Tasks</name>
    </assembly>
    <members>
        <member name="T:MSBuild.Community.Tasks.AspNet.InstallAspNet">
            <summary>
            Installs and register script mappings for ASP.NET
            </summary>
            <remarks>Uses the aspnet_regiis.exe tool included with the .NET Framework.</remarks>
            <example>
      Install the latest version of ASP.NET on the server:
      <code>
        <![CDATA[ <InstallAspNet /> ]]>
      </code>
    </example><example>
      Install the latest version of ASP.NET on the server, but do not update script maps:
      <code>
        <![CDATA[ <InstallAspNet ApplyScriptMaps="Never" /> ]]>
      </code>
    </example><example>
      Install the script maps for ASP.NET 2.0 on a web directory on the default website:
      <code>
        <![CDATA[ <InstallAspNet Path="MyApplication" Version="Version20" /> ]]>
      </code>
    </example><example>
      Install the script maps for ASP.NET 1.1 on a web directory on a non-default website:
      <code>
        <![CDATA[ <InstallAspNet Path="MyApplication" Version="W3SVC/3/Root/Version11" /> ]]>
      </code>
    </example><example>
      Install client side script only for the latest version:
      <code>
        <![CDATA[ <InstallAspNet ClientScriptsOnly="True" /> ]]>
      </code>
    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.AspNet.InstallAspNet.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.AspNet.InstallAspNet.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments 
            to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass 
            directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.AspNet.InstallAspNet.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.AspNet.InstallAspNet.IsValidPropertyCombinations">
            <summary>
            Determines if the current property values can be used together
            </summary>
            <returns><see langword="true"/> when properties can be used together.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Version">
            <summary>
            The version of ASP.NET to install
            </summary>
            <remarks>
            The default behavior is to use the latest version of ASP.NET available on the computer.
            <list type="table">
            <listheader><term>Version</term></listheader>
            <item><term>Version11</term><description>ASP.NET v1.1</description></item>
            <item><term>Version20</term><description>ASP.NET v2.0</description></item>
            <item><term>VersionLatest</term><description>The latest version of ASP.NET available</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.ApplyScriptMaps">
            <summary>
            The method used to determine if ASP.NET script mappings should be applied
            </summary>
            <remarks>
            The default behavior is to register script mappings on all sites except those with a newer version of ASP.NET.
            <list type="table">
            <listheader><term>Value</term></listheader>
            <item><term>Never</term><description>Register ASP.NET on the computer without updating any script mappings.</description></item>
            <item><term>IfNoneExist</term><description>Register script mappings only on for sites that do not have any existing ASP.NET script mappings (not available for ASP.NET v1.1)</description></item>
            <item><term>UnlessNewerExist</term><description>Register script mappings on all sites except those with a newer version of ASP.NET.</description></item>
            <item><term>Always</term><description>Register script mappings on all sites, even if they already have a newer version of ASP.NET.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.ClientScriptsOnly">
            <summary>
            When <see langword="true"/>, the aspnet_client scripts will be installed. No script mappings will be updated.
            </summary>
            <remarks>This cannot be <see langword="true"/> if a value for <see cref="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Path"/> or <see cref="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.ApplyScriptMaps"/> has been specified.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Path">
            <summary>
            The web application that should have its script maps updated.
            </summary>
            <remarks>
            The path must be of the form W3SVC/[instance]/Root/[webdirectory], for example W3SVC/1/Root/SampleApp1.
            As a shortcut, you can specify just the web directory name,
            if the web directory is installed in the default website instance (W3SVC/1/Root).
            <para>You should not specify a value for <see cref="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.ApplyScriptMaps"/> when specifying a path.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Recursive">
            <summary>
            When <see langword="true"/>, script maps are applied recursively under <see cref="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Path"/>.
            </summary>
            <remarks>This property is only valid when specifying a value for <see cref="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.Path"/>. It is <see langword="true"/> by default.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.AspNet.InstallAspNet.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.AssemblyInfo">
            <summary>
            Generates an AssemblyInfo files
            </summary>
            <example>
            <para>Generates a common version file.</para>
            <code><![CDATA[
            <AssemblyInfo CodeLanguage="CS"  
                OutputFile="VersionInfo.cs" 
                AssemblyVersion="1.0.0.0" 
                AssemblyFileVersion="1.0.0.0" />
            ]]></code>
            <para>Generates a complete version file.</para>
            <code><![CDATA[
            <AssemblyInfo CodeLanguage="CS"  
                OutputFile="$(MSBuildProjectDirectory)\Test\GlobalInfo.cs" 
                AssemblyTitle="AssemblyInfoTask" 
                AssemblyDescription="AssemblyInfo Description"
                AssemblyConfiguration=""
                AssemblyCompany="Company Name, LLC"
                AssemblyProduct="AssemblyInfoTask"
                AssemblyCopyright="Copyright (c) Company Name, LLC 2006"
                AssemblyTrademark=""
                ComVisible="false"
                CLSCompliant="true"
                Guid="d038566a-1937-478a-b5c5-b79c4afb253d"
                AssemblyVersion="1.0.0.0" 
                AssemblyFileVersion="1.0.0.0" />
            ]]></code>
            </example>
        </member>
        <member name="F:MSBuild.Community.Tasks.AssemblyInfo.DEFAULT_OUTPUT_FILE">
            <summary>
            The default value of <see cref="P:MSBuild.Community.Tasks.AssemblyInfo.OutputFile"/>.
            The value is <c>"AssemblyInfo.cs"</c>.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.AssemblyInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AssemblyInfo"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.AssemblyInfo.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.CodeLanguage">
            <summary>
            Gets or sets the code language.
            </summary>
            <value>The code language.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.ComVisible">
            <summary>
            Gets or sets a value indicating whether [COMVisible].
            </summary>
            <value><c>true</c> if [COMVisible]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.CLSCompliant">
            <summary>
            Gets or sets a value indicating whether [CLSCompliant].
            </summary>
            <value><c>true</c> if [CLSCompliant]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyTitle">
            <summary>
            Gets or sets the assembly title.
            </summary>
            <value>The assembly title.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyDescription">
            <summary>
            Gets or sets the assembly description.
            </summary>
            <value>The assembly description.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyConfiguration">
            <summary>
            Gets or sets the assembly configuration.
            </summary>
            <value>The assembly configuration.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyCompany">
            <summary>
            Gets or sets the assembly company.
            </summary>
            <value>The assembly company.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyProduct">
            <summary>
            Gets or sets the assembly product.
            </summary>
            <value>The assembly product.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyCopyright">
            <summary>
            Gets or sets the assembly copyright.
            </summary>
            <value>The assembly copyright.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyTrademark">
            <summary>
            Gets or sets the assembly trademark.
            </summary>
            <value>The assembly trademark.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyCulture">
            <summary>
            Gets or sets the assembly culture.
            </summary>
            <value>The assembly culture.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyVersion">
            <summary>
            Gets or sets the assembly version.
            </summary>
            <value>The assembly version.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyFileVersion">
            <summary>
            Gets or sets the assembly file version.
            </summary>
            <value>The assembly file version.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyInformationalVersion">
            <summary>
            Gets or sets the assembly informational version.
            </summary>
            <value>The assembly informational version.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyKeyFile">
            <summary>
            Gets or sets the assembly key file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyKeyName">
            <summary>
            Gets or sets the assembly key name.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.AssemblyDelaySign">
            <summary>
            Gets or sets the assembly delay sign value.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.GenerateClass">
            <summary>
            Gets or sets a value indicating whether to generate the ThisAssmebly class.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.AssemblyInfo.OutputFile">
            <summary>
            Gets or sets the output file.
            </summary>
            <value>The output file.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.Attrib">
            <summary>
            Changes the attributes of files and/or directories
            </summary>
            <example>
            <para>Make file Readonly, Hidden and System.</para>
            <code><![CDATA[
            <Attrib Files="Test\version.txt" 
                ReadOnly="true" Hidden="true" System="true"/>
            ]]></code>
            <para>Clear Hidden and System attributes.</para>
            <code><![CDATA[
            <Attrib Files="Test\version.txt" 
                Hidden="false" System="false"/>
            ]]></code>
            <para>Make file Normal.</para>
            <code><![CDATA[
            <Attrib Files="Test\version.txt" 
                Normal="true"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Attrib.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Files">
            <summary>
            Gets or sets the list of files to change attributes on.
            </summary>
            <value>The files to change attributes on.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Directories">
            <summary>
            Gets or sets the list of directories to change attributes on.
            </summary>
            <value>The directories to change attributes on.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Archive">
            <summary>
            Gets or sets file's archive status.
            </summary>
            <value><c>true</c> if archive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Compressed">
            <summary>
            Gets or sets a value indicating file is compressed.
            </summary>
            <value><c>true</c> if compressed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Encrypted">
            <summary>
            Gets or sets a value indicating file is encrypted.
            </summary>
            <value><c>true</c> if encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Hidden">
            <summary>
            Gets or sets a value indicating file is hidden, and thus is not included in an ordinary directory listing.
            </summary>
            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.Normal">
            <summary>
            Gets or sets a value indicating file is normal and has no other attributes set.
            </summary>
            <value><c>true</c> if normal; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.ReadOnly">
            <summary>
            Gets or sets a value indicating file is read-only.
            </summary>
            <value><c>true</c> if read-only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Attrib.System">
            <summary>
            Gets or sets a value indicating file is a system file.
            </summary>
            <value><c>true</c> if system; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.GacUtilCommands">
            <summary>
            The list of the commans available to the GacUtil Task
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.GacUtilCommands.Install">
            <summary>Install the list of assemblies into the GAC.</summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.GacUtilCommands.Uninstall">
            <summary>Uninstall the list of assembly names from the GAC.</summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.GacUtil">
            <summary>
            MSBuild task to install and uninstall asseblies into the GAC
            </summary>
            <example>Install a dll into the GAC.
            <code><![CDATA[
                <GacUtil 
                    Command="Install" 
                    Assemblies="MSBuild.Community.Tasks.dll" 
                    Force="true" />
            ]]></code>
            </example>
            <example>Uninstall a dll from the GAC.
            <code><![CDATA[
                <GacUtil 
                    Command="Uninstall" 
                    Assemblies="MSBuild.Community.Tasks" 
                    Force="true" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.GacUtil.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.GacUtil.LogToolCommand(System.String)">
            <summary>
            Logs the starting point of the run to all registered loggers.
            </summary>
            <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.GacUtil.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.GacUtil.Execute">
            <summary>
            Runs the exectuable file with the specified task parameters.
            </summary>
            <returns>
            true if the task runs successfully; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.GacUtil.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
            <enum cref="T:MSBuild.Community.Tasks.GacUtilCommands"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.GacUtil.Force">
            <summary>
            Gets or sets a value indicating whether to force reinstall of an assembly.
            </summary>
            <value><c>true</c> if force; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.GacUtil.Assemblies">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.GacUtil.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.GacUtil.StandardOutputLoggingImportance">
            <summary>
            Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.
            </summary>
            <value></value>
            <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.JavaScript.JSCompress">
            <summary>
            Compresses JavaScript source by removing comments and unnecessary 
            whitespace. It typically reduces the size of the script by half, 
            resulting in faster downloads and code that is harder to read.
            </summary>
            <remarks>
            This task does not change the behavior of the program that it is 
            compressing. The resulting code will be harder to debug as well as
            harder to read.
            </remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.JavaScript.JSCompress.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.JavaScript.JSCompress.Files">
            <summary>
            Gets or sets the files to source-compress.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.JavaScript.JSCompress.Encoding">
            <summary>
            Encoding to use to read and write files.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.JavaScript.JSCompress.CompressedFiles">
            <summary>
            Gets the files that were successfully source-compressed.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnCopy">
            <summary>
            Copy a file or folder in Subversion
            </summary>
            <remarks>
            This is most useful for automatically tagging your source code during a build. 
            You can create a tag by copying a path from one server location to another.
            </remarks>
            <example>Create a tag of the trunk with the current Cruise Control build number:
            <code><![CDATA[
            <Target Name="TagTheBuild">
              <SvnCopy SourcePath="file:///d:/svn/repo/Test/trunk"
                       DestinationPath="file:///d:/svn/repo/Test/tags/BUILD-$(CCNetLabel)" 
                       Message="Automatic build of $(CCNetProject)" />      
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnClient">
            <summary>
            Subversion client base class
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.GenerateSvnCommand">
            <summary>
            Generates the SVN command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.GenerateSvnArguments">
            <summary>
            Generates the SVN arguments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
            <summary>
            Logs the events from text output.
            </summary>
            <param name="singleLine">The single line.</param>
            <param name="messageImportance">The message importance.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnClient.LogToolCommand(System.String)">
            <summary>
            Logs the starting point of the run to all registered loggers.
            </summary>
            <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Arguments">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>The arguments.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Verbose">
            <summary>
            Gets or sets the verbose.
            </summary>
            <value>The verbose.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Force">
            <summary>
            Gets or sets the force.
            </summary>
            <value>The force.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.RepositoryPath">
            <summary>
            Gets or sets the repository path.
            </summary>
            <value>The repository path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.LocalPath">
            <summary>
            Gets or sets the local path.
            </summary>
            <value>The local path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Targets">
            <summary>
            Gets or sets the targets.
            </summary>
            <value>The targets.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.Revision">
            <summary>
            Gets or sets the revision.
            </summary>
            <value>The revision.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.CommandSwitches">
            <summary>
            Gets or sets the command switchs.
            </summary>
            <value>The command switchs.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.StandardOutputLoggingImportance">
            <summary>
            Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.
            </summary>
            <value></value>
            <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnClient.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCopy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MSBuild.Community.Tasks.Subversion.SvnCopy"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCopy.GenerateSvnCommand">
            <summary>
            Generates the SVN command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCopy.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnCopy.SourcePath">
            <summary>
            The path of the source file or folder that should be copied
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnCopy.DestinationPath">
            <summary>
            The path to which the SourcePath should be copied
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Tfs.IServer">
            <summary>
            Describes the behavior of a Team Foundation Server
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.IServer.GetLatestChangesetId(System.String,System.Net.ICredentials)">
            <summary>
            Retrieves the latest changeset ID associated with a path
            </summary>
            <param name="localPath">A path on the local filesystem</param>
            <param name="credentials">Credentials used to authenticate against the serer</param>
            <returns></returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Tfs.TeamFoundationServer">
            <summary>
            Handles all communication with the Team Foundation Server
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.TeamFoundationServer.#ctor(System.String)">
            <summary>
            Creates an instace of the TeamFoundationServer class
            </summary>
            <param name="clientLocation">The local file path containing the TFS libraries. null if TFS is in the GAC.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.TeamFoundationServer.GetLatestChangesetId(System.String,System.Net.ICredentials)">
            <summary>
            Retrieves the latest changeset ID associated with a path
            </summary>
            <param name="localPath">A path on the local filesystem</param>
            <param name="credentials">Credentials used to authenticate against the serer</param>
            <returns></returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Tfs.TeamFoundationServerException">
            <summary>
            Exceptions returned by the Team Foundation Server
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.TeamFoundationServerException.#ctor">
            <summary>
            Creates a new instance of the exception
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.TeamFoundationServerException.#ctor(System.String)">
            <summary>
            Creates a new instance of the exception
            </summary>
            <param name="message">A description of the exception</param>
        </member>
        <member name="T:MSBuild.Community.Tasks.Tfs.TfsVersion">
            <summary>
            Determines the changeset in a local Team Foundation Server workspace
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Tfs.TfsVersion.Execute">
            <summary>
            Runs the exectuable file with the specified task parameters.
            </summary>
            <returns>
            true if the task runs successfully; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.Username">
            <summary>
            The user to authenticate on the server
            </summary>
            <remarks>Leave empty to use the credentials of the current user.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.Password">
            <summary>
            The password for the user to authenticate on the server
            </summary>
            <remarks>Leave empty to use the credentials of the current user.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.Domain">
            <summary>
            The domain of the user to authenticate on the server
            </summary>
            <remarks>Leave empty to use the credentials of the current user.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.LocalPath">
            <summary>Path to local working copy.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.Changeset">
            <summary>
            The latest changeset ID in the local path
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Tfs.TfsVersion.TfsLibraryLocation">
            <summary>
            The location of the Team Foundation Server client assemblies. Leave empty when the client is installed in the Global Assembly Cache.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Xml.XmlMassUpdate">
            <summary>
            Performs multiple updates on an XML file
            </summary>
            <remarks>
      XmlMassUpdate allows to to specify multiple changes to make to an XML file (the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentFile"/>. By default, the changes are applied to the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentFile"/>, but you can create a new file by providing the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.MergedFile"/> attribute.  The change instructions are specified using XML in the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile"/>. If the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile"/> does not mirror the structure of the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentFile"/> exactly, you can specify the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentRoot"/> and <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsRoot"/> XPath expressions which determine how the files should be mapped to each other.
      <para>Any element within the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsRoot"/> will find the corresponding element in the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentRoot"/>. If it does not exist, it will be created with all of its attributes. If it does exist, the attributes will be added or updated as specified.</para>
      <para>
        Any attribute declared within the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.UpdateControlNamespace"/> will not be copied to the modified file. Valid attributes are <c>key</c> and <c>action</c>. The <c>key</c> attribute allows you to define an attribute to use as the identifying attribute when you only want to update a single element, and multiple elements with the same name exist. You can also use the <c>action="remove"</c> attribute to specify that an element should be deleted instead of updated.
      </para>
  </remarks><example>
      <para>These examples will demonstrate how to make multiple updates to a XML file named web.config. It looks like:
      <code>
        <![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<appSettings>
		<add key="ItemsPerPage" value="10" />
		<add key="EnableCaching" value="true" />
		<add key="DefaultServer" value="TIGRIS" />
	</appSettings>
    <system.web>
        <compilation defaultLanguage="c#" debug="true" />
        <customErrors mode="Off" />
        <trace enabled="true" requestLimit="10" pageOutput="true" />
        <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    </system.web>
</configuration> ]]>
      </code>
      </para>
    </example><example>
      You can update the file using instructions from an external file (specified as the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile"/>):
      <code>
        <![CDATA[<XmlMassUpdate ContentFile="web.config" SubstitutionsFile="changes.xml" ContentRoot="/configuration/system.web" SubstitutionsRoot="/system.web" /> ]]>
      </code>
      The <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile"/> is named changes.xml and contains:
      <code>
      <![CDATA[<system.web>
        <compilation debug="false" />
        <customErrors mode="RemoteOnly" defaultRedirect="Error.htm">
          <error statusCode="401" redirect="AccessDenied.aspx" />
        </customErrors>
        <trace enabled="false" />
      </system.web> ]]>
      </code>
    </example><example>
      You can also provide the update instructions within the MSBuild project file itself. It takes advantage of the MSBuild ProjectExtensions element which allows you to add XML to a project file that will be ignored by the MSBuild engine. This example also demonstrates how to use <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.NamespaceDefinitions"/>:
      <code>
        <![CDATA[<ProjectExtensions>
  <system.web>
    <compilation debug="false" />
    <trace enabled="false" />
  </system.web>
</ProjectExtensions>
<Target Name="SubstituteFromProj">
  <XmlMassUpdate ContentFile="web.config" ContentRoot="/configuration/system.web"
    NamespaceDefinitions="msb=http://schemas.microsoft.com/developer/msbuild/2003"
    SubstitutionsFile="$(MSBuildProjectFullPath)"
    SubstitutionsRoot="/msb:Project/msb:ProjectExtensions/msb:system.web" />
</Target> ]]>
      </code>
    </example><example>
      The following example demonstrates how to deal with "keyed" elements. When you need to update an element, and multiple elements exist with the same name, it must be be differentied by one of its attributes. You designate the differentiating attribute using the "key" attribute declared in the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.UpdateControlNamespace"/>.
      If an element matching the keyed attribute is not found, a new element will be created (DefaultSort in the example). This example also demonstrates creating a new file with the merged changes instead of modifying the original file.
      <code>
        <![CDATA[ <XmlMassUpdate ContentFile="web.config" SubstitutionsFile="changes.xml" MergedFile="web.config.keyed.xml"  /> ]]>
      </code>
      Using a changes.xml file with the following contents:
      <code>
        <![CDATA[<configuration xmlns:xmu="urn:msbuildcommunitytasks-xmlmassupdate">
  <appSettings>
        <add xmu:key="key" key="EnableCaching" value="false" />
        <add xmu:key="key" key="DefaultSort" value="LastName" />
  </appSettings>
</configuration> ]]>
    </code>
  </example><example>
      Use a changes.xml file with the following contents to demonstrate how to remove an element from the updated file:
      <code>
        <![CDATA[<configuration xmlns:xmu="urn:msbuildcommunitytasks-xmlmassupdate">
  <appSettings>
        <add xmu:key="key" key="ItemsPerPage" xmu:action="remove" />
        <trace xmu:action="remove" />
  </appSettings>
</configuration> ]]>
      </code>
    </example><example>
      You can also specify the changes to apply from within the target document. By making use of the <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsRoot"/> property, you can store multiple sets of changes to apply based on runtime conditions.
      Consider the following source web.config file:
      <code>
        <![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.web>
        <compilation defaultLanguage="c#" debug="true" />
        <customErrors mode="Off" />
        <trace enabled="true" requestLimit="10" pageOutput="true" />
        <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    </system.web>
    <substitutions>
      <test>
        <system.web>
          <compilation debug="false" />
          <trace enabled="true" />
        </system.web>
      </test>
      <prod>
        <system.web>
          <compilation debug="false" />
          <trace enabled="false" />
        </system.web>
      </prod>
    </substitutions>
</configuration> ]]>
      </code>
      You could use the following task definition, which relies on a property "TargetEnvironment" to determine which set of changes to apply:
      <code>
        <![CDATA[ <XmlMassUpdate ContentFile="web.config" ContentRoot="/configuration" SubstitutionsRoot="/configuration/substitutions/$(TargetEnvironment)" /> ]]>
      </code>
      You will need to provide a value of "test" or "prod" to the TargetEnvironment property. The property can be defined in a PropertyGroup section of the MSBuild file, or passed as a command-line parameter.
      <code>
        <![CDATA[ msbuild build.proj /p:TargetEnvironment=prod ]]>
      </code>

    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlMassUpdate.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlMassUpdate.LoadSubstitutionsDocument">
            <summary>
            Returns <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile"/> as an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <remarks>This method is not intended for use by consumers. It is exposed for testing purposes.</remarks>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlMassUpdate.LoadContentDocument">
            <summary>
            Returns <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentFile"/> as an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <remarks>This method is not intended for use by consumers. It is exposed for testing purposes.</remarks>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SaveMergedDocument(System.Xml.XmlDocument)">
            <summary>
            Creates <see cref="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.MergedFile"/> from the specified <see cref="T:System.Xml.XmlDocument"/>
            </summary>
            <param name="mergedDocument">The XML to save to a file</param>
            <remarks>This method is not intended for use by consumers. It is exposed for testing purposes.</remarks>
            <returns></returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentFile">
            <summary>
            The original file whose content is to be updated
            </summary>
            <remarks>This task is currently under construction and not necessarily feature complete.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsFile">
            <summary>
            The file containing the list of updates to perform
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.MergedFile">
            <summary>
            The file created after performing the updates
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsRoot">
            <summary>
            The XPath expression used to locate the list of substitutions to perform
            </summary>
            <remarks>When not specified, the default is the document root: <c>/</c>
            <para>When there is a set of elements with the same name, and you want to update
            a single element which can be identified by one of its attributes, you need to include an attribute
            named 'key' in the namespace <c>urn:msbuildcommunitytasks-xmlmassupdate</c>. The value of the
            attribute is the name of the attribute that should be used as the unique identifier.</para></remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentRoot">
            <summary>
            The XPath expression identifying root node that substitions are relative to
            </summary>
            <remarks>When not specified, the default is the document root: <c>/</c></remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.NamespaceDefinitions">
            <summary>
            A collection of prefix=namespace definitions used to query the XML documents
            </summary>
            <example>
      Defining multiple namespaces:
      <code>
        <![CDATA[
<XmlMassUpdate ContentFile="web.config"
  SubstitutionsRoot="/configuration/substitutions"
 	NamespaceDefinitions = "soap=http://www.w3.org/2001/12/soap-envelope;x=http://www.w3.org/1999/XSL/Transform">
/>]]>
      </code>
    </example>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.ContentPathUsedByTask">
            <summary>
            The full path of the file containing content updated by the task
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.SubstitutionsPathUsedByTask">
            <summary>
            The full path of the file containing substitutions used by the task
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.MergedPathUsedByTask">
            <summary>
            The full path of the file containing the results of the task
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlMassUpdate.UpdateControlNamespace">
            <summary>
            The namespace used for XmlMassUpdate pre-defined attributes
            </summary>
            <remarks>Evaluates to: <c>urn:msbuildcommunitytasks-xmlmassupdate</c>
            <para>Attributes decorated with this namespace are used to control how a substitutions element
            or attribute is handled during the update. For example, the key attribute is used to identify the
            attribute on an element that uniquely identifies the element in a set.</para></remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap">
            <summary>
            Sets an application mapping for a filename extension on an existing web directory.
            </summary>
            <example>Map the .axd extension to the lastest version of ASP.NET:
            <code><![CDATA[
            <WebDirectoryScriptMap VirtualDirectoryName="MyWeb" Extension=".axd" MapToAspNet="True" VerifyFileExists="False" />
            ]]></code>
            </example>
            <example>Map GET requests to the .rss extension to a specific executable:
            <code><![CDATA[
            <WebDirectoryScriptMap VirtualDirectoryName="MyWeb" Extension=".rss" Verbs="GET" ExecutablePath="$(WINDIR)\Microsoft.Net\Framework\1.0.3705\aspnet_isapi.dll" />
            ]]></code>
            </example>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebBase">
            <summary>
            Base task for any IIS-related task.
            </summary>
            <remarks>Stores the base logic for gathering the IIS version and server and port checking.  This
            base task also stores common properties for other related tasks.</remarks>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.mIISVersion">
            <summary>
            IIS version.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebBase.GetIISVersion">
            <summary>
            Gets the IIS version.
            </summary>
            <returns>The <see cref="T:MSBuild.Community.Tasks.IIS.WebBase.IISVersion"/> for IIS.</returns>
            <exclude/>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebBase.GetRemoteOSVersion">
            <summary>
            Gets the remote machine OS version.
            </summary>
            <returns>Returns a <see cref="T:System.Version"/> of the operating system.</returns>
            <exclude/>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebBase.VerifyIISRoot">
            <summary>
            Verifies that the IIS root exists based on the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.ServerName"/> and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.ServerPort"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebBase.VerifyServerPortExists(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Helper method for <see cref="M:MSBuild.Community.Tasks.IIS.WebBase.VerifyIISRoot"/> that verifies the server port exists.
            </summary>
            <param name="site">The site to verify the port.</param>
            <returns>Boolean value indicating the status of the port check.</returns>
            <exclude/>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.ServerName">
            <summary>
            Gets or sets the name of the server.  The default value is 'localhost'.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.ServerPort">
            <summary>
            Gets or sets the server port.
            </summary>
            <value>The server port.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.IISServerPath">
            <summary>
            Gets or sets the IIS server path.
            </summary>
            <remarks>Is in the form 'IIS://localhost/W3SVC/1/Root'.</remarks>
            <value>The IIS server path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.IISApplicationPath">
            <summary>
            Gets or sets the application path.
            </summary>
            <remarks>Is in the form '/LM/W3SVC/1/Root'.</remarks>
            <value>The application path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.IISAppPoolPath">
            <summary>
            Gets or sets the IIS application pool path.
            </summary>
            <remarks>Is in the form 'IIS://localhost/W3SVC/AppPools'.</remarks>
            <value>The IIS application pool path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.Username">
            <summary>
            Gets or sets the username for the account the task will run under.  This property
            is needed if you specified a <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.ServerName"/> for a remote machine.
            </summary>
            <value>The username of the account.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebBase.Password">
            <summary>
            Gets or sets the password for the account the task will run under.  This property
            is needed if you specified a <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.ServerName"/> for a remote machine.
            </summary>
            <value>The password of the account.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebBase.IISVersion">
            <summary>
            Defines the possible IIS versions supported by the task.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.IISVersion.Four">
            <summary>
            IIS version 4.x
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.IISVersion.Five">
            <summary>
            IIS version 5.x
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.IISVersion.Six">
            <summary>
            IIS version 6.x
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolAction">
            <summary>
            Defines the possible application pool actions to be performed.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolAction.Recycle">
            <summary>
            Recycles an application pool.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolAction.Restart">
            <summary>
            Stops and restarts the application pool.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolAction.Start">
            <summary>
            Starts the application pool.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolAction.Stop">
            <summary>
            Stops the application pool.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolState">
            <summary>
            Defines the current application pool state.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolState.Starting">
            <summary>
            The application pool is starting.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolState.Started">
            <summary>
            The application pool has started.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolState.Stopping">
            <summary>
            The application pool is stopping.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.WebBase.ApplicationPoolState.Stopped">
            <summary>
            The application pool has stopped.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.VirtualDirectoryName">
            <summary>
            Gets or sets the name of the virtual directory.
            </summary>
            <value>The name of the virtual directory.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.Extension">
            <summary>
            The filename extension that will be mapped to an executable.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.ExecutablePath">
            <summary>
            The full path to the executable used to respond to requests for a Uri ending with <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.Extension"/>
            </summary>
            <remarks>This property is required when <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.MapToAspNet"/> is <c>false</c> (the default).</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.MapToAspNet">
            <summary>
            Indicates whether <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.Extension"/> should be mapped to the ASP.NET runtime.
            </summary>
            <remarks>When <c>true</c>, <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.ExecutablePath"/> is set to aspnet_isapi.dll
            in the installation folder of the latest version of the .NET Framework.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.Verbs">
            <summary>
            A comma-separated list of the HTTP verbs to include in the application mapping.
            </summary>
            <remarks>The default behavior (when this property is empty or unspecified) is to map all verbs.
            <para>A semi-colon-separated list will also be recognized, allowing you to use an MSBuild Item.</para></remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.EnableScriptEngine">
            <summary>
            Set to <c>true</c> when you want the application to run in a directory without Execute permissions.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryScriptMap.VerifyFileExists">
            <summary>
            Set to <c>true</c> to instruct the Web server to verify the existence of the requested script file and to ensure that the requesting user has access permission for that script file.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebDirectorySetting">
            <summary>
            Reads and modifies a web directory configuration setting.
            </summary>
            <example>Display the file system path of the MyWeb web directory:
            <code><![CDATA[
            <WebDirectorySetting VirtualDirectoryName="MyWeb" SettingName="Path">
                <Output TaskParameter="SettingValue" PropertyName="LocalPath" />
            </WebDirectorySetting>
            <Message Text="MyWeb is located at $(LocalPath)" />
            ]]></code>
            </example>
            <example>Set the default document for the MyWeb directory to Default.aspx:
            <code><![CDATA[
            <WebDirectorySetting VirtualDirectoryName="MyWeb" SettingName="DefaultDoc" SettingValue="Default.aspx" />
            <WebDirectorySetting VirtualDirectoryName="MyWeb" SettingName="EnableDefaultDoc" SettingValue="True" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebDirectorySetting.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectorySetting.VirtualDirectoryName">
            <summary>
            Gets or sets the name of the virtual directory.
            </summary>
            <value>The name of the virtual directory.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectorySetting.SettingName">
            <summary>
            Gets or sets the configuration setting to read or modify.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectorySetting.SettingValue">
            <summary>
            Gets or sets the value of <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectorySetting.SettingName"/> on the web directory
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.ILMerge">
             <summary>
             A wrapper for the ILMerge tool.
             </summary>
             <remarks>
             <para>
             The ILMerge tool itself must be installed separately.
             It is available <a href="http://research.microsoft.com/~mbarnett/ILMerge.aspx">here</a>.
             </para>
             <para>
             The command line options "/wildcards" and "/lib" of ILMerge are not supported,
             because MSBuild is in charge of expanding wildcards for item groups.
             </para>
             </remarks>
             <example>
             This example merges two assemblies A.dll and B.dll into one:
             <code><![CDATA[
             <PropertyGroup>
                 <outputFile>$(testDir)\ilmergetest.dll</outputFile>
                 <keyFile>$(testDir)\keypair.snk</keyFile>
                 <excludeFile>$(testDir)\ExcludeTypes.txt</excludeFile>
                 <logFile>$(testDir)\ilmergetest.log</logFile>
             </PropertyGroup>
            
             <ItemGroup>
                 <inputAssemblies Include="$(testDir)\A.dll" />
                 <inputAssemblies Include="$(testDir)\B.dll" />
            
                 <allowDuplicates Include="ClassAB" />
             </ItemGroup>
            
             <Target Name="merge" >
                <ILMerge InputAssemblies="@(inputAssemblies)" 
                    AllowDuplicateTypes="@(allowDuplicates)"
                    ExcludeFile="$(excludeFile)"
                    OutputFile="$(outputFile)" LogFile="$(logFile)"
                    DebugInfo="true" XmlDocumentation="true" 
                    KeyFile="$(keyFile)" DelaySign="true" />
             </Target>]]></code>
             </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.ILMerge.GenerateFullPathToTool">
            <summary>
            Gets the standard installation path of ILMerge.exe.
            </summary>
            <remarks>
            If ILMerge is not installed at its standard installation path,
            provide its location to <see cref="P:Microsoft.Build.Utilities.ToolTask.ToolPath"/>.
            </remarks>
            <returns>Returns [ProgramFiles]\Microsoft\ILMerge.exe.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.ILMerge.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments
            to pass directly to the executable file.
            </summary>
            <returns>
            Returns a string value containing the command line arguments 
            to pass directly to the executable file.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.AllowDuplicateTypes">
            <summary>
            Gets or sets the names of public types
            to be renamed when they are duplicates.
            </summary>
            <remarks>
            <para>Set to an empty item group to allow all public types to be renamed.</para>
            <para>Don't provide this parameter if no duplicates of public types are allowed.</para>
            <para>Corresponds to command line option "/allowDup".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.AllowZeroPeKind">
            <summary>
            Gets or sets the flag to treat an assembly 
            with a zero PeKind flag 
            (this is the value of the field listed as .corflags in the Manifest)
            as if it was ILonly.
            </summary>
            <remarks>
            <para>Corresponds to command line option "/zeroPeKind".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.AttributeFile">
            <summary>
            Gets or sets the attribute assembly
            from whre to get all of the assembly-level attributes
            such as Culture, Version, etc.
            It will also be used to get the Win32 Resources from.
            </summary>
            <remarks>
            <para>This property is mutually exclusive with <see cref="P:MSBuild.Community.Tasks.ILMerge.CopyAttributes"/>.</para>
            <para>
            When not specified, then the Win32 Resources from the primary assembly 
            are copied over into the target assembly.
            </para>
            <para>Corresponds to command line option "/attr".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.Closed">
            <summary>
            Gets or sets the flag to indicate
            whether to augment the list of input assemblies
            to its "transitive closure".
            </summary>
            <remarks>
            <para>
            An assembly is considered part of the transitive closure if it is referenced,
            either directly or indirectly, 
            from one of the originally specified input assemblies 
            and it has an external reference to one of the input assemblies, 
            or one of the assemblies that has such a reference.
            </para>
            <para>Corresponds to command line option "/closed".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.CopyAttributes">
            <summary>
            Gets or sets the flag to indicate
            whether to copy the assembly level attributes
            of each input assembly over into the target assembly.
            </summary>
            <remarks>
            <para>
            Any duplicate attribute overwrites a previously copied attribute.
            The input assemblies are processed in the order they are specified.
            </para>
            <para>This parameter is mutually exclusive with <see cref="P:MSBuild.Community.Tasks.ILMerge.AttributeFile"/>.</para>
            <para>Corresponds to command line option "/copyattrs".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.DebugInfo">
            <summary>
            Gets or sets the flag to indicate
            whether to preserve any .pdb files
            that are found for the input assemblies
            into a .pdb file for the target assembly.
            </summary>
            <remarks>
            <para>Corresponds to command line option "/ndebug".</para>
            <para>The default value is <c>true</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.DelaySign">
            <summary>
            Gets or sets the flag to indicate
            whether the target assembly will be delay signed.
            </summary>
            <remarks>
            <para>This property can be set only in conjunction with <see cref="P:MSBuild.Community.Tasks.ILMerge.KeyFile"/>.</para>
            <para>Corresponds to command line option "/delaysign".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.ExcludeFile">
            <summary>
            Gets or sets the file
            that will be used to identify types
            that are not to have their visibility modified.
            </summary>
            <remarks>
            <para>
            If an empty item group is provided, 
            then all types in any assembly other than the primary assembly are made non-public.
            </para>
            <para>Omit this parameter to prevent ILMerge from modifying the visibility of any types.</para>
            <para>
            The contents of the file should be one <see cref="T:System.Text.RegularExpressions.Regex"/> per line. 
            The regular expressions are matched against each type's full name, 
            e.g., <c>System.Collections.IList</c>. 
            If the match fails, it is tried again with the assembly name (surrounded by square brackets) 
            prepended to the type name. 
            Thus, the pattern <c>\[A\].*</c> excludes all types in assembly <c>A</c> from being made non-public. 
            The pattern <c>N.T</c> will match all types named <c>T</c> in the namespace named <c>N</c>
            no matter what assembly they are defined in.
            </para>
            <para>Corresponds to command line option "/internalize".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.InputAssemblies">
            <summary>
            Gets or sets the input assemblies to merge.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.KeyFile">
            <summary>
            Gets or sets the .snk file
            to sign the target assembly.
            </summary>
            <remarks>
            <para>Can be used with <see cref="P:MSBuild.Community.Tasks.ILMerge.DelaySign"/>.</para>
            <para>Corresponds to command line option "/keyfile".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.LogFile">
            <summary>
            Gets or sets a log file
            to write log messages to.
            </summary>
            <remarks>
            <para>
            If an empty item group is provided,
            then log messages are writte to <see cref="P:System.Console.Out"/>.
            </para>
            <para>Corresponds to command line option "/log".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.OutputFile">
            <summary>
            Gets or sets the target assembly.
            </summary>
            <remarks>
            <para>Corresponds to command line option "/out".</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.PublicKeyTokens">
            <summary>
            Gets or sets the flag to indicate
            whether external assembly references in the manifest
            of the target assembly will use public keys (<c>false</c>)
            or public key tokens (<c>true</c>).
            </summary>
            <remarks>
            <para>Corresponds to command line option "/publickeytokens".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.TargetPlatformVersion">
            <summary>
            Gets or sets the .NET framework version for the target assembly.
            </summary>
            <remarks>
            <para>Valid values are "v1", "v1.1", "v2".</para>
            <para>Corresponds to the first part of command line option "/targetplatform".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.TargetPlatformDirectory">
            <summary>
            Gets or sets the directory in which <c>mscorlib.dll</c> is to be found.
            </summary>
            <remarks>
            <para>Can only be used in conjunction with <see cref="P:MSBuild.Community.Tasks.ILMerge.TargetPlatformVersion"/>.</para>
            <para>Corresponds to the second part of command line option "/targetplatform".</para>
            <para>The default value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.TargetKind">
            <summary>
            Gets or sets the indicator
            whether the target assembly is created as a library (<c>Dll</c>),
            a console application (<c>Exe</c>) or as a Windows application (<c>WinExe</c>).
            </summary>
            <remarks>
            <para>Corresponds to command line option "/target".</para>
            <para>The default value is the same kind as that of the primary assembly.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.Version">
            <summary>
            Gets or sets the version number of the target assembly.
            </summary>
            <remarks>
            <para>The parameter should look like <c>6.2.1.3</c>.</para>
            <para>Corresponds to command line option "/ver".</para>
            <para>The default value is null.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.XmlDocumentation">
            <summary>
            Gets or sets the flag to indicate
            whether to merge XML documentation files
            into one for the target assembly.
            </summary>
            <remarks>
            <para>Corresponds to command line option "/xmldocs".</para>
            <para>The default value is <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.ILMerge.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Install.InstallAssembly">
             <summary>
             Installs assemblies.
             </summary>
            <remarks>
             Uses InstallUtil.exe to execute the 
             <see href="http://msdn2.microsoft.com/system.configuration.install.installer.install.aspx">Install</see>
             method of
             <see href="http://msdn2.microsoft.com/system.configuration.install.installer.aspx">Installer</see>
             classes contained within specified assemblies.
             </remarks>
             <example>
      Install multiple assemblies by specifying the file names:
      <code>
        <![CDATA[
<InstallAssembly AssemblyFiles="Engine.dll;Presenter.dll" />
]]>
      </code>
    </example><example>
      Install an assembly using the assembly name. Also disable the log file by setting it to a single space:
      <code>
        <![CDATA[
<InstallAssembly AssemblyNames="Engine,Version=1.5.0.0,Culture=neutral" LogFile=" "/>
]]>
      </code>
    </example><example>
      You can easily chain an install to the result of a build:
      <code>
        <![CDATA[
<MSBuild Projects="Project1.csproj;Project2.csproj">
 <Output TaskParameter="TargetOutputs" ItemName="ProjectBinaries" />
</MSBuild>
<InstallAssembly AssemblyFiles="@(ProjectBinaries)" />
]]>
      </code>
    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Install.InstallAssembly.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Install.InstallAssembly.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments 
            to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass 
            directly to the executable file.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.AssemblyNames">
            <summary>
            The assemblies to process, identified by their assembly name.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.AssemblyFiles">
            <summary>
            The assemblies to process, identified by their filename.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.LogFile">
            <summary>
            The file to write installation progress to.
            </summary>
            <remarks>Set to a single space to disable logging to a file.
            <para>
            If not specified, the default is to log to [assemblyname].installLog
            </para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.ShowCallStack">
            <summary>
             If an exception occurs at any point during installation, the call
             stack will be printed to the log.
             </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.IsUninstall">
            <summary>
            Determines whether assemblies are installed or uninstalled.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.InstallAssembly.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Install.UninstallAssembly">
            <summary>Uninstalls assemblies.</summary>    
            <remarks>
            Uses InstallUtil.exe to execute the 
            <see href="http://msdn2.microsoft.com/system.configuration.install.installer.uninstall.aspx">Uninstall</see>
            method of
            <see href="http://msdn2.microsoft.com/system.configuration.install.installer.aspx">Installer</see>
            classes contained within specified assemblies.
            </remarks>
            <example>Uninstall multiple assemblies by specifying the file names:
            <code><![CDATA[
            <UninstallAssembly AssemblyFiles="Engine.dll;Presenter.dll" />
            ]]></code>
            </example>
            <example>Unnstall an assembly using the assembly name. Also disable the log file by setting it to a single space:
            <code><![CDATA[
            <UninstallAssembly AssemblyNames="Engine,Version=1.5.0.0,Culture=neutral" LogFile=" "/>
            ]]></code>
            </example>
        </member>
        <member name="P:MSBuild.Community.Tasks.Install.UninstallAssembly.IsUninstall">
            <summary>
            Determines whether assemblies are installed or uninstalled.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.Modulo">
            <summary>
            Performs the modulo operation on numbers.
            </summary>
            <remarks>
      The modulo operation finds the remainder of the division of one number by another.
      <para>When the second number (modulus) is a fractional value, the result can be a fractional value.</para>
      <para>
        Equivalent to the % operator in C# or the Mod operator in Visual Basic.
      </para>
    </remarks><example>
      Numbers evenly divide:
      <code>
        <![CDATA[
<Math.Modulo Numbers="12;4">
    <Output TaskParameter="Result" PropertyName="Result" />
</Math.Modulo>
<Message Text="12 modulo 4 = $(Result)"/>
]]>
      </code>
      Above example will display:
      <code>12 modulo 4 = 0</code>
    </example><example>
      Division on the numbers produces a remainder:
      <code>
        <![CDATA[
<Math.Modulo Numbers="14;4">
    <Output TaskParameter="Result" PropertyName="Result" />
</Math.Modulo>
<Message Text="14 modulo 4 = $(Result)"/>
]]>
      </code>
      Above example will display:
      <code>14 modulo 4 = 2</code>
    </example><example>
      Modulus is a fractional value:
      <code>
        <![CDATA[
<Math.Modulo Numbers="12;3.5">
    <Output TaskParameter="Result" PropertyName="Result" />
</Math.Modulo>
<Message Text="12 modulo 3.5 = $(Result)"/>
]]>
      </code>
      Above example will display:
      <code>12 modulo 3.5 = 1.5</code>
    </example>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.MathBase">
            <summary>
            Math task base class
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.MathBase.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.MathBase.StringArrayToDecimalArray(System.String[])">
            <summary>
            Strings array to decimal array.
            </summary>
            <param name="numbers">The numbers.</param>
            <returns></returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Math.MathBase.Numbers">
            <summary>
            Gets or sets the numbers to work with.
            </summary>
            <value>The numbers.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Math.MathBase.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Math.MathBase.NumericFormat">
            <summary>
            Gets or sets the numeric format.
            </summary>
            <value>The numeric format.</value>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.Modulo.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Prompt">
            <summary>
            Displays a message on the console and waits for user input.
            </summary>
            <remarks>It is important to note that the message is not written to the MSBuild logger, 
            it is always written to the console, no matter which logger is configured.
            <para>This task requires user input from the console. Do not use this task for projects
            that will be executed unattended. It is recommended that you always add a Condtion so that
            this task is only enabled when a custom property is set through the command line.
            This will ensure that the other users do not attempt to execute the task in unattended mode.
            </para></remarks>
            <example>Pause the build if the interactive property is set:
            <code><![CDATA[
            <!-- Pause when invoked with the interactive property: msbuild myproject.proj /property:interactive=true -->
            
            <Prompt Text="You can now attach the debugger to the msbuild.exe process..." Condition="'$(Interactive)' == 'True'" />
            ]]></code>
            </example>
            <example>Obtain user input during the build: 
            (Note: in most cases, it is recommended that users instead provide custom values to your build through the /property argument of msbuild.exe)
            <code><![CDATA[
            <Prompt Text="Tell me your name:" Condition="'$(Interactive)' == 'True'" >
              <Output TaskParameter="UserInput" PropertyName="PersonName" />
            </Prompt>
            <Message Text="Hello $(PersonName)" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Prompt.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Prompt.Text">
            <summary>
            The message to display in the console.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Prompt.UserInput">
            <summary>
            The text entered at the console.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.RegexBase">
            <summary>
            Base class for Regex tasks
            Handles public properties for Input, Expression, Options and Output
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexBase.Expression">
            <summary>
            Regex expression
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexBase.Input">
            <summary>
            Input, list of items to perform the regex on
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexBase.Options">
            <summary>
            Regex options as strings corresponding to the RegexOptions enum:
                Compiled
                CultureInvariant
                ECMAScript 
                ExplicitCapture
                IgnoreCase
                IgnorePatternWhitespace
                Multiline
                None
                RightToLeft
                Singleline
            </summary>
            <enum cref="T:System.Text.RegularExpressions.RegexOptions"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexBase.Output">
            <summary>
            Results of the Regex transformation.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexBase.ExpressionOptions">
            <summary>
            Options converted to RegexOptions enum
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.RegexMatch">
            <summary>
            Task to filter an Input list with a Regex expression.
            Output list contains items from Input list that matched given expression
            </summary>
            <example>Matches from TestGroup those names ending in a, b or c
            <code><![CDATA[
            <ItemGroup>
               <TestGroup Include="foo.my.foo.foo.test.o" />
               <TestGroup Include="foo.my.faa.foo.test.a" />
               <TestGroup Include="foo.my.fbb.foo.test.b" />
               <TestGroup Include="foo.my.fcc.foo.test.c" />
               <TestGroup Include="foo.my.fdd.foo.test.d" />
               <TestGroup Include="foo.my.fee.foo.test.e" />
               <TestGroup Include="foo.my.fff.foo.test.f" />
            </ItemGroup>
            <Target Name="Test">
               <!-- Outputs only items that end with a, b or c -->
               <RegexMatch Input="@(TestGroup)" Expression="[a-c]$">
                  <Output ItemName ="MatchReturn" TaskParameter="Output" />
               </RegexMatch>
               <Message Text="&#xA;Output Match:&#xA;@(MatchReturn, '&#xA;')" />
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegexMatch.Execute">
            <summary>
            Performs the Match task
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.RegexReplace">
            <summary>
            Task to replace portions of strings within the Input list
            Output list contains all the elements of the Input list after
            performing the Regex Replace.
            </summary>
            <example>
            1st example replaces first occurance of "foo." with empty string
            2nd example replaces occurance of "foo." after character 6 with "oop." string
            <code><![CDATA[
            <ItemGroup>
               <TestGroup Include="foo.my.foo.foo.test.o" />
               <TestGroup Include="foo.my.faa.foo.test.a" />
               <TestGroup Include="foo.my.fbb.foo.test.b" />
               <TestGroup Include="foo.my.fcc.foo.test.c" />
               <TestGroup Include="foo.my.fdd.foo.test.d" />
               <TestGroup Include="foo.my.fee.foo.test.e" />
               <TestGroup Include="foo.my.fff.foo.test.f" />
            </ItemGroup>
            <Target Name="Test">
               <Message Text="Input:&#xA;@(TestGroup, '&#xA;')"/>
               <!-- Replaces first occurance of "foo." with empty string-->
               <RegexReplace Input="@(TestGroup)" Expression="foo\." Replacement="" Count="1">
                  <Output ItemName ="ReplaceReturn1" TaskParameter="Output" />
               </RegexReplace>
               <Message Text="&#xA;Output Replace 1:&#xA;@(ReplaceReturn1, '&#xA;')" />
               <!-- Replaces occurance of "foo." after character 6 with "oop." string-->
               <RegexReplace Input="@(TestGroup)" Expression="foo\." Replacement="oop" Startat="6">
                  <Output ItemName ="ReplaceReturn2" TaskParameter="Output" />
               </RegexReplace>
               <Message Text="&#xA;Output Replace 2:&#xA;@(ReplaceReturn2, '&#xA;')" />
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegexReplace.Execute">
            <summary>
            Performs the Replace task
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexReplace.Replacement">
            <summary>
            String replacing matching expression strings in input list.
            If left empty matches in the input list are removed (replaced with empty string)
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexReplace.Count">
            <summary>
            Number of matches to allow on each input item.
            -1 indicates to perform matches on all matches within input item
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegexReplace.StartAt">
            <summary>
            Position within the input item to start matching
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType">
            <summary>
            Different ways to specify the assembly in a UsingTask element.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType.AssemblyFileName">
            <summary>
            Assembly file name (Default): &lt;UsingTask AssemblyFile=&quot;foo.dll&quot; /&gt;
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType.AssemblyFileFullPath">
            <summary>
            Assembly location: &lt;UsingTask AssemblyName=&quot;foo&quot; /&gt;
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType.AssemblyName">
            <summary>
            Assembly Name: &lt;UsingTask AssemblyFile=&quot;bin\debug\foo.dll&quot; /&gt;
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType.AssemblyFullName">
            <summary>
            Assembly fully qualified name: &lt;UsingTask AssemblyName=&quot;foo.dll,version ....&quot; /&gt;
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Schema.TaskSchema">
            <summary>
            A Task that generates a XSD schema of the tasks in an assembly.
            </summary>
            <example>
            <para>Creates schema for MSBuild Community Task project</para>
            <code><![CDATA[
            <TaskSchema Assemblies="Build\MSBuild.Community.Tasks.dll" 
                OutputPath="Build" 
                CreateTaskList="true" 
                IgnoreMsBuildSchema="true"
                Includes="Microsoft.Build.Commontypes.xsd"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Schema.TaskSchema.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.Assemblies">
            <summary>
            Gets or sets the list of <see cref="T:System.Reflection.Assembly"/> path to analyse.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.OutputPath">
            <summary>
            Gets or sets the output path for the generated files.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.Schemas">
            <summary>
            Gets the list of path to the generated XSD schema.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.CreateTaskList">
            <summary>
            Gets or sets a value indicating if the task list (using UsingTask)
            has to be genereted.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.TaskListAssemblyFormat">
            <summary>
            Gets or sets a value indicating how the assembly is specified in the
            UsingTask element.
            </summary>
            <enum cref="T:MSBuild.Community.Tasks.Schema.TaskListAssemblyFormatType"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.IgnoreDocumentation">
            <summary>
            Gets or sets a value indicating wheter documentation should be ignored
            even if available (Default is false).
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.TaskLists">
            <summary>
            Gets the path to the task list if it was generated.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.IgnoreMsBuildSchema">
            <summary>
            Gets or sets a value indicating if the 
            MsBuild schema inclusing should be ignored
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Schema.TaskSchema.Includes">
            <summary>
            Gets or sets a list of included schemas
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.GetSolutionProjects">
            <summary>
            Task to get paths to projects and project names from VS2005 solution file
            </summary>
            <example>
            Returns project name and relative path from test solution
            <code><![CDATA[
              <Target Name="Test">
                  <GetSolutionProjects Solution="TestSolution.sln">
                      <Output ItemName="ProjectFiles" TaskParameter="Output"/>
                  </GetSolutionProjects>
            
                <Message Text="Solution Project paths:" />
                <Message Text="%(ProjectFiles.ProjectName) : @(ProjectFiles)" />
              </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.GetSolutionProjects.Execute">
            <summary>
            Perform task
            </summary>
            <returns>true on success</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.GetSolutionProjects.Output">
            <summary>
            Output list contains TaskItems of project filenames contained within the given solution.
            Metadata tag "ProjectName" contains name of project.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.GetSolutionProjects.Solution">
            <summary>
            Name of Solution to get Projects from
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SqlServer.ExecuteDDL">
             <summary>
             MSBuild task to execute DDL and SQL statements.
             </summary>
             <remarks>Requires the the SQL Server libraries and dynamically loads the 
             required Microsoft.SqlServer.ConnectionInfo assembly.</remarks>
             <example>
             <code><![CDATA[
             <PropertyGroup>
            		<ConnectionString>Server=localhost;Integrated Security=True</ConnectionString>
            	</PropertyGroup>
            
             <Target Name="ExecuteDDL">
            		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="SqlBatchScript.sql" ContinueOnError="false" />
             </Target>
             ]]></code>
             </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SqlServer.ExecuteDDL.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlServer.ExecuteDDL.ConnectionString">
            <summary>
            The connection string
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlServer.ExecuteDDL.Files">
            <summary>
            Gets or sets the DDL/SQL files.
            </summary>
            <value>The assemblies.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlServer.ExecuteDDL.Results">
            <summary>
            Output the return count/values
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlServer.ExecuteDDL.BatchSeparator">
            <summary>
            Gets or sets the batch delimter string.
            </summary>
            <remarks>Default is "GO" for T-SQL.</remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.NodeKind">
            <summary>
            The kind of Subversion node. The names match the text output
            by "svn info".
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Subversion.NodeKind.file">
            <summary>
            Node is a file
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Subversion.NodeKind.dir">
            <summary>
            Node is a directory
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Subversion.NodeKind.unknown">
            <summary>
            Unknown node type
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.Schedule">
            <summary>
            The Subversion schedule type.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Subversion.Schedule.normal">
            <summary>
            Normal schedule
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.Subversion.Schedule.unknown">
            <summary>
            Unknown schedule.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnInfo">
            <summary>
            Run the "svn info" command and parse the output
            </summary>
            <example>
            This example will determine the Subversion repository root for
            a working directory and print it out.
            <code><![CDATA[
            <Target Name="printinfo">
              <SvnInfo LocalPath="c:\code\myapp">
                <Output TaskParameter="RepositoryRoot" PropertyName="root" />
              </SvnInfo>
              <Message Text="root: $(root)" />
            </Target>
            ]]></code>
            </example>
            <remarks>You can retrieve Subversion information for a <see cref="P:MSBuild.Community.Tasks.Subversion.SvnClient.LocalPath"/> or <see cref="P:MSBuild.Community.Tasks.Subversion.SvnClient.RepositoryPath"/>.
            If you do not provide a value for <see cref="P:MSBuild.Community.Tasks.Subversion.SvnClient.LocalPath"/> or <see cref="P:MSBuild.Community.Tasks.Subversion.SvnClient.RepositoryPath"/>, the current directory is assumed.</remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnInfo"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnInfo.ResetMemberVariables">
            <summary>
            Reset all instance variables to their default (unset) state.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnInfo.Execute">
            <summary>
            Execute the task.
            </summary>
            <returns>true if execution is successful, false if not.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnInfo.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
            <summary>
            Logs the events from text output.
            </summary>
            <param name="singleLine">The single line.</param>
            <param name="messageImportance">The message importance.</param>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.RepositoryRoot">
            <summary>
            Return the repository root or null if not set by Subversion.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.RepositoryUuid">
            <summary>
            Return the repository UUID value from Subversion.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.NodeKind">
            <summary>
            The Subversion node kind.
            </summary>
            <enum cref="T:MSBuild.Community.Tasks.Subversion.NodeKind"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.LastChangedAuthor">
            <summary>
            The author who last changed this node.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.LastChangedRevision">
            <summary>
            The last changed revision number.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.LastChangedDate">
            <summary>
            The date this node was last changed.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnInfo.Schedule">
            <summary>
            The Subversion schedule type.
            </summary>
            <enum cref="T:MSBuild.Community.Tasks.Subversion.Schedule"/>
        </member>
        <member name="T:MSBuild.Community.Tasks.TemplateFile">
            <summary>
            MSBuild task that replaces tokens in a template file and writes out a new file.
            </summary>
            <example>
            <code><![CDATA[
            <ItemGroup>
            	<Tokens Include="Name">
            		<ReplacementValue>MSBuild Community Tasks</ReplacementValue>
            	</Tokens>
            </ItemGroup>
            
            <TemplateFile TemplateFile="ATemplateFile.template" OutputFile="ReplacedFile.txt" Tokens="@(Tokens)" />
            ]]></code>
            </example>
            <remarks>Tokens in the template file are formatted using ${var} syntax and names are not 
            case-sensitive, so ${Token} and ${TOKEN} are equivalent.</remarks>
        </member>
        <member name="F:MSBuild.Community.Tasks.TemplateFile.MetadataValueTag">
            <summary>
            Meta data tag used for token replacement
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.TemplateFile.#ctor">
            <summary>
            Default constructor. Creates a new TemplateFile task.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.TemplateFile.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>Success or failure of the task.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.TemplateFile.OutputFile">
            <summary>
            The token replaced template file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.TemplateFile.OutputFilename">
            <summary>
            The full path to the output file name.  If no filename is specified (the default) the
            output file will be the Template filename with a .out extension.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.TemplateFile.Template">
            <summary>
            The template file used.  Tokens with values of ${Name} are replaced by name.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.TemplateFile.Tokens">
            <summary>
            List of tokens to replace in the template.  Token name is taken from the TaskItem.ItemSpec and the
            replacement value comes from the ReplacementValue metadata of the item.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Time">
            <summary>
            Gets the current date and time.
            </summary>
            <remarks>
            See
            <a href="ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.NETDEVFX.v20.en/cpref8/html/T_System_Globalization_DateTimeFormatInfo.htm">
            DateTimeFormatInfo</a>
            for the syntax of the format string.
            </remarks>
            <example>Using the Time task to get the Month, Day,
            Year, Hour, Minute, and Second:
            <code><![CDATA[
            <Time>
              <Output TaskParameter="Month" PropertyName="Month" />
              <Output TaskParameter="Day" PropertyName="Day" />
              <Output TaskParameter="Year" PropertyName="Year" />
              <Output TaskParameter="Hour" PropertyName="Hour" />
              <Output TaskParameter="Minute" PropertyName="Minute" />
              <Output TaskParameter="Second" PropertyName="Second" />
            </Time>
            <Message Text="Current Date and Time: $(Month)/$(Day)/$(Year) $(Hour):$(Minute):$(Second)" />]]></code>
            Set property "BuildDate" to the current date and time:
            <code><![CDATA[
            <Time Format="yyyyMMddHHmmss">
                <Output TaskParameter="FormattedTime" PropertyName="buildDate" />
            </Time>]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Time.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Format">
            <summary>
            Gets or sets the format string
            for output parameter <see cref="P:MSBuild.Community.Tasks.Time.FormattedTime"/>.
            </summary>
            <remarks>
            See
            <a href="ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.NETDEVFX.v20.en/cpref8/html/T_System_Globalization_DateTimeFormatInfo.htm">
            DateTimeFormatInfo</a>
            for the syntax of the format string.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Month">
            <summary>
            Gets the month component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Day">
            <summary>
            Gets the day of the month represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Year">
            <summary>
            Gets the year component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Hour">
            <summary>
            Gets the hour component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Minute">
            <summary>
            Gets the minute component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Second">
            <summary>
            Gets the seconds component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Millisecond">
            <summary>
            Gets the milliseconds component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Ticks">
            <summary>
            Gets the number of ticks that represent the date and time of this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.Kind">
            <summary>
            Gets or sets a value that indicates whether the time represented by this instance is based
            on local time, Coordinated Universal Time (UTC), or neither.
            </summary>
            <remarks>
            Possible values are:
            <list type="ul">
            <item>Local (default)</item>,
            <item>Utc</item>,
            <item>Unspecified</item>
            </list>
            </remarks>
            <enum cref="T:System.DateTimeKind"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.TimeOfDay">
            <summary>
            Gets the time of day for this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.DayOfYear">
            <summary>
            Gets the day of the year represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.DayOfWeek">
            <summary>
            Gets the day of the week represented by this instance.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.FormattedTime">
            <summary>
            Gets the value of this instance to its equivalent string representation.
            If input parameter <see cref="P:MSBuild.Community.Tasks.Time.Format"/> is provided,
            the value is formatted according to it.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.ShortDate">
            <summary>
            Gets the value of this instance to its equivalent short date string representation.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.LongDate">
            <summary>
            Gets the value of this instance to its equivalent long date string representation.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.ShortTime">
            <summary>
            Gets the value of this instance to its equivalent short time string representation.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.LongTime">
            <summary>
            Gets the value of this instance to its equivalent long time string representation.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Time.DateTimeValue">
            <summary>
            Gets the internal time value.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem">
            <summary>
            Represents a single XmlNode selected using an XML task.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.#ctor(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Initializes a new instance of an XmlNodeTaskItem
            </summary>
            <param name="xpathNavigator">The selected XmlNode</param>
            <param name="reservedMetaDataPrefix">The prefix to attach to the reserved metadata properties.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.ToString">
            <summary>
            Returns a string representation of the XmlNodeTaskItem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.op_Explicit(MSBuild.Community.Tasks.Xml.XmlNodeTaskItem)~System.String">
            <summary>
            Returns the ItemSpec when the XmlNodeTaskItem is explicitly cast as a <see cref="T:System.String"/>
            </summary>
            <param name="taskItemToCast">The XmlNodeTaskItem</param>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.CloneCustomMetadata">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
            <summary>
            
            </summary>
            <param name="destinationItem"></param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.GetMetadata(System.String)">
            <summary>
            
            </summary>
            <param name="metadataName"></param>
            <returns></returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.RemoveMetadata(System.String)">
            <summary>
            
            </summary>
            <param name="metadataName"></param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.SetMetadata(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="metadataName"></param>
            <param name="metadataValue"></param>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.ItemSpec">
            <summary>
            
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.MetadataCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlNodeTaskItem.MetadataNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Xml.XmlQuery">
            <summary>
            Reads a value or values from lines of XML
            </summary>
            <remarks>
      Use the Lines property (possibly populated from the the ReadLinesFromFile task) if you want to perform multiple
      queries against some XML in memory. Use the XmlFileName property to query a large XML file.
      <para>
        An XPath expression can return multiple nodes in the <see cref="P:MSBuild.Community.Tasks.Xml.XmlQuery.Values"/> collection.
        The number of nodes returned is availabe in the <see cref="P:MSBuild.Community.Tasks.Xml.XmlQuery.ValuesCount"/> output TaskParameter.
      </para>
      <para>
        When the XPath expression resolves to an element node, all of the
        attributes of the element are added as metadata to the returned <see cref="T:Microsoft.Build.Framework.ITaskItem"/>.
        In addition, some reserved metadata properties are available on all element nodes.
        They are all prefixed with the <see cref="P:MSBuild.Community.Tasks.Xml.XmlQuery.ReservedMetaDataPrefix"/>,
        which is a single underscore (_) by default.
        <list type="table">
          <listheader>
            <term>Reserved Property</term>
          </listheader>
          <item>
            <term>_value</term>
            <description>The value of the node (non-xml text between the opening and closing tags).</description>
          </item>
          <item>
            <term>_innerXml</term>
            <description>The markup representing the children of this node.</description>
          </item>
          <item>
            <term>_outerXml</term>
            <description>The markup representing this node and all its child nodes.</description>
          </item>
        </list>
      </para>
    </remarks><example>
      Read an attribute value by selecting it with an XPath expression:
      <code>
        <![CDATA[
<ReadLinesFromFile File="web.config">
    <Output TaskParameter="Lines" ItemName="FileContents" />
</ReadLinesFromFile>

<XmlQuery Lines="@(FileContents)"
    XPath = "/configuration/system.web/compilation/@defaultLanguage">
	<Output TaskParameter="Values" PropertyName="CompilationLanguage" />
</XmlQuery>

<Message Text="The default language is $(CompilationLanguage)." />
]]>
      </code>
    </example><example>
      Read attribute values (from an XML file) using item metadata on a selected element node:
      <code>
        <![CDATA[
<XmlQuery XmlFileName="$(MSBuildProjectDirectory)\web.config"
    XPath = "/configuration/system.web/compilation">
	<Output TaskParameter="Values" ItemName="CompilationElement" />
</XmlQuery>

<Message Text="The default language is: $(CompilationElement.defaultLanguage)." />
<Message Text="Debug is enabled: $(CompilationElement.debug)." />
]]>
      </code>
    </example><example>
      Read an element value (requires use of the reserved metadata property "_value"):
      <code>
        <![CDATA[
<ReadLinesFromFile File="web.config">
    <Output TaskParameter="Lines" ItemName="FileContents" />
</ReadLinesFromFile>

<XmlQuery Lines="@(FileContents)"
    XPath = "/configuration/singleValue/LastName">
	<Output TaskParameter="Values" PropertyName="LastNameElement" />
</XmlQuery>

<Message Text="The last name is %(LastNameElement._value)" />
]]>
      </code>
    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlQuery.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.Lines">
            <summary>
            The lines of a valid XML document
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.XmlFileName">
            <summary>
            Gets or sets the name of an XML file to query
            </summary>
            <value>The full path of the XML file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.NamespaceDefinitions">
            <summary>
            A collection of prefix=namespace definitions used to query the XML document
            </summary>
            <example>
      Defining multiple namespaces:
      <code>
        <![CDATA[
<XmlMassUpdate ContentFile="web.config"
  SubstitutionsRoot="/configuration/substitutions"
 	NamespaceDefinitions = "soap=http://www.w3.org/2001/12/soap-envelope;x=http://www.w3.org/1999/XSL/Transform">
/>]]>
      </code>
    </example>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.XPath">
            <summary>
            The query used to identify the values in the XML document
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.Values">
            <summary>
            The values selected by <see cref="P:MSBuild.Community.Tasks.Xml.XmlQuery.XPath"/>
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.ValuesCount">
            <summary>
            The number of values returned in <see cref="P:MSBuild.Community.Tasks.Xml.XmlQuery.Values"/>
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xml.XmlQuery.ReservedMetaDataPrefix">
            <summary>
            The string that is prepended to all reserved metadata properties.
            </summary>
            <remarks>The default value is a single underscore: '_'
            <para>All attributes of an element node are added as metadata to the returned ITaskItem,
            so this property can be used to avoid clashes with the reserved properties.
            For example, if you selected the following node:
            <code><![CDATA[ <SomeNode _name="x" _value="y" /> ]]></code>
            the <c>_value</c> attribute would clash with the <c>value</c> reserved property, when using
            the default prefix. If you set the ReservedMetaDataPrefix to another value (two underscores '__')
            there would be no clash. You would be able to select the attribute using <c>%(item._value)</c>
            and the value of the node using <c>%(item.__value)</c>.</para></remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.Xml.XmlTaskHelper">
            <summary>
            Provides methods used by all of the XML tasks
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlTaskHelper.JoinItems(Microsoft.Build.Framework.ITaskItem[])">
            <summary>
            Concatenates the string value of a list of ITaskItems into a single string
            </summary>
            <param name="items">The items to concatenate</param>
            <returns>A single string containing the values from all of the items</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xml.XmlTaskHelper.LoadNamespaceDefinitionItems(System.Xml.XmlNamespaceManager,Microsoft.Build.Framework.ITaskItem[])">
            <summary>
            Uses the prefix=namespace definitions in <paramref name="definitions"/> to populate <paramref name="namespaceManager"/>
            </summary>
            <param name="namespaceManager">The <see cref="T:System.Xml.XmlNamespaceManager"/> to populate.</param>
            <param name="definitions">The prefix=namespace definitions.</param>
        </member>
        <member name="T:MSBuild.Community.Tasks.Xslt">
            <summary>
            A task to merge and transform a set of xml files.
            </summary>
            <remarks>
      <p>
        The xml files of parameter <see cref="P:MSBuild.Community.Tasks.Xslt.Inputs"/>
        are merged into one xml document,
        wrapped with a root tag <see cref="P:MSBuild.Community.Tasks.Xslt.RootTag"/>
      </p>
      <p>
        If only one input file is provided,
        merging and wrapping can be omitted
        by setting <see cref="P:MSBuild.Community.Tasks.Xslt.RootTag"/> to an empty string.
      </p>
      <p>
        The root tag can be given any number of attributes
        by providing a list of semicolon-delimited name/value pairs
        to parameter <see cref="P:MSBuild.Community.Tasks.Xslt.RootAttributes"/>.
        For example: <code>RootAttributes="foo=bar;date=$(buildDate)"</code>
      </p>
      <p>
        Parameter <see cref="P:MSBuild.Community.Tasks.Xslt.RootAttributes"/> defaults to
        one attribute with a name specified by <see cref="F:MSBuild.Community.Tasks.Xslt.CREATED_ATTRIBUTE"/>,
        and a local time stamp as value.
        To suppress the default value, an empty parameter
        <code>RootAttributes=""</code>
        must be specified explicitely.
      </p>
      <p>
        The xsl transformation file
        specified by parameter <see cref="P:MSBuild.Community.Tasks.Xslt.Xsl"/>
        is applied on the input.
      </p>
      <p>
        The <see cref="T:Microsoft.Build.Framework.ITaskItem"/> <see cref="P:MSBuild.Community.Tasks.Xslt.Xsl"/>
        can be given any number of metadata,
        which will be handed to the xsl transformation
        as parameters.
      </p>
      <p>
        The output is written to the file
        specified by parameter <see cref="P:MSBuild.Community.Tasks.Xslt.Output"/>.
      </p>
    </remarks><example>
      This example for generating a report
      from a set of NUnit xml results:
      <code>
        <![CDATA[
<ItemGroup>
    <nunitReportXslFile Include="$(MSBuildCommunityTasksPath)\$(nunitReportXsl)">
        <project>$(project)</project>
        <configuration>$(configuration)</configuration>
        <msbuildFilename>$(MSBuildProjectFullPath)</msbuildFilename>
        <msbuildBinpath>$(MSBuildBinPath)</msbuildBinpath>
        <xslFile>$(MSBuildCommunityTasksPath)\$(nunitReportXsl)</xslFile>
    </nunitReportXslFile>
</ItemGroup>

<Target Name="test-report" >
    <Xslt Inputs="@(nunitFiles)"
        RootTag="mergedroot"
        Xsl="@(nunitReportXslFile)" 
        Output="$(testDir)\TestReport.html" />
</Target>]]>
      </code>

      This examples shows all available task attributes:
      <code>
        <![CDATA[
<Time Format="yyyyMMddHHmmss">
    <Output TaskParameter="LocalTimestamp" PropertyName="buildDate" />
</Time>

<Xslt
     Inputs="@(xmlfiles)"
     RootTag="mergedroot"
     RootAttributes="foo=bar;date=$(buildDate)"
     Xsl="transformation.xsl"
     Output="report.html"
/>]]>
      </code>
    </example>
        </member>
        <member name="F:MSBuild.Community.Tasks.Xslt.CREATED_ATTRIBUTE">
            <summary>
            The name of the default attribute
            of the <see cref="P:MSBuild.Community.Tasks.Xslt.RootTag"/>.
            The value is <c>"created"</c>,
            and the attribute will contain a local time stamp.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Xslt.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            Returns <c>true</c> if the task successfully executed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xslt.Inputs">
            <summary>
            Gets or sets the xml input files.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xslt.RootTag">
            <summary>
            Gets or sets the xml tag name
            of the root tag wrapped
            around the merged xml input files.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xslt.RootAttributes">
            <summary>
            Gets or sets the list of
            semicolon-delimited name/value pairs
            of the <see cref="P:MSBuild.Community.Tasks.Xslt.RootTag"/>.
            For example: <code>RootAttributes="foo=bar;date=$(buildDate)"</code>
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xslt.Xsl">
            <summary>
            Gets or sets the path of the
            xsl transformation file to apply.
            </summary>
            <remarks>
            The property can be given any number of metadata,
            which will be handed to the xsl transformation
            as parameters.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Xslt.Output">
            <summary>
            Gets or sets the path of the output file.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.FileUpdate">
            <summary>
            Replace text in file(s) using a Regular Expression.
            </summary>
            <example>Search for a version number and update the revision.
            <code><![CDATA[
            <FileUpdate Files="version.txt"
                Regex="(\d+)\.(\d+)\.(\d+)\.(\d+)"
                ReplacementText="$1.$2.$3.123" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.FileUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileUpdate"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.FileUpdate.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.Files">
            <summary>
            Gets or sets the files to update.
            </summary>
            <value>The files.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.Regex">
            <summary>
            Gets or sets the regex.
            </summary>
            <value>The regex.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.IgnoreCase">
            <summary>
            Gets or sets a value specifies case-insensitive matching. .
            </summary>
            <value><c>true</c> if [ignore case]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.Multiline">
            <summary>
            Gets or sets a value changing the meaning of ^ and $ so they match at the beginning and end, 
            respectively, of any line, and not just the beginning and end of the entire string.
            </summary>
            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.Singleline">
            <summary>
            Gets or sets a value changing the meaning of the dot (.) so it matches 
            every character (instead of every character except \n). 
            </summary>
            <value><c>true</c> if singleline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.ReplacementCount">
            <summary>
            Gets or sets the maximum number of times the replacement can occur.
            </summary>
            <value>The replacement count.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.ReplacementText">
            <summary>
            Gets or sets the replacement text.
            </summary>
            <value>The replacement text.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FileUpdate.Encoding">
            <summary>
            The character encoding used to read and write the file.
            </summary>
            <remarks>Any value returned by <see cref="P:System.Text.Encoding.WebName"/> is valid input.
            <para>The default is <c>utf-8</c></para></remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.FxCop">
            <summary>
            Uses FxCop to analyse managed code assemblies and reports on
            their design best-practice compliance.
            </summary>
            <example>
            <para>Shows how to analyse an assembly and use an XSLT stylesheet 
            to present the report as an HTML file. If the static anlysis fails,
            the build does not stop - this is controlled with the <c>FailOnError</c>
            parameter.</para>
            <code><![CDATA[
            <FxCop 
              TargetAssemblies="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.dll"
              RuleLibraries="@(FxCopRuleAssemblies)" 
              Rules="Microsoft.Design#CA1012;-Microsoft.Performance#CA1805"
              AnalysisReportFileName="Test.html"
              DependencyDirectories="$(MSBuildCommunityTasksPath)"
              FailOnError="False"
              ApplyOutXsl="True"
              OutputXslFileName="C:\Program Files\Microsoft FxCop 1.32\Xml\FxCopReport.xsl"
            />
            ]]></code>
            </example>
            <remarks>If you include the <c>MSBuild.Community.Tasks.Targets</c> file 
            in you build project, the ItemGroup <c>@(FxCopRuleAssemblies)</c> is defined
            with the standard FxCop Rules Assemblies.</remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.FxCop.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.FxCop.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.FxCop.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments 
            to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass 
            directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.FxCop.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid. 
            </summary>
            <returns>true if all task parameters are valid; otherwise, false</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.FxCop.GetWorkingDirectory">
            <summary>
            Returns the directory in which to run the executable file.
            </summary>
            <returns>
            The directory in which to run the executable file, 
            or a null reference (Nothing in Visual Basic) if the executable file 
            should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.ApplyOutXsl">
            <summary>
            Applies the XSL transformation specified in /outXsl to the 
            analysis report before saving the file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.DirectOutputToConsole">
            <summary>
            Directs analysis output to the console or to the 
            Output window in Visual Studio .NET. By default, 
            the XSL file FxCopConsoleOutput.xsl is applied to the 
            output before it is displayed.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.DependencyDirectories">
            <summary>
            Specifies additional directories to search for assembly dependencies. 
            FxCopCmd always searches the target assembly directory and the current 
            working directory.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.TargetAssemblies">
            <summary>
            Specifies the target assembly to analyze.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.ConsoleXslFileName">
            <summary>
            Specifies the XSL or XSLT file that contains a transformation to 
            be applied to the analysis output before it is displayed in the console.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.ImportFiles">
            <summary>
            Specifies the name of an analysis report or project file to import. 
            Any messages in the imported file that are marked as excluded are not 
            included in the analysis results.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.RuleLibraries">
            <summary>
            Specifies the filename(s) of FxCop rule assemblies
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.Rules">
            <summary>
            The list of rules to run
            </summary>
            <remarks>Rule names should be provided using the format Library#RuleNumber. For example <c>Microsoft.Design#CA1012</c>
            <para>Place a single hyphen (-) in front of the rule name to exclude it. For example <c>-Microsoft.Performance#CA1805</c></para>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.AnalysisReportFileName">
            <summary>
            Specifies the file name for the analysis report.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.OutputXslFileName">
            <summary>
            Specifies the XSL or XSLT file that is referenced by the 
            xml-stylesheet processing instruction in the analysis report.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.PlatformDirectory">
            <summary>
            Specifies the location of the version of Mscorlib.dll 
            that was used when building the target assemblies if this 
            version is not installed on the computer running FxCopCmd.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.ProjectFile">
            <summary>
            Specifies the filename of FxCop project file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.IncludeSummaryReport">
            <summary>
            Includes a summary report with the informational 
            messages returned by FxCopCmd.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.TypeList">
            <summary>
            Comma-separated list of type names to analyze.  This option disables 
            analysis of assemblies, namespaces, and resources; only the specified 
            types and their members are included in the analysis.  
            Use the wildcard character '*' at the end of the name to select multiple types.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.SaveResults">
            <summary>
            Saves the results of the analysis in the project file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>The working directory.</value>
            <returns>
            The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.Verbose">
            <summary>
            Gets or sets a value indicating whether the output is verbose.
            </summary>
            <value><c>true</c> if verbose; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.FailOnError">
            <summary>
            Gets or sets a value indicating whether the build should
            fail if static code analysis reports errors. Defaults to 
            <c>true</c>.
            </summary>
            <value><c>true</c> if verbose; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FxCop.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.ServiceActions">
            <summary>
            Defines the actions that can be performed on a service.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceActions.Start">
            <summary>
            Starts a service.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceActions.Stop">
            <summary>
            Stops a service.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceActions.Restart">
            <summary>
            Restarts a service.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceActions.Pause">
            <summary>
            Pauses a running service.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceActions.Continue">
            <summary>
            Continues a paused service.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.ServiceController">
            <summary>
            Task that can control a Windows service.
            </summary>
            <example>
            <para>Restart Web Server</para>
            <code><![CDATA[
            <ServiceController ServiceName="w3svc" Action="Restart" />
            ]]></code>
            </example>
        </member>
        <member name="T:MSBuild.Community.Tasks.ServiceQuery">
            <summary>
            Task that can determine the status of a specified service
            on a target server.
            </summary>
            <example>
            <para>Check status of SQL Server</para>
            <code><![CDATA[
            <ServiceQuery ServiceName="MSSQLServer">
                <Output TaskParameter="Status" PropertyName="ResultStatus" />
            </ServiceQuery>
            <Message Text="MSSQLServer Service Status: $(ResultStatus)"/>
            ]]></code>
            </example>
        </member>
        <member name="F:MSBuild.Community.Tasks.ServiceQuery.UNKNOWN_STATUS">
            <summary>
            The unknown <see cref="P:MSBuild.Community.Tasks.ServiceQuery.Status"/>
            returned when the service does not exist.
            The value is "Unknown".
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.ServiceQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ServiceQuery"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.ServiceQuery.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.ServiceQuery.GetServiceController">
            <summary>
            Gets the service controller.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.ServiceName">
            <summary>
            Gets or sets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.MachineName">
            <summary>
            Gets or sets the name of the machine.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status of the service.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.CanPauseAndContinue">
            <summary>
            Gets a value indicating whether the service can be paused and resumed.
            </summary>
            <value>
            	<c>true</c> if this instance can pause and continue; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.CanShutdown">
            <summary>
            Gets a value indicating whether the service should be notified when the system is shutting down. 
            </summary>
            <value>
            	<c>true</c> if this instance can shutdown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.CanStop">
            <summary>
            Gets a value indicating whether the service can be stopped after it has started. 
            </summary>
            <value><c>true</c> if this instance can stop; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.DisplayName">
            <summary>
            Gets a friendly name for the service. 
            </summary>
            <value>The name of the display.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceQuery.Exists">
            <summary>
            Gets a value indicating whether the service exists.
            </summary>
            <value><c>true</c> if the service exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:MSBuild.Community.Tasks.ServiceController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ServiceController"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.ServiceController.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceController.Action">
            <summary>
            Gets or sets the <see cref="T:ServiceActions"/> to perform on the service.
            </summary>
            <value>The action to perform on the service.</value>
            <enum cref="T:MSBuild.Community.Tasks.ServiceActions"/>
        </member>
        <member name="P:MSBuild.Community.Tasks.ServiceController.Timeout">
            <summary>
            Gets or sets the timeout for the command. The default is
            one minute.
            </summary>
            <value>The timeout for the command.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssClean">
            <summary>
            Task that can strip the source control information from a
            Visual Studio Solution and subprojects.
            </summary>
            <remarks>This task is useful if you keep an archive of the
            source tree at each build milestone, because it's irritating to have
            to remove source control binding manually once you've copied a
            version of the code from your archive.</remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssClean.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.FtpUpload">
            <summary>
            Uploads a file using File Transfer Protocol (FTP).
            </summary>
            <example>Upload a file.
            <code><![CDATA[
            <FtpUpload 
                LocalFile="MSBuild.Community.Tasks.zip" 
                RemoteUri="ftp://localhost/MSBuild.Community.Tasks.zip" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.FtpUpload.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FtpUpload"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.FtpUpload.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.FtpUpload.LocalFile">
            <summary>
            Gets or sets the local file to upload.
            </summary>
            <value>The local file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FtpUpload.RemoteUri">
            <summary>
            Gets or sets the remote URI to upload.
            </summary>
            <value>The remote URI.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FtpUpload.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FtpUpload.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.FtpUpload.UsePassive">
            <summary>
            Gets or sets the behavior of a client application's data transfer process.
            </summary>
            <value><c>true</c> if [use passive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.AppPoolCreate">
            <summary>
            Creates a new application pool on a local or remote machine with IIS installed.  The default is 
            to create the new application pool on the local machine.  If connecting to a remote machine, you can
            specify the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Username"/> and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Password"/> for the task
            to run under.
            </summary>
            <example>Create a new application pool on the local machine.
            <code><![CDATA[
            <AppPoolCreate AppPoolName="MyAppPool" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.AppPoolCreate.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.ApplicationPoolName">
            <summary>
            Gets or sets the name of the application pool.
            </summary>
            <value>The name of the application pool.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AppPoolAutoStart">
            <summary>
            The AppPoolAutoStart property indicates to the World Wide Web Publishing Service (WWW service)
            to automatically start an application pool when the application pool is created or when IIS
            is started, if the value of this property is set to true.
            </summary>
            <value>Value indicating if AppPoolAutoStart is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AppPoolIdentityType">
            <summary>
            The AppPoolIdentityType property allows application pools to run as a specific user account:
            
            0 - The application pool runs as NT AUTHORITY\SYSTEM.
            1 - The application pool runs as NT AUTHORITY\LOCAL SERVICE.
            2 - The application pool runs as NT AUTHORITY\NETWORK SERVICE.
            3 - The application pool runs as a specific user account, defined by the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.WAMUserName"/> property.
            </summary>
            <value>Value indicating the application pool identity type.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AppPoolQueueLength">
            <summary>
            The AppPoolQueueLength property indicates to the Universal Listener how many requests
            to queue up for an application pool before rejecting future requests. When the limit
            for this property is exceeded, IIS rejects the additional requests with a 503 error.
            </summary>
            <value>Value indicating the application pool queue length.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AutoShutdownAppPoolExe">
            <summary>
            The AutoShutdownAppPoolExe property specifies an executable to run when the World Wide Web
            Publishing Service (WWW service) shuts down an application pool for rapid fail protection. You
            can use the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AutoShutdownAppPoolParams"/> property to send parameters to the executable.
            </summary>
            <value>Value indicating the application pool auto shutdown executable.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.AutoShutdownAppPoolParams">
            <summary>
            The AutoShutdownAppPoolParams property specifies any command-line parameters for the executable that
            is specified in the AutoShutdownAppPoolExe property. You can use these two properties in the following
            way to send e-mail, for example, when the World Wide Web Publishing Service (WWW service) shuts down
            an application pool for rapid fail protection:
            
            AutoShutdownAppPoolExe = "C:\LogAndSendMail.bat"
            AutoShutdownAppPoolParams = "-AppPoolName %1%"
            
            where %1% represents the application pool name.
            </summary>
            <value>Value indicating the parameters for the application pool auto shutdown executable.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.CPUAction">
            <summary>
            The CPUAction property configures the action(s) that IIS takes when Microsoft Windows NT ® job objects
            run. Only one Windows NT job object exists per application pool, therefore the CPUAction property
            is configured on a per application pool basis.
            
            Possible values:
            0 - No action is taken except that a warning is written to the event log when the CPU limit is exceeded.
            1 - Application pool worker processes that exceed their CPU limit will be forced to shut down.
            </summary>
            <value>Value indicating the CPU action.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.CPULimit">
            <summary>
            The CPULimit property configures the maximum percentage of CPU resources that worker processes
            in an application pool are allowed to consume over a period of time, as indicated by the
            <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.CPUResetInterval"/> property. Set this property by specifying a percentage of CPU
            usage, multiplied by 1000. For example, if you want the CPU usage limit to be 50%, set CPULimit to 50,000.
            </summary>
            <value>Value indicating the CPU limit.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.CPUResetInterval">
            <summary>
            The CPUResetInterval property specifies the reset period (in minutes) for CPU monitoring and
            throttling limits on the application pool. When the number of minutes elapsed since the last
            process accounting reset equals the number specified by this property, IIS will reset the CPU
            timers for both the logging and limit intervals. Setting the value of this property to 0
            disables CPU monitoring.
            </summary>
            <value>Value indicating the CPU reset interval.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.DisallowOverlappingRotation">
            <summary>
            The DisallowOverlappingRotation property specifies whether or not the World Wide Web Publishing
            Service (WWW Service) should start up another worker process to replace the existing worker
            process while it is shutting down.
            </summary>
            <value>Value indicating the DisallowOverlappingRotation.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.DisallowRotationOnConfigChange">
            <summary>
            The DisallowRotationOnConfigChange property specifies whether or not the World Wide Web Publishing
            Service (WWW Service) should rotate worker processes in an application pool when the configuration
            has changed. This means that the worker processes will not pick up application pool changes to
            values passed to the worker process, such as <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.IdleTimeout"/> and <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartRequests"/>.
            </summary>
            <value>Value indicating the DisallowRotationOnConfigChange.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.IdleTimeout">
            <summary>
            The IdleTimeout property specifies how long (in minutes) a worker process should run idle if no new
            requests are received and the worker process is not processing requests. After the allotted time
            passes, the worker process should request to be shut down by the World Wide Web Publishing Service (WWW Service).
            </summary>
            <value>Value indicating the idle timeout.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.LoadBalancerCapabilities">
            <summary>
            The LoadBalancerCapabilities property specifies behavior when a service is unavailable. A setting of 1
            terminates the connection. A setting of 2 sends error code 503.
            </summary>
            <value>Value indicating the load balancer capabilities.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.LogEventOnRecycle">
            <summary>
            The LogEventOnRecycle property specifies that IIS should log an event when an application pool is
            recycled. Application pools recycle for a variety of reasons. In order for IIS to log the event, the
            LogEventOnRecycle property must have a bit set corresponding to the reason for the recycle.
            </summary>
            <value>Value indicating which recycle events to log.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.LogonMethod">
            <summary>
            The LogonMethod property contains an integer that specifies the logon method for cleartext 
            logons. Valid settings are:
            
            0 for interactive logon.
            1 for batch logon.
            2 for network logon.
            3 for cleartext logon.
            </summary>
            <value>Value indicating the logon method.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.MaxProcesses">
            <summary>
            The MaxProcesses property determines the maximum number of worker processes an application pool
            allows to service requests for an application pool. This property cannot be set to 0 because there
            are no unmanaged pools.
            </summary>
            <value>Value indicating the maximum number of worker processes allowed by the application pool.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.OrphanActionExe">
            <summary>
            The OrphanActionExe property specifies an executable to run when the World Wide Web Publishing
            Service (WWW service) orphans a worker process. You can use the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.OrphanActionParams"/> property
            to send parameters to the executable.
            </summary>
            <value>The value for the orphan action executable.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.OrphanActionParams">
            <summary>
            The OrphanActionParams property specifies command-line parameters for the executable
            specified by the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.OrphanActionExe"/> property.
            </summary>
            <value>Value indicating the orphan action parameters.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.OrphanWorkerProcess">
            <summary>
            The OrphanWorkerProcess property, when set to true, notifies the World Wide Web Publishing
            Service (WWW Service) not to terminate a worker process that fails to respond to pings, but
            to instead orphan the worker process in the application pool if the worker process suffers
            fatal errors.
            </summary>
            <value>Value indicating the orphan worker process.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartMemory">
            <summary>
            The PeriodicRestartMemory property specifies the amount of virtual memory (in KB) that a
            worker process can use before the worker process recycles. The maximum value supported
            for this property is 4,294,967 KB.
            </summary>
            <value>Value indicating the amount of memory.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartPrivateMemory">
            <summary>
            The PeriodicRestartPrivateMemory property specifies the amount of private memory (in KB) that a
            worker process can use before the worker process recycles. The maximum value supported
            for this property is 4,294,967 KB.
            </summary>
            <value>Value indicating the amount of memory.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartRequests">
            <summary>
            The PeriodicRestartRequests property indicates the number of requests the OOP application
            should process, after which it is recycled.
            </summary>
            <value>Value indicating the number of requests.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartSchedule">
            <summary>
            The PeriodicRestartSchedule property specifies the time (in 24 hour format) that the application
            will be rotated. Each time is in local time and is specified in the following format:
            
            PeriodicRestartSchedule="hh:mm,hh:mm,hh:mm"
            </summary>
            <value>Value indicating the restart schedule.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PeriodicRestartTime">
            <summary>
            The PeriodicRestartTime property specifies the period of time, in minutes, after which IIS
            rotates an isolated OOP application. Setting the value of this property to 0 disables the
            property. The maximum supported value for this property is 71,582.
            </summary>
            <value>Value indicating the restart time period.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PingingEnabled">
            <summary>
            The PingingEnabled property specifies whether the World Wide Web Publishing Service
            (WWW Service) should periodically monitor the health of a worker process. Setting the
            value of this property to true indicates to the WWW service to monitor the worker
            processes to ensure that the they are running and healthy.
            </summary>
            <value>Value indicating if pinging is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PingInterval">
            <summary>
            The PingInterval property specifies the period of time (in seconds) between health-monitoring
            pings that the World Wide Web Publishing Service (WWW Service) sends to a worker process.
            </summary>
            <value>Value indicating the ping interval.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.PingResponseTime">
            <summary>
            The PingResponseTime property specifies the amount of time (in seconds) that a worker process
            is given to respond to a health monitoring ping. After the time limit is exceeded, the World
            Wide Web Publishing Service (WWW Service) terminates the worker process.
            </summary>
            <value>Value indicating the ping response time.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtection">
            <summary>
            Setting the RapidFailProtection property to true instructs the World Wide Web Publishing
            Service (WWW service) to put all applications in an application pool out of service if the
            number of worker process crashes has reached the maximum specified by the
            <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtectionMaxCrashes"/> property, within the number of minutes specified
            by the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtectionInterval"/> property.
            </summary>
            <value>Value indicating if rapid fail protection is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtectionInterval">
            <summary>
            The RapidFailProtectionInterval property specifies the number of minutes before the failure
            count for a process is reset. See <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtection"/>.
            </summary>
            <value>Value indicating the rapid fail protection interval.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtectionMaxCrashes">
            <summary>
            The RapidFailProtectionMaxCrashes property specifies the maximum number of failures
            allowed within the number of minutes specified by the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtectionInterval"/> 
            property. See <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.RapidFailProtection"/>.
            </summary>
            <value>Value indicating the maximum number of crashes.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.ShutdownTimeLimit">
            <summary>
            The ShutdownTimeLimit property specifies the amount of time (in seconds) after a recycle
            threshold has been reached that IIS waits for all old requests to finish running in a worker
            process before terminating the worker process.
            </summary>
            <value>Value indicating the shutdown time limit.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.SMPAffinitized">
            <summary>
            Setting the SMPAffinitized property to true indicates that a particular worker process
            assigned to an application pool should be assigned to a given CPU. This property is used
            in conjunction with the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.SMPProcessorAffinityMask"/> property to configure a
            particular processor a worker process will be assigned to.
            </summary>
            <value>Value indicating if SMPAffinitized is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.SMPProcessorAffinityMask">
            <summary>
            The SMPProcessorAffinityMask property configures the hexadecimal processor mask. The hexadecimal
            processor mask indicates to which CPU the worker processes in an application pool should be
            bound. Before this property takes affect, the <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.SMPAffinitized"/> property must be set
            to true for the application pool. These properties cannot be set through IIS Manager.
            
            Do not set this property to zero. Doing so causes no SMP affinity to be configured, creating an
            error condition. The default DWORD value is 4294967295 (or -1), which is represented in hexadecimal
            as 0xFFFFFFFF. A value of 0xFFFFFFFF in SMPProcessorAffinityMask indicates that all processors are enabled.
            </summary>
            <value>Value indicating the SMP processor affinity bit mask.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.StartupTimeLimit">
            <summary>
            The value of the StartupTimeLimit property specifies the amount of time (in seconds) that the World Wide
            Web Publishing Service (WWW Service) should wait for a worker process to finish starting up and
            reporting to the WWW Service.
            </summary>
            <value>Value indicating the startup time limit.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.WAMUserName">
            <summary>
            The WAMUserName property specifies the account user name that IIS uses by default as the COM+
            application identity for newly created IIS out-of-process applications. The values of this
            property and its companion property, <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.WAMUserPass"/>, are set when IIS is installed, and
            match the user name and password values in the Microsoft Windows user account, which is established
            at the same time. Changing the value of this property is not recommended. If you do, change
            it to a valid Windows user account, and change WAMUserPass to the corresponding password
            for the new account.
            
            Important:
            Changes to WAMUserName and WAMUserPass may disrupt the operation of existing IIS out-of-process
            applications. You can synchronize application identities using Component Services to edit the
            user name and password values, found on the Identity tab of the property sheet for each package.
            
            In-process applications are not affected by these property values.
            </summary>
            <value>Value indicating the username.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.WAMUserPass">
            <summary>
            The WAMUserPass property specifies the password for the account that IIS uses by default as the COM+
            application identity for newly created IIS out-of-process applications. The values of this property
            and its companion property, <see cref="P:MSBuild.Community.Tasks.IIS.AppPoolCreate.WAMUserName"/>, are set when IIS is installed, and match the
            password and user name values in the Microsoft Windows user account (IWAM_ MachineName, where MachineName
            is the name of the machine on which IIS is installed) established at the same time.
            
            Important:
            Changing the value of this property is not recommended. If you do, you must change the Windows account
            password to the identical value. You must also synchronize existing IIS out-of-process application
            identities, using Component Services to edit the user name and password values, which are found on the
            Identity tab of the property sheet for each package.
            
            In-process applications are not affected by these property values.
            </summary>
            <value>Value indicating the password.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebDirectoryCreate">
            <summary>
            Creates a new web directory on a local or remote machine with IIS installed.  The default is 
            to create the new web directory on the local machine.  The physical path is required to already exist
            on the target machine.  If connecting to a remote machine, you can specify the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Username"/>
            and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Password"/> for the task to run under.
            </summary>
            <example>Create a new web directory on the local machine.
            <code><![CDATA[
            <WebDirectoryCreate VirtualDirectoryName="MyVirDir"
                VirtualDirectoryPhysicalPath="C:\Inetpub\MyWebDir" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.VirtualDirectoryName">
            <summary>
            Gets or sets the name of the virtual directory.
            </summary>
            <value>The name of the virtual directory.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.VirtualDirectoryPhysicalPath">
            <summary>
            Gets or sets the virtual directory physical path.  The physical directory must
            exist before this task executes.
            </summary>
            <value>The virtual directory physical path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessExecute">
            <summary>
            Gets or sets a value that indicates if the file
            or the contents of the folder may be executed, regardless of file type.
            </summary>
            <value>A value indicating if AccessExecute is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessNoRemoteExecute">
            <summary>
            A value of true indicates that remote requests to execute applications
            are denied; only requests from the same computer as the IIS server succeed
            if the AccessExecute property is set to true. You cannot set 
            AccessNoRemoteExecute to false to enable remote requests, and set
            <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessExecute"/> to false to disable local requests.
            </summary>
            <value>Value indicating if AccessNoRemoteExecute is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessNoRemoteRead">
            <summary>
            A value of true indicates that remote requests to view files are denied; only
            requests from the same computer as the IIS server succeed if the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessRead"/>
            property is set to true. You cannot set <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessNoRemoteRead"/> to false to enable
            remote requests, and set <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessRead"/> to false to disable local requests.
            </summary>
            <value>Value indicating if AccessNoRemoteRead is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessNoRemoteScript">
            <summary>
            A value of true indicates that remote requests to view dynamic content are denied; only
            requests from the same computer as the IIS server succeed if the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessScript"/> property
            is set to true. You cannot set AccessNoRemoteScript to false to enable remote requests, 
            and set <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessScript"/> to false to disable local requests.
            </summary>
            <value>Value indicating if AccessNoRemoteScript is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessNoRemoteWrite">
            <summary>
            A value of true indicates that remote requests to create or change files are denied; only
            requests from the same computer as the IIS server succeed if the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessWrite"/> property
            is set to true. You cannot set AccessNoRemoteWrite to false to enable remote requests, 
            and set <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessWrite"/> to false to disable local requests.
            </summary>
            <value>Value indicating if AccessNoRemoteWrite is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessRead">
            <summary>
            A value of true indicates that the file or the contents of the folder may be read
            through Microsoft Internet Explorer.
            </summary>
            <value>Value indicating if AccessRead is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSource">
            <summary>
            A value of true indicates that users are allowed to access source code if either
            Read or Write permissions are set. Source code includes scripts in Microsoft ® Active
            Server Pages (ASP) applications.
            </summary>
            <value>Value indicating if AccessSource is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessScript">
            <summary>
            A value of true indicates that the file or the contents of the folder may be executed
            if they are script files or static content. A value of false only allows static files, 
            such as HTML files, to be served.
            </summary>
            <value>Value indicating if AccessScript is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSsl">
            <summary>
            A value of true indicates that file access requires SSL file permission processing, with
            or without a client certificate.
            </summary>
            <value>Value indicating if AccessSsl is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSsl128">
            <summary>
            A value of true indicates that file access requires SSL file permission processing
            with a minimum key size of 128 bits, with or without a client certificate.
            </summary>
            <value>Value indicating if AccessSsl128 is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslMapCert">
            <summary>
            A value of true indicates that SSL file permission processing maps a client certificate
            to a Microsoft Windows ® operating system user-account. The <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslNegotiateCert"/> property
            must also be set to true for the mapping to occur.
            </summary>
            <value>Value indicating if AccessSslMapCert is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslNegotiateCert">
            <summary>
            A value of true indicates that SSL file access processing requests a certificate from
            the client. A value of false indicates that access continues if the client does not have
            a certificate. Some versions of Internet Explorer will close the connection if the server
            requests a certificate and a certificate is not available (even if <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslRequireCert"/> 
            is also set to true).
            </summary>
            <value>Value indicating if AccessSslNegotiateCert is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslRequireCert">
            <summary>
            A value of true indicates that SSL file access processing requests a certificate from the
            client. If the client provides no certificate, the connection is closed. <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessSslNegotiateCert"/> 
            must also be set to true when using AccessSSLRequireCert.
            </summary>
            <value>Value indicating if AccessSslRequireCert is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AccessWrite">
            <summary>
            A value of true indicates that users are allowed to upload files and their associated
            properties to the enabled directory on your server or to change content in a Write-enabled
            file. Write can be implemented only with a browser that supports the PUT feature of
            the HTTP 1.1 protocol standard.
            </summary>
            <value>Value indicating if AccessWrite is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AnonymousPasswordSync">
            <summary>
            The AnonymousPasswordSync property indicates whether IIS should handle the user password
            for anonymous users attempting to access resources.
            </summary>
            <value>Value indicating if AnonymousPasswordSync is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AppAllowClientDebug">
            <summary>
            The AppAllowClientDebug property specifies whether ASP client-side debugging
            is enabled. This property is independent of <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AppAllowDebugging"/>, which
            applies to server-side debugging.
            </summary>
            <value>Value indicating if AppAllowClientDebug is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AppAllowDebugging">
            <summary>
            The AppAllowDebugging property specifies whether ASP debugging is enabled on
            the server. This property is independent of the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AppAllowClientDebug"/> property, 
            which applies to client-side debugging.
            </summary>
            <value>Value indicating if AppAllowDebugging is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspAllowSessionState">
            <summary>
            The AspAllowSessionState property enables session state persistence for the ASP application.
            </summary>
            <value>Value indicating if the AspAllowSessionState is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspBufferingOn">
            <summary>
            The AspBufferingOn property specifies whether output from an ASP application will be buffered.
            </summary>
            <value>Value indicating if the AspBufferingOn is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspEnableApplicationRestart">
            <summary>
            The AspEnableApplicationRestart determines whether an ASP application can be
            automatically restarted. When changes are made to Global.asa or metabase properties
            that affect an application, the application will not restart unless the
            AspEnableApplicationRestart property is set to true.
            </summary>
            <value>Value indicating if AspEnableApplicationRestart is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspEnableAspHtmlFallback">
            <summary>
            The AspEnableAspHtmlFallback property controls the behavior of ASP when a
            new request is to be rejected due to a full request queue.
            </summary>
            <value>Value indicating if AspEnableAspHtmlFallback is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspEnableChunkedEncoding">
            <summary>
            The AspEnableChunkedEncoding property specifies whether HTTP 1.1 chunked
            transfer encoding is enabled for the World Wide Web Publishing Service (WWW service).
            </summary>
            <value>Value indicating if AspEnableChunkedEncoding is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspErrorsToNTLog">
            <summary>
            The AspErrorsToNTLog property specifies which ASP errors are written to the
            Windows event log. ASP errors are written to the client browser and to the IIS
            log files by default.
            </summary>
            <value>Value indicating if AspErrorsToNTLog is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspEnableParentPaths">
            <summary>
            The AspEnableParentPaths property specifies whether an ASP page allows paths
            relative to the current directory (using the ..\ notation) or above the current directory.
            </summary>
            <value>Value indicating if AspEnableParentPaths is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspEnableTypelibCache">
            <summary>
            The AspEnableTypelibCache property specifies whether type libraries are cached
            on the server. The World Wide Web Publishing Service (WWW service) setting for
            this property is applicable to all in-process and pooled out-of-process application
            nodes, at all levels. Metabase settings at the Web server level or lower are ignored
            for in-process and pooled out-of-process applications. However, settings at the Web
            server level or lower are used if that node is an isolated out-of-process application.
            </summary>
            <value>Value indicating if AspEnableTypelibCache is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspExceptionCatchEnable">
            <summary>
            The AspExceptionCatchEnable property specifies whether ASP pages trap exceptions
            thrown by components.
            </summary>
            <value>Value indicating if AspExceptionCatchEnable is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspLogErrorRequests">
            <summary>
            The AspLogErrorRequests property controls whether the Web server writes ASP errors
            to the application section of the Windows event log. ASP errors are written to the
            client browser and to the IIS log files by default.
            </summary>
            <value>Value indicating if AspLogErrorRequests is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspScriptErrorSentToBrowser">
            <summary>
            The AspScriptErrorSentToBrowser property specifies whether the Web server writes
            debugging specifics (file name, error, line number, description) to the client
            browser, in addition to logging them to the Windows Event Log. The <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspScriptErrorMessage"/> 
            property provides the error message to be sent if this property is set to false.
            </summary>
            <value>Value indicating if AspScriptErrorSentToBrowser is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspTrackThreadingModel">
            <summary>
            The AspTrackThreadingModel property specifies whether IIS checks the threading model
            of any components (COM objects) that your application creates. The preferred setting
            of this metabase property is false.
            </summary>
            <value>Value indicating if AspTrackThreadingModel is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthAnonymous">
            <summary>
            Specifies Anonymous authentication as one of the possible Windows authentication
            schemes returned to clients as being available.
            </summary>
            <value>Value indicating if AuthAnonymous is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthBasic">
            <summary>
            Specifies Basic authentication as one of the possible Windows authentication
            schemes returned to clients as being available.
            </summary>
            <value>Value indicating if AuthBasic is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthNtlm">
            <summary>
            Specifies Integrated Windows authentication (also known as Challenge/Response or
            NTLM authentication) as one of the possible Windows authentication schemes
            returned to clients as being available.
            </summary>
            <value>Value indicating if AuthNtlm is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthPersistSingleRequest">
            <summary>
            Setting this flag to true specifies that authentication persists only for a single
            request on a connection. IIS resets the authentication at the end of each request, and
            forces re-authentication on the next request of the session.
            </summary>
            <value>Value indicating if AuthPersistSingleRequest is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthPersistSingleRequestIfProxy">
            <summary>
            Setting this flag to true specifies authentication will persist only across single
            requests on a connection if the connection is by proxy. IIS will reset the authentication
            at the end of the request if the current authenticated request is by proxy and it is
            not the special case where IIS is running MSPROXY.
            </summary>
            <value>Value indicating if AuthPersistSingleRequestIfProxy is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AuthPersistSingleRequestAlwaysIfProxy">
            <summary>
            Setting this flag to true specifies that authentication is valid for a single request if
            by proxy. IIS will reset the authentication at the end of the request and force
            re-authentication on the next request if the current authenticated request is by
            proxy of any type.
            </summary>
            <value>Value indicating if AuthPersistSingleRequestAlwaysIfProxy is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CacheControlNoCache">
            <summary>
            The CacheControlNoCache property specifies the HTTP 1.1 directive to prevent caching of content.
            </summary>
            <value>Value indicating if CacheControlNoCache is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CacheIsapi">
            <summary>
            The CacheISAPI property indicates whether ISAPI extensions are cached in memory after first use.
            </summary>
            <value>Value indicating if CacheIsapi is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.ContentIndexed">
            <summary>
            The ContentIndexed property specifies whether the installed content indexer should
            index content under this directory tree.
            </summary>
            <value>Value indicating if ContentIndexed is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CpuAppEnabled">
            <summary>
            This property specifies whether process accounting and throttling should be performed
            for ISAPI extensions and ASP applications. To perform process accounting on CGI
            applications, use the property <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CpuCgiEnabled"/>.
            </summary>
            <value>Value indicating if CpuAppEnabled is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CpuCgiEnabled">
            <summary>
            This property indicates whether IIS should perform process accounting for CGI
            applications. To effectively throttle CGI applications, use the CgiTimeout
            property. To use process accounting for ISAPI and ASP applications, use <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CpuAppEnabled"/>.
            </summary>
            <value>Value indicating if CpuCgiEnabled is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CreateCgiWithNewConsole">
            <summary>
            The CreateCGIWithNewConsole property indicates whether a CGI application runs in its own console.
            </summary>
            <value>Value indicating if CreateCgiWithNewConsole is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.CreateProcessAsUser">
            <summary>
            The CreateProcessAsUser property specifies whether a CGI process is created in the system context or in the context of the requesting user.
            </summary>
            <value>Value indicating if CreateProcessAsUser is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DirBrowseShowDate">
            <summary>
            When set to true, date information is displayed when browsing directories.
            </summary>
            <value>Value indicating if DirBrowseShowDate is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DirBrowseShowExtension">
            <summary>
            When set to true, file name extensions are displayed when browsing directories.
            </summary>
            <value>Value indicating if DirBrowseShowExtension is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DirBrowseShowLongDate">
            <summary>
            When set to true, date information is displayed in extended format when displaying directories.
            </summary>
            <value>Value indicating if DirBrowseShowLongDate is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DirBrowseShowSize">
            <summary>
            When set to true, file size information is displayed when browsing directories.
            </summary>
            <value>Value indicating if DirBrowseShowSize is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DirBrowseShowTime">
            <summary>
            When set to true, file time information is displayed when displaying directories.
            </summary>
            <value>Value indicating if DirBrowseShowTime is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DontLog">
            <summary>
            The DontLog property specifies whether client requests are written to the IIS log files.
            </summary>
            <value>Value indicating if DontLog is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.EnableDefaultDoc">
            <summary>
            When set to true, the default document (specified by the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DefaultDoc"/> property) for
            a directory is loaded when the directory is browsed.
            </summary>
            <value>Value indicating if EnableDefaultDoc is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.EnableDirBrowsing">
            <summary>
            When set to true, directory browsing is enabled.
            </summary>
            <value>Value indicating if EnableDirBrowsing is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.EnableDocFooter">
            <summary>
            The EnableDocFooter property enables or disables custom footers specified by
            the DefaultDocFooter property.
            </summary>
            <value>Value indicating if EnableDocFooter is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.EnableReverseDns">
            <summary>
            The EnableReverseDns property enables or disables reverse Domain Name Server (DNS) lookups
            for the World Wide Web Publishing Service (WWW service). Reverse lookups involve looking
            up the domain name when the IP address is known. Reverse DNS lookups can use significant
            resources and time.
            </summary>
            <value>Value indicating if EnableReverseDns is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.SsiExecDisable">
            <summary>
            The SSIExecDisable property specifies whether server-side include (SSI) #exec directives
            are disabled under this path.
            </summary>
            <value>Value indicating if SsiExecDisable is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.UncAuthenticationPassthrough">
            <summary>
            The UNCAuthenticationPassthrough property enables user authentication passthrough
            for Universal Naming Convention (UNC) virtual root access (for authentication schemes
            that support delegation).
            </summary>
            <value>Value indicating if UncAuthenticationPassthrough is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspScriptErrorMessage">
            <summary>
            The AspScriptErrorMessage property specifies the error message to send to the browser
            if specific debugging errors are not sent to the client (if <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.AspScriptErrorSentToBrowser"/> 
            is set to false).
            </summary>
            <value>Value indicating if AspScriptErrorMessage is enabled or disabled.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.DefaultDoc">
            <summary>
            The DefaultDoc contains one or more file names of default documents that will be returned
            to the client if no file name is included in the client's request. The default document
            will be returned if the <see cref="P:MSBuild.Community.Tasks.IIS.WebDirectoryCreate.EnableDefaultDoc"/> flag of the DirBrowseFlags property
            is set to true for the directory. This property can contain a list of default document
            file names separated by a comma and a space, for example Default.htm, Default.asp.
            </summary>
            <value>Listing of the default documents for the web application.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.AppPoolDelete">
            <summary>
            Deletes an existing application pool on a local or remote machine with IIS installed.  The default is 
            to delete an existing application pool on the local machine.  If connecting to a remote machine, you can
            specify the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Username"/> and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Password"/> for the task
            to run under.
            </summary>
            <example>Delete an existing application pool on the local machine.
            <code><![CDATA[
            <AppPoolDelete AppPoolName="MyAppPool" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.AppPoolDelete.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolDelete.ApplicationPoolName">
            <summary>
            Gets or sets the name of the application pool.
            </summary>
            <value>The name of the application pool.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.WebDirectoryDelete">
            <summary>
            Deletes a web directory on a local or remote machine with IIS installed.  The default is 
            to delete the web directory on the local machine.  If connecting to a remote machine, you
            can specify the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Username"/> and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Password"/> for the
            task to run under.
            </summary>
            <example>Deletes a web directory on the local machine.
            <code><![CDATA[
            <WebDirectoryDelete VirtualDirectoryName="MyVirDir" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.WebDirectoryDelete.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.WebDirectoryDelete.VirtualDirectoryName">
            <summary>
            Gets or sets the name of the virtual directory.
            </summary>
            <value>The name of the virtual directory.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.AppPoolControllerActions">
            <summary>
            Actions the <see cref="T:MSBuild.Community.Tasks.IIS.AppPoolController"/> can do.
            </summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.AppPoolControllerActions.Start">
            <summary>Start the applicaiton pool</summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.AppPoolControllerActions.Stop">
            <summary>Stop the applicaiton pool</summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.AppPoolControllerActions.Restart">
            <summary>Restart the applicaiton pool</summary>
        </member>
        <member name="F:MSBuild.Community.Tasks.IIS.AppPoolControllerActions.Recycle">
            <summary>Recycle the applicaiton pool</summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.IIS.AppPoolController">
            <summary>
            Allows control for an application pool on a local or remote machine with IIS installed.  The default is 
            to control the application pool on the local machine.  If connecting to a remote machine, you can
            specify the <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Username"/> and <see cref="P:MSBuild.Community.Tasks.IIS.WebBase.Password"/> for the task
            to run under.
            </summary>
            <example>Restart an application pool on the local machine.
            <code><![CDATA[
            <AppPoolController AppPoolName="MyAppPool" Action="Restart" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.IIS.AppPoolController.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            True if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolController.ApplicationPoolName">
            <summary>
            Gets or sets the name of the app pool.
            </summary>
            <value>The name of the app pool.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.IIS.AppPoolController.Action">
            <summary>
            Gets or sets the application pool action.
            </summary>
            <value>The application pool action.</value>
            <enum cref="T:MSBuild.Community.Tasks.IIS.AppPoolControllerActions"/>
        </member>
        <member name="T:MSBuild.Community.Tasks.Mail">
            <summary>
            Sends an email message
            </summary>
            <example>Example of sending an email.
            <code><![CDATA[
            <Target Name="Mail">
                <Mail SmtpServer="localhost"
                    To="user@email.com"
                    From="from@email.com"
                    Subject="Test Mail Task"
                    Body="This is a test of the mail task." />
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Mail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mail"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Mail.Execute">
            <summary>Sends an email message</summary>
            <returns>Returns true if successful</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Attachments">
            <summary>
            List of files to attach to message
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Bcc">
            <summary>
            List of addresss that contains the blind carbon copy (BCC) recipients for this e-mail message
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.CC">
            <summary>
            List of addresss that contains the carbon copy (CC) recipients for this e-mail message
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Body">
            <summary>
            The email message body
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.From">
            <summary>
            The from address for this e-mail message
            </summary>
            <remarks>
            This property is required.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.IsBodyHtml">
            <summary>
            A value indicating whether the mail message body is in Html
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Priority">
            <summary>
            The priority of this e-mail message
            </summary>
            <remarks>
            Possible values are High, Normal, and Low
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Subject">
            <summary>
            The subject line for this e-mail message
            </summary>
            <remarks>
            This property is required.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.SmtpServer">
            <summary>
            The name or IP address of the host used for SMTP transactions
            </summary>
            <remarks>
            This property is required.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.To">
            <summary>
            List of addresss that contains the recipients of this e-mail message
            </summary>
            <remarks>
            This property is required.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Mail.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.Add">
            <summary>
            Add numbers
            </summary>
            <example>Adding numbers:
            <code><![CDATA[
            <Math.Add Numbers="4;3">
                <Output TaskParameter="Result" PropertyName="Result" />
            </Math.Add>
            <Message Text="Add 4+3= $(Result)"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.Add.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.Divide">
            <summary>
            Divide numbers
            </summary>
            <example>
      <code>
        <![CDATA[
<Math.Divide Numbers="1;2">
    <Output TaskParameter="Result" PropertyName="Result" />
</Math.Divide>
<Message Text="Divide 1/2= $(Result)"/>
]]>
      </code>
      Above example will display:
      <code>Divide 1/2= 0.5</code>
    </example><example>
      Truncate the result to always return an integer:
      <code>
        <![CDATA[
<Math.Divide Numbers="7;3" TruncateResult="true">
    <Output TaskParameter="Result" PropertyName="Result" />
</Math.Divide>
<Message Text="Divide 7/3= $(Result)"/>
]]>
      </code>
      Above example will display:
      <code>Divide 7/3= 2</code>
    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.Divide.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Math.Divide.TruncateResult">
            <summary>
            When <see langword="true"/>, uses integer division to truncate the result. Default is <see langword="false" />
            </summary>
            <remarks>
            Any remainder in the result is dropped, and the closest integer to zero is returned.
            <para>
            Refer to the documentation for the <see href="http://msdn2.microsoft.com/library/0e16fywh.aspx">\ Operator</see>
            for more information about integer division.
            </para>
            </remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.Multiple">
            <summary>
            Multiple numbers
            </summary>
            <example>
            <code><![CDATA[
            <Math.Multiple Numbers="10;3">
                <Output TaskParameter="Result" PropertyName="Result" />
            </Math.Multiple>
            <Message Text="Multiple 10*3= $(Result)"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.Multiple.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Math.Subtract">
            <summary>
            Subtract numbers
            </summary>
            <example>
            <code><![CDATA[
            <Math.Subtract Numbers="10;3">
                <Output TaskParameter="Result" PropertyName="Result" />
            </Math.Subtract>
            <Message Text="Subtract 10-3= $(Result)"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Math.Subtract.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Move">
            <summary>
            Moves files on the filesystem to a new location.
            </summary>
            <example>
            <para>Move a file to another folder</para>
            <code><![CDATA[
            <Move SourceFiles="Test\MoveMe.txt"
                DestinationFolder="Test\Move" />
            ]]></code>
            <para>Rename a file</para>
            <code><![CDATA[
            <Move SourceFiles="Test\Move\MoveMe.txt"
                DestinationFiles="Test\Move\Renamed.txt" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Move.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Move.MovedFiles">
            <summary>
            Gets the items that were successfully moved.
            </summary>
            <value>The moved files.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Move.DestinationFiles">
            <summary>
            Gets or sets the list of files to moved the source files to. 
            </summary>
            <remarks>
            This list is expected to be a one-to-one mapping with the 
            list specified in the SourceFiles parameter. That is, the 
            first file specified in SourceFiles will be moved to the 
            first location specified in DestinationFiles, and so forth.
            </remarks>
            <value>The destination files.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Move.DestinationFolder">
            <summary>
            Gets or sets the directory to which you want to move the files.
            </summary>
            <value>The destination folder.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Move.SourceFiles">
            <summary>
            Gets or sets the source files to move.
            </summary>
            <value>The source files to move.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.NDoc">
            <summary>
            Runs the NDoc application.
            </summary>
            <example>Generated html help file.
            <code><![CDATA[
            <NDoc Documenter="MSDN" 
                ProjectFilePath="MSBuild.Community.Tasks.ndoc" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.NDoc.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NDoc"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.NDoc.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.NDoc.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.NDoc.LogToolCommand(System.String)">
            <summary>
            Logs the starting point of the run to all registered loggers.
            </summary>
            <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.NDoc.GetWorkingDirectory">
            <summary>
            Returns the directory in which to run the executable file.
            </summary>
            <returns>
            The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.Documenter">
            <summary>
            Gets or sets the documenter.
            </summary>
            <value>The documenter.</value>
            <remarks>Available documenters are VS.NET_2003, JavaDoc, LaTeX, LinearHtml, MSDN, XML.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.ProjectFilePath">
            <summary>
            Gets or sets the project file path.
            </summary>
            <value>The project file path.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.Verbose">
            <summary>
            Gets or sets a value indicating whether the output is verbose.
            </summary>
            <value><c>true</c> if verbose; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>The working directory.</value>
            <returns>
            The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NDoc.StandardOutputLoggingImportance">
            <summary>
            Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.
            </summary>
            <value></value>
            <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.NUnit">
            <summary>
            Run NUnit on a group of assemblies.
            </summary>
            <example>Run NUnit tests.
            <code><![CDATA[
            <ItemGroup>
                <TestAssembly Include="C:\Program Files\NUnit 2.2.7\bin\*.tests.dll" />
            </ItemGroup>
            <Target Name="NUnit">
                <NUnit Assemblies="@(TestAssembly)" />
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="F:MSBuild.Community.Tasks.NUnit.DEFAULT_NUNIT_DIRECTORY">
            <summary>
            The default relative path of the NUnit installation.
            The value is <c>@"NUnit-Net-2.0 2.2.7\bin"</c>.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.NUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NUnit"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.NUnit.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.NUnit.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.NUnit.LogToolCommand(System.String)">
            <summary>
            Logs the starting point of the run to all registered loggers.
            </summary>
            <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.NUnit.GetWorkingDirectory">
            <summary>
            Returns the directory in which to run the executable file.
            </summary>
            <returns>
            The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.Assemblies">
            <summary>
            Gets or sets the assemblies.
            </summary>
            <value>The assemblies.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.IncludeCategory">
            <summary>
            Gets or sets the categories to include.
            </summary>
            <remarks>Multiple values must be separated by a comma ","</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.ExcludeCategory">
            <summary>
            Gets or sets the categories to exclude.
            </summary>
            <remarks>Multiple values must be separated by a comma ","</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.Fixture">
            <summary>
            Gets or sets the fixture.
            </summary>
            <value>The fixture.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.XsltTransformFile">
            <summary>
            Gets or sets the XSLT transform file.
            </summary>
            <value>The XSLT transform file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.OutputXmlFile">
            <summary>
            Gets or sets the output XML file.
            </summary>
            <value>The output XML file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.ErrorOutputFile">
            <summary>
            The file to receive test error details.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>The working directory.</value>
            <returns>
            The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.DisableShadowCopy">
            <summary>
            Determines whether assemblies are copied to a shadow folder during testing.
            </summary>
            <remarks>Shadow copying is enabled by default. If you want to test the assemblies "in place",
            you must set this property to <c>True</c>.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.ProjectConfiguration">
            <summary>
            The project configuration to run.
            </summary>
            <remarks>Only applies when a project file is used. The default is the first configuration, usually Debug.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.TestInNewThread">
            <summary>
            Allows tests to be run in a new thread, allowing you to take advantage of ApartmentState and ThreadPriority settings in the config file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.NUnit.StandardOutputLoggingImportance">
            <summary>
            Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.
            </summary>
            <value></value>
            <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.AttribDirectory">
            <summary>
              Looks up a localized string similar to Attrib directory &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.AttribFile">
            <summary>
              Looks up a localized string similar to Attrib file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FileNotFound">
            <summary>
              Looks up a localized string similar to File Not Found: {0}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpLocalNotFound">
            <summary>
              Looks up a localized string similar to Local File Not Found: {0}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpPercentComplete">
            <summary>
              Looks up a localized string similar to   {0}% Complete ({1}).
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpTransfered">
            <summary>
              Looks up a localized string similar to Transfered {0} ({1}) in {2}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpUploadComplete">
            <summary>
              Looks up a localized string similar to Upload File Complete, {0}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpUploading">
             <summary>
               Looks up a localized string similar to Uploading &quot;{0}&quot;
               to &quot;{1}&quot;
            .
             </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.FtpUriInvalid">
            <summary>
              Looks up a localized string similar to The URI &quot;{0}&quot; scheme is not valid..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.JSCompressCompressed">
            <summary>
              Looks up a localized string similar to Compressed by {0}, from {1} to {2} byte(s).
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.JSCompressCompressing">
            <summary>
              Looks up a localized string similar to Compressing JavaScript in &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.JSCompressWriting">
            <summary>
              Looks up a localized string similar to Writing compressed JavaScript back to &quot;{0}&quot; using {1}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MailEmailing">
            <summary>
              Looks up a localized string similar to Emailing &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MathNotNumber">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is not a number..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveCreatesDirectory">
            <summary>
              Looks up a localized string similar to Creating directory &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveDestinationIsDirectory">
            <summary>
              Looks up a localized string similar to Could not move the file &quot;{0}&quot; to the destination file &quot;{1}&quot;, because the destination is a folder instead of a file. To move the source file into a folder, consider using the DestinationFolder parameter instead of DestinationFiles..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveError">
            <summary>
              Looks up a localized string similar to Unable to move file &quot;{0}&quot; to &quot;{1}&quot;. {2}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveExactlyOneTypeOfDestination">
            <summary>
              Looks up a localized string similar to Both &quot;{0}&quot; and &quot;{1}&quot; were specified as input parameters in the project file. Please choose one or the other..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveFileComment">
            <summary>
              Looks up a localized string similar to Moving file from &quot;{0}&quot; to &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveNeedsDestination">
            <summary>
              Looks up a localized string similar to No destination specified for Move. Please supply either &quot;{0}&quot; or &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.MoveSourceIsDirectory">
            <summary>
              Looks up a localized string similar to The source file &quot;{0}&quot; is actually a directory.  The &quot;Move&quot; task does not support moving directories..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.NUnitNotFound">
            <summary>
              Looks up a localized string similar to Could not find the NUnit Project File open command. Please make sure NUnit is installed..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ParameterNotUsed">
            <summary>
              Looks up a localized string similar to The parameter &quot;{1}&quot; does not apply to the current use of task &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ParameterRequired">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; task was not given a value for the required parameter &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.RegistryRead">
            <summary>
              Looks up a localized string similar to Read Windows Registry.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.RegistryWrite">
            <summary>
              Looks up a localized string similar to Write Windows Registry.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceCannotContinue">
            <summary>
              Looks up a localized string similar to Cannot continue service {0} on computer &apos;{1}&apos; as it does not support the pause and continue..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceCannotPause">
            <summary>
              Looks up a localized string similar to Cannot pause service {0} on computer &apos;{1}&apos; as it does not support the pause and continue..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceCannotStop">
            <summary>
              Looks up a localized string similar to Cannot stop service {0} on computer &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceContinued">
            <summary>
              Looks up a localized string similar to {0} service was continued successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceContinuing">
            <summary>
              Looks up a localized string similar to {0} service is continuing ....
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceNotFound">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find the &apos;{0}&apos; service on &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceNotPaused">
            <summary>
              Looks up a localized string similar to Cannot continue service {0} on computer &apos;{1}&apos; as its not currently paused..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceNotStarted">
            <summary>
              Looks up a localized string similar to Cannot pause service {0} on computer &apos;{1}&apos; as its not currently started..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServicePaused">
            <summary>
              Looks up a localized string similar to {0} service was paused successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServicePausing">
            <summary>
              Looks up a localized string similar to {0} service is pausing ....
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceStarted">
            <summary>
              Looks up a localized string similar to {0} service was started successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceStarting">
            <summary>
              Looks up a localized string similar to {0} service is starting ....
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceStatus">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; service on &apos;{1}&apos; is &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceStopped">
            <summary>
              Looks up a localized string similar to {0} service was stopped successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ServiceStopping">
            <summary>
              Looks up a localized string similar to {0} service is stopping ....
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.SolutionNotFound">
            <summary>
              Looks up a localized string similar to Solution file &quot;{0}&quot; not found..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.SvnLocalPathNotWorkCopy">
            <summary>
              Looks up a localized string similar to LocalPath is not a working subversion copy..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.TimeFormatException">
            <summary>
              Looks up a localized string similar to Failed to get current date!.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.TimeGettingCurrentDate">
            <summary>
              Looks up a localized string similar to Getting current date..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.TwoVectorsMustHaveSameLength">
            <summary>
              Looks up a localized string similar to &quot;{2}&quot; refers to {0} item(s), and &quot;{3}&quot; refers to {1} item(s). They must have the same number of items..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.UnzipExtracted">
            <summary>
              Looks up a localized string similar to   extracted &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.UnzipFileToDirectory">
             <summary>
               Looks up a localized string similar to Unzip File &quot;{0}&quot;
                to Directory &quot;{1}&quot;
            .
             </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.UnzipSuccessfully">
            <summary>
              Looks up a localized string similar to Unzipped file &quot;{0}&quot; successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultAddFileCommitFailed">
            <summary>
              Looks up a localized string similar to Commitment of change set failed!.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultAddFileCommitSucceeded">
            <summary>
              Looks up a localized string similar to Files added to Vault repository successfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultAddFilesException">
            <summary>
              Looks up a localized string similar to Files specified for addition to repository cannot be found..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultCheckinFileException">
            <summary>
              Looks up a localized string similar to The file {0} could not be checked in: {1}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultCheckinFileNotFoundException">
            <summary>
              Looks up a localized string similar to File or folder {0} not found for checkin..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultCheckinFolderException">
            <summary>
              Looks up a localized string similar to The folder {0} could not be checked in: {1}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultCheckinSuccessful">
            <summary>
              Looks up a localized string similar to {0} successfully checked out..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultCheckoutSuccessful">
            <summary>
              Looks up a localized string similar to {0} successfully checked out..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultDiskFileDoesNotExist">
            <summary>
              Looks up a localized string similar to Specified diskfile {0} does not exist..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultFileAddedToChangeSet">
            <summary>
              Looks up a localized string similar to File [{0}] added to change set..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultFolderAddedToChangeSet">
            <summary>
              Looks up a localized string similar to Folder [{0}] added to change set..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultIncorrectParameters">
            <summary>
              Looks up a localized string similar to Incorrect parameters passed to VaultSession..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultLoginFailed">
            <summary>
              Looks up a localized string similar to Login to Vault repository failed..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultPathValidationException">
            <summary>
              Looks up a localized string similar to Error validating path &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultRepositorySelectionFailure">
            <summary>
              Looks up a localized string similar to Selection of the repository failed: {0}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultResourceNotFound">
            <summary>
              Looks up a localized string similar to File or folder {0} not found for checkout..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultSetNewWorkingFolder">
            <summary>
              Looks up a localized string similar to Set working folder for {0} to {1} from {2}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultTreeCacheFailure">
            <summary>
              Looks up a localized string similar to ClientInstance.TreeCache has not been initialized, Common cause is that SelectRepository has not been called sucessfully..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultUndoCheckoutSuccessful">
            <summary>
              Looks up a localized string similar to Successfully undid check out for {0}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultUrlRequired">
            <summary>
              Looks up a localized string similar to Url specifying vault location is required..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultUsernameRequired">
            <summary>
              Looks up a localized string similar to Username must be set to access repository..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultWorkingFolderCleared">
            <summary>
              Looks up a localized string similar to Clearing working folder for {0}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VaultWorkingFolderRestored">
            <summary>
              Looks up a localized string similar to Restoring working folder for {0} to {1}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionFileNotFound">
            <summary>
              Looks up a localized string similar to Version file &quot;{0}&quot; not found - creating new file..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionModifiedValue">
            <summary>
              Looks up a localized string similar to Updated to version {0}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionOriginalValue">
            <summary>
              Looks up a localized string similar to Initialized to version {0}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionRead">
            <summary>
              Looks up a localized string similar to Reading version from file &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionReadException">
            <summary>
              Looks up a localized string similar to Unable to read version number from &quot;{0}&quot;. {1}.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionWriteException">
            <summary>
              Looks up a localized string similar to Unable to write version number to &quot;{0}&quot;. {1}&quot;.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.VersionWrote">
            <summary>
              Looks up a localized string similar to Wrote version to file &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.WebDirectoryInvalidDirectory">
            <summary>
              Looks up a localized string similar to Web directory {0} does not exist on {1}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.WebDirectoryScriptMapUpdate">
            <summary>
              Looks up a localized string similar to Setting scriptmap for {0} on web directory {1} on {2}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.WebDirectorySettingInvalidSetting">
            <summary>
              Looks up a localized string similar to Web directory {0} on {1} does not have a setting called {2}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.WebDirectorySettingStatusRead">
            <summary>
              Looks up a localized string similar to Reading {0} property of web directory {1} on {2}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.WebDirectorySettingStatusSet">
            <summary>
              Looks up a localized string similar to Setting {0} property of web directory {1} on {2}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlReadDocument">
            <summary>
              Looks up a localized string similar to Reading Xml Document &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlReadNodes">
            <summary>
              Looks up a localized string similar to   {0} node(s) selected for read..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlReadResult">
            <summary>
              Looks up a localized string similar to XmlRead Result: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlUpdateDocument">
            <summary>
              Looks up a localized string similar to Updating Xml Document &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlUpdateNodes">
            <summary>
              Looks up a localized string similar to   {0} node(s) selected for update..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XmlUpdateResult">
            <summary>
              Looks up a localized string similar to XmlUpdate Wrote: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XsltAddingParameter">
            <summary>
              Looks up a localized string similar to Adding Parameter \&quot;{0}\&quot;: \&quot;{1}\&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XsltAddingRootAttribute">
            <summary>
              Looks up a localized string similar to Adding root attribute {0}=\&quot;{1}\&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XsltCreatingRootTag">
            <summary>
              Looks up a localized string similar to Creating root tag \&quot;{0}\&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XsltNoInputFiles">
            <summary>
              Looks up a localized string similar to No input files..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.XsltNoRootTag">
            <summary>
              Looks up a localized string similar to No root tag inserted..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ZipAdded">
            <summary>
              Looks up a localized string similar to   added &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ZipCreating">
            <summary>
              Looks up a localized string similar to Creating zip file &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ZipFileNotFound">
            <summary>
              Looks up a localized string similar to Zip File Not Found: {0}..
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Properties.Resources.ZipSuccessfully">
            <summary>
              Looks up a localized string similar to Created zip file &quot;{0}&quot; successfully..
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.RegistryRead">
            <summary>
            Reads a value from the Registry
            </summary>
            <example>Read .NET Framework install root from Registry.
            <code><![CDATA[
            <RegistryRead 
                KeyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework" 
                ValueName="InstallRoot">
                <Output TaskParameter="Value" PropertyName="InstallRoot" />
            </RegistryRead>
            <Message Text="InstallRoot: $(InstallRoot)"/>
            ]]></code>
            </example>
            <remarks>The <see cref="P:MSBuild.Community.Tasks.RegistryRead.Value"/> parameter is set according to the following rules:
            <list type="table"><item><description>If a <see cref="P:MSBuild.Community.Tasks.RegistryRead.DefaultValue"/> is provided, it will be used if the <see cref="P:MSBuild.Community.Tasks.RegistryRead.KeyName"/> or <see cref="P:MSBuild.Community.Tasks.RegistryRead.ValueName"/> does not exist.</description></item>
            <item><description>If a <see cref="P:MSBuild.Community.Tasks.RegistryRead.DefaultValue"/> is not provided, the <see cref="P:MSBuild.Community.Tasks.RegistryRead.KeyName"/> exists, but the <see cref="P:MSBuild.Community.Tasks.RegistryRead.ValueName"/> does not exist, <see cref="P:MSBuild.Community.Tasks.RegistryRead.Value"/> will be set to an empty string.</description></item>
            <item><description>If a <see cref="P:MSBuild.Community.Tasks.RegistryRead.DefaultValue"/> is not provided, and the <see cref="P:MSBuild.Community.Tasks.RegistryRead.KeyName"/> does not exist, the task will fail.</description></item></list></remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegistryRead.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RegistryRead"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegistryRead.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryRead.KeyName">
            <summary>
            Gets or sets the full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".
            </summary>
            <value>The name of the key.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryRead.ValueName">
            <summary>
            Gets or sets the name of the name/value pair.
            </summary>
            <value>The name of the value.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryRead.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryRead.Value">
            <summary>
            Gets the stored value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.RegistryWrite">
            <summary>
            Writes a value to the Registry
            </summary>
            <example>Write a value to Registry
            <code><![CDATA[
            <RegistryWrite 
                KeyName="HKEY_CURRENT_USER\SOFTWARE\MSBuildTasks"
                ValueName="RegistryWrite"
                Value="Test Write" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegistryWrite.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RegistryWrite"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.RegistryWrite.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryWrite.KeyName">
            <summary>
            Gets or sets the full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".
            </summary>
            <value>The name of the key.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryWrite.ValueName">
            <summary>
            Gets or sets the name of the name/value pair.
            </summary>
            <value>The name of the value.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.RegistryWrite.Value">
            <summary>
            Gets or sets the value to be stored.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.Script">
            <summary>
            Executes code contained within the task.
            </summary>
            <example>
      <para>Simple script that writes to the console</para>
      <code>
        <![CDATA[
<PropertyGroup>
    <HelloCode>
        <![CDATA[
        public static void ScriptMain() {
            Console.WriteLine("Hello MSBuild Community Scripting World.");
        }
        ]] >
    </HelloCode>
</PropertyGroup>
<Target Name="Hello">
    <Script Language="C#" Code="$(HelloCode)" Imports="System" />
</Target>
]]>
      </code>
    </example><example>
      <para>Script that returns a value.</para>
      <code>
        <![CDATA[
<PropertyGroup>
    <GetProgramFilesCode>
        <![CDATA[
        public static string ScriptMain() {
            return Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);
        }
        ]] >
    </GetProgramFilesCode>
</PropertyGroup>
<Target Name="GetProgramFilesFolder">
    <Script Language="C#" Code="$(GetProgramFilesCode)">
        <Output TaskParameter="ReturnValue" PropertyName="ProgramFilesFolder" />
    </Script>
    <Message Text="Program files are in: $(ProgramFilesFolder)" />
</Target>
]]>
      </code>
    </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Script.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.References">
            <summary>
            The required references
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.Imports">
            <summary>
            The namespaces to import.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.Language">
            <summary>
            The language of the script block (defaults to C#).
            </summary>
            <remarks><para>The supported languages are:</para>
            <list type="bullet">
            <item><description>Visual Basic.NET (VB, vb, VISUALBASIC)</description></item>
            <item><description>C# (C#, c#, CSHARP)</description></item>
            <item><description>JavaScript (JS, js, JSCRIPT)</description></item>
            <item><description>J# (VJS, vjs, JSHARP)</description></item>
            </list> or, proviude the fully-qualified name for a class implementing 
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider"/>.</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.MainClass">
            <summary>
            The name of the main class containing the static <c>ScriptMain</c> 
            entry point. 
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.Code">
            <summary>
            The code to compile and execute
            </summary>
            <remarks>
            The code must include a static (Shared in VB) method named ScriptMain.
            It cannot accept any parameters. If you define the method return a <see cref="T:System.String"/>,
            the returned value will be available in the <see cref="P:MSBuild.Community.Tasks.Script.ReturnValue"/> output property.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Script.ReturnValue">
            <summary>
            The string returned from the custom ScriptMain method.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Sleep">
            <summary>
            A task for sleeping for a specified period of time.
            </summary>
            <example>Causes the build to sleep for 300 milliseconds.
            <code><![CDATA[
            <Sleep Milliseconds="300" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Sleep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Sleep.Milliseconds">
            <summary>
            The number of milliseconds to add to the time to sleep.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Sleep.Seconds">
            <summary>
            The number of seconds to add to the time to sleep.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Sleep.Minutes">
            <summary>
            The number of minutes to add to the time to sleep.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Sleep.Hours">
            <summary>
            The number of hours to add to the time to sleep.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssBase">
            <summary>
            Base class for all of the Visual SourceSafe tasks.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssBase.ConnectToDatabase">
            <summary>
            Attempts to connect to the SourceSafe Database and
            load the specified item, or version of the item, if specified.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssBase.Execute">
            <summary>
            Reserved.
            </summary>
            <returns>Reserved.</returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssBase.LogErrorFromException(System.Exception)">
            <summary>
            Logs an exception using the MSBuild logging framework.
            </summary>
            <param name="e">The <see cref="T:System.Exception"/> to log.</param>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.DatabasePath">
            <summary>
            The path to the folder that contains the srcsafe.ini file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Path">
            <summary>
            The Visual SourceSafe project or file to perform the action
            on (starts with "$/").
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.UserName">
            <summary>
            The name of the user accessing the SourceSafe database.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Version">
            <summary>
            A version of the <see cref="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Path"/> to reference.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Password">
            <summary>
            The password to use to log in to SourceSafe.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Database">
            <summary>
            Represents the VSS Database
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssBase.Item">
            <summary>
            Represents the VSS item selected (file or project).
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssCheckin">
            <summary>
            Task that executes a checkin against a VSS Database.
            </summary>
            <example>
            <para></para>
            <code><![CDATA[<VssCheckin UserName="ccnet_build"
              Password="build"
              LocalPath="C:\Dev\MyProjects\Project\TestFile.cs"
              Recursive="False"
              DatabasePath="\\VSSServer\VSS\srcsafe.ini"
              Path="$/Test/TestFile.cs"
            />
            ]]></code>
            </example>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssRecursiveBase">
            <summary>
            Base class for VSS tasks that can act recursively.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssRecursiveBase.Execute">
            <summary>
            Reserved.
            </summary>
            <returns>Reserved.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssRecursiveBase.Recursive">
            <summary>
            Determines whether to perform the SourceSafe operation
            recursively. The default is <see langword="true"/>.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssCheckin.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssCheckin.LocalPath">
            <summary>
            The path to the local working directory.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssCheckin.Writable">
            <summary>
            Determines whether to leave the file(s) as writable once the
            checkin is complete. The default is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssCheckin.Comment">
            <summary>
            The checkin comment.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssCheckout">
            <summary>
            Task that executes a checkout of files or projects
            against a Visual SourceSafe database.
            </summary>
            <example>
            <para></para>
            <code><![CDATA[<VssCheckout UserName="ccnet_build"
              Password="build"
              LocalPath="C:\Dev\MyProjects\Project"
              Recursive="False"
              DatabasePath="\\VSSServer\VSS\srcsafe.ini"
              Path="$/Test/TestFile.cs"
            />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssCheckout.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssCheckout.LocalPath">
            <summary>
            The path to the local working directory.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssCheckout.Writable">
            <summary>
            Determines whether files will be writable once retrieved from
            the repository. The default is <see langword="false"/>.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssAdd">
            <summary>
            Task that adds files to a Visual SourceSafe database.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssAdd.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssAdd.Files">
            <summary>
            List of files that should be added to SourceSafe.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssAdd.Comment">
            <summary>
            The comment to be applied to the newly added file.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssDiff">
            <summary>
            Task that records differences between the latest version
            of all the items in a Visual SourceSafe project and another version or label
            to a file.
            </summary>
            <example>
            <para>Generates a file containing all of the differences between the 
            current version and the label &quot;Test Label&quot;</para>
            <code><![CDATA[<VssDiff UserName="uid"
             Password="pwd"
             DatabasePath="\\VSSServer\VSS2\srcsafe.ini"
             Path="$/Test"
             OutputFile="Diff.xml"
             Label="Test Label"
            />]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssDiff.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssDiff.Label">
            <summary>
            The value of the label to compare to.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssDiff.OutputFile">
            <summary>
            The name of the file to send the output to.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssGet">
            <summary>
            Task that retireves an item or project from a Visual SourceSafe database.
            </summary>
            <example>
            <para>Get the latest version (recursive) of a file from a VSS database and place
            in the specified local folder.</para>
            <code><![CDATA[
            <VssGet UserName="user"
                Password="password"
                LocalPath="C:\Dev\MyProjects\Project"
                Recursive="True"
                DatabasePath="\\VSSServer\VSS\srcsafe.ini"
                Path="$/Project"
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssGet.Execute">
            <summary>
            Runs the task using the specified parameters.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssGet.LocalPath">
            <summary>
            The path to the local working directory.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssGet.Replace">
            <summary>
            Determines whether to replace writable files.
            The default is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssGet.Writable">
            <summary>
            Determines whether files will be writable once retrieved from
            the repository. The default is <see langword="false"/>.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssHistory">
            <summary>
            Generates an XML file containing details of all changes made
            to a Visual SourceSafe project or file between specified labels or dates.
            </summary>
            <example>
            <para>Generates a file containing details of all the changes made to the <c>$/Test</c>
            project by a user called joe.bloggs</para>
            <code><![CDATA[<VssHistory UserName="uid"
             Password="pwd"
             DatabasePath="\\VSSServer\VSS\srcsafe.ini"
             Path="$/Test"
             User="joe.bloggs" 
             OutputFile="History.xml"
             Recursive="True"
            />
            ]]></code>
            </example>
            <example>
            <para>Generates a file containing details of all the changes made between the
            labels Build1 and Build2 in the <c>$/Test</c> project.</para>
            <code><![CDATA[<VssHistory UserName="uid"
             Password="pwd"
             DatabasePath="\\VSSServer\VSS\srcsafe.ini"
             Path="$/Test"
             FromLabel="Build1"
             ToLabel="Build2"
             OutputFile="History.xml"
             Recursive="True"
            />
            ]]></code>
            </example>
            <example>
            <para>Generates a file containing details of all the changes made between the
            1st December 2005 and 10th December 2005in the <c>$/Test</c> project.</para>
            <code><![CDATA[<VssHistory UserName="uid"
             Password="pwd"
             DatabasePath="\\VSSServer\VSS\srcsafe.ini"
             Path="$/Test"
             FromDate="2005-12-01 00:00"
             ToDate="2005-12-10 00:00"
             OutputFile="History.xml"
             Recursive="True"
            />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssHistory.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.ToLabel">
            <summary>
            The label to start comparing to.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.FromLabel">
            <summary>
            The label to compare up to.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.ToDate">
            <summary>
            The Start Date for the history.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.FromDate">
            <summary>
            The End Date for the history.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.OutputFile">
            <summary>
            The name and path of the XML output file.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssHistory.User">
            <summary>
            The name of the user whose changes should be listed in 
            the history.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssLabel">
            <summary>
            Task that applies a label to a Visual SourceSafe item.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssLabel.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssLabel.Label">
            <summary>
            The text of the label.
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssLabel.Comment">
            <summary>
            An optional comment.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SourceSafe.VssUndoCheckout">
            <summary>
            Task that undoes a checkout of files or projects
            against a Visual SourceSafe database.
            </summary>
            <example>
            <para></para>
            <code><![CDATA[<VssUndoCheckout UserName="ccnet_build"
              Password="build"
              LocalPath="C:\Dev\MyProjects\Project"
              Recursive="False"
              DatabasePath="\\VSSServer\VSS\srcsafe.ini"
              Path="$/Test/TestFile.cs"
            />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.SourceSafe.VssUndoCheckout.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><see langword="true"/> if the task ran successfully; 
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SourceSafe.VssUndoCheckout.LocalPath">
            <summary>
            The path to the local working directory.
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.SqlExecute">
            <summary>
            Executes a SQL command.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.SqlExecute.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlExecute.ConnectionString">
            <summary>
            The connection string
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlExecute.Command">
            <summary>
            The command to execute
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.SqlExecute.Result">
            <summary>
            Output the return count/value
            </summary>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnCheckout">
            <summary>
            Checkout a local working copy of a Subversion repository.
            </summary>
            <example>Checkout a working copy
            <code><![CDATA[
            <Target Name="Checkout">
              <RemoveDir Directories="$(MSBuildProjectDirectory)\Test\Checkout" />
              <SvnCheckout RepositoryPath="file:///d:/svn/repo/Test/trunk" 
                           LocalPath="$(MSBuildProjectDirectory)\Test\Checkout">      
                <Output TaskParameter="Revision" PropertyName="Revision" />
              </SvnCheckout>
              <Message Text="Revision: $(Revision)"/>
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCheckout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnCheckout"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCheckout.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnCommit">
            <summary>
            Subversion Commit command
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCommit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnCommit"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnCommit.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnExport">
            <summary>
            Export a folder from a Subversion repository
            </summary>
            <example> Export from repository
            <code><![CDATA[
            <Target Name="Export">
              <MakeDir Directories="$(MSBuildProjectDirectory)\Test" />
              <RemoveDir Directories="$(MSBuildProjectDirectory)\Test\Export" />
              <SvnExport RepositoryPath="file:///d:/svn/repo/Test/trunk" 
                LocalPath="$(MSBuildProjectDirectory)\Test\Export">
                <Output TaskParameter="Revision" PropertyName="Revision" />
              </SvnExport>
              <Message Text="Revision: $(Revision)"/>
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnExport"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnExport.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnVersion">
            <summary>
            Summarize the local revision(s) of a working copy.
            </summary>
            <example>The following example gets the revision of the current folder.
            <code><![CDATA[
            <Target Name="Version">
              <SvnVersion LocalPath=".">
                <Output TaskParameter="Revision" PropertyName="Revision" />
              </SvnVersion>
              <Message Text="Revision: $(Revision)"/>
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnVersion"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.GenerateFullPathToTool">
            <summary>
            Returns the fully qualified path to the executable file.
            </summary>
            <returns>
            The fully qualified path to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.LogToolCommand(System.String)">
            <summary>
            Logs the starting point of the run to all registered loggers.
            </summary>
            <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.GenerateCommandLineCommands">
            <summary>
            Returns a string value containing the command line arguments to pass directly to the executable file.
            </summary>
            <returns>
            A string value containing the command line arguments to pass directly to the executable file.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.Execute">
            <summary>
            Runs the exectuable file with the specified task parameters.
            </summary>
            <returns>
            true if the task runs successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnVersion.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
            <summary>
            Logs the events from text output.
            </summary>
            <param name="singleLine">The single line.</param>
            <param name="messageImportance">The message importance.</param>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.LocalPath">
            <summary>Path to local working copy.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.Revision">
            <summary>Revision number of the local working repository.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.HighRevision">
            <summary>High revision number of the local working repository revision range.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.LowRevision">
            <summary>Low revision number of the local working repository revision range.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.Modifications">
            <summary>True if working copy contains modifications.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.Switched">
            <summary>True if working copy is switched.</summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.Exported">
            <summary>
            True if invoked on a directory that is not a working copy, 
            svnversion assumes it is an exported working copy and prints "exported".
            </summary>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.StandardOutputLoggingImportance">
            <summary>
            Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.
            </summary>
            <value></value>
            <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Subversion.SvnVersion.ToolName">
            <summary>
            Gets the name of the executable file to run.
            </summary>
            <value></value>
            <returns>The name of the executable file to run.</returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Subversion.SvnUpdate">
            <summary>
            Subversion Update command
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SvnUpdate"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Subversion.SvnUpdate.ValidateParameters">
            <summary>
            Indicates whether all task paratmeters are valid.
            </summary>
            <returns>
            true if all task parameters are valid; otherwise, false.
            </returns>
        </member>
        <member name="T:MSBuild.Community.Tasks.Unzip">
            <summary>
            Unzip a file to a target directory.
            </summary>
            <example>Unzip file tasks
            <code><![CDATA[
            <Unzip ZipFileName="MSBuild.Community.Tasks.zip" 
                TargetDirectory="Backup"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Unzip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Unzip"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Unzip.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Unzip.ZipFileName">
            <summary>
            Gets or sets the name of the zip file.
            </summary>
            <value>The name of the zip file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Unzip.TargetDirectory">
            <summary>
            Gets or sets the target directory.
            </summary>
            <value>The target directory.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.Version">
            <summary>
            Generates version information based on various algorithms
            </summary>
            <example>Get version information from file and increment revision.
            <code><![CDATA[
            <Version VersionFile="number.txt" BuildType="Automatic" RevisionType="Increment">
                <Output TaskParameter="Major" PropertyName="Major" />
                <Output TaskParameter="Minor" PropertyName="Minor" />
                <Output TaskParameter="Build" PropertyName="Build" />
                <Output TaskParameter="Revision" PropertyName="Revision" />
            </Version>
            <Message Text="Version: $(Major).$(Minor).$(Build).$(Revision)"/>
            ]]></code>
            </example>
            <example>Specify Major and Minor version information and generate Build and Revision.
            <code><![CDATA[
            <Version BuildType="Automatic" RevisionType="Automatic" Major="1" Minor="3" >
                <Output TaskParameter="Major" PropertyName="Major" />
                <Output TaskParameter="Minor" PropertyName="Minor" />
                <Output TaskParameter="Build" PropertyName="Build" />
                <Output TaskParameter="Revision" PropertyName="Revision" />
            </Version>
            <Message Text="Version: $(Major).$(Minor).$(Build).$(Revision)"/>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Version.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Version"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Version.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.Major">
            <summary>
            Gets or sets the major version number.
            </summary>
            <value>The major version number.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.Minor">
            <summary>
            Gets or sets the minor version number.
            </summary>
            <value>The minor version number.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.Build">
            <summary>
            Gets or sets the build version number.
            </summary>
            <seealso cref="P:MSBuild.Community.Tasks.Version.BuildType"/>
            <value>The build version number.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.Revision">
            <summary>
            Gets or sets the revision version number.
            </summary>
            <seealso cref="P:MSBuild.Community.Tasks.Version.RevisionType"/>
            <value>The revision version number.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.VersionFile">
            <summary>
            Gets or sets the file used to initialize and persist the version.
            </summary>
            <value>The version file.</value>
            <remarks>
            When specified, the task will attempt to load the previous version information from the file.
            After updating the version, the new value will be saved to the file.
            <para>
            If you do not specify a value for this property, the version will be calculated
            based on the values passed to the <see cref="P:MSBuild.Community.Tasks.Version.Major"/>, <see cref="P:MSBuild.Community.Tasks.Version.Minor"/>,
            <see cref="P:MSBuild.Community.Tasks.Version.Build"/>, and <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> properties. The new version will not be persisted.</para></remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.BuildType">
            <summary>
            Gets or sets the method used to generate a <see cref="P:MSBuild.Community.Tasks.Version.Build"/> number
            </summary>
            <remarks>
            If value is not provided, None is assumed.
            The <see cref="P:MSBuild.Community.Tasks.Version.Build"/> number is set according to the following table:
            <list type="table">
            <listheader><term>BuildType</term><description>Description</description></listheader>
            <item><term>None</term><description>The number is not modified.</description></item>
            <item><term>Automatic</term><description>The number of days since <see cref="P:MSBuild.Community.Tasks.Version.StartDate"/>.</description></item>
            <item><term>Increment</term><description>Increases the previous <see cref="P:MSBuild.Community.Tasks.Version.Build"/> value by 1.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.RevisionType">
            <summary>
            Gets or sets the method used to generate a <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> number
            </summary>
            <remarks>
            If value is not provided, None is assumed.
            The <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> number is set according to the following table:
            <list type="table">
            <listheader><term>RevisionType</term><description>Description</description></listheader>
            <item><term>None</term><description>The number is not modified.</description></item>
            <item><term>Automatic</term><description>A number that starts at 0 at midnight, and constantly increases throughout the day (changing roughly every 1.3 seconds). Guaranteed to be safe for components of the AssemblyVersion attribute.</description></item>
            <item><term>Increment</term><description>Increases the previous <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> value by 1.</description></item>
            <item><term>BuildIncrement</term><description>Increases the previous <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> value by 1 when the value of <see cref="P:MSBuild.Community.Tasks.Version.Build"/> is unchanged. If the value of <see cref="P:MSBuild.Community.Tasks.Version.Build"/> has changed, <see cref="P:MSBuild.Community.Tasks.Version.Revision"/> is reset to zero.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Version.StartDate">
            <summary>
            Gets or sets the starting date used to calculate the <see cref="P:MSBuild.Community.Tasks.Version.Build"/> number when <see cref="P:MSBuild.Community.Tasks.Version.BuildType"/> is Automatic.
            </summary>
            <value>The starting date for calculation of the build number.</value>
            <remarks>
            This value is only used when the <see cref="P:MSBuild.Community.Tasks.Version.BuildType"/> is Automatic.
            <para>This default value is January 1, 2000.</para>
            </remarks>
        </member>
        <member name="T:MSBuild.Community.Tasks.WebDownload">
            <summary>
            Downloads a resource with the specified URI to a local file. 
            </summary>
            <example>Download the Microsoft.com home page.
            <code><![CDATA[
            <WebDownload FileUri="http://www.microsoft.com/default.aspx" 
                FileName="microsoft.html" />
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.WebDownload.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebDownload"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.WebDownload.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.WebDownload.FileName">
            <summary>
            Gets or sets the name of the local file that is to receive the data.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.WebDownload.FileUri">
            <summary>
            Gets or sets the URI from which to download data.
            </summary>
            <value>The file URI.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.XmlRead">
            <summary>
            Reads a value from a XML document using a XPath.
            </summary>
            <example>Read all targest from a build project.
            <code><![CDATA[
            <XmlRead Prefix="n"
                Namespace="http://schemas.microsoft.com/developer/msbuild/2003" 
                XPath="/n:Project/n:Target/@Name"
                XmlFileName="Subversion.proj">
                <Output TaskParameter="Value" PropertyName="BuildTargets" />
            </XmlRead>
            <Message Text="Build Targets: $(BuildTargets)"/>
            ]]></code>
            </example>
            <remarks>
            If the XPath returns multiple nodes, the Value will 
            be a semicolon delimited list of the nodes text.
            </remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.XmlRead.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmlRead"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.XmlRead.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlRead.XmlFileName">
            <summary>
            Gets or sets the name of the XML file.
            </summary>
            <value>The name of the XML file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlRead.XPath">
            <summary>
            Gets or sets the XPath.
            </summary>
            <value>The XPath.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlRead.Value">
            <summary>
            Gets the value read from file.
            </summary>
            <value>The value.</value>
            <remarks>
            If the XPath returns multiple nodes, the values will be semicolon delimited.
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlRead.Namespace">
            <summary>
            Gets or sets the default namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlRead.Prefix">
            <summary>
            Gets or sets the prefix to associate with the namespace being added.
            </summary>
            <value>The namespace prefix.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.XmlUpdate">
            <summary>
            Updates a XML document using a XPath.
            </summary>
            <example>Update a XML element.
            <code><![CDATA[
            <XmlUpdate Prefix="n"
                Namespace="http://schemas.microsoft.com/developer/msbuild/2003" 
                XPath="/n:Project/n:PropertyGroup/n:TestUpdate"
                XmlFileName="Subversion.proj"
                Value="Test from $(MSBuildProjectFile)"/>
            ]]></code>
            </example>
            <remarks>
            The XML node being updated must exist before using the XmlUpdate task.
            </remarks>
        </member>
        <member name="M:MSBuild.Community.Tasks.XmlUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmlUpdate"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.XmlUpdate.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlUpdate.XmlFileName">
            <summary>
            Gets or sets the name of the XML file.
            </summary>
            <value>The name of the XML file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlUpdate.XPath">
            <summary>
            Gets or sets the XPath.
            </summary>
            <value>The XPath.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlUpdate.Value">
            <summary>
            Gets or sets the value to write.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlUpdate.Namespace">
            <summary>
            Gets or sets the default namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.XmlUpdate.Prefix">
            <summary>
            Gets or sets the prefix to associate with the namespace being added.
            </summary>
            <value>The namespace prefix.</value>
        </member>
        <member name="T:MSBuild.Community.Tasks.Zip">
            <summary>
            Create a zip file with the files specified.
            </summary>
            <example>Create a zip file
            <code><![CDATA[
            <ItemGroup>
                <ZipFiles Include="**\*.*" Exclude="*.zip" />
            </ItemGroup>
            <Target Name="Zip">
                <Zip Files="@(ZipFiles)" 
                    ZipFileName="MSBuild.Community.Tasks.zip" />
            </Target>
            ]]></code>
            Create a zip file using a working directory.
            <code><![CDATA[
            <ItemGroup>
                <RepoFiles Include="D:\svn\repo\**\*.*" />
            </ItemGroup>
            <Target Name="Zip">
                <Zip Files="@(RepoFiles)" 
                    WorkingDirectory="D:\svn\repo" 
                    ZipFileName="D:\svn\repo.zip" />
            </Target>
            ]]></code>
            </example>
        </member>
        <member name="M:MSBuild.Community.Tasks.Zip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zip"/> class.
            </summary>
        </member>
        <member name="M:MSBuild.Community.Tasks.Zip.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.ZipFileName">
            <summary>
            Gets or sets the name of the zip file.
            </summary>
            <value>The name of the zip file.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.ZipLevel">
            <summary>
            Gets or sets the zip level.
            </summary>
            <value>The zip level.</value>
            <remarks>0 - store only to 9 - means best compression</remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.Files">
            <summary>
            Gets or sets the files to zip.
            </summary>
            <value>The files to zip.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.Flatten">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zip"/> is flatten.
            </summary>
            <value><c>true</c> if flatten; otherwise, <c>false</c>.</value>
            <remarks>
            Flattening the zip means that all directories will be removed 
            and the files will be place at the root of the zip file
            </remarks>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:MSBuild.Community.Tasks.Zip.WorkingDirectory">
            <summary>
            Gets or sets the working directory for the zip file.
            </summary>
            <value>The working directory.</value>
            <remarks>
            The working directory is the base of the zip file.  
            All files will be made relative from the working directory.
            </remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MockObjectFramework\Microsoft.VisualStudio.QualityTools.MockObjectFramework.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.QualityTools.MockObjectFramework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMockException">
            <summary>
            The exception that is thrown when a sequence mock receives an
            unexpected call to the object that it has constructed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_AdditionalInterfaceContainsGenericParameters">
            <summary>
              Looks up a localized string similar to The interface &apos;{0}&apos; contains generic parameters..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_AdditionalInterfaceIsNotInterface">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not an interface..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_CannotCallAbstractMethodsFromConstructor">
            <summary>
              Looks up a localized string similar to A mock of this class cannot be instantiated because it calls an abstract method from its constructor.  Either pick a different constructor or refactor this code so it does not call an abstract method..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_CanSetConstructorForClassOnly">
            <summary>
              Looks up a localized string similar to Constructor can be set only when mocking class types..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_CanSetCreateArgumentsForClassOnly">
            <summary>
              Looks up a localized string similar to Create arguments can be set only when mocking class types..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_MethodContainsGenericParameters">
            <summary>
              Looks up a localized string similar to The specified method contains generic parameters..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_TypeIsSealed">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is sealed.  Sealed types cannot be mocked..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_UnknownConstructor">
            <summary>
              Looks up a localized string similar to A constructor matching the specified argument types was not found on type &apos;{0}&apos; or is not accessible, or the arguments cannot be bound to the constructor identified by calling the SetConstructor method..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_UnknownMethod">
            <summary>
              Looks up a localized string similar to A method &apos;{1}&apos; matching the specified name and arguments was not found on type &apos;{0}&apos; or cannot be mocked..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_UnknownMethodEntry">
            <summary>
              Looks up a localized string similar to The specified method entry is unknown to this mock..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_UnknownObject">
            <summary>
              Looks up a localized string similar to The specified mock object was not created by this mock..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.Mock_UnknownType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is unknown to this mock..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockConstraint_InvalidGenericArguments">
            <summary>
              Looks up a localized string similar to The generic arguments array is invalid.  It must be at least one element long and each element must be null, a Type instance or a string..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockConstraint_NoZeroLengthTypeValues">
            <summary>
              Looks up a localized string similar to The type values array cannot be zero length..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockConstraint_TNotAssignableFromType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not assignable from the specified type..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockConstraint_TNotEqualToType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not equal to the specified type..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockDefaultHandler_NotImplemented">
            <summary>
              Looks up a localized string similar to A mock of method &apos;{1}&apos; on type &apos;{0}&apos; with the specified arguments is not implemented..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockNotImplementedException_Message">
            <summary>
              Looks up a localized string similar to The mock is not implemented..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockStaticHandler_OutputArgumentsDoNotMatchMethod">
            <summary>
              Looks up a localized string similar to The output arguments array does not match the method arguments..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockStaticHandler_OutputArgumentsNotSpecifiedWhenRequired">
            <summary>
              Looks up a localized string similar to The output arguments array was not specified but the method contains out parameters..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockStaticHandler_OutputArgumentsSpecifiedWhenNotRequired">
            <summary>
              Looks up a localized string similar to The output arguments array was specified but the method does not contain ref or out parameters..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.MockStaticHandler_ReturnValueDoesNotMatchMethod">
            <summary>
              Looks up a localized string similar to The return value does not match the type of the method return value..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_ArgumentCountExpectationNotMet">
            <summary>
              Looks up a localized string similar to An expectation on a sequence mock was not met.  Expected call to method &apos;{1}&apos; on type &apos;{0}&apos; with {2} arguments but got a call with {3} arguments..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_ArgumentExpectationNotMet">
            <summary>
              Looks up a localized string similar to An expectation on a sequence mock was not met.  Expected call to method &apos;{1}&apos; on type &apos;{0}&apos; with parameter &quot;{2}&quot; matching &quot;{3}&quot; but got value &quot;{4}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_GenericArgumentExpectationNotMet">
            <summary>
              Looks up a localized string similar to An expectation on a sequence mock was not met.  Expected call to method &apos;{1}&apos; on type &apos;{0}&apos; with one set of generic arguments but got a different set..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_MethodExpectationNotMet">
            <summary>
              Looks up a localized string similar to An expectation on a sequence mock was not met.  Expected call to method &apos;{1}&apos; on type &apos;{0}&apos; but got call to method &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_TooManyCalls">
            <summary>
              Looks up a localized string similar to An extraneous call was made to a sequence mock.  Got call to method &apos;{1}&apos; on type &apos;{0}&apos; when no call was expected..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_TypeExpectationNotMet">
            <summary>
              Looks up a localized string similar to An expectation on a sequence mock was not met.  Expected call on type &apos;{0}&apos; but got call on type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMock_VerificationFailed">
            <summary>
              Looks up a localized string similar to Verification of a sequence mock failed.  Only {0} calls out of {1} were made.  Expected call to method &apos;{3}&apos; on type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Properties.Resources.SequenceMockException_Message">
            <summary>
              Looks up a localized string similar to Method call is not valid due to the current state of the sequence mock..
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry">
            <summary>
            Represents a method and a set of arguments to the method.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry.Method">
            <summary>
            Gets the method associated with this entry.  This method may
            contain generic parameters to specify a range of acceptable
            methods.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry.Arguments">
            <summary>
            Gets a list of arguments to the method.  These arguments may contain
            mock constraints to specify a range of acceptable arguments.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MethodId">
            <summary>
            Represents information that uniquely identifies a method.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MethodId class.
            </summary>
            <param name="methodName">The name of a method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.#ctor(System.String,System.Type[])">
            <summary>
            Initializes a new instance of the MethodId class.
            </summary>
            <param name="methodName">The name of a method.</param>
            <param name="genericArguments">The set of generic method arguments, if any.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the MethodId class.
            </summary>
            <param name="type">The type on which the method resides, if required.</param>
            <param name="methodName">The name of a method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.#ctor(System.Type,System.String,System.Type[])">
            <summary>
            Initializes a new instance of the MethodId class.
            </summary>
            <param name="type">The type on which the method resides, if required.</param>
            <param name="methodName">The name of a method.</param>
            <param name="genericArguments">The set of generic method arguments, if any.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the MethodId class.
            </summary>
            <param name="method">An underlying method object.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.Type">
            <summary>
            Gets the type on which the method resides, if required.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.MethodName">
            <summary>
            Gets the name of the method.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.GenericArguments">
            <summary>
            Gets the list of generic method arguments, if any.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MethodId.Method">
            <summary>
            Gets the underlying method object, if specified.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate">
            <summary>
            Represents a delegate that is called when a <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler"/>
            is attached to a mock object.
            </summary>
            <param name="obj">The mock object on which the method is being invoked.</param>
            <param name="method">The method to invoke.</param>
            <param name="arguments">The arguments to the method.</param>
            <returns>The return value of the method, or null if the return value is a void type.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockNotImplementedException">
            <summary>
            The exception that is thrown when a call is made to a mock object that
            has no implementation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockQueryMethod">
            <summary>
            Represents a mechanism for deciding if a virtual method should call the
            IMockHandler.InvokeMethod implementation or delegate to its base.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.IMockQueryMethod.IsMocked(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Indicates if a method with specific arguments has been mocked.
            </summary>
            <param name="obj">The mock object containing the method in question.</param>
            <param name="method">The method in question.</param>
            <param name="arguments">The arguments to the method.</param>
            <returns>True if the method with these arguments has been mocked; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1">
            <summary>
            Represents an object that can mock a specific behavior of another object.
            </summary>
            <typeparam name="T">The type of the object to mock.</typeparam>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1">
            <summary>
            Represents an object that can mock the behavior of another object.
            </summary>
            <typeparam name="T">The type of the object to mock.</typeparam>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler">
            <summary>
            Represents a mechanism for handling a method call to a mock object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler.InvokeMethod(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Invokes a method defined on a mock object.
            </summary>
            <param name="obj">The mock object on which the method is being invoked.</param>
            <param name="method">The method to invoke.</param>
            <param name="arguments">The arguments to the method.</param>
            <returns>The return value of the method, or null if the return value is a void type.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.#ctor">
            <summary>
            Initializes a new instance of the Mock class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the Mock class with additional interfaces.
            </summary>
            <param name="additionalInterfaces">A set of additional interfaces to be implemented by the mock object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.SetCallingAssembly(System.Reflection.Assembly)">
            <summary>
            Sets the assembly that created this mock.  When dynamically
            building the assembly to contain the mock, characteristics like
            version, culture and public key will be inherited from this
            assembly.
            </summary>
            <param name="assembly">The calling assembly.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String)">
            <summary>
            Implements a method with no arguments or return value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object)">
            <summary>
            Implements a method with no arguments to return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Exception)">
            <summary>
            Implements a method with no arguments to throw the specified exception.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Implements a method with no arguments using a custom mock delegate.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.ImplementAs``1(System.String,``0)">
            <summary>
            Implements a method with no arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodName">The name of the method to implement.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Implements a method with no arguments using a custom mock handler.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[])">
            <summary>
            Implements a method with arguments.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],System.Object)">
            <summary>
            Implements a method with arguments to return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],System.Object[])">
            <summary>
            Implements a method with arguments to populate the specified output arguments.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],System.Object[],System.Object)">
            <summary>
            Implements a method with arguments to populate the specified output arguments and return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],System.Exception)">
            <summary>
            Implements a method with arguments to throw the specified exception.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Implements a method with arguments using a custom mock delegate.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.ImplementAs``1(System.String,System.Object[],``0)">
            <summary>
            Implements a method with no arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(System.String,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Implements a method with arguments using a custom mock handler.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId)">
            <summary>
            Implements a method with no arguments or return value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object)">
            <summary>
            Implements a method with no arguments to return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Exception)">
            <summary>
            Implements a method with no arguments to throw the specified exception.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Implements a method with no arguments using a custom mock delegate.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.ImplementAs``1(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,``0)">
            <summary>
            Implements a method with no arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Implements a method with no arguments using a custom mock handler.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[])">
            <summary>
            Implements a method with arguments.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object)">
            <summary>
            Implements a method with arguments to return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object[])">
            <summary>
            Implements a method with arguments to populate the specified output arguments.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object[],System.Object)">
            <summary>
            Implements a method with arguments to populate the specified output arguments and return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Exception)">
            <summary>
            Implements a method with arguments to throw the specified exception.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Implements a method with arguments using a custom mock delegate.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.ImplementAs``1(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],``0)">
            <summary>
            Implements a method with arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Implement(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Implements a method with arguments using a custom mock handler.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.SetConstructor(System.Type[])">
            <summary>
            Defines which base constructor should be called when creating
            the instance of the mock object returned by this object's
            Instance property.
            </summary>
            <param name="argumentTypes">The set of argument types that identify the constructor.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.SetCreateArguments(System.Object[])">
            <summary>
            Defines which arguments should be passed when creating the
            instance of the mock object returned by this object's Instance
            property.
            </summary>
            <param name="arguments">A set of arguments to pass to one of the mock object's constructors.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.FromInstance(`0)">
            <summary>
            Gets the Mock class instance that created a mock object instance.
            </summary>
            <param name="instance">A mock object created by an instance of the Mock class.</param>
            <returns>The Mock class instance that created the specified mock object instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.IsKnownType(System.Type)">
            <summary>
            Indicates if the specified type is known by this mock.
            </summary>
            <param name="type">A type.</param>
            <returns>True if the type is known by this mock; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.GetMethodEntry(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[])">
            <summary>
            Gets a method entry that equals the specified information.
            </summary>
            <param name="methodId">The identifier of a method.</param>
            <param name="arguments">A set of arguments (may include constraints) to the method.</param>
            <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry"/> representing the specified information.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.FindEqualMethodEntry(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[])">
            <summary>
            Finds a method entry that equals the specified information.
            </summary>
            <param name="methodId">The identifier of a method.</param>
            <param name="arguments">A set of arguments (may include constraints) to the method.</param>
            <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry"/> representing the specified information, or null if one could not be found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.CreateInstanceType">
            <summary>
            Creates the mock object instance type.
            </summary>
            <returns>A type that can be created to provide instances of the mock object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.CreateInstance">
            <summary>
            Creates an instance of the mock object.
            </summary>
            <returns>An instance of the mock object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.IsMocked(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Indicates if a method with specific arguments has been mocked.
            </summary>
            <param name="method">The method in question.</param>
            <param name="arguments">The arguments to the method.</param>
            <returns>True if the method with these arguments has been mocked; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.InvokeMethod(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Invokes a method defined on the mock object.
            </summary>
            <param name="method">The method to invoke.</param>
            <param name="arguments">The arguments to the method.</param>
            <returns>The return value of the method, or null if the return value is a void type.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.FindMatchingMethodEntry(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Finds a method entry that matches the specified information.
            </summary>
            <param name="method">The method in question.</param>
            <param name="arguments">A set of arguments (not including constraints) to the method.</param>
            <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry"/> representing the specified information, or null if one could not be found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.FindMatchingMethodEntries(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Finds all the method entries that match the specified information, in order of quality.
            </summary>
            <param name="method">The method in question.</param>
            <param name="arguments">A set of arguments (not including constraints) to the method.</param>
            <returns>A collection of <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry"/> objects representing the specified information, or an empty collection if none could be found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.GetHandler(Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry)">
            <summary>
            Gets the handler associated with a specific mock method entry.
            </summary>
            <param name="entry">The entry for which a handler is being retrieved.</param>
            <returns>A handler associated with the specified mock method entry, or null if no handler is defined.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.SetHandler(Microsoft.VisualStudio.TestTools.MockObjects.MockMethodEntry,Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Associates a handler with a specific mock method entry.
            </summary>
            <param name="entry">The entry for which a handler is being set.</param>
            <param name="handler">A handler to associate with the mock method entry.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Type">
            <summary>
            Gets the primary type of the mock object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.AdditionalInterfaces">
            <summary>
            Gets the collection of additional interfaces implemented by the mock object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.InstanceType">
            <summary>
            Gets the instance type of the mock object as generated by this object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.Mock`1.Instance">
            <summary>
            Gets an instance of the mock object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.#ctor">
            <summary>
            Initializes a new instance of the SequenceMock class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the SequenceMock class with additional interfaces.
            </summary>
            <param name="additionalInterfaces">A set of additional interfaces to be implemented by the mock object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String)">
            <summary>
            Adds an expectation of a method with no arguments or return value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object)">
            <summary>
            Adds an expectation of a method with no arguments to return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Exception)">
            <summary>
            Adds an expectation of a method with no arguments to throw the specified exception.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Adds an expectation of a method with no arguments using a custom mock delegate.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectationAs``1(System.String,``0)">
            <summary>
            Adds an expectation of a method with no arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodName">The name of the method to implement.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Adds an expectation of a method with no arguments using a custom mock handler.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[])">
            <summary>
            Adds an expectation of a method with arguments.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],System.Object)">
            <summary>
            Adds an expectation of a method with arguments to return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],System.Object[])">
            <summary>
            Adds an expectation of a method with arguments to populate the specified output arguments.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],System.Object[],System.Object)">
            <summary>
            Adds an expectation of a method with arguments to populate the specified output arguments and return the specified value.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],System.Exception)">
            <summary>
            Adds an expectation of a method with arguments to throw the specified exception.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Adds an expectation of a method with arguments using a custom mock delegate.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectationAs``1(System.String,System.Object[],``0)">
            <summary>
            Adds an expectation of a method with arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(System.String,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Adds an expectation of a method with arguments using a custom mock handler.
            </summary>
            <param name="methodName">The name of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId)">
            <summary>
            Adds an expectation of a method with no arguments or return value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object)">
            <summary>
            Adds an expectation of a method with no arguments to return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Exception)">
            <summary>
            Adds an expectation of a method with no arguments to throw the specified exception.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Adds an expectation of a method with no arguments using a custom mock delegate.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectationAs``1(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,``0)">
            <summary>
            Adds an expectation of a method with no arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Adds an expectation of a method with no arguments using a custom mock handler.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[])">
            <summary>
            Adds an expectation of a method with arguments.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object)">
            <summary>
            Adds an expectation of a method with arguments to return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object[])">
            <summary>
            Adds an expectation of a method with arguments to populate the specified output arguments.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Object[],System.Object)">
            <summary>
            Adds an expectation of a method with arguments to populate the specified output arguments and return the specified value.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="outputArguments">A set of arguments that are supplied as output arguments by the mock implementation.</param>
            <param name="returnValue">The value to be returned by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],System.Exception)">
            <summary>
            Adds an expectation of a method with arguments to throw the specified exception.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="exception">The exception to be thrown by the mock implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Adds an expectation of a method with arguments using a custom mock delegate.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectationAs``1(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],``0)">
            <summary>
            Adds an expectation of a method with arguments using a custom delegate.
            </summary>
            <typeparam name="D">A delegate type that reflects the signature of the method to implement.</typeparam>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="implementation">A delegate that implements this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.AddExpectation(Microsoft.VisualStudio.TestTools.MockObjects.MethodId,System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler)">
            <summary>
            Adds an expectation of a method with arguments using a custom mock handler.
            </summary>
            <param name="methodId">The identifier of the method to implement.</param>
            <param name="arguments">A set of arguments that may include mock constraints.</param>
            <param name="handler">An <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockHandler"/> that handles this method.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.Reset">
            <summary>
            Resets the sequence mock to the beginning of its expectation list.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.Verify">
            <summary>
            Verifies that all expected calls were made to the sequence mock.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.SequenceIndex">
            <summary>
            Gets the current index into the mock sequence list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.SequenceMock`1.Sequence">
            <summary>
            Gets an ordered list of expected method entries and their handlers.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler`1">
            <summary>
            Represents an IMockHandler implementation that directly delegates
            to the specified delegate implementation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler"/> class.
            </summary>
            <param name="implementation">A delegate that supplies a handler implementation.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler`1.Implementation">
            <summary>
            Gets the delegate that supplies this handler's implementation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler">
            <summary>
            Represents an IMockHandler implementation that directly delegates
            to the specified <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler.#ctor(Microsoft.VisualStudio.TestTools.MockObjects.MockDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDelegateHandler"/> class.
            </summary>
            <param name="implementation">A delegate that supplies a handler implementation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint">
            <summary>
            Represents a set of standard mock constraints.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNull``1">
            <summary>
            Constrains argument values to null.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotNull``1">
            <summary>
            Constrains argument values to non-null.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsDefault(System.String)">
            <summary>
            Constrains generic argument values to their default.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsDefault(System.Object[])">
            <summary>
            Constrains generic argument values to their default.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotDefault(System.String)">
            <summary>
            Constrains generic argument values to non-default.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotDefault(System.Object[])">
            <summary>
            Constrains generic argument values to non-default.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsEqual``1(``0)">
            <summary>
            Constrains argument values to equal the specified value.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotEqual``1(``0)">
            <summary>
            Constrains argument values to not equal the specified value.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsSame``1(``0)">
            <summary>
            Constrains argument values to be the same reference as the specified value.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotSame``1(``0)">
            <summary>
            Constrains argument values to be different references from the specified value.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsIn``1(``0[])">
            <summary>
            Constrains argument values to any in the specified set of values.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotIn``1(``0[])">
            <summary>
            Constrains argument values to any not in the specified set of values.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfType(System.Type)">
            <summary>
            Constrains argument values of an object type to any of the
            specified type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfType``1(System.Type)">
            <summary>
            Constrains argument values to any of the specified type.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfAnyType(System.Type[])">
            <summary>
            Constrains argument values of an object type to any of the
            specified types.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfAnyType``1(System.Type[])">
            <summary>
            Constrains argument values of to any of the specified types.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfAnyType(System.String,System.Type[])">
            <summary>
            Constrains argument values of to any of the specified types.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
            <param name="values">A set of argument value types.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfAnyType(System.Object[],System.Type[])">
            <summary>
            Constrains argument values of to any of the specified types.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
            <param name="values">A set of argument value types.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsAnything``1">
            <summary>
            Allows argument values to be anything.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsAnything(System.String)">
            <summary>
            Allows generic argument values to be anything.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsAnything(System.Object[])">
            <summary>
            Allows generic argument values to be anything.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsEqual(System.String,System.Boolean)">
            <summary>
            Constrains a string argument to the specified value, optionally ignoring case.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsEqual(System.String,System.Globalization.CultureInfo)">
            <summary>
            Constrains a string argument to the specified value, using the specified culture.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsEqual(System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Constrains a string argument to the specified value, optionally ignoring case and using the specified culture.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotEqual(System.String,System.Boolean)">
            <summary>
            Constrains a string argument to not the specified value, optionally ignoring case.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotEqual(System.String,System.Globalization.CultureInfo)">
            <summary>
            Constrains a string argument to not the specified value, using the specified culture.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsNotEqual(System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Constrains a string argument to not the specified value, optionally ignoring case and using the specified culture.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsMatch(System.String)">
            <summary>
            Constrains a string argument to all strings matching the specified regular expression.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsMatch(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Constrains a string argument to all strings matching the specified regular expression using the specified options.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfTypeAnd``1(Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains argument values to any that are an instance of the
            specified constraint type and match the specified constraint.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfTypeAnd(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains generic argument values to any that are an instance of
            the specified constraint type and match the specified constraint.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
            <param name="constraint">A constraint.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfTypeAnd(System.Object[])">
            <summary>
            Constrains generic argument values to any that are an instance of
            the specified constraint type and match the specified constraint.
            </summary>
            <param name="genericArgumentsAndConstraint">A set of generic type definitions and generic parameter names that build up a generic type, followed by an IMockConstraint object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.IsInstanceOfTypeAnd(System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains generic argument values to any that are an instance of
            the specified constraint type and match the specified constraint.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
            <param name="constraint">A constraint.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Not``1(Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains an argument in an opposite fashion to the specified constraint.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Not(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains an argument in an opposite fashion to the specified constraint.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
            <param name="constraint">A constraint.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Not(System.Object[])">
            <summary>
            Constrains an argument in an opposite fashion to the specified constraint.
            </summary>
            <param name="genericArgumentsAndConstraint">A set of generic type definitions and generic parameter names that build up a generic type, followed by an IMockConstraint object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Not(System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint)">
            <summary>
            Constrains an argument in an opposite fashion to the specified constraint.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
            <param name="constraint">A constraint.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Or``1(Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using any of the specified constraints.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Or(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using any of the specified constraints.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
            <param name="constraint1">A first constraint.</param>
            <param name="constraint2">A second constraint.</param>
            <param name="constraints">Subsequent constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.Or(System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using any of the specified constraints.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
            <param name="constraint1">A first constraint.</param>
            <param name="constraint2">A second constraint.</param>
            <param name="constraints">Subsequent constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.And``1(Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using all of the specified constraints.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.And(System.String,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using all of the specified constraints.
            </summary>
            <param name="genericParameterName">The name of the generic parameter used for the argument type.</param>
            <param name="constraint1">A first constraint.</param>
            <param name="constraint2">A second constraint.</param>
            <param name="constraints">Subsequent constraints.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockConstraint.And(System.Object[],Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint,Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint[])">
            <summary>
            Constrains an argument using all of the specified constraints.
            </summary>
            <param name="genericArguments">A set of generic type definitions and generic parameter names that build up a generic type.</param>
            <param name="constraint1">A first constraint.</param>
            <param name="constraint2">A second constraint.</param>
            <param name="constraints">Subsequent constraints.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint">
            <summary>
            Represents a mechanism for matching or constraining arguments passed
            into a method that is being mocked.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint.Matches(System.Object)">
            <summary>
            Indicates if the specified argument value matches this constraint.
            </summary>
            <param name="value">An argument value.</param>
            <returns>True if the argument value matches this constraint; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.IMockConstraint.Type">
            <summary>
            Gets the type of the argument under constraint.
            </summary>
            <remarks>
            This property can be of three forms.  It may be a Type object
            representing a closed constructed type, e.g. typeof(string).  It
            may be a string representing the name of a generic parameter from
            the method that this constraint targets, e.g. "T".  Finally it
            may be an object array that starts with some open constructed
            type followed by generic argument values (which may themselves be
            open constructed types).
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.IMockQualityConstraint.MatchQuality">
            <summary>
            Gets the match quality of a constraint.
            </summary>
            <returns>
            A percentage value indicating how well the constraint matches
            an argument.
            </returns>
            <remarks>
            When there is more than one matching method entry for a type,
            method name and arguments, the overall quality of any given match
            is used to determine which is the best matching method entry.  The
            quality of a match is defined as (1/(match set size))*100 where
            the match set size is the number of possible inputs that the
            constraint will match.  For example, a constraint that checks
            equality of a specific argument will have a quality of 100%
            because the match set size is 1.  A constraint that checks if
            the argument is in a set of possible values, say { 1, 2, 5, 7 },
            will have a quality of 25%.  A constraint that allows the
            argument to be anything, effectively having an infinite match
            set size, will have a quality of 0%.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.IMockGenericConstraint">
            <summary>
            Represents a mechanism for matching or constraining arguments passed
            into a method with generic parameters that is being mocked.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.IMockGenericConstraint.Matches(System.Type,System.Object)">
            <summary>
            Indicates if the specified argument value matches this constraint.
            </summary>
            <param name="boundType">An actual type produced by binding the constraint type to a closed construction of a generic method.</param>
            <param name="value">An argument value.</param>
            <returns>True if the argument value matches this constraint; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockAssemblyNameAttribute">
            <summary>
            Represents an attribute for specifying the name of the assembly to
            be used for dynamically generated mock objects.  Other characteristics
            of the assembly will be inherited from the client assembly.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockDefaultHandler">
            <summary>
            Represents the default IMockHandler implementation.  It throws a
            MockNotImplementedException for interface or abstract methods or
            delegates to the base implementation for virtual methods.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.MockObjects.MockDefaultHandler.Instance">
            <summary>
            Gets the single instance of this class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockStaticHandler">
            <summary>
            Represents an IMockHandler implementation that updates output
            arguments with the specified values and returns the specified return
            value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockStaticHandler.#ctor(System.Reflection.MethodInfo,System.Object[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockStaticHandler"/> class.
            </summary>
            <param name="method">The method that this handler handles.</param>
            <param name="outputArguments">An array of output arguments when this method contains output arguments.</param>
            <param name="returnValue">A return value when this method returns a value; otherwise, null.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockStaticHandler.OutputArguments">
            <summary>
            Gets the list of arguments that are supplied in output arguments of the method.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockStaticHandler.ReturnValue">
            <summary>
            Gets the return value that is returned from the method.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.MockObjects.MockExceptionHandler">
            <summary>
            Represents an IMockHandler implementation that throws the specified exception.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.MockObjects.MockExceptionHandler.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.MockObjects.MockExceptionHandler"/> class.
            </summary>
            <param name="exception">An exception to throw when the handler is called.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.MockObjects.MockExceptionHandler.Exception">
            <summary>
            Gets the exception that is thrown when this handler is called.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\Docs\DB.rtf ===
{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;} {\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;} {\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;} {\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;} {\fhiminor\f31506\fbidi \froman\fcharset0\fprq0{\*\panose 020f0502020204030204}Calibri;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f39\fbidi \froman\fcharset238\fprq2 Times New Roman CE;} {\f40\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f42\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);} {\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f46\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f49\fbidi \fswiss\fcharset238\fprq2 Arial CE;} {\f50\fbidi \fswiss\fcharset204\fprq2 Arial Cyr;}{\f52\fbidi \fswiss\fcharset161\fprq2 Arial Greek;}{\f53\fbidi \fswiss\fcharset162\fprq2 Arial Tur;}{\f54\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);} {\f55\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f56\fbidi \fswiss\fcharset186\fprq2 Arial Baltic;}{\f57\fbidi \fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f59\fbidi \fmodern\fcharset238\fprq1 Courier New CE;} {\f60\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f62\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);} {\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f66\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f379\fbidi \froman\fcharset238\fprq2 Cambria Math CE;} {\f380\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f382\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f383\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f386\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;} {\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;} {\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);} {\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;} {\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;} {\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;} {\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;} {\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;} {\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;} {\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);} {\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;} {\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;} {\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;} {\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;} {\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);} {\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);} {\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;} {\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);} {\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0; \red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128; \red192\green192\blue192;}{\*\defchp \fs22 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{ \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive  \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1 \widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused \sqformat Normal Table;}}{\*\listtable {\list\listtemplateid567545836\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat7\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0  \ltrch\fcs0 \hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;} \rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703 \'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext \leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0 \levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative \levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1 \lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0 \levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid679702606}}{\*\listoverridetable {\listoverride\listid679702606\listoverridecount0\ls1}}{\*\rsidtbl \rsid550982\rsid794491\rsid1008555\rsid4066400\rsid4477910\rsid4919316\rsid5583807\rsid8606967\rsid9706458\rsid15946172}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1 \mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator ajayka}{\creatim\yr2006\mo11\dy7\hr14\min55}{\revtim\yr2006\mo12\dy12\hr11\min2}{\version12}{\edmins17}{\nofpages2}{\nofwords467}{\nofchars2713}{\nofcharsws3174}{\vern32857}} {\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect  \widowctrl\ftnbj\aenddoc\trackmoves1\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701 \dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot4066400\notcvasp\notbrkcnstfrctbl\notvatxbx\krnprsnet\cachedcolbal \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1 \pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5 \pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang  {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0  \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 Database installation step \par  \par 1. Restore Alexprobe db backup to your designated database server from \\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database\\AlexProbe. The database name is }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \b\f1\fs20\insrsid4066400\charrsid4066400 AlexProbe}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par   \par 2. Create and build GeoSystemETL database. This needs to be on the same server as the Alexprobe Db. Scripts at <\\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database\\GeoSystemETL}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid4066400 >}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400   \par \tab Run DB_GeoSystemETL to create database \par \tab Run TBL_GeoSystemETL to create tables and keys \par \tab Run DATA_GeoSystemETL to populate domain data \par \tab Run SP_GeoSystemETL to create stored procedures for this db \par 3. Create and build GeoSystem database. This needs to be on the same server as the Alexprobe db and GeoSystemETL db. Scripts at: \\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database  \par \tab Run DB_GeoSystem to create database \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4477910 \tab Run Role.Sql to create DB_Executor role \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 \tab Run TBL_GeoSystem to create tables and keys \par \tab Run DATA_GeoSystem to populate domain data \par \tab Run SP_GeoSystem to create stored procedures and customer functions for this db \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5583807 \tab Run Perm.Sql to grant execute permissions to  DB_Executor role \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 4. Create and run GeoSystemETL job to populate the GeoSystem database as per following steps.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 1.\tab Copy the contents of ..\\GeoSystemETL\\SSIS\\ folder to a folder on SQL Server.  \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid4919316 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 2.\tab Create a share to \\SSIS  folder so that it is accessible as \\\\localhost\\ssis.. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 Give FULL permissions to local administrator group on this share and Read-only permissions to everyone else. \par  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 3.\tab Run the ETL job from folder..\\Databases\\GeoSystemETL\\ Geo System ETL Job.sql  from the SQL Query window. This installs the ETL Job \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 4.\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 Edit the step 2}{\rtlch\fcs1 \af1\afs20  \ltrch\fcs0 \f1\fs20\insrsid4066400  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 i}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 n this job to reflect the correct folder location of \lquote SSIS\rquote   folder on the server. Please note that network share/UNC path don\rquote t work well. So, please mention the path in the job step }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 2}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400   (ex: C:\\SSIS\'85).  \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 5.\tab Copy the content of \lquote \\Publisher\rquote  folder to a drive on Sql Server. This can  be the same drive as in step 1 above. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 6.\tab In the SQL Job, step 6}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  , please specify the correct path of the GeoSystemPublisher.exe. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 \hich\af1\dbch\af0\loch\f1 7.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls1\rin0\lin720\itap0\pararsid9706458 { \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 In the \\Publisher\\GeoSystemPublisher.exe.config, change the settings for DBConnectionString and DBDataPath as appropriate for your environment.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \f1\fs20\insrsid9706458  \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 \hich\af1\dbch\af0\loch\f1 8.\tab}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 In the SQL Job, Step }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \f1\fs20\insrsid1008555 7}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 , please specify the correct path for }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf6\lang1024\langfe1024\noproof\insrsid794491 <GeoSystemBackupPath>. }{\rtlch\fcs1  \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 This is the location where a SQL Lite backup of the GeoSystem database is saved to. Please also share and give read-permissions to public for this folder so that interested groups can access this backup. \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 \hich\af1\dbch\af0\loch\f1 9.\tab}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 In SQL Job, step  8 the Geo System database is copied to Production Servers. The production servers are to be added to table GeoSystemETL.dbo.GeoProductionServers. Also, linked servers are created for these on the ETL database server. The backup/restore paths are stored in  GeoSystemETL.dbo.GeoConfigure table.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982\charrsid550982 GeoBackupFilePath}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982   is the location where backup file is saved to. }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982\charrsid550982 GeoBackupFileUNCPath}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982   is the share for remote restore. Please make sure this share is  created and shared (read-only permissions).}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555  \par }\pard \ltrpar\ql \li360\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin360\itap0\pararsid9706458 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458  \par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458  5. GeoSystem DB has a data role called DB_Executor. This has execute permission on all the SPs and User functions on GeoSystem. Assign appropriate user(s) into this role.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }{\*\themedata 504b030414000600080000002100828abc13fa0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb6ac3301045f785fe83d0b6d8 72ba28a5d8cea249777d2cd20f18e4b12d6a8f843409c9df77ecb850ba082d74231062ce997b55ae8fe3a00e1893f354e9555e6885647de3a8abf4fbee29bbd7 2a3150038327acf409935ed7d757e5ee14302999a654e99e393c18936c8f23a4dc072479697d1c81e51a3b13c07e4087e6b628ee8cf5c4489cf1c4d075f92a0b 44d7a07a83c82f308ac7b0a0f0fbf90c2480980b58abc733615aa2d210c2e02cb04430076a7ee833dfb6ce62e3ed7e14693e8317d8cd0433bf5c60f53fea2fe7 065bd80facb647e9e25c7fc421fd2ddb526b2e9373fed4bb902e182e97b7b461e6bfad3f010000ffff0300504b030414000600080000002100a5d6a7e7c00000 00360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4fc7060abb08 84a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b63095120f88d94fbc 52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462a1a82fe353 bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f7468656d652f7468 656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b4b0d592c9c 070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b4757e8d3f7 29e245eb2b260a0238fd010000ffff0300504b0304140006000800000021000bcba3ae95060000561b0000160000007468656d652f7468656d652f7468656d65 312e786d6cec594d6f1b4518be23f11f467b6f6327b61b4775aad8b11b48d346b15bd4e37877bc3bcdecce6a669cd437d41e9190100571a012370e08a8d44a5c caaf09144191fa17786766d7dec96e48d24650417d48bcb3cfbcdfef331fbe7aed7eccd0011192f2a4e3d52fd73c44129f0734093bdeedd1e0d2aa87a4c24980 194f48c79b11e95d5b7fffbdab784d45242608e627720d77bc48a9746d6949fa308ce5659e9204de4db888b18247112e05021f82dc982d2dd76aada518d3c443 098e41ecadc984fa048db4486f3d17de67f09828a9077c26865a347166186cb05fd70839933d26d001661d0ff404fc7044ee2b0f312c15bce87835f3f196d6af 2ee1b56c125327cc2dcc1b984f362f9b10ec2f1b9d221ccf95d6078df695cdb97c0360aa8cebf7fbbd7e7d2ecf00b0ef83a7d696a2ccc660b5decd651640f66b 5976afd6ac355c7c41fe4ac9e676b7db6db6335bac5003b25f1b25fc6aadd5d85876f00664f1cd12bed1dde8f55a0ede802cbe55c20faeb45b0d176f4011a3c9 7e09ad133a1864d2e79009675b95f05580afd632f80205d530af2ead62c2137552adc5f81e1703006820c38a2648cd5232c13e54710fc76341b15680d7082ebc b143be2c0d695d48fa82a6aae37d9862e88885bc57cfbf7ff5fc293a7af0ece8c14f470f1f1e3df8d10a72666de1242cce7af9ed677f3efe18fdf1f49b978fbe a8c6cb22fed71f3ef9e5e7cfab81d03e0b735e7cf9e4b7674f5e7cf5e9efdf3daa806f083c2ec247342612dd2487688fc7e098898a6b39198bf3cd1845981667 6c24a1c409d65a2ae4f755e4a06fce30cbb2e3d8d1256e04ef08a08f2ae0f5e93dc7e06124a68a5668de8e6207b8c339eb725119856dadab10e6d13409ab958b 6911b787f14195ee1e4e9cfcf6a729f0665e968ee3bd883866ee329c281c928428a4dff17d422abcbb4ba913d71dea0b2ef944a1bb147531ad0cc9888e9d6a5a 4cdaa231e46556e533e4db89cdce1dd4e5accaeb4d72e022a12b30ab307e449813c6eb78aa705c25728463560cf80daca22a238733e117717da920d321611cf5 032265d59c5b02fc2d247d1b036355a67d87cd62172914ddaf927903735e446ef2fd5e84e3b40a3ba44954c47e20f7a14431dae5aa0abec3dd0ed1cf90079c9c 98ee3b9438e93e9d0d6ed3d031695120facd54e85c02553b0c1cd3e4efe89851e0635b031747c740802fbe7e5c51596f2b116fc09a54d5095bc7e8f724dc71d2 ed7111d0b79f7337f134d92550e6e585e71de5bea35cef3f4fb927f5f3598976c1ad40bb7adf6037c5668b1c9fb8439e50c6866ac6c80d6936c912d689600083 7a9e391d92f989298de06bc6eb0e2e14d8cc4182ab8fa88a86114e61835df7b4905066a24389522ee16067862b656b3c6cd2953d1636f581c1f281c46a870776 78450fe7e782b918b3da84e6f0992b5ad102ceaa6ce54a2614dc7e1d65756dd499b5d58d6986ea1c6d7397218765d760701e4dd88020d8b640945b703ed7aae1 6082190974dcedda9ba7c564e1225324231c902c47daef728eea264979ad989b00a89d8a1ce943de29512b686b6bb16fa0ed2c492aaa6b9ca02ecfde9b6429af e0459674df1e6b4796149b9325e8b0e3b59bcb4d0ff938ed781338d3c2d73885ac4bbde7c32c848b215f095bf6a736b3e9f24536dbb9636e13d4e19ac2c6bde4 b0c303a9906a13cbc89686799595004bb4266bff7213c27a510ed84a7f0d2b5656a118fe352b208e6e6ac964427c554c766144c7ce3e6654caa78a8861141ca2 319b8a3d0ce9d7a50afe0454c2d5846104fd00f7683adae6954bce59d3156faf0cce8e63964638a35bdda279275bb8e9e3b90de6a9601ef85669bb71eefcae98 96bf20578a65fc3f7345af277053b012e80cf8708d2b30d2fddaf1b8501107164a23ea0f046c1c0c7740b5c05d2cbc86a282cb64f35f9003fddff69c9561da1a 0e7c6a8f864850588f542408d9055a32d5778ab07ab67659912c13642aaa60ae4cadd9637240d84873604bafed1e8aa0d40d9b64346070c7ebcf7dce3a681cea 4d4eb1df1c0e99afbdb607fee99d8f6d6670cae561b3a1c9e33f37b16255b5f3cdf47ced2d3aa25f2cb6598dbc2b4059612968676dff9a269c73a9b58c55f278 b9991b07592c7b0c83f30d510af73d48ff81f58f0a9fd95f26f4823ae27bc0ad087e68c88c4250d6975a9aee3c040c998f8e33e2cc23ac85d9e0669b271db77c b9bee0bdaedd0795fc3ff35ef79ce19e6fcfdcec3add78a1e1ce63ec863b1bb5dd5b116ec8eff14685a1497e9c31c9313f6c157f7be2e37b90ee4db8e59f3225 4d48e197258161033a34dd001460359aa9eb7f010000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d652f7468 656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d363f2451 eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e319872 0e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9850528a2 c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100828abc13fa0000001c020000130000000000000000000000000000 0000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b00000000000000000000000000 2b0100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c0000000000000000000000000014020000746865 6d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d00140006000800000021000bcba3ae95060000561b00001600000000000000000000 000000d10200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b01000027000000000000 000000000000009a0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000950a00000000} {\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d 617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169 6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363 656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e} {\*\latentstyles\lsdstimax266\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3; \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8; \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6; \lsdpriority39 \lsdlocked0 toc 7;\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title; \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List; \lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2; \lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1; \lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List; \lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid; \lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1; \lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1; \lsdunhideused0 \lsdlocked0 Revision;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1; \lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1; \lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1; \lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2; \lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2; \lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2; \lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2; \lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3; \lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3; \lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3; \lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3; \lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3; \lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4; \lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4; \lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4; \lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4; \lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4; \lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5; \lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5; \lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5; \lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5; \lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6; \lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6; \lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6; \lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6; \lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6; \lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference; \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;}}{\*\datastore 010500000200000018000000 4d73786d6c322e534158584d4c5265616465722e352e3000000000000000000000060000 d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffffec69d9888b8b3d4c859eaf6cd158be0f0000000000000000000000001093 0307201ec701feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000105000000000000}}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\ScoreCard\OLAPDatabase\note.txt ===
before execution, change the line in this script so you have correct datasource:
	<ConnectionString>Provider=SQLNCLI.1;Data Source=b10devmptsqlh02;Integrated Security=SSPI;Initial Catalog=GeoSystemBI</ConnectionString>

Execute this xmla script against your Analysis server. After execution, make sure the data source pointing to your GeoSystemBI sql database is well configured.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\ScoreCard\Relationtional\Linked Server\note.txt ===
Please open this file, and:

1. change the sql servername and user information for connection string
	set @SQLServerName = 'B10PPESQLPIP01\tenant'
	set @UserInfoString = 'integrated Security=sspi;' -- or 'UID=SQLUser;PWD=SQLPwd;'


Note:
1. In production, we need to create a user for @UserInfoString. This user should have the execution rights of TenantDW SP:
	TenantDWServer.TenantDW.[dbo].[WMSPS_GetSubscription_Data] 
2. Please do not change the value of @linkedServerName. Otherwise we also need to modify SP
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\ScoreCard\Relationtional\Jobs\note.txt ===
Execute this Job script to create a job for GeoSystemBI ETL process

Note:
1. Currently this job script uses redmond\fengj as the user account. Please change it to the authorized user who can access the linked server where TenantDW is located.

2. Currently this is an hourly schedule. If in the future ETL and cube processing becomes to be slower, we might change the schedule.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\SDK\GeoSegmentationSystemSDK.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Microsoft Corporation MXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation Title _PID_HLINKSMXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation Prashanth Nimmagadda Normal Prashanth Nimmagadda Microsoft Office Wordurn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags State urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags PersonName lX/3$ hYBa&I:n@Sx lqKhh 7hPQ^v .#;T%m2 5T$o5 ?u3Z( <Plp61 He,`A_17 s{>6G 3fEijIMicrosoft Office Excel Worksheet Biff8 Excel.Sheet.8Microsoft Corporation Sheet1 Sheet2 Sheet3 Worksheets _AdHocReviewCycleID _NewReviewCycle _EmailSubject _AuthorEmail _AuthorEmailDisplayName _ReviewingToolsShownOnce AttributeId and AttributeGroupID in Anon DB chriswo@microsoft.com Chris WorlandChris Worland Prashanth Nimmagadda Microsoft ExcelPrashanth Nimmagadda                                                                                         B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Normal_Sheet1 Sheet1 Sheet2 Sheet3 EnglishName EntityName Afghanistan Albania Algeria Andorra Angola Antigua and Barbuda Argentina Armenia Australia Austria Azerbaijan Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bhutan Bolivia Bosnia and Herzegovina Botswana Brazil Brunei Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Central African Republic Chile China Colombia Comoros Congo Congo (DRC) Costa Rica Croatia Cyprus Czech Republic Denmark Djibouti Dominica Dominican Republic Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Federated States of Micronesia Fiji Islands Finland France FYRO Macedonia Gabon Georgia Germany Ghana Greece Grenada Guatemala Guinea Guinea-Bissau Guyana Haiti Honduras Hungary Iceland India Indonesia Ireland Israel Italy Jamaica Japan Jordan Kazakhstan Kenya Kiribati Kuwait Kyrgyzstan Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Madagascar Malawi Malaysia Maldives Malta Marshall Islands Mauritania Mauritius Mexico Moldova Monaco Mongolia Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands New Zealand Nicaragua Niger Nigeria North Korea Norway Pakistan Palau Panama Papua New Guinea Paraguay Philippines Poland Portugal Qatar Romania Russia Rwanda Samoa San Marino o Tom  and Pr ncipe Saudi Arabia Senegal Serbia and Montenegro Seychelles Sierra Leone Singapore Slovakia Slovenia Solomon Islands Somalia South Africa South Korea Spain Sri Lanka St Kitts and Nevis St Lucia St Vincent and the Grenadines Sudan Suriname Swaziland Sweden Switzerland Syria Taiwan Tajikistan Tanzania Thailand The Bahamas The Gambia Timor-Leste Tonga Trinidad and Tobago Tunisia Turkey Turkmenistan Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Uruguay Uzbekistan Vanuatu Vatican City Venezuela Vietnam Yemen Zambia Zimbabwe MbP?_ MbP?_ MbP?_bjbj\.\. MXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation GeoSegmentation System v1.0 Software Development Kit Updated:   SAVEDATE   \* MERGEFORMAT  11/28/2006 3:32:00 PM Contact:   HYPERLINK "mailto:chriswo"  Chris Worland  (chriswo@microsoft.com)  TOC  \* MERGEFORMAT  GeoSegmentation v1.0  PAGEREF _Toc152490442 \h  Introduction  PAGEREF _Toc152490443 \h  Important Restrictions  PAGEREF _Toc152490444 \h  Installation   MSCOM Environment  PAGEREF _Toc152490445 \h  GeoProfile Provider  PAGEREF _Toc152490446 \h  Configuration  PAGEREF _Toc152490447 \h  Using the GeoProfile Provider  PAGEREF _Toc152490448 \h  GeoLocation API  PAGEREF _Toc152490449 \h  Configuration  PAGEREF _Toc152490450 \h  Using Geographic Information  PAGEREF _Toc152490451 \h  Using Lists of Locations  PAGEREF _Toc152490452 \h  GeoSystem Samples  PAGEREF _Toc152490453 \h  Configuration  PAGEREF _Toc152490454 \h  ASCX Control for Explicit Set  PAGEREF _Toc152490455 \h  Appendix  PAGEREF _Toc152490456 \h  LanguageID Reference  PAGEREF _Toc152490457 \h  Country Code Reference  PAGEREF _Toc152490458 \h  Introduction This document describes how to use the API s provided by the GeoSegmentation code. GeoSegmentation is an out-of-box solution that provides Geographical information about Microsoft s online customers. It is available to internal groups at Microsoft and is not intended to be shared with Microsoft customers or partners. This system is based on IP-Address data Microsoft licenses from Akamai (see restrictions below). The GeoSegmentation v1.0 API provides the following data about each customer: MapPointId (nullable int, 32313) MapPointIdParent (nullable int, 123) CountryRegionCode (string,  StateProvinceCode (string,  TimeZoneDisplayName (string,  CountryRegionDisplayName (string,  United States StateProvinceDisplayName (string,  Washington CityDisplayName (string,  Redmond PostalCode (3 options at runtime) Option 1: No zip codes Option 2: City Only (string,  98052-98053+98072 Option 3: City+30 Miles (string,  98052-98100+98078 Note: Option 3 contains the list of zip codes an application can pass to the Microsoft Global Marketing Platform s World-Wide Events Web Service to retrieve a list of nearby events each customer IsEuropeanUnion (nullable bool, t/f) IsInferred (bool, true if Reverse IP performed, false if customer s explicit setting was used) IsDefault (bool, true on error, false if okay) Latitude (nullable double, -23.123) Longitude (nullable double, 32.123) StandardTimeZoneOffset (double)  DSTTimeZoneOffset (nullable double)  DSTStartTimeUniversal (nullable DateTime)  DSTEndTimeUniversal (nullable DateTime)  The GeoSegmentation System was designed to provide this information in the context of each HTTP request to a Web Server. It is very lightweight and requires only 140 microseconds (0.14 msecs) to query its 500MB in-memory cache. At 100 RPS, it adds just 1% CPU, making it lightweight enough to include on every page. However, the GeoSegementation System can be used in Console and EXE applications too. The system provides direct methods for converting an IP Address (string) into the information above. This allows the application to be useful for offline-reporting of log files. Application Developers can access these Geo properties via:  GeoProfile Provider Easy to use ASP.NET only MSCOM only GeoLocation APIs Harder ASP.NET, EXE, and Console Applications Not limited to MSCOM environment The GeoProfile Provider is based on the ASP.NET Provider pattern and makes it easy for application developers to use the system. It is easy to use. However, it only works in ASP.NET environments that also have access to the MSCOM Anonymous Profiling Service. The GeoProfile Provider is a layer on top of the GeoLocation API It adds additional functionality for storing the customer s preferred location This functionality adds dependencies on: Access to the ASP.NET HttpContext (for reading/writing the Anon cookie) The MSCOM Anon Profiling Service The GeoLocation API provides a combination of methods that can be leveraged to build custom functionality in ASP.NET and other environments. Important Restrictions The IP Address Information is licensed to Microsoft by Akamai. Akamai is a third-party company that provides Microsoft with world-wide content distribution. Microsoft is a multi-million dollar consumer of Akamai s services. Restriction #1: Akamai has restrictions about who may use their data Before beginning your development, you must consult with Chris Worland (chriswo) and Kurt Parent (kparent) in MSCOM to understand the licensing restrictions surrounding the Akamai data. If you are not covered by the existing agreement, there might be a ~$5K per month to license the source data. Restriction #2: Akamai has restrictions about how we share their data with the public Akamai restricts us from sharing their data with the public. Your application must never provide functionality that might allow a third-party to screen-scrape our Website to learn Akamai s intellectual property, namely the mapping of IP Addresses to locations. Simple rule:  If your application only uses the IP Address from the HttpRequest, you won t have to worry about this. On the other hand, if you have a HTML form that says  enter your IP Address  you will have this problem. Installation   MSCOM Environment  MSCOM Ops is responsible for supporting GeoSegmentation on PPE and Production Web Servers. In their typical configuration: Their Database Servers will host the GeoSegmentation database Their Web Servers will: Run the Windows Service that provides fast reverse-IP lookups Host the 120MB data file that populates the Windows Service in-memory cache GAC the DLLs for GeoProfile Provider  GeoLocation API (And the MSCOM Anon Profiling Service) They will not support GeoSegmentation in your development environment. To code against GeoSegmentation in your development environment, you will need to host: On a SQL Server: The GeoSegmentation Database This is provided as a 90MB SQL LightSpeed backup (restores to ~4GB) On your IIS Server, you will need to host: The Geo Windows Service (.exe) The Geo data file (.dat, 120MB) 2 GAC d DLLs GeoProfileProvider GeoLocation (And the MSCOM Anonymous Profile Service) Part 1: To set up a MSCOM-like SQL Server: Install the GeoSegmentation Database from the GeoSegmentation.bak file Grant your WebServer s machine account access to the database Part 2: To set up a MSCOM-like Development/Test Web Server: Install the MSCOM Anonymous Profile Service See: <LinkTBD> (link is current as of November 2006, ping MSCOMHLP if not available and ask for  Installation instructions for MSCOM Anonymous Profile Service on a Development Server Copy the Geo data files to a folder, like c:\geosegmentation Double-click MSCOMGeoSystemSetup.msi and provide the path to c:\geosegmentation During installation, you will be asked to provide: Database Server Name  Database Name GeoProfile Provider This is the GeoSystem interface that is: Only for MSCOM environments Easy to code against ASP.NET dependent MSCOM Anonymous Profiling Service dependent The GeoProfile Provider enables access to geographic properties about customers via a reverse-IP lookup in any .NET based Web application. Configuration These four configuration settings are required for your ASP.NET application. Add the following assemblies to  web.config file. (Please verify the version of these DLL s from the GAC assembly)       <compilation debug="false">         <assemblies>           <add assembly="GeoLocationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/>           <add assembly="GeoProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/>           <add assembly="Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider, version=2.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>           <add assembly="Microsoft.MSCOM.AnonymousProfileService.CookieHelper, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>           <add assembly="Microsoft.MSCOM.CustomerServices.MsiSid, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>         </assemblies>       </compilation> Add the following entries to the system.web element of the web.config file. You may update the default values to other settings. <anonymousIdentification enabled="true"/>     <profile>       <providers>         <add name="GeoProfileProvider"               applicationName="GeoWebtest"              type="Microsoft.MSCOM.GeoProfile.GeoProfileProvider"/>       </providers>       <properties>         <add name="MapPointID" type="int" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CountryRegionName" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CountryRegionCode" defaultValue="US" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StateProvinceName" defaultValue="Washington" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StateProvinceCode" defaultValue="WA" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CityName" defaultValue="Redmond" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="Latitude" defaultValue="47.674" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="Longitude" defaultValue="-122.120" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="TimeZoneName" defaultValue="PST" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StandardTimeZoneOffset" defaultValue="8" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTTimeZoneOffset" defaultValue="7" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTStartTime" defaultValue="4/28/2006 02:00:00" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTEndTime" defaultValue="10/28/2006 02:00:00" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="IsInferred"  type="bool" allowAnonymous="false" provider="GeoProfileProvider"/>         <add name="IsDefault"  type="bool" allowAnonymous="true" provider="GeoProfileProvider"/>         </properties> </profile> Add the following under <ConnectionStrings> section of machine.config file in %WINDIR%\Microsoft.NET\Framework\[.NET_version_number]\CONFIG. <add name="AnonProfileProvider"  connectionString="  HYPERLINK "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx" \o "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx"  http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx " />  Notes:  As of November 2006, this URL was correct. If not, please contact MSCOMHLP and ask for  GeoSegmentation: PPE URL for MSCOM Anonymous Profile Service GeoProfile Provider classes are supported in .NET versions 2.0. Please select the .NET version for your application for this feature to work. In your ASPX page, set the Async attribute to true . Usually this is done as a page-level directive. Using the GeoProfile Provider All the properties can be accessed similarly to the following code: int myMapPointID = Profile.MapPointID; string myCountryRegionName = Profile.CountryRegionName; string myCityName = Profile.CityName; When this code is executed, ASP.NET invokes the Geoprofile Provider and obtains the property values. Using the HttpRequest object, the code extracts the IP Address and performs a Reverse IP lookup. It also checks for a MSCOM Anonymous Cookie for an explicit setting and will use that value to perform the lookup (if it finds one). To set an explicit location for a user, use code similar to the following: Profile.MapPointID = myMapPointID; Profile.Save(); This code will save the customer s preference to the MSCOM Anonymous Profile Service. It will also cache a copy of this value (an integer) to the customers MSCOM Anonymous Cookie, setting a cookie if they did not already have one. The copy in the MSCOM Anonymous Service DB will not be used, but is cached in anticipation of an upcoming feature called  Roaming Profiles  (current as of 11/2006). Important: Your next question should be  how do we know which integers to use?  This requires the GeoLocation API which provides lists of strings for CountryRegions, StateProvinces, and Cities.  For more information: Refer to the appendix to learn how to deploy the GeoSegmentation Samples Please see the  ASCX Control for Explicit Set  example GeoLocation API The GeoLocation API allows programmatic access to geographic information. Configuration To use the Geo Location API,  GeoLocationAPI.dll has to be referenced in the application. And add the following statement in your application class. using Microsoft.MSCOM.Geo.GeoLocationAPI; Using Geographic Information GeoInfo objects contain geographic information returned from lookups. These objects contain the same information as the GeoProfile Provider attributes. To get a GeoInfo object, you will use one of these three methods: GetGeoInfoFromIPAddress GetGeoInfoFromMapPointID GetGeoInfoFromPostalCode These methods can be used in ASP.NET, .EXE, and Console applications. Using Lists of Locations To build a user interface for allowing the customer to select their preferred location, the GeoLocation class provides the following: GetCountryRegionList   which provides the top-level list of countries. Each CountryRegion object can be used to get further lists of its StateProvinces and Cities The classes and methods available as part of the GeoLocation API include: ClassName Method Input Parameters Output  Notes GeoLocation public static List<CountryRegion> GetCountryRegionList() List<CountryRegion> Returns list of all CountryRegion objects . The language defaults to US - Engligh GeoLocation public static List<CountryRegion> GetCountryRegionList(String Language) Language - Application Language List<CountryRegion> Returns list of all CountryRegion Objects in application specified Language (For a list of available languages see appendix TBD)  GeoLocation public static GeoInfo GetGeoInfoFromIPAddress(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string ipAddress,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language,    GeoZipCodeStringMode zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData IPAddress   Target IP Address Language    Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or the URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. GeoLocation public static GeoInfo GetGeoInfoFromMapPointId(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemInt32ClassTopic.htm"  mapPointId,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language,    GeoZipCodeStringMode       zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData MapPointId   Target MapID  Language   Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. GeoLocation public static GeoInfo GetGeoInfoFromPostalCode(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string postalCode,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string countryCode,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language, GeoZipCodeStringMode       zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData PostalCode   Target region PostalCode CountryCode   Target country Code Language    Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or the URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. For more information on the GeoLocation API see the GeoLocation API Sample and GeoLocationAPI_Documentation.chm file. See the appendix on deploying and running the GeoSegmentation Samples on your web server. GeoSegmentation Samples Configuration Please follow the instructions below to deploy the Sample Site to your IIS Web Server. The GeoSegmentation System must be installed on the Web Server. Click Start, then Admin Tools, and then IIS Manager Locate Web Sites, then Default Web Site and right-click New Virtual Directory In the virtual directory window, provide appropriate name to the virtual directory and select the local folders that contain the Samples Create a virtual directory for each sample: Give permission to execute ASP scripts and ensure ASP.NET 2.0 is selected as the ASP.NET engine. Right-click on the Virtual directory and select Directory Security tab Under Authentication and Access Control click Edit and make sure Enable anonymous access is checked Right-click the Virtual directory and select the Documents tab Add Default.aspx as one of the default documents Browse to the Sample Site. ASCX Control for Explicit Set The Explicit Set ASCX control provides plug-and-play functionality to provide your customers with an option to set their preferred geographic location. The ASCX Control is powered by Atlas framework providing interactive interface to user.  Follow the instructions below to add the ASCX Control to your webpage. Add the following assemblies to  web.config file. (Please verify the version of these DLL s from the GAC assembly) <compilation debug="false"> <assemblies> <add assembly="GeoLocationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/> <add assembly="GeoProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/> <add assembly="Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider, version=2.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> <add assembly="Microsoft.MSCOM.AnonymousProfileService.CookieHelper, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> <add assembly="Microsoft.MSCOM.CustomerServices.MsiSid, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> </assemblies> </compilation> Add a reference to the following dll in the application bin folder. This control is developed on Atlas framework. Please download Atlas dll from   HYPERLINK "http://ajax.asp.net/"  http://ajax.asp.net/ Microsoft.Web.Atlas.dll Copy GeoSegSample.ascx and GeoSegSample.ascx.cs files to your web application. On the appropriate page, add the following code to your page s header: <%@ Register Src="~/GeoSegSample.ascx" TagName="GeoLocation" TagPrefix="Dev" %> In the <body> section of the webpage, add the following code: <Dev:GeoLocation  id="TestGeoSample" runat="Server"  > </Dev:GeoLocation> Use the GeoSystem Sample Site GeoLocation_Explicit_Set to see an example of the ASCX Control and functionality for using the Profile Provider to set an explicit setting. Appendix LanguageID Reference For most Lookup methods, one of the parameters is (string LanguageID), which represents  Customer s Preferred Language . The GeoSegmentation System will provide English display names for English customers, and Chinese ones for Chinese customers (plus localized translations in ten other languages).  Parameter format: Please see   HYPERLINK "http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp" \o "http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp"  http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp  for the list of LanguageIDs the GeoSystem supports (i.e. the GeoSegmentation System uses the five (or more) character  en-us  format instead of the integer LCID codes) It is anticipated that your applications will pass in the HttpRequest.UserAcceptLanguage[0] as the LangaugeID parameter, however you may pass in other values it if you wish (i.e. if you want a page to be entirely in a particular language). Localization depth: Please see MapPoint  HYPERLINK "http://alexprobe"  http://alexprobe  site to query which locations have been localized into which languages The GeoSystem defaults to MapPoint s Invariant Culture values (English) if it does not have a particular localized translation. Country Code Reference In the GeoLocation API, the PostalCode lookup method requires a two-character MapPoint country code. Please refer to the attached XLS for the taxonomy to use for country code. After November 2006, the   HYPERLINK "http://alexprobe"  http://alexprobe  site will contain the latest information.  EMBED Excel.Sheet.8   yuouou t_O_A_t ybM3M3 xie`e`eMx>x>x> qbVJ9J2
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\SDK\GeoLocation_Explicit_Set\eula.rtf ===
{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff36\deff36\stshfdbch11\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Arial};} {\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Bookshelf Symbol 3};}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings{\*\falt Symbol};} {\f11\froman\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma{\*\falt ?l?r ??u!??I};} {\f37\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana{\*\falt Tahoma};}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS{\*\falt Arial};} {\f196\froman\fcharset128\fprq1{\*\panose 00000000000000000000}@MS Mincho{\*\falt @MS Gothic};}{\f219\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times};}{\f220\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times};} {\f222\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times};}{\f223\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times};}{\f224\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times};} {\f225\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times};}{\f226\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times};}{\f227\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times};} {\f239\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Arial};}{\f240\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Arial};}{\f242\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Arial};} {\f243\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Arial};}{\f244\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Arial};}{\f245\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Arial};} {\f246\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Arial};}{\f247\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Arial};}{\f579\fswiss\fcharset238\fprq2 Tahoma CE{\*\falt ?l?r ??u!??I};} {\f580\fswiss\fcharset204\fprq2 Tahoma Cyr{\*\falt ?l?r ??u!??I};}{\f582\fswiss\fcharset161\fprq2 Tahoma Greek{\*\falt ?l?r ??u!??I};}{\f583\fswiss\fcharset162\fprq2 Tahoma Tur{\*\falt ?l?r ??u!??I};} {\f584\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew){\*\falt ?l?r ??u!??I};}{\f585\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic){\*\falt ?l?r ??u!??I};}{\f586\fswiss\fcharset186\fprq2 Tahoma Baltic{\*\falt ?l?r ??u!??I};} {\f587\fswiss\fcharset163\fprq2 Tahoma (Vietnamese){\*\falt ?l?r ??u!??I};}{\f588\fswiss\fcharset222\fprq2 Tahoma (Thai){\*\falt ?l?r ??u!??I};}{\f589\fswiss\fcharset238\fprq2 Verdana CE{\*\falt Tahoma};} {\f590\fswiss\fcharset204\fprq2 Verdana Cyr{\*\falt Tahoma};}{\f592\fswiss\fcharset161\fprq2 Verdana Greek{\*\falt Tahoma};}{\f593\fswiss\fcharset162\fprq2 Verdana Tur{\*\falt Tahoma};}{\f596\fswiss\fcharset186\fprq2 Verdana Baltic{\*\falt Tahoma};} {\f597\fswiss\fcharset163\fprq2 Verdana (Vietnamese){\*\falt Tahoma};}{\f619\fswiss\fcharset238\fprq2 Trebuchet MS CE{\*\falt Arial};}{\f620\fswiss\fcharset204\fprq2 Trebuchet MS Cyr{\*\falt Arial};} {\f622\fswiss\fcharset161\fprq2 Trebuchet MS Greek{\*\falt Arial};}{\f623\fswiss\fcharset162\fprq2 Trebuchet MS Tur{\*\falt Arial};}{\f626\fswiss\fcharset186\fprq2 Trebuchet MS Baltic{\*\falt Arial};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255; \red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0; \red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \sautoupd Normal;}{\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext1 heading 1;}{\s2\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext2 heading 2;}{\s3\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar \tx1077\jclisttab\tx1440\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl2\outlinelevel2\adjustright\rin0\lin1077\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext3 heading 3;}{\s4\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar\jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl3\outlinelevel3\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext4 heading 4;}{\s5\ql \fi-357\li1792\ri0\sb120\sa120\widctlpar \tx1792\jclisttab\tx2155\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl4\outlinelevel4\adjustright\rin0\lin1792\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext5 heading 5;}{\s6\ql \fi-357\li2149\ri0\sb120\sa120\widctlpar\jclisttab\tx2152\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl5\outlinelevel5\adjustright\rin0\lin2149\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext6 heading 6;}{\s7\ql \fi-357\li2506\ri0\sb120\sa120\widctlpar \jclisttab\tx2509\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl6\outlinelevel6\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext7 heading 7;}{\s8\ql \fi-357\li2863\ri0\sb120\sa120\widctlpar\jclisttab\tx2866\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl7\outlinelevel7\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext8 heading 8;}{\s9\ql \fi-358\li3221\ri0\sb120\sa120\widctlpar \jclisttab\tx3223\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl8\outlinelevel8\adjustright\rin0\lin3221\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext9 heading 9;}{\*\cs10 \additive \slink68 \slocked \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af11\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{ \s15\ql \li357\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext15 Body 1;}{\s16\ql \li720\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body 2;}{\s17\ql \li1077\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1077\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 Body 3;}{ \s18\ql \li1435\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext18 Body 4;}{\s19\ql \li1803\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1803\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 Body 5;}{\s20\ql \li2160\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext20 Body 6;}{ \s21\ql \li2506\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext21 Body 7;}{\s22\ql \li2863\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext22 Body 8;}{\s23\ql \li3221\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin3221\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 Body 9;}{\s24\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext24 Bullet 1;}{ \s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 Bullet 2;}{\s26\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar\jclisttab\tx1080\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1077\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext26 Bullet 3;}{\s27\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar \jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext27 Bullet 4;}{ \s28\ql \fi-357\li1792\ri0\sb120\sa120\widctlpar\jclisttab\tx1795\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin1792\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext28 Bullet 5;}{\s29\ql \fi-357\li2149\ri0\sb120\sa120\widctlpar\jclisttab\tx2152\wrapdefault\aspalpha\aspnum\faauto\ls6\adjustright\rin0\lin2149\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 Bullet 6;}{\s30\ql \fi-357\li2506\ri0\sb120\sa120\widctlpar \jclisttab\tx2509\wrapdefault\aspalpha\aspnum\faauto\ls7\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 Bullet 7;}{ \s31\ql \fi-357\li2863\ri0\sb120\sa120\widctlpar\jclisttab\tx2866\wrapdefault\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext31 Bullet 8;}{\s32\ql \fi-358\li3221\ri0\sb120\sa120\widctlpar\jclisttab\tx3223\wrapdefault\aspalpha\aspnum\faauto\ls9\adjustright\rin0\lin3221\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon23 \snext32 Bullet 9;}{ \s33\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext0 Heading EULA;}{\s34\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Heading Software Title;}{\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1  \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext35 Preamble;}{\s36\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20  \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext1 Preamble Border;}{ \s37\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext37 Heading Warranty;}{\s38\ql \fi-360\li360\ri0\sb120\sa120\widctlpar\jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls11\outlinelevel0\adjustright\rin0\lin360\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Heading 1 Warranty;}{\s39\ql \fi-360\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls11\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext0 Heading 2 Warranty;}{\s40\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar\tx1077\jclisttab\tx1440\wrapdefault\aspalpha\aspnum\faauto\ls10\ilvl2\outlinelevel2\adjustright\rin0\lin1077\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon3 \snext40 Heading 3 Bold;}{\s41\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar \jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon27 \snext41  Bullet 4 Underline;}{\s42\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon26 \snext42 Bullet 3 Underline;}{\*\cs43 \additive \rtlch\fcs1 \ab\af36 \ltrch\fcs0  \b\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\langnp1033\langfenp1033 \sbasedon10 \slocked Heading 2 Char;}{\s44\ql \li720\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025  \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon16 \snext44 Body 2 Underline;}{\s45\ql \li1077\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1077\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext45 Body 3 Underline;}{\s46\ql \li0\ri0\sb120\sa120\sl480\slmult1 \widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext46 Body Text 2;}{ \s47\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar\jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \ai\af36\afs19\alang1025 \ltrch\fcs0  \i\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon27 \snext47 Bullet 4 Italics;}{\*\cs48 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked  Body 2 Char;}{\*\cs49 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked Body 3 Char;}{\*\cs50 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033  \sbasedon10 \slocked Body 4 Char;}{\*\cs51 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked Body 1 Char;}{\s52\ql \li0\ri0\sb120\sa120\widctlpar\brdrt\brdrs\brdrw10\brsp20  \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon35 \snext52 Preamble Border Above;}{ \s53\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext53 \ssemihidden footnote text;}{\*\cs54 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super \sbasedon10 \ssemihidden footnote reference;}{\s55\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext55 \ssemihidden endnote text;}{\*\cs56 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super  \sbasedon10 \ssemihidden endnote reference;}{\s57\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext57 \ssemihidden annotation text;}{\*\cs58 \additive \rtlch\fcs1 \af0\afs16 \ltrch\fcs0 \fs16 \sbasedon10 \ssemihidden annotation reference;}{ \s59\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext59 Char;}{\s60\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext60 Char Char Char Char;}{\*\cs61 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf2 \sbasedon10 Hyperlink;}{ \s62\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs16\alang1025 \ltrch\fcs0 \fs16\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext62 \ssemihidden Balloon Text;}{\*\cs63 \additive \rtlch\fcs1 \ab\af40 \ltrch\fcs0 \b\f40\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 Heading 2 Char1;}{\*\cs64 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \sbasedon10 page number;}{ \s65\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext65 Char Char Char Char1;}{\s66\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \styrsid8999754 Body 0 Bold;}{\s67\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025  \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \styrsid8999754 Body 0;}{\s68\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1  \af37\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\loch\f37\hich\af37\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext68 \slink10 \styrsid10356816 Default Paragraph Font Para Char;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0} {\*\listtable{\list\listtemplateid176468498\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid692200086\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s32\fi-358\li3221 \jclisttab\tx3223\lin3221 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid196815738}{\list\listtemplateid-699924060{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext \'01\u-3913 ?;}{\levelnumbers;}\b\i0\f3\fs20\fbias0 \fi-360\li717\jclisttab\tx717\lin717 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid320961430}{\list\listtemplateid-1793664660{\listlevel\levelnfc3\levelnfcn3\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0 \ltrch\fcs0 \b\i0\fbias0 \s38\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0 \ltrch\fcs0 \b\i0\fbias0 \s39\fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'03(\'03);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'03(\'04);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'05);}{\levelnumbers \'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0  \ltrch\fcs0 \fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0  \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li3240 \jclisttab\tx3240\lin3240 }{\listname ;}\listid394402059}{\list\listtemplateid1928476992{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \s40\fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid398796681}{\list\listtemplateid789093748\listhybrid{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-317712510\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s25\fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040 \jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid477573462} {\list\listtemplateid190114934\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1077 \jclisttab\tx1077\lin1077 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1797\jclisttab\tx1797\lin1797 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2517\jclisttab\tx2517\lin2517 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3237\jclisttab\tx3237\lin3237 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3957\jclisttab\tx3957\lin3957 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4677\jclisttab\tx4677\lin4677 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0 {\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5397\jclisttab\tx5397\lin5397 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext \leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6117\jclisttab\tx6117\lin6117 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693 \'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6837\jclisttab\tx6837\lin6837 }{\listname ;}\listid509564613}{\list\listtemplateid1948578256{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0\afs20 \ltrch\fcs0 \b\i0\fs20\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid630479929}{\list\listtemplateid67698717 {\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc4\levelnfcn4\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02\'02);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'03(\'03);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'04);}{\levelnumbers\'02;} \rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'05);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2520\jclisttab\tx2520\lin2520  }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc2\levelnfcn2 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listname ;}\listid700712945}{\list\listtemplateid680715664{\listlevel \levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \s1\fi-357\li357\jclisttab\tx360\lin357 }{\listlevel \levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \s2\fi-363\li720\jclisttab\tx720\lin720 }{\listlevel \levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \s3\fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel \levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \s4\fi-358\li1435 \jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0  \s5\fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0  \b0\i0\f40\fs20\fbias0 \s6\fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s7\fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s8\fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s9\fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid752163927}{\list\listtemplateid2088029282{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid800729109} {\list\listtemplateid-296591990\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-48305026\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s31\fi-357\li2863 \jclisttab\tx2866\lin2863 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid810947713}{\list\listtemplateid1567531878{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid826823576}{\list\listtemplateid2088029282{\listlevel\levelnfc0 \levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4 \levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2 \levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3 \levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 } {\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792 \jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149 \jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506 \jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863 \jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221 \jclisttab\tx3223\lin3221 }{\listname ;}\listid974869818}{\list\listtemplateid-1813845996\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid2033377338 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s30\fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160 \jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1219436735}{\list\listtemplateid-41362566\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-1175557160\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s27\fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320 \jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1559511898}{\list\listtemplateid-743794326 \listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid1229593488\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s26\fi-357\li1077\jclisttab\tx1080\lin1077 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480 \jclisttab\tx6480\lin6480 }{\listname ;}\listid1567649130}{\list\listtemplateid1363474438\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid1637229796 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s28\fi-357\li1792\jclisttab\tx1795\lin1792 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160 \jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1848404271}{\list\listtemplateid-1802592190\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid961321180\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s29\fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320 \jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1877695764}{\list\listtemplateid1186249844 \listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid1182702444\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s24\fi-357\li357\jclisttab\tx360\lin357 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480 \jclisttab\tx6480\lin6480 }{\listname ;}\listid2054619191}}{\*\listoverridetable{\listoverride\listid2054619191\listoverridecount0\ls1}{\listoverride\listid477573462\listoverridecount0\ls2}{\listoverride\listid1567649130\listoverridecount0\ls3} {\listoverride\listid1559511898\listoverridecount0\ls4}{\listoverride\listid1848404271\listoverridecount0\ls5}{\listoverride\listid1877695764\listoverridecount0\ls6}{\listoverride\listid1219436735\listoverridecount0\ls7}{\listoverride\listid810947713 \listoverridecount0\ls8}{\listoverride\listid196815738\listoverridecount0\ls9}{\listoverride\listid398796681\listoverridecount0\ls10}{\listoverride\listid394402059\listoverridecount0\ls11}{\listoverride\listid700712945\listoverridecount0\ls12} {\listoverride\listid826823576\listoverridecount0\ls13}{\listoverride\listid630479929\listoverridecount0\ls14}{\listoverride\listid800729109\listoverridecount0\ls15}{\listoverride\listid974869818\listoverridecount0\ls16}{\listoverride\listid752163927 \listoverridecount0\ls17}{\listoverride\listid320961430\listoverridecount0\ls18}{\listoverride\listid509564613\listoverridecount0\ls19}}{\*\rsidtbl \rsid17701\rsid81130\rsid340347\rsid345491\rsid480810\rsid535495\rsid555183\rsid787759\rsid1012355 \rsid1122066\rsid1528414\rsid1589072\rsid1725164\rsid1845488\rsid1977600\rsid2784514\rsid2950031\rsid3042060\rsid3082212\rsid3162620\rsid3370445\rsid3416253\rsid3611186\rsid3739474\rsid3895692\rsid4022155\rsid4739523\rsid4865423\rsid4995346\rsid5185544 \rsid5459775\rsid5536377\rsid5733284\rsid6184270\rsid6306623\rsid6498245\rsid6758513\rsid7041369\rsid7226971\rsid7276367\rsid7290457\rsid7345747\rsid7425099\rsid7433926\rsid7438204\rsid7619174\rsid7692510\rsid7878867\rsid7996763\rsid8134375\rsid8324055 \rsid8325040\rsid8419363\rsid8458805\rsid8738620\rsid8812012\rsid8858237\rsid8999754\rsid9068683\rsid9321702\rsid9378228\rsid9380242\rsid9651656\rsid9857610\rsid9860938\rsid9964378\rsid10356816\rsid10813938\rsid10826327\rsid10975197\rsid11347136 \rsid11541952\rsid11558388\rsid11754382\rsid11874088\rsid12000207\rsid12000701\rsid12209854\rsid12542098\rsid12585274\rsid12596065\rsid12664082\rsid12875155\rsid13334496\rsid13505730\rsid13637289\rsid13908819\rsid14113253\rsid14168694\rsid14293847 \rsid14491415\rsid14504489\rsid14705568\rsid14894057\rsid14897950\rsid14943232\rsid15493712\rsid15601712\rsid15872081\rsid15925451\rsid15991509\rsid15999285\rsid16141742\rsid16395859\rsid16450365\rsid16661796\rsid16712132}{\*\generator Microsoft Word 11. 0.8026;}{\info{\title MICROSOFT [PRE-RELEASE ][EVALUATION ]SOFTWARE LICENSE TERMS}{\creatim\yr2006\mo6\dy27\hr14\min14}{\revtim\yr2006\mo6\dy27\hr14\min14}{\printim\yr2006\mo2\dy10\hr10\min10}{\version2}{\edmins0}{\nofpages3}{\nofwords1276}{\nofchars7274} {\nofcharsws8533}{\vern24609}{\*\password 00000000}}{\*\userprops {\propname db_build_version}\proptype30{\staticval 2.6}{\propname db_charger_document_reference}\proptype3{\staticval 4582}{\propname db_charger_client_name}\proptype30{\staticval tbc} {\propname db_charger_matter_number}\proptype30{\staticval tbc}{\propname autosave}\proptype30{\staticval false}{\propname owner}\proptype30{\staticval REDMOND\'5cdcorey}{\propname db_master_reference}\proptype30{\staticval USETERMS_OTHERSUPER_ENGLISH} {\propname db_master_version}\proptype30{\staticval 20060202}{\propname db_master_clock}\proptype3{\staticval 337}{\propname db_master_name}\proptype30{\staticval List of Beta, Evaluation or Standalone Software License Terms Languages}{\propname db_master _description}\proptype30{\staticval  }{\propname db_base_url}\proptype30{\staticval http://usetermassembly/dealbuilder_live/DealBuilderNET/dealbuilder.aspx}{\propname ProductVersion}\proptype30{\staticval 0}{\propname MScom}\proptype11{\staticval 0} {\propname Language}\proptype30{\staticval English}{\propname CanadaAvail}\proptype11{\staticval 1}{\propname CanadaFrench}\proptype11{\staticval 0}{\propname FileFormat}\proptype11{\staticval 0}{\propname MandatoryActivation}\proptype11{\staticval 0} {\propname SoftwareType}\proptype30{\staticval Beta Software}{\propname ProductName}\proptype30{\staticval ASP.NET Code-Name "Atlas" March Go Live CTP}{\propname NumberOfCopies}\proptype30{\staticval Any number of copies}{\propname BetaUseRight} \proptype30{\staticval On the user's premises to design, develop and test the user's programs for use with the software}{\propname ProductKey}\proptype11{\staticval 0}{\propname ConfidentialInformation}\proptype11{\staticval 0}{\propname Feedback} \proptype30{\staticval Optional}{\propname BenchmarkNet}\proptype11{\staticval 0}{\propname InternetBasedServices}\proptype11{\staticval 0}{\propname TimeBomb}\proptype11{\staticval 0}{\propname TermWhen}\proptype30{\staticval Until a certain date} {\propname TermDate}\proptype30{\staticval 2006/02/09}{\propname TermCommRel}\proptype11{\staticval 1}{\propname db_commit}\proptype30{\staticval ProductVersion}}{\*\xmlnstbl {\xmlns1 urn:schemas-microsoft-com:office:smarttags}} \paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect\rtlgutter \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440 \dgvorigin1440\dghshow1\dgvshow1\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\rempersonalinfo\rsidroot10813938\viewbksp1 \fet0 {\*\wgrffmtfilter 013f}\ilfomacatclnup0 {\*\docvar {db_xml}{<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>\'0d<!DOCTYPE Document SYSTEM "..\'5cDocument.DTD">\'0d<Document><Control NAME="db_base_url" TYPE="string"><Value>http://usetermassembly/dealbuilder_live/DealBuilderNET/dealbuilder.aspx</Value></Control><C ontrol NAME="db_folder_form" TYPE="string"><Value>microsoft</Value></Control><Control NAME="db_folder_stylesheet" TYPE="string"><Value>microsoft</Value></Control><Control NAME="db_folder_image" TYPE="string"><Value>microsoft</Value></Control><Control NAME ="db_charger_dataset_reference" TYPE="numeric"><Value>4581</Value></Control><Control NAME="db_charger_client_name" TYPE="string"><Value>tbc</Value></Control><Control NAME="db_charger_matter_number" TYPE="string"><Value>tbc</Value></Control><Control NAME=" db_master_reference" TYPE="string"><Value>USETERMS_OTHERSUPER_ENGLISH</Value></Control><Control NAME="db_master_publish_build" TYPE="string"><Value>2.6</Value></Control><Control NAME="db_master_name" TYPE="string"><Value>List of Beta, Evaluation or Standa lone Software License Terms Languages</Value></Control><Control NAME="db_master_description" TYPE="string"><Value> </Value></Control><Control NAME="db_master_version" TYPE="string"><Value>20060202</Value></Control><Control NAME="db_master_clock" TYPE="num eric"><Value>337</Value></Control><Control NAME="db_master_refresh" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_host_create_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_input_onload" TYPE="string"><Value></Value> </Control><Control NAME="db_host_output_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_exception_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_javascript" TYPE="string"><Value></Value></Control><Control NAME= "db_transaction_generator" TYPE="string"><Value>unique</Value></Control><Control NAME="db_transaction_prefix" TYPE="string"><Value></Value></Control><Control NAME="db_transaction_suffix" TYPE="string"><Value></Value></Control><Control NAME="db_evaluate" T YPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_logic" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_repeat" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_cross_reference" TYPE="boole an"><Value>true</Value></Control><Control NAME="db_evaluate_calculation" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_variable" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_include" TYPE="boolean"><Value >true</Value></Control><Control NAME="db_codeload_include" TYPE="string"><Value>eager</Value></Control><Control NAME="db_locale_input_date_sequence" TYPE="string"><Value>day_month_year</Value></Control><Control NAME="db_locale_input_thousands_char" TYPE=" string"><Value>,</Value></Control><Control NAME="db_locale_input_decimalpoint_char" TYPE="string"><Value>.</Value></Control><Control NAME="db_locale_output_date_sequence" TYPE="string"><Value>day_month_year</Value></Control><Control NAME="db_locale_output _thousands_char" TYPE="string"><Value>,</Value></Control><Control NAME="db_locale_output_decimalpoint_char" TYPE="string"><Value>.</Value></Control><Control NAME="db_output_hyperlink_target" TYPE="string"><Value>_blank</Value></Control><Control NAME="db_o utput_document_format" TYPE="string"><Value>rtf</Value></Control><Control NAME="db_output_document_redline" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_output_document_redline_cause" TYPE="string"><Value>drafting</Value></Control><Contr ol NAME="db_output_document_drafting_notes" TYPE="string"><Value>indefinite</Value></Control><Control NAME="db_output_document_properties" TYPE="string"><Value>true</Value></Control><Control NAME="db_output_document_property" TYPE="string"><Value>autosave |text|false</Value><Value>owner|text|REDMOND\'5cdcorey</Value></Control><Control NAME="db_output_document_variable_xml" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_output_document_termsheet" TYPE="boolean"><Value>false</Value></Control><Con trol NAME="db_output_document_answers" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_output_document_answers_column" TYPE="string"><Value>prompt</Value><Value>value</Value></Control><Control NAME="db_output_document_answers_row" TYPE="stri ng"><Value>page</Value><Value>group</Value><Value>sure</Value><Value>unsure</Value><Value>unknown</Value><Value>deferred</Value></Control><Control NAME="db_output_document_answers_relaunch_transaction_hyperlink" TYPE="boolean"><Value>false</Value></Contro l><Control NAME="db_output_document_answers_relaunch_transaction_url" TYPE="string"><Value></Value></Control><Control NAME="db_output_filter_reference" TYPE="string"><Value></Value></Control><Control NAME="db_output_variable_as" TYPE="string"><Value>alias </Value></Control><Control NAME="db_output_variable_highlights" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_output_variable_sequence" TYPE="string"><Value>ascending</Value></Control><Control NAME="db_output_white_space" TYPE="boolean">< Value>false</Value></Control><Control NAME="db_output_line_breaks" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_show_column_headings" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_heading_repetition_column" TY PE="string"><Value>Repeat</Value></Control><Control NAME="db_input_heading_highlight_column" TYPE="string"><Value>Check</Value></Control><Control NAME="db_input_heading_prompt_column" TYPE="string"><Value>Prompt</Value></Control><Control NAME="db_input_he ading_question_column" TYPE="string"><Value>Answer</Value></Control><Control NAME="db_input_heading_state_column" TYPE="string"><Value>Deferral</Value></Control><Control NAME="db_input_heading_guidance_column" TYPE="string"><Value>Guidance</Value></Contro l><Control NAME="db_input_heading_comment_column" TYPE="string"><Value>Insert your comments below</Value></Control><Control NAME="db_input_heading_variable_name_column" TYPE="string"><Value>Variable</Value></Control><Control NAME="db_input_help_url" TYPE= "string"><Value>/dealbuilder_live/help/dealbuilder/help.html</Value></Control><Control NAME="db_input_data_validation" TYPE="string"><Value>onsubmit</Value></Control><Control NAME="db_input_show_page_title" TYPE="boolean"><Value>true</Value></Control><Con trol NAME="db_input_show_group_title" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_show_repetition_column" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_state_column" TYPE="boolean"><Value>true</Value></C ontrol><Control NAME="db_input_show_variable_name_column" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_committed" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_group_state" TYPE="boolean"><Value>tru e</Value></Control><Control NAME="db_input_show_group_state_threshold" TYPE="numeric"><Value>2</Value></Control><Control NAME="db_input_state_display" TYPE="string"><Value>dropdown</Value></Control><Control NAME="db_input_state_preselect" TYPE="string"><V alue>sure</Value></Control><Control NAME="db_input_unknown_option" TYPE="string"><Value>Unknown</Value></Control><Control NAME="db_input_unknown_position" TYPE="string"><Value>first</Value></Control><Control NAME="db_input_other_option" TYPE="string"><Val ue>Other</Value></Control><Control NAME="db_input_other_position" TYPE="string"><Value>last</Value></Control><Control NAME="db_input_other_width_single" TYPE="numeric"><Value>20</Value></Control><Control NAME="db_input_other_width_multiple" TYPE="numeric" ><Value>20</Value></Control><Control NAME="db_input_other_depth_multiple" TYPE="numeric"><Value>4</Value></Control><Control NAME="db_input_other_prompt_multiple" TYPE="string"><Value>Specify others:</Value></Control><Control NAME="db_input_other_prompt_si ngle" TYPE="string"><Value>Specify other:</Value></Control><Control NAME="db_input_other_prompt_break_before" TYPE="numeric"><Value>1</Value></Control><Control NAME="db_input_other_prompt_break_after" TYPE="numeric"><Value>1</Value></Control><Control NAME ="db_input_active_separator_sure_multiline" TYPE="string"><Value>, </Value></Control><Control NAME="db_input_active_separator_sure_multiple" TYPE="string"><Value> and </Value></Control><Control NAME="db_input_active_separator_unsure_multiple" TYPE="string "><Value> and/or </Value></Control><Control NAME="db_input_active_separator_unsure_single" TYPE="string"><Value> or </Value></Control><Control NAME="db_input_active_boolean_true" TYPE="string"><Value>Yes</Value></Control><Control NAME="db_input_active_boo lean_false" TYPE="string"><Value>No</Value></Control><Control NAME="db_input_repeat_navigation_prefix" TYPE="string"><Value>(%1 of %2)&amp\'3bnbsp\'3b</Value></Control><Control NAME="db_input_repeat_navigation_postfix" TYPE="string"><Value></Value></Control><Co ntrol NAME="db_input_repeat_navigation_portrayal" TYPE="string"><Value>visible</Value></Control><Control NAME="db_input_repeat_format" TYPE="string"><Value>digits</Value></Control><Control NAME="db_input_repeat_prev" TYPE="string"><Value>Prev</Value></Con trol><Control NAME="db_input_repeat_next" TYPE="string"><Value>Next</Value></Control><Control NAME="db_input_repeat_separator" TYPE="string"><Value>&amp\'3bnbsp\'3b|&amp\'3bnbsp\'3b</Value></Control><Control NAME="db_input_prompt_compulsory_symbol" TYPE="string"><Val ue>*</Value></Control><Control NAME="db_input_prompt_compulsory_symbol_location" TYPE="string"><Value>after</Value></Control><Control NAME="db_input_question_compulsory_symbol" TYPE="string"><Value></Value></Control><Control NAME="db_input_question_compul sory_symbol_location" TYPE="string"><Value>after</Value></Control><Control NAME="db_input_disable_when_unknown_compulsory" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_disable_when_unknown_non_compulsory" TYPE="boolean"><Value>false </Value></Control><Control NAME="db_input_simple_alert" TYPE="string"><Value>client_side</Value></Control><Control NAME="db_input_warning_irrelevant_page" TYPE="string"><Value>&lt\'3bU&gt\'3bWARNING:&lt\'3b/U&gt\'3b That page is no longer relevant because of answers  given on this page or a previous page!</Value></Control><Control NAME="db_input_last_page_next_button" TYPE="string"><Value>enabled</Value></Control><Control NAME="db_input_page_goto_list_content" TYPE="string"><Value>relevant_pages</Value></Control><Vari able NAME="ProductVersion" TYPE="string" STATUS="sure"><Value>0</Value></Variable><Variable NAME="MScom" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="Language" TYPE="select" STATUS="sure"><Value>English</Value></Variable><Variab le NAME="CanadaAvail" TYPE="boolean" STATUS="sure"><Value>1</Value></Variable><Variable NAME="CanadaFrench" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="FileFormat" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variab le NAME="MandatoryActivation" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="SoftwareType" TYPE="select" STATUS="sure"><Value>Beta Software</Value></Variable><Variable NAME="ProductName" TYPE="string" STATUS="sure"><Value>ASP.NET  Code-Name &quot\'3bAtlas&quot\'3b March Go Live CTP</Value></Variable><Variable NAME="NumberOfCopies" TYPE="select" STATUS="sure"><Value>Any number of copies</Value></Variable><Variable NAME="BetaUseRight" TYPE="select" STATUS="sure"><Value>On the user&apos\'3bs p remises to design, develop and test the user&apos\'3bs programs for use with the software</Value></Variable><Variable NAME="ProductKey" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="ConfidentialInformation" TYPE="boolean" STATUS="su re"><Value>0</Value></Variable><Variable NAME="Feedback" TYPE="select" STATUS="sure"><Value>Optional</Value></Variable><Variable NAME="BenchmarkNet" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="InternetBasedServices" TYPE="boole an" STATUS="sure"><Value>0</Value></Variable><Variable NAME="TimeBomb" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="TermWhen" TYPE="select" STATUS="sure"><Value>Until a certain date</Value></Variable><Variable NAME="TermDate" TY PE="date" STATUS="sure"><Value>2006/02/09</Value></Variable><Variable NAME="TermCommRel" TYPE="boolean" STATUS="sure"><Value>1</Value></Variable></Document>}}{\*\ftnsep \ltrpar \pard\plain \ltrpar \ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid11558388 \chftnsep  \par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsepc  \par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsep  \par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsepc  \par }}\ltrpar \sectd \ltrsect\rtlgutter\psz1\linex0\endnhere\sectlinegrid360\sectdefaultcl\sectrsid4739523\sftnbj {\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}} {\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6 \pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9 \pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\s33\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 MICROSOFT PRE-RELEASE SOFTWARE LICENSE TERMS \par }\pard\plain \ltrpar\s34\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 MICROSOFT }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284  \hich\af36\dbch\af11\loch\f36 ASP.NET CODE-NAME "ATLAS" \hich\af36\dbch\af11\loch\f36 GO LIVE CTP}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  These license terms are an agreement between Microsoft Corporation (or based on\hich\af36\dbch\af11\loch\f36   where you live, one of its affiliates) and you.  Please read them.  They apply to the pre-release software named above, which includes the media on which you received it, if any.  The terms also apply to any Microsoft \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 updates, \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 supplements, \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 Internet-based services, and  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 support services \par }\pard\plain \ltrpar\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  for this software, unless other terms accompany those items.  If so, those terms apply. \par }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 BY USING THE SOFTWARE, YOU ACCEPT THESE TERMS.  IF YOU DO NOT ACCEPT THEM, DO NOT USE THE SOFTWARE. \par }\pard\plain \ltrpar\s52\ql \li0\ri0\sb120\sa120\widctlpar\brdrt\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 If you comply with these license terms, you have the rights below. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 1.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 INSTALLATION AND USE RIGHTS.  }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207 \hich\af36\dbch\af11\loch\f36 You may}{\rtlch\fcs1  \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36  install and use any number of copies of the software:}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s2\ql \fi-360\li1077\ri0\sb120\sa120\widctlpar \jclisttab\tx1077\wrapdefault\aspalpha\aspnum\faauto\ls19\outlinelevel1\adjustright\rin0\lin1077\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 to design, develop and test your programs for use with the software; and}{ \rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 in a hosted envir \hich\af36\dbch\af11\loch\f36 onment to allow your customers to use, via a web interface, your programs that need the software to run.}{\rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 2.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 TERM.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   The term of this agreement is until }{\rtlch\fcs1  \ab0\af36 \ltrch\fcs0 \b0\insrsid11541952 \hich\af36\dbch\af11\loch\f36 September }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 1, 200}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid12875155  \hich\af36\dbch\af11\loch\f36 7}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 , or commercial release of the software, whichever is first.}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 3.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  PRE-RELEASE SOFTWARE. }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  This software is a pre-release version.  It may not work }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284  \hich\af36\dbch\af11\loch\f36 correctly or }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  the way a final version of the software will.  We may change it for the final, commercial version.  We also may not release a commercial version.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36   }{\rtlch\fcs1  \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 You are fully responsible for any and \hich\af36\dbch\af11\loch\f36 all damages that may result due to any failure of the software; and you }{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0  \fs20\insrsid11541952 \hich\af36\dbch\af11\loch\f36 must }{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 notify your users that your web programs rely}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0  \fs20\insrsid5733284\charrsid14113253 \hich\af36\dbch\af11\loch\f36  on pre-release, unsupported software that may not operate correctly}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid5733284\charrsid12542098  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid12542098 \hich\af40\dbch\af11\loch\f40 4.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36  INDEMNIFICATION.}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284\charrsid10975197 \hich\af36\dbch\af11\loch\f36  }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36  You agree to indemnify, hold har\hich\af36\dbch\af11\loch\f36  mless, and defend Microsoft from and against any claims, allegations, lawsuits, losses and costs (including attorney fees), that arise or result from the use, deployment or distribution of your }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0  \b0\fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 programs }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36 that use the }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284  \hich\af36\dbch\af11\loch\f36 software.}{\rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12542098  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 5.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  FEEDBACK. }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  If you give feed\hich\af36\dbch\af11\loch\f36  back about the software to Microsoft, you give to Microsoft, without charge, the right to use, share and commercialize your feedback in any way and for any purpose.  You also give to third parties, without charge, any patent rights needed for their produc \hich\af36\dbch\af11\loch\f36 t\hich\af36\dbch\af11\loch\f36  s, technologies and services to use or interface with any specific parts of a Microsoft software or service that includes the feedback.  You will not give feedback that is subject to a license that requires Microsoft to license its software or documentati \hich\af36\dbch\af11\loch\f36 o\hich\af36\dbch\af11\loch\f36 n to third parties because we include your feedback in them.  These rights survive this agreement.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 6.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Scope of License}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    The software is licensed, not sold. This agreement only gives you some rights to use the software.  Microsoft reserves all other rights\hich\af36\dbch\af11\loch\f36  .  Unless applicable law gives you more rights despite this limitation, you may use the software only as expressly permitted in this agreement.  In doing so, you must comply with any technical limitations in the software that only allow you to use it in c \hich\af36\dbch\af11\loch\f36 e\hich\af36\dbch\af11\loch\f36 rtain ways.    You may not}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 disclose the results of any benchmark tests of the software to any third party without Microsoft\hich\f36 \rquote \loch\f36 s prior written approval}{\rtlch\fcs1 \af36 \ltrch\fcs0  \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  work around any technical limitations }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid12209854 \hich\af36\dbch\af11\loch\f36 in }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 the software}{\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  reverse engineer, decompile \hich\af36\dbch\af11\loch\f36 or disassemble the software, except and only to the extent that applicable law expressly permits, despite this limitation}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284  \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  make more copies of the software than specified in this agreement or allowed by applicable law, despite this limitation}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 publish  \hich\af36\dbch\af11\loch\f36 the software for others to copy}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid10356816  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36  deploy the software on a standalone basis for others to access;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid1589072  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 distribute the software;}{\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  rent, lease or lend the software}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ; or}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  transfer the software or this agreement to any third party}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 7.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Export Restrictions}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0  \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   The software is subject to {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}{\*\xmlclose}  export laws and regulations.  You must comply with all domestic and international export laws and regulations that apply to the software.  These laws include restrictions on destinations, end users and end use.  \hich\af36\dbch\af11\loch\f36 F \hich\af36\dbch\af11\loch\f36 or additional information, see }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  HYPERLINK "http://www.microsoft.com/exporting" }{ \rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid10826327\charrsid11558388 {\*\datafield  00d0c9ea79f9bace118c8200aa004ba90b02000000170000001c0000007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e0067000000e0c9ea79f9bace118c8200aa004ba90b4600000068007400740070003a002f002f007700770077002e00 6d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e006700000000000000000000000000000000000000000000000000000000e10000000000000000001800000000000000000000000000000000000000000000000000000000000000000000140000000000000000 00007220000000010000000000002000000000004e00000000003e0000000000000066000020}}}{\fldrslt {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 www.microsoft.com/exporting}}}{\rtlch\fcs1 \ab0\af36  \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \cs61\insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 8.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 SUPPORT SERVICES.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36  Because this software is \'93\loch\f36 as}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 -}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36 is,\'94 \loch\f36  we may not provide support services for it.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 9.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Entire Agreement.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   This agreement, and the \hich\af36\dbch\af11\loch\f36  terms for supplements, updates, Internet-based services and support services that you use, are the entire agreement for the software and support services. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\cf1\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 10.\tab}}\pard \ltrpar \s1\ql \fi-360\li360\ri0\sb120\sa120\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin360\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\cf1\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Applicable Law}{\rtlch\fcs1 \af36 \ltrch\fcs0 \cf1\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 . \par {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}{\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 a.\tab} }\pard\plain \ltrpar\s2\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 United States{\*\xmlclose}{\*\xmlclose}.}{\rtlch\fcs1 \ab0\af36  \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   If you acquired the software in the {\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}, {\*\xmlopen\xmlns1{\factoidname place}} {\*\xmlopen\xmlns1{\factoidname State}}Washington{\*\xmlclose}{\*\xmlclose} \hich\af36\dbch\af11\loch\f36  state law governs the interpretation of this agreement and applies to claims for breach of it, regardless of conflict of laws principles.  The laws of the state where you live govern all other claims, including claims under state consumer protection laws, \hich\af36\dbch\af11\loch\f36  \hich\af36\dbch\af11\loch\f36 unfair competition laws, and in tort.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 b.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  Outside the {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}{\*\xmlclose}.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    If you acquired the software in any other country, the laws of that country apply.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 11.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Legal Effect.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    This agreement describes certain legal rights.  You may have other rights under the l\hich\af36\dbch\af11\loch\f36  aws of your country.  You may also have rights with respect to the party from whom you acquired the software.  This agreement does not change your rights under the laws of your country if the laws of your country do not permit it to do so.}{\rtlch\fcs1  \af0 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 12.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Disclaimer of Warranty.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    }{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  \hich\f36 The software is licensed \'93\loch\f36 \hich\f36 as-is.\'94\loch\f36    You bear the risk of using it.  Microsoft gives no express warranties, guarantees or conditions.  You may have additional consumer rights under your local laws which this agreem\hich\af36\dbch\af11\loch\f36  ent cannot change.  To the extent permitted under your local laws, Microsoft excludes the implied warranties of merchantability, fitness for a particular purpose and non-infringement. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 13.\tab}}\pard \ltrpar\s1\ql \fi-360\li360\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin360\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  Limitation on and Exclusion of Remedies and Damages.  You can recove\hich\af36\dbch\af11\loch\f36  r from Microsoft and its suppliers only direct damages up to U.S. $5.00.  You cannot recover any other damages, including consequential, lost profits, special, indirect or incidental damages. \par }\pard\plain \ltrpar\s15\ql \li357\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 This limitation applies to \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 anything related to the software, s\hich\af36\dbch\af11\loch\f36 ervices, content (including code) on third party Internet sites, or third party programs; and \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36  claims for breach of contract, breach of warranty, guarantee or condition, strict liability, negligence, or other tort to the extent permitted by applicable law\hich\af36\dbch\af11\loch\f36 . \par }\pard\plain \ltrpar\ql \li360\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  It also applies even if Microsoft knew or should have known about the possibility of the damages.  The above limitation or exclusion may not apply to you because your country may not allow the exclusion or limitation of incidental, consequential or other \hich\af36\dbch\af11\loch\f36  damages.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\s66\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Please note: As this software is distributed in  {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname City}}Quebec{\*\xmlclose}, {\*\xmlopen\xmlns1{\factoidname country-region}}Canada{\*\xmlclose}{\*\xmlclose}, some of the clauses in this agreement are provided below in French. \par }\pard \ltrpar\s66\ql \li0\ri0\sb240\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36  \hich\f36 Remarque: Ce logiciel \'e9\loch\f36 \hich\f36 tant distribu\'e9\loch\f36 \hich\f36  au Qu\'e9\loch\f36 bec, Canada, certaines des clauses dans ce contrat sont fournies ci-de\hich\af36\dbch\af11\loch\f36 \hich\f36 ssous en fran\'e7\loch\f36 ais.} {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard\plain \ltrpar\s67\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 EXON\'c9\loch\f36  RATION DE GARANTIE.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36  Le logiciel vis\'e9\loch\f36 \hich\f36  par une licence est offert \'ab\loch\f36 \hich\f36   tel quel \'bb\loch\f36 \hich\f36 . Toute utilisation de ce logiciel est \'e0\loch\f36 \hich\f36  votre seule risque et p\'e9\loch\f36 ril. Microsoft n\hich\f36 \rquote \loch\f36 \hich\f36 accorde aucune autre garantie expresse. Vous pouvez b\'e9 \loch\f36 \hich\f36 n\'e9\loch\f36 ficier de droits a\hich\af36\dbch\af11\loch\f36 \hich\f36  dditionnels en vertu du droit local sur la protection dues consommateurs, que ce contrat ne peut modifier. La ou elles sont permises par le droit locale, les garanties implicites de qualit\'e9\loch\f36  marchande, d\hich\f36 \rquote \loch\f36 \hich\f36 ad \'e9\loch\f36 \hich\f36 quation \'e0\loch\f36  un usage particulier et d\hich\f36 \rquote \loch\f36 absence de co\hich\af36\dbch\af11\loch\f36 n\hich\af36\dbch\af11\loch\f36 \hich\f36 trefa\'e7\loch\f36 on sont exclues.}{\rtlch\fcs1 \af0 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard \ltrpar\s67\ql \li0\ri0\sb120\sa120\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 {\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \hich\af36\dbch\af11\loch\f36 \hich\f36 LIMITATION DES DOMMAGES-INT\'c9\loch\f36 \hich\f36 R\'ca\loch\f36 \hich\f36 TS ET EXCLUSION DE RESPONSABILIT\'c9\loch\f36  POUR LES DOMMAGES.}{\rtlch\fcs1 \af36 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36   Vous pouvez obtenir de Microsoft et de ses fournisseurs une indemnisation en cas de dommages directs uniquement \'e0\loch\f36   hauteur de 5,00 $ US. Vous ne pouve\hich\af36\dbch\af11\loch\f36 \hich\f36 z pr\'e9\loch\f36 \hich\f36 tendre \'e0\loch\f36 \hich\f36  aucune indemnisation pour les autres dommages, y compris les dommages sp\'e9\loch\f36 \hich\f36  ciaux, indirects ou accessoires et pertes de b\'e9\loch\f36 \hich\f36 n\'e9\loch\f36 fices.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Cette limitation concerne: \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-360\li720\ri0\sb120\sa120\keepn\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 tout  ce qui est reli\'e9\loch\f36  au logiciel, aux services ou au contenu (y compris le code) f\hich\af36\dbch\af11\loch\f36  igurant sur des sites Internet tiers ou dans des programmes tiers ; et}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 les r\'e9\loch\f36  \hich\f36 clamations au titre de violation de contrat ou de garantie, ou au titre de responsabilit\'e9\loch\f36 \hich\f36  stricte, de n\'e9\loch\f36 gligence ou d\hich\f36 \rquote \loch\f36 \hich\f36 une autre faute dans la limite autoris\'e9\loch\f36  e par la loi en vigu\hich\af36\dbch\af11\loch\f36 eur.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard\plain \ltrpar\s67\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid12875155 \hich\af36\dbch\af11\loch\f36 Elle s\hich\f36 \rquote \loch\f36 \hich\f36  applique \'e9\loch\f36 \hich\f36 galement, m\'ea\loch\f36 \hich\f36 me si Microsoft connaissait ou devrait conna\'ee\loch\f36 tre l\hich\f36 \rquote \'e9\loch\f36 \hich\f36 ventualit\'e9\loch\f36  d\hich\f36 \rquote \loch\f36 un tel dommage.  }{ \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Si votre pays n\hich\f36 \rquote \loch\f36 autorise pas l\hich\f36 \rquote \loch\f36 \hich\f36 exclusion ou la limitation de responsabilit\'e9\loch\f36   pour les dommages indirects, accessoires ou de quelque nature qu\hich\af36\dbch\af11\loch\f36 e ce soit, il se peut que la limitation ou l\hich\f36 \rquote \loch\f36 exclusion ci-dessus ne s\hich\f36 \rquote \loch\f36 \hich\f36 appliquera pas \'e0 \loch\f36 \hich\f36  votre \'e9\loch\f36 gard. \par }{\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 EFFET JURIDIQUE.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36   Le pr\'e9\loch\f36 \hich\f36  sent contrat d\'e9\loch\f36 crit certains droits juridiques. Vous pourriez avoir d\hich\f36 \rquote \loch\f36 \hich\f36 autres droits pr\'e9\loch\f36 vus par les lois de votre pays.  }{\rtlch\fcs1 \af36 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36 Le pr\'e9\loch\f36 sent c\hich\af36\dbch\af11\loch\f36 \hich\f36 ontrat ne modifie pas les droits que vous conf\'e8\loch\f36  rent les lois de votre pays si celles-ci ne le permettent pas.}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid9964378\charrsid5733284  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\SDK\GeoLocation_Explicit_Set\readme.txt ===
﻿ASP.NET "Atlas"
==============================================
Date: 7/25/2006

License: Please refer to the accompanying EULA.RTF file for the license agreement and information on using "Atlas".

The "Atlas" project templates and project items contain the assemblies to get started. All code, templates, samples, and documentation related to "Atlas" are a very early technical preview and are therefore subject to change.

Many thanks,

-- The Web Platform and Tools Team


More Resources:
==============================================
Further updates, samples, and other documents are available on the "Atlas" Web site (http://atlas.asp.net).

Please use the ASP.NET forums to post questions and bug reports. "Atlas" team members are actively engaged in the forum.

"Atlas" Discussions and Suggestions:
	http://forums.asp.net/1007/ShowForum.aspx

"Atlas" UI:
	http://forums.asp.net/1008/ShowForum.aspx

"Atlas" Networking and Services:
	http://forums.asp.net/1009/ShowForum.aspx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\Docs\Class Library Installation.docx ===
Class Library Installation:

Create the following keys in  appsettings in machine.config for the latest .Net version
        <add key=" GeoConfigFilePath” value="<%systemroot%\system32>\inetsrv\custom\AppConfig\Geo\Geo.MSCOM.Config"/>

Please Note:  Please replace <%systemroot%\system32> in the above path with appropriate actual folder location for the 32-bit/64-bit system folder.
Ex: C:\WINNT\system32   or C:\windows\system32 or  c:\windows\syswow64 etc.

Make sure the <appSettings> is not commented out in the machine.config.

Run the MSI from ..\MSI\debug\..  folder.

Change the values for settings in the Geo.Mscom.Config fle as suitable to your environment. Site specific settings can also be included with the setting attribute name as <settingname>+ <siteSpecificDelimiter>+ <siteName>

The <siteSpecificDelimiter> is configurable in the geo.mscom.config file as well.
Ex: On my dev machine, I can specify the database string key in geo.mscom.config as  

<setting name="SiteSpecificDelimiter" value = "+" />

				<setting name="GeoSystemDatabase+NA-WA-RED" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />

If there is an error/issue with the MSI Package, please use the dll from the folder \ClassLibrary\ .

If this is the first time install of GeoLocation API on the server, please create event source/event log using the executable at ..\GeoEventing\. Please change the eventlog/source names as desired in the config file. Once created, these names should match the values in Geo.MSCOM.config file.

Please manually set the properties of the eventlog to overwrite events when log is full. Also, please allocate a default size of 25MB to the event log or as desired by Ops.

Please Note: In some environments (ex: WWW), they would like to just take our event source ‘GeoLocationAPI’ and include that in their build script to create event sources to the default MSCom log.

Grant write and modify permissions on the GEO socket data folder to the Network Service account
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\Docs\GeoSegmentationReleasePlan.doc ===
Microsoft Office Word 97-2003 Document MSWordDoc Word.Document.8Microsoft Corp. Project Name Title _PID_HLINKS ContentType DocumentProject Name Microsoft User Normal.dotm ajayka Microsoft Office Word[Content_Types].xml _rels/.rels theme/theme/themeManager.xml theme/theme/theme1.xml F{oc' FPA}H xME$& ~\QYo+ +ek<l )Q+hkk dB|ULvaD +@Ya)hgm theme/theme/_rels/themeManager.xml.rels K(M&$R(.1 [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="yes"?> <a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/> ecRR]0 Uxq@% Z>8vM$Z-$6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6bjbj(((( GeoSegmentation Release Plan  11/27/2006 Author/Primary Contact:hpan; fengj; Secondary Contact: Document Purpose: This document describes the process to release this service to the live microsoft.com environment and contains information on the various components that make up this product. This document addresses the service s build servers and production environment as well as the service s upstream and downstream dependencies. This document also contains the release-to-production timeline and the rollback contingency plan describing the steps to take in the event that a high-severity problem surfaces after the service s release to the live production environment. TABLE OF CONTENTS  TOC \o "1-2" \h \z   HYPERLINK \l "_Toc149985151"  TABLE OF CONTENTS  PAGEREF _Toc149985151 \h   HYPERLINK \l "_Toc149985152"  GENERAL PROJECT INFORMATION  PAGEREF _Toc149985152 \h   HYPERLINK \l "_Toc149985153"  REVISION HISTORY  PAGEREF _Toc149985153 \h   HYPERLINK \l "_Toc149985154"  RELATED DOCUMENT INFORMATION  PAGEREF _Toc149985154 \h   HYPERLINK \l "_Toc149985155"  PROJECT CONTACTS  PAGEREF _Toc149985155 \h   HYPERLINK \l "_Toc149985156"  DOWNTIME & INSTALL METRICS  PAGEREF _Toc149985156 \h   HYPERLINK \l "_Toc149985157"  INTRODUCTION  PAGEREF _Toc149985157 \h   HYPERLINK \l "_Toc149985158"  DEPENDENCIES  PAGEREF _Toc149985158 \h   HYPERLINK \l "_Toc149985159"  UPSTREAM  PAGEREF _Toc149985159 \h   HYPERLINK \l "_Toc149985160"  DOWNSTREAM  PAGEREF _Toc149985160 \h   HYPERLINK \l "_Toc149985161"  Release Criteria  PAGEREF _Toc149985161 \h   HYPERLINK \l "_Toc149985162"  Project Tasks and Deliverables  PAGEREF _Toc149985162 \h   HYPERLINK \l "_Toc149985163"  HOST Environment  PAGEREF _Toc149985163 \h   HYPERLINK \l "_Toc149985164"  SYSTEM PLATFORM  PAGEREF _Toc149985164 \h   HYPERLINK \l "_Toc149985165"  SERVICE COMPONENTS  PAGEREF _Toc149985165 \h   HYPERLINK \l "_Toc149985166"  INSTALLATION AND CONFIGURATION  PAGEREF _Toc149985166 \h   HYPERLINK \l "_Toc149985167"  TEST APPROVED  PAGEREF _Toc149985167 \h   HYPERLINK \l "_Toc149985168"  BACKUP  PAGEREF _Toc149985168 \h   HYPERLINK \l "_Toc149985169"  PREREQUISITES  PAGEREF _Toc149985169 \h   HYPERLINK \l "_Toc149985170"  RELEASE PROCESS  PAGEREF _Toc149985170 \h   HYPERLINK \l "_Toc149985171"  RELEASE STEPS  PAGEREF _Toc149985171 \h   HYPERLINK \l "_Toc149985172"  ISSUES  PAGEREF _Toc149985172 \h   HYPERLINK \l "_Toc149985173"  ROLLBACK PROCESS  PAGEREF _Toc149985173 \h   HYPERLINK \l "_Toc149985174"  ROLLBACK STEPS  PAGEREF _Toc149985174 \h   HYPERLINK \l "_Toc149985175"  ISSUES  PAGEREF _Toc149985175 \h   HYPERLINK \l "_Toc149985176"  FILE CLEANUP PLAN  PAGEREF _Toc149985176 \h   HYPERLINK \l "_Toc149985177"  APPENDIX A: APPENDIX TITLE  PAGEREF _Toc149985177 \h   HYPERLINK \l "_Toc149985178"  APPENDIX B: APPENDIX TITLE  PAGEREF _Toc149985178 \h  GENERAL PROJECT INFORMATION REVISION HISTORY Once this document has been released to   HYPERLINK "\\\\msspades\\golden\\"  \\msspades\golden\  , all revisions are noted below. Author Comments Hpan; jiongf 11/27/2006 First Draft ajayka 12/12/2006 Updated with details of data copy to Production Servers RELATED DOCUMENT INFORMATION Title Location PROJECT CONTACTS Functional Group Contact Names Product Management Primary: Secondary: Program Management (PM) Primary: Chris Worland Secondary: Development Primary: RobZ Secondary: Localization Primary: Secondary: Primary: venkatb Secondary: Usability Primary: Secondary: Web Operations Primary: Secondary: SQL Operations Primary: Secondary: Release Management Primary: brianmcf Secondary: DOWNTIME & INSTALL METRICS Version ID Scheduled Date of Install Actual Date of Install Communicated Downtime Actual Downtime Cause of Downtime Anticipated Time to Install Actual Time to Install Degree of Automation (Low, Med, Hi) INTRODUCTION  FORMTEXT  Provide a summary of the top issues concerning the service s release. This is not a list of general issues concerning the service, but rather it is a list of issues pertaining specifically to the service s release to the production environment. DEPENDENCIES UPSTREAM SQL 2005; .net framework 2.0; DOWNSTREAM Not yet defined Release Criteria Project Tasks and Deliverables GeoSystem database schema and data script GeoSystemETL database schema and data script ETL Sql job script MSI installation bits Scror card and reporting setup HOST Environment  SYSTEM PLATFORM SERVICE COMPONENTS  FORMTEXT  List out each component of the release, a description and the target physical path and server locations for deployment Component Description Beta Servers Pre-Production Servers Staging Server Production Servers GeoSystemETL and GeoSystem Database that provides staging area for transforming data AlexProbe Mappoint db GeoSystem Production db GeoLocationAPI.dll GeoLocation class library dll GeoProvider.dll Geolocation profile provider dll INSTALLATION AND CONFIGURATION Database installation Restore Alexprobe db backup to your designated database server from \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database\AlexProbe. The database name is AlexProbe Create and build GeoSystemETL database. This needs to be on the same server as the Alexprobe Db. Scripts at <\\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database\GeoSystemETL>  Run DB_GeoSystemETL to create database Run TBL_GeoSystemETL to create tables and keys Run DATA_GeoSystemETL to populate domain data Run SP_GeoSystemETL to create stored procedures for this db Create and build GeoSystem database. This needs to be on the same server as the Alexprobe db and GeoSystemETL db. Scripts at: \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Database  Run DB_GeoSystem to create database Run Role.Sql to create DB_Executor role Run TBL_GeoSystem to create tables and keys Run DATA_GeoSystem to populate domain data Run SP_GeoSystem to create stored procedures and customer functions for this db Run Perm.Sql to grant execute permissions to  DB_Executor role Create and run GeoSystemETL job to populate the GeoSystem database as per following steps. Copy the contents of ..\GeoSystemETL\SSIS\ folder to a folder on SQL Server.  Run the ETL job from folder..\Databases\GeoSystemETL\Geo System ETL Job.sql  from the SQL Query window. This installs the ETL Job Edit the steps 2 & 8 in this job to reflect the correct folder location of   folder on the server. Please note that network share/UNC path don t work well. So, please mention the path in the job steps 2 & 8 (ex: C:\SSIS In the SSIS package AkamaiDataCopy.dtsx, replace the server name  b10devmptsqlh01  with the correct server name where Akamai data is located (tblGeoLocation). Please edit the package in notepad or any other editor and carefully make this change.  Copy the content of  \Publisher  folder to a drive on Sql Server.  In the SQL Job, step 6, please specify the correct path of the GeoSystemPublisher.exe. In the \Publisher\GeoSystemPublisher.exe.config, change the settings for DBConnectionString and DBDataPath as appropriate for your environment. In SQL Job, Step 7, please specify the correct location for the SQL Lite backup <GeoSystemBackupPath>. This backup is for users to get the versions for their info. GeoSystem DB has a data role called DB_Executor. This has execute permission on all the SPs and User functions on GeoSystem. Assign appropriate user(s) into this role. Please add the names and Production servers to the table GeoSystemETL.dbo.GeoProductiuonServers. The linked servers for these also need to be created on the ETL server. Please verify that the GeoBackupFilePath, GeoBackupFileUNCPath are set to correct folders and the folder structure available on the ETL server. These config values are in the GeoSystemETL.dbo.GeoConfigure table. Please note that these configuration need the filename in the path (not just folder name) SQL Lite Speed needs to be available on the ETLserver and the Production servers for the Step 8 of the ETL job to succeed. Adopter s machine installation (for example, www server, msdn server) In the latest .NET version of machine.config, create the following keys in appsettings (make sure appsettings is not commented out).  Find  <connectionStrings>, add the following: <add key="GeoConfigFilePath" value="c:\windows\syswow64\inetsrv\custom\AppConfig\Geo\Geo.MSCOM.Config " /> <add key="AnonProfileProvider" value="  HYPERLINK "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx" \o "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx"  http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx Note: The value in GeoConfigFilePath could be changed according to your environment. You just need to ensure this path does exist Note: You need to add these entries to both 32bit and 64bit latest machine.config Suggestion: it is better not to use either System32 or Syswow64. You can create another folder to avoid this 32bit and 64bit issue. Make sure the following DLL is already GACed. These are anon related dlls: Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider.dll Microsoft.MSCOM.AnonymousProfileService.CookieHelper.dll Microsoft.MSCOM.CustomerServices.MsiSid.dll Run MSCOMGeoSystemSetup.msi under MSI folder to setup GeoSystem. You need to input following information: Data File path. You will use pubwiz or other approaches to copy the GEO data file to this path SQL Server name which has GeoSystem database GeoSystem database name (by default it is GeoSystem) Port number for TCP socket communication. This port number should not conflict with other applications. Program File installation folder. By default it is C:\Program Files\MS\MSCOMGeoSystem\ Note: You can also execute this silently by running the following command (use correct parameters): msiexec /I MSCOMGeoSystemSetup.msi /qn PARAPORT=4321 PARADATA="c:\data1" PARADBSERVERNAME=mydbserver PARADBNAME=Geomydb Make sure your data file is copied to the Geo data folder you specified in step b), make sure  Network Service  can have all access rights to this folder If it is the first time install of this on the sever, please create event source/event log on the server. Please use the application \GeoEventing\GeoEventing.exe. Please change the event log name/event source name in the config file GeoEventing.exe.config. Just running the .exe creates the eventlog/source for the first time install on the server. The eventlog name/source should match with the config values for the Geo Segmentation service (web.config or the Geo.MSCOM.config). These should be the same on all the Geo Segmentation servers. Start MSCOMGeoInfoService windows service. Score Card Reporting Configuration We need to have these things: SQL Server: Host the ETL relational database Located \ScoreCard\Relationtional in the drop folder Open \Table\ GeoSystemBI_Database.sql. Modify the filegroup, filesize, etc. Then execute it. This will create the database.  Open \Table\ GeoSystemBI_tables.sql. Modify the filegroup, etc. Then execute it. This will create the tables.  Copy \Assembly\MD5d.dll to some place in your server Open \Assembly\CreateMscid.sql, modify the path of MD5d.dll and then execute it. This creates the function MSCID. Execute \Data\tabledata.sql. This populates the necessary data Open \Linked Server\CreateLinkedServer.sql, modify the SQLServerName and User and password. Then execute it to create the linked server.  Execute \Stored Procedures\spEventLog.sql, and then execute the other 3 SPs in the same folder Open \jobs\GeoSystemBI - ETL.sql. Find  Redmond\fengj , modify the user name of the job (using the user who has the right to access linked server created in the previous step), then execute it.  Note: This job is based on the assumption that the OLAP database will be on the same server with this SQL database. If they are on different servers, make sure you move the job step 4 onto the OLAP server and create a separate job for it. Here I suggest touse the same server for SQL and OLAP databases. Analysis Server: Host the OLAP database, which contains dimensions, cubes, etc. Make sure the Analysis Server is installed. It is not necessarily to be in the same server as the relational database. But if they are not in the same server, make sure the service account of  MSSQLSERVEROLAPSERVICE  is using a domain account which has enough rights to access the GeoSystemBI relational database. As we probably do not have sensitive data, the account could be admin to the GeoSystemBI.  Note: If the OLAP database is on a different server than GeoSystemBI, you need to ensure to create a job. The job script should be same as the step 4 in  GeoSegmentationBI   in section 2.2. Open \ScoreCard\OLAPDatabase\GeoSystemStatsOlap.xmla (open it against the Analysis database, using xmla, not MDX or DMX), modify the data source SQL Server name (search for B10devmptsqlh02, replace it with your SQL Server Name). You can use  localhost  if GeoSystemBI is on the same box. Execute it. This will create the OLAP database. Process the whole database. Microsoft Performance Point Server 2007 (CTP1), to host the score card and reports. It is installable from  HYPERLINK "file:///\\\\bizfs\\Public\\Builds\\Concerto\\CTP1_Release\\drop\\3.0.2500.00\\Release\\x86\\en-US\\media" \\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media It will configure your machine, as well as IIS and SQL server (it needs to install something there)  ASP.net environment. Reports will be deployed to ASP.net. Microsoft Performance Point Builder. It is the client tool in which you can develop/deploy the score card.  Install Performance Score Card Builder. On the server machine, it is already installed. If you want to install on another machine which connects to the MPPS server, you can do it. (Either consult fengj or read at its documentation   you probably need to type  HYPERLINK http://your MPPS server:4000  then it can be installed automatically).  Make sure your Builder is link to your MPPS server (click Office orb (top left button) -> Options, change the server name in the URL if necessary Open \ScoreCard\ScoreCard\GeoScoreCard.bswx in notepad, replace B10devmptsqlh02 to your OLAP Server name. Then save it and close it. On the machine which has Score Card Builder, open \ScoreCard\ScoreCard\GeoScoreCard.bswx Note: this is the workspace metadata file.  Publish this workspace to your MPPS server.  (click Home menu, click  publish all  in toolbar) Now, click Export menu, click ASP.net button in toolbar, publish score cards one by one to your IIS server. Enable all users to view the published scorecard - Click Home menu -> Server Administrator in the toolbar -> Connect to first connect to the MPPS server. Then select the Permissions tab > Add button and add the following group: User or group: "NT Authority\Authenticated Users" Role: PowerReader TEST APPROVED         FORMTEXT  \\msspades\golden location. BACKUP   FORMTEXT  Who will be performing the backup and where will it be stored. PREREQUISITES  RELEASE PROCESS RELEASE STEPS Insert steps as necessary in the following table for a given service or feature. This section should be very specific to a particular release. Status Description Environment/server name Owner Handoff Code complete, install doc and TRDs with each drop to Test Installation and Config Doc Review Dev creates- RM establishes review meeting Release plan review Test approval of build Review Project Deliverable checklist and release criteria. If all met, approve for release Go/No-Go meeting  Send release kick off mail Backup files in all environments (PPE, Staging, and Production).  OPS/RM Run SQL scripts in Pre-Production Environment Copy files to PPE environment  (Note what directory and files go to which server.) OPS/RM Verify files in PPE environment Copy files to Staging environment (Note what directory and files go to which server.) OPS/RM Run SQL scripts in Production Environment Verify UI and Web Service functionality in Staging environment against production SQL Publish UI and Web Service files to the live servers (For each file group, create a separate line in this table.) OPS/RM Verify functionality on live servers Activate the new release  Any UI project should live side by side with the ability to prop a single default file that references the new files with rollback only requiring the re-propping of the single backed up default file.   OPS/RM Send mail to appropriate alias that project or service is live with link to URI of scorecard Close out project in RFC  Schedule and facilitate Project Post Mortem meeting Update   HYPERLINK "http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls" \o "http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls"  http://team/sites/mscomrelmgmt/Shared%20Documents/MSCOMRMPhysicalArchMapping.xls ISSUES  FORMTEXT  Note issues and concerns related to the release process. ROLLBACK PROCESS ROLLBACK STEPS Status Description Owner  FORMTEXT  Indicate the steps necessary to bring the service out of the live production environment if it should experience a high severity problem. ISSUES  FORMTEXT  Note issues and concerns pertaining to the rollback process. FILE CLEANUP PLAN  FORMTEXT  Outline the plan to remove all outdated files once the new service has been installed. APPENDIX A:   FORMTEXT  APPENDIX TITLE  FORMTEXT  Place additional supporting information in this section of the document. Refer to appendices as necessary throughout the document. Label each appendix separately.  APPENDIX B:   FORMTEXT  APPENDIX TITLE  FORMTEXT  Place additional supporting information in this section of the document. Refer to appendices as necessary throughout the document. Label each appendix separately.  Confidential Page   PAGE   FILENAME  MajMinorreleaseplan template gdog* $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 $Z-$6 gdhUp }yjVjy gd|w: gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` gdr6` yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6 yt4\6
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\Docs\ProfileProviderInstallation.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Microsoft TitleNormal.dot Microsoft Office Wordurn:schemas-microsoft-com:office:smarttags State urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttagsbjbj\.\. Prerequisite: Geo class library needs to be set up on the same server before you can install GeoProfileProvider. Make sure the following DLL is already GACed. These are anon related dlls: Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider.dll Microsoft.MSCOM.AnonymousProfileService.CookieHelper.dll Microsoft.MSCOM.CustomerServices.MsiSid.dll Modify Machine.config file.  Find  <connectionStrings>, add the following: <add name="AnonProfileProvider" connectionString="http://zackdevx64.dns.microsoft.com/AnonymousProfileService/AnonymousProfile.asmx"/> **You need to change the URL according to your environment. MSI installation package should install profile privder related dlls into server s gac, if not, you can get dlls from \\msspades\Drops\mpt\Business Intelligence\Geo Segmentation\1.0.0.0\Drop 11-10-2006\GeoProfileProvider\ Sample profile provider section in web.config for adopter: <anonymousIdentification enabled="true"/> <profile defaultProvider="GeoProfileProvider"> <providers> <add  name="GeoProfileProvider"              type="Microsoft.MSCOM.GeoProfile.GeoProfileProvider"/> </providers> <properties>         <add name="MapPointID" defaultValue ="-51a"  type="int" allowAnonymous="true"/>         <add name="CountryRegionName" type="string" allowAnonymous="true"/>         <add name="CountryRegionCode" defaultValue="US" type="string" allowAnonymous="true"/>         <add name="StateProvinceName" defaultValue="Washington" type="string" allowAnonymous="true"/>         <add name="StateProvinceCode" defaultValue="WA" type="string" allowAnonymous="true"/>         <add name="IsEU" defaultValue="false" type="bool" allowAnonymous="true"/>         <add name="CityName" defaultValue="Redmond" type="string" allowAnonymous="true"/>         <add name="ZipCodes" defaultValue="98052+98053" type ="string" allowAnonymous ="true"/>         <add name="Latitude" defaultValue="98.2" type="double" allowAnonymous="true"/>         <add name="Longitude" defaultValue="12.4" type="double" allowAnonymous="true"/>         <add name="TimeZoneName" defaultValue="PST" type="string" allowAnonymous="true"/>         <add name="StandardTimeZoneOffset" defaultValue="10" type="double" allowAnonymous="true"/>         <add name="DSTTimeZoneOffset" defaultValue="11" type="double" allowAnonymous="true"/>         <add name="DSTStartTime" defaultValue="4/28/2006 02:00:00" type="string" allowAnonymous="true"/>         <add name="DSTEndTime" defaultValue="10/28/2006 02:00:00" type="string" allowAnonymous="true"/>         <add name="IsInferred"  type="bool" allowAnonymous="true"/>         <add name="IsDefault"  type="bool" allowAnonymous="true"/> </properties> </profile> zbzJz bG/b/b
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\ScoreCard\OLAPDatabase\note.txt ===
before execution, change the line in this script so you have correct datasource:
	<ConnectionString>Provider=SQLNCLI.1;Data Source=b10devmptsqlh02;Integrated Security=SSPI;Initial Catalog=GeoSystemBI</ConnectionString>

Execute this xmla script against your Analysis server. After execution, make sure the data source pointing to your GeoSystemBI sql database is well configured.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\Docs\DB.rtf ===
{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f50\froman\fcharset238\fprq2 Times New Roman CE;}{\f51\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f53\froman\fcharset161\fprq2 Times New Roman Greek;} {\f54\froman\fcharset162\fprq2 Times New Roman Tur;}{\f55\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f56\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f57\froman\fcharset186\fprq2 Times New Roman Baltic;} {\f58\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f60\fswiss\fcharset238\fprq2 Arial CE;}{\f61\fswiss\fcharset204\fprq2 Arial Cyr;}{\f63\fswiss\fcharset161\fprq2 Arial Greek;}{\f64\fswiss\fcharset162\fprq2 Arial Tur;} {\f65\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f66\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f67\fswiss\fcharset186\fprq2 Arial Baltic;}{\f68\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f70\fmodern\fcharset238\fprq1 Courier New CE;} {\f71\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f73\fmodern\fcharset161\fprq1 Courier New Greek;}{\f74\fmodern\fcharset162\fprq1 Courier New Tur;}{\f75\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);} {\f76\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f77\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f78\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255; \red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0; \red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033  \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}} {\*\latentstyles\lsdstimax156\lsdlockeddef0{\lsdlockedexcept Normal;heading 1;heading 2;heading 3;heading 4;heading 5;heading 6;heading 7;heading 8;heading 9;toc 1;toc 2;toc 3;toc 4;toc 5;toc 6;toc 7;toc 8;toc 9;caption;Title;Default Paragraph Font;Subtitle;Strong;Emphasis;Table Grid;}} {\*\listtable{\list\listtemplateid567545836\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat7\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid679702606}}{\*\listoverridetable{\listoverride\listid679702606\listoverridecount0\ls1}}{\*\rsidtbl \rsid550982\rsid794491\rsid1008555\rsid2820613\rsid4066400\rsid4477910\rsid4919316\rsid5583807 \rsid8606967\rsid9706458\rsid15293212\rsid15946172}{\*\generator Microsoft Word 11.0.8106;}{\info{\operator hpan}{\creatim\yr2006\mo11\dy7\hr14\min55}{\revtim\yr2007\mo2\dy12\hr10\min23}{\version14}{\edmins17}{\nofpages2}{\nofwords479}{\nofchars2732} {\nofcharsws3205}{\vern24611}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect  \widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3 \jcompress\viewkind1\viewscale100\rsidroot4066400 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2 \pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6 \pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang  {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \f1\fs20\insrsid4066400 Database installation step \par  \par 1. Restore Alexprobe db backup to your designated database server from \\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database\\AlexProbe. The database name is }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \b\f1\fs20\insrsid4066400\charrsid4066400 AlexProbe}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par   \par 2. Create and build GeoSystemETL database. This needs to be on the same server as the Alexprobe Db. Scripts at <\\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database\\GeoSystemETL}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid4066400 >}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400   \par \tab Run DB_GeoSystemETL to create database \par \tab Run TBL_GeoSystemETL to create tables and keys \par \tab Run DATA_GeoSystemETL to populate domain data \par \tab Run SP_GeoSystemETL to create stored procedures for this db \par 3. Create and build GeoSystem database. This needs to be on the same server as the Alexprobe db and GeoSystemETL db. Scripts at: \\\\msspades\\Drops\\mpt\\Business Intelligence\\Geo Segmentation\\1.0.0.0\\Database  \par \tab Run DB_GeoSystem to create database \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4477910 \tab Run Role.Sql to create DB_Executor role \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 \tab Run TBL_GeoSystem to create tables and keys \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2820613 \tab Run Index}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15293212 .sql}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2820613  to create index \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 \tab Run DATA_GeoSystem to populate domain data \par \tab Run SP_GeoSystem to create stored procedures and customer functions for this db \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5583807 \tab Run Perm.Sql to grant execute permissions to  DB_Executor role \par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 4. Create and run GeoSystemETL job to populate the GeoSystem database as per following steps.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 1.\tab Copy the contents of ..\\GeoSystemETL\\SSIS\\ folder to a folder on SQL Server.  \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid4919316 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 2.\tab Create a share to \\SSIS  folder so that it is accessible as \\\\localhost\\ssis.. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 Give FULL permissions to local administrator group on this share and Read-only permissions to everyone else. \par  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 3.\tab Run the ETL job from folder..\\Databases\\GeoSystemETL\\ Geo System ETL Job.sql  from the SQL Query window. This installs the ETL Job \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 4.\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 Edit the step 2}{\rtlch\fcs1 \af1\afs20  \ltrch\fcs0 \f1\fs20\insrsid4066400  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 i}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 n this job to reflect the correct folder location of \lquote SSIS\rquote   folder on the server. Please note that network share/UNC path don\rquote t work well. So, please mention the path in the job step }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8606967 2}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400   (ex: C:\\SSIS\'85).  \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 5.\tab Copy the content of \lquote \\Publisher\rquote  folder to a drive on Sql Se rver. This can be the same drive as in step 1 above. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 6.\tab In the SQL Job, step 6}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  , please specify the correct path of the GeoSystemPublisher.exe. \par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 \hich\af1\dbch\af0\loch\f1 7.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls1\rin0\lin720\itap0\pararsid9706458 { \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400 In the \\Publisher\\GeoSystemPublisher.exe.config, change the settings for DBConnectionString and DBDataPath as appropriate for your environment.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \f1\fs20\insrsid9706458  \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 \hich\af1\dbch\af0\loch\f1 8.\tab}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 In the SQL Job, Step }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0  \f1\fs20\insrsid1008555 7}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 , please specify the correct path for }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf6\lang1024\langfe1024\noproof\insrsid794491 <GeoSystemBackupPath>. }{\rtlch\fcs1  \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid794491 This is the location where a SQL Lite backup of the GeoSystem database is saved to. Please also share and give read-permissions to public for this folder so that interested groups can access this backup. \par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 \hich\af1\dbch\af0\loch\f1 9.\tab}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555 In SQL Job, step  8 the Geo System database is copied to Production Servers. The production servers are to be added to table GeoSystemETL.dbo.GeoProductionServers. Also, linked servers are created for these on the ETL database server. The backup/restore paths are stored in  GeoSystemETL.dbo.GeoConfigure table.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982\charrsid550982 GeoBackupFilePath}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982   is the location where backup file is saved to. }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982\charrsid550982 GeoBackupFileUNCPath}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid550982   is the share for remote restore. Please make sure this share is  created and shared (read-only permissions).}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1008555  \par }\pard \ltrpar\ql \li360\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin360\itap0\pararsid9706458 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458  \par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9706458 5. GeoSystem DB has a d ata role called DB_Executor. This has execute permission on all the SPs and User functions on GeoSystem. Assign appropriate user(s) into this role.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4066400  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\ScoreCard\Relationtional\Jobs\note.txt ===
Execute this Job script to create a job for GeoSystemBI ETL process

Note:
1. Currently this job script uses redmond\fengj as the user account. Please change it to the authorized user who can access the linked server where TenantDW is located.

2. Currently this is an hourly schedule. If in the future ETL and cube processing becomes to be slower, we might change the schedule.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\ScoreCard\Relationtional\Linked Server\note.txt ===
Please open this file, and:

1. change the sql servername and user information for connection string
	set @SQLServerName = 'B10PPESQLPIP01\tenant'
	set @UserInfoString = 'integrated Security=sspi;' -- or 'UID=SQLUser;PWD=SQLPwd;'


Note:
1. In production, we need to create a user for @UserInfoString. This user should have the execution rights of TenantDW SP:
	TenantDWServer.TenantDW.[dbo].[WMSPS_GetSubscription_Data] 
2. Please do not change the value of @linkedServerName. Otherwise we also need to modify SP
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\SDK\GeoSegmentationSystemSDK.doc ===
Microsoft Office Word 97-2003 Document MSWordDoc Word.Document.8Microsoft Corporation MXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation GeoSegmentation System v1.0     Introduction     Important Restrictions     Installation   MSCOM Environment      Installation   Development Server     GeoProfile Provider         Configuration         Using the GeoProfile Provider     GeoLocation API         Configuration         Using Geographic Information         Using Lists of Locations     GeoSegmentation Samples         Configuration         ASCX Control for Explicit Set     Appendix         LanguageID Reference         Country Code Reference Title Headings _PID_HLINKSMXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation Prashanth Nimmagadda Normal Chris Worland Microsoft Office Word " WMFC RQzo 1 $Qzo 1 " WMFC RQzo|3 $Qzo|3 RQzo 1 $Qzo 1 " WMFC " WMFC " WMFC " WMFC "System MS Shell Dlg "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma MXPS . Customer Intelligence and Analytics  Stardust Audience Segmentation "Arial GeoSegmentation System v1.0 "Tahoma Software Development Kit Updated:  1/16/2007 5:08:00 PM "Tahoma "Tahoma Contact:  Tahoma Chris Worland (chriswo @microsoft.com) "Calibri GeoSegmentation System v1.0 ................................ ................................ ................................ ................................ Introduction ................................ ................................ ................................ ................................ ............................ Important Restrictions ................................ ................................ ................................ ................................ ............. "Tahoma "Tahoma "Tahoma "Tahoma "Tahoma Installation  MSCOM Environmentt ................................ ................................ ................................ .......................... Installation  Development Server ................................ ................................ ................................ ............................ GeoProfile Providero ................................ ................................ ................................ ................................ .................e Configuration ................................ ................................ ................................ ................................ ...................... Using the GeoProfile Provider ................................ ................................ ................................ .............................. GeoLocation API ................................ ................................ ................................ ................................ ...................... Configuration ................................ ................................ ................................ ................................ ...................... Using Geographic Information ................................ ................................ ................................ .............................. Using Lists of Locations ................................ ................................ ................................ ................................ .......o GeoSegmentation Sampless ................................ ................................ ................................ ................................ Configuration ................................ ................................ ................................ ................................ .................... ASCX Control for Explicit Set ................................ ................................ ................................ .............................. Appendix ................................ ................................ ................................ ................................ .............................. LanguageID Reference ................................ ................................ ................................ ................................ ...... Country Code Reference ................................ ................................ ................................ ................................ "Verdana "Verdana[Content_Types].xml _rels/.rels theme/theme/themeManager.xml theme/theme/theme1.xml w toc'v 3Vq%'#q :\TZaG IqbJ#x T[XF64 theme/theme/_rels/themeManager.xml.rels K(M&$R(.1 [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="yes"?> <a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/> urn:schemas-microsoft-com:office:smarttags PersonName urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags State urn:schemas-microsoft-com:office:smarttags country-region lX/3$ hYBa&I:n@Sx lqKhh 7hPQ^v .#;T%m2 5T$o5 ?u3Z( <Plp61 He,`A_17 s{>6G 3fEijIMicrosoft Office Excel Worksheet Biff8 Excel.Sheet.8Microsoft Corporation Sheet1 Sheet2 Sheet3 Worksheets _AdHocReviewCycleID _NewReviewCycle _EmailSubject _AuthorEmail _AuthorEmailDisplayName _ReviewingToolsShownOnce AttributeId and AttributeGroupID in Anon DB chriswo@microsoft.com Chris WorlandChris Worland Prashanth Nimmagadda Microsoft ExcelPrashanth Nimmagadda                                                                                         B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Normal_Sheet1 Sheet1 Sheet2 Sheet3 EnglishName EntityName Afghanistan Albania Algeria Andorra Angola Antigua and Barbuda Argentina Armenia Australia Austria Azerbaijan Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bhutan Bolivia Bosnia and Herzegovina Botswana Brazil Brunei Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Central African Republic Chile China Colombia Comoros Congo Congo (DRC) Costa Rica Croatia Cyprus Czech Republic Denmark Djibouti Dominica Dominican Republic Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Federated States of Micronesia Fiji Islands Finland France FYRO Macedonia Gabon Georgia Germany Ghana Greece Grenada Guatemala Guinea Guinea-Bissau Guyana Haiti Honduras Hungary Iceland India Indonesia Ireland Israel Italy Jamaica Japan Jordan Kazakhstan Kenya Kiribati Kuwait Kyrgyzstan Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Madagascar Malawi Malaysia Maldives Malta Marshall Islands Mauritania Mauritius Mexico Moldova Monaco Mongolia Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands New Zealand Nicaragua Niger Nigeria North Korea Norway Pakistan Palau Panama Papua New Guinea Paraguay Philippines Poland Portugal Qatar Romania Russia Rwanda Samoa San Marino o Tom  and Pr ncipe Saudi Arabia Senegal Serbia and Montenegro Seychelles Sierra Leone Singapore Slovakia Slovenia Solomon Islands Somalia South Africa South Korea Spain Sri Lanka St Kitts and Nevis St Lucia St Vincent and the Grenadines Sudan Suriname Swaziland Sweden Switzerland Syria Taiwan Tajikistan Tanzania Thailand The Bahamas The Gambia Timor-Leste Tonga Trinidad and Tobago Tunisia Turkey Turkmenistan Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Uruguay Uzbekistan Vanuatu Vatican City Venezuela Vietnam Yemen Zambia Zimbabwe MbP?_ MbP?_ MbP?_MXPS   Customer Intelligence and Analytics  Stardust  Audience Segmentation GeoSegmentation System v1.0 Software Development Kit Updated:   SAVEDATE   \* MERGEFORMAT  1/16/2007 5:08:00 PM Contact:   HYPERLINK "mailto:chriswo"  Chris Worland  (chriswo@microsoft.com)  TOC  \* MERGEFORMAT  GeoSegmentation System v1.0  PAGEREF _Toc156805410 \h  Introduction  PAGEREF _Toc156805411 \h  Important Restrictions  PAGEREF _Toc156805412 \h  Installation   MSCOM Environment  PAGEREF _Toc156805413 \h  Installation   Development Server  PAGEREF _Toc156805414 \h  GeoProfile Provider  PAGEREF _Toc156805415 \h  Configuration  PAGEREF _Toc156805416 \h  Using the GeoProfile Provider  PAGEREF _Toc156805417 \h  GeoLocation API  PAGEREF _Toc156805418 \h  Configuration  PAGEREF _Toc156805419 \h  Using Geographic Information  PAGEREF _Toc156805420 \h  Using Lists of Locations  PAGEREF _Toc156805421 \h  GeoSegmentation Samples  PAGEREF _Toc156805422 \h  Configuration  PAGEREF _Toc156805423 \h  ASCX Control for Explicit Set  PAGEREF _Toc156805424 \h  Appendix  PAGEREF _Toc156805425 \h  LanguageID Reference  PAGEREF _Toc156805426 \h  Country Code Reference  PAGEREF _Toc156805427 \h  Introduction This document describes how to use the API s provided by the GeoSegmentation code. GeoSegmentation is an out-of-box solution that provides Geographical information about Microsoft s online customers. It is available to internal groups at Microsoft and is not intended to be shared with Microsoft customers or partners. This system is based on IP-Address data Microsoft licenses from Akamai (see restrictions below). The GeoSegmentation v1.0 API provides the following data about each customer: MapPointId (nullable int, 32313) MapPointIdParent (nullable int, 123) [Only accessible from the GeoLocation API] CountryRegionCode (string,  StateProvinceCode (string,  TimeZoneDisplayName (string,  CountryRegionDisplayName (string,  United States StateProvinceDisplayName (string,  Washington CityDisplayName (string,  Redmond PostalCode (3 options at runtime) Option 1: No zip codes Option 2: City Only (string,  98052-98053+98072 Option 3: City+30 Miles (string,  98052-98100+98078 Note: Option 3 contains the list of zip codes an application can pass to the Microsoft Global Marketing Platform s World-Wide Events Web Service to retrieve a list of nearby events each customer IsEuropeanUnion (nullable bool, t/f) IsInferred (bool, true if Reverse IP performed, false if customer s explicit setting was used) IsDefault (bool, true on error, false if okay) Latitude (nullable double, -23.123) Longitude (nullable double, 32.123) StandardTimeZoneOffset (double)  DSTTimeZoneOffset (nullable double)  DSTStartTimeUniversal (nullable DateTime)  DSTEndTimeUniversal (nullable DateTime)  The GeoSegmentation System was designed to provide this information in the context of each HTTP request to a Web Server. It is very lightweight and requires only 140 microseconds (0.14 msecs) to query its 500MB in-memory cache. At 100 RPS, it adds just 1% CPU, making it lightweight enough to include on every page. However, the GeoSegmentation System can be used in Console and EXE applications too. The system provides direct methods for converting an IP Address (string) into the information above. This allows the application to be useful for offline-reporting of log files. Application Developers can access these Geo properties via:  GeoProfile Provider Easy to use ASP.NET only MSCOM only GeoLocation APIs Harder ASP.NET, EXE, and Console Applications Not limited to MSCOM environment The GeoProfile Provider is based on the ASP.NET Provider pattern and makes it easy for application developers to use the system. It is easy to use. However, it only works in ASP.NET environments that also have access to the MSCOM Anonymous Profiling Service. The GeoProfile Provider is a layer on top of the GeoLocation API It adds additional functionality for storing the customer s preferred location This functionality adds dependencies on: Access to the ASP.NET HttpContext (for reading/writing the Anon cookie) The MSCOM Anon Profiling Service The GeoLocation API provides a combination of methods that can be leveraged to build custom functionality in ASP.NET and other environments. Important Restrictions The IP Address Information is licensed to Microsoft by Akamai. Akamai is a third-party company that provides Microsoft with world-wide content distribution. Microsoft is a multi-million dollar consumer of Akamai s services. Restriction #1: Akamai has restrictions about who may use their data Before beginning your development, you must consult with Chris Worland (chriswo) and Kurt Parent (kparent) in MSCOM to understand the licensing restrictions surrounding the Akamai data. If you are not covered by the existing agreement, there might be a ~$5K per month to license the source data. Restriction #2: Akamai has restrictions about how we share their data with the public Akamai restricts us from sharing their data with the public. Your application must never provide functionality that might allow a third-party to screen-scrape our Website to learn Akamai s intellectual property, namely the mapping of IP Addresses to locations. Simple rule:  If your application only uses the IP Address from the HttpRequest, you won t have to worry about this. On the other hand, if you have a HTML form that says  enter your IP Address  you will have this problem. Installation   MSCOM Environment  MSCOM Ops is responsible for supporting GeoSegmentation on PPE and Production Web Servers. In their typical configuration: Their Database Servers will host the GeoSegmentation database Their Web Servers will: Run the Windows Service that provides fast reverse-IP lookups Host the 120MB data file that populates the Windows Service in-memory cache GAC the DLLs for GeoProfile Provider  GeoLocation API (And the MSCOM Anon Profiling Service) They will not support GeoSegmentation in your development environment. To code against GeoSegmentation in your development environment, you will need to host: On a SQL Server: The GeoSegmentation Database This is provided as a 90MB SQL LightSpeed backup (restores to ~4GB) On your IIS Server, you will need to host: The Geo Windows Service (.exe) The Geo data file (.dat, 120MB) 2 GAC d DLLs GeoProfileProvider GeoLocation (And the MSCOM Anonymous Profile Service) Installation   Development Server See the DevServerInstallationGuide.docx on   HYPERLINK "\\\\msspades\\golden\\MPT\\BusinessIntelligence\\Geo Segmentation\\1.0.0.0\\SDK"  \\msspades\golden\MPT\BusinessIntelligence\Geo Segmentation\1.0.0.0\SDK  for instructions on getting the GeoSegmentation System bits installed on your Development Servers. It consists of: Restoring a copy of the GeoSystem.bak Database on your SQL Server Adding a line to Machine.config and running a MSI file on your IIS Server GeoProfile Provider This is the GeoSystem interface that is: Only for MSCOM environments Easy to code against ASP.NET dependent MSCOM Anonymous Profiling Service dependent The GeoProfile Provider enables access to geographic properties about customers via a reverse-IP lookup in any .NET based Web application. Configuration These four configuration settings are required for your ASP.NET application. Add the following assemblies to  web.config file. (Please verify the version of these DLL s from the GAC assembly)       <compilation debug="false">         <assemblies>           <add assembly="GeoLocationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/>           <add assembly="GeoProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/>           <add assembly="Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider, version=2.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>           <add assembly="Microsoft.MSCOM.AnonymousProfileService.CookieHelper, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>           <add assembly="Microsoft.MSCOM.CustomerServices.MsiSid, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/>         </assemblies>       </compilation> Add the following entries to the system.web element of the web.config file. You may update the default values to other settings. <anonymousIdentification enabled="true"/>     <profile>       <providers>         <add name="GeoProfileProvider"               type="Microsoft.MSCOM.GeoProfile.GeoProfileProvider"/>       </providers>       <properties>         <add name="MapPointID" type="int" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CountryRegionName" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CountryRegionCode" defaultValue="US" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StateProvinceName" defaultValue="Washington" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StateProvinceCode" defaultValue="WA" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="CityName" defaultValue="Redmond" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="Latitude" defaultValue="47.674" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="Longitude" defaultValue="-122.120" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="TimeZoneName" defaultValue="PST" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="StandardTimeZoneOffset" defaultValue="8" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTTimeZoneOffset" defaultValue="7" type="double" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTStartTime" defaultValue="4/28/2006 02:00:00" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="DSTEndTime" defaultValue="10/28/2006 02:00:00" type="string" allowAnonymous="true" provider="GeoProfileProvider"/>         <add name="IsInferred"  type="bool" allowAnonymous="false" provider="GeoProfileProvider"/>         <add name="IsDefault"  type="bool" allowAnonymous="true" provider="GeoProfileProvider"/>         </properties> </profile> Add the following under <ConnectionStrings> section of machine.config file in %WINDIR%\Microsoft.NET\Framework\[.NET_version_number]\CONFIG. <add name="AnonProfileProvider"  connectionString="  HYPERLINK "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx" \o "http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx"  http://tk2msftsbsx01/AnonymousProfileService/anonymousprofile.asmx " />  Notes:  As of November 2006, this URL was correct. If not, please contact MSCOMHLP and ask for  GeoSegmentation: PPE URL for MSCOM Anonymous Profile Service GeoProfile Provider classes are supported in .NET versions 2.0. Please select the .NET version for your application for this feature to work. In your ASPX page, set the Async attribute to true . Usually this is done as a page-level directive. Using the GeoProfile Provider All the properties can be accessed similarly to the following code: int myMapPointID = Profile.MapPointID; string myCountryRegionName = Profile.CountryRegionName; string myCityName = Profile.CityName; When this code is executed, ASP.NET invokes the Geoprofile Provider and obtains the property values. Using the HttpRequest object, the code extracts the IP Address and performs a Reverse IP lookup. It also checks for a MSCOM Anonymous Cookie for an explicit setting and will use that value to perform the lookup (if it finds one). To set an explicit location for a user, use code similar to the following: Profile.MapPointID = myMapPointID; Profile.Save(); This code will save the customer s preference to the MSCOM Anonymous Profile Service. It will also cache a copy of this value (an integer) to the customers MSCOM Anonymous Cookie, setting a cookie if they did not already have one. The copy in the MSCOM Anonymous Service DB will not be used, but is cached in anticipation of an upcoming feature called  Roaming Profiles  (current as of 11/2006). Important: Your next question should be  how do we know which integers to use?  This requires the GeoLocation API which provides lists of strings for CountryRegions, StateProvinces, and Cities.  For more information: Refer to the appendix to learn how to deploy the GeoSegmentation Samples Please see the  ASCX Control for Explicit Set  example GeoLocation API The GeoLocation API allows programmatic access to geographic information. Configuration To use the Geo Location API,  GeoLocationAPI.dll has to be referenced in the application. And add the following statement in your application class. using Microsoft.MSCOM.Geo.GeoLocationAPI; Using Geographic Information GeoInfo objects contain geographic information returned from lookups. These objects contain the same information as the GeoProfile Provider attributes. To get a GeoInfo object, you will use one of these three methods: GetGeoInfoFromIPAddress GetGeoInfoFromMapPointID GetGeoInfoFromPostalCode These methods can be used in ASP.NET, .EXE, and Console applications. Using Lists of Locations To build a user interface for allowing the customer to select their preferred location, the GeoLocation class provides the following: GetCountryRegionList   which provides the top-level list of countries. Each CountryRegion object can be used to get further lists of its StateProvinces and Cities The classes and methods available as part of the GeoLocation API include: ClassName Method Input Parameters Output  Notes GeoLocation public static List<CountryRegion> GetCountryRegionList() List<CountryRegion> Returns list of all CountryRegion objects . The language defaults to US - Engligh GeoLocation public static List<CountryRegion> GetCountryRegionList(String Language) Language - Application Language List<CountryRegion> Returns list of all CountryRegion Objects in application specified Language (For a list of available languages see appendix TBD)  GeoLocation public static GeoInfo GetGeoInfoFromIPAddress(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string ipAddress,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language,    GeoZipCodeStringMode zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData IPAddress   Target IP Address Language    Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or the URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. GeoLocation public static GeoInfo GetGeoInfoFromMapPointId(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemInt32ClassTopic.htm"  mapPointId,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language,    GeoZipCodeStringMode       zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData MapPointId   Target MapID  Language   Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. GeoLocation public static GeoInfo GetGeoInfoFromPostalCode(  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string postalCode,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string countryCode,  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string language, GeoZipCodeStringMode       zipcodeMode  HYPERLINK "ms-help://MS.NETFrameworkSDKv1.1/cpref/html/frlrfSystemStringClassTopic.htm"  string statsData PostalCode   Target region PostalCode CountryCode   Target country Code Language    Application Language GeoZipCodeStringMode   Provides options for various levels of zipCode Output StatsData   ApplicationName or the URL GeoInfo Returns a GeoInfo object if successful otherwise returns NULL object. For more information on the GeoLocation API see the GeoLocation API Sample and GeoLocationAPI_Documentation.chm file. See the appendix on deploying and running the GeoSegmentation Samples on your web server. GeoSegmentation Samples Configuration Please follow the instructions below to deploy the Sample Site to your IIS Web Server. The GeoSegmentation System must be installed on the Web Server. Click Start, then Admin Tools, and then IIS Manager Locate Web Sites, then Default Web Site and right-click New Virtual Directory In the virtual directory window, provide appropriate name to the virtual directory and select the local folders that contain the Samples Create a virtual directory for each sample: Give permission to execute ASP scripts and ensure ASP.NET 2.0 is selected as the ASP.NET engine. Right-click on the Virtual directory and select Directory Security tab Under Authentication and Access Control click Edit and make sure Enable anonymous access is checked Right-click the Virtual directory and select the Documents tab Add Default.aspx as one of the default documents Browse to the Sample Site. ASCX Control for Explicit Set The Explicit Set ASCX control provides plug-and-play functionality to provide your customers with an option to set their preferred geographic location. The ASCX Control is powered by Atlas framework providing interactive interface to user.  Follow the instructions below to add the ASCX Control to your webpage. Add the following assemblies to  web.config file. (Please verify the version of these DLL s from the GAC assembly) <compilation debug="false"> <assemblies> <add assembly="GeoLocationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/> <add assembly="GeoProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1908B7A1AE6DC398"/> <add assembly="Microsoft.MSCOM.AnonymousProfileService.ASIDBasedProfileProvider, version=2.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> <add assembly="Microsoft.MSCOM.AnonymousProfileService.CookieHelper, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> <add assembly="Microsoft.MSCOM.CustomerServices.MsiSid, version=1.0.0.0, Culture=neutral, PublicKeyToken=81df03408f01113d"/> </assemblies> </compilation> Add a reference to the following dll in the application bin folder. This control is developed on Atlas framework. Please download Atlas dll from   HYPERLINK "http://ajax.asp.net/"  http://ajax.asp.net/ Microsoft.Web.Atlas.dll Copy GeoSegSample.ascx and GeoSegSample.ascx.cs files to your web application. On the appropriate page, add the following code to your page s header: <%@ Register Src="~/GeoSegSample.ascx" TagName="GeoLocation" TagPrefix="Dev" %> In the <body> section of the webpage, add the following code: <Dev:GeoLocation  id="TestGeoSample" runat="Server"  > </Dev:GeoLocation> Use the GeoSystem Sample Site GeoLocation_Explicit_Set to see an example of the ASCX Control and functionality for using the Profile Provider to set an explicit setting. Appendix LanguageID Reference For most Lookup methods, one of the parameters is (string LanguageID), which represents  Customer s Preferred Language . The GeoSegmentation System will provide English display names for English customers, and Chinese ones for Chinese customers (plus localized translations in ten other languages).  Parameter format: Please see   HYPERLINK "http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp" \o "http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp"  http://msdn.microsoft.com/library/en-us/intl/nls_238z.asp  for the list of LanguageIDs the GeoSystem supports (i.e. the GeoSegmentation System uses the five (or more) character  en-us  format instead of the integer LCID codes) It is anticipated that your applications will pass in the HttpRequest.UserAcceptLanguage[0] as the LangaugeID parameter, however you may pass in other values it if you wish (i.e. if you want a page to be entirely in a particular language). Localization depth: Please see MapPoint  HYPERLINK "http://alexprobe"  http://alexprobe  site to query which locations have been localized into which languages The GeoSystem defaults to MapPoint s Invariant Culture values (English) if it does not have a particular localized translation. Country Code Reference In the GeoLocation API, the PostalCode lookup method requires a two-character MapPoint country code. Please refer to the attached XLS for the taxonomy to use for country code. After November 2006, the   HYPERLINK "http://alexprobe"  http://alexprobe  site will contain the latest information.  EMBED Excel.Sheet.8   gdsFI }gVCVCVg xcIcI ^I^9* thWhP?
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\Docs\Class Library Installation.docx ===
Class Library Installation:

Create the following keys in  appsettings in machine.config for the latest .Net version
        <add key=" GeoConfigFilePath” value="<%systemroot%\system32>\inetsrv\custom\AppConfig\Geo\Geo.MSCOM.Config"/>

Please Note:  Please replace <%systemroot%\system32> in the above path with appropriate actual folder location for the 32-bit/64-bit system folder.
Ex: C:\WINNT\system32   or C:\windows\system32 or  c:\windows\syswow64 etc.

Make sure the <appSettings> is not commented out in the machine.config.

Run the MSI from ..\MSI\debug\..  folder.

Change the values for settings in the Geo.Mscom.Config fle as suitable to your environment. Site specific settings can also be included with the setting attribute name as <settingname>+ <siteSpecificDelimiter>+ <siteName>

The <siteSpecificDelimiter> is configurable in the geo.mscom.config file as well.
Ex: On my dev machine, I can specify the database string key in geo.mscom.config as  

<setting name="SiteSpecificDelimiter" value = "+" />

				<setting name="GeoSystemDatabase+NA-WA-RED" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />

If there is an error/issue with the MSI Package, please use the dll from the folder \ClassLibrary\ .

If this is the first time install of GeoLocation API on the server, please create event source/event log using the executable at ..\GeoEventing\. Please change the eventlog/source names as desired in the config file. Once created, these names should match the values in Geo.MSCOM.config file.

Please manually set the properties of the eventlog to overwrite events when log is full. Also, please allocate a default size of 25MB to the event log or as desired by Ops.

Please Note: In some environments (ex: WWW), they would like to just take our event source ‘GeoLocationAPI’ and include that in their build script to create event sources to the default MSCom log.

Grant write and modify permissions on the GEO socket data folder to the Network Service account
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\SDK\InterDevServerInstallGuide-NewLocation.docx ===
The InterDevServerInstallGuide.docx has been moved to: http://sharepoint/sites/stardust/segmentation/GeoSegmentation%20v10/DevServerInstallGuide.docx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\SDK\GeoLocation_Explicit_Set\eula.rtf ===
{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff36\deff36\stshfdbch11\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Arial};} {\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Bookshelf Symbol 3};}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings{\*\falt Symbol};} {\f11\froman\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma{\*\falt ?l?r ??u!??I};} {\f37\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana{\*\falt Tahoma};}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS{\*\falt Arial};} {\f196\froman\fcharset128\fprq1{\*\panose 00000000000000000000}@MS Mincho{\*\falt @MS Gothic};}{\f219\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times};}{\f220\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times};} {\f222\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times};}{\f223\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times};}{\f224\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times};} {\f225\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times};}{\f226\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times};}{\f227\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times};} {\f239\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Arial};}{\f240\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Arial};}{\f242\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Arial};} {\f243\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Arial};}{\f244\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Arial};}{\f245\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Arial};} {\f246\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Arial};}{\f247\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Arial};}{\f579\fswiss\fcharset238\fprq2 Tahoma CE{\*\falt ?l?r ??u!??I};} {\f580\fswiss\fcharset204\fprq2 Tahoma Cyr{\*\falt ?l?r ??u!??I};}{\f582\fswiss\fcharset161\fprq2 Tahoma Greek{\*\falt ?l?r ??u!??I};}{\f583\fswiss\fcharset162\fprq2 Tahoma Tur{\*\falt ?l?r ??u!??I};} {\f584\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew){\*\falt ?l?r ??u!??I};}{\f585\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic){\*\falt ?l?r ??u!??I};}{\f586\fswiss\fcharset186\fprq2 Tahoma Baltic{\*\falt ?l?r ??u!??I};} {\f587\fswiss\fcharset163\fprq2 Tahoma (Vietnamese){\*\falt ?l?r ??u!??I};}{\f588\fswiss\fcharset222\fprq2 Tahoma (Thai){\*\falt ?l?r ??u!??I};}{\f589\fswiss\fcharset238\fprq2 Verdana CE{\*\falt Tahoma};} {\f590\fswiss\fcharset204\fprq2 Verdana Cyr{\*\falt Tahoma};}{\f592\fswiss\fcharset161\fprq2 Verdana Greek{\*\falt Tahoma};}{\f593\fswiss\fcharset162\fprq2 Verdana Tur{\*\falt Tahoma};}{\f596\fswiss\fcharset186\fprq2 Verdana Baltic{\*\falt Tahoma};} {\f597\fswiss\fcharset163\fprq2 Verdana (Vietnamese){\*\falt Tahoma};}{\f619\fswiss\fcharset238\fprq2 Trebuchet MS CE{\*\falt Arial};}{\f620\fswiss\fcharset204\fprq2 Trebuchet MS Cyr{\*\falt Arial};} {\f622\fswiss\fcharset161\fprq2 Trebuchet MS Greek{\*\falt Arial};}{\f623\fswiss\fcharset162\fprq2 Trebuchet MS Tur{\*\falt Arial};}{\f626\fswiss\fcharset186\fprq2 Trebuchet MS Baltic{\*\falt Arial};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255; \red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0; \red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \sautoupd Normal;}{\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext1 heading 1;}{\s2\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext2 heading 2;}{\s3\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar \tx1077\jclisttab\tx1440\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl2\outlinelevel2\adjustright\rin0\lin1077\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext3 heading 3;}{\s4\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar\jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl3\outlinelevel3\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext4 heading 4;}{\s5\ql \fi-357\li1792\ri0\sb120\sa120\widctlpar \tx1792\jclisttab\tx2155\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl4\outlinelevel4\adjustright\rin0\lin1792\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext5 heading 5;}{\s6\ql \fi-357\li2149\ri0\sb120\sa120\widctlpar\jclisttab\tx2152\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl5\outlinelevel5\adjustright\rin0\lin2149\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext6 heading 6;}{\s7\ql \fi-357\li2506\ri0\sb120\sa120\widctlpar \jclisttab\tx2509\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl6\outlinelevel6\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext7 heading 7;}{\s8\ql \fi-357\li2863\ri0\sb120\sa120\widctlpar\jclisttab\tx2866\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl7\outlinelevel7\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext8 heading 8;}{\s9\ql \fi-358\li3221\ri0\sb120\sa120\widctlpar \jclisttab\tx3223\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl8\outlinelevel8\adjustright\rin0\lin3221\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext9 heading 9;}{\*\cs10 \additive \slink68 \slocked \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af11\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{ \s15\ql \li357\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext15 Body 1;}{\s16\ql \li720\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body 2;}{\s17\ql \li1077\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1077\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 Body 3;}{ \s18\ql \li1435\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext18 Body 4;}{\s19\ql \li1803\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1803\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 Body 5;}{\s20\ql \li2160\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext20 Body 6;}{ \s21\ql \li2506\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext21 Body 7;}{\s22\ql \li2863\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext22 Body 8;}{\s23\ql \li3221\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin3221\itap0 \rtlch\fcs1  \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 Body 9;}{\s24\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin357\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext24 Bullet 1;}{ \s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 Bullet 2;}{\s26\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar\jclisttab\tx1080\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1077\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext26 Bullet 3;}{\s27\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar \jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext27 Bullet 4;}{ \s28\ql \fi-357\li1792\ri0\sb120\sa120\widctlpar\jclisttab\tx1795\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin1792\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext28 Bullet 5;}{\s29\ql \fi-357\li2149\ri0\sb120\sa120\widctlpar\jclisttab\tx2152\wrapdefault\aspalpha\aspnum\faauto\ls6\adjustright\rin0\lin2149\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 Bullet 6;}{\s30\ql \fi-357\li2506\ri0\sb120\sa120\widctlpar \jclisttab\tx2509\wrapdefault\aspalpha\aspnum\faauto\ls7\adjustright\rin0\lin2506\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 Bullet 7;}{ \s31\ql \fi-357\li2863\ri0\sb120\sa120\widctlpar\jclisttab\tx2866\wrapdefault\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin2863\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext31 Bullet 8;}{\s32\ql \fi-358\li3221\ri0\sb120\sa120\widctlpar\jclisttab\tx3223\wrapdefault\aspalpha\aspnum\faauto\ls9\adjustright\rin0\lin3221\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon23 \snext32 Bullet 9;}{ \s33\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext0 Heading EULA;}{\s34\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Heading Software Title;}{\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1  \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext35 Preamble;}{\s36\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20  \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext1 Preamble Border;}{ \s37\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext37 Heading Warranty;}{\s38\ql \fi-360\li360\ri0\sb120\sa120\widctlpar\jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls11\outlinelevel0\adjustright\rin0\lin360\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Heading 1 Warranty;}{\s39\ql \fi-360\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls11\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext0 Heading 2 Warranty;}{\s40\ql \fi-357\li1077\ri0\sb120\sa120\widctlpar\tx1077\jclisttab\tx1440\wrapdefault\aspalpha\aspnum\faauto\ls10\ilvl2\outlinelevel2\adjustright\rin0\lin1077\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon3 \snext40 Heading 3 Bold;}{\s41\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar \jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon27 \snext41  Bullet 4 Underline;}{\s42\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon26 \snext42 Bullet 3 Underline;}{\*\cs43 \additive \rtlch\fcs1 \ab\af36 \ltrch\fcs0  \b\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\langnp1033\langfenp1033 \sbasedon10 \slocked Heading 2 Char;}{\s44\ql \li720\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af36\afs19\alang1025  \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon16 \snext44 Body 2 Underline;}{\s45\ql \li1077\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1077\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\ul\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext45 Body 3 Underline;}{\s46\ql \li0\ri0\sb120\sa120\sl480\slmult1 \widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext46 Body Text 2;}{ \s47\ql \fi-358\li1435\ri0\sb120\sa120\widctlpar\jclisttab\tx1437\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1435\itap0 \rtlch\fcs1 \ai\af36\afs19\alang1025 \ltrch\fcs0  \i\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon27 \snext47 Bullet 4 Italics;}{\*\cs48 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked  Body 2 Char;}{\*\cs49 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked Body 3 Char;}{\*\cs50 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033  \sbasedon10 \slocked Body 4 Char;}{\*\cs51 \additive \rtlch\fcs1 \af36 \ltrch\fcs0 \f36\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slocked Body 1 Char;}{\s52\ql \li0\ri0\sb120\sa120\widctlpar\brdrt\brdrs\brdrw10\brsp20  \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon35 \snext52 Preamble Border Above;}{ \s53\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext53 \ssemihidden footnote text;}{\*\cs54 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super \sbasedon10 \ssemihidden footnote reference;}{\s55\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext55 \ssemihidden endnote text;}{\*\cs56 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super  \sbasedon10 \ssemihidden endnote reference;}{\s57\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext57 \ssemihidden annotation text;}{\*\cs58 \additive \rtlch\fcs1 \af0\afs16 \ltrch\fcs0 \fs16 \sbasedon10 \ssemihidden annotation reference;}{ \s59\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext59 Char;}{\s60\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext60 Char Char Char Char;}{\*\cs61 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf2 \sbasedon10 Hyperlink;}{ \s62\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs16\alang1025 \ltrch\fcs0 \fs16\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext62 \ssemihidden Balloon Text;}{\*\cs63 \additive \rtlch\fcs1 \ab\af40 \ltrch\fcs0 \b\f40\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 Heading 2 Char1;}{\*\cs64 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \sbasedon10 page number;}{ \s65\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext65 Char Char Char Char1;}{\s66\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \styrsid8999754 Body 0 Bold;}{\s67\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025  \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 \snext0 \styrsid8999754 Body 0;}{\s68\ql \li0\ri0\sa160\sl-240\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1  \af37\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\loch\f37\hich\af37\dbch\af11\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext68 \slink10 \styrsid10356816 Default Paragraph Font Para Char;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0} {\*\listtable{\list\listtemplateid176468498\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid692200086\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s32\fi-358\li3221 \jclisttab\tx3223\lin3221 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid196815738}{\list\listtemplateid-699924060{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext \'01\u-3913 ?;}{\levelnumbers;}\b\i0\f3\fs20\fbias0 \fi-360\li717\jclisttab\tx717\lin717 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid320961430}{\list\listtemplateid-1793664660{\listlevel\levelnfc3\levelnfcn3\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0 \ltrch\fcs0 \b\i0\fbias0 \s38\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0 \ltrch\fcs0 \b\i0\fbias0 \s39\fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'03(\'03);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'03(\'04);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'05);}{\levelnumbers \'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0  \ltrch\fcs0 \fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0  \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li3240 \jclisttab\tx3240\lin3240 }{\listname ;}\listid394402059}{\list\listtemplateid1928476992{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \s40\fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1  \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid398796681}{\list\listtemplateid789093748\listhybrid{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-317712510\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s25\fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040 \jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid477573462} {\list\listtemplateid190114934\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1077 \jclisttab\tx1077\lin1077 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1797\jclisttab\tx1797\lin1797 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2517\jclisttab\tx2517\lin2517 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3237\jclisttab\tx3237\lin3237 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3957\jclisttab\tx3957\lin3957 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4677\jclisttab\tx4677\lin4677 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0 {\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5397\jclisttab\tx5397\lin5397 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext \leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6117\jclisttab\tx6117\lin6117 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693 \'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6837\jclisttab\tx6837\lin6837 }{\listname ;}\listid509564613}{\list\listtemplateid1948578256{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af0\afs20 \ltrch\fcs0 \b\i0\fs20\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid630479929}{\list\listtemplateid67698717 {\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc4\levelnfcn4\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02\'02);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'03(\'03);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'04);}{\levelnumbers\'02;} \rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'05);}{\levelnumbers\'02;}\rtlch\fcs1 \af0 \ltrch\fcs0  \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2520\jclisttab\tx2520\lin2520  }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc2\levelnfcn2 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listname ;}\listid700712945}{\list\listtemplateid680715664{\listlevel \levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \s1\fi-357\li357\jclisttab\tx360\lin357 }{\listlevel \levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \s2\fi-363\li720\jclisttab\tx720\lin720 }{\listlevel \levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \s3\fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel \levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \s4\fi-358\li1435 \jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0  \s5\fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0  \b0\i0\f40\fs20\fbias0 \s6\fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s7\fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s8\fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20  \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \s9\fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid752163927}{\list\listtemplateid2088029282{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid800729109} {\list\listtemplateid-296591990\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-48305026\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s31\fi-357\li2863 \jclisttab\tx2866\lin2863 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691 \'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;} \f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid810947713}{\list\listtemplateid1567531878{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers \'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2\levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;} \rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792\jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863\jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221\jclisttab\tx3223\lin3221 }{\listname ;}\listid826823576}{\list\listtemplateid2088029282{\listlevel\levelnfc0 \levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-357\li357\jclisttab\tx360\lin357 }{\listlevel\levelnfc4 \levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af40\afs20 \ltrch\fcs0 \b\i0\f40\fs20\fbias0 \fi-363\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc2 \levelnfcn2\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab\ai0\af36\afs20 \ltrch\fcs0 \b\i0\f36\fs20\fbias0 \fi-357\li1077\jclisttab\tx1440\lin1077 }{\listlevel\levelnfc3 \levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-358\li1435\jclisttab\tx1437\lin1435 } {\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\strike0\f40\fs20\ulnone\fbias0 \fi-357\li1792 \jclisttab\tx2155\lin1792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2149 \jclisttab\tx2152\lin2149 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2506 \jclisttab\tx2509\lin2506 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02i.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-357\li2863 \jclisttab\tx2866\lin2863 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02A.;}{\levelnumbers;}\rtlch\fcs1 \ab0\ai0\af40\afs20 \ltrch\fcs0 \b0\i0\f40\fs20\fbias0 \fi-358\li3221 \jclisttab\tx3223\lin3221 }{\listname ;}\listid974869818}{\list\listtemplateid-1813845996\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid2033377338 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s30\fi-357\li2506\jclisttab\tx2509\lin2506 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160 \jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1219436735}{\list\listtemplateid-41362566\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-1175557160\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s27\fi-358\li1435\jclisttab\tx1437\lin1435 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320 \jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1559511898}{\list\listtemplateid-743794326 \listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid1229593488\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s26\fi-357\li1077\jclisttab\tx1080\lin1077 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480 \jclisttab\tx6480\lin6480 }{\listname ;}\listid1567649130}{\list\listtemplateid1363474438\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid1637229796 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s28\fi-357\li1792\jclisttab\tx1795\lin1792 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160 \jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace1077\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace1077\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace1077\levelindent0 {\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1848404271}{\list\listtemplateid-1802592190\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0 \levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid961321180\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s29\fi-357\li2149\jclisttab\tx2152\lin2149 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320 \jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 } {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1877695764}{\list\listtemplateid1186249844 \listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid1182702444\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s24\fi-357\li357\jclisttab\tx360\lin357 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0 \levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689 \'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;} \f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480 \jclisttab\tx6480\lin6480 }{\listname ;}\listid2054619191}}{\*\listoverridetable{\listoverride\listid2054619191\listoverridecount0\ls1}{\listoverride\listid477573462\listoverridecount0\ls2}{\listoverride\listid1567649130\listoverridecount0\ls3} {\listoverride\listid1559511898\listoverridecount0\ls4}{\listoverride\listid1848404271\listoverridecount0\ls5}{\listoverride\listid1877695764\listoverridecount0\ls6}{\listoverride\listid1219436735\listoverridecount0\ls7}{\listoverride\listid810947713 \listoverridecount0\ls8}{\listoverride\listid196815738\listoverridecount0\ls9}{\listoverride\listid398796681\listoverridecount0\ls10}{\listoverride\listid394402059\listoverridecount0\ls11}{\listoverride\listid700712945\listoverridecount0\ls12} {\listoverride\listid826823576\listoverridecount0\ls13}{\listoverride\listid630479929\listoverridecount0\ls14}{\listoverride\listid800729109\listoverridecount0\ls15}{\listoverride\listid974869818\listoverridecount0\ls16}{\listoverride\listid752163927 \listoverridecount0\ls17}{\listoverride\listid320961430\listoverridecount0\ls18}{\listoverride\listid509564613\listoverridecount0\ls19}}{\*\rsidtbl \rsid17701\rsid81130\rsid340347\rsid345491\rsid480810\rsid535495\rsid555183\rsid787759\rsid1012355 \rsid1122066\rsid1528414\rsid1589072\rsid1725164\rsid1845488\rsid1977600\rsid2784514\rsid2950031\rsid3042060\rsid3082212\rsid3162620\rsid3370445\rsid3416253\rsid3611186\rsid3739474\rsid3895692\rsid4022155\rsid4739523\rsid4865423\rsid4995346\rsid5185544 \rsid5459775\rsid5536377\rsid5733284\rsid6184270\rsid6306623\rsid6498245\rsid6758513\rsid7041369\rsid7226971\rsid7276367\rsid7290457\rsid7345747\rsid7425099\rsid7433926\rsid7438204\rsid7619174\rsid7692510\rsid7878867\rsid7996763\rsid8134375\rsid8324055 \rsid8325040\rsid8419363\rsid8458805\rsid8738620\rsid8812012\rsid8858237\rsid8999754\rsid9068683\rsid9321702\rsid9378228\rsid9380242\rsid9651656\rsid9857610\rsid9860938\rsid9964378\rsid10356816\rsid10813938\rsid10826327\rsid10975197\rsid11347136 \rsid11541952\rsid11558388\rsid11754382\rsid11874088\rsid12000207\rsid12000701\rsid12209854\rsid12542098\rsid12585274\rsid12596065\rsid12664082\rsid12875155\rsid13334496\rsid13505730\rsid13637289\rsid13908819\rsid14113253\rsid14168694\rsid14293847 \rsid14491415\rsid14504489\rsid14705568\rsid14894057\rsid14897950\rsid14943232\rsid15493712\rsid15601712\rsid15872081\rsid15925451\rsid15991509\rsid15999285\rsid16141742\rsid16395859\rsid16450365\rsid16661796\rsid16712132}{\*\generator Microsoft Word 11. 0.8026;}{\info{\title MICROSOFT [PRE-RELEASE ][EVALUATION ]SOFTWARE LICENSE TERMS}{\creatim\yr2006\mo6\dy27\hr14\min14}{\revtim\yr2006\mo6\dy27\hr14\min14}{\printim\yr2006\mo2\dy10\hr10\min10}{\version2}{\edmins0}{\nofpages3}{\nofwords1276}{\nofchars7274} {\nofcharsws8533}{\vern24609}{\*\password 00000000}}{\*\userprops {\propname db_build_version}\proptype30{\staticval 2.6}{\propname db_charger_document_reference}\proptype3{\staticval 4582}{\propname db_charger_client_name}\proptype30{\staticval tbc} {\propname db_charger_matter_number}\proptype30{\staticval tbc}{\propname autosave}\proptype30{\staticval false}{\propname owner}\proptype30{\staticval REDMOND\'5cdcorey}{\propname db_master_reference}\proptype30{\staticval USETERMS_OTHERSUPER_ENGLISH} {\propname db_master_version}\proptype30{\staticval 20060202}{\propname db_master_clock}\proptype3{\staticval 337}{\propname db_master_name}\proptype30{\staticval List of Beta, Evaluation or Standalone Software License Terms Languages}{\propname db_master _description}\proptype30{\staticval  }{\propname db_base_url}\proptype30{\staticval http://usetermassembly/dealbuilder_live/DealBuilderNET/dealbuilder.aspx}{\propname ProductVersion}\proptype30{\staticval 0}{\propname MScom}\proptype11{\staticval 0} {\propname Language}\proptype30{\staticval English}{\propname CanadaAvail}\proptype11{\staticval 1}{\propname CanadaFrench}\proptype11{\staticval 0}{\propname FileFormat}\proptype11{\staticval 0}{\propname MandatoryActivation}\proptype11{\staticval 0} {\propname SoftwareType}\proptype30{\staticval Beta Software}{\propname ProductName}\proptype30{\staticval ASP.NET Code-Name "Atlas" March Go Live CTP}{\propname NumberOfCopies}\proptype30{\staticval Any number of copies}{\propname BetaUseRight} \proptype30{\staticval On the user's premises to design, develop and test the user's programs for use with the software}{\propname ProductKey}\proptype11{\staticval 0}{\propname ConfidentialInformation}\proptype11{\staticval 0}{\propname Feedback} \proptype30{\staticval Optional}{\propname BenchmarkNet}\proptype11{\staticval 0}{\propname InternetBasedServices}\proptype11{\staticval 0}{\propname TimeBomb}\proptype11{\staticval 0}{\propname TermWhen}\proptype30{\staticval Until a certain date} {\propname TermDate}\proptype30{\staticval 2006/02/09}{\propname TermCommRel}\proptype11{\staticval 1}{\propname db_commit}\proptype30{\staticval ProductVersion}}{\*\xmlnstbl {\xmlns1 urn:schemas-microsoft-com:office:smarttags}} \paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect\rtlgutter \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440 \dgvorigin1440\dghshow1\dgvshow1\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\rempersonalinfo\rsidroot10813938\viewbksp1 \fet0 {\*\wgrffmtfilter 013f}\ilfomacatclnup0 {\*\docvar {db_xml}{<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>\'0d<!DOCTYPE Document SYSTEM "..\'5cDocument.DTD">\'0d<Document><Control NAME="db_base_url" TYPE="string"><Value>http://usetermassembly/dealbuilder_live/DealBuilderNET/dealbuilder.aspx</Value></Control><C ontrol NAME="db_folder_form" TYPE="string"><Value>microsoft</Value></Control><Control NAME="db_folder_stylesheet" TYPE="string"><Value>microsoft</Value></Control><Control NAME="db_folder_image" TYPE="string"><Value>microsoft</Value></Control><Control NAME ="db_charger_dataset_reference" TYPE="numeric"><Value>4581</Value></Control><Control NAME="db_charger_client_name" TYPE="string"><Value>tbc</Value></Control><Control NAME="db_charger_matter_number" TYPE="string"><Value>tbc</Value></Control><Control NAME=" db_master_reference" TYPE="string"><Value>USETERMS_OTHERSUPER_ENGLISH</Value></Control><Control NAME="db_master_publish_build" TYPE="string"><Value>2.6</Value></Control><Control NAME="db_master_name" TYPE="string"><Value>List of Beta, Evaluation or Standa lone Software License Terms Languages</Value></Control><Control NAME="db_master_description" TYPE="string"><Value> </Value></Control><Control NAME="db_master_version" TYPE="string"><Value>20060202</Value></Control><Control NAME="db_master_clock" TYPE="num eric"><Value>337</Value></Control><Control NAME="db_master_refresh" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_host_create_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_input_onload" TYPE="string"><Value></Value> </Control><Control NAME="db_host_output_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_exception_onload" TYPE="string"><Value></Value></Control><Control NAME="db_host_javascript" TYPE="string"><Value></Value></Control><Control NAME= "db_transaction_generator" TYPE="string"><Value>unique</Value></Control><Control NAME="db_transaction_prefix" TYPE="string"><Value></Value></Control><Control NAME="db_transaction_suffix" TYPE="string"><Value></Value></Control><Control NAME="db_evaluate" T YPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_logic" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_repeat" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_cross_reference" TYPE="boole an"><Value>true</Value></Control><Control NAME="db_evaluate_calculation" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_variable" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_evaluate_include" TYPE="boolean"><Value >true</Value></Control><Control NAME="db_codeload_include" TYPE="string"><Value>eager</Value></Control><Control NAME="db_locale_input_date_sequence" TYPE="string"><Value>day_month_year</Value></Control><Control NAME="db_locale_input_thousands_char" TYPE=" string"><Value>,</Value></Control><Control NAME="db_locale_input_decimalpoint_char" TYPE="string"><Value>.</Value></Control><Control NAME="db_locale_output_date_sequence" TYPE="string"><Value>day_month_year</Value></Control><Control NAME="db_locale_output _thousands_char" TYPE="string"><Value>,</Value></Control><Control NAME="db_locale_output_decimalpoint_char" TYPE="string"><Value>.</Value></Control><Control NAME="db_output_hyperlink_target" TYPE="string"><Value>_blank</Value></Control><Control NAME="db_o utput_document_format" TYPE="string"><Value>rtf</Value></Control><Control NAME="db_output_document_redline" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_output_document_redline_cause" TYPE="string"><Value>drafting</Value></Control><Contr ol NAME="db_output_document_drafting_notes" TYPE="string"><Value>indefinite</Value></Control><Control NAME="db_output_document_properties" TYPE="string"><Value>true</Value></Control><Control NAME="db_output_document_property" TYPE="string"><Value>autosave |text|false</Value><Value>owner|text|REDMOND\'5cdcorey</Value></Control><Control NAME="db_output_document_variable_xml" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_output_document_termsheet" TYPE="boolean"><Value>false</Value></Control><Con trol NAME="db_output_document_answers" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_output_document_answers_column" TYPE="string"><Value>prompt</Value><Value>value</Value></Control><Control NAME="db_output_document_answers_row" TYPE="stri ng"><Value>page</Value><Value>group</Value><Value>sure</Value><Value>unsure</Value><Value>unknown</Value><Value>deferred</Value></Control><Control NAME="db_output_document_answers_relaunch_transaction_hyperlink" TYPE="boolean"><Value>false</Value></Contro l><Control NAME="db_output_document_answers_relaunch_transaction_url" TYPE="string"><Value></Value></Control><Control NAME="db_output_filter_reference" TYPE="string"><Value></Value></Control><Control NAME="db_output_variable_as" TYPE="string"><Value>alias </Value></Control><Control NAME="db_output_variable_highlights" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_output_variable_sequence" TYPE="string"><Value>ascending</Value></Control><Control NAME="db_output_white_space" TYPE="boolean">< Value>false</Value></Control><Control NAME="db_output_line_breaks" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_show_column_headings" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_heading_repetition_column" TY PE="string"><Value>Repeat</Value></Control><Control NAME="db_input_heading_highlight_column" TYPE="string"><Value>Check</Value></Control><Control NAME="db_input_heading_prompt_column" TYPE="string"><Value>Prompt</Value></Control><Control NAME="db_input_he ading_question_column" TYPE="string"><Value>Answer</Value></Control><Control NAME="db_input_heading_state_column" TYPE="string"><Value>Deferral</Value></Control><Control NAME="db_input_heading_guidance_column" TYPE="string"><Value>Guidance</Value></Contro l><Control NAME="db_input_heading_comment_column" TYPE="string"><Value>Insert your comments below</Value></Control><Control NAME="db_input_heading_variable_name_column" TYPE="string"><Value>Variable</Value></Control><Control NAME="db_input_help_url" TYPE= "string"><Value>/dealbuilder_live/help/dealbuilder/help.html</Value></Control><Control NAME="db_input_data_validation" TYPE="string"><Value>onsubmit</Value></Control><Control NAME="db_input_show_page_title" TYPE="boolean"><Value>true</Value></Control><Con trol NAME="db_input_show_group_title" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_show_repetition_column" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_state_column" TYPE="boolean"><Value>true</Value></C ontrol><Control NAME="db_input_show_variable_name_column" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_committed" TYPE="boolean"><Value>false</Value></Control><Control NAME="db_input_show_group_state" TYPE="boolean"><Value>tru e</Value></Control><Control NAME="db_input_show_group_state_threshold" TYPE="numeric"><Value>2</Value></Control><Control NAME="db_input_state_display" TYPE="string"><Value>dropdown</Value></Control><Control NAME="db_input_state_preselect" TYPE="string"><V alue>sure</Value></Control><Control NAME="db_input_unknown_option" TYPE="string"><Value>Unknown</Value></Control><Control NAME="db_input_unknown_position" TYPE="string"><Value>first</Value></Control><Control NAME="db_input_other_option" TYPE="string"><Val ue>Other</Value></Control><Control NAME="db_input_other_position" TYPE="string"><Value>last</Value></Control><Control NAME="db_input_other_width_single" TYPE="numeric"><Value>20</Value></Control><Control NAME="db_input_other_width_multiple" TYPE="numeric" ><Value>20</Value></Control><Control NAME="db_input_other_depth_multiple" TYPE="numeric"><Value>4</Value></Control><Control NAME="db_input_other_prompt_multiple" TYPE="string"><Value>Specify others:</Value></Control><Control NAME="db_input_other_prompt_si ngle" TYPE="string"><Value>Specify other:</Value></Control><Control NAME="db_input_other_prompt_break_before" TYPE="numeric"><Value>1</Value></Control><Control NAME="db_input_other_prompt_break_after" TYPE="numeric"><Value>1</Value></Control><Control NAME ="db_input_active_separator_sure_multiline" TYPE="string"><Value>, </Value></Control><Control NAME="db_input_active_separator_sure_multiple" TYPE="string"><Value> and </Value></Control><Control NAME="db_input_active_separator_unsure_multiple" TYPE="string "><Value> and/or </Value></Control><Control NAME="db_input_active_separator_unsure_single" TYPE="string"><Value> or </Value></Control><Control NAME="db_input_active_boolean_true" TYPE="string"><Value>Yes</Value></Control><Control NAME="db_input_active_boo lean_false" TYPE="string"><Value>No</Value></Control><Control NAME="db_input_repeat_navigation_prefix" TYPE="string"><Value>(%1 of %2)&amp\'3bnbsp\'3b</Value></Control><Control NAME="db_input_repeat_navigation_postfix" TYPE="string"><Value></Value></Control><Co ntrol NAME="db_input_repeat_navigation_portrayal" TYPE="string"><Value>visible</Value></Control><Control NAME="db_input_repeat_format" TYPE="string"><Value>digits</Value></Control><Control NAME="db_input_repeat_prev" TYPE="string"><Value>Prev</Value></Con trol><Control NAME="db_input_repeat_next" TYPE="string"><Value>Next</Value></Control><Control NAME="db_input_repeat_separator" TYPE="string"><Value>&amp\'3bnbsp\'3b|&amp\'3bnbsp\'3b</Value></Control><Control NAME="db_input_prompt_compulsory_symbol" TYPE="string"><Val ue>*</Value></Control><Control NAME="db_input_prompt_compulsory_symbol_location" TYPE="string"><Value>after</Value></Control><Control NAME="db_input_question_compulsory_symbol" TYPE="string"><Value></Value></Control><Control NAME="db_input_question_compul sory_symbol_location" TYPE="string"><Value>after</Value></Control><Control NAME="db_input_disable_when_unknown_compulsory" TYPE="boolean"><Value>true</Value></Control><Control NAME="db_input_disable_when_unknown_non_compulsory" TYPE="boolean"><Value>false </Value></Control><Control NAME="db_input_simple_alert" TYPE="string"><Value>client_side</Value></Control><Control NAME="db_input_warning_irrelevant_page" TYPE="string"><Value>&lt\'3bU&gt\'3bWARNING:&lt\'3b/U&gt\'3b That page is no longer relevant because of answers  given on this page or a previous page!</Value></Control><Control NAME="db_input_last_page_next_button" TYPE="string"><Value>enabled</Value></Control><Control NAME="db_input_page_goto_list_content" TYPE="string"><Value>relevant_pages</Value></Control><Vari able NAME="ProductVersion" TYPE="string" STATUS="sure"><Value>0</Value></Variable><Variable NAME="MScom" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="Language" TYPE="select" STATUS="sure"><Value>English</Value></Variable><Variab le NAME="CanadaAvail" TYPE="boolean" STATUS="sure"><Value>1</Value></Variable><Variable NAME="CanadaFrench" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="FileFormat" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variab le NAME="MandatoryActivation" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="SoftwareType" TYPE="select" STATUS="sure"><Value>Beta Software</Value></Variable><Variable NAME="ProductName" TYPE="string" STATUS="sure"><Value>ASP.NET  Code-Name &quot\'3bAtlas&quot\'3b March Go Live CTP</Value></Variable><Variable NAME="NumberOfCopies" TYPE="select" STATUS="sure"><Value>Any number of copies</Value></Variable><Variable NAME="BetaUseRight" TYPE="select" STATUS="sure"><Value>On the user&apos\'3bs p remises to design, develop and test the user&apos\'3bs programs for use with the software</Value></Variable><Variable NAME="ProductKey" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="ConfidentialInformation" TYPE="boolean" STATUS="su re"><Value>0</Value></Variable><Variable NAME="Feedback" TYPE="select" STATUS="sure"><Value>Optional</Value></Variable><Variable NAME="BenchmarkNet" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="InternetBasedServices" TYPE="boole an" STATUS="sure"><Value>0</Value></Variable><Variable NAME="TimeBomb" TYPE="boolean" STATUS="sure"><Value>0</Value></Variable><Variable NAME="TermWhen" TYPE="select" STATUS="sure"><Value>Until a certain date</Value></Variable><Variable NAME="TermDate" TY PE="date" STATUS="sure"><Value>2006/02/09</Value></Variable><Variable NAME="TermCommRel" TYPE="boolean" STATUS="sure"><Value>1</Value></Variable></Document>}}{\*\ftnsep \ltrpar \pard\plain \ltrpar \ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid11558388 \chftnsep  \par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsepc  \par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsep  \par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11558388 \chftnsepc  \par }}\ltrpar \sectd \ltrsect\rtlgutter\psz1\linex0\endnhere\sectlinegrid360\sectdefaultcl\sectrsid4739523\sftnbj {\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}} {\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6 \pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9 \pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\s33\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 MICROSOFT PRE-RELEASE SOFTWARE LICENSE TERMS \par }\pard\plain \ltrpar\s34\ql \li0\ri0\sb120\sa120\widctlpar\brdrb\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs28\alang1025 \ltrch\fcs0  \b\fs28\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 MICROSOFT }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284  \hich\af36\dbch\af11\loch\f36 ASP.NET CODE-NAME "ATLAS" \hich\af36\dbch\af11\loch\f36 GO LIVE CTP}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  These license terms are an agreement between Microsoft Corporation (or based on\hich\af36\dbch\af11\loch\f36   where you live, one of its affiliates) and you.  Please read them.  They apply to the pre-release software named above, which includes the media on which you received it, if any.  The terms also apply to any Microsoft \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 updates, \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 supplements, \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 Internet-based services, and  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36 support services \par }\pard\plain \ltrpar\s35\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  for this software, unless other terms accompany those items.  If so, those terms apply. \par }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 BY USING THE SOFTWARE, YOU ACCEPT THESE TERMS.  IF YOU DO NOT ACCEPT THEM, DO NOT USE THE SOFTWARE. \par }\pard\plain \ltrpar\s52\ql \li0\ri0\sb120\sa120\widctlpar\brdrt\brdrs\brdrw10\brsp20 \wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 If you comply with these license terms, you have the rights below. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 1.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 INSTALLATION AND USE RIGHTS.  }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207 \hich\af36\dbch\af11\loch\f36 You may}{\rtlch\fcs1  \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36  install and use any number of copies of the software:}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s2\ql \fi-360\li1077\ri0\sb120\sa120\widctlpar \jclisttab\tx1077\wrapdefault\aspalpha\aspnum\faauto\ls19\outlinelevel1\adjustright\rin0\lin1077\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 to design, develop and test your programs for use with the software; and}{ \rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 in a hosted envir \hich\af36\dbch\af11\loch\f36 onment to allow your customers to use, via a web interface, your programs that need the software to run.}{\rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12000207  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 2.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 TERM.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   The term of this agreement is until }{\rtlch\fcs1  \ab0\af36 \ltrch\fcs0 \b0\insrsid11541952 \hich\af36\dbch\af11\loch\f36 September }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 1, 200}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid12875155  \hich\af36\dbch\af11\loch\f36 7}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 , or commercial release of the software, whichever is first.}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 3.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  PRE-RELEASE SOFTWARE. }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  This software is a pre-release version.  It may not work }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284  \hich\af36\dbch\af11\loch\f36 correctly or }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  the way a final version of the software will.  We may change it for the final, commercial version.  We also may not release a commercial version.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36   }{\rtlch\fcs1  \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 You are fully responsible for any and \hich\af36\dbch\af11\loch\f36 all damages that may result due to any failure of the software; and you }{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0  \fs20\insrsid11541952 \hich\af36\dbch\af11\loch\f36 must }{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 notify your users that your web programs rely}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0  \fs20\insrsid5733284\charrsid14113253 \hich\af36\dbch\af11\loch\f36  on pre-release, unsupported software that may not operate correctly}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid5733284\charrsid12542098  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid12542098 \hich\af40\dbch\af11\loch\f40 4.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36  INDEMNIFICATION.}{\rtlch\fcs1 \af36\afs20 \ltrch\fcs0 \fs20\insrsid5733284\charrsid10975197 \hich\af36\dbch\af11\loch\f36  }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36  You agree to indemnify, hold har\hich\af36\dbch\af11\loch\f36  mless, and defend Microsoft from and against any claims, allegations, lawsuits, losses and costs (including attorney fees), that arise or result from the use, deployment or distribution of your }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0  \b0\fs20\insrsid5733284 \hich\af36\dbch\af11\loch\f36 programs }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284\charrsid12542098 \hich\af36\dbch\af11\loch\f36 that use the }{\rtlch\fcs1 \ab0\af36\afs20 \ltrch\fcs0 \b0\fs20\insrsid5733284  \hich\af36\dbch\af11\loch\f36 software.}{\rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \b0\insrsid5733284\charrsid12542098  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 5.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  FEEDBACK. }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  If you give feed\hich\af36\dbch\af11\loch\f36  back about the software to Microsoft, you give to Microsoft, without charge, the right to use, share and commercialize your feedback in any way and for any purpose.  You also give to third parties, without charge, any patent rights needed for their produc \hich\af36\dbch\af11\loch\f36 t\hich\af36\dbch\af11\loch\f36  s, technologies and services to use or interface with any specific parts of a Microsoft software or service that includes the feedback.  You will not give feedback that is subject to a license that requires Microsoft to license its software or documentati \hich\af36\dbch\af11\loch\f36 o\hich\af36\dbch\af11\loch\f36 n to third parties because we include your feedback in them.  These rights survive this agreement.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 6.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Scope of License}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    The software is licensed, not sold. This agreement only gives you some rights to use the software.  Microsoft reserves all other rights\hich\af36\dbch\af11\loch\f36  .  Unless applicable law gives you more rights despite this limitation, you may use the software only as expressly permitted in this agreement.  In doing so, you must comply with any technical limitations in the software that only allow you to use it in c \hich\af36\dbch\af11\loch\f36 e\hich\af36\dbch\af11\loch\f36 rtain ways.    You may not}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 disclose the results of any benchmark tests of the software to any third party without Microsoft\hich\f36 \rquote \loch\f36 s prior written approval}{\rtlch\fcs1 \af36 \ltrch\fcs0  \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  work around any technical limitations }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid12209854 \hich\af36\dbch\af11\loch\f36 in }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 the software}{\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  reverse engineer, decompile \hich\af36\dbch\af11\loch\f36 or disassemble the software, except and only to the extent that applicable law expressly permits, despite this limitation}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284  \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  make more copies of the software than specified in this agreement or allowed by applicable law, despite this limitation}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0  \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 publish  \hich\af36\dbch\af11\loch\f36 the software for others to copy}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid10356816  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36  deploy the software on a standalone basis for others to access;}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid1589072  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 distribute the software;}{\rtlch\fcs1 \af0  \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  rent, lease or lend the software}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 ; or}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  transfer the software or this agreement to any third party}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 7.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Export Restrictions}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0  \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   The software is subject to {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}{\*\xmlclose}  export laws and regulations.  You must comply with all domestic and international export laws and regulations that apply to the software.  These laws include restrictions on destinations, end users and end use.  \hich\af36\dbch\af11\loch\f36 F \hich\af36\dbch\af11\loch\f36 or additional information, see }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  HYPERLINK "http://www.microsoft.com/exporting" }{ \rtlch\fcs1 \ab0\af0 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid10826327\charrsid11558388 {\*\datafield  00d0c9ea79f9bace118c8200aa004ba90b02000000170000001c0000007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e0067000000e0c9ea79f9bace118c8200aa004ba90b4600000068007400740070003a002f002f007700770077002e00 6d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e006700000000000000000000000000000000000000000000000000000000e10000000000000000001800000000000000000000000000000000000000000000000000000000000000000000140000000000000000 00007220000000010000000000002000000000004e00000000003e0000000000000066000020}}}{\fldrslt {\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \cs61\b0\ul\cf2\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 www.microsoft.com/exporting}}}{\rtlch\fcs1 \ab0\af36  \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \cs61\insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 8.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 SUPPORT SERVICES.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  }{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36  Because this software is \'93\loch\f36 as}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284 \hich\af36\dbch\af11\loch\f36 -}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36 is,\'94 \loch\f36  we may not provide support services for it.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 9.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Entire Agreement.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   This agreement, and the \hich\af36\dbch\af11\loch\f36  terms for supplements, updates, Internet-based services and support services that you use, are the entire agreement for the software and support services. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\cf1\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 10.\tab}}\pard \ltrpar \s1\ql \fi-360\li360\ri0\sb120\sa120\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin360\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\cf1\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Applicable Law}{\rtlch\fcs1 \af36 \ltrch\fcs0 \cf1\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 . \par {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}{\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 a.\tab} }\pard\plain \ltrpar\s2\ql \fi-363\li720\ri0\sb120\sa120\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls17\ilvl1\outlinelevel1\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 United States{\*\xmlclose}{\*\xmlclose}.}{\rtlch\fcs1 \ab0\af36  \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36   If you acquired the software in the {\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}, {\*\xmlopen\xmlns1{\factoidname place}} {\*\xmlopen\xmlns1{\factoidname State}}Washington{\*\xmlclose}{\*\xmlclose} \hich\af36\dbch\af11\loch\f36  state law governs the interpretation of this agreement and applies to claims for breach of it, regardless of conflict of laws principles.  The laws of the state where you live govern all other claims, including claims under state consumer protection laws, \hich\af36\dbch\af11\loch\f36  \hich\af36\dbch\af11\loch\f36 unfair competition laws, and in tort.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s2 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 b.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  Outside the {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname country-region}}United States{\*\xmlclose}{\*\xmlclose}.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    If you acquired the software in any other country, the laws of that country apply.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 11.\tab}}\pard\plain \ltrpar\s1\ql \fi-357\li357\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0 \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 { \rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Legal Effect.}{\rtlch\fcs1 \ab0\af36 \ltrch\fcs0 \b0\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    This agreement describes certain legal rights.  You may have other rights under the l\hich\af36\dbch\af11\loch\f36  aws of your country.  You may also have rights with respect to the party from whom you acquired the software.  This agreement does not change your rights under the laws of your country if the laws of your country do not permit it to do so.}{\rtlch\fcs1  \af0 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 12.\tab}}{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388  \hich\af36\dbch\af11\loch\f36 Disclaimer of Warranty.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36    }{\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  \hich\f36 The software is licensed \'93\loch\f36 \hich\f36 as-is.\'94\loch\f36    You bear the risk of using it.  Microsoft gives no express warranties, guarantees or conditions.  You may have additional consumer rights under your local laws which this agreem\hich\af36\dbch\af11\loch\f36  ent cannot change.  To the extent permitted under your local laws, Microsoft excludes the implied warranties of merchantability, fitness for a particular purpose and non-infringement. \par {\listtext\pard\plain\ltrpar \s1 \rtlch\fcs1 \ab\af40\afs20 \ltrch\fcs0 \b\caps\f40\fs20\insrsid5733284\charrsid11558388 \hich\af40\dbch\af11\loch\f40 13.\tab}}\pard \ltrpar\s1\ql \fi-360\li360\ri0\sb120\sa120\widctlpar \jclisttab\tx360\wrapdefault\aspalpha\aspnum\faauto\ls17\outlinelevel0\adjustright\rin0\lin360\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \caps\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  Limitation on and Exclusion of Remedies and Damages.  You can recove\hich\af36\dbch\af11\loch\f36  r from Microsoft and its suppliers only direct damages up to U.S. $5.00.  You cannot recover any other damages, including consequential, lost profits, special, indirect or incidental damages. \par }\pard\plain \ltrpar\s15\ql \li357\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin357\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 This limitation applies to \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 anything related to the software, s\hich\af36\dbch\af11\loch\f36 ervices, content (including code) on third party Internet sites, or third party programs; and \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\insrsid5733284\charrsid11558388 \loch\af3\dbch\af11\hich\f3 \'b7\tab}\hich\af36\dbch\af11\loch\f36  claims for breach of contract, breach of warranty, guarantee or condition, strict liability, negligence, or other tort to the extent permitted by applicable law\hich\af36\dbch\af11\loch\f36 . \par }\pard\plain \ltrpar\ql \li360\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36  It also applies even if Microsoft knew or should have known about the possibility of the damages.  The above limitation or exclusion may not apply to you because your country may not allow the exclusion or limitation of incidental, consequential or other \hich\af36\dbch\af11\loch\f36  damages.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\s66\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \ab\af36\afs19\alang1025 \ltrch\fcs0  \b\fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Please note: As this software is distributed in  {\*\xmlopen\xmlns1{\factoidname place}}{\*\xmlopen\xmlns1{\factoidname City}}Quebec{\*\xmlclose}, {\*\xmlopen\xmlns1{\factoidname country-region}}Canada{\*\xmlclose}{\*\xmlclose}, some of the clauses in this agreement are provided below in French. \par }\pard \ltrpar\s66\ql \li0\ri0\sb240\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36  \hich\f36 Remarque: Ce logiciel \'e9\loch\f36 \hich\f36 tant distribu\'e9\loch\f36 \hich\f36  au Qu\'e9\loch\f36 bec, Canada, certaines des clauses dans ce contrat sont fournies ci-de\hich\af36\dbch\af11\loch\f36 \hich\f36 ssous en fran\'e7\loch\f36 ais.} {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard\plain \ltrpar\s67\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 EXON\'c9\loch\f36  RATION DE GARANTIE.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36  Le logiciel vis\'e9\loch\f36 \hich\f36  par une licence est offert \'ab\loch\f36 \hich\f36   tel quel \'bb\loch\f36 \hich\f36 . Toute utilisation de ce logiciel est \'e0\loch\f36 \hich\f36  votre seule risque et p\'e9\loch\f36 ril. Microsoft n\hich\f36 \rquote \loch\f36 \hich\f36 accorde aucune autre garantie expresse. Vous pouvez b\'e9 \loch\f36 \hich\f36 n\'e9\loch\f36 ficier de droits a\hich\af36\dbch\af11\loch\f36 \hich\f36  dditionnels en vertu du droit local sur la protection dues consommateurs, que ce contrat ne peut modifier. La ou elles sont permises par le droit locale, les garanties implicites de qualit\'e9\loch\f36  marchande, d\hich\f36 \rquote \loch\f36 \hich\f36 ad \'e9\loch\f36 \hich\f36 quation \'e0\loch\f36  un usage particulier et d\hich\f36 \rquote \loch\f36 absence de co\hich\af36\dbch\af11\loch\f36 n\hich\af36\dbch\af11\loch\f36 \hich\f36 trefa\'e7\loch\f36 on sont exclues.}{\rtlch\fcs1 \af0 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard \ltrpar\s67\ql \li0\ri0\sb120\sa120\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 {\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \hich\af36\dbch\af11\loch\f36 \hich\f36 LIMITATION DES DOMMAGES-INT\'c9\loch\f36 \hich\f36 R\'ca\loch\f36 \hich\f36 TS ET EXCLUSION DE RESPONSABILIT\'c9\loch\f36  POUR LES DOMMAGES.}{\rtlch\fcs1 \af36 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36   Vous pouvez obtenir de Microsoft et de ses fournisseurs une indemnisation en cas de dommages directs uniquement \'e0\loch\f36   hauteur de 5,00 $ US. Vous ne pouve\hich\af36\dbch\af11\loch\f36 \hich\f36 z pr\'e9\loch\f36 \hich\f36 tendre \'e0\loch\f36 \hich\f36  aucune indemnisation pour les autres dommages, y compris les dommages sp\'e9\loch\f36 \hich\f36  ciaux, indirects ou accessoires et pertes de b\'e9\loch\f36 \hich\f36 n\'e9\loch\f36 fices.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Cette limitation concerne: \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s25\ql \fi-360\li720\ri0\sb120\sa120\keepn\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0 \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36  \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 tout  ce qui est reli\'e9\loch\f36  au logiciel, aux services ou au contenu (y compris le code) f\hich\af36\dbch\af11\loch\f36  igurant sur des sites Internet tiers ou dans des programmes tiers ; et}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par {\listtext\pard\plain\ltrpar \s25 \rtlch\fcs1 \af3\afs19 \ltrch\fcs0 \f3\fs19\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \loch\af3\dbch\af11\hich\f3 \'b7\tab}}\pard \ltrpar\s25\ql \fi-363\li720\ri0\sb120\sa120\widctlpar \jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid5733284 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375 \hich\af36\dbch\af11\loch\f36 \hich\f36 les r\'e9\loch\f36  \hich\f36 clamations au titre de violation de contrat ou de garantie, ou au titre de responsabilit\'e9\loch\f36 \hich\f36  stricte, de n\'e9\loch\f36 gligence ou d\hich\f36 \rquote \loch\f36 \hich\f36 une autre faute dans la limite autoris\'e9\loch\f36  e par la loi en vigu\hich\af36\dbch\af11\loch\f36 eur.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid8134375  \par }\pard\plain \ltrpar\s67\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af36 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid12875155 \hich\af36\dbch\af11\loch\f36 Elle s\hich\f36 \rquote \loch\f36 \hich\f36  applique \'e9\loch\f36 \hich\f36 galement, m\'ea\loch\f36 \hich\f36 me si Microsoft connaissait ou devrait conna\'ee\loch\f36 tre l\hich\f36 \rquote \'e9\loch\f36 \hich\f36 ventualit\'e9\loch\f36  d\hich\f36 \rquote \loch\f36 un tel dommage.  }{ \rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 Si votre pays n\hich\f36 \rquote \loch\f36 autorise pas l\hich\f36 \rquote \loch\f36 \hich\f36 exclusion ou la limitation de responsabilit\'e9\loch\f36   pour les dommages indirects, accessoires ou de quelque nature qu\hich\af36\dbch\af11\loch\f36 e ce soit, il se peut que la limitation ou l\hich\f36 \rquote \loch\f36 exclusion ci-dessus ne s\hich\f36 \rquote \loch\f36 \hich\f36 appliquera pas \'e0 \loch\f36 \hich\f36  votre \'e9\loch\f36 gard. \par }{\rtlch\fcs1 \ab\af36 \ltrch\fcs0 \b\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 EFFET JURIDIQUE.}{\rtlch\fcs1 \af36 \ltrch\fcs0 \insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36   Le pr\'e9\loch\f36 \hich\f36  sent contrat d\'e9\loch\f36 crit certains droits juridiques. Vous pourriez avoir d\hich\f36 \rquote \loch\f36 \hich\f36 autres droits pr\'e9\loch\f36 vus par les lois de votre pays.  }{\rtlch\fcs1 \af36 \ltrch\fcs0  \lang1036\langfe1033\langnp1036\insrsid5733284\charrsid11558388 \hich\af36\dbch\af11\loch\f36 \hich\f36 Le pr\'e9\loch\f36 sent c\hich\af36\dbch\af11\loch\f36 \hich\f36 ontrat ne modifie pas les droits que vous conf\'e8\loch\f36  rent les lois de votre pays si celles-ci ne le permettent pas.}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\lang1036\langfe1033\langnp1036\insrsid5733284\charrsid11558388  \par }\pard\plain \ltrpar\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5733284 \rtlch\fcs1 \af36\afs19\alang1025 \ltrch\fcs0  \fs19\lang1033\langfe1033\loch\af36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid9964378\charrsid5733284  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\Docs\Site Specific Application Configuration Technical Design.docx ===
Table of Contents
Table of Contents	1
1	Overview	1
2	SiteName from Active Directory	1
3	Support for site specific and default settings	2
3.1	Configuration Model Overview	2
3.2	mscom.config site specific and default settings	2
3.3	Rules for config settings	3

Overview
There is a need for applications to dynamically choose configuration settings based on where they are physically located. This approach enables web servers to choose the database servers nearest to them there by making the applications more performant. This also greatly helps the Operations team by removing the need to make site specific configuration changes and helps keep the application image the same across all the web servers.
This document details how site name is retrieved from Active Directory and how Geo System enables site specific as well as default settings in configuration files.
SiteName from Active Directory
The site name of a server can be retrieved from querying the Active Directory Services function DsGetSiteName. The DSGetSiteName function gives the name of the site where the computer resides as configured in the domain.
DSGetSiteName needs the netapi32.dll library to query for the site name. So, the following declaration needs to be included in the code. 
using System.Runtime.InteropServices;
[DllImport("netapi32.dll", CharSet = CharSet.Unicode)]
private static extern int DsGetSiteName(string ComputerName, out IntPtr SiteName);


My Dev computer’s site when retrieved from this call is NA-WA-RED. This format suggests that the sitename has physical info as (continent-state-city). However, this solution is independent of the sitename format/naming convention.

Support for site specific and default settings
Configuration Model Overview
In Geo System, there is 3-level support for specifying application settings. Two of these live in the mscom.config file. The third lives in web.config /app.config file.  This 3-level support is to enable adopters to easily override default settings when needed.
The settings in web.config/app.config override the settings in mscom.config. Within the mscom.config file, the site specific settings override the default settings.  The support for site specific and default settings in mcom.config file are detailed in section 3.2 below.
mscom.config site specific and default settings
The application configuration file (known as mscom.config file) is vastly simplified with this approach. The need for separate environments (ex: Dev, Test, PPE, Beta, Production) is eliminated. Since there is only one set of settings in this approach, the ‘environment’ is eliminated. This also results in the removal of need to create an Environment key in the machine.config file for the server.
In the mscom.config file, there is a category called “common” with a setting for “SiteSpecificDelimiter”.
<category name="Common">
<!-- Delimiter to  sitespecific settings.-->
	<setting name="SiteSpecificDelimiter" value = "-" />
</category>
This value is used to specify the site specific key.
The default settings for the application are arranged in related categories in the config  file as in the example below.
<category name="Database">
<setting name="GeoSystemDatabase" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
</category>

To specify a site specific setting  that overrides this default value,  the site specific setting is added in the same category. To illustrate, I added a site specific database connection string for my computer site (NA-WA-RED) in addition to the default setting as in the code below.
<category name="Database">
	<setting name="GeoSystemDatabase" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
  <setting name="GeoSystemDatabase-NA-WA-RED" value="Data Source=AJAYDEVSERVER; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
</category>

When the application runs on my computer, the program detects that there is a site specific setting available for the database and picks the database connection string that uses AJAYDEVSERVER in the example above. However when the same code runs in Production environment, the program picks up the B10DEVMPTSQLH01 connection string. This is because the site name in production won’t match NA-WA-RED. 
Syntax for Site Specific Setting
The site specifc key name = <defaultkeyname>+ <SiteSpecificDelimiter>+ <siteName>
Ex: “GeoSystemDatabase-NA-WA-RED” where “-“ is the configured delimiter.

Reading specific/default settings
In the ConfigFleReader.cs file, GetStringSetting method reads the site specific setting first  with the XPath as 

sSubXPath = "category[@name='" + sCategoryName + "']/setting[@name='" + sAttributeName + SiteSpecificDelimiter + m_siteName + "']";
When there is no such row, the XPath defaults to 
sSubXPath = "category[@name='" + sCategoryName + "']/setting[@name='" + sAttributeName + "']";
It is optional and easy to specify site specific settings. S, this model simplifies both maintenance and deployment to environments.

Rules for config settings 
There are a set of rules for config as detailed below.
The site specific and default settings should appear under the same category in config file. Otherwise, it will give an exception. This is for easy maintenance. 
If there are duplicate entries mentioned in the same key name, it throws exception. This is to ensure accuracy of the config file.
If there are missing config settings, then application will throw exception. This is needed to ensure the integrity of the application.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\SDK\GeoLocation_Explicit_Set\readme.txt ===
﻿ASP.NET "Atlas"
==============================================
Date: 7/25/2006

License: Please refer to the accompanying EULA.RTF file for the license agreement and information on using "Atlas".

The "Atlas" project templates and project items contain the assemblies to get started. All code, templates, samples, and documentation related to "Atlas" are a very early technical preview and are therefore subject to change.

Many thanks,

-- The Web Platform and Tools Team


More Resources:
==============================================
Further updates, samples, and other documents are available on the "Atlas" Web site (http://atlas.asp.net).

Please use the ASP.NET forums to post questions and bug reports. "Atlas" team members are actively engaged in the forum.

"Atlas" Discussions and Suggestions:
	http://forums.asp.net/1007/ShowForum.aspx

"Atlas" UI:
	http://forums.asp.net/1008/ShowForum.aspx

"Atlas" Networking and Services:
	http://forums.asp.net/1009/ShowForum.aspx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\SDK\DevServerInstallGuide.docx ===
[Content_Types].xml  "^WL* (3[LA UZr9. _rels/.rels  9,W{7 vn/IC{&o word/_rels/document.xml.rels  VAFE2 word/document.xml AlC[- 6?)0rMk fMAZ  {24Z  0Z(NO I.^X> ^H-so d?XKv Tr_s=L hq~Jp2ff@ a&WB; 1LYXYJ iujV? :A!T8+ l]]l|> ,x%H} $"44`#zEh4 T_kCru* <U72_ (Wvqq 1N:x% >=Z#=6C <"~:r Yaa0.aV z:L>Q_Y 9}W?< QM_ZA 4jJA# hr|>\ ji&b*iXd[ ?.G=\ `*|]. NDj[: _vF/t X'vRU 8am$R 02?)pD -6wfp cueP`,[ Vq`b/| S^q?, :~T8t =K?uZ ,1?)o eH1r? a};<m 66O&j L^[N`n r8i+d PjC5i p~Aze i`)LY `7gRbvgT tw1A> &msem {U"c! Q`q$$ g,)Jv #|_ri docProps/thumbnail.wmf J4h&0 3@]|=| I*u5n2K o5P-s {7&~~ q_&<dvT jmZOh $Bt5N Zut?k ]f(E^ >2_m&B s` :{@& 0&-QQ<Cy jFk9V T\/^QS, 5}V@s d_F&{ ^-2Cs J3~+e qo(rz/W /4?=Oo U1^A1 ]lRGfr E^V>m );yZv 73s*D :k)mrQ )gSWjT Fu]-A "?[!o}a \ZyM5 i?LZ: &zJ[: `}q-(Lp- z?!dO word/theme/theme1.xml w toc'v 3Vq%'#q :\TZaG IqbJ#x T[XF64 word/settings.xml K[,*8 word/styles.xml eaz<:9 7v_bw qx`-O &LLjC 4on{ o GIDj` r~elw qJm3T dZY4N]@ i'p3i customXml/itemProps1.xml  '!}?* customXml/_rels/item1.xml.rels  word/numbering.xml wi|Ut %u[RG f{O*B =\m|P\ y}~$/ SK+)( c+"KV ,|JKl ='&^cbbC Y.@`K x$B`N WUYLP :'`QM `g63O4 customXml/item1.xml  docProps/core.xml  DtDr6  word/fontTable.xml gJ&TkX,Om>N $HfDi >2$3h9 word/webSettings.xml docProps/app.xml  V/*;W #]jD= [Content_Types].xmlPK _rels/.relsPK word/_rels/document.xml.relsPK word/document.xmlPK docProps/thumbnail.wmfPK word/theme/theme1.xmlPK word/settings.xmlPK word/styles.xmlPK customXml/itemProps1.xmlPK customXml/_rels/item1.xml.relsPK word/numbering.xmlPK customXml/item1.xmlPK docProps/core.xmlPK word/fontTable.xmlPK word/webSettings.xmlPK docProps/app.xmlPK
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\2.2.0.0\Binaries\Release\GeoProvider.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GeoProvider</name>
    </assembly>
    <members>
        <member name="T:Microsoft.MSCOM.GeoProfile.GeoProfileProvider">
            <summary>
            GeoProfileProvider Class.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.GeoProfile.GeoProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize the provider.
            The implementation of the function mainly loads the configuration from the NameValueCollection. 
            It validates the configuration and throws exception if there are any configuration errors. 
            It calls anon web service to get the attribute name and attributes ID mapping table and put it into http cache, if there's no one yet. 
            </summary>
            <param name="name">Application Name</param>
            <param name="config">NameValue Property collection</param>
        </member>
        <member name="M:Microsoft.MSCOM.GeoProfile.GeoProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Get property values
            Anon Profile Provider gets the attributes from Anon Web Service or Geo info DB via Geo class library (if there’s no data in Anon DB), and fills the data into SettingsPropertyValueCollection
            </summary>
            <param name="context">Setting Context</param>
            <param name="collection">property collection</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.GeoProfile.GeoProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
             <summary>
             Set Property Values
             Geo Profile Provider puts the attributes that has been changed by adopter back to Anon Data Store via Anon Web Service. 
            ?Set method store explicit data user input to Anon Data Store.
            ?In this profile provider implementation, Http cache is used to store the mapping table between attribute and attribute group. The benefit of this cache is to reduce the method call (GetAttributeDefinitions) to Anon data store. GetAttributeDefinitions is called when there’s no data in http cache or the cache is expired. 
            ?Async web service call should be used to increase the performance. 
             </summary>
             <param name="context">Settings Context</param>
             <param name="collection">Property collection</param>
        </member>
        <member name="P:Microsoft.MSCOM.GeoProfile.GeoProfileProvider.ApplicationName">
            <summary>
            ApplicationName. This is required by base class ASIDBasedProfileProvider
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\2.2.0.0\Binaries\Release\GeoLocationAPI.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GeoLocationAPI</name>
    </assembly>
    <members>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode">
            <summary>
            It has 3 values:
            	None: does not need postalcode in result
            	PostalCodeExact: return all postalcodes in that city
            	PostalCodeExactPlus35Miles: return all postalcodes in that city, plus all postalcodes in a predefined neighbor area. 
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode.None">
            <summary>
            Do not need postalcode in result
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode.PostalCodeExact">
            <summary>
            Return all postalcodes in that city
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode.PostalCodeExactPlus35Miles">
            <summary>
            Return all postalcodes in that city, plus all postalcodes within 35 miles from that city
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.SocketAccess.GetLocationFromSocket(System.String,System.String)">
            <summary>
            Retrieves GeoLocation from Socket call
            using either ipAddress or mapPointID. No need postalcode
            </summary>
            <param name="key">The key.</param>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.SocketAccess.GetEntityRelationshipFromSocket(System.Int32,System.String)">
            <summary>
            Given MPID and language, return a List
            if the given MPID is negative, then return List of CountryRegion
            If MPID is a positive one, then return list of GeoEntity
            </summary>
            <param name="id">Mappoint ID</param>
            <param name="language">Language</param>
            <returns>List of GeoEntity or CountryRegion</returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.SocketAccess.GetLocationFromSocket(System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            Retrieves GeoLocation from Socket call
            using either ipAddress or mapPointID
            </summary>
            <param name="key">The key.</param>
            <param name="language">The language.</param>
            <param name="postalcodeMode">The postalcode mode.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.SocketAccess.SetGeoInfoFromSocket(System.String)">
            <summary>
            This method takes a string value from socket and populates the Geo Info object
            </summary>
            <param name="inValue">The in value.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.SocketAccess.splitSocketResult(System.String)">
            <summary>
            Splits the socket result.
            </summary>
            <param name="invalue">The in value.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo">
            <summary>
            This class represents the geographic information for a specific CountryRegion, StateProvince, or City.
            GeoInfo objects are used to return information from Reverse-IP, MapPointID, andn PostalCode lookups.
            They supply information about the location, including its localized name, time zone, latitude, longitude, etc.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <remarks>
            Returns all the properties of the GeoInfo object in one string. Primarily used for Unit Tests and won't be used in applications.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.GetPropertyValue(System.String)">
            <summary>
            Private helper method to return a string property value for a GeoInfo object
            </summary>
            <param name="propName">Non-case sensitive name of the core or extended/configurable property, i.e. "MapPointId"</param>
            <returns>string property Value for available properties, returns null if property is not found </returns>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.GeoInfoCommon">
            <summary>
            Gets the internal GeoInfoCommon object.
            </summary>
            <value>The GeoInfoCommon object within this container class.</value>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.MapPointId">
            <summary>
            Gets the MapPointId of the location, defined by the Microsoft MapPoint taxonomy available at http://alexprobe.
            </summary>
            <remarks>
            The GeoSegmentation system only uses ~13K of the 2.1M MapPointIDs, representing the most popular Cities worldwide.
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.MapPointIdParent">
            <summary>
            Gets the MapPointID of the location's parent StateProvince or CountryRegion.
            </summary>
            <remarks>
            If the current MapPointId represents a City, then the ParentID would represent a CountryRegion or StateProvince.
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.CountryRegionDisplayName">
            <summary>
            Gets the localized display name of the location's CountryRegion, i.e. "United States" or "Etats Unis".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.CountryRegionCode">
            <summary>
            Gets the two-character ISO 3166-1 alpha-2 code for the location's CountryRegion, i.e. "US".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.StateProvinceDisplayName">
            <summary>
            Gets the localized display name of the location's StateProvince, i.e. "Washington"
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.StateProvinceCode">
            <summary>
            Gets two-character code for the location's CountryRegion, i.e. "WA".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.CityDisplayName">
            <summary>
            Gets the localized display name of the location's City, i.e. "Redmond".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.Longitude">
            <summary>
            Gets the longitude of the location, supplied by the Microsoft MapPoint team
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.Latitude">
            <summary>
            Gets the latitude of the location, supplied by the Microsoft MapPoint team.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.IsEuropeanUnion">
            <summary>
            Gets the current location's membership in the European Union.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.TimeZoneDisplayName">
            <summary>
            Gets the timezone display name during Standard Time, i.e. "PST".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.DSTTimeZoneDisplayName">
            <summary>
            Gets the timezone display name during Daylight Savings Time, i.e. "PDT".
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.StandardTimeZoneOffset">
            <summary>
            [Deprecated, use StandardTimeZoneOffsetDouble] Gets the timezone offset from GMT during Standard Time, i.e. -8 for Seattle, WA.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.DSTTimeZoneOffset">
            <summary>
            [Deprecated, use DSTTimeZoneOffsetDouble] Gets the timezone offset from GMT during Daylight Savings Time, i.e. -9 for Seattle, WA.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.StandardTimeZoneOffsetDouble">
            <summary>
            Gets the timezone offset from GMT during Standard Time, i.e. -8 for Seattle, WA.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.DSTTimeZoneOffsetDouble">
            <summary>
            Gets the timezone offset from GMT during Daylight Savings Time, i.e. -9 for Seattle, WA.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.DSTStartTimeUniversal">
            <summary>
            Gets the UST DateTime when Daylight Savings Time starts for this location, null if DST is not used at this location.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.DSTEndTimeUniversal">
            <summary>
            Gets the UST DateTime when Daylight Savings Time ends for this location, null if DST is not used at this location.
            </summary>
            <remarks>
            The "Set" action is protected and only accessible when overriding this property.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.PostalCodeInfo">
            <summary>
            Gets a string containing a list of the ZipCodes near this location, i.e. "98052+98053-98078", depending on the override used.
            </summary>
            <remarks>
            This value is presented in a compressed format such as "98052-98057" to represent continguous ranges, and "98052+98111" to represent discontiguous ranges.
            The "+" and "-" characters used to delimit the ranges are configurable.
            [Note] This property is only populated for United States locations when requested.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.PostalCodes">
            <summary>
            Gets a collection of strings, one for each entry in PostalCodeInfo.
            </summary>
            <remarks>
            If PostalcodeInfo contains "98052+98063-98065", this method returns a string collection with 98052, 98063, 98064, 98065. 
            This property might have negative performance impact if PostalCodeInfo has a long list of codes. So please only use it as necessary.
            Note: 
            1. '+' is the main seperator. The whole string is split by + into parts.
            2. For each part, if it does not have exactly one '-', or it has other non-numeric characters, just returns it as-is.
            3. For a part with exactly one '-' and all numerical characters, the method returns the whole range. But if the range start value > end value, it returns it as-is (it usually won't happen)
            [Note] '+' is configured as postalCodeSeperatorCharacter, '-' is configured as postalCodeRangeSeperatorCharacter
            [Note] PostalCodeInfo is only populated for United States locations.
            </remarks>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo.Item(System.String)">
            <summary>
            [New in V2] Gets core (i.e. MapPointID, CountryRegionCode, etc.) and user-defined properties of the GeoInfo object.
            </summary>
            <remarks>
            For example: myGeoInfo["MapPointId"], myGeoInfo["MapPointIDParent"], etc.
            Please refer to the SDK for how to configure Extended Properties.
            </remarks>
            <param name="name">Non-case sensitive name of the core or extended/configurable property, i.e. "MapPointId"</param>
            <returns>String value for the requested property, or null if property name is not found</returns>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity">
            <summary>
            Abstract base class for all geo Entity classes
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.Entity">
            <summary>
            Abstract base class for all Entity classes
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.Entity.Id">
            <summary>
            Id of this Entity
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity.#ctor(System.Int32,System.String)">
            <summary>
            Constructor a new Geo Entity
            </summary>
            <param name="id">Entity ID (from mappoint)</param>
            <param name="code">Entity Code</param>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity.CompareTo(System.Object)">
            <summary>
            This provides the means of compare with another GeoEntity object's DisplayName. It is case insensitive comparison.
            </summary>
            <param name="obj">object must be GeoEntity's sub-classes</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity.Code">
            <summary>
            Code for this Entity
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity.DisplayName">
            <summary>
            Display name for this entity
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoEntity.DisplayLanguage">
            <summary>
            Display Language of this entity
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.City">
            <summary>
            City class of GeoEntity
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.City.LanguageId">
            <summary>
            Language Id
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.City.ParentId">
            <summary>
            Parent Mappoint ID. Normally it is a StateProvince Id or a CountryRegion ID
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.ExtendedProperties">
            <summary>
            ExtendedProperties class allows adopters to associate set of custom properties with geographic locations. Access to these properties is provided via geoInfo class thus giving a seamless experience.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoIPClientManager.GetGeoInformation(System.String,System.String)">
            <summary>
            Get Geoinformation by IP and locale, data file version is not returned
            </summary>
            <param name="IPorMappointID">You can give an IP or a mappoint ID. MappointID must be an integer</param>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoIPClientManager.GetGeoInformation(System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            Get Geoinformation by IP and locale, data file version is not returned
            </summary>
            <param name="IPorMappointID">You can give an IP or a mappoint ID. MappointID must be an integer</param>
            <param name="locale"></param>
            <param name="postalcodeMode">choose what kind of postalcode you need in the result (none, all postalcodes of the city, all postalcodes of the city plus neighbour postalcodes)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoIPClientManager.GetGeoInformation(System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.Boolean)">
            <summary>
            Get Geoinformation by IP and locale, and optionally data file version.
            If we change this to public method, then SetGeoInfoFromSocket in SocketAccess class
            needs to change to receive 15 parts from socket.
            </summary>
            <param name="IPorMappointID">You can give an IP or a mappoint ID. MappointID must be an integer</param>
            <param name="locale"></param>
            <param name="postalcodeMode">choose what kind of postalcode you need in the result</param>
            <param name="pingVersion">if true, then also return the data file version in the first field in the result</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.DBAccess.GetLocationFromDB(System.String,System.String,MSCOMGeoSystem.Common.StatsEventType,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.Int32)">
            <summary>
            Retrieves Geo Location from Database
            using ipAddress.
            </summary>
            <param name="key">The key.</param>
            <param name="language">The language.</param>
            <param name="CallType">Type of the call.</param>
            <param name="postalCodeMode">The postal code mode.</param>
            <param name="commandTimeOut">The command time out.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.DBAccess.GetLocationFromDBWithPostalCode(System.String,System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            Retrieves the GeoLocaiton from database call
            using Postalcode
            </summary>
            <param name="postalCode">The postal code.</param>
            <param name="countryCode">The country code.</param>
            <param name="language">The language.</param>
            <param name="postalCodeMode">The postal code mode.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.DBAccess.SetGeoInfoFromDB(System.Data.DataSet)">
            <summary>
            This method takes a DataSet from a call to GeoSystem database and populates 
            the GeoInfo object.
            </summary>
            <param name="inDS"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.StatsUtilities">
            <summary>
            Contains a lot of utilities useful for interacting with stats.net.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.StatsUtilities.#cctor">
            <summary>
            Constructor. Contains a lot of utilities useful for interacting with stats.net.
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.StatsUtilities.SendGeoStats(System.String,MSCOMGeoSystem.Common.StatsEventType,System.Int64,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.String)">
            <summary>
            Sends collected stats 
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.StatsUtilities.SendGeoStats(System.String,MSCOMGeoSystem.Common.StatsEventType,System.Int64,System.String)">
            <summary>
            Sends collected stats 
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.StateProvince">
            <summary>
            StateProvince entity
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.StateProvince.GetChildrenList">
            <summary>
            Get Children list (city list)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.StateProvince.LanguageId">
            <summary>
            LanguageId of this entity
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.StateProvince.ParentId">
            <summary>
            Parent ID (CountryRegion ID)
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse">
            <summary>
                    An object of MonitoredServicesResponse class is returned in response to a Ping method call
                    of IMonitorable interface. When the pingLevel is 0, monitoring will only care about
                    SuccessFlag and ServicesTime fields, and all other attributes are just ignored.
            </summary>
            <CreatedBy>February 2002 Jay Nanduri, Paulo Lisboa and Ram Sunkara</CreatedBy>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.SuccessFlag">
            <summary>
            SuccessFlag - success/failure indicator 
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ServicesTime">
            <summary>
            actual time of response
            </summary> 
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ServicesName">
            <summary>
            name of the service
            </summary> 
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ServicesMachine">
            <summary>
             server name
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.IsHttps">
            <summary>
            https call or not
            </summary> 
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.RequestContentType">
            <summary>
            requested content type
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFilePath">
            <summary>
            path to the configuration file
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileProjectName">
            <summary>
            project name
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileEnvironmentName">
            <summary>
            environment name
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileLastModifiedTime">
            <summary>
            config file last modified timestamp
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileVersion">
            <summary>
            config file version
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileNextExpirationTime">
            <summary>
            configuration valid until time
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.ConfigFileExpirationModuloInMinutes">
            <summary>
            time in minutes when config file should be loaded each time
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.DataRetrievalInfo">
            <summary>
            Information about whether can retrieve GeoInfo data.
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.DatabaseInfo">
            <summary>
            database name and any error information
            </summary>
        </member>
        <member name="F:Microsoft.MSCOM.Monitoring.MonitoredServicesResponse.CustomInfo">
            <summary>
            any custom information
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Monitoring.IMonitorable">
            <summary>
                    A remoting object to be monitored has to implement IMonitorable interface.
                    'pingLevel' is designed for monitoring the object as well as helping to 
                    troubleshoot problems. In normal day to day operations pingLevel is always set to 0 ( zero )
            </summary>
            <CreatedBy>February 2002 Jay Nanduri, Paulo Lisboa and Ram Sunkara</CreatedBy>
        </member>
        <member name="M:Microsoft.MSCOM.Monitoring.IMonitorable.Ping(System.Int32)">
            <summary>
            Ping the service to see its status
            </summary>
            <param name="pingLevel">defines what to ping</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation">
            <summary>
            Provides the primary entry-points for interacting with the GeoSegmentation API.
            Returns GeoInfo objects from different lookup methods, and provides
            the GetCountryRegionList method for building lists of Countries, States, 
            and Cities
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.LogHighSpeedError(System.Exception)">
            <summary>
            Logs the error of using high speed API to get information.
            </summary>
            <param name="ex">The exception.</param>
            <remarks>
            Log to Eventlog that high speed API could not retrieve the value.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetHttpRequestLanguage(System.Web.HttpRequest)">
            <summary>
            Gets the user language from HTTP request.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>
            The language used by the user at client side.
            </returns>
            <remarks>
            Parsing of language from the http request header (Accept-Language).
            NULL value is fine. There is no default value and there is no checking of NULL for language in all other APIs. It will be handled through the call stacks later.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.IsIPv4(System.Net.IPAddress)">
            <summary>
            Determines whether the specified ip address is IPV4.
            </summary>
            <param name="ipAddress">The IP address.</param>
            <returns>
            	<c>true</c> if the specified IP address is IPV4; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfo(System.String,System.String,System.String,MSCOMGeoSystem.Common.StatsEventType,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            Supports retrieval of GeoInfo object based on IPAddress and user's Locale.
            </summary>
            <param name="key">Mappoint ID or IP.</param>
            <param name="language">The language to use in the format "en-us".</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path.</param>
            <param name="CallType">Type of the call.</param>
            <param name="postalCodeMode">The postalcode mode.</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined.
            </returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.ParsePostalCodeList(Microsoft.MSCOM.Geo.GeoLocationAPI.GeoInfo)">
            <summary>
            Parses the postal code list inside a GeoInfo object into a collection of strings.
            </summary>
            <param name="geoInfo">geoinfo object</param>
            <returns>
            ReadOnlyCollection of strings. If nothing there, an empty collection will be returned. It will not return null
            </returns>
            <remarks>
            If a postalCode list is sth like 98052+98053-98055
            we should return 98052+98053+98054+98055
            Note:
            1. '+' is the main separator. the whole string is separated by + into parts
            2. For each part, if it does not have exactly one '-', or it has other non numeric characters, just return as it is
            3. For a part with exactly one '-' and all numerical characters, we return the whole range. But if the range start value &gt; end value, we just return as it is (it should not happen according to our db)
            4. Here '+' is configured as PostalCodeSeperatorCharacter, '-' is configured as PostalCodeRangeSeperatorCharacter
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.Ping(System.Int32)">
            <summary>
            Ping method for monitoring the system
            </summary>
            <param name="pingLevel">Ping level to use</param>
            <returns>the response of ping</returns>
            <remarks>
            Ping Level Meaning:
            <list type="bullet">
            		<item>0: Checking whether object is live.</item>
            		<item>1: Checking whether the config file is correct. Check ServiceResponse.CustomInfo for failure information if not success.</item>
            		<item>2: Checking whether the current application can retrieve GeoInfo data through current model, no matter it is socket win service or high speed in-process model.</item>
            		<item>3: Checking whether the current application can retrieve GeoInfo data from database directly.</item>
            		<item>Default: Same as level 2.</item>
            	</list>
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromHttpRequest(System.Web.HttpRequest)">
            <summary>
            [New in V2] Returns GeoInfo objects from HTTPRequests.
            </summary>
            <param name="httpRequest">The HTTPRequest object, normally a reference to context.Request</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            This override will use the Accept-Lang from the request as the language.
            Lookup order of precendence:
            <list type="bullet">
            		<item>MapPointId from QueryString</item>
            		<item>MapPointId from Cookie</item>
            		<item>IP Address from a NetScaler-added header</item>
            		<item>IP Address from HttpRequest.UserHostAddress</item>
            		<item>If IP Address is '127.0.0.1', it will use the first Ethernet card's IP Address</item>
            	</list>
            Will first look for a MapPointID in the QueryString, and then in the Cookie.
            If no MapPointID is found, then it will use the HTTPRequest's IP Address.
            It uses the Accept-Lang from the HTTPRequest as the default language, but this can be overridden.
            Makes an off-box call in out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromHttpRequest(System.Web.HttpRequest,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            [New in V2] Returns GeoInfo objects from HTTPRequests.
            </summary>
            <param name="httpRequest">The HTTPRequest object. Usually will be passed a reference to context.Request</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            This override will use the Accept-Lang from the request as the language.
            Lookup order of precendence:
            <list type="bullet">
            		<item>MapPointId from QueryString</item>
            		<item>MapPointId from Cookie</item>
            		<item>IP Address from a NetScaler-added header</item>
            		<item>IP Address from HttpRequest.UserHostAddress</item>
            		<item>If IP Address is '127.0.0.1', it will use the first Ethernet card's IP Address</item>
            	</list>
            Will first look for a MapPointID in the QueryString, and then in the Cookie.
            If no MapPointID is found, then it will use the HTTPRequest's IP Address.
            It uses the Accept-Lang from the HTTPRequest as the default language, but this can be overridden.
            Makes an off-box call in out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromHttpRequest(System.Web.HttpRequest,System.String)">
            <summary>
            [New in V2] Returns GeoInfo objects from HTTPRequests.
            </summary>
            <param name="httpRequest">The HTTPRequest object, normally a reference to context.Request</param>
            <param name="language">The language to use, in the format "en-us"</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Lookup order of precendence:
            <list type="bullet">
            		<item>MapPointId from QueryString</item>
            		<item>MapPointId from Cookie</item>
            		<item>IP Address from a NetScaler-added header</item>
            		<item>IP Address from HttpRequest.UserHostAddress</item>
            		<item>If IP Address is '127.0.0.1', it will use the first Ethernet card's IP Address</item>
            	</list>
            Will first look for a MapPointID in the QueryString, and then in the Cookie.
            If no MapPointID is found, then it will use the HTTPRequest's IP Address.
            It uses the Accept-Lang from the HTTPRequest as the default language, but this can be overridden.
            Makes an off-box call in out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromHttpRequest(System.Web.HttpRequest,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            [New in V2] Returns GeoInfo objects from HTTPRequests.
            </summary>
            <param name="httpRequest">The HTTPRequest object, normally a reference to context.Request</param>
            <param name="language">The language to use, in the format "en-us"</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Lookup order of precendence:
            <list type="bullet">
            		<item>MapPointId from QueryString</item>
            		<item>MapPointId from Cookie</item>
            		<item>IP Address from a NetScaler-added header</item>
            		<item>IP Address from HttpRequest.UserHostAddress</item>
            		<item>If IP Address is '127.0.0.1', it will use the first Ethernet card's IP Address</item>
            	</list>
            Will first look for a MapPointID in the QueryString, and then in the Cookie.
            If no MapPointID is found, then it will use the HTTPRequest's IP Address.
            It uses the Accept-Lang from the HTTPRequest as the default language, but this can be overridden.
            Makes an off-box call in out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromHttpRequest(System.Web.HttpRequest,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.Boolean@)">
            <summary>
            [New in V2] Returns GeoInfo objects from HTTPRequests.
            </summary>
            <param name="httpRequest">The HTTPRequest object, normally a reference to context.Request</param>
            <param name="language">The language to use, in the format "en-us"</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <param name="isInferred">Will return false if the lookup was overriden by a MappointID passed from the QueryString or Cookie</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Lookup order of precendence:
            <list type="bullet">
            		<item>MapPointId from QueryString</item>
            		<item>MapPointId from Cookie</item>
            		<item>IP Address from a NetScaler-added header</item>
            		<item>IP Address from HttpRequest.UserHostAddress</item>
            		<item>If IP Address is '127.0.0.1', it will use the first Ethernet card's IP Address</item>
            	</list>
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromIPAddress(System.String,System.String,System.String)">
            <summary>
            Returns GeoInfo objects by passing in a string with an IPAddress, i.e. "192.1.2.3".
            </summary>
            <param name="ipAddress">IP address for lookup in the format "192.1.2.3"</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromIPAddress(System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.String)">
            <summary>
            Returns GeoInfo objects by passing in a string with an IPAddress, i.e. "192.1.2.3".
            </summary>
            <param name="ipAddress">IP address for lookup (e.g. "192.1.2.3")</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromMapPointId(System.Int32,System.String,System.String)">
            <summary>
            Returns GeoInfo objects by passing in an integer with a MapPointID, i.e. 244 is the MapPointID for the United States.
            </summary>
            <param name="mapPointId">MappointID for the lookup, see http://alexprobe for the complete list of MapPointIDs, however GeoSegmentation only supports the most-popular 13K cities worldwide</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined.
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromMapPointId(System.Int32,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.String)">
            <summary>
            Returns GeoInfo objects by passing in an integer with a MapPointID, i.e. 244 is the MapPointID for the United States.
            </summary>
            <param name="mapPointId">MappointID for the lookup, see http://alexprobe for the complete list of MapPointIDs, however GeoSegmentation only supports the most-popular 13K cities worldwide</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined.
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromPostalCode(System.String,System.String,System.String,System.String)">
            <summary>
            [Updated in V2] Returns GeoInfo objects given a CountryCode ("US") and a PostalCode ("98052").
            </summary>
            <param name="postalCode">PostalCode to lookup in the format "98052"</param>
            <param name="countryCode">CountryCode of the PostalCode in the format "US"</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined.
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetGeoInfoFromPostalCode(System.String,System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode,System.String)">
            <summary>
            [Updated in V2] Returns GeoInfo objects given a CountryCode ("US") and a PostalCode ("98052").
            </summary>
            <param name="postalCode">PostalCode to lookup in the format "98052"</param>
            <param name="countryCode">CountryCode of the PostalCode in the format "US"</param>
            <param name="language">The language to use in the format "en-us"</param>
            <param name="postalCodeMode">Controls whether the GeoInfo should populate the Postalcode string. For fastest performance, use GeoPostalCodeRange.None.</param>
            <param name="appNameOrRequestedUrl">The name of the application or page URL to pass to back-end health monitoring, normally set to context.Request.Path</param>
            <returns>
            A GeoInfo object for the user's location, or null if no location can be determined
            </returns>
            <remarks>
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetCountryRegionList">
            <summary>
            [Updated in V2] Returns a List of CountryRegion objects, representing all the countries in the GeoSegmentation system.
            </summary>
            <returns>List of CountryRegion objects</returns>
            <remarks>
            Use this method for building UIs for asking the customer where he/she is.
            The methods on individual CountryRegion objects can return lists of their StateProvinces or Cities.
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetCountryRegionList(System.String)">
            <summary>
            [Updated in V2] Returns a List of CountryRegion objects, representing all the countries in the GeoSegmentation system.
            </summary>
            <param name="language">The language to use in the format "en-us"</param>
            <returns>List of CountryRegion objects</returns>
            <remarks>
            Use this method for building UIs for asking the customer where he/she is.
            The methods on individual CountryRegion objects can return lists of their StateProvinces or Cities.
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetChildListFromId(System.Int32)">
            <summary>
            [Updated in V2] Returns a List of GeoEntity objects (i.e. locations like States and Cities), representing all the children of a given MapPointID.
            </summary>
            <param name="id">MapPointID of the parent GeoEntity</param>
            <returns>
            List of GeoEntities (locations like States and Cities) objects
            </returns>
            <remarks>
            Use this method for building UIs for asking the customer where he/she is.
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.GeoLocation.GetChildListFromId(System.Int32,System.Int32)">
            <summary>
            [Updated in V2] Returns a List of GeoEntity objects (i.e. locations like States and Cities), representing all the children of a given MapPointID.
            </summary>
            <param name="id">MapPointID of the parent GeoEntity</param>
            <param name="languageId">Language ID, i.e. 9 is en-US.</param>
            <returns>
            List of GeoEntities objects, representing locations for States and Cities.
            </returns>
            <remarks>
            Use this method for building UIs for asking the customer where he/she is.
            Makes an off-box call in the out-of-process configuration when the Windows Service is down, and the SQL database is configured.
            [Note] In V1, this method always went off-box to the SQL Server to fetch this data.
            </remarks>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.CountryRegion">
            <summary>
            CountryRegion class for GeoEntity
            </summary>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.CountryRegion.GetChildrenList">
            <summary>
            Get Children GeoEntity List. 
            </summary>
            <returns>Children (City or StateProvince) list of this CountryRegion</returns>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.CountryRegion.LanguageId">
            <summary>
            Language Id
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.CountryRegion.IsEU">
            <summary>
            If this country is belong to EU or not
            </summary>
        </member>
        <member name="P:Microsoft.MSCOM.Geo.GeoLocationAPI.CountryRegion.SupportPostalCode">
            <summary>
            Whether this CountryRegion support PostalCode or not
            </summary>
        </member>
        <member name="T:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI">
            <summary>
            The API providing high speed in-process Geo location retrieval without accessing windows service.
            </summary>	
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI.#cctor">
            <summary>
            Initializes the <see cref="T:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI"/> class.
            </summary>
            <remarks>
            Loads the data file from disk to memory. Not saving the file to disk.
            Will retry to load from back data file if the loading of data file failed.
            </remarks>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI.GetGeoInfo(System.String,System.String,Microsoft.MSCOM.Geo.GeoLocationAPI.GeoPostalCodeRangeMode)">
            <summary>
            Gets the geo info.
            </summary>
            <param name="key">Mappoint ID or IP</param>
            <param name="language">The language.</param>
            <param name="postalcodeMode">The postalcode mode.</param>
            <returns>The GeoInfo object. </returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI.GetChildListFromId(System.Int32,System.Int32)">
            <summary>
            Gets the child list from id.
            </summary>
            <param name="id">The id.</param>
            <param name="languageId">The language id.</param>
            <returns>List of GeoEntities. </returns>
        </member>
        <member name="M:Microsoft.MSCOM.Geo.GeoLocationAPI.HighSpeedAPI.GetCountryRegionList(System.String)">
            <summary>
            Get all countries in a list using given language
            </summary>
            <param name="language">the language</param>
            <returns>a list of countries</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.0.0.0\ScoreCard\Score card design and deployment.docx ===
Table of Contents
Table of Contents	1
1	Overview	1
1.1	Overview	1
1.2	Environment	1
2	Relational Database Design and Deployment	2
2.1	Design	2
2.2	Deployment	3
3	OLAP Database Design and Deployment	3
3.1	Design	3
3.2	Deployment	3
4	Score Card Design and Deployment	4
4.1	Design	4
4.2	Deployment	4
 
Overview
Overview
This is an initiative to try out the OLAP technologies with Microsoft Performance Point Server 2007 (MPPS).  MPPS provides us a very simple and fast way to build up reports which might otherwise take a developer months effort to build in asp.net from scratch. And compared to our current webmetrix reports, MPPS reports are very easy to deploy, modify and maintain. It could be a future trend in the reporting area.
Right now, MPPS 2007 has not been released. It is probably targeted at mid 2007. It still has bugs but it is usable already. In this GeoSegmentation Score Card project, we would target at the CTP1 version of MPPS 2007 and work around existing issues. In the future, after it is released, we need to improve it.
Environment
Due to a bug in MPPS 2007 CTP1, the Field Filter cannot work in Sharepoint 2007. MPPS team suggests us to use ASP.net deployment for now.  The deployment process is not much different between asp.net and sharepoint 2007 so in this Geo release, we would use ASP.net deployment. We do not choose SQL Reporting Service because ASP.net deployment is simpler and it is easier to migrate to sharepoint 2007 in future.
So, we need to have these things:
SQL Server: Host the ETL relational database
Analysis Server: Host the OLAP database, which contains dimensions, cubes, etc.
Microsoft Performance Point Server 2007 (CTP1), to host the score card and reports. It is installable from 
\\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media
Microsoft Performance Point Builder. It is the client tool in which you can develop/deploy the score card. 
ASP.net environment. Reports will be deployed to ASP.net.
Relational Database Design and Deployment
Design
The database is called GeoSystemBI. It pulls data from TenantDW, prepare the fact table and dimension tables. Olap database will use it as data source.
Its main fact table and dimension tables are as Fig 2.1:

Fig 2.1: GeoSystemBI fact table and dimension tables
The table tblGeoSegmentation is the fact table. It is using STAR SCHEMA to connect to the 5 dimension tables (Language, Time, URL, Status, EventType dimensions).
For tblEventTyle, it is mainly the Geo calling methods. Each GET method and SET method will be an event.
For tblStatus, it indicates the Geo Error Code (DB error, Windows Service Error, default location, etc.)
There are other tables: 
tblConfigure: this table contains all configure values, for example, data retention values
tblPullConfigure: this table contains the data pull configure values. It controls data pull logic.
Wmt_geosegmentation: this table is an image to the same table in TenantDW. The data are pulled from tenantDW directly into this table, then we do data conversions locally and save to fact table and dimension tables.
tblEventLog: this is the eventlog table as in any other projects.
Deployment
Located \ScoreCard\Relationtional in the drop folder
Open \Table\ GeoSystemBI_Database.sql. Modify the filegroup, filesize, etc. Then execute it. This will create the database. 
Open \Table\ GeoSystemBI_tables.sql. Modify the filegroup, etc. Then execute it. This will create the tables. 
Copy \Assembly\MD5d.dll to some place in your server
Open \Assembly\CreateMscid.sql, modify the path of MD5d.dll and then execute it. This creates the function MSCID.
Execute \Data\tabledata.sql. This populates the necessary data
Open \Linked Server\CreateLinkedServer.sql, modify the SQLServerName and User and password. Then execute it to create the linked server. 
Execute \Stored Procedures\spEventLog.sql, and then execute the other 3 SPs in the same folder
Open \jobs\GeoSystemBI - ETL.sql. Find “Redmond\fengj”, modify the user name of the job (using the user who has the right to access linked server created in the previous step), then execute it. 
Note: This job is based on the assumption that the OLAP database will be on the same server with this SQL database. If they are on different servers, make sure you move the job step 4 onto the OLAP server and create a separate job for it. Here I suggest touse the same server for SQL and OLAP databases.
OLAP Database Design and Deployment
Design
The OLAP Database is called GeoSystemStatsOlap. It has the data source pointing to GeoSystemBI, and creates data source view, dimensions, measures, cube, and named sets. They will be used in Score Card.
Note: The admin account used in the Performance Point Preview Server requires proper access to the GeoSystemStatsOlap cube

Deployment
Note: I suggest let's keep the SQL and OLAP database in the same server for now in this version, thus data transfer from TenantDW to GeoSystemBI can happen before cube processing. If we make these two servers separate we need to sync them and then we need to set more complex account information for remote cube processing. And in production it will be easier if we put them together, minimize the network delay, easy maintaining, and make the cube response faster. Please see step 1 below, if you have OLAP and SQL server in same box, you can skip step 1 easily.

Make sure the Analysis Server is installed.
It is not necessarily to be in the same server as the relational database. But if they are not in the same server, make sure the service account of “MSSQLSERVEROLAPSERVICE” is using a domain account which has enough rights to access the GeoSystemBI relational database. As we probably do not have sensitive data, the account could be admin to the GeoSystemBI. 
If the OLAP database is on a different server than GeoSystemBI, you need to take out the job step 4 in “GeoSegmentationBI – ETL” in section 2.2, and add this job step as a job to the olap server sql agent.  

Open \ScoreCard\OLAPDatabase\GeoSystemStatsOlap.xmla (open it against the Analysis database, using xmla, not MDX or DMX), modify the data source SQL Server name (search for B10devmptsqlh02, replace it with your SQL Server Name). You can use “localhost” if GeoSystemBI is on the same box.
Execute it. This will create the OLAP database.
Process the whole database maually.
Score Card Design and Deployment
Design
The reports are supposed to be easily usable. So I group the reports into 3 types:
Counts report
Error report
Average Response Time report

For each type of reports, it is again divided by 
Last 7 days report
Last 30 days report
Last 3 month report
Last 12 month report
All time report

Thus, there are 3*5 = 15 score cards. Each report has the field filter of SiteURL. So you can view the data for a specific site/URL. Note, there is no way to compare to Sites/URLs due to the report design. If this is needed, we can add new score cards. Also, the special graphical score card can help to do this job:

Special Graphic Score Card: “Geo Report Graphical Interface”  
This is the No. 16 score card. This is a powerful score card in which you can virtually see anything in the cube. But you need to drag/drop dimension combinations by yourself.

So there are 16 score cards designed as above. 


Deployment
Install Microsoft Performance Point Server 2007. The development work is with CTP1 version so it might not be compatible with later versions. Install from 
\\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media
It will configure your machine, as well as IIS and SQL server (it needs to install something there). Please refer to the following steps.

After the local install is completed, it’ll run the Configuration Wizard for you. Select Next on the Welcome screen:



Select Advance for the Mode screen and hit next
Select Next when the Probe is finished
Select the following features then hit next:
PerformancePoint Scorecard Server
PerformancePoint Scorecard Server Database
PerformancePoint Scorecard Builder Installation Site


For IIS section, under Application Pool select PerformancePoint and hit next
For Database, type in the machine name of the DB server and hit next. You probably need admin access for the SQL server instance running on the server to install the database.
Select Install once you’re finished.

Once everything is finished logon to the Preview server to setup a site to view the published scorecards
Rerun the installation msi specified in the Scorecard deployment package from Jiong’s document
After the local install is completed, it’ll run the Configuration Wizard for you. Select Next on the Welcome screen
Select Advance for the Mode screen and hit next
Select Next when the Probe is finished
Select the following features then hit next
PerformancePoint Scorecard Server test preview site
For IIS section, under Application Pool select PerformancePoint and hit next
For Database, type in the machine name of the DB server and hit next. Select Install once you’re finished.

Check your Performance Point web service application pool (it is a web site with default port number 40000). Make sure it has a redmond domain account and this account is part of IIS_WPG group.
Install Performance Score Card Builder. On the server machine, it is already installed. If you want to install on another machine which connects to the MPPS server, you can do it. (Either consult fengj or read at its documentation – you probably need to type http://your MPPS server:4000 then it can be installed automatically). 
Make sure your Builder is link to your MPPS server (click Home menu->click Server Administrator button in toolbar, change the server name in the URL if necessary)
Open \ScoreCard\ScoreCard\GeoScoreCard.bswx in notepad, replace B10devmptsqlh02 to your OLAP Server name. Then save it and close it.
On the machine which has Score Card Builder, open \ScoreCard\ScoreCard\GeoScoreCard.bswx
Note: this is the workspace metadata file. 
Publish this workspace to your MPPS server.  (click Home menu, click “publish all” in toolbar)
Now, click Export menu, click ASP.net button in toolbar, then publish score cards one by one to your IIS server.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSIVal\x86\Version.txt ===
This folder contains a copy of MSIVal2.exe and supporting files. This version of MSIVal2 is included
in the Windows Installer SDK (Version 2.0).

Added to CoreXt Aug, 2002 by Bhaskar Dutt (bdutt)
---------------------
Update to 4.0.5346.0 shipped in Vista SDK by Henry Wang (hewang)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\doc\Documentation.log ===
Microsoft HTML Help Compiler 4.74.8702

Compiling c:\dev\Ranking\MuSigma\doc\Documentation.chm


Compile time: 0 minutes, 8 seconds
540	Topics
3,244	Local links
538	Internet links
11	Graphics


Created c:\dev\Ranking\MuSigma\doc\Documentation.chm, 404,172 bytes
Compression decreased file by 3,033,294 bytes.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\Docs\Site Specific Application Configuration Technical Design.docx ===
Table of Contents
Table of Contents	1
1	Overview	1
2	SiteName from Active Directory	1
3	Support for site specific and default settings	2
3.1	Configuration Model Overview	2
3.2	mscom.config site specific and default settings	2
3.3	Rules for config settings	3

Overview
There is a need for applications to dynamically choose configuration settings based on where they are physically located. This approach enables web servers to choose the database servers nearest to them there by making the applications more performant. This also greatly helps the Operations team by removing the need to make site specific configuration changes and helps keep the application image the same across all the web servers.
This document details how site name is retrieved from Active Directory and how Geo System enables site specific as well as default settings in configuration files.
SiteName from Active Directory
The site name of a server can be retrieved from querying the Active Directory Services function DsGetSiteName. The DSGetSiteName function gives the name of the site where the computer resides as configured in the domain.
DSGetSiteName needs the netapi32.dll library to query for the site name. So, the following declaration needs to be included in the code. 
using System.Runtime.InteropServices;
[DllImport("netapi32.dll", CharSet = CharSet.Unicode)]
private static extern int DsGetSiteName(string ComputerName, out IntPtr SiteName);


My Dev computer’s site when retrieved from this call is NA-WA-RED. This format suggests that the sitename has physical info as (continent-state-city). However, this solution is independent of the sitename format/naming convention.

Support for site specific and default settings
Configuration Model Overview
In Geo System, there is 3-level support for specifying application settings. Two of these live in the mscom.config file. The third lives in web.config /app.config file.  This 3-level support is to enable adopters to easily override default settings when needed.
The settings in web.config/app.config override the settings in mscom.config. Within the mscom.config file, the site specific settings override the default settings.  The support for site specific and default settings in mcom.config file are detailed in section 3.2 below.
mscom.config site specific and default settings
The application configuration file (known as mscom.config file) is vastly simplified with this approach. The need for separate environments (ex: Dev, Test, PPE, Beta, Production) is eliminated. Since there is only one set of settings in this approach, the ‘environment’ is eliminated. This also results in the removal of need to create an Environment key in the machine.config file for the server.
In the mscom.config file, there is a category called “common” with a setting for “SiteSpecificDelimiter”.
<category name="Common">
<!-- Delimiter to  sitespecific settings.-->
	<setting name="SiteSpecificDelimiter" value = "-" />
</category>
This value is used to specify the site specific key.
The default settings for the application are arranged in related categories in the config  file as in the example below.
<category name="Database">
<setting name="GeoSystemDatabase" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
</category>

To specify a site specific setting  that overrides this default value,  the site specific setting is added in the same category. To illustrate, I added a site specific database connection string for my computer site (NA-WA-RED) in addition to the default setting as in the code below.
<category name="Database">
	<setting name="GeoSystemDatabase" value="Data Source=B10DEVMPTSQLH01; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
  <setting name="GeoSystemDatabase-NA-WA-RED" value="Data Source=AJAYDEVSERVER; Initial Catalog=GeoSystem; integrated Security=sspi;Connect Timeout=3" />
</category>

When the application runs on my computer, the program detects that there is a site specific setting available for the database and picks the database connection string that uses AJAYDEVSERVER in the example above. However when the same code runs in Production environment, the program picks up the B10DEVMPTSQLH01 connection string. This is because the site name in production won’t match NA-WA-RED. 
Syntax for Site Specific Setting
The site specifc key name = <defaultkeyname>+ <SiteSpecificDelimiter>+ <siteName>
Ex: “GeoSystemDatabase-NA-WA-RED” where “-“ is the configured delimiter.

Reading specific/default settings
In the ConfigFleReader.cs file, GetStringSetting method reads the site specific setting first  with the XPath as 

sSubXPath = "category[@name='" + sCategoryName + "']/setting[@name='" + sAttributeName + SiteSpecificDelimiter + m_siteName + "']";
When there is no such row, the XPath defaults to 
sSubXPath = "category[@name='" + sCategoryName + "']/setting[@name='" + sAttributeName + "']";
It is optional and easy to specify site specific settings. S, this model simplifies both maintenance and deployment to environments.

Rules for config settings 
There are a set of rules for config as detailed below.
The site specific and default settings should appear under the same category in config file. Otherwise, it will give an exception. This is for easy maintenance. 
If there are duplicate entries mentioned in the same key name, it throws exception. This is to ensure accuracy of the config file.
If there are missing config settings, then application will throw exception. This is needed to ensure the integrity of the application.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\1.1.0.0\ScoreCard\Score card design and deployment.docx ===
Table of Contents
Table of Contents	1
1	Overview	1
1.1	Overview	1
1.2	Environment	1
2	Relational Database Design and Deployment	2
2.1	Design	2
2.2	Deployment	3
3	OLAP Database Design and Deployment	3
3.1	Design	3
3.2	Deployment	3
4	Score Card Design and Deployment	4
4.1	Design	4
4.2	Deployment	4
 
Overview
Overview
This is an initiative to try out the OLAP technologies with Microsoft Performance Point Server 2007 (MPPS).  MPPS provides us a very simple and fast way to build up reports which might otherwise take a developer months effort to build in asp.net from scratch. And compared to our current webmetrix reports, MPPS reports are very easy to deploy, modify and maintain. It could be a future trend in the reporting area.
Right now, MPPS 2007 has not been released. It is probably targeted at mid 2007. It still has bugs but it is usable already. In this GeoSegmentation Score Card project, we would target at the CTP1 version of MPPS 2007 and work around existing issues. In the future, after it is released, we need to improve it.
Environment
Due to a bug in MPPS 2007 CTP1, the Field Filter cannot work in Sharepoint 2007. MPPS team suggests us to use ASP.net deployment for now.  The deployment process is not much different between asp.net and sharepoint 2007 so in this Geo release, we would use ASP.net deployment. We do not choose SQL Reporting Service because ASP.net deployment is simpler and it is easier to migrate to sharepoint 2007 in future.
So, we need to have these things:
SQL Server: Host the ETL relational database
Analysis Server: Host the OLAP database, which contains dimensions, cubes, etc.
Microsoft Performance Point Server 2007 (CTP1), to host the score card and reports. It is installable from 
\\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media
Microsoft Performance Point Builder. It is the client tool in which you can develop/deploy the score card. 
ASP.net environment. Reports will be deployed to ASP.net.
Relational Database Design and Deployment
Design
The database is called GeoSystemBI. It pulls data from TenantDW, prepare the fact table and dimension tables. Olap database will use it as data source.
Its main fact table and dimension tables are as Fig 2.1:

Fig 2.1: GeoSystemBI fact table and dimension tables
The table tblGeoSegmentation is the fact table. It is using STAR SCHEMA to connect to the 5 dimension tables (Language, Time, URL, Status, EventType dimensions).
For tblEventTyle, it is mainly the Geo calling methods. Each GET method and SET method will be an event.
For tblStatus, it indicates the Geo Error Code (DB error, Windows Service Error, default location, etc.)
There are other tables: 
tblConfigure: this table contains all configure values, for example, data retention values
tblPullConfigure: this table contains the data pull configure values. It controls data pull logic.
Wmt_geosegmentation: this table is an image to the same table in TenantDW. The data are pulled from tenantDW directly into this table, then we do data conversions locally and save to fact table and dimension tables.
tblEventLog: this is the eventlog table as in any other projects.
Deployment
Located \ScoreCard\Relationtional in the drop folder
Open \Table\ GeoSystemBI_Database.sql. Modify the filegroup, filesize, etc. Then execute it. This will create the database. 
Open \Table\ GeoSystemBI_tables.sql. Modify the filegroup, etc. Then execute it. This will create the tables. 
Copy \Assembly\MD5d.dll to some place in your server
Open \Assembly\CreateMscid.sql, modify the path of MD5d.dll and then execute it. This creates the function MSCID.
Execute \Data\tabledata.sql. This populates the necessary data
Open \Linked Server\CreateLinkedServer.sql, modify the SQLServerName and User and password. Then execute it to create the linked server. 
Execute \Stored Procedures\spEventLog.sql, and then execute the other 3 SPs in the same folder
Open \jobs\GeoSystemBI - ETL.sql. Find “Redmond\fengj”, modify the user name of the job (using the user who has the right to access linked server created in the previous step), then execute it. 
Note: This job is based on the assumption that the OLAP database will be on the same server with this SQL database. If they are on different servers, make sure you move the job step 4 onto the OLAP server and create a separate job for it. Here I suggest touse the same server for SQL and OLAP databases.
OLAP Database Design and Deployment
Design
The OLAP Database is called GeoSystemStatsOlap. It has the data source pointing to GeoSystemBI, and creates data source view, dimensions, measures, cube, and named sets. They will be used in Score Card.
Note: The admin account used in the Performance Point Preview Server requires proper access to the GeoSystemStatsOlap cube

Deployment
Note: I suggest let's keep the SQL and OLAP database in the same server for now in this version, thus data transfer from TenantDW to GeoSystemBI can happen before cube processing. If we make these two servers separate we need to sync them and then we need to set more complex account information for remote cube processing. And in production it will be easier if we put them together, minimize the network delay, easy maintaining, and make the cube response faster. Please see step 1 below, if you have OLAP and SQL server in same box, you can skip step 1 easily.

Make sure the Analysis Server is installed.
It is not necessarily to be in the same server as the relational database. But if they are not in the same server, make sure the service account of “MSSQLSERVEROLAPSERVICE” is using a domain account which has enough rights to access the GeoSystemBI relational database. As we probably do not have sensitive data, the account could be admin to the GeoSystemBI. 
If the OLAP database is on a different server than GeoSystemBI, you need to take out the job step 4 in “GeoSegmentationBI – ETL” in section 2.2, and add this job step as a job to the olap server sql agent.  

Open \ScoreCard\OLAPDatabase\GeoSystemStatsOlap.xmla (open it against the Analysis database, using xmla, not MDX or DMX), modify the data source SQL Server name (search for B10devmptsqlh02, replace it with your SQL Server Name). You can use “localhost” if GeoSystemBI is on the same box.
Execute it. This will create the OLAP database.
Process the whole database maually.
Score Card Design and Deployment
Design
The reports are supposed to be easily usable. So I group the reports into 3 types:
Counts report
Error report
Average Response Time report

For each type of reports, it is again divided by 
Last 7 days report
Last 30 days report
Last 3 month report
Last 12 month report
All time report

Thus, there are 3*5 = 15 score cards. Each report has the field filter of SiteURL. So you can view the data for a specific site/URL. Note, there is no way to compare to Sites/URLs due to the report design. If this is needed, we can add new score cards. Also, the special graphical score card can help to do this job:

Special Graphic Score Card: “Geo Report Graphical Interface”  
This is the No. 16 score card. This is a powerful score card in which you can virtually see anything in the cube. But you need to drag/drop dimension combinations by yourself.

So there are 16 score cards designed as above. 


Deployment
Install Microsoft Performance Point Server 2007. The development work is with CTP1 version so it might not be compatible with later versions. Install from 
\\bizfs\Public\Builds\Concerto\CTP1_Release\drop\3.0.2500.00\Release\x86\en-US\media
It will configure your machine, as well as IIS and SQL server (it needs to install something there). Please refer to the following steps.

After the local install is completed, it’ll run the Configuration Wizard for you. Select Next on the Welcome screen:



Select Advance for the Mode screen and hit next
Select Next when the Probe is finished
Select the following features then hit next:
PerformancePoint Scorecard Server
PerformancePoint Scorecard Server Database
PerformancePoint Scorecard Builder Installation Site


For IIS section, under Application Pool select PerformancePoint and hit next
For Database, type in the machine name of the DB server and hit next. You probably need admin access for the SQL server instance running on the server to install the database.
Select Install once you’re finished.

Once everything is finished logon to the Preview server to setup a site to view the published scorecards
Rerun the installation msi specified in the Scorecard deployment package from Jiong’s document
After the local install is completed, it’ll run the Configuration Wizard for you. Select Next on the Welcome screen
Select Advance for the Mode screen and hit next
Select Next when the Probe is finished
Select the following features then hit next
PerformancePoint Scorecard Server test preview site
For IIS section, under Application Pool select PerformancePoint and hit next
For Database, type in the machine name of the DB server and hit next. Select Install once you’re finished.

Check your Performance Point web service application pool (it is a web site with default port number 40000). Make sure it has a redmond domain account and this account is part of IIS_WPG group.
Install Performance Score Card Builder. On the server machine, it is already installed. If you want to install on another machine which connects to the MPPS server, you can do it. (Either consult fengj or read at its documentation – you probably need to type http://your MPPS server:4000 then it can be installed automatically). 
Make sure your Builder is link to your MPPS server (click Home menu->click Server Administrator button in toolbar, change the server name in the URL if necessary)
Open \ScoreCard\ScoreCard\GeoScoreCard.bswx in notepad, replace B10devmptsqlh02 to your OLAP Server name. Then save it and close it.
On the machine which has Score Card Builder, open \ScoreCard\ScoreCard\GeoScoreCard.bswx
Note: this is the workspace metadata file. 
Publish this workspace to your MPPS server.  (click Home menu, click “publish all” in toolbar)
Now, click Export menu, click ASP.net button in toolbar, then publish score cards one by one to your IIS server.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\LinearAlgebra.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinearAlgebra</name>
    </assembly>
    <members>
        <member name="T:LinearAlgebra.Matrix">
            <summary>
            A light-weight matrix class for  arbitrary sized matrices. Most of these functions are implemented in a 
            straighforward way and are not optimised for any particular target CPU architecture.
            </summary>
        </member>
        <member name="F:LinearAlgebra.Matrix.m_dData">
            <summary>
            The raw values of the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a matrix with zeros entries.
            </summary>
            <param name="iNoRows">Number of rows.</param>
            <param name="iNoColumns">Number of columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32)">
            <summary>
            Constructs a square matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Double)">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
            <param name="dDiagonal">The diagonal entry.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[])">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="dDiagonal">The diagonal of the matrix.</param>
            <remarks>This constructor allows different entries on the diagonal of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(LinearAlgebra.Matrix)">
            <summary>
            Constructs a deep copy of a matrix.
            </summary>
            <param name="aMatrix">Matrix to be copied.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[0:,0:])">
            <summary>
            Constructs a shallow copy of a matrix.
            </summary>
            <param name="dData">Matrix data to be used.</param>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsRowVector">
            <summary>
            Indicator if the matrix is a row vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsColumnVector">
            <summary>
            Indicator if the matrix is a column vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsVector">
            <summary>
            Indicator whether or not the matrix is a vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoRows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoColumns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoElements">
            <summary>
            Number of total elements of the matrix.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Element in the zero-based row <c>iRowIndex</c> and zero-based column <c>iColumnIndex</c>.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32)">
            <summary>
            Element at position <c>iIndex</c> if the matrix is vector. 
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.Equals(System.Object)">
            <summary>
            Compares with another matrix.
            </summary>
            <param name="aMatrix">Matrix A.</param>
            <returns>Returns true if A is equal to the matrix in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.GetHashCode">
            <summary>
            Computes a new hash code for the matrix.
            </summary>
            <returns>The hash code as an integer.</returns>
            <remarks>This function simply computes the products of the number of rows and colums and adds the 
            first element (0,0) of the matrix in order to compute a hash code.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.ToString">
            <summary>
            Creates a string representation of the matrix.
            </summary>
            <returns>A string showing the matrix elements.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(LinearAlgebra.Matrix)~System.Double[0:,0:]">
            <summary>
            The implicit cast of a matrix into a double array.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The elements of the matrix A as a double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Explicit(LinearAlgebra.Matrix)~System.Double">
            <summary>
            An explicit cast of a matrix into a double. 
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The only element of the matrix A as a double.</returns>
            <remarks>This cast throws an exception if the matrix has more than one row or more than one column.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double[0:,0:])~LinearAlgebra.Matrix">
            <summary>
            The implicit case of a double array into a matrix.
            </summary>
            <param name="dData">The double array to be casted.</param>
            <returns>A new matrix object whose <c>Data</c> property points to the double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double)~LinearAlgebra.Matrix">
            <summary>
            The implicit cast of a double into a matrix.
            </summary>
            <param name="x">The double to be casted.</param>
            <returns>A 1 x 1 matrix with the only element equal to <c>x</c>.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Negate">
            <summary>
            Negates the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_UnaryNegation(LinearAlgebra.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>Matrix A negated, that is -A.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Equality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Inequality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is not equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Add(LinearAlgebra.Matrix)">
            <summary>
            Adds a matrix.
            </summary>
            <param name="A">Matrix to be added.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Addition(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>The matrix sum of A and B, that is A + B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Substract(LinearAlgebra.Matrix)">
            <summary>
            Substract a matrix.
            </summary>
            <param name="A">Matrix to be substracted.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Subtraction(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Substracts two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix B substracted from matrix B, that is A - B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Multiply(LinearAlgebra.Matrix)">
            <summary>
            Multiplies with a matrix from the right. 
            </summary>
            <param name="A">Matrix to be multiplied from the right</param>
            <remarks>This will most likely change the size of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix A times matrix B, that is A * B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Mulitply(System.Double)">
            <summary>
            Multiplies with a scalar, that is, each element of the matrix is multiplied by the scalar.
            </summary>
            <param name="x">The scaling factor.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Multiplies a matrix with a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(System.Double,LinearAlgebra.Matrix)">
            <summary>
            Multiplies a scalar with a matrix.
            </summary>
            <param name="x">Scalar x.</param>
            <param name="A">Matrix A.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Divide(System.Double)">
            <summary>
            Didives by a scalar, that is, every element is divided by the scalar.
            </summary>
            <param name="x">The scalar to be dividing by.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Division(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Divides a matrix by a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A divided by scalar x, that is every element of A is divided by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Transpose">
            <summary>
            Transposes the matrix.
            </summary>
            <returns>The transposed matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Cholesky">
            <summary>
            Computes the Cholesky decomposition. 
            </summary>
            <returns>A lower triangular matrix containing the Cholesky decomposition.</returns>
            <remarks>This method does not check for the symmetry. It throws an exception if the matrix is not 
            square or if the matrix is not positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Inverse">
            <summary>
            Computes the inverse of a square positive definite matrix. 
            </summary>
            <returns>The inverse of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry. Moreover, the inverse method assumes
            that the matrix is positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.InverseCholeskyFactor">
            <summary>
            Computes the inverse of the Cholesky factor of the matrix.  
            </summary>
            <returns>The inverse of the Cholesky factor of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Determinant">
            <summary>
            Computes the determinant of a positive semidefinite matrix.  
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsNaN">
            <summary>
            Checks if any element of the matrix is not-a-number.
            </summary>
            <returns>Returns true the matrix contains at least one element that is not-a-number.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsInfinity">
            <summary>
            Checks if any element of the matrix is infinity.
            </summary>
            <returns>Returns true the matrix contains at least one element that is infinity.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.TestMatrixClass">
             <summary>
             This function tests the matrix class on some exemplary matrices.
             </summary>
             <remarks>This code should give the following output on the console
             <code>
            			A = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			2.0 * B = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B * 2.0 = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			C = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			-C = 
            			-1.00 	-3.00 	-6.00 	
            			-2.00 	-5.00 	-1.00 	
            
            			B + C = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B - C = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B' * C = 
            			5.00  	13.00 	8.00  	
            			13.00 	34.00 	23.00 	
            			8.00  	23.00 	37.00 	
            
            			I = 
            			1.00  	0.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	0.00  	
            			0.00  	0.00  	1.00  	0.00  	
            			0.00  	0.00  	0.00  	1.00  	
            
            			S = 
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            
            			B == C = True
            
            			A == (B - C) = True
            
            			I == S = False
            
            			D = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            			
            			F = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            
            			E = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			L = 
            			2.45  	0.00  	0.00  	
            			4.49  	1.35  	0.00  	
            			2.86  	1.60  	1.81  	
            
            			L * L' = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			E^-1 = 
            			2.31  	-1.36 	0.31  	
            			-1.36 	0.97  	-0.36 	
            			0.31  	-0.36 	0.31  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            			
            			det (E) = 
            			35.9999999999999		
            
            	</code>
             </remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\bin\Debug\LinearAlgebra.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinearAlgebra</name>
    </assembly>
    <members>
        <member name="T:LinearAlgebra.Matrix">
            <summary>
            A light-weight matrix class for  arbitrary sized matrices. Most of these functions are implemented in a 
            straighforward way and are not optimised for any particular target CPU architecture.
            </summary>
        </member>
        <member name="F:LinearAlgebra.Matrix.m_dData">
            <summary>
            The raw values of the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a matrix with zeros entries.
            </summary>
            <param name="iNoRows">Number of rows.</param>
            <param name="iNoColumns">Number of columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32)">
            <summary>
            Constructs a square matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Double)">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
            <param name="dDiagonal">The diagonal entry.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[])">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="dDiagonal">The diagonal of the matrix.</param>
            <remarks>This constructor allows different entries on the diagonal of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(LinearAlgebra.Matrix)">
            <summary>
            Constructs a deep copy of a matrix.
            </summary>
            <param name="aMatrix">Matrix to be copied.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[0:,0:])">
            <summary>
            Constructs a shallow copy of a matrix.
            </summary>
            <param name="dData">Matrix data to be used.</param>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsRowVector">
            <summary>
            Indicator if the matrix is a row vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsColumnVector">
            <summary>
            Indicator if the matrix is a column vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsVector">
            <summary>
            Indicator whether or not the matrix is a vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoRows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoColumns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoElements">
            <summary>
            Number of total elements of the matrix.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Element in the zero-based row <c>iRowIndex</c> and zero-based column <c>iColumnIndex</c>.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32)">
            <summary>
            Element at position <c>iIndex</c> if the matrix is vector. 
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.Equals(System.Object)">
            <summary>
            Compares with another matrix.
            </summary>
            <param name="aMatrix">Matrix A.</param>
            <returns>Returns true if A is equal to the matrix in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.GetHashCode">
            <summary>
            Computes a new hash code for the matrix.
            </summary>
            <returns>The hash code as an integer.</returns>
            <remarks>This function simply computes the products of the number of rows and colums and adds the 
            first element (0,0) of the matrix in order to compute a hash code.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.ToString">
            <summary>
            Creates a string representation of the matrix.
            </summary>
            <returns>A string showing the matrix elements.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(LinearAlgebra.Matrix)~System.Double[0:,0:]">
            <summary>
            The implicit cast of a matrix into a double array.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The elements of the matrix A as a double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Explicit(LinearAlgebra.Matrix)~System.Double">
            <summary>
            An explicit cast of a matrix into a double. 
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The only element of the matrix A as a double.</returns>
            <remarks>This cast throws an exception if the matrix has more than one row or more than one column.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double[0:,0:])~LinearAlgebra.Matrix">
            <summary>
            The implicit case of a double array into a matrix.
            </summary>
            <param name="dData">The double array to be casted.</param>
            <returns>A new matrix object whose <c>Data</c> property points to the double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double)~LinearAlgebra.Matrix">
            <summary>
            The implicit cast of a double into a matrix.
            </summary>
            <param name="x">The double to be casted.</param>
            <returns>A 1 x 1 matrix with the only element equal to <c>x</c>.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Negate">
            <summary>
            Negates the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_UnaryNegation(LinearAlgebra.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>Matrix A negated, that is -A.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Equality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Inequality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is not equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Add(LinearAlgebra.Matrix)">
            <summary>
            Adds a matrix.
            </summary>
            <param name="A">Matrix to be added.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Addition(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>The matrix sum of A and B, that is A + B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Substract(LinearAlgebra.Matrix)">
            <summary>
            Substract a matrix.
            </summary>
            <param name="A">Matrix to be substracted.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Subtraction(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Substracts two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix B substracted from matrix B, that is A - B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Multiply(LinearAlgebra.Matrix)">
            <summary>
            Multiplies with a matrix from the right. 
            </summary>
            <param name="A">Matrix to be multiplied from the right</param>
            <remarks>This will most likely change the size of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix A times matrix B, that is A * B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Mulitply(System.Double)">
            <summary>
            Multiplies with a scalar, that is, each element of the matrix is multiplied by the scalar.
            </summary>
            <param name="x">The scaling factor.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Multiplies a matrix with a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(System.Double,LinearAlgebra.Matrix)">
            <summary>
            Multiplies a scalar with a matrix.
            </summary>
            <param name="x">Scalar x.</param>
            <param name="A">Matrix A.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Divide(System.Double)">
            <summary>
            Didives by a scalar, that is, every element is divided by the scalar.
            </summary>
            <param name="x">The scalar to be dividing by.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Division(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Divides a matrix by a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A divided by scalar x, that is every element of A is divided by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Transpose">
            <summary>
            Transposes the matrix.
            </summary>
            <returns>The transposed matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Cholesky">
            <summary>
            Computes the Cholesky decomposition. 
            </summary>
            <returns>A lower triangular matrix containing the Cholesky decomposition.</returns>
            <remarks>This method does not check for the symmetry. It throws an exception if the matrix is not 
            square or if the matrix is not positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Inverse">
            <summary>
            Computes the inverse of a square positive definite matrix. 
            </summary>
            <returns>The inverse of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry. Moreover, the inverse method assumes
            that the matrix is positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.InverseCholeskyFactor">
            <summary>
            Computes the inverse of the Cholesky factor of the matrix.  
            </summary>
            <returns>The inverse of the Cholesky factor of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Determinant">
            <summary>
            Computes the determinant of a positive semidefinite matrix.  
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsNaN">
            <summary>
            Checks if any element of the matrix is not-a-number.
            </summary>
            <returns>Returns true the matrix contains at least one element that is not-a-number.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsInfinity">
            <summary>
            Checks if any element of the matrix is infinity.
            </summary>
            <returns>Returns true the matrix contains at least one element that is infinity.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.TestMatrixClass">
             <summary>
             This function tests the matrix class on some exemplary matrices.
             </summary>
             <remarks>This code should give the following output on the console
             <code>
            			A = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			2.0 * B = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B * 2.0 = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			C = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			-C = 
            			-1.00 	-3.00 	-6.00 	
            			-2.00 	-5.00 	-1.00 	
            
            			B + C = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B - C = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B' * C = 
            			5.00  	13.00 	8.00  	
            			13.00 	34.00 	23.00 	
            			8.00  	23.00 	37.00 	
            
            			I = 
            			1.00  	0.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	0.00  	
            			0.00  	0.00  	1.00  	0.00  	
            			0.00  	0.00  	0.00  	1.00  	
            
            			S = 
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            
            			B == C = True
            
            			A == (B - C) = True
            
            			I == S = False
            
            			D = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            			
            			F = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            
            			E = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			L = 
            			2.45  	0.00  	0.00  	
            			4.49  	1.35  	0.00  	
            			2.86  	1.60  	1.81  	
            
            			L * L' = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			E^-1 = 
            			2.31  	-1.36 	0.31  	
            			-1.36 	0.97  	-0.36 	
            			0.31  	-0.36 	0.31  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            			
            			det (E) = 
            			35.9999999999999		
            
            	</code>
             </remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Debug\LinearAlgebra.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\bin\Debug\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\bin\Debug\LinearAlgebra.pdb
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\bin\Debug\LinearAlgebra.xml
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Debug\LinearAlgebra.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Debug\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Debug\LinearAlgebra.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Release\LinearAlgebra.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\LinearAlgebra\obj\Release\LinearAlgebra.csprojResolveAssemblyReference.cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MSRanking\MSRanking.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSRanking</name>
    </assembly>
    <members>
        <member name="T:MSRanking.RankingSystems.ELORankingSystem">
            <summary>
            A class that represents the ELO ranking system. This class manages a list of player skill lists. 
            Game outcomes will be incorporated by the ELO update equation. 
            </summary>
        </member>
        <member name="T:MSRanking.ProbabilisticRankingSystem">
            <summary>
            The abstract base class that manages a list of player skill lists. A probabilistic ranking system is a ranking system which is
            based on a probabilistic model of the game outcome. Hence, in such a ranking system it is possible to compute the probability of a
            particualr game outcome.
            </summary>
        </member>
        <member name="T:MSRanking.RankingSystem">
            <summary>
            The abstract base class that manages a list of player skill lists. A ranking system will allow to incorporate a game outcomes 
            an update the inidividual player skills accordingly. Moreover, a ranking system will offer a predicition of the outcome of the 
            game to support matchmaking mechanisms. 
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystem.m_aPlayerSkillsList">
            <summary>
            The list of player skill list.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystem.#ctor(MSRanking.PlayerSkillsList)">
            <summary>
            Constructs a ranking system for a given list of player skill lists.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists. If the list is <c>null</c>, a new list of player
            skill lists will be created.</param>
        </member>
        <member name="M:MSRanking.RankingSystem.#ctor">
            <summary>
            Constructs a ranking system with a new list of player skill lists.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystem.ClearPlayerSkills">
            <summary>
            Clears all the chronologically sorted skills of all the players maintained by this ranking system.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystem.Update(MSRanking.Game)">
            <summary>
            Updates the player skills with a particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <returns>True, if the update was performed.</returns>
        </member>
        <member name="M:MSRanking.RankingSystem.PredictedOutcome(MSRanking.Game)">
            <summary>
            Computes the most likely outcome of a game.
            </summary>
            <param name="aGame">The game for which the outcome should be predicted.</param>
            <returns>The most likely ranking.</returns>
            <remarks>Note that this function ignores the actual game outcome which is contained in the game passed to the method.
            The method is supposed to throw an exception if the outcome cannot be predicted.</remarks>
        </member>
        <member name="P:MSRanking.RankingSystem.PlayerSkillsList">
            <summary>
            The list of player skill lists maintained by the ranking system.
            </summary>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.#ctor(MSRanking.PlayerSkillsList)">
            <summary>
            Constructs a probabilistic ranking system for a given list of player skill lists.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists. If this list is <c>null</c>, a new list of player
            skill lists will be created.</param>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.#ctor">
            <summary>
            Constructs a probabilistic ranking system with a new list of player skill lists.
            </summary>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.RankingProbability(MSRanking.Game,MSRanking.Ranking[])">
            <summary>
            Computes the probability for some rankings for a given game.
            </summary>
            <param name="aGame">The game for which the ranking probabilities should be computed.</param>
            <param name="aRankings">A list of rankings for which the probability should be computed.</param>
            <returns>The probabilities of the specified rankings for the given game. This method throws an exception if 
            the probabilities cannot be computed.</returns>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.Update(MSRanking.Game)">
            <summary>
            Updates the player skills with a particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <returns>True, if the update was performed.</returns>
            <remarks>This method uses the evidence based <c>Update</c> method and should not be overriden!</remarks>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.Update(MSRanking.Game,System.Double@)">
            <summary>
            Updates the player skills with a particular game and computes the evidence of the game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <param name="dEvidence">The evidence of the game (as an output parameter).</param>
            <returns>True, if the update was performed.</returns>
        </member>
        <member name="M:MSRanking.ProbabilisticRankingSystem.PredictedOutcome(MSRanking.Game)">
            <summary>
            Computes the most likely game outcome based on the probability for each ranking.
            </summary>
            <param name="aGame">The game for which the outcome should be predicted.</param>
            <returns>The most likely outcome.</returns>
            <remarks>The method throws an exception if the outcome cannot be predicted. At the moment, it works only for
            two-team games.</remarks>
        </member>
        <member name="F:MSRanking.RankingSystems.ELORankingSystem.m_dBeta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.ELORankingSystem.m_dAlpha">
            <summary>
            The decay factor for the estimation of the winning probability.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystems.ELORankingSystem.#ctor(MSRanking.PlayerSkillsList,System.Double,System.Double)">
            <summary>
            Constructs a new instance of the ELO ranking system.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dAlpha">The decay factor for the estimation of the winning probability.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.ELORankingSystem.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a new instance of the ELO ranking system with an empty list of player skill list.
            </summary>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dAlpha">The decay factor for the estimation of the winning probability.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.ELORankingSystem.Update(MSRanking.Game,System.Double@)">
            <summary>
            Updates the player skills given a particular game. This the update equation for two player games. 
            This function also computes the evidence of the particular game. 
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <param name="dEvidence">The evidence of the game (as an output parameter).</param>
            <returns>True is the update was performed.</returns>
        </member>
        <member name="M:MSRanking.RankingSystems.ELORankingSystem.RankingProbability(MSRanking.Game,MSRanking.Ranking[])">
            <summary>
            Computes the marginalised probability for some rankings for a given game.
            </summary>
            <param name="aGame">The game for which the ranking probabilities should be computed.</param>
            <param name="aRankings">A list of rankings for which the probability should be computed.</param>
            <returns>The probabilities of the specified rankings for the given game. This method throws an exception if 
            the probabilities cannot be computed.</returns>
        </member>
        <member name="P:MSRanking.RankingSystems.ELORankingSystem.Beta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.ELORankingSystem.Alpha">
            <summary>
            The decay factor for the estimation of the winning probability.
            </summary>
        </member>
        <member name="T:MSRanking.RankingSystems.Halo2RankingSystem">
            <summary>
            A class that represents the Halo 2 ranking system. This class manages a list of player skill lists. 
            Game outcomes will be incorporated by the Halo 2 update equation. 
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.Halo2RankingSystem.m_iHalo2DeltaTable">
            <summary>
            The table of experience points deltas. The columns are as follows
            <code>
            	Higher ranked oppoents wins
            	Higher ranked oppoents loses
            	Lower ranked opponent wins
            	Lower ranked opponent loses
            </code>
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.Halo2RankingSystem.m_dLossFactor">
            <summary>
            The table of loss factors for the first ten levels. All the other levels will have
            a loss factor of 1.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystems.Halo2RankingSystem.#ctor">
            <summary>
            Constructs a new instance of the HALO 2 ranking system.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystems.Halo2RankingSystem.#ctor(MSRanking.PlayerSkillsList)">
            <summary>
            Constructs a new instance of the HALO 2 ranking system.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.Halo2RankingSystem.Update(MSRanking.Game)">
            <summary>
            Updates the player skills given a particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <returns>True, if the update was performed.</returns>
        </member>
        <member name="M:MSRanking.RankingSystems.Halo2RankingSystem.PredictedOutcome(MSRanking.Game)">
            <summary>
            Computes the most likely outcome by comparing the sum of the skill points of all players participating.
            </summary>
            <param name="aGame">The game for which the outcome should be predicted.</param>
            <returns>The predicted ranking.</returns>
        </member>
        <member name="T:MSRanking.RankingSystems.Algorithm">
            <summary>
            Different types of approximation algorithm for the multi-team case.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.Algorithm.GenzAlgorithm">
            <summary>
            Genz' algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.Algorithm.EPAlgorithm">
            <summary>
            Gaussien EP algorithm as described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001.
            </summary>
        </member>
        <member name="T:MSRanking.RankingSystems.MuSigmaRankingSystem">
            <summary>
            A class that represents the MuSigma ranking system. This class manages a list of player skill lists. 
            Game outcomes will be incorporated by the MuSigma update equation. 
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.m_dBeta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.m_dEpsilon">
            <summary>
            The draw margin on the performance scale.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.m_dTau">
            <summary>
            The increase in standard deviation responsible for modelling the dynamics of the skill belief.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.m_iNumberOfIterations">
            <summary>
            The number of iterations of the numerical approximation code.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.m_aApproximationAlgorithm">
            <summary>
            The particular algorithm used.
            </summary>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.#ctor(MSRanking.PlayerSkillsList,System.Double,System.Double,System.Double,MSRanking.RankingSystems.Algorithm,System.Int32)">
            <summary>
            Constructs a new instance of the MuSigma ranking system.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dEpsilon">The draw margin on the performance scale.</param>
            <param name="dTau">The increase in standard deviation that accounts for dynamics.</param>
            <param name="aApproximationAlgorithm">The approximation algorithm used.</param>
            <param name="iNumberOfIterations">The number of iterations whenever numerical integration is used.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.#ctor(MSRanking.PlayerSkillsList,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Constructs a new instance of the MuSigma ranking system using the EP algorithm for approximation.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dEpsilon">The draw margin on the performance scale.</param>
            <param name="dTau">The increase in standard deviation that accounts for dynamics.</param>
            <param name="iNumberOfIterations">The number of iterations whenever numerical integration is used.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.#ctor(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Constructs a new instance of the MuSigma ranking system with an empty list of player skill list using the EP algorithm.
            </summary>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dEpsilon">The draw margin on the performance scale.</param>
            <param name="dTau">The increase in standard deviation that accounts for dynamics.</param>
            <param name="iNumberOfIterations">The number of iterations whenever numerical integration is used.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new instance of the MuSigma ranking system with an empty list of player skill list and a fixed number of 
            20 iterations for the numerical integration using the EP algorithm.
            </summary>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dEpsilon">The draw margin on the performance scale.</param>
            <param name="dTau">The increase in standard deviation that accounts for dynamics.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.#ctor(MSRanking.PlayerSkillsList,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new instance of the MuSigma ranking system with a fixed number of 20 iterations for the numerical integration using the EP algorithm.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
            <param name="dBeta">The standard deviation of the performance distribution.</param>
            <param name="dEpsilon">The draw margin on the performance scale.</param>
            <param name="dTau">The increase in standard deviation that accounts for dynamics.</param>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.ComputeInternalGameRepresentation(MSRanking.Game,MSRanking.Ranking)">
            <summary>
            Computes the internal game representation for a particular ranking.
            </summary>
            <param name="aGame">The game to be represented.</param>
            <param name="aRanking">The ranking of the game.</param>
            <returns></returns>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.GetSkillBelief(MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation,System.DateTime)">
            <summary>
            Gets the skill beliefs of all players participating in a game.
            </summary>
            <param name="aInternalGame">Internal representation of the game.</param>
            <param name="aDate">Date at which we would like to know the skill beliefs. If the time is at zero ticks, the latest 
            skill belief will be used.</param>
            <returns>An internal representation of the skill belief.</returns>
            <remarks>Note that this function already adds the amount of \tau^2 if it is queried for the latest skill beliefs.</remarks>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.Update(MSRanking.Game,System.Double@)">
            <summary>
            Updates the player skills given a particular game. This the general update equation for an arbitrary number
            of teams and players per team. This function also computes the evidence of this particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <param name="dEvidence">The evidence of the game (as an output parameter).</param>
            <returns>True is the update was performed.</returns>
        </member>
        <member name="M:MSRanking.RankingSystems.MuSigmaRankingSystem.RankingProbability(MSRanking.Game,MSRanking.Ranking[])">
            <summary>
            Computes the marginalised probability for some rankings for a given game.
            </summary>
            <param name="aGame">The game for which the ranking probabilities should be computed.</param>
            <param name="aRankings">A list of rankings for which the probability should be computed.</param>
            <returns>The probabilities of the specified rankings for the given game. This method throws an exception if 
            the probabilities cannot be computed.</returns>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.Beta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.Epsilon">
            <summary>
            The draw margin on the performance scale.
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.DrawProbability">
            <summary>
            The draw probability on the performance scale. Setting this property changes <c>Epsilon</c>
            for the current value of <c>Beta</c>.
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.Tau">
            <summary>
            The increase in standard deviation of the skill belief (dynamics prior).
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.NumberOfIterations">
            <summary>
            Number of iterations of the numerical approximation code.
            </summary>
        </member>
        <member name="P:MSRanking.RankingSystems.MuSigmaRankingSystem.ApproximationAlgorithm">
            <summary>
            Approximation algorithm for the multi-team and multi-player case.
            </summary>
        </member>
        <member name="T:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation">
            <summary>
            This struct holds the internal representation of a game in terms of matrices.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.A">
            <summary>
            A matrix with as many rows as players and as many column are there are teams (minus one).
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.a">
            <summary>
            The lower integration limits.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.b">
            <summary>
            The upper integration limits.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.iIndexToPlayerID">
            <summary>
            A mapping from the index to the global player ID.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalSkillBelief.mu">
            <summary>
            Means of skill beliefs.
            </summary>
        </member>
        <member name="F:MSRanking.RankingSystems.MuSigmaRankingSystem.InternalSkillBelief.Sigma">
            <summary>
            Covariance matrix  of skill beliefs.
            </summary>
        </member>
        <member name="T:MSRanking.Skills.ELOSkill">
            <summary>
            A class to represent the skill in the ELO system, that is, a single skill point measure.
            </summary>
        </member>
        <member name="T:MSRanking.Skill">
            <summary>
            Abstract base class of all skills. Since we are interested in rankings, each skill must be convertible into a (skill) level 
            and a more fine-grained skill point measure. For example, the number of kills, the total ammount of experience points, etc. are valid 
            skill measures. Since we have both levels and skill points, a fractional level will tell us the fractional amount of difference 
            between the level and the skill points.
            </summary>
        </member>
        <member name="M:MSRanking.Skill.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:MSRanking.Skill.Points">
            <summary>
            The skill points of the player. 
            </summary>
            <remarks>Skill points are the exact, fine-grained summary of skill.</remarks>
        </member>
        <member name="P:MSRanking.Skill.Level">
            <summary>
            A skill level of the player.
            </summary>
            <remarks>Levels are the broad version of the skill points.</remarks>
        </member>
        <member name="P:MSRanking.Skill.FractionalLevel">
            <summary>
            The fractional difference between the level and the points. This value should always be between 0 and 1.
            </summary>
        </member>
        <member name="F:MSRanking.Skills.ELOSkill.m_dPoints">
            <summary>
            The skill points of the player.
            </summary>
        </member>
        <member name="M:MSRanking.Skills.ELOSkill.#ctor(System.Double)">
            <summary>
            Constructor which initialises the score of the player.
            </summary>
            <param name="dPoints">Initial skill points.</param>
        </member>
        <member name="M:MSRanking.Skills.ELOSkill.#ctor">
            <summary>
            Constructor which initialises the skill points to 1200.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.ELOSkill.Points">
            <summary>
            Skill points of the player. 
            </summary>
        </member>
        <member name="P:MSRanking.Skills.ELOSkill.Level">
            <summary>
            Skill level of the player. The skill level is obtained by dividing the skill points by 50 and making sure it never gets negative.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.ELOSkill.FractionalLevel">
            <summary>
            Fractional skill level of the player.
            </summary>
        </member>
        <member name="T:MSRanking.Skills.Halo2Skill">
            <summary>
            A class to represent the skill in the Halo 2 system, that is, the current experience points.
            </summary>
        </member>
        <member name="F:MSRanking.Skills.Halo2Skill.m_iExperiencePoints">
            <summary>
            The experience points of the player.
            </summary>
        </member>
        <member name="F:MSRanking.Skills.Halo2Skill.m_iLevel">
            <summary>
            The level of the player.
            </summary>
        </member>
        <member name="M:MSRanking.Skills.Halo2Skill.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor which initialises the experience points and levels.
            </summary>
            <param name="iExperiencePoints">Experience points.</param>
            <param name="iLevel">Level</param>
        </member>
        <member name="M:MSRanking.Skills.Halo2Skill.AddExperiencePoints(System.Int32)">
            <summary>
            Adds experience points. 
            </summary>
            <remarks>Makes sure that the skill level only updates downwards if the experience points falls below halfway 
            the skill level thresholds of the skill level below. This feature adds an effective momentum to the movement of the skill 
            level downwards.
            </remarks>
        </member>
        <member name="P:MSRanking.Skills.Halo2Skill.ExperiencePoints">
            <summary>
            The number of experience points.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.Halo2Skill.Points">
            <summary>
            The skill points of the player. This is just the experience points.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.Halo2Skill.Level">
            <summary>
            The skill level of the player. 
            </summary>
        </member>
        <member name="P:MSRanking.Skills.Halo2Skill.FractionalLevel">
            <summary>
            Fractional skill level of the player.
            </summary>
        </member>
        <member name="T:MSRanking.Skills.MuSigmaSkill">
            <summary>
            A class to represent the skill belief in the MuSigma system, that is, the parameters \mu (mean) and \sigma (standard deviation) of 
            the Gaussian skill belief.
            </summary>
        </member>
        <member name="F:MSRanking.Skills.MuSigmaSkill.m_dMu">
            <summary>
            The mean of the skill belief.
            </summary>
        </member>
        <member name="F:MSRanking.Skills.MuSigmaSkill.m_dSigma">
            <summary>
            The standard deviation of the skill belief.
            </summary>
        </member>
        <member name="M:MSRanking.Skills.MuSigmaSkill.#ctor(System.Double,System.Double)">
            <summary>
            Constructor which initialises mean and standard deviation of the skill belief.
            </summary>
            <param name="dMu">Mean of the skill belief.</param>
            <param name="dSigma">Standard deviation of the skill belief.</param>
        </member>
        <member name="M:MSRanking.Skills.MuSigmaSkill.#ctor">
            <summary>
            Constructor which initialises the skill belief with mean of 1200 and standard
            deviation of 400.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.MuSigmaSkill.Mu">
            <summary>
            The mean of the skill belief.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.MuSigmaSkill.Sigma">
            <summary>
            The standard deviation of the skill belief.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.MuSigmaSkill.Points">
            <summary>
            Skill points of the player. 
            </summary>
            <remarks>The skill points of the player is the lower 99% quantile of the skill belief. This is a very conservative 
            estimate of the true skill of a player and should always lower bound the true skill.</remarks>
        </member>
        <member name="P:MSRanking.Skills.MuSigmaSkill.Level">
            <summary>
            Skill level of the player. The skill level is obtained by dividing the skill points by 50 and making sure it never gets negative.
            </summary>
        </member>
        <member name="P:MSRanking.Skills.MuSigmaSkill.FractionalLevel">
            <summary>
            Fractional skill level of the player.
            </summary>
        </member>
        <member name="T:MSRanking.Game">
            <summary>
            A class to represent a single game between some teams each of which comprised of several players. Each game also has
            to have the date at which it ended. This time is assumed to be the time when the game finsihed as each team will
            know about its scores (which is only possible AFTER the game).
            </summary>
        </member>
        <member name="F:MSRanking.Game.m_aDate">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="F:MSRanking.Game.m_aTeams">
            <summary>
            A variable sized list of teams.
            </summary>
        </member>
        <member name="M:MSRanking.Game.#ctor(System.DateTime,System.Int32)">
            <summary>
            Constructs a game that ended at a specified date between at a maximal number of teams. 
            </summary>
            <param name="aDate">Date at which the game ended.</param>
            <param name="iMaxNumberOfTeams">Maximum number of teams.</param>
            <remarks>An exception will be thrown if more than the specified number of teams are added.</remarks>
        </member>
        <member name="M:MSRanking.Game.#ctor(System.DateTime)">
            <summary>
            Constructs a game that ended at a specified date between an arbitrary number of teams.
            </summary>
            <param name="aDate">Date at which the game ended.</param>
        </member>
        <member name="M:MSRanking.Game.AddTeam(MSRanking.Team)">
            <summary>
            Adds a team to the game.
            </summary>
            <param name="aTeam">The team to be added.</param>
            <returns>The team index of the team added.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRanking.Game.GetTeam(System.Int32)">
            <summary>
            Gets the team at a specified index.
            </summary>
            <param name="iTeamIndex">The index of the team.</param>
            <returns>The team at the given index or null, if the index is wrong.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRanking.Game.GetWinner(System.Int32,System.Int32)">
            <summary>
            Gets the winner between two teams.
            </summary>
            <param name="iTeamIndex1">Team index of team 1.</param>
            <param name="iTeamIndex2">Team index of team 2.</param>
            <returns>Returns +1 if team 1 won against team 2, -1 if team 2 won against team 1, and 0 it both teams
            draw.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRanking.Game.RemoveEmptyTeams">
            <summary>
            Removes all empty teams.
            </summary>
        </member>
        <member name="P:MSRanking.Game.Date">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="P:MSRanking.Game.NumberOfTeams">
            <summary>
            The number of participating teams.
            </summary>
        </member>
        <member name="P:MSRanking.Game.NumberOfPlayers">
            <summary>
            The total number of players participating in the game.
            </summary>
        </member>
        <member name="P:MSRanking.Game.PlayerIDs">
            <summary>
            All player IDs of all players in the game.
            </summary>
        </member>
        <member name="P:MSRanking.Game.TeamIDs">
            <summary>
            All team indicies of all players in the game.
            </summary>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="P:MSRanking.Game.Ranking">
            <summary>
            The full ranking of all teams based on the team scores.
            </summary>
        </member>
        <member name="T:MSRanking.GameList">
            <summary>
            A class which manages a chronological series of games. Games will automatically be sorted by the date at which they ended. Note that 
            this class will enforce that no two games ended at EXACTLY the same time.
            </summary>
        </member>
        <member name="F:MSRanking.GameList.m_aGameList">
            <summary>
            A variable sized list of games sorted by the time the game ended.
            </summary>
        </member>
        <member name="M:MSRanking.GameList.#ctor">
            <summary>
            Default constructor which initialises an empty game list.
            </summary>
        </member>
        <member name="M:MSRanking.GameList.Clear">
            <summary>
            Clears (empties) the game list.
            </summary>
        </member>
        <member name="M:MSRanking.GameList.AddGame(MSRanking.Game)">
            <summary>
            Adds a new game to the game list. 
            </summary>
            <param name="aGame">A new game.</param>
            <remarks>An exception is thrown if there already exists a game at the specified date.</remarks>
        </member>
        <member name="M:MSRanking.GameList.GetGame(System.Int32)">
            <summary>
            Gets the game at a specified index.
            </summary>
            <param name="iIndex">The index.</param>
            <returns>The Game at the specified index, or null if the index was out of range.</returns>
            <remarks>The game index is effectively the position of the game in the chronological sorting of all games 
            with respect to the date at which the game was played.</remarks>
        </member>
        <member name="P:MSRanking.GameList.NumberOfGames">
            <summary>
            The total number of games.
            </summary>
        </member>
        <member name="P:MSRanking.GameList.GameDates">
            <summary>
            All game dates.
            </summary>
        </member>
        <member name="T:MSRanking.PlayerList">
            <summary>
            A class to manage a list of players. Each player will be uniquely represented by a name. The class will also manage a zero-based 
            unique player identification (ID) for each player.  
            </summary>
        </member>
        <member name="F:MSRanking.PlayerList.m_aPlayerID">
            <summary>
            Mapping from player names to unique player IDs.
            </summary>
        </member>
        <member name="F:MSRanking.PlayerList.m_aPlayerNames">
            <summary>
            Mapping from unique player IDs to player names.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerList.#ctor">
            <summary>
            Default constructor which initialises an empty player list.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerList.Clear">
            <summary>
            Clears (empties) the player list.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerList.AddPlayer(System.String)">
            <summary>
            Adds a player to the player list. 
            </summary>
            <param name="szPlayerName">The name of the player.</param>
            <returns>The unique ID of the added player or -1 if the player exists already.</returns>
            <remarks>The player ID is a zero-based index which grows for every player added.</remarks>
        </member>
        <member name="M:MSRanking.PlayerList.GetPlayerID(System.String)">
            <summary>
            Gets the player ID for a given player name.
            </summary>
            <param name="szPlayerName">The name of the player.</param>
            <returns>The ID of the player or -1, if the player does not exists.</returns>
        </member>
        <member name="M:MSRanking.PlayerList.GetPlayerName(System.Int32)">
            <summary>
            Gets the name for a given player ID.
            </summary>
            <param name="iPlayerID">The player ID.</param>
            <returns>The name of the player or null if the player ID is out of range.</returns>
        </member>
        <member name="P:MSRanking.PlayerList.NumberOfPlayers">
            <summary>
            Total number of players in the player list.
            </summary>
        </member>
        <member name="P:MSRanking.PlayerList.PlayerNames">
            <summary>
            A string array of all player names.
            </summary>
        </member>
        <member name="T:MSRanking.PlayerSkills">
            <summary>
            A class which manages a chronological series of skills for a player. The date of a skill 
            will mean that the skill is valid until this date (including it) but nothing will be known 
            afterwards. Note that this class will only allow inserting new skills <c>after</c> the last 
            inserted skill. 
            </summary>
        </member>
        <member name="F:MSRanking.PlayerSkills.m_aPlayerSkillList">
            <summary>
            A variable sized list of skills.
            </summary>
        </member>
        <member name="F:MSRanking.PlayerSkills.m_aDatesList">
            <summary>
            A variable sized list of dates at which the skills are valid.
            </summary>
        </member>
        <member name="F:MSRanking.PlayerSkills.m_iMaxLength">
            <summary>
            The maximal length of the array lists. 
            </summary>
        </member>
        <member name="F:MSRanking.PlayerSkills.m_iCurrentElementIndex">
            <summary>
            The index of the current element.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkills.#ctor">
            <summary>
            Construcuts a variable sized list of skills of given maximal length.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkills.#ctor(System.Int32)">
            <summary>
            Construcuts a variable sized list of skills of given maximal length.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkills.AddSkill(MSRanking.Skill,System.DateTime)">
            <summary>
            Adds a new skill valid at a specified date.
            </summary>
            <param name="aSkill">The new skill.</param>
            <param name="aDate">Time at which the skill is valid.</param>
            <remarks>The date of a skill will mean that the skill is valid until this date (including 
            it) but nothing will be known afterwards. This method will throw an exception if the time 
            is before ar at the latest skill time.</remarks>
        </member>
        <member name="M:MSRanking.PlayerSkills.Clear">
            <summary>
            Clears (empties) the list of player skill.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkills.GetLatestSkill(System.DateTime)">
            <summary>
            Gets the latest skill until (and including) a specific date.
            </summary>
            <param name="aDate">The target date.</param>
            <returns>The skill that is nearest in the past to the target data or null if there is no skill.</returns>
        </member>
        <member name="P:MSRanking.PlayerSkills.LatestSkill">
            <summary>
            The latest skill (or null if the list of skills is empty).
            </summary>
        </member>
        <member name="P:MSRanking.PlayerSkills.LatestDate">
            <summary>
            The latest date (or 0 ticks if the list of skills is empty).
            </summary>
        </member>
        <member name="P:MSRanking.PlayerSkills.NumberOfSkills">
            <summary>
            Total number of skills.
            </summary>
        </member>
        <member name="P:MSRanking.PlayerSkills.Skills">
            <summary>
            The list of skills sorted by chronologically.
            </summary>
        </member>
        <member name="P:MSRanking.PlayerSkills.Dates">
            <summary>
            The sorted list of dates.
            </summary>
        </member>
        <member name="T:MSRanking.PlayerSkillsList">
            <summary>
            A class that manages list of skills indexed by players. Each player will be identified by a unqiue player ID. This
            list is managing a chronologically sorted list of skills for each player. The PlayerSkills class and this class should not be confused: 
            Whereas the PlayerSkills class manages all skills of a single player in time, this class manages a list of PlayerSkills for all players.
            </summary>
        </member>
        <member name="F:MSRanking.PlayerSkillsList.m_aSkillsList">
            <summary>
            A variable sized mapping between player IDs and player skills.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkillsList.#ctor">
            <summary>
            Constructs a variable sized list of skill lists.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkillsList.Clear">
            <summary>
            Clears (empties) the list of skill lists.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkillsList.ClearPlayerSkills">
            <summary>
            Clears (empties) the chronologically sorted list of skills for each player but retains
            its own internal list of skill lists.
            </summary>
        </member>
        <member name="M:MSRanking.PlayerSkillsList.AddPlayerSkills(MSRanking.PlayerSkills,System.Int32)">
            <summary>
            Adds a the chronologically sorted list of skills for a new player with a specified unique player index.
            </summary>
            <param name="aPlayerSkills">A chronologically sorted list of skills for the player.</param>
            <param name="iPlayerID">The unique player ID.</param>
        </member>
        <member name="M:MSRanking.PlayerSkillsList.GetPlayerSkills(System.Int32)">
            <summary>
            Gets the list of skills for a given player ID.
            </summary>
            <param name="iPlayerID">The unique player ID.</param>
            <returns>The chronologically sorted list of skills for the player with the specified ID or null if 
            the player does not exists.</returns>
        </member>
        <member name="T:MSRanking.Ranking">
            <summary>
            A class that represents a ranking between n elements. In this class, rank 1 is assumed to be the highest rank. Moreover, it is possible
            that two elements are on the same rank. In this case, no rank gap is introduced; a valid ranking is thus 1,1,2,3 instead of 1,1,3,4.
            </summary>
        </member>
        <member name="F:MSRanking.Ranking.m_iRanks">
            <summary>
            The ranks of each element. Note that the ranks will always be between 1 and m_iRanks.Length.
            </summary>
        </member>
        <member name="M:MSRanking.Ranking.#ctor(System.Int32)">
            <summary>
            Constructs an identity ranking between a specified number of elements. The first element will be of highest rank and
            the last element will be of lowest rank.
            </summary>
            <param name="iNumberOfElements">Number of elements.</param>
        </member>
        <member name="M:MSRanking.Ranking.#ctor(System.Int32[])">
            <summary>
            Constructs a ranking based on the values given in an vector of nunbers.
            </summary>
            <param name="iElements">A list of integers.</param>
            <remarks>This method will have to call sorting routines so it may become slow when passed a long list of integers!</remarks>
        </member>
        <member name="M:MSRanking.Ranking.Factorial(System.Int32)">
            <summary>
            Computes the factorial of n.
            </summary>
            <param name="n">The parameter <c>n</c>.</param>
            <returns>The factorial of <c>n</c>.</returns>
        </member>
        <member name="M:MSRanking.Ranking.GetWinner(System.Int32,System.Int32)">
            <summary>
            Compares the rank of two elements.
            </summary>
            <param name="i">Index of the first element.</param>
            <param name="j">Index of the second element.</param>
            <returns>Returns +1 is the first element is of higher rank than the second element, -1 if the 
            second element is of higher rank than the first element, or 0 if both elements are of same rank.</returns>
        </member>
        <member name="M:MSRanking.Ranking.Difference(MSRanking.Ranking)">
            <summary>
            Computes the difference to another ranking.
            </summary>
            <param name="aRanking">Ranking to be compared with.</param>
            <returns>A value between 0 and 1 indicating the difference between the two rankings.</returns>
            <remarks>The ranking difference will be computed as the fraction of pairs of elements where the two rankings disagree. This
            can be seen as the fractional difference between the number of swapping operations that bubble sort would take to sort each
            of the two rankings.</remarks>
        </member>
        <member name="P:MSRanking.Ranking.Indicies">
            <summary>
            Zero-based indicies which reflect the rankings.
            </summary>
        </member>
        <member name="P:MSRanking.Ranking.NumberOfElements">
            <summary>
            Number of elements in the ranking.
            </summary>
        </member>
        <member name="P:MSRanking.Ranking.NumberOfEquivalenceClasses">
            <summary>
            Number of equivalent rankings.
            </summary>
        </member>
        <member name="T:MSRanking.Team">
            <summary>
            A class to represent a team of players together with their scores. Each player will be represented by a unique integer ID.
            The score will be an integer value.
            </summary>
        </member>
        <member name="F:MSRanking.Team.m_aPlayerID">
            <summary>
            The variable size list of player ID's that form the team.
            </summary>
        </member>
        <member name="F:MSRanking.Team.m_aScore">
            <summary>
            The variable size list of player scores for each player on the team. 
            </summary>
        </member>
        <member name="M:MSRanking.Team.#ctor(System.Int32)">
            <summary>
            Construcuts a new team with a given maximal number of players.
            </summary>
            <param name="iMaxNumberOfPlayers">Maximal number of players.</param>
            <remarks>If more than the specified number of players are added an exception will be thrown.</remarks>
        </member>
        <member name="M:MSRanking.Team.#ctor">
            <summary>
            Construcuts a new team with a variable number of players.
            </summary>
        </member>
        <member name="M:MSRanking.Team.AddPlayer(System.Int32,System.Int32)">
            <summary>
            Adds a new player to the team.
            </summary>
            <param name="iPlayerID">Player ID of the new player.</param>
            <param name="iScore">Score of the new player.</param>
            <returns>The player index of the added player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class.</remarks>
        </member>
        <member name="M:MSRanking.Team.GetPlayerID(System.Int32)">
            <summary>
            Get the player ID for a player at specified index.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The global player ID or -1 if the index is out of range.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
        </member>
        <member name="M:MSRanking.Team.GetPlayerScore(System.Int32)">
            <summary>
            Gets the score for the player at a specified index.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The score of the player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
        </member>
        <member name="P:MSRanking.Team.NumberOfPlayers">
            <summary>
            Total number of players in the team.
            </summary>
        </member>
        <member name="P:MSRanking.Team.TeamScore">
            <summary>
            Score of the team.
            </summary>
            <remarks>The score of a team is always the the sum of the scores of all players in the team.</remarks>
        </member>
        <member name="P:MSRanking.Team.PlayerIDs">
            <summary>
            All player IDs for the entire team.
            </summary>
        </member>
        <member name="P:MSRanking.Team.PlayerScores">
            <summary>
            Scores for every player on the team.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MSRanking\obj\Debug\MSRanking.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\obj\Debug\MSRanking.csprojResolveAssemblyReference.cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MSRanking\obj\Release\MSRanking.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\obj\Release\MSRanking.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\bin\Release\MSRanking.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\bin\Release\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\bin\Release\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MSRanking\obj\Release\MSRanking.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\2.2.0.0\Documentation\Geo Segment V2 DB Server Installation Guide.docx ===
[Content_Types].xml  cUWP'L8 <jh"|2 _rels/.rels  A$>"f3 .b*lI word/_rels/document.xml.rels  word/document.xml 1xnpgO ]~3zc H=rEo bN)w# e0r|\_ Qm4dJ?w cK}6e /ZaK0/3 s(w:!\ .JhmVx ,}.iW= ?WWgW u-.|}Y (~JK5 ?c!t(U (b'3pb {f=XA 4WOH= z\1s.n Bf,dI RXi9e i31mG tdR0T 7V5C!\ %6EW*} @);L# 0yd9;d ^vJ?SF %\cU1 z#Zq2 YZGLGg `=Q8, u0U}Kp P5RdQ ~2/5d* %65QG rqN J |_9S2 f?sM{ f )@V KWvFy w;mv/b d,AZ  TASl] g%xxG0' }?<jn d:x?A =#hNm QK[[q P,%:& c4-yYe word/footnotes.xml *f?J3 3OM(\\ word/endnotes.xml 3yV-UU!6 word/header1.xml add 5jp ESh'k word/theme/theme1.xml F{oc' FPA}H xME$& ~\QYo+ +ek<l )Q+hkk dB|ULvaD +@Ya)hgm word/settings.xml l'm3u a3YJS HPM x f(:Dr )'(:" @Y%#/ word/webSettings.xml Z8|5[ 5@3:z word/styles.xml "K>In pX198 &Xwb]>I$ @z&@h j'cFj @6-r# dHxd" #wPZMZL WL%%VN ?3z^" \h,>bnt _ijkcw 4GEHU "%EI{^ cTY(.ue LW:ia ,} v[ lO/</ word/numbering.xml vD]l9 S7T=J bOlg4 4igI/ /P?:+ w_w(* }c22S (Q%0W $KxP%@ ;MeTN tTJPKr/ P]zb9 B5mq8 Bcs\M >m#?2  docProps/core.xml  Izv2? ^q i"x word/fontTable.xml DR );>C }5@sc 4-H6@ uTIND L3Z5i6 'EU`Hf docProps/app.xml  d0fLa wB[by [Content_Types].xmlPK _rels/.relsPK word/_rels/document.xml.relsPK word/document.xmlPK word/footnotes.xmlPK word/endnotes.xmlPK word/header1.xmlPK word/theme/theme1.xmlPK word/settings.xmlPK word/webSettings.xmlPK word/styles.xmlPK word/numbering.xmlPK docProps/core.xmlPK word/fontTable.xmlPK docProps/app.xmlPK
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigma\MuSigma.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MuSigma</name>
    </assembly>
    <members>
        <member name="T:MuSigma.AboutWindow">
            <summary>
            A class that represent the "About" dialog window for the MuSigma application. Displays some fancy HALO 2 image
            and copyright information.
            </summary>
        </member>
        <member name="F:MuSigma.AboutWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MuSigma.AboutWindow.#ctor">
            <summary>
            Constructs a new instance of an about window.
            </summary>
        </member>
        <member name="M:MuSigma.AboutWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.AboutWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MuSigma.Halo2Game">
            <summary>
            A class to represent a HALO 2 game. In addition to the functionality of the base class, this class also stores
            the hopper, the variant and the map name of the game.
            </summary>
        </member>
        <member name="F:MuSigma.Halo2Game.m_szMap">
            <summary>
            Name of the map.
            </summary>
        </member>
        <member name="F:MuSigma.Halo2Game.m_szVariant">
            <summary>
            Name of the game variant.
            </summary>
        </member>
        <member name="F:MuSigma.Halo2Game.m_szHopper">
            <summary>
            Name of the game hopper.
            </summary>
        </member>
        <member name="M:MuSigma.Halo2Game.#ctor(System.DateTime,System.String,System.String,System.String)">
            <summary>
            Constructs a HALO 2 game of a specific HALO 2 variant that ended at a specific date on a given HALO 2 map 
            in a given HALO 2 hopper.
            </summary>
            <param name="aDate">Date at which the HALO 2 game ended.</param>
            <param name="szMap">Name of the HALO 2 map at which the game happened.</param>
            <param name="szVariant">Name of the HALO 2 game variant.</param>
            <param name="szHopper">Name of the HALO 2 hopper.</param>
        </member>
        <member name="P:MuSigma.Halo2Game.Map">
            <summary>
            Name of the HALO 2 map where the game took place.
            </summary>
        </member>
        <member name="P:MuSigma.Halo2Game.Variant">
            <summary>
            Name of the HALO 2 variant of the game.
            </summary>
        </member>
        <member name="P:MuSigma.Halo2Game.Hopper">
            <summary>
            Name of the HALO 2 hopper in which the game took place.
            </summary>
        </member>
        <member name="T:MuSigma.Halo2GameList">
            <summary>
            A class which manages a series of games. Games will not be automatically be sorted by the date at which they ended but it is assumed. 
            that the games are added in chronological order. Note that this class will enforce that no two games ended at EXACTLY the same time.
            </summary>
        </member>
        <member name="F:MuSigma.Halo2GameList.m_aHalo2GameList">
            <summary>
            A variable sized list of games.
            </summary>
        </member>
        <member name="M:MuSigma.Halo2GameList.#ctor">
            <summary>
            Default constructor which initialises an empty game list.
            </summary>
        </member>
        <member name="M:MuSigma.Halo2GameList.Clear">
            <summary>
            Clears (empties) the game list.
            </summary>
        </member>
        <member name="M:MuSigma.Halo2GameList.AddGame(MuSigma.Halo2Game)">
            <summary>
            Adds a new game to the game list. 
            </summary>
            <param name="aHalo2Game">A new game.</param>
            <remarks>An exception is thrown if there already exists a game at the specified date.</remarks>
        </member>
        <member name="M:MuSigma.Halo2GameList.GetGame(System.Int32)">
            <summary>
            Gets the game at a specified index.
            </summary>
            <param name="iIndex">The index.</param>
            <returns>The Game at the specified index, or null if the index was out of range.</returns>
        </member>
        <member name="P:MuSigma.Halo2GameList.NumberOfGames">
            <summary>
            The total number of games.
            </summary>
        </member>
        <member name="P:MuSigma.Halo2GameList.GameDates">
            <summary>
            All game dates.
            </summary>
        </member>
        <member name="T:MuSigma.LogWindow">
            <summary>
            A class that represents a dialog form for displaying additional logging information. Each log
            must fit within a line and is displayed in a non-selectable listbox. 
            </summary>
        </member>
        <member name="F:MuSigma.LogWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MuSigma.LogWindow.#ctor">
            <summary>
            Constrcuts a new instance of a log window.
            </summary>
        </member>
        <member name="M:MuSigma.LogWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.LogWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.LogWindow.ClearLogList">
            <summary>
            Clears the log list.
            </summary>
        </member>
        <member name="M:MuSigma.LogWindow.AddLine(System.String)">
            <summary>
            Adds a new line of log information. 
            </summary>
            <param name="szLine">Line to be added.</param>
        </member>
        <member name="P:MuSigma.LogWindow.LogName">
            <summary>
            Log name (appearing on the window title).
            </summary>
        </member>
        <member name="T:MuSigma.MainWindow">
            <summary>
            This is the main form of the MuSigma application. It provides the UI for all the functionality of reading data, running
            different ranking algorithms and analysing the ranking and matchmaking quality.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_iProgressBarGranularity">
            <summary>
            The granularity of the progress bar.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szMuSigmaBeta">
            <summary>
            Unique parameter string for the 'MuSigma' Beta parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szMuSigmaEpsilon">
            <summary>
            Unique parameter string for the 'MuSigma' Epsilon parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szMuSigmaTau">
            <summary>
            Unique parameter string for the 'MuSigma' Tau parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szMuSigmaIterations">
            <summary>
            Unique parameter string for the 'MuSigma' Iterations parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szMuSigmaApproximationAlgorithm">
            <summary>
            Unique parameter string for the 'MuSigma' Approximation algorithm parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szELOBeta">
            <summary>
            Unique parameter string for the 'ELO' Beta parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_szELOAlpha">
            <summary>
            Unique parameter string for the 'ELO' Alpha parameter.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aHalo2PlayerIDToInternalPlayerID">
            <summary>
            List of mapping from the Halo 2 internal player IDs to the ranking system internal player IDs.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aInternalPlayerIDToHalo2PlayerID">
            <summary>
            List of mapping from the ranking system internal player IDs to the Halo 2 internal player IDs.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aPlayerList">
            <summary>
            List of players.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aGameList">
            <summary>
            List of games.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aCurrentRankingSystem">
            <summary>
            The currently selected ranking system.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aHalo2RankingSystem">
            <summary>
            The Halo 2 ranking system.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aRawHalo2RankingSystem">
            <summary>
            The Halo 2 ranking system (for the raw data).
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aMuSigmaRankingSystem">
            <summary>
            The MuSigma ranking system.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aELORankingSystem">
            <summary>
            The ELO ranking system.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aGamesPlayed">
            <summary>
            List of games played by each player (game IDs).
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_iViewedGameID">
            <summary>
            List of game IDs which are currently displayed on screen.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aStartDate">
            <summary>
            The global start date of all date based calculations
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aSQLImportDialog">
            <summary>
            The SQL import parameter dialog.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aPlayerProgression">
            <summary>
            The player progression window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aMuSigmaPlayerPerformance">
            <summary>
            The MuSigma performance progression window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aELOPlayerPerformance">
            <summary>
            The ELO performance progression window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aLogWindow">
            <summary>
            The global log window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aRankingParameters">
            <summary>
            The global ranking parameters window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aAboutWindow">
            <summary>
            The "About" window.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aResultImportDialog">
            <summary>
            The Result Import dialog.
            </summary>
        </member>
        <member name="F:MuSigma.MainWindow.m_aQuickCommandDialog">
            <summary>
            The "Quick Command" dialog form.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.#ctor">
            <summary>
            Constructs a new main window for the application.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.SelectedRankingSystem">
            <summary>
            Gets the currently selected ranking system.
            </summary>
            <returns>A pointer to the respective menu-entry.</returns>
        </member>
        <member name="M:MuSigma.MainWindow.UpdateOptionsBox">
            <summary>
            Updates the options group box with the selected menu entries.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.ClearGameDataBox(System.Int32)">
            <summary>
            Clears the game data group box.
            </summary>
            <param name="iStartIndex">The start index from which to start erasing fields.</param>
        </member>
        <member name="M:MuSigma.MainWindow.ClearGameDataBox">
            <summary>
            Clears the game data group box fully.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.UpdateGameDataGroupdBox">
            <summary>
            Redraws the game data group box. This includes clearing the empty entries.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.UpdateListBoxes(System.Boolean,System.Boolean)">
            <summary>
            Update the player and game list box.
            </summary>
            <param name="bUpdatePlayerList">Determines if the player list box should be updated.</param>
            <param name="bUpdateGameList">Determines if the game list box should be updated.</param>
        </member>
        <member name="M:MuSigma.MainWindow.ComputeCrossReferenceList">
            <summary>
            Recomputes the <c>m_aGamesPlayed</c> list.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.ComputeNewSelection">
            <summary>
            Computes the new (sub)-selection of games and re-displays them.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.ReadPlayerNames">
            <summary>
            Builds the player list by reading from the current SQL database.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.ReadGames">
            <summary>
            Reads all games from the current SQL database. 
            </summary>
            <remarks>This function assumes that the player list is already populated.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.ReadSQLData(System.Boolean)">
            <summary>
            Reads new player and game data from a SQL database using the information stored in the SQL Dialog.
            </summary>
            <param name="bShowLog">Indicates if the log should be shown.</param>
        </member>
        <member name="M:MuSigma.MainWindow.GetAvailableResults">
            <summary>
            Puts all available results into the results import form.
            </summary>
            <remarks>This function enables/disables the 'Read results' menu entry.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.CreateResultTables">
            <summary>
            Creates the result tables if they do not exist in the database or does nothing otherwise.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.ReadResults">
            <summary>
            Checks if there are pre-computed results and reads them from the SQL database.
            </summary>
            <returns>Returns <c>True</c> if the results were already read in.</returns>
        </member>
        <member name="M:MuSigma.MainWindow.WriteRankings">
            <summary>
            Writes the current ranking results into the SQL database.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.RecomputeRankingSystems(System.Boolean)">
            <summary>
            Recomputes all the ranking system. 
            </summary>
            <param name="bAppendToLog">Inidicates if the log should be cleared.</param>
        </member>
        <member name="M:MuSigma.MainWindow.EvidenceAnalysis">
            <summary>
            Computes the evidence of the MuSigma and ELO ranking system for several settings of Beta and Epsilon. 
            </summary>
            <remarks>A recompute of the ranking systems will create a new entry in the experiments table.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.RankingDifference(MSRanking.RankingSystem,System.Int32)">
            <summary>
            Computes the ranking difference between a ranking system's prediction and the final game outcome. 
            </summary>
            <param name="aRankingSystem">The ranking system to use for the computation of the ranking difference.</param>
            <param name="iGameID">Internal game ID.</param>
            <returns>The ranking difference as a number in [0,1].</returns> 
            <remarks>This method throws an exception if the ranking difference cannot be computed.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.RankingDifference(System.Int32)">
            <summary>
            Computes the ranking difference between the current ranking system's prediction and the final game outcome. 
            </summary>
            <param name="iGameID">Internal game ID.</param>
            <returns>The ranking difference between the current ranking system and the final game outcome.</returns> 
            <remarks>This method throws an exception if the ranking difference cannot be computed.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.ComputeMovingAverage(System.Double[],System.Int32)">
            <summary>
            Computes the moving average of a series of numbers.
            </summary>
            <param name="dX">The series of data.</param>
            <param name="iWindowSize">The window size.</param>
            <returns>A series that is <c>iWindowSize</c> many elements shorter and contains the moving average.</returns>
        </member>
        <member name="M:MuSigma.MainWindow.DrawMuSigmaLogProbability">
            <summary>
            Draws the log probability of the MuSigma system over time in a separate plot window.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.DrawRankingDifferenceWindow">
            <summary>
            Draws a ranking difference window.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.CompareSelectedPlayers(MSRanking.ProbabilisticRankingSystem,System.String)">
            <summary>
            Generates a series of plots for all pairs of selected players comparing them for a particular ranking system.
            </summary>
            <param name="aRankingSystem">The ranking system which will allow comparison.</param>
            <param name="szSystemName">The name of the system (used in the window title).</param>
        </member>
        <member name="M:MuSigma.MainWindow.CompareSelectedPlayers">
            <summary>
            Compares all selected players 1 vs. 1.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.CheckProgressionWindows">
            <summary>
            Checks if all of the progression windows are still visible and possibly re-creates them.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.RefreshLevelProgressionWindow">
            <summary>
            Transfer the current player's level progression data to the level progression window.
            Transfers the current player's MuSigma skill data to the MuSigma performance data window.
            Transfers the current player's ELO skill data to the ELO performance data window.
            </summary>
        </member>
        <member name="M:MuSigma.MainWindow.lbGameList_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a click on a new game. Updates the game data window with the data of the currently selected game.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handler.</param>
        </member>
        <member name="M:MuSigma.MainWindow.lbPlayerList_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a click on a new player. Changes the viewed game ID list to only include the games that were played by the player. 
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuQuit_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Quit" menu. Closes the application.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuReadGames_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Read Games ..." menu. Reads the player and games list from a SQL database. Also tries
            to read previously computed results or recomputes them.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuIterationsCount_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on particular iterations counts menu entry. 
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuShowProgressWindow_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Level-Progression Window" menu entry. Displays or hides the level progress window.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuShowPerformanceWindows_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Performance Windows" menu entry. Displays or hides the several performance windows.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuPlayersandGamesOnly_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Player and Games only" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuShowLogWindow_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Show Log Window" menu entry. Displays the log window dialog.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.rbRankingResults_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "HALO 2"/"Mu Sigma" ranking results menu entry. This function will also update the options
            box, send the new data to the level progression window, update the player list box (if the sorting was not alphabetical) 
            and update the game list box if the user also wanted to see selected game only.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
            <remarks>This method also changes the field <c>m_aCurrentRankingSystem</c> to the selected ranking system.</remarks>
        </member>
        <member name="M:MuSigma.MainWindow.rbViewGames_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "view all/ view selected" menu item. This function will also update the options
            box and recompute the selected game list.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.rbSelectPolicy_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "at least one"/"all of them" menu item. This function will possibly recompute the 
            selected game list.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.rbSkill_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "alphabetical"/"skill" sorintg menu item. This function will also update the options
            box, update the player list box and update the game list box if the user also wanted to see selected game only.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuRecomputeRanking_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Recompute Ranking" menu entry. This function will also update the options
            box, send the new data to the level progression window, update the player list box (if the sorting was not alphabetical) 
            and update the game list box if the user also wanted to see selected game only.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuAbout_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "About" menu entry. Pops up the about window.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuRankingDifference_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Ranking Difference" menu entry. Computes the ranking error of all ranking systems
            and displays the results in a new window.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuMuSigmaLogProbability_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "MuSigma Log Probability" menu entry. Computes the log probability of all each new game for
            the MuSigma ranking system and displays the results in a new window.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments when calling the event handles.</param>
        </member>
        <member name="M:MuSigma.MainWindow.menuSaveResults_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Save Results" menu entry. This box will only available if there are new results.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuReadResults_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Read Results" menu entry. This box will only be available if there are results in the SQL database.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuMuSigmaIterationsCheck_Click(System.Object,System.EventArgs)">
            <summary>
            Handles "MuSigma Iterations Check" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuCompareSelectedPlayers_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Compare Seleceted Players" menu entry. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.MainWindow_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a change of location of the main window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuAttachWindows_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Attach progress windows" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuPhasePlots_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Phase Plots" menu entry
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuQuickCommands_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Quick Command" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuExportEquivalentRankings_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Export Equivalent Rankings" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.MainWindow.menuEvidenceAnalysis_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Evidence analysis ..." menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:MuSigma.PlotWindow">
            <summary>
            A class that represents a window for plotting several one-dimensional functions. The class supports up to 256 different
            functions at any one time. Functions will be re-sampled before drawn to improve speed. The window also has a menu to configure 
            the plot once it is drawn on screen. This class makes heavy use of the Office 11 Chart COM ActiveX component.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.m_szIndex">
            <summary>
            A variable-sized array of literal strings for the index data of each function.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.m_szDataX">
            <summary>
            A variable-sized array of literal strings for the X data of each function.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.m_szDataY">
            <summary>
            A variable-sized array of literal strings for the Y data of each function.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.m_szErrorBar">
            <summary>
            A variable-sized array of literal strings for the error bar data of each function.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.m_szDataNames">
            <summary>
            A variable-sized array of literal strings for the names of each function.
            </summary>
        </member>
        <member name="F:MuSigma.PlotWindow.axChartSpace">
            <summary>
            A string for the .
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.#ctor">
            <summary>
            Constructs a new instance of a plot window. This will make the window visible.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.AddData(System.Double[],System.Double[],System.Double[],System.String)">
            <summary>
            Adds one data series to the plot window.
            </summary>
            <param name="dDataX">The <c>x</c> values as a double array.</param>
            <param name="dDataY">The <c>y</c> values as a double array.</param>
            <param name="dErrorBar">The <c>errorBar</c> values as a double array.</param>
            <param name="szName">The name of the data series.</param>
            <returns>True, if the data was subsampled.</returns>
            <remarks>If the <c>dErrorBar</c> parameter is <c>null</c> then no error bars are added.</remarks>
        </member>
        <member name="M:MuSigma.PlotWindow.AddData(System.Double[],System.Double[],System.String)">
            <summary>
            Adds one data series to the plot window.
            </summary>
            <param name="dDataX">The <c>x</c> values as a double array.</param>
            <param name="dDataY">The <c>y</c> values as a double array.</param>
            <param name="szName">The name of the data series.</param>
            <returns>True, if the data was subsampled.</returns>
        </member>
        <member name="M:MuSigma.PlotWindow.AddData(System.Double[],System.Double[])">
            <summary>
            Adds one data series.
            </summary>
            <param name="dDataX">The <c>x</c> values as a double array.</param>
            <param name="dDataY">The <c>y</c> values as a double array.</param>
            <returns>True, if the data was subsampled.</returns>
            <remarks>The series will be assigned a standard name 'Series <c>n</c>' where <c>n</c> is the internal 
            zero-based index of the series.</remarks>
        </member>
        <member name="M:MuSigma.PlotWindow.Clear">
            <summary>
            Clears all data series.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.SetXAxis">
            <summary>
            Sets the data axis as the active x-axis.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.SetAlternativeXAxis">
            <summary>
            Sets the index axis as the active x-axis.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.UpdateChart">
            <summary>
            Updates the chart on the plot. No series will be displayed until this method is called.
            </summary>
        </member>
        <member name="M:MuSigma.PlotWindow.rbXAxis_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the two x-axis titles menu entries. Changes the value of the active x title and 
            redraws the plot.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments from the event handler.</param>
        </member>
        <member name="M:MuSigma.PlotWindow.cbLegend_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Legend" menu entry. This method redraws the plot.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments from the event handler.</param>
        </member>
        <member name="M:MuSigma.PlotWindow.cbYAxis_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Y Axis" menu entry. This method redraws the plot.
            </summary>
            <param name="sender">Sender of the message.</param>
            <param name="e">Event arguments from the event handler.</param>
        </member>
        <member name="M:MuSigma.PlotWindow.menuCloseWindow_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Close Windows" menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.PlotWindow.menuSaveFigure_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Save Figure ..." menu entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:MuSigma.PlotWindow.XAxisTitle">
            <summary>
            Title of the x-axis.
            </summary>
        </member>
        <member name="P:MuSigma.PlotWindow.AlternativeXAxisTitle">
            <summary>
            Alternative title of the x-axis.
            </summary>
        </member>
        <member name="P:MuSigma.PlotWindow.YAxisTitle">
            <summary>
            Title of the y-axis.
            </summary>
        </member>
        <member name="P:MuSigma.PlotWindow.Legend">
            <summary>
            Plot has a legend?
            </summary>
        </member>
        <member name="P:MuSigma.PlotWindow.YAxis">
            <summary>
            Plot has a Y axis title?
            </summary>
        </member>
        <member name="P:MuSigma.PlotWindow.ChartSpace">
            <summary>
            The chart space on which is drawn.
            </summary>
        </member>
        <member name="T:MuSigma.QuickCommandDialog">
            <summary>
            This dialog form offers the possibility to display and select in a list of quickly accessible commands. 
            </summary>
        </member>
        <member name="F:MuSigma.QuickCommandDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:MuSigma.QuickCommandDialog.m_szCommandInformationList">
            <summary>
            The list of command information.
            </summary>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.#ctor">
            <summary>
            Constructs a new Quick Command dialog. The dialog will not be displayed.
            </summary>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.AddCommand(System.String,System.String)">
            <summary>
            Adds a new command to the quick command list.
            </summary>
            <param name="szCommandName">The name of the command to be added.</param>
            <param name="szCommandInformation">The extra information for this command.</param>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.lbCommandName_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the selected command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.QuickCommandDialog.lbCommandName_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            Handles a double click on the selected command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:MuSigma.QuickCommandDialog.SelectedCommandIndex">
            <summary>
            The index of the currently selected command.
            </summary>
        </member>
        <member name="T:MuSigma.RankingParameters">
            <summary>
            A class that represents a dialog form for obtaining ranking parameters such as the performance standard deviation.
            </summary>
        </member>
        <member name="M:MuSigma.RankingParameters.#ctor">
            <summary>
            Constructs an instance of the ranking parameters dialog form.
            </summary>
        </member>
        <member name="M:MuSigma.RankingParameters.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.RankingParameters.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.RankingParameters.UpdateMuSigmaDrawProbability">
            <summary>
            Updates the 'Draw Probability' field in the MuSigma tab.
            </summary>
        </member>
        <member name="M:MuSigma.RankingParameters.numMuSigmaEpsilon_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a change in the Epsilon field in the MuSigma tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.RankingParameters.numMuSigmaBeta_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a change in the Beta parameter field in the MuSigma tab. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.RankingParameters.numMuSigmaDrawProbability_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles an input into the 'Draw Probability' box in the MuSigma tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.RankingParameters.cbAdvanced_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Advanced button".
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MuSigma.RankingParameters.ShowDialog(System.Boolean)">
            <summary>
            Shows the dialog form and executes the modal dialog.
            </summary>
            <param name="bAllowCancel">Determines if the 'Cancel' button should be enabled.</param>
            <returns>The dialog result.</returns>
        </member>
        <member name="P:MuSigma.RankingParameters.MuSigmaBeta">
            <summary>
            The standard deviation of the performance in the MuSigma system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.ELOBeta">
            <summary>
            The standard deviation of the performance in the ELO system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.MuSigmaEpsilon">
            <summary>
            The draw margin in the MuSigma system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.MuSigmaTau">
            <summary>
            The increase in standard deviation of skill belief (dynamics prior) in the MuSigma system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.ELOAlpha">
            <summary>
            One minus the discount factor in the game outcome (dynamics) in the ELO system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.MuSigmaIterations">
            <summary>
            Number of iterations of the numerical approximation algorithm in the MuSigma system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.MuSigmaApproximationAlgorithm">
            <summary>
            Approximation algorithm used in the MuSigma system.
            </summary>
        </member>
        <member name="P:MuSigma.RankingParameters.AdvancedMode">
            <summary>
            Indicator whether or not the dialog is in advanced mode.
            </summary>
        </member>
        <member name="T:MuSigma.ResultImportDialog">
            <summary>
            A class that represents a dialog form for obtaining the result index.
            </summary>
        </member>
        <member name="F:MuSigma.ResultImportDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:MuSigma.ResultImportDialog.m_iResultID">
            <summary>
            A variable sized list of result IDs.
            </summary>
        </member>
        <member name="F:MuSigma.ResultImportDialog.m_szInformations">
            <summary>
            A variable sized list of string lists that contain extra information for every result string.
            </summary>
        </member>
        <member name="M:MuSigma.ResultImportDialog.#ctor">
            <summary>
            Constructs a result import dialog.
            </summary>
        </member>
        <member name="M:MuSigma.ResultImportDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.ResultImportDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.ResultImportDialog.Clear">
            <summary>
            Clears all the results and information lists.
            </summary>
        </member>
        <member name="M:MuSigma.ResultImportDialog.AddResult(System.String,System.String[],System.Int32)">
            <summary>
            Add a result line to the current list.
            </summary>
            <param name="szResult">The result line to be added.</param>
            <param name="szInformation">The list of extra information.</param>
            <param name="iResultID">The integer ID of the result.</param>
        </member>
        <member name="M:MuSigma.ResultImportDialog.lbResults_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the selection of a new result line.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:MuSigma.ResultImportDialog.SelectedResultID">
            <summary>
            The ID of the selected result.
            </summary>
        </member>
        <member name="P:MuSigma.ResultImportDialog.SelectedResultInformations">
            <summary>
            A list of information strings about the selected result.
            </summary>
        </member>
        <member name="P:MuSigma.ResultImportDialog.NumnberOfResults">
            <summary>
            Numnber of different results.
            </summary>
        </member>
        <member name="P:MuSigma.ResultImportDialog.ResultsAvailable">
            <summary>
            Flag if there are any results available.
            </summary>
        </member>
        <member name="T:MuSigma.SQLImportDialog">
            <summary>
            A class that represents a dialog form for obtaining SQL import parameters such as the server name, the database name
            and HALO 2 specific information such at the hopper and variant types.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_szGameHoppers">
            <summary>
            A variable sized string array of game hopper names.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_iGameHoppers">
            <summary>
            A variable sized list of database indicies representing these hoppers.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_szGameVariants">
            <summary>
            A variable sized string array of game variant names.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_iGameVariants">
            <summary>
            A variable sized list of database indicies representing these variants.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_szGameMaps">
            <summary>
            A variable sized string array of game map names.
            </summary>
        </member>
        <member name="F:MuSigma.SQLImportDialog.m_iGameMaps">
            <summary>
            A variable sized list of database indicies representing these game maps.
            </summary>
        </member>
        <member name="M:MuSigma.SQLImportDialog.#ctor">
            <summary>
            Constructs an instance of a dialog for importing data from a SQL database.
            </summary>
        </member>
        <member name="M:MuSigma.SQLImportDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MuSigma.SQLImportDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MuSigma.SQLImportDialog.GetMapName(System.Int32)">
            <summary>
            Gets the name of a map for a given map ID.
            </summary>
            <param name="iMapID">The HALO 2 internal map ID.</param>
            <returns>The map name or null if the map ID does not exist.</returns>
        </member>
        <member name="M:MuSigma.SQLImportDialog.GetVariantName(System.Int32)">
            <summary>
            Gets the name of a variant for a given variant ID.
            </summary>
            <param name="iVariantID">The HALO 2 internal variant ID.</param>
            <returns>The variant name or null if the variant ID does not exist.</returns>
        </member>
        <member name="M:MuSigma.SQLImportDialog.GetHopperName(System.Int32)">
            <summary>
            Gets the name of a hopper for a given hopper ID.
            </summary>
            <param name="iHopperID">The HALO 2 internal hopper ID.</param>
            <returns>The hopper name or null if the hopper ID does not exists.</returns>
        </member>
        <member name="P:MuSigma.SQLImportDialog.SQLFilterString">
            <summary>
            The SQL filter string corresponding to the settings of the dialog box.
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.CurrentHopperID">
            <summary>
            The HALO 2 internal ID of the currently selected hopper (or -1 if no hopper is selected).
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.CurrentMapID">
            <summary>
            The HALO 2 internal ID of the currently selected map (or -1 if no map is selected).
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.CurrentVariantID">
            <summary>
            The HALO 2 internal ID of the currently selected variant (or -1 if no variant is selected).
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.SQLServerName">
            <summary>
            The name of the SQL server as currently entered.
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.UsePlayerFlags">
            <summary>
            Use player flags during import.
            </summary>
        </member>
        <member name="P:MuSigma.SQLImportDialog.DatabaseName">
            <summary>
            The name of the database as currently entered.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Debug\MuSigma.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Debug\MuSigma.csprojResolveAssemblyReference.cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.csproj.ResolveComReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.AboutWindow.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.LogWindow.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.MainWindow.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.PlotWindow.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.QuickCommandDialog.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.RankingParameters.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.ResultImportDialog.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.SQLImportDialog.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.csproj.GenerateResource.Cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\MuSigma.exe
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\AxInterop.OWC11.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\Microsoft.Office.Interop.Owc11.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\MSDATASRC.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\MSRanking.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\stdole.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\bin\Release\ADODB.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigma\obj\Release\MuSigma.exe
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\Halo2Live.xml ===
<?xml version="1.0" encoding="utf-8"?>
<!--This element contains all the information for the MuSigmaRankDB application to run. -->
<configuration version="1.0">
  <!--This element specifies the datasource such as server name, database name, etc. -->
  <datasource>
    <server>msrc-mlpsql</server>
    <database>Halo2Live</database>
  </datasource>
  <!--This element specifies the table names. -->
  <tables>
    <players>tPlayers</players>
    <games>tGames</games>
    <playergames>tPlayerGames</playergames>
    <rankingtasks>tRankings</rankingtasks>
    <rankingparameters>tRankingParameters</rankingparameters>
    <rankingdata>tRankingData</rankingdata>
  </tables>
  <!--This element specifies the individual column names in the tables. -->
  <columns>
    <players>
      <playerid>player_id</playerid>
      <gamertag>gamertag</gamertag>
    </players>
    <games>
      <gameid>game_id</gameid>
      <gametime>game_time</gametime>
      <gamelist>game_hopper</gamelist>
    </games>
    <playergames>
      <teamid>team</teamid>
      <score>score</score>
    </playergames>
  </columns>
  <!--This element specifies the parameters of the MuSigma system. -->
  <musigma>
    <prior>
      <mu>1200</mu>
      <sigma>400</sigma>
    </prior>
    <performance>
      <beta>250</beta>
      <!-- This corresponds to a 10% chance of drawing. -->
      <epsilon>45.5282085042971</epsilon>
    </performance>
    <dynamics>
      <tau>10</tau>
    </dynamics>
  </musigma>
  <!--This element specifies the processing to be done. -->
  <ranking>
    <gamelist>
      <id>1</id>
      <name>Free for All</name>
    </gamelist>
    <musigma>true</musigma>
  </ranking>
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\MuSigmaRankDB.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MuSigmaRankDB</name>
    </assembly>
    <members>
        <member name="T:MuSigmaRankDB.MuSigmaRankDB">
            <summary>
            The MuSigmaRankDB allows to rank entire databases. This application is entirely driven by XML control files
            and will not require input from the keyboard. 
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.MuSigmaRankDB.CommandLineHelp(System.String)">
            <summary>
            Prints command line help onto the console.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.MuSigmaRankDB.Main(System.String[])">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:MuSigmaRankDB.RankingParameters">
            <summary>
            This class provides the manages the control parameters of a ranking task. It can write the parameters
            to XML and read an valid XML file.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szServerName">
            <summary>
            Name of the server holding the SQL database.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szDatabaseName">
            <summary>
            Name of the database holding the data.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szPlayerTableName">
            <summary>
            Name of the table containing player data.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szGamesTableName">
            <summary>
            Name of the table containing games data.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szPlayerGamesTableName">
            <summary>
            Name of the table containing player information for each game.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szRankingTasksTableName">
            <summary>
            Name of the table containing the ranking tasks.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szRankingParametersTableName">
            <summary>
            Name of the table containing the ranking parameters.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szRankingDataTableName">
            <summary>
            Name of the table containing the ranking data for all players.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNamePlayerID">
            <summary>
            Column name of the player ID column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameGamertag">
            <summary>
            Column name of the gamertag column
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameGameID">
            <summary>
            Column name of the game ID column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameGameTime">
            <summary>
            Column name of the game time column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameGameList">
            <summary>
            Column name of the game list column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameTeamID">
            <summary>
            Column name of the team ID column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szColumnNameScore">
            <summary>
            Column name of the final score column.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_dMuSigmaPriorMu">
            <summary>
            The initial value of \mu for new players.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_dMuSigmaPriorSigma">
            <summary>
            The initial value of \sigma for new players.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_dMuSigmaBeta">
            <summary>
            The standard deviation of the performance.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_dMuSigmaEpsilon">
            <summary>
            The draw margin on the performance scale.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_dMuSigmaTau">
            <summary>
            The dynamics of the skill points.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_iRankedGameListID">
            <summary>
            Index of the game list that will be ranked. A value of int.MinValue indicates that no game list criterion should be applied.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_szRankedGameListName">
            <summary>
            Name of the game list that will be ranked.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingParameters.m_bUseMuSigma">
            <summary>
            Indicates if the MuSigma algorithm should be used for ranking.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.#ctor">
            <summary>
            Generates standard ranking parameters.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.#ctor(System.IO.TextReader)">
            <summary>
            Generates a ranking parameters object by reading an XML stream.
            </summary>
            <param name="aInputStream">Input stream for the XML.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.#ctor(System.String)">
            <summary>
            Generates a ranking parameters object by reading from an XML file.
            </summary>
            <param name="szFileName">Name of the XML file.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.GetHashCode">
            <summary>
            Computes a hash-code for the ranking parameters set (for list usage). This is done by hasing the 
            server name, database name and ranked game list name.
            </summary>
            <returns>A hash code for the ranking parameters.</returns>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.Equals(System.Object)">
            <summary>
            Compares with a given set of ranking parameters.
            </summary>
            <param name="aObject">Ranking parameters to compare against.</param>
            <returns><c>true</c>, if the ranking parameters are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.Write(System.IO.TextWriter)">
            <summary>
            Writes the current ranking parameters to an XML file.
            </summary>
            <param name="aOutputStream">Output stream for the XML.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.Write(System.Xml.XmlTextWriter)">
            <summary>
            Writes the current ranking parameters to an XML file.
            </summary>
            <param name="aParameterXMLWriter">Output XML stream.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.Read(System.Xml.XmlTextReader)">
            <summary>
            Reads the ranking parameters from an XML stream.
            </summary>
            <param name="aParameterXMLReader">Input XML stream.</param>
            <remarks>This function throws and XmlException if the file format is wrong.</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingParameters.Read(System.IO.TextReader)">
            <summary>
            Reads the ranking parameters from an XML stream.
            </summary>
            <param name="aInputStream">Input stream for the XML.</param>
            <remarks>This function throws and XmlException if the file format is wrong.</remarks>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ServerName">
            <summary>
            The name of the SQL server holding the game log database.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.DatabaseName">
            <summary>
            The name of the database holding the game log data.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.PlayerTableName">
            <summary>
            Name of the table containing player data.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.GamesTableName">
            <summary>
            Name of the table containing games data.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.PlayerGamesTableName">
            <summary>
            Name of the table containing player information for each game.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.RankingTasksTableName">
            <summary>
            Name of the table containing the ranking tasks.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.RankingParametersTableName">
            <summary>
            Name of the table containing the ranking parameters.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.RankingDataTableName">
            <summary>
            Name of the table containing the ranking data for all players.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNamePlayerID">
            <summary>
            Column name of the player ID column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameGamertag">
            <summary>
            Column name of the gamertag column
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameGameID">
            <summary>
            Column name of the game ID column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameGameTime">
            <summary>
            Column name of the game time column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameGameList">
            <summary>
            Column name of the game list column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameTeamID">
            <summary>
            Column name of the team ID column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.ColumnNameScore">
            <summary>
            Column name of the final score column.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.MuSigmaPriorMu">
            <summary>
            The initial value of \mu for new players.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.MuSigmaPriorSigma">
            <summary>
            The initial value of \sigma for new players.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.MuSigmaBeta">
            <summary>
            The standard deviation of the performance.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.MuSigmaEpsilon">
            <summary>
            The draw margin on the performance scale.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.MuSigmaTau">
            <summary>
            The dynamics of the skill points.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.RankedGameListID">
            <summary>
            Index of the game list that will be ranked. A value of int.MinValue indicates that no game list criterion should be applied.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.RankedGameListName">
            <summary>
            Name of the game list that will be ranked.
            </summary>
        </member>
        <member name="P:MuSigmaRankDB.RankingParameters.UseMuSigma">
            <summary>
            Indicates if the MuSigma algorithm should be used for ranking.
            </summary>
        </member>
        <member name="T:MuSigmaRankDB.RankingTask">
            <summary>
            This class tracks a ranking task. It manages enough information to be able to continue a previously interrupted
            ranking task computations.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_aRankingParameters">
            <summary>
            The ranking parameters for the ranking task.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_aMuSigmaRankingSystem">
            <summary>
            The ranking system used for the ranking task.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_aPlayerList">
            <summary>
            The current list of players.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_szLastUpdateGameTime">
            <summary>
            The time of the game where the last update has happened. We use strings to be able to set this to "undefined".
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_iLastUpdateGameID">
            <summary>
            In the case of ties, the unique game ID helps to distinguish.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_iTaskID">
            <summary>
            The unique ID of the current ranking task.
            </summary>
        </member>
        <member name="F:MuSigmaRankDB.RankingTask.m_aSQLConnection">
            <summary>
            The SQL connection to the database specified for this ranking task.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.#ctor(MuSigmaRankDB.RankingParameters)">
            <summary>
            Constructs a new ranking task. 
            </summary>
            <param name="aRankingParameters">The ranking parameters to be used. Some of them uniquely describe the ranking
            task.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.OpenSQLConnection">
            <summary>
            Opens a new SQL connection to the specified server.
            </summary>
            <remarks>This method throws an exception if the connection cannot be opened. Also, it automatically closes an earlier connection 
            not yet closed properly.</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.OpenNewSQLConnection">
            <summary>
            Opens a new SQL connection to the specified server.
            </summary>
            <returns>The new SQL connection.</returns>
            <remarks>This method throws an exception if the connection cannot be opened.</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteSQLCommand(System.Data.SqlClient.SqlConnection,System.String,System.Int32)">
            <summary>
            Executes the SQL script command on a SQL connection. 
            </summary>
            <param name="aSQLConnection">The SQL connection on which to execute the command.</param>
            <param name="szCommand">The SQL script to be executed.</param>
            <param name="iTimeOut">The number of seconds for the command to time-out</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteSQLCommand(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Executes the SQL script command on a SQL connection. This command will not time-out. 
            </summary>
            <param name="aSQLConnection">The SQL connection on which to execute the command.</param>
            <param name="szCommand">The SQL script to be executed.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteSQLCommand(System.String,System.Int32)">
            <summary>
            Executes the SQL script command on the current connection. 
            </summary>
            <param name="szCommand">The SQL script to be executed.</param>
            <param name="iTimeOut">The number of seconds for the command to time-out</param>
            <remarks>This method opens a new connection if there is no open connection. However, the connection is not being
            closed automatically!</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteSQLCommand(System.String)">
            <summary>
            Executes the SQL script command on the current connection. This command will not time-out.
            </summary>
            <param name="szCommand">The SQL script to be executed.</param>
            <remarks>This method opens a new connection if there is no open connection. However, the connection is not being
            closed automatically!</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Int32)">
            <summary>
            Executes the SQL script on a SQL connection and returns a SQL data reader for the results.
            </summary>
            <param name="aSQLConnection">A SQL connection on which to execute the SQL reader command.</param>
            <param name="szCommand">The SQL scripte to be executed.</param>
            <param name="iTimeOut">The number of seconds for the command to time-out.</param>
            <returns>A SQL data reader for sequential access to the results.</returns>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Executes the SQL script on a SQL connection and returns a SQL data reader for the results without time-out.
            </summary>
            <param name="aSQLConnection">A SQL connection on which to execute the SQL reader command.</param>
            <param name="szCommand">The SQL scripte to be executed.</param>
            <returns>A SQL data reader for sequential access to the results.</returns>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteReader(System.String,System.Int32)">
            <summary>
            Executes the SQL script on the current connection and returns a SQL data reader for the results.
            </summary>
            <param name="szCommand">The SQL scripte to be executed.</param>
            <param name="iTimeOut">The number of seconds for the command to time-out.</param>
            <returns>A SQL data reader for sequential access to the results.</returns>
            <remarks>This method opens a new connection if there is no open connection. However, the connection is not being
            closed automatically!</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ExecuteReader(System.String)">
            <summary>
            Executes the SQL script on the current connection and returns a SQL data reader for the results without time-out.
            </summary>
            <param name="szCommand">The SQL scripte to be executed.</param>
            <returns>A SQL data reader for sequential access to the results.</returns>
            <remarks>This method opens a new connection if there is no open connection. However, the connection is not being
            closed automatically!</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.CloseSQLConnection(System.Data.SqlClient.SqlConnection)">
            <summary>
            Closes a SQL connection.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.CloseSQLConnection">
            <summary>
            Closes the current SQL connection.
            </summary>
            <remarks>This method does nothing if there is no open SQL connection.</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.CreateResultTables">
            <summary>
            Creates all the results tables.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.UpdateGame(System.Data.SqlClient.SqlConnection,System.Int32,System.DateTime)">
            <summary>
            Updates the databases with a new game. 
            </summary>
            <param name="aSQLConnection">The SQL connection on which to execute the reader command.</param>
            <param name="iGameID">The unqiue game ID.</param>
            <param name="aGameTime">The time at which the game has happened.</param>
            <returns>This time may have been adjusted by the function to the earliest time the game 
            has happened because thre is already data for at least one of the players.</returns>
            <remarks>The caller has to ensure that the SQL connection is open.</remarks>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.ReadLatestSkills">
            <summary>
            Reads all latest skills for the current task ID and adds them to the player skills list 
            maintained by the current MuSigma ranking system.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.Run">
            <summary>
            Executes the ranking task. If a previous task was interrupted, the method continues this earlier task.
            </summary>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.Write(System.IO.TextWriter)">
            <summary>
            Writes the ranking task information to an XML stream.
            </summary>
            <param name="aOutputStream">The output stream in XML format.</param>
        </member>
        <member name="M:MuSigmaRankDB.RankingTask.Read(System.IO.TextReader)">
            <summary>
            Reads the ranking task information from an XML stream.
            </summary>
            <param name="aInputStream">The input stream in XML format.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\obj\Debug\MuSigmaRankDB.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\obj\Debug\MuSigmaRankDB.csprojResolveAssemblyReference.cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\obj\Release\MuSigmaRankDB.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\bin\Release\MuSigmaRankDB.exe
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\bin\Release\MSRanking.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\bin\Release\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\obj\Release\MuSigmaRankDB.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\MuSigmaRankDB\obj\Release\MuSigmaRankDB.exe
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Numerics\Numerics.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Numerics</name>
    </assembly>
    <members>
        <member name="T:Numerics.GaussianApproximations">
            <summary>
            A static class that provides some functions for Gaussian integrals. In particular, this class provides
            correction functions for the mean and variance of the truncated Gaussian.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.erfc(System.Double)">
            <summary>
            Computes the complementary error function. This function is defined by 2/sqrt(pi) * integral from x to infinity of exp (-t^2) dt.
            </summary>
            <param name="x">The lower boundary of integration.</param>
            <returns>The complementary error function.</returns>
            <remarks>This method uses a Chebyshev series approximation which is exact in the whole range up to 1 * 10^{-7}.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.erfcinv(System.Double)">
            <summary>
            Computes the inverse of the complementary error function. 
            </summary>
            <param name="y">The point of interest.</param>
            <returns>The inverse of the complementary error function.</returns>
            <remarks>This function uses a polynomial approximation together with one step of Halley's rational method.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.Phi(System.Double)">
            <summary>
            Computes the cummulative Gaussian distribution at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The cummulative Gaussian distribution at the point of interest.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.PhiInverse(System.Double)">
            <summary>
            Computes the inverse of the cummulative Gaussian distribution (qunatile function) at a specified point of interest.
            </summary>
            <param name="p">The cummulative probability or point of interest in [0,1].</param>
            <returns>The quantile at the specified point.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.N(System.Double)">
            <summary>
            Computes the normal density at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The normal density at the point of interest.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.w(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v0(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.w0(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v(System.Double,System.Double,System.Double)">
            <summary>
            Computes the additive correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The additive correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u. It will throw an exception
            if the computation is not numerically stable.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.w(System.Double,System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The multiplicative correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u. It will throw an exception
            if the computation is not numerically stable.</remarks>
        </member>
        <member name="T:Numerics.GaussianApproximations.TGMoments">
            <summary>
            A structure holding moments of truncated multi-variate Gaussian. This structure is only used by
            <c>CalculateTGMoments</c>.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M0">
            <summary>
            Normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M1">
            <summary>
            Vector of first moments.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M2">
            <summary>
            Square matrix of second moments.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.ComputeNiederreiterSeries(System.Int32)">
            <summary>
            Computes a Niederreither series of coefficients.
            </summary>
            <param name="iNumberOfDimensions">Number of dimensions.</param>
            <returns>A Niederreiter series with as many elements as dimensions.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.TransformSample(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Double[],LinearAlgebra.Matrix@,System.Double@,LinearAlgebra.Matrix@,LinearAlgebra.Matrix@)">
            <summary>
            Computes the transformed integrand of a multi-variate Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian.</param>
            <param name="C">Cholesky factor of the covariance of the Gaussian.</param>
            <param name="a">Lower integration boundary.</param>
            <param name="b">Upper integration boundary.</param>
            <param name="dSample">The uniform random sample.</param>
            <param name="tmp">A temporary matrix of the size of <c>M1</c>.</param>
            <param name="M0">The volume sample (zeroth moment).</param>
            <param name="M1">The mean sample (first moment).</param>
            <param name="M2">The second moment sample.</param>
            <remarks>This function is implemented to minimise the number of allocations of memory and may thus be hard to 
            read.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.CalculateTGMoments(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The normalisation constant, mean and second moment matrix of a multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992 using a quais-random lattice generator based on Niederreiter point sets. However, for one-dimensional
            integrals of a certain sort if resorts to use the fast <c>v</c>, <c>w</c>, <c>v0</c> and <c>w0</c> function.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.Phi(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The integal of the multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of 
            Multivariate Normal Probabilities.</i> 1992. However, fast functions based on <c>erfc</c> are used for one-dimensional
            integrals.</remarks>
        </member>
        <member name="T:Numerics.GaussianApproximations.TGAParameters">
            <summary>
            A structure holding the parameters of truncated multi-variate Gaussian approximation. This structure is only used by
            <c>CalculateTGAParameters</c>. 
            </summary>
            <remarks>Note that the parameters of a truncated Gaussian approximation are closely related to the moments of a truncated Gaussian. 
            In particular, we have that TGParameters.Z \approx TGMoments.M0, TGParameters.mu \approx TGMoments.M1 and 
            TGParameters.Sigma \approx TGMoments.M2 - TGMoments.M1 * TGMoments.M1.Transpose ().</remarks>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.Z">
            <summary>
            Approximative normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.mu">
            <summary>
            Mean vector of the Gaussian approximation.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.Sigma">
            <summary>
            Covariance matrix of the Gaussian approximation.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.CalculateTGAParameters(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes the parameter of the best Gaussian approximation of a multivariate truncated Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The normalisation constant, mean and covariance matrix of the best Gaussian approxiamtion to the truncated multivariate Gaussian density 
            between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm og Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.PhiEP(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Approximates a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The integal of the multivariate Gaussian density between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm og Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestN">
            <summary>
            Tests the N function implementation. 
            </summary>
            <remark>The following lines should appear on the console
            <code>
            
            	N (-infinity) = 0
            	N (-0.5) = 0.3520653267643
            	N (0) = 0.398942280401433
            	N (+0.5) = 0.3520653267643
            	N (+infinity) = 0
            		
            </code>
            </remark>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestPhi">
            <summary>
            Tests the Phi function implementation. 
            </summary>
            <remark>The following lines should appear on the console
            <code>
            
            		Phi (-infinity) = 0
            		Phi (0) = 0.500000015
            		Phi (+infinity) = 1
            		PhiInverse (0) = -Infinity
            		PhiInverse (0.5) = -3.75994247258305E-08
            		PhiInverse (1.0) = Infinity
            		Phi([0,0]; [0, 0], [[1 1/2];[1/2 1]]) = 0.333285860675662
            		PhiEP([0,0]; [0, 0], [[1 1/2];[1/2 1]]) = 0.332728571526972
            		Phi([-1,2]; [0, 0], [[1 1/2];[1/2 1]]) = 0.158508382726622
            		PhiEP([-1,2]; [0, 0], [[1 1/2];[1/2 1]]) = 0.158495948730996
            		Phi('8 dimensions') = 0.0605339437759201
            		Phi('16 dimensions') = 0.037377307074928
            		
            </code>
            Note that all lines should be exactly the same since the numerical integration uses quasi-random samples. 
            </remark>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestWithMatlab">
            <summary>
            Generates example files which can be check with MATLAB.
            </summary>
            <example>In order to test this code, run the following lines in MATLAB after this function has produced 
            its output in the several files:
            <code>
            
            		load -ascii erfc.txt; clf; plot (erfc(:,1),erfc(:,2), 'b-');
            		load -ascii erfcinv.txt; clf; plot (erfcinv(:,1),erfcinv(:,2), 'b-');
            		load -ascii Phi.txt; clf; plot (Phi(:,1),Phi(:,2), 'b-');
            		load -ascii PhiInv.txt; clf; plot (PhiInv(:,1),PhiInv(:,2), 'b-');
            		load -ascii v.txt; clf; plot (v(:,1),v(:,2), 'b-');
            		load -ascii w.txt; clf; plot (w(:,1),w(:,2), 'b-');
            		load -ascii v0.txt; clf; plot (v0(:,1),v0(:,2), 'b-');
            		load -ascii w0.txt; clf; plot (w0(:,1),w0(:,2), 'b-');
            		load -ascii vApprox.txt; clf; plot (vApprox(:,1),vApprox(:,2), 'b-');
            		
            </code>	
            </example>	
        </member>
        <member name="M:Numerics.GaussianApproximations.TestGaussianApproximations">
            <summary>
            Tests the Gaussian approximations.
            </summary>
            <remarks>In order to see the screen output, look at <c>TestN</c>, <c>TestPhi</c> and <c>TestWithMatlab</c>.</remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\LinearAlgebra.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinearAlgebra</name>
    </assembly>
    <members>
        <member name="T:LinearAlgebra.Matrix">
            <summary>
            A light-weight matrix class for  arbitrary sized matrices. Most of these functions are implemented in a 
            straighforward way and are not optimised for any particular target CPU architecture.
            </summary>
        </member>
        <member name="F:LinearAlgebra.Matrix.m_dData">
            <summary>
            The raw values of the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a matrix with zeros entries.
            </summary>
            <param name="iNoRows">Number of rows.</param>
            <param name="iNoColumns">Number of columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32)">
            <summary>
            Constructs a square matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Int32,System.Double)">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
            <param name="dDiagonal">The diagonal entry.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[])">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="dDiagonal">The diagonal of the matrix.</param>
            <remarks>This constructor allows different entries on the diagonal of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(LinearAlgebra.Matrix)">
            <summary>
            Constructs a deep copy of a matrix.
            </summary>
            <param name="aMatrix">Matrix to be copied.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.#ctor(System.Double[0:,0:])">
            <summary>
            Constructs a shallow copy of a matrix.
            </summary>
            <param name="dData">Matrix data to be used.</param>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsRowVector">
            <summary>
            Indicator if the matrix is a row vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsColumnVector">
            <summary>
            Indicator if the matrix is a column vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.IsVector">
            <summary>
            Indicator whether or not the matrix is a vector.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoRows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoColumns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.NoElements">
            <summary>
            Number of total elements of the matrix.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Element in the zero-based row <c>iRowIndex</c> and zero-based column <c>iColumnIndex</c>.
            </summary>
        </member>
        <member name="P:LinearAlgebra.Matrix.Item(System.Int32)">
            <summary>
            Element at position <c>iIndex</c> if the matrix is vector. 
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.Equals(System.Object)">
            <summary>
            Compares with another matrix.
            </summary>
            <param name="aMatrix">Matrix A.</param>
            <returns>Returns true if A is equal to the matrix in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.GetHashCode">
            <summary>
            Computes a new hash code for the matrix.
            </summary>
            <returns>The hash code as an integer.</returns>
            <remarks>This function simply computes the products of the number of rows and colums and adds the 
            first element (0,0) of the matrix in order to compute a hash code.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.ToString">
            <summary>
            Creates a string representation of the matrix.
            </summary>
            <returns>A string showing the matrix elements.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(LinearAlgebra.Matrix)~System.Double[0:,0:]">
            <summary>
            The implicit cast of a matrix into a double array.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The elements of the matrix A as a double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Explicit(LinearAlgebra.Matrix)~System.Double">
            <summary>
            An explicit cast of a matrix into a double. 
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The only element of the matrix A as a double.</returns>
            <remarks>This cast throws an exception if the matrix has more than one row or more than one column.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double[0:,0:])~LinearAlgebra.Matrix">
            <summary>
            The implicit case of a double array into a matrix.
            </summary>
            <param name="dData">The double array to be casted.</param>
            <returns>A new matrix object whose <c>Data</c> property points to the double array.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Implicit(System.Double)~LinearAlgebra.Matrix">
            <summary>
            The implicit cast of a double into a matrix.
            </summary>
            <param name="x">The double to be casted.</param>
            <returns>A 1 x 1 matrix with the only element equal to <c>x</c>.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Negate">
            <summary>
            Negates the matrix.
            </summary>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_UnaryNegation(LinearAlgebra.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>Matrix A negated, that is -A.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Equality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Inequality(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is not equal to B in every element.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Add(LinearAlgebra.Matrix)">
            <summary>
            Adds a matrix.
            </summary>
            <param name="A">Matrix to be added.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Addition(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>The matrix sum of A and B, that is A + B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Substract(LinearAlgebra.Matrix)">
            <summary>
            Substract a matrix.
            </summary>
            <param name="A">Matrix to be substracted.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Subtraction(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Substracts two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix B substracted from matrix B, that is A - B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Multiply(LinearAlgebra.Matrix)">
            <summary>
            Multiplies with a matrix from the right. 
            </summary>
            <param name="A">Matrix to be multiplied from the right</param>
            <remarks>This will most likely change the size of the matrix.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,LinearAlgebra.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix A times matrix B, that is A * B.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Mulitply(System.Double)">
            <summary>
            Multiplies with a scalar, that is, each element of the matrix is multiplied by the scalar.
            </summary>
            <param name="x">The scaling factor.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Multiplies a matrix with a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Multiply(System.Double,LinearAlgebra.Matrix)">
            <summary>
            Multiplies a scalar with a matrix.
            </summary>
            <param name="x">Scalar x.</param>
            <param name="A">Matrix A.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Divide(System.Double)">
            <summary>
            Didives by a scalar, that is, every element is divided by the scalar.
            </summary>
            <param name="x">The scalar to be dividing by.</param>
        </member>
        <member name="M:LinearAlgebra.Matrix.op_Division(LinearAlgebra.Matrix,System.Double)">
            <summary>
            Divides a matrix by a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A divided by scalar x, that is every element of A is divided by x.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Transpose">
            <summary>
            Transposes the matrix.
            </summary>
            <returns>The transposed matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.Cholesky">
            <summary>
            Computes the Cholesky decomposition. 
            </summary>
            <returns>A lower triangular matrix containing the Cholesky decomposition.</returns>
            <remarks>This method does not check for the symmetry. It throws an exception if the matrix is not 
            square or if the matrix is not positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Inverse">
            <summary>
            Computes the inverse of a square positive definite matrix. 
            </summary>
            <returns>The inverse of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry. Moreover, the inverse method assumes
            that the matrix is positive definite.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.InverseCholeskyFactor">
            <summary>
            Computes the inverse of the Cholesky factor of the matrix.  
            </summary>
            <returns>The inverse of the Cholesky factor of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry.</remarks>
        </member>
        <member name="M:LinearAlgebra.Matrix.Determinant">
            <summary>
            Computes the determinant of a positive semidefinite matrix.  
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsNaN">
            <summary>
            Checks if any element of the matrix is not-a-number.
            </summary>
            <returns>Returns true the matrix contains at least one element that is not-a-number.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.IsInfinity">
            <summary>
            Checks if any element of the matrix is infinity.
            </summary>
            <returns>Returns true the matrix contains at least one element that is infinity.</returns>
        </member>
        <member name="M:LinearAlgebra.Matrix.TestMatrixClass">
             <summary>
             This function tests the matrix class on some exemplary matrices.
             </summary>
             <remarks>This code should give the following output on the console
             <code>
            			A = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			2.0 * B = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B * 2.0 = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			C = 
            			1.00  	3.00  	6.00  	
            			2.00  	5.00  	1.00  	
            
            			-C = 
            			-1.00 	-3.00 	-6.00 	
            			-2.00 	-5.00 	-1.00 	
            
            			B + C = 
            			2.00  	6.00  	12.00 	
            			4.00  	10.00 	2.00  	
            
            			B - C = 
            			0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	
            
            			B' * C = 
            			5.00  	13.00 	8.00  	
            			13.00 	34.00 	23.00 	
            			8.00  	23.00 	37.00 	
            
            			I = 
            			1.00  	0.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	0.00  	
            			0.00  	0.00  	1.00  	0.00  	
            			0.00  	0.00  	0.00  	1.00  	
            
            			S = 
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            			0.00  	0.00  	0.00  	0.00  	
            
            			B == C = True
            
            			A == (B - C) = True
            
            			I == S = False
            
            			D = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            			
            			F = 
            			1.00  	1.00  	2.00  	
            			2.00  	3.00  	3.00  	
            			3.00  	2.00  	1.00  	
            
            			E = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			L = 
            			2.45  	0.00  	0.00  	
            			4.49  	1.35  	0.00  	
            			2.86  	1.60  	1.81  	
            
            			L * L' = 
            			6.00  	11.00 	7.00  	
            			11.00 	22.00 	15.00 	
            			7.00  	15.00 	14.00 	
            
            			E^-1 = 
            			2.31  	-1.36 	0.31  	
            			-1.36 	0.97  	-0.36 	
            			0.31  	-0.36 	0.31  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            
            			E * E^-1 = 
            			1.00  	0.00  	0.00  	
            			0.00  	1.00  	0.00  	
            			0.00  	0.00  	1.00  	
            			
            			det (E) = 
            			35.9999999999999		
            
            	</code>
             </remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Debug\Numerics.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\Numerics.pdb
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\Numerics.xml
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\LinearAlgebra.pdb
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\LinearAlgebra.xml
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Debug\Numerics.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Debug\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Debug\Numerics.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Debug\Numerics.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Numerics</name>
    </assembly>
    <members>
        <member name="T:Numerics.GaussianApproximations">
            <summary>
            A static class that provides some functions for Gaussian integrals. In particular, this class provides
            correction functions for the mean and variance of the truncated Gaussian.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.erfc(System.Double)">
            <summary>
            Computes the complementary error function. This function is defined by 2/sqrt(pi) * integral from x to infinity of exp (-t^2) dt.
            </summary>
            <param name="x">The lower boundary of integration.</param>
            <returns>The complementary error function.</returns>
            <remarks>This method uses a Chebyshev series approximation which is exact in the whole range up to 1 * 10^{-7}.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.erfcinv(System.Double)">
            <summary>
            Computes the inverse of the complementary error function. 
            </summary>
            <param name="y">The point of interest.</param>
            <returns>The inverse of the complementary error function.</returns>
            <remarks>This function uses a polynomial approximation together with one step of Halley's rational method.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.Phi(System.Double)">
            <summary>
            Computes the cummulative Gaussian distribution at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The cummulative Gaussian distribution at the point of interest.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.PhiInverse(System.Double)">
            <summary>
            Computes the inverse of the cummulative Gaussian distribution (qunatile function) at a specified point of interest.
            </summary>
            <param name="p">The cummulative probability or point of interest in [0,1].</param>
            <returns>The quantile at the specified point.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.N(System.Double)">
            <summary>
            Computes the normal density at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The normal density at the point of interest.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.w(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v0(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.w0(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.v(System.Double,System.Double,System.Double)">
            <summary>
            Computes the additive correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The additive correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u. It will throw an exception
            if the computation is not numerically stable.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.w(System.Double,System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The multiplicative correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u. It will throw an exception
            if the computation is not numerically stable.</remarks>
        </member>
        <member name="T:Numerics.GaussianApproximations.TGMoments">
            <summary>
            A structure holding moments of truncated multi-variate Gaussian. This structure is only used by
            <c>CalculateTGMoments</c>.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M0">
            <summary>
            Normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M1">
            <summary>
            Vector of first moments.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGMoments.M2">
            <summary>
            Square matrix of second moments.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.ComputeNiederreiterSeries(System.Int32)">
            <summary>
            Computes a Niederreither series of coefficients.
            </summary>
            <param name="iNumberOfDimensions">Number of dimensions.</param>
            <returns>A Niederreiter series with as many elements as dimensions.</returns>
        </member>
        <member name="M:Numerics.GaussianApproximations.TransformSample(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Double[],LinearAlgebra.Matrix@,System.Double@,LinearAlgebra.Matrix@,LinearAlgebra.Matrix@)">
            <summary>
            Computes the transformed integrand of a multi-variate Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian.</param>
            <param name="C">Cholesky factor of the covariance of the Gaussian.</param>
            <param name="a">Lower integration boundary.</param>
            <param name="b">Upper integration boundary.</param>
            <param name="dSample">The uniform random sample.</param>
            <param name="tmp">A temporary matrix of the size of <c>M1</c>.</param>
            <param name="M0">The volume sample (zeroth moment).</param>
            <param name="M1">The mean sample (first moment).</param>
            <param name="M2">The second moment sample.</param>
            <remarks>This function is implemented to minimise the number of allocations of memory and may thus be hard to 
            read.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.CalculateTGMoments(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The normalisation constant, mean and second moment matrix of a multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992 using a quais-random lattice generator based on Niederreiter point sets. However, for one-dimensional
            integrals of a certain sort if resorts to use the fast <c>v</c>, <c>w</c>, <c>v0</c> and <c>w0</c> function.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.Phi(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The integal of the multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of 
            Multivariate Normal Probabilities.</i> 1992. However, fast functions based on <c>erfc</c> are used for one-dimensional
            integrals.</remarks>
        </member>
        <member name="T:Numerics.GaussianApproximations.TGAParameters">
            <summary>
            A structure holding the parameters of truncated multi-variate Gaussian approximation. This structure is only used by
            <c>CalculateTGAParameters</c>. 
            </summary>
            <remarks>Note that the parameters of a truncated Gaussian approximation are closely related to the moments of a truncated Gaussian. 
            In particular, we have that TGParameters.Z \approx TGMoments.M0, TGParameters.mu \approx TGMoments.M1 and 
            TGParameters.Sigma \approx TGMoments.M2 - TGMoments.M1 * TGMoments.M1.Transpose ().</remarks>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.Z">
            <summary>
            Approximative normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.mu">
            <summary>
            Mean vector of the Gaussian approximation.
            </summary>
        </member>
        <member name="F:Numerics.GaussianApproximations.TGAParameters.Sigma">
            <summary>
            Covariance matrix of the Gaussian approximation.
            </summary>
        </member>
        <member name="M:Numerics.GaussianApproximations.CalculateTGAParameters(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes the parameter of the best Gaussian approximation of a multivariate truncated Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The normalisation constant, mean and covariance matrix of the best Gaussian approxiamtion to the truncated multivariate Gaussian density 
            between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm og Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.PhiEP(LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Approximates a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The integal of the multivariate Gaussian density between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm og Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestN">
            <summary>
            Tests the N function implementation. 
            </summary>
            <remark>The following lines should appear on the console
            <code>
            
            	N (-infinity) = 0
            	N (-0.5) = 0.3520653267643
            	N (0) = 0.398942280401433
            	N (+0.5) = 0.3520653267643
            	N (+infinity) = 0
            		
            </code>
            </remark>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestPhi">
            <summary>
            Tests the Phi function implementation. 
            </summary>
            <remark>The following lines should appear on the console
            <code>
            
            		Phi (-infinity) = 0
            		Phi (0) = 0.500000015
            		Phi (+infinity) = 1
            		PhiInverse (0) = -Infinity
            		PhiInverse (0.5) = -3.75994247258305E-08
            		PhiInverse (1.0) = Infinity
            		Phi([0,0]; [0, 0], [[1 1/2];[1/2 1]]) = 0.333285860675662
            		PhiEP([0,0]; [0, 0], [[1 1/2];[1/2 1]]) = 0.332728571526972
            		Phi([-1,2]; [0, 0], [[1 1/2];[1/2 1]]) = 0.158508382726622
            		PhiEP([-1,2]; [0, 0], [[1 1/2];[1/2 1]]) = 0.158495948730996
            		Phi('8 dimensions') = 0.0605339437759201
            		Phi('16 dimensions') = 0.037377307074928
            		
            </code>
            Note that all lines should be exactly the same since the numerical integration uses quasi-random samples. 
            </remark>
        </member>
        <member name="M:Numerics.GaussianApproximations.TestWithMatlab">
            <summary>
            Generates example files which can be check with MATLAB.
            </summary>
            <example>In order to test this code, run the following lines in MATLAB after this function has produced 
            its output in the several files:
            <code>
            
            		load -ascii erfc.txt; clf; plot (erfc(:,1),erfc(:,2), 'b-');
            		load -ascii erfcinv.txt; clf; plot (erfcinv(:,1),erfcinv(:,2), 'b-');
            		load -ascii Phi.txt; clf; plot (Phi(:,1),Phi(:,2), 'b-');
            		load -ascii PhiInv.txt; clf; plot (PhiInv(:,1),PhiInv(:,2), 'b-');
            		load -ascii v.txt; clf; plot (v(:,1),v(:,2), 'b-');
            		load -ascii w.txt; clf; plot (w(:,1),w(:,2), 'b-');
            		load -ascii v0.txt; clf; plot (v0(:,1),v0(:,2), 'b-');
            		load -ascii w0.txt; clf; plot (w0(:,1),w0(:,2), 'b-');
            		load -ascii vApprox.txt; clf; plot (vApprox(:,1),vApprox(:,2), 'b-');
            		
            </code>	
            </example>	
        </member>
        <member name="M:Numerics.GaussianApproximations.TestGaussianApproximations">
            <summary>
            Tests the Gaussian approximations.
            </summary>
            <remarks>In order to see the screen output, look at <c>TestN</c>, <c>TestPhi</c> and <c>TestWithMatlab</c>.</remarks>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Release\Numerics.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Release\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Release\Numerics.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Numerics\obj\Release\Numerics.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Debug\RankCalculator.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Debug\RankCalculator.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Debug\RankCalculator.frmRankCalculator.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Debug\RankCalculator.csproj.GenerateResource.Cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\RankCalculator.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RankCalculator</name>
    </assembly>
    <members>
        <member name="T:RankCalculator.frmRankCalculator">
            <summary>
            The RankCalculator allows to interactively perform rank calculations for 
            single games. 
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_aGame">
            <summary>
            The game that is considered.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_aPlayerList">
            <summary>
            The list of players.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_aMuSigmaRankingSystem">
            <summary>
            The ranking system.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblPlayerNameInput">
            <summary>
            The labels for each player in the input panel.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblPlusMinusInput">
            <summary>
            The labels for the plus/minus sign for each player in the input panel.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_numMuInput">
            <summary>
            The numerical input fields for \mu for each player.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_numSigmaInput">
            <summary>
            The numerical input fields for \sigma for each player.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblPlayerNameOutput">
            <summary>
            The labels for each player in the output panel.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblPlusMinusOutput">
            <summary>
            The labels for the plus/minus sign for each player in the output panel.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblMuOutput">
            <summary>
            The output fields for \mu for each player.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_lblSigmaOutput">
            <summary>
            The output fields for \sigma for each player.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.m_bUpdateOutput">
            <summary>
            A variable indicating whether or not the output should be updated.
            </summary>
        </member>
        <member name="F:RankCalculator.frmRankCalculator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.#ctor">
            <summary>
            Standard constructor for the rank calculator application.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.UpdateOutputPanel">
            <summary>
            Recomputes the rankings and shows them in the output panel.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.GenerateInputOutputPanel">
            <summary>
            Generates the entire input and output data panel.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.UpdateTreeView">
            <summary>
            Rebuilds the tree view from the game data.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.UpdateGameData">
            <summary>
            Rebuilds the game data from the tree view.
            </summary>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.NewRankNode(System.Int32)">
            <summary>
            Creates a new rank tree node for the tree view.
            </summary>
            <param name="iRank">The zero-based rank to insert into.</param>
            <returns>A new tree node that has all relevant rank information.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.NewTeamNode(System.Int32)">
            <summary>
            Creates a new team tree node for the tree view.
            </summary>
            <param name="iTeamID">The zero-based team ID to insert into.</param>
            <returns>A new tree node that has all relevant team ID information.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.NewPlayerNode(System.String)">
            <summary>
            Creates a new player tree node for the tree view.
            </summary>
            <param name="szPlayerName">The name of the player to insert.</param>
            <returns>A new tree node that has all relevant player information.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.IsRankNode(System.Windows.Forms.TreeNode)">
            <summary>
            Checks whether or not the current node is a rank node.
            </summary>
            <param name="aTreeNode">The tree node in the tree view.</param>
            <returns><c>True</c> if the node was a rank node or false otherwise.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.IsTeamNode(System.Windows.Forms.TreeNode)">
            <summary>
            Checks whether or not the current node is a team node.
            </summary>
            <param name="aTreeNode">The tree node in the tree view.</param>
            <returns><c>True</c> if the node was a team node or false otherwise.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.IsPlayerNode(System.Windows.Forms.TreeNode)">
            <summary>
            Checks whether or not the current node is a player node.
            </summary>
            <param name="aTreeNode">The tree node in the tree view.</param>
            <returns><c>True</c> if the node was a player node or false otherwise.</returns>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.GetRank(System.Windows.Forms.TreeNode)">
            <summary>
            Gets the zero=based rank from a rank node.
            </summary>
            <param name="aRankNode">The rank tree node in the tree view.</param>
            <returns>The zero-based rank.</returns>
            <remarks>This function assumes that the node passed in is indeed a rank tree node!</remarks>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.GetTeamID(System.Windows.Forms.TreeNode)">
            <summary>
            Gets the zero-based team ID from a rank node.
            </summary>
            <param name="aTeamNode">The team tree node in the tree view.</param>
            <returns>The zero-based team ID.</returns>
            <remarks>This function assumes that the node passed in is indeed a team tree node!</remarks>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.GetPlayerName(System.Windows.Forms.TreeNode)">
            <summary>
            Gets the player name from a player node.
            </summary>
            <param name="aPlayerNode">The player tree node in the tree view.</param>
            <returns>The player name.</returns>
            <remarks>This function assumes that the node passed in is indeed a player tree node!</remarks>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.btnQuit_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Quit" button.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.btnNewPlayer_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "New Player" button.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.btnDeletePlayer_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Delete Player" button.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.btnAfterGameToBeforeGame_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "After Game -> Before Game" button.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.btnResetSkills_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Reset Skills" button.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.tvTeamRanking_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles a mouse click down for the various context menus.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.aPlayerToTeam_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Move 'player' to team 'no'" context menu item.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.aTeamToRank_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the "Move team 'team' to rank 'no'" context menu item.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
        <member name="M:RankCalculator.frmRankCalculator.MuSigma_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles a change of any input parameter.
            </summary>
            <param name="sender">Control element that sends the event.</param>
            <param name="e">Event parameter.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Release\RankCalculator.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Release\RankCalculator.csprojResolveAssemblyReference.cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Release\RankCalculator.frmRankCalculator.resources
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Release\RankCalculator.csproj.GenerateResource.Cache
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\bin\Release\RankCalculator.exe
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\bin\Release\MSRanking.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\bin\Release\LinearAlgebra.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\bin\Release\Numerics.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\RankCalculator\obj\Release\RankCalculator.exe
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Sampling\Sampling.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sampling</name>
    </assembly>
    <members>
        <member name="T:Sampling.MultiNomialSample">
            <summary>
            This class provides the functionality to generate a multinomial deviate.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_lNoItems">
            <summary>
            Number of items from which to generate a random index.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_dProbability">
            <summary>
            The probability of each item.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_aUniformSample">
            <summary>
            A random number generator for uniformly distributed deviates.
            </summary>
        </member>
        <member name="M:Sampling.MultiNomialSample.#ctor(System.Int64)">
            <summary>
            Construcuts a random number generator which gives multinomial deviates with equal probability.
            </summary>
            <param name="lNoItems">Number of items.</param>
        </member>
        <member name="M:Sampling.MultiNomialSample.#ctor(System.Double[])">
            <summary>
            Construcuts a random number generator which gives multinomial deviates with a specified probability.
            </summary>
            <param name="dProbability">A vector of probabilities.</param>
            <remarks>No test are made whether or not the parameter is a valid distribuion!</remarks>
        </member>
        <member name="M:Sampling.MultiNomialSample.Next">
            <summary>
            Samples a new zero-based random index.
            </summary>
            <returns>A random index in the zero-based range specified in the constructor.</returns>
        </member>
        <member name="M:Sampling.MultiNomialSample.Next(System.Int64)">
            <summary>
            Samples a new zero-based index from in a specified range. 
            </summary>
            <param name="lNoItems">Number of items.</param>
            <returns>A random zero based index.</returns>
            <remarks>This method temporarily overrides the settings in the constructor. Each index 
            has the same probability.</remarks>
        </member>
        <member name="P:Sampling.MultiNomialSample.NumberOfItems">
            <summary>
            The number of items from which to sample a random zero-based index.
            </summary>
        </member>
        <member name="P:Sampling.MultiNomialSample.Probability">
            <summary>
            The probability vector for each zero-based index.
            </summary>
            <remarks>No checks are made if the probability vector is valid (sums up to one and is only positive).</remarks>
        </member>
        <member name="T:Sampling.NormalSample">
            <summary>
            This class provides the functionality to generate a normally distributed random deviate.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dMu">
            <summary>
            The mean of the normal deviate.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dSigma">
            <summary>
            The standard deviation of the normal deviate.
            </summary>	
        </member>
        <member name="F:Sampling.NormalSample.m_bBuffered">
            <summary>
            Indicator whether or not the Box-Mueller formula has already pre-computed a sample.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dBuffer">
            <summary>
            A standard normal deviate pre-domputed in the Box-Mueller formula.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_aUniformSample">
            <summary>
            A uniform random number generator (necessary in the Box-Mueller algorithm).
            </summary>
        </member>
        <member name="M:Sampling.NormalSample.#ctor(System.Double,System.Double)">
            <summary>
            Construcuts a random number generator to generate normal deviates with given mean and standard deviation.
            </summary>
            <param name="dMu">The mean of the normal deviates.</param>
            <param name="dSigma">The standard deviation of the normal deviates.</param>
        </member>
        <member name="M:Sampling.NormalSample.#ctor(System.Double)">
            <summary>
            Construcuts a random number generator to generate normal deviates with a given mean and unit standard deviation.
            </summary>
            <param name="dMu">The mean of the normal deviates.</param>
        </member>
        <member name="M:Sampling.NormalSample.#ctor">
            <summary>
            Construcuts a random number generator to generate normal deviates with zero mean and unit standard deviation.
            </summary>
        </member>
        <member name="M:Sampling.NormalSample.Next">
            <summary>
            Computes a new normal deviate.
            </summary>
            <returns>The normal deviate.</returns>
        </member>
        <member name="M:Sampling.NormalSample.Next(System.Double)">
            <summary>
            Computes a new normal standard deviate with given mean and unit standard deviation. 
            </summary>
            <param name="dMu">The mean of the normal deviate.</param>
            <returns>The normal deviate.</returns>
            <remarks>This function temporarily overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.NormalSample.Next(System.Double,System.Double)">
            <summary>
            Computes a new normal standard deviate with given mean and standard deviation. 
            </summary>
            <param name="dMu">The mean of the normal deviate.</param>
            <param name="dSigma">The standard deviation of the normal deviate.</param>
            <returns>The normal deviate.</returns>
            <remarks>This function temporarily overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.NormalSample.Sample">
            <summary>
            Computes a new normal deviate with the Box-Mueller formula and possibly fills the buffer.
            </summary>
            <returns>A normal deviate.</returns>
        </member>
        <member name="P:Sampling.NormalSample.Mu">
            <summary>
            The mean of the normal deviate.
            </summary>
        </member>
        <member name="P:Sampling.NormalSample.Sigma">
            <summary>
            The standard deviation of the normal deviate.
            </summary>
        </member>
        <member name="T:Sampling.UniformSample">
            <summary>
            This class provides the functionality to generate a uniformly distributed random deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_dMin">
            <summary>
            Samllest value of the uniform deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_dScale">
            <summary>
            The range of the uniform deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_aRandom">
            <summary>
            The random number generator (taken from the CLR) which actually generates the samples.
            </summary>
        </member>
        <member name="M:Sampling.UniformSample.#ctor(System.Double,System.Double)">
            <summary>
            Construcuts a random number generator to generate uniform deviates between two bounds.
            </summary>
            <param name="dMin">Lower bound of the uniform deviate.</param>
            <param name="dMax">Upper bound of the uniform deviate.</param>
        </member>
        <member name="M:Sampling.UniformSample.#ctor(System.Double)">
            <summary>
            Construcuts a random number generator to generate uniform deviates between 0 and an upper bound.
            </summary>
            <param name="dMax">Upper bound of the uniform deviate.</param>
        </member>
        <member name="M:Sampling.UniformSample.#ctor">
            <summary>
            Construcuts the random number generator to generate uniform deviates between 0 and 1.
            </summary>
        </member>
        <member name="M:Sampling.UniformSample.Next">
            <summary>
            Computes a new uniform deviate between the pre-defined bounds.
            </summary>
            <returns>The uniform standard deviate.</returns>
        </member>
        <member name="M:Sampling.UniformSample.Next(System.Double)">
            <summary>
            Computes a new uniform deviate between 0 and an upper bound.
            </summary>
            <param name="dMax">The upper bound of the uniform standard deviate.</param>
            <returns>The uniform deviate.</returns>
            <remarks>This method temporariliy overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.UniformSample.Next(System.Double,System.Double)">
            <summary>
            Computes a new uniform deviate between two bounds. 
            </summary>
            <param name="dMin">The lower bound of the uniform standard deviate.</param>
            <param name="dMax">The upper bound of the uniform standard deviate.</param>
            <returns>The uniform deviate.</returns>
            <remarks>This method temporariliy overrides the values of the constructor.</remarks>
        </member>
        <member name="M:Sampling.UniformSample.Sample">
            <summary>
            Computes a new uniform deviate between 0 and 1.
            </summary>
            <returns>The uniform deviate.</returns>
        </member>
        <member name="P:Sampling.UniformSample.LowerBound">
            <summary>
            The smallest value of the uniform deviate.
            </summary>
        </member>
        <member name="P:Sampling.UniformSample.UpperBound">
            <summary>
            The largest value of the uniform deviate.
            </summary>
        </member>
        <member name="P:Sampling.UniformSample.Range">
            <summary>
            The range of the uniform deviate.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Sampling\bin\Debug\Sampling.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sampling</name>
    </assembly>
    <members>
        <member name="T:Sampling.MultiNomialSample">
            <summary>
            This class provides the functionality to generate a multinomial deviate.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_lNoItems">
            <summary>
            Number of items from which to generate a random index.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_dProbability">
            <summary>
            The probability of each item.
            </summary>
        </member>
        <member name="F:Sampling.MultiNomialSample.m_aUniformSample">
            <summary>
            A random number generator for uniformly distributed deviates.
            </summary>
        </member>
        <member name="M:Sampling.MultiNomialSample.#ctor(System.Int64)">
            <summary>
            Construcuts a random number generator which gives multinomial deviates with equal probability.
            </summary>
            <param name="lNoItems">Number of items.</param>
        </member>
        <member name="M:Sampling.MultiNomialSample.#ctor(System.Double[])">
            <summary>
            Construcuts a random number generator which gives multinomial deviates with a specified probability.
            </summary>
            <param name="dProbability">A vector of probabilities.</param>
            <remarks>No test are made whether or not the parameter is a valid distribuion!</remarks>
        </member>
        <member name="M:Sampling.MultiNomialSample.Next">
            <summary>
            Samples a new zero-based random index.
            </summary>
            <returns>A random index in the zero-based range specified in the constructor.</returns>
        </member>
        <member name="M:Sampling.MultiNomialSample.Next(System.Int64)">
            <summary>
            Samples a new zero-based index from in a specified range. 
            </summary>
            <param name="lNoItems">Number of items.</param>
            <returns>A random zero based index.</returns>
            <remarks>This method temporarily overrides the settings in the constructor. Each index 
            has the same probability.</remarks>
        </member>
        <member name="P:Sampling.MultiNomialSample.NumberOfItems">
            <summary>
            The number of items from which to sample a random zero-based index.
            </summary>
        </member>
        <member name="P:Sampling.MultiNomialSample.Probability">
            <summary>
            The probability vector for each zero-based index.
            </summary>
            <remarks>No checks are made if the probability vector is valid (sums up to one and is only positive).</remarks>
        </member>
        <member name="T:Sampling.NormalSample">
            <summary>
            This class provides the functionality to generate a normally distributed random deviate.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dMu">
            <summary>
            The mean of the normal deviate.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dSigma">
            <summary>
            The standard deviation of the normal deviate.
            </summary>	
        </member>
        <member name="F:Sampling.NormalSample.m_bBuffered">
            <summary>
            Indicator whether or not the Box-Mueller formula has already pre-computed a sample.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_dBuffer">
            <summary>
            A standard normal deviate pre-domputed in the Box-Mueller formula.
            </summary>
        </member>
        <member name="F:Sampling.NormalSample.m_aUniformSample">
            <summary>
            A uniform random number generator (necessary in the Box-Mueller algorithm).
            </summary>
        </member>
        <member name="M:Sampling.NormalSample.#ctor(System.Double,System.Double)">
            <summary>
            Construcuts a random number generator to generate normal deviates with given mean and standard deviation.
            </summary>
            <param name="dMu">The mean of the normal deviates.</param>
            <param name="dSigma">The standard deviation of the normal deviates.</param>
        </member>
        <member name="M:Sampling.NormalSample.#ctor(System.Double)">
            <summary>
            Construcuts a random number generator to generate normal deviates with a given mean and unit standard deviation.
            </summary>
            <param name="dMu">The mean of the normal deviates.</param>
        </member>
        <member name="M:Sampling.NormalSample.#ctor">
            <summary>
            Construcuts a random number generator to generate normal deviates with zero mean and unit standard deviation.
            </summary>
        </member>
        <member name="M:Sampling.NormalSample.Next">
            <summary>
            Computes a new normal deviate.
            </summary>
            <returns>The normal deviate.</returns>
        </member>
        <member name="M:Sampling.NormalSample.Next(System.Double)">
            <summary>
            Computes a new normal standard deviate with given mean and unit standard deviation. 
            </summary>
            <param name="dMu">The mean of the normal deviate.</param>
            <returns>The normal deviate.</returns>
            <remarks>This function temporarily overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.NormalSample.Next(System.Double,System.Double)">
            <summary>
            Computes a new normal standard deviate with given mean and standard deviation. 
            </summary>
            <param name="dMu">The mean of the normal deviate.</param>
            <param name="dSigma">The standard deviation of the normal deviate.</param>
            <returns>The normal deviate.</returns>
            <remarks>This function temporarily overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.NormalSample.Sample">
            <summary>
            Computes a new normal deviate with the Box-Mueller formula and possibly fills the buffer.
            </summary>
            <returns>A normal deviate.</returns>
        </member>
        <member name="P:Sampling.NormalSample.Mu">
            <summary>
            The mean of the normal deviate.
            </summary>
        </member>
        <member name="P:Sampling.NormalSample.Sigma">
            <summary>
            The standard deviation of the normal deviate.
            </summary>
        </member>
        <member name="T:Sampling.UniformSample">
            <summary>
            This class provides the functionality to generate a uniformly distributed random deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_dMin">
            <summary>
            Samllest value of the uniform deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_dScale">
            <summary>
            The range of the uniform deviate.
            </summary>
        </member>
        <member name="F:Sampling.UniformSample.m_aRandom">
            <summary>
            The random number generator (taken from the CLR) which actually generates the samples.
            </summary>
        </member>
        <member name="M:Sampling.UniformSample.#ctor(System.Double,System.Double)">
            <summary>
            Construcuts a random number generator to generate uniform deviates between two bounds.
            </summary>
            <param name="dMin">Lower bound of the uniform deviate.</param>
            <param name="dMax">Upper bound of the uniform deviate.</param>
        </member>
        <member name="M:Sampling.UniformSample.#ctor(System.Double)">
            <summary>
            Construcuts a random number generator to generate uniform deviates between 0 and an upper bound.
            </summary>
            <param name="dMax">Upper bound of the uniform deviate.</param>
        </member>
        <member name="M:Sampling.UniformSample.#ctor">
            <summary>
            Construcuts the random number generator to generate uniform deviates between 0 and 1.
            </summary>
        </member>
        <member name="M:Sampling.UniformSample.Next">
            <summary>
            Computes a new uniform deviate between the pre-defined bounds.
            </summary>
            <returns>The uniform standard deviate.</returns>
        </member>
        <member name="M:Sampling.UniformSample.Next(System.Double)">
            <summary>
            Computes a new uniform deviate between 0 and an upper bound.
            </summary>
            <param name="dMax">The upper bound of the uniform standard deviate.</param>
            <returns>The uniform deviate.</returns>
            <remarks>This method temporariliy overrides the values given in the constructor.</remarks>
        </member>
        <member name="M:Sampling.UniformSample.Next(System.Double,System.Double)">
            <summary>
            Computes a new uniform deviate between two bounds. 
            </summary>
            <param name="dMin">The lower bound of the uniform standard deviate.</param>
            <param name="dMax">The upper bound of the uniform standard deviate.</param>
            <returns>The uniform deviate.</returns>
            <remarks>This method temporariliy overrides the values of the constructor.</remarks>
        </member>
        <member name="M:Sampling.UniformSample.Sample">
            <summary>
            Computes a new uniform deviate between 0 and 1.
            </summary>
            <returns>The uniform deviate.</returns>
        </member>
        <member name="P:Sampling.UniformSample.LowerBound">
            <summary>
            The smallest value of the uniform deviate.
            </summary>
        </member>
        <member name="P:Sampling.UniformSample.UpperBound">
            <summary>
            The largest value of the uniform deviate.
            </summary>
        </member>
        <member name="P:Sampling.UniformSample.Range">
            <summary>
            The range of the uniform deviate.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Debug\Sampling.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\bin\Debug\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\bin\Debug\Sampling.pdb
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\bin\Debug\Sampling.xml
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Debug\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Debug\Sampling.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Release\Sampling.csproj.FileListAbsolute.txt ===
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\bin\Release\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Release\Sampling.dll
D:\My Stuff 2\Modding stuffs\Sources\Xbox Live Source\XONLINE_MAIN\XONLINE_MAIN\public\ext\MuSigma\Sampling\obj\Release\Sampling.csprojResolveAssemblyReference.cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MSCOMGeoInfo\2.2.0.0\Documentation\Geo Segment V2 Functional Spec.docx ===
Customer Intelligence and Analytics – Segmentation and Targeting Services
GeoSegmentation v2
Functional Specification

6/22/2007 5:38 PM


Author/Primary Contact: Chriswo
Secondary Contact:


TABLE OF CONTENTS
Functional Specification	1
TABLE OF CONTENTS	1
1.	INTRODUCTION	3
1.1	GOALS AND OBJECTIVES	3
1.2	HIGH-LEVEL CONSTRAINTS	3
2	Architecture	4
3	FEATURE SUMMARY	5
3.1	Add high-speed, in-process lookup interface	5
3.2	Add Data file pull feature	6
3.3	Add GetGeoInfoFromHttpRequest (GeoLocation)	6
3.4	Add Read-Only Configuration API (GeoLocation)	6
3.5	Add Adoption Tracking / Logging	6
3.6	Add Lightweight Data File for Development Servers	7
3.7	Add Improved Error Reporting in ETL Process	7
3.8	Add Support for Extended Properties on GeoInfo Objects	8
3.9	Add GetCountryRegionList to Geo Data File	8
3.10	Add GeoSystem Reverse-IP by Join table (GeoSystem DB)	8
4	Work Plan	10
4.1	Updates to ETL Database / SSIS Package	10
4.2	Updates to GeoSystem Database	10
4.3	Changes to Publisher.exe	10
4.4	Creation of new cluster (geo.microsoft.com)	10
4.5	Creation of GeoSegUpdater.exe	11
4.6	Changes to GeoLocation.dll	11
4.7	Changes to GeoInfo Objects	12
4.8	Changes to GeoCommon.dll	13
4.9	Update to MSI Installer	14
5	PLANNED RELEASE OVERVIEW	14
5.1	SQL ETL:	14
5.2	MSCOM	14
5.3	MSDN/TN	14
5.4	XBox Live / Product Activation	14
INTRODUCTION

This version is a moderate-sized update to the CIA GeoSegmentation v1 code released in January 2007. The Customer Intelligence and Analytics GeoSegmentation API provides interfaces for doing Reverse-IP lookups. This version extends the original functionality.
GOALS AND OBJECTIVES

The ultimate goal is to become the only provider of Reverse-IP functionality in Microsoft. To progress to that goal, this version will concentrate on:

Goal #1: Increase number of adopters
Goal #2: Increase adopter ease of use

HIGH-LEVEL CONSTRAINTS

We will continue to support GeoSegmentation System internal partners using the v1.1 bits after the launch of v2.0. This primarily impacts the ETL process.


Architecture

FEATURE SUMMARY

Add high-speed, in-process lookup interface 

Goal: improve lookup speeds by 30x in certain scenarios

Approach: add a new deployment option that will host the 120MB lookup table in the hosting application’s memory space.

Leverage GeoLocation.dll as the interface where customers can use the high-speed interface
Add configuration setting that tells GeoLocation to either host the data file or use the Windows Service.
Servers can be deployed in only one of the two modes – single configuration field sets the mode



Adopters:
Log file parsers, c.microsoft.com, XBox Live, Windows Product Activation
(never adopted on www.microsoft.com, or IIS servers with multiple application pools)

Scenarios: 
An internal partner has a few gigabytes of log files that they need to parse and report on geographically. Using VS.NET and the Geo System, they use C# to read each line of the log files, and do a fast Reverse-IP operation to create their report.
On c.microsoft.com, the ClickStream v2 project adds a Reverse-IP step to its logging feature. The lookup does not need to be out of process (because there is only have one ASP.NET AppPool on the c.microsoft.com cluster), so it can be very fast and lightweight. This interface allows for multiple hundreds of lookups to be done per second.


Add Data file pull feature 
In v2, an additional Windows Service will be added that will pull updated data files on a weekly basis. This will remove the need to manually push updates to our internal partners.

Goal: Running the GeoSystem MSI installer creates a new Windows Service that keeps the data file up to date, as long as the machine has connectivity to either CorpNet or the Internet.

Scenario: On each instance where an adopter has GeoSystem is deployed, a Windows .EXE keeps the 120-MB data file updated with the latest copy, with the subnet information. This service works for development machines on CorpNet, and in the data centers for both XBox Live and MSCOM, for PPE and production servers.


Add GetGeoInfoFromHttpRequest (GeoLocation)
This method will be added to the GeoLocation API, and provide a way to do Reverse-IP starting with a HttpRequest rather than an IP Address.

Goal: improve ease of adoption for Web adopters.

Approach: add a fourth GetGeoInfo method to the GeoLocation interface that will return an XML document object representing the Geo.MSCOM.config file.


Add Read-Only Configuration API (GeoLocation)
V2 will add properties and methods for querying the current configuration, allowing for more descriptive smoke test pages.

Goal: improve amount of information provided on Smoke Test pages.

Approach: expose an interface for reading the Geo configuration file.

This will be a method of GeoCommon (instead of GeoLocation)
Open: Consider removing MonitoredServiceResponse from GeoLocation.Ping()


Add Adoption Tracking / Logging 
V2 will add features for getting a better understanding of where the GeoSegmentation System is deployed on Microsoft adopter’s servers.

Goal: improve the visibility of who is using GeoSystem, which versions, on both CorpNet and in the Data Centers

V1 Issues:
The current approach using Stats.NET works only in the MSCOM Data Center environment
We don’t know who is using GeoSegmentation in other locations0

Approach: 

Will collect information for CorpNet, PPE, and Production Servers (i.e. the data collected in one environment needs to be pooled with the data collected for other environments)
Adds support for “sample size tuning” – if the sample interval is set to “100” and we’re doing 1M events per hour, the code to automatically adjust the sample interval to a higher number
Adds logging for the “data file updated” event



Add Lightweight Data File for Development Servers
V2 will improve the Development client workstation experience by providing a 1-time “small” data file that will not consume 200 MB of memory when run in the Windows Service.

Goal: improve ease of adoption on 1GB Windows XP development servers

Approach: V2 will provide a 1-time “small” data file that will not consume 200 MB of memory when run in the Windows Service. This involves manually running ETL once with a limited set of IP addresses. 

We will remove all the class-B and class-C subnets from the GeoIndex table 
Running Publisher.exe will create the small data file


Add Improved Error Reporting in ETL Process
The v2 ETL process will add additional events and notifications for certain errors.

Goal: reduce the effort to monitor the ETL process.

Approach: improve error reporting between Publisher.exe and the SSIS package and make logging in Publisher.exe more descriptive.


Add Support for Extended Properties on GeoInfo Objects
In v2, we will add a property (set with a configuration file), that will populate user-defined attributes in the GeoInfo object.

Goal: capture more adopters by allowing them to add new data elements to GeoInfo

Approach: 
Update the GeoLocation API so that GeoInfo objects can optionally add additional properties
Provide the first set of extended properties by providing the results of reporting from MSCOM Operations team on throughput-per-subnet to the GeoInfo objects.


Add GetCountryRegionList to Geo Data File 
In v2, the look ups for GetCountryRegionList will be moved into the data file, allowing us to deploy to adopters without the need for a SQL Server.

Goal: capture more adopters by removing the need to run SQL Server to support GetCountryRegionList and GetGeoInfoByZipCode

Approach: add the GetCountryRegionList and PostalCode data to the 120MB Geo data file. Affects most elements from ETL process through GeoLocation.


Add GeoSystem Reverse-IP by Join table (GeoSystem DB) 
In v2, in the GeoSystem database, there will be a lookup table that will allow “Reverse-IP by SQL Join.” This feature will leverage the approach from the Windows Genuine team. 

Goal: capture more adopters for log-file parsing in SQL

Approach: In v2, in the GeoSystem database will be updated to add support for “Reverse-IP by SQL Join” (i.e. not a cursor and geo lookup per request).

The approach has been coded before by the Windows Genuine team
They designed a lookup table that was only specific to the city level,
This approach reduces the 16M subnet rows down to only 1-2M, by concatenating adjacent subnets within the same city
See: \\sandywe1\Public\Flattening the GeoTables



NON-GOALS
TBD
Work Plan

Updates to ETL Database / SSIS Package

Update ETL Script to create Windows Genuine Advantage “Fast Lookup via SQL Join” table
Update ETL Logging:
Add two extra calls for logging inside the 7-big ETL SPROC’s (“Starting <step>” and “Exiting <step>”)
Add logging for who executed the “admin” SPROC’s, and when NEW

Updates to GeoSystem Database

Add table for “Fast Lookup via SQL Join”
Changes to Publisher.exe

In Main(), return a non-zero value if any PubWiz exception is found
For v2-type of data files:
Add Lookup Tables for GetCountryRegionList to Geo Data File
At Deployment: Reconfigure Pubwiz path to push to Geo.Microsoft.com cluster

Creation of new cluster (geo.microsoft.com)

Redeploy two (?) production servers from c.microsoft.com into new geo.microsoft.com cluster
Configure security certificates for HTTPS access 
Authentication done by file-based security certificates on the adopter’s machine NEW
Authorization done by Windows accounts on the geo.microsoft.com servers NEW
PM note: expected to have only 1 (GeoAdopter) in v2 timeframe, but prepping for adding support for additional adopters
Set up PubWiz path to these servers
Set up PubWiz Staging server drop point
Create three HTTP Interfaces:
GetManifest – called by new GeoSegUpdater.exe on adopter machines (see below), will provide a hash code of the current data file, which can be compared to the adopters copy – if any differences, GeoSegUpdater.exe will download new copy of 120MB data file.
GetV2DataFile – will download (and log) information about which server was updated and provide the 120MB data file.
DoMetrics – will create a publically accessible front-door for Stats.NET traffic, logging who is using our machines

Creation of GeoSegUpdater.exe

New command-line EXE
Uses Geo.MSCOM.config settings to know where to connect
Uses separate, second file with security certificate for user authentication against geo.microsoft.com NEW
When run:
Logs that it is attempting a data file update: NEW
To local GeoSystem EventLog
To geo.microsoft.com
Connects to geo.microsoft.com (using configured server name, using security certificate)
Requests the hash of the latest data file on geo.microsoft.com
Compares current data file version to one on server
If updated, downloads new version MSCOMGeoInfoServerData.dat
Copies downloaded file to the configured file location for the data file
(GeoCommon.dll w/FileSystemWatcher loads new data file)
Updates geo.microsoft.com with results of execution run: NEW
To local GeoSystem EventLog
To geo.microsoft.com


Changes to GeoLocation.dll

GeoLocation (big): Add configuration setting for internal hosting of GeoCommon instance for high-speed look up service
GeoLocation (big): Create GetCountryRegionList objects from Geo Data File instead of SQL
GeoLocation: Add method for GetGeoInfoFromHttpRequest
Overrides: NEW
public static GeoInfo GetGeoInfoFromHttpRequest(HttpRequest httpRequest)
public static GeoInfo GetGeoInfoFromHttpRequest(HttpRequest httpRequest, string language)
public static GeoInfo GetGeoInfoFromHttpRequest(HttpRequest httpRequest, string language, GeoPostalCodeRangeMode postalCodeMode)
public static GeoInfo GetGeoInfoFromHttpRequest(HttpRequest httpRequest, GeoPostalCodeRangeMode postalCodeMode)
Uses HttpRequest.RawUrl as the StatsData parameter passed to GetGeoInfoBy methods inside of GetGeoInfoFromHttpRequest() NEW
Takes language (“en-us”) as an optional parameter
If language is not provided, the method will use the Accept-Lang header from the request
Lookup order of precedence:
Looks for a MapPointID in the QueryString – the QueryString parameter name is configurable (configuration will default to “MPID”)
Looks for the A cookie/GO value for an explicitly-set MapPointID
Otherwise falls back to Reverse-IP Address
Looks for IP Address in NetScaler-added header
Gets IP Address from Request.UserHost
If Reverse-IP Address is 127.0.0.01 (on localhost/development servers) uses Ethernet address using System.NET.DNS.GetHostEntry(DNS.GetHostName()
Works on IPv4 addresses, even when the machine supports IPv6 (i.e. Vista)
GeoInfo: Add read-only property for Throughput (int or int[])
Update Stats.NET interface to call geo.microsoft.com with usage data

Changes to GeoInfo Objects
Add support for Extended Properties:
string propertyValue = GeoInfo[“<key>”];
Extended properties will be enabled with an AppSetting naming the file path to a XML configuration file. NEW
The XML configuration file will support multiple ExtendedProperties in a single configuration file. NEW
The XML configuration file will allow an adopter to specify “Extended Property Rules” that match the GeoInfo’s location in order from first to last (first match wins): NEW
MapPointID
CountryRegion w/StateProvince
CountryRegion
Provide for returning the core properties (in addition to extended properties) via this interface, including these values for key values: NEW
“MapPointID” (int parsed w/int.ToString())
“MapPointIDParent” (int parsed w/int.ToString ())
“CountryRegionCode”
“StateProvinceCode”
“TimeZoneDisplayName”
“CountryRegionDisplayName”
“StateProvinceDisplayName”
“CityDisplayName”
“IsEuropeanUnion”
“Latitude” (nullable double parsed w/Double.ToString())
“Longitude” (nullable double parsed w/Double.ToString())
“StandardTimeZoneOffset” (double parsed w/Double.ToString())
“DSTTimeZoneOffset” (nullable double parsed w/Double.toString())
“DSTStartTimeUniversal” (DateTime parsed w/DateTime.toString(“G”))
“DSTEndTimeUniversal” (DateTime parsed w/DateTime.toString(“G”))

Stretch goal: In low-speed implementation w/MSCOMGeoInfoServer.exe, replace string.splice() during deserialize, and provide for late instantiation of GeoInfo strings when requested by the Adopter’s accessing the Properties’ GET accessors. NEW
Changes to GeoCommon.dll

Add method for returning XMLDom of Geo.MSCOM.config file
Add application startup EventLog warning if the MSCOMGeoInfoServerData.dat file is older than 2 weeks. NEW
(Many other changes needed by Dev)

Update to MSI Installer

Installs v2 versions of bits
Includes installation of new GeoSegUpdater.exe
Stretch goal: provides for scheduling GeoSegUpdater.exe in MSI NEW
All DLL’s updated with version 2.0 in their Assembly info
GACs GeoCommon.dll (wasn’t GAC’d in v1.0)
Executes GeoSegUpdater.exe at end of installation NEW
PLANNED RELEASE OVERVIEW

SQL ETL:

V1 ETL process will be removed from second instance of BayMSFTSQLGeo01
V2 ETL process will be installed to its own new SQL Server (TBD)

MSCOM

New version of GeoSystem will replace the 3 BayMSFTSQLGeo servers supporting IIS fall-back
IIS Servers will add v2 versions of GeoProfile and GeoLocation DLL’s
IIS Servers will not add new high-speed, in-memory DLL
New versions of their applications on v2 bits are rolled out.
Old v1 version is decommissioned.

MSDN/TN

We will continue to support v1 bits until at least 6 months after we release v2 bits
When they upgrade to v2 bits, they may adopt the “pull data file” service
When they upgrade to v2 bits, they are expected to use the high-speed interface instead of the Windows Service.
New versions of their applications on v2 bits are rolled out.
Old v1 version is decommissioned.

XBox Live / Product Activation

We will continue to support v1 bits until at least 6 months after we release v2 bits
When they upgrade to v2 bits, they may adopt the “pull data file” service
When they upgrade to v2 bits, they are expected to use the high-speed interface instead of the Windows Service.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\TestSuite\bin\Release\erfcinv.txt ===
0.001, 2.32675377910224
0.002, 2.18512422844146
0.003, 2.09850761737377
0.004, 2.03516768542064
0.005, 1.98487261214416
0.006, 1.94297484789041
0.007, 1.90695685945494
0.008, 1.8752965381138
0.009, 1.84700118702766
0.01, 1.82138635699321
0.011, 1.7979595654682
0.012, 1.77635427596466
0.013, 1.7562900952504
0.014, 1.73754759029343
0.015, 1.71995170958039
0.016, 1.70336049959794
0.017, 1.68765720470131
0.018, 1.67274459929247
0.019, 1.65854083425349
0.02, 1.64497633573213
0.021, 1.63199145104992
0.022, 1.61953463518271
0.023, 1.60756103505272
0.024, 1.59603137107152
0.025, 1.58491104387871
0.026, 1.57416941384067
0.027, 1.56377921460907
0.028, 1.55371607180624
0.029, 1.54395810494865
0.03, 1.53448559586782
0.031, 1.52528071069545
0.032, 1.51632726532685
0.033, 1.50761052642953
0.034, 1.49911704170513
0.035, 1.49083449437777
0.036, 1.48275157786324
0.037, 1.47485788734187
0.038, 1.46714382556351
0.039, 1.45960052069398
0.04, 1.45221975439664
0.041, 1.44499389865175
0.042, 1.43791586006628
0.043, 1.4309790306301
0.044, 1.42417724404076
0.045, 1.41750473685582
0.046, 1.4109561138442
0.047, 1.40452631700194
0.048, 1.39821059777549
0.049, 1.39200449210101
0.05, 1.38590379792286
0.051, 1.37990455490055
0.052, 1.37400302605277
0.053, 1.36819568111993
0.054, 1.36247918145525
0.055, 1.35685036627819
0.056, 1.35130624014524
0.057, 1.34584396151022
0.058, 1.3404608322623
0.059, 1.33515428814262
0.06, 1.3299218899522
0.061, 1.32476131547383
0.062, 1.31967035203916
0.063, 1.31464688967995
0.064, 1.30968891480912
0.065, 1.30479450438289
0.066, 1.29996182050075
0.067, 1.29518910540405
0.068, 1.2904746768386
0.069, 1.2858169237496
0.07, 1.28121430228074
0.071, 1.27666533205193
0.0720000000000001, 1.27216859269263
0.0730000000000001, 1.2677227206099
0.0740000000000001, 1.26332640597232
0.0750000000000001, 1.25897838989266
0.0760000000000001, 1.25467746179367
0.0770000000000001, 1.25042245694292
0.0780000000000001, 1.24621225414375
0.0790000000000001, 1.24204577357057
0.0800000000000001, 1.23792197473779
0.0810000000000001, 1.23383985459257
0.0820000000000001, 1.22979844572241
0.0830000000000001, 1.22579681466936
0.0840000000000001, 1.22183406034326
0.0850000000000001, 1.2179093125271
0.0860000000000001, 1.21402173046825
0.0870000000000001, 1.21017050154947
0.0880000000000001, 1.20635484003447
0.0890000000000001, 1.20257398588307
0.0900000000000001, 1.1988272036312
0.0910000000000001, 1.19511378133166
0.0920000000000001, 1.19143302955167
0.0930000000000001, 1.18778428042356
0.0940000000000001, 1.18416688674524
0.0950000000000001, 1.18058022112739
0.0960000000000001, 1.17702367518439
0.0970000000000001, 1.17349665876647
0.0980000000000001, 1.16999859923034
0.0990000000000001, 1.16652894074626
0.1, 1.16308714363915
0.101, 1.15967268376194
0.102, 1.15628505189914
0.103, 1.15292375319896
0.104, 1.14958830663226
0.105, 1.14627824447704
0.106, 1.14299311182671
0.107, 1.13973246612112
0.108, 1.13649587669889
0.109, 1.13328292437005
0.11, 1.13009320100771
0.111, 1.12692630915797
0.112, 1.12378186166683
0.113, 1.12065948132349
0.114, 1.11755880051894
0.115, 1.11447946091929
0.116, 1.1114211131528
0.117, 1.10838341651023
0.118, 1.1053660386576
0.119, 1.10236865536083
0.12, 1.09939095022174
0.121, 1.09643261442466
0.122, 1.09349334649341
0.123, 1.09057285205788
0.124, 1.08767084362992
0.125, 1.08478704038806
0.126, 1.08192116797062
0.127, 1.07907295827679
0.128, 1.07624214927547
0.129, 1.07342848482123
0.13, 1.0706317144774
0.131, 1.0678515933457
0.132, 1.06508788190223
0.133, 1.06234034583953
0.134, 1.05960875591447
0.135, 1.05689288780162
0.136, 1.05419252195196
0.137, 1.05150744345664
0.138, 1.04883744191563
0.139, 1.04618231131093
0.14, 1.04354184988436
0.141, 1.04091586001946
0.142, 1.03830414812761
0.143, 1.03570652453799
0.144, 1.0331228033913
0.145, 1.03055280253713
0.146, 1.02799634343469
0.147, 1.02545325105698
0.148, 1.02292335379802
0.149, 1.02040648338325
0.15, 1.01790247478275
0.151, 1.01541116612739
0.152, 1.01293239862764
0.153, 1.01046601649497
0.154, 1.00801186686578
0.155, 1.00556979972773
0.156, 1.00313966784842
0.157, 1.00072132670627
0.158, 0.998314634423522
0.159, 0.995919451701398
0.16, 0.993535641757147
0.161, 0.991163070263083
0.162, 0.988801605287441
0.163, 0.986451117237018
0.164, 0.984111478801536
0.165, 0.981782564899658
0.166, 0.979464252626594
0.167, 0.97715642120326
0.168, 0.974858951926909
0.169, 0.972571728123209
0.17, 0.970294635099692
0.171, 0.968027560100547
0.172, 0.9657703922627
0.173, 0.963523022573144
0.174, 0.961285343827465
0.175, 0.959057250589536
0.176, 0.956838639152337
0.177, 0.954629407499854
0.178, 0.952429455270037
0.179, 0.950238683718765
0.18, 0.948056995684796
0.181, 0.945884295555673
0.182, 0.943720489234541
0.183, 0.941565484107857
0.184, 0.939419189013958
0.185, 0.937281514212471
0.186, 0.935152371354519
0.187, 0.933031673453713
0.188, 0.930919334857904
0.189, 0.928815271221662
0.19, 0.926719399479473
0.191, 0.924631637819614
0.192, 0.922551905658705
0.193, 0.920480123616903
0.194, 0.918416213493722
0.195, 0.916360098244466
0.196, 0.914311701957246
0.197, 0.912270949830571
0.198, 0.910237768151497
0.199, 0.908212084274311
0.2, 0.906193826599735
0.201, 0.904182924554645
0.202, 0.902179308572277
0.203, 0.90018291007291
0.204, 0.898193661445016
0.205, 0.89621149602686
0.206, 0.894236348088539
0.207, 0.892268152814443
0.208, 0.890306846286131
0.209, 0.888352365465611
0.21, 0.886404648179009
0.211, 0.884463633100611
0.212, 0.882529259737288
0.213, 0.880601468413261
0.214, 0.878680200255235
0.215, 0.876765397177852
0.216, 0.874857001869492
0.217, 0.87295495777838
0.218, 0.871059209099015
0.219, 0.869169700758899
0.22, 0.867286378405558
0.221, 0.865409188393862
0.222, 0.86353807777361
0.223, 0.861672994277399
0.224, 0.859813886308756
0.225, 0.857960702930521
0.226, 0.856113393853494
0.227, 0.85427190942532
0.228, 0.852436200619607
0.229, 0.850606219025294
0.23, 0.848781916836227
0.231, 0.846963246840964
0.232, 0.845150162412802
0.233, 0.843342617499997
0.234, 0.841540566616209
0.235, 0.839743964831127
0.236, 0.837952767761301
0.237, 0.83616693156116
0.238, 0.834386412914213
0.239, 0.832611169024435
0.24, 0.830841157607821
0.241, 0.829076336884119
0.242, 0.827316665568726
0.243, 0.825562102864753
0.244, 0.82381260845524
0.245, 0.822068142495533
0.246, 0.820328665605813
0.247, 0.818594138863769
0.248, 0.816864523797423
0.249, 0.815139782378085
0.25, 0.813419877013456
0.251, 0.811704770540862
0.252, 0.809994426220615
0.253, 0.808288807729513
0.254, 0.806587879154454
0.255, 0.804891604986181
0.256, 0.803199950113138
0.257, 0.801512879815456
0.258, 0.799830359759036
0.259, 0.798152355989762
0.26, 0.796478834927808
0.261, 0.794809763362061
0.262, 0.793145108444641
0.263, 0.791484837685533
0.264, 0.789828918947309
0.265, 0.788177320439948
0.266, 0.786530010715762
0.267, 0.784886958664401
0.268, 0.783248133507955
0.269, 0.781613504796152
0.27, 0.779983042401631
0.271, 0.778356716515306
0.272, 0.776734497641818
0.273, 0.775116356595058
0.274, 0.773502264493782
0.275, 0.771892192757291
0.276, 0.770286113101202
0.277, 0.76868399753328
0.278, 0.767085818349353
0.279, 0.765491548129293
0.28, 0.763901159733072
0.281, 0.762314626296881
0.282, 0.760731921229323
0.283, 0.759153018207664
0.284, 0.757577891174157
0.285, 0.756006514332421
0.286, 0.754438862143888
0.287, 0.75287490932431
0.288, 0.751314630840318
0.289, 0.749758001906053
0.29, 0.748204997979838
0.291, 0.746655594760919
0.292, 0.745109768186252
0.293, 0.743567494427349
0.294, 0.742028749887175
0.295, 0.740493511197092
0.296, 0.738961755213862
0.297, 0.737433459016691
0.298, 0.735908599904328
0.299, 0.734387155392206
0.3, 0.732869103209636
0.301, 0.731354421297038
0.302, 0.729843087803225
0.303, 0.728335081082726
0.304, 0.726830379693155
0.305, 0.725328962392619
0.306, 0.723830808137172
0.307, 0.722335896078302
0.308, 0.720844205560467
0.309, 0.719355716118662
0.31, 0.717870407476033
0.311, 0.716388259541517
0.312, 0.714909252407531
0.313, 0.713433366347686
0.314, 0.711960581814551
0.315, 0.710490879437431
0.316, 0.7090242400202
0.317, 0.707560644539157
0.318, 0.706100074140914
0.319, 0.704642510140321
0.32, 0.703187934018419
0.321, 0.701736327420427
0.322, 0.700287672153761
0.323, 0.698841950186074
0.324, 0.697399143643335
0.325, 0.695959234807938
0.326, 0.694522206116828
0.327, 0.693088040159666
0.328, 0.691656719677018
0.329, 0.690228227558567
0.33, 0.688802546841359
0.331, 0.687379660708069
0.332, 0.685959552485292
0.333, 0.684542205641865
0.334, 0.683127603787208
0.335, 0.681715730669691
0.336, 0.680306570175026
0.337, 0.67890010632468
0.338, 0.677496323274311
0.339, 0.676095205312231
0.34, 0.674696736857886
0.341, 0.673300902460356
0.342, 0.671907686796887
0.343, 0.670517074671431
0.344, 0.669129051013215
0.345, 0.667743600875327
0.346, 0.666360709433324
0.347, 0.664980361983856
0.348, 0.663602543943314
0.349, 0.662227240846495
0.35, 0.660854438345281
0.351, 0.659484122207348
0.352, 0.658116278314876
0.353, 0.656750892663296
0.354, 0.655387951360037
0.355, 0.654027440623304
0.356, 0.652669346780861
0.357, 0.651313656268842
0.358, 0.649960355630567
0.359, 0.648609431515384
0.36, 0.647260870677519
0.361, 0.645914659974948
0.362, 0.64457078636828
0.363, 0.643229236919653
0.364, 0.641889998791655
0.365, 0.640553059246244
0.366, 0.639218405643697
0.367, 0.637886025441564
0.368, 0.636555906193639
0.369, 0.635228035548947
0.37, 0.633902401250735
0.371, 0.632578991135491
0.372, 0.631257793131961
0.373, 0.62993879526019
0.374, 0.62862198563057
0.375, 0.627307352442898
0.376, 0.625994883985458
0.377, 0.624684568634097
0.378, 0.623376394851329
0.379, 0.622070351185443
0.38, 0.620766426269622
0.381, 0.619464608821075
0.382, 0.618164887640182
0.383, 0.616867251609647
0.384, 0.61557168969366
0.385, 0.614278190937074
0.386, 0.612986744464595
0.387, 0.611697339479971
0.388, 0.610409965265198
0.389, 0.609124611179745
0.39, 0.607841266659769
0.391, 0.606559921217356
0.392, 0.605280564439766
0.393, 0.604003185988686
0.394, 0.602727775599492
0.395, 0.601454323080526
0.396, 0.600182818312373
0.397, 0.598913251247154
0.398, 0.597645611907826
0.399, 0.596379890387487
0.4, 0.595116076848694
0.401, 0.593854161522785
0.402, 0.592594134709216
0.403, 0.591335986774898
0.404, 0.590079708153547
0.405, 0.588825289345042
0.406, 0.587572720914784
0.407, 0.586321993493074
0.408, 0.585073097774492
0.409, 0.583826024517277
0.41, 0.582580764542728
0.411, 0.581337308734604
0.412, 0.580095648038531
0.413, 0.578855773461415
0.414, 0.577617676070869
0.415, 0.576381346994642
0.416, 0.575146777420047
0.417, 0.573913958593413
0.418, 0.572682881819528
0.419, 0.571453538461096
0.42, 0.570225919938198
0.421, 0.56900001772776
0.422, 0.567775823363027
0.423, 0.566553328433044
0.424, 0.565332524582136
0.425, 0.564113403509412
0.426, 0.562895956968247
0.427, 0.5616801767658
0.428, 0.560466054762513
0.429, 0.55925358287163
0.43, 0.558042753058717
0.431, 0.556833557341185
0.432, 0.555625987787824
0.433, 0.554420036518336
0.434, 0.55321569570288
0.435, 0.552012957561616
0.436, 0.550811814364256
0.437, 0.549612258429622
0.438, 0.548414282125208
0.439, 0.547217877866743
0.44, 0.546023038117768
0.441, 0.544829755389206
0.442, 0.543638022238944
0.443, 0.542447831271422
0.444, 0.541259175137217
0.445, 0.540072046532643
0.446, 0.538886438199342
0.447, 0.537702342923895
0.448, 0.536519753537427
0.449, 0.535338662915212
0.45, 0.5341590639763
0.451, 0.532980949683128
0.452, 0.531804313041146
0.453, 0.530629147098449
0.454, 0.529455444945405
0.455, 0.52828319971429
0.456, 0.527112404578931
0.457, 0.525943052754351
0.458, 0.52477513749641
0.459, 0.523608652101463
0.46, 0.522443589906011
0.461, 0.521279944286359
0.462, 0.520117708658283
0.463, 0.518956876476689
0.464, 0.517797441235287
0.465, 0.516639396466262
0.466, 0.515482735739951
0.467, 0.514327452664519
0.468, 0.513173540885645
0.469, 0.512020994086211
0.47, 0.510869805985982
0.471, 0.509719970341307
0.472, 0.508571480944811
0.473, 0.507424331625096
0.474, 0.506278516246439
0.475, 0.5051340287085
0.476, 0.503990862946029
0.477, 0.502849012928578
0.478, 0.501708472660213
0.479, 0.500569236179231
0.48, 0.499431297557882
0.481, 0.498294650902087
0.482, 0.497159290351169
0.483, 0.496025210077575
0.484, 0.494892404286611
0.485, 0.493760867216175
0.486, 0.492630593136489
0.487, 0.491501576349843
0.488, 0.490373811190334
0.489, 0.489247292023609
0.49, 0.488122013246613
0.491, 0.486997969287338
0.492, 0.485875154604573
0.493, 0.484753563687656
0.494, 0.483633191056237
0.495, 0.482514031260031
0.496, 0.481396078878578
0.497, 0.480279328521012
0.498, 0.479163774825821
0.499, 0.47804941246062
0.5, 0.476936236121916
0.501, 0.475824240534883
0.502, 0.474713420453138
0.503, 0.473603770658515
0.504, 0.472495285960847
0.505, 0.471387961197742
0.506, 0.470281791234371
0.507, 0.469176770963254
0.508, 0.46807289530404
0.509, 0.466970159203304
0.51, 0.465868557634336
0.511, 0.464768085596931
0.512, 0.463668738117188
0.513, 0.462570510247308
0.514, 0.461473397065387
0.515, 0.460377393675224
0.516, 0.45928249520612
0.517, 0.458188696812682
0.518, 0.457095993674634
0.519, 0.456004380996619
0.52, 0.454913854008014
0.521, 0.453824407962739
0.522, 0.452736038139073
0.523, 0.451648739839468
0.524, 0.450562508390363
0.525, 0.44947733914201
0.526, 0.448393227468287
0.527, 0.447310168766524
0.528, 0.446228158457327
0.529, 0.445147191984398
0.53, 0.444067264814371
0.531, 0.442988372436631
0.532, 0.44191051036315
0.533, 0.440833674128317
0.534, 0.439757859288769
0.535, 0.438683061423229
0.536, 0.43760927613234
0.537, 0.436536499038503
0.538, 0.435464725785713
0.539, 0.434393952039407
0.54, 0.433324173486297
0.541, 0.43225538583422
0.542, 0.431187584811977
0.543, 0.430120766169185
0.544, 0.42905492567612
0.545, 0.427990059123566
0.546, 0.426926162322669
0.547, 0.425863231104782
0.548, 0.424801261321325
0.549, 0.423740248843631
0.55, 0.42268018956281
0.551, 0.421621079389598
0.552, 0.420562914254219
0.553, 0.419505690106243
0.554, 0.418449402914445
0.555, 0.41739404866667
0.556, 0.416339623369691
0.557, 0.415286123049075
0.558, 0.41423354374905
0.559, 0.413181881532369
0.56, 0.412131132480177
0.561, 0.41108129269188
0.562, 0.410032358285016
0.563, 0.408984325395124
0.564, 0.407937190175614
0.565, 0.406890948797646
0.566, 0.405845597449998
0.567, 0.404801132338945
0.568, 0.403757549688131
0.569, 0.40271484573845
0.57, 0.401673016747922
0.571, 0.400632058991575
0.572, 0.399591968761321
0.573, 0.39855274236584
0.574, 0.397514376130462
0.575, 0.396476866397049
0.576, 0.395440209523882
0.577, 0.394404401885541
0.578, 0.393369439872798
0.579, 0.392335319892497
0.58, 0.391302038367448
0.581, 0.390269591736311
0.582, 0.38923797645349
0.583, 0.388207188989019
0.584, 0.387177225828459
0.585, 0.386148083472787
0.586, 0.385119758438289
0.587, 0.384092247256456
0.588, 0.383065546473881
0.589, 0.382039652652148
0.59, 0.381014562367737
0.591, 0.379990272211916
0.592, 0.378966778790642
0.593, 0.37794407872446
0.594, 0.376922168648401
0.595, 0.375901045211886
0.596, 0.374880705078628
0.597, 0.373861144926528
0.598, 0.372842361447589
0.599, 0.371824351347808
0.6, 0.370807111347091
0.601, 0.369790638179153
0.602, 0.368774928591426
0.603, 0.367759979344964
0.604, 0.366745787214354
0.605, 0.365732348987623
0.606, 0.364719661466145
0.607, 0.363707721464556
0.608, 0.362696525810659
0.609, 0.361686071345339
0.61, 0.360676354922474
0.611, 0.359667373408847
0.612, 0.358659123684059
0.613, 0.357651602640447
0.614, 0.356644807182993
0.615, 0.355638734229242
0.616, 0.35463338070922
0.617, 0.353628743565346
0.618, 0.352624819752355
0.619, 0.35162160623721
0.62, 0.350619099999026
0.621, 0.349617298028984
0.622, 0.348616197330256
0.623, 0.347615794917921
0.624, 0.346616087818888
0.625, 0.345617073071819
0.626, 0.344618747727048
0.627, 0.343621108846505
0.628, 0.342624153503642
0.629, 0.341627878783352
0.63, 0.340632281781898
0.631, 0.339637359606836
0.632, 0.33864310937694
0.633, 0.337649528222131
0.634, 0.336656613283398
0.635, 0.335664361712734
0.636, 0.334672770673056
0.637, 0.333681837338136
0.638, 0.33269155889253
0.639, 0.33170193253151
0.64, 0.330712955460989
0.641, 0.329724624897454
0.642, 0.328736938067898
0.643, 0.32774989220975
0.644, 0.326763484570806
0.645, 0.325777712409163
0.646, 0.324792572993153
0.647, 0.323808063601273
0.648, 0.322824181522123
0.649, 0.321840924054336
0.65, 0.320858288506515
0.651, 0.319876272197172
0.652, 0.318894872454655
0.653, 0.317914086617093
0.654, 0.316933912032329
0.655, 0.315954346057855
0.656, 0.314975386060753
0.657, 0.313997029417632
0.658, 0.313019273514567
0.659, 0.312042115747037
0.66, 0.311065553519862
0.661, 0.310089584247148
0.662, 0.309114205352225
0.663, 0.308139414267585
0.664, 0.307165208434827
0.665, 0.306191585304594
0.666, 0.30521854233652
0.667, 0.30424607699917
0.668, 0.303274186769978
0.669, 0.302302869135201
0.67, 0.301332121589849
0.671, 0.300361941637642
0.672, 0.299392326790941
0.673, 0.298423274570706
0.674, 0.29745478250643
0.675, 0.29648684813609
0.676, 0.295519469006093
0.677, 0.294552642671218
0.678, 0.293586366694567
0.679, 0.292620638647509
0.68, 0.291655456109627
0.681, 0.290690816668669
0.682, 0.289726717920493
0.683000000000001, 0.288763157469013
0.684000000000001, 0.287800132926153
0.685000000000001, 0.286837641911793
0.686000000000001, 0.285875682053718
0.687000000000001, 0.284914250987567
0.688000000000001, 0.283953346356786
0.689000000000001, 0.282992965812576
0.690000000000001, 0.282033107013843
0.691000000000001, 0.281073767627151
0.692000000000001, 0.280114945326671
0.693000000000001, 0.279156637794135
0.694000000000001, 0.278198842718786
0.695000000000001, 0.27724155779733
0.696000000000001, 0.276284780733891
0.697000000000001, 0.275328509239963
0.698000000000001, 0.274372741034358
0.699000000000001, 0.273417473843169
0.700000000000001, 0.272462705399716
0.701000000000001, 0.271508433444502
0.702000000000001, 0.270554655725169
0.703000000000001, 0.269601369996453
0.704000000000001, 0.268648574020134
0.705000000000001, 0.267696265564998
0.706000000000001, 0.266744442406787
0.707000000000001, 0.265793102328159
0.708000000000001, 0.264842243118641
0.709000000000001, 0.263891862574586
0.710000000000001, 0.262941958499131
0.711000000000001, 0.261992528702152
0.712000000000001, 0.261043571000223
0.713000000000001, 0.260095083216572
0.714000000000001, 0.25914706318104
0.715000000000001, 0.258199508730038
0.716000000000001, 0.257252417706504
0.717000000000001, 0.256305787959865
0.718000000000001, 0.255359617345993
0.719000000000001, 0.254413903727165
0.720000000000001, 0.253468644972021
0.721000000000001, 0.252523838955524
0.722000000000001, 0.251579483558923
0.723000000000001, 0.250635576669709
0.724000000000001, 0.249692116181574
0.725000000000001, 0.248749099994378
0.726000000000001, 0.247806526014102
0.727000000000001, 0.246864392152817
0.728000000000001, 0.245922696328636
0.729000000000001, 0.244981436465684
0.730000000000001, 0.244040610494055
0.731000000000001, 0.243100216349775
0.732000000000001, 0.242160251974763
0.733000000000001, 0.241220715316795
0.734000000000001, 0.240281604329468
0.735000000000001, 0.239342916972159
0.736000000000001, 0.238404651209989
0.737000000000001, 0.237466805013789
0.738000000000001, 0.236529376360061
0.739000000000001, 0.235592363230941
0.740000000000001, 0.234655763614167
0.741000000000001, 0.233719575503039
0.742000000000001, 0.232783796896382
0.743000000000001, 0.231848425798518
0.744000000000001, 0.230913460219223
0.745000000000001, 0.229978898173693
0.746000000000001, 0.229044737682516
0.747000000000001, 0.228110976771628
0.748000000000001, 0.227177613472285
0.749000000000001, 0.226244645821026
0.750000000000001, 0.225312071859639
0.751000000000001, 0.22437988963513
0.752000000000001, 0.223448097199683
0.753000000000001, 0.222516692610634
0.754000000000001, 0.221585673930434
0.755000000000001, 0.220655039226614
0.756000000000001, 0.219724786571756
0.757000000000001, 0.218794914043459
0.758000000000001, 0.217865419724303
0.759000000000001, 0.216936301701823
0.760000000000001, 0.216007558068472
0.761000000000001, 0.21507918692159
0.762000000000001, 0.214151186363373
0.763000000000001, 0.213223554500841
0.764000000000001, 0.212296289445807
0.765000000000001, 0.211369389314843
0.766000000000001, 0.210442852229254
0.767000000000001, 0.209516676315042
0.768000000000001, 0.208590859702879
0.769000000000001, 0.207665400528072
0.770000000000001, 0.206740296930537
0.771000000000001, 0.205815547054768
0.772000000000001, 0.204891149049802
0.773000000000001, 0.203967101069197
0.774000000000001, 0.203043401270996
0.775000000000001, 0.202120047817699
0.776000000000001, 0.201197038876234
0.777000000000001, 0.200274372617928
0.778000000000001, 0.199352047218478
0.779000000000001, 0.19843006085792
0.780000000000001, 0.197508411720601
0.781000000000001, 0.196587097995152
0.782000000000001, 0.195666117874458
0.783000000000001, 0.19474546955563
0.784000000000001, 0.193825151239976
0.785000000000001, 0.192905161132971
0.786000000000001, 0.191985497444236
0.787000000000001, 0.191066158387502
0.788000000000001, 0.190147142180587
0.789000000000001, 0.189228447045366
0.790000000000001, 0.188310071207748
0.791000000000001, 0.187392012897642
0.792000000000001, 0.186474270348935
0.793000000000001, 0.185556841799464
0.794000000000001, 0.184639725490987
0.795000000000001, 0.183722919669159
0.796000000000001, 0.182806422583504
0.797000000000001, 0.181890232487389
0.798000000000001, 0.180974347637996
0.799000000000001, 0.1800587662963
0.800000000000001, 0.179143486727038
0.801000000000001, 0.178228507198686
0.802000000000001, 0.177313825983431
0.803000000000001, 0.176399441357149
0.804000000000001, 0.175485351599375
0.805000000000001, 0.174571554993283
0.806000000000001, 0.173658049825653
0.807000000000001, 0.172744834386854
0.808000000000001, 0.171831906970812
0.809000000000001, 0.170919265874991
0.810000000000001, 0.170006909400363
0.811000000000001, 0.169094835851389
0.812000000000001, 0.168183043535985
0.813000000000001, 0.16727153076551
0.814000000000001, 0.166360295854732
0.815000000000001, 0.165449337121806
0.816000000000001, 0.164538652888254
0.817000000000001, 0.163628241478934
0.818000000000001, 0.162718101222022
0.819000000000001, 0.161808230448986
0.820000000000001, 0.160898627494561
0.821000000000001, 0.15998929069673
0.822000000000001, 0.159080218396691
0.823000000000001, 0.158171408938847
0.824000000000001, 0.15726286067077
0.825000000000001, 0.156354571943187
0.826000000000001, 0.15544654110995
0.827000000000001, 0.154538766528021
0.828000000000001, 0.153631246557439
0.829000000000001, 0.152723979561308
0.830000000000001, 0.151816963905764
0.831000000000001, 0.150910197959963
0.832000000000001, 0.150003680096048
0.833000000000001, 0.149097408689135
0.834000000000001, 0.148191382117286
0.835000000000001, 0.147285598761489
0.836000000000001, 0.146380057005634
0.837000000000001, 0.145474755236494
0.838000000000001, 0.144569691843701
0.839000000000001, 0.143664865219722
0.840000000000001, 0.142760273759844
0.841000000000001, 0.141855915862145
0.842000000000001, 0.140951789927476
0.843000000000001, 0.140047894359443
0.844000000000001, 0.139144227564375
0.845000000000001, 0.138240787951318
0.846000000000001, 0.137337573931999
0.847000000000001, 0.136434583920814
0.848000000000001, 0.135531816334805
0.849000000000001, 0.134629269593637
0.850000000000001, 0.133726942119581
0.851000000000001, 0.13282483233749
0.852000000000001, 0.131922938674777
0.853000000000001, 0.131021259561401
0.854000000000001, 0.130119793429839
0.855000000000001, 0.129218538715071
0.856000000000001, 0.128317493854557
0.857000000000001, 0.127416657288216
0.858000000000001, 0.12651602745841
0.859000000000001, 0.125615602809918
0.860000000000001, 0.124715381789922
0.861000000000001, 0.123815362847982
0.862000000000001, 0.122915544436018
0.863000000000001, 0.122015925008293
0.864000000000001, 0.121116503021389
0.865000000000001, 0.120217276934189
0.866000000000001, 0.11931824520786
0.867000000000001, 0.118419406305826
0.868000000000001, 0.11752075869376
0.869000000000001, 0.116622300839554
0.870000000000001, 0.115724031213305
0.871000000000001, 0.114825948287298
0.872000000000001, 0.113928050535979
0.873000000000001, 0.113030336435943
0.874000000000001, 0.112132804465914
0.875000000000001, 0.111235453106722
0.876000000000001, 0.11033828084129
0.877000000000001, 0.109441286154608
0.878000000000001, 0.108544467533725
0.879000000000001, 0.107647823467718
0.880000000000001, 0.10675135244768
0.881000000000001, 0.105855052966704
0.882000000000001, 0.104958923519857
0.883000000000001, 0.104062962604168
0.884000000000001, 0.103167168718609
0.885000000000001, 0.102271540364072
0.886000000000001, 0.101376076043357
0.887000000000001, 0.100480774261148
0.888000000000001, 0.0995856335239997
0.889000000000001, 0.0986906523403163
0.890000000000001, 0.0977958292203363
0.891000000000001, 0.0969011626761119
0.892000000000001, 0.0960066512214928
0.893000000000001, 0.0951122933721074
0.894000000000001, 0.0942180876453452
0.895000000000001, 0.0933240325603415
0.896000000000001, 0.0924301266379557
0.897000000000001, 0.0915363684007563
0.898000000000001, 0.0906427563730039
0.899000000000001, 0.0897492890806307
0.900000000000001, 0.0888559650512279
0.901000000000001, 0.087962782814023
0.902000000000001, 0.0870697408998665
0.903000000000001, 0.0861768378412129
0.904000000000001, 0.0852840721721036
0.905000000000001, 0.0843914424281504
0.906000000000001, 0.0834989471465186
0.907000000000001, 0.0826065848659083
0.908000000000001, 0.0817143541265385
0.909000000000001, 0.0808222534701311
0.910000000000001, 0.0799302814398926
0.911000000000001, 0.0790384365804977
0.912000000000001, 0.0781467174380734
0.913000000000001, 0.0772551225601807
0.914000000000001, 0.0763636504957977
0.915000000000001, 0.0754722997953064
0.916000000000001, 0.0745810690104714
0.917000000000001, 0.0736899566944266
0.918000000000001, 0.0727989614016574
0.919000000000001, 0.0719080816879853
0.920000000000001, 0.0710173161105492
0.921000000000001, 0.0701266632277922
0.922000000000001, 0.0692361215994427
0.923000000000001, 0.0683456897864988
0.924000000000001, 0.0674553663512136
0.925000000000001, 0.0665651498570758
0.926000000000001, 0.0656750388687981
0.927000000000001, 0.0647850319522957
0.928000000000001, 0.0638951276746753
0.929000000000001, 0.0630053246042156
0.930000000000001, 0.0621156213103532
0.931000000000001, 0.0612260163636649
0.932000000000001, 0.0603365083358548
0.933000000000001, 0.0594470957997342
0.934000000000001, 0.0585577773292105
0.935000000000001, 0.0576685514992677
0.936000000000001, 0.056779416885952
0.937000000000001, 0.0558903720663564
0.938000000000001, 0.0550014156186059
0.939000000000001, 0.0541125461218385
0.940000000000001, 0.0532237621561937
0.941000000000001, 0.0523350623027943
0.942000000000001, 0.0514464451437317
0.943000000000001, 0.0505579092620517
0.944000000000001, 0.049669453241736
0.945000000000001, 0.0487810756676901
0.946000000000001, 0.0478927751257251
0.947000000000001, 0.0470045502025454
0.948000000000001, 0.0461163994857302
0.949000000000001, 0.0452283215637207
0.950000000000001, 0.044340315025804
0.951000000000001, 0.0434523784620971
0.952000000000001, 0.0425645104635337
0.953000000000001, 0.0416767096218465
0.954000000000001, 0.0407889745295547
0.955000000000001, 0.039901303779948
0.956000000000001, 0.0390136959670699
0.957000000000001, 0.0381261496857058
0.958000000000001, 0.0372386635313652
0.959000000000001, 0.0363512361002684
0.960000000000001, 0.0354638659893313
0.961000000000001, 0.034576551796151
0.962000000000001, 0.0336892921189891
0.963000000000001, 0.0328020855567603
0.964000000000001, 0.0319149307090124
0.965000000000001, 0.0310278261759182
0.966000000000001, 0.030140770558255
0.967000000000001, 0.0292537624573929
0.968000000000001, 0.02836680047528
0.969000000000001, 0.0274798832144267
0.970000000000001, 0.0265930092778917
0.971000000000001, 0.0257061772692684
0.972000000000001, 0.0248193857926674
0.973000000000001, 0.0239326334527067
0.974000000000001, 0.0230459188544927
0.975000000000001, 0.0221592406036075
0.976000000000001, 0.0212725973060962
0.977000000000001, 0.0203859875684491
0.978000000000001, 0.0194994099975905
0.979000000000001, 0.0186128632008628
0.980000000000001, 0.0177263457860113
0.981000000000001, 0.0168398563611724
0.982000000000001, 0.015953393534858
0.983000000000001, 0.0150669559159401
0.984000000000001, 0.014180542113639
0.985000000000001, 0.0132941507375072
0.986000000000001, 0.0124077803974165
0.987000000000001, 0.0115214297035431
0.988000000000001, 0.010635097266354
0.989000000000001, 0.00974878169659231
0.990000000000001, 0.00886248160526337
0.991000000000001, 0.00797619560362256
0.992000000000001, 0.00708992230315844
0.993000000000001, 0.00620366031557946
0.994000000000001, 0.00531740825280301
0.995000000000001, 0.00443116472693689
0.996000000000001, 0.00354492835026855
0.997000000000001, 0.00265869773525045
0.998000000000001, 0.00177247149448638
0.999000000000001, 0.000886248240717528
1, -2.65868089794755E-08
1.001, -0.000886248240718413
1.002, -0.00177247149448756
1.003, -0.00265869773525163
1.004, -0.00354492835026943
1.005, -0.00443116472693719
1.006, -0.0053174082528034
1.007, -0.00620366031557995
1.008, -0.00708992230315873
1.009, -0.00797619560362295
1.01, -0.00886248160526396
1.011, -0.00974878169659221
1.012, -0.0106350972663536
1.013, -0.0115214297035431
1.014, -0.0124077803974164
1.015, -0.0132941507375067
1.016, -0.0141805421136387
1.017, -0.0150669559159395
1.018, -0.0159533935348574
1.019, -0.0168398563611723
1.02, -0.0177263457860107
1.021, -0.0186128632008621
1.022, -0.0194994099975898
1.023, -0.0203859875684482
1.024, -0.0212725973060948
1.025, -0.0221592406036062
1.026, -0.0230459188544913
1.027, -0.0239326334527054
1.028, -0.024819385792666
1.029, -0.0257061772692665
1.03, -0.0265930092778901
1.031, -0.0274798832144246
1.032, -0.0283668004752777
1.033, -0.0292537624573911
1.034, -0.0301407705582524
1.035, -0.0310278261759156
1.036, -0.0319149307090102
1.037, -0.0328020855567577
1.038, -0.033689292118987
1.039, -0.0345765517961488
1.04, -0.0354638659893288
1.041, -0.0363512361002655
1.042, -0.0372386635313622
1.043, -0.0381261496857031
1.044, -0.039013695967067
1.045, -0.0399013037799448
1.046, -0.0407889745295516
1.047, -0.0416767096218432
1.048, -0.0425645104635299
1.049, -0.0434523784620936
1.05, -0.0443403150258005
1.051, -0.0452283215637169
1.05199999999999, -0.0461163994857266
1.05299999999999, -0.0470045502025412
1.05399999999999, -0.0478927751257211
1.05499999999999, -0.0487810756676858
1.05599999999999, -0.0496694532417316
1.05699999999999, -0.0505579092620474
1.05799999999999, -0.0514464451437272
1.05899999999999, -0.0523350623027897
1.05999999999999, -0.0532237621561888
1.06099999999999, -0.0541125461218337
1.06199999999999, -0.055001415618601
1.06299999999999, -0.055890372066352
1.06399999999999, -0.0567794168859472
1.06499999999999, -0.0576685514992628
1.06599999999999, -0.0585577773292054
1.06699999999999, -0.0594470957997295
1.06799999999999, -0.0603365083358494
1.06899999999999, -0.0612260163636598
1.06999999999999, -0.0621156213103474
1.07099999999999, -0.0630053246042103
1.07199999999999, -0.0638951276746697
1.07299999999999, -0.0647850319522897
1.07399999999999, -0.0656750388687918
1.07499999999999, -0.0665651498570697
1.07599999999999, -0.0674553663512071
1.07699999999999, -0.0683456897864926
1.07799999999999, -0.069236121599436
1.07899999999999, -0.0701266632277856
1.07999999999999, -0.0710173161105426
1.08099999999999, -0.0719080816879785
1.08199999999999, -0.072798961401651
1.08299999999999, -0.0736899566944194
1.08399999999999, -0.0745810690104645
1.08499999999999, -0.0754722997952993
1.08599999999999, -0.0763636504957906
1.08699999999999, -0.0772551225601734
1.08799999999999, -0.0781467174380662
1.08899999999999, -0.0790384365804903
1.08999999999999, -0.0799302814398849
1.09099999999999, -0.0808222534701232
1.09199999999999, -0.0817143541265303
1.09299999999999, -0.0826065848659004
1.09399999999999, -0.0834989471465108
1.09499999999999, -0.0843914424281424
1.09599999999999, -0.0852840721720958
1.09699999999999, -0.0861768378412045
1.09799999999999, -0.0870697408998583
1.09899999999999, -0.0879627828140145
1.09999999999999, -0.0888559650512194
1.10099999999999, -0.0897492890806224
1.10199999999999, -0.0906427563729951
1.10299999999999, -0.0915363684007477
1.10399999999999, -0.0924301266379466
1.10499999999999, -0.0933240325603327
1.10599999999999, -0.094218087645336
1.10699999999999, -0.0951122933720976
1.10799999999999, -0.0960066512214835
1.10899999999999, -0.0969011626761024
1.10999999999999, -0.0977958292203268
1.11099999999999, -0.0986906523403066
1.11199999999999, -0.0995856335239897
1.11299999999999, -0.100480774261138
1.11399999999999, -0.101376076043347
1.11499999999999, -0.102271540364063
1.11599999999999, -0.103167168718599
1.11699999999999, -0.104062962604158
1.11799999999999, -0.104958923519846
1.11899999999999, -0.105855052966693
1.11999999999999, -0.106751352447669
1.12099999999999, -0.107647823467707
1.12199999999999, -0.108544467533715
1.12299999999999, -0.109441286154598
1.12399999999999, -0.110338280841279
1.12499999999999, -0.111235453106711
1.12599999999999, -0.112132804465902
1.12699999999999, -0.113030336435932
1.12799999999999, -0.113928050535967
1.12899999999999, -0.114825948287287
1.12999999999999, -0.115724031213294
1.13099999999999, -0.116622300839542
1.13199999999999, -0.117520758693748
1.13299999999999, -0.118419406305814
1.13399999999999, -0.119318245207848
1.13499999999999, -0.120217276934177
1.13599999999999, -0.121116503021376
1.13699999999999, -0.122015925008281
1.13799999999999, -0.122915544436005
1.13899999999999, -0.123815362847969
1.13999999999999, -0.124715381789909
1.14099999999999, -0.125615602809905
1.14199999999999, -0.126516027458397
1.14299999999998, -0.127416657288203
1.14399999999998, -0.128317493854544
1.14499999999998, -0.129218538715058
1.14599999999998, -0.130119793429825
1.14699999999998, -0.131021259561387
1.14799999999998, -0.131922938674763
1.14899999999998, -0.132824832337476
1.14999999999998, -0.133726942119568
1.15099999999998, -0.134629269593624
1.15199999999998, -0.135531816334791
1.15299999999998, -0.1364345839208
1.15399999999998, -0.137337573931985
1.15499999999998, -0.138240787951304
1.15599999999998, -0.139144227564361
1.15699999999998, -0.140047894359428
1.15799999999998, -0.140951789927462
1.15899999999998, -0.14185591586213
1.15999999999998, -0.142760273759829
1.16099999999998, -0.143664865219707
1.16199999999998, -0.144569691843686
1.16299999999998, -0.145474755236479
1.16399999999998, -0.146380057005619
1.16499999999998, -0.147285598761473
1.16599999999998, -0.14819138211727
1.16699999999998, -0.149097408689119
1.16799999999998, -0.150003680096032
1.16899999999998, -0.150910197959947
1.16999999999998, -0.151816963905749
1.17099999999998, -0.152723979561292
1.17199999999998, -0.153631246557423
1.17299999999998, -0.154538766528004
1.17399999999998, -0.155446541109934
1.17499999999998, -0.15635457194317
1.17599999999998, -0.157262860670754
1.17699999999998, -0.15817140893883
1.17799999999998, -0.159080218396674
1.17899999999998, -0.159989290696713
1.17999999999998, -0.160898627494544
1.18099999999998, -0.161808230448969
1.18199999999998, -0.162718101222005
1.18299999999998, -0.163628241478916
1.18399999999998, -0.164538652888237
1.18499999999998, -0.165449337121789
1.18599999999998, -0.166360295854714
1.18699999999998, -0.167271530765493
1.18799999999998, -0.168183043535968
1.18899999999998, -0.169094835851371
1.18999999999998, -0.170006909400345
1.19099999999998, -0.170919265874973
1.19199999999998, -0.171831906970794
1.19299999999998, -0.172744834386835
1.19399999999998, -0.173658049825634
1.19499999999998, -0.174571554993264
1.19599999999998, -0.175485351599357
1.19699999999998, -0.17639944135713
1.19799999999998, -0.177313825983412
1.19899999999998, -0.178228507198667
1.19999999999998, -0.179143486727019
1.20099999999998, -0.180058766296281
1.20199999999998, -0.180974347637977
1.20299999999998, -0.18189023248737
1.20399999999998, -0.182806422583484
1.20499999999998, -0.183722919669139
1.20599999999998, -0.184639725490967
1.20699999999998, -0.185556841799444
1.20799999999998, -0.186474270348915
1.20899999999998, -0.187392012897622
1.20999999999998, -0.188310071207728
1.21099999999998, -0.189228447045346
1.21199999999998, -0.190147142180566
1.21299999999998, -0.191066158387481
1.21399999999998, -0.191985497444215
1.21499999999998, -0.19290516113295
1.21599999999998, -0.193825151239955
1.21699999999998, -0.194745469555609
1.21799999999998, -0.195666117874437
1.21899999999998, -0.196587097995131
1.21999999999998, -0.197508411720579
1.22099999999998, -0.198430060857898
1.22199999999998, -0.199352047218456
1.22299999999998, -0.200274372617907
1.22399999999998, -0.201197038876212
1.22499999999998, -0.202120047817677
1.22599999999998, -0.203043401270974
1.22699999999998, -0.203967101069175
1.22799999999998, -0.20489114904978
1.22899999999998, -0.205815547054745
1.22999999999998, -0.206740296930515
1.23099999999998, -0.207665400528049
1.23199999999998, -0.208590859702856
1.23299999999998, -0.20951667631502
1.23399999999997, -0.210442852229231
1.23499999999997, -0.21136938931482
1.23599999999997, -0.212296289445783
1.23699999999997, -0.213223554500818
1.23799999999997, -0.21415118636335
1.23899999999997, -0.215079186921567
1.23999999999997, -0.216007558068449
1.24099999999997, -0.2169363017018
1.24199999999997, -0.217865419724279
1.24299999999997, -0.218794914043435
1.24399999999997, -0.219724786571732
1.24499999999997, -0.22065503922659
1.24599999999997, -0.22158567393041
1.24699999999997, -0.22251669261061
1.24799999999997, -0.223448097199659
1.24899999999997, -0.224379889635105
1.24999999999997, -0.225312071859615
1.25099999999997, -0.226244645821001
1.25199999999997, -0.22717761347226
1.25299999999997, -0.228110976771603
1.25399999999997, -0.229044737682491
1.25499999999997, -0.229978898173668
1.25599999999997, -0.230913460219198
1.25699999999997, -0.231848425798493
1.25799999999997, -0.232783796896357
1.25899999999997, -0.233719575503013
1.25999999999997, -0.234655763614142
1.26099999999997, -0.235592363230915
1.26199999999997, -0.236529376360034
1.26299999999997, -0.237466805013763
1.26399999999997, -0.238404651209963
1.26499999999997, -0.239342916972132
1.26599999999997, -0.240281604329442
1.26699999999997, -0.241220715316769
1.26799999999997, -0.242160251974736
1.26899999999997, -0.243100216349748
1.26999999999997, -0.244040610494028
1.27099999999997, -0.244981436465657
1.27199999999997, -0.245922696328609
1.27299999999997, -0.24686439215279
1.27399999999997, -0.247806526014075
1.27499999999997, -0.24874909999435
1.27599999999997, -0.249692116181547
1.27699999999997, -0.250635576669681
1.27799999999997, -0.251579483558896
1.27899999999997, -0.252523838955496
1.27999999999997, -0.253468644971993
1.28099999999997, -0.254413903727137
1.28199999999997, -0.255359617345965
1.28299999999997, -0.256305787959837
1.28399999999997, -0.257252417706475
1.28499999999997, -0.258199508730009
1.28599999999997, -0.259147063181012
1.28699999999997, -0.260095083216544
1.28799999999997, -0.261043571000194
1.28899999999997, -0.261992528702123
1.28999999999997, -0.262941958499102
1.29099999999997, -0.263891862574557
1.29199999999997, -0.264842243118612
1.29299999999997, -0.26579310232813
1.29399999999997, -0.266744442406758
1.29499999999997, -0.267696265564968
1.29599999999997, -0.268648574020104
1.29699999999997, -0.269601369996423
1.29799999999997, -0.270554655725139
1.29899999999997, -0.271508433444472
1.29999999999997, -0.272462705399685
1.30099999999997, -0.273417473843139
1.30199999999997, -0.274372741034327
1.30299999999997, -0.275328509239932
1.30399999999997, -0.27628478073386
1.30499999999997, -0.277241557797299
1.30599999999997, -0.278198842718755
1.30699999999997, -0.279156637794104
1.30799999999997, -0.28011494532664
1.30899999999997, -0.281073767627119
1.30999999999997, -0.282033107013811
1.31099999999997, -0.282992965812544
1.31199999999997, -0.283953346356754
1.31299999999997, -0.284914250987534
1.31399999999997, -0.285875682053685
1.31499999999997, -0.286837641911761
1.31599999999997, -0.287800132926121
1.31699999999997, -0.28876315746898
1.31799999999997, -0.28972671792046
1.31899999999997, -0.290690816668637
1.31999999999997, -0.291655456109594
1.32099999999997, -0.292620638647476
1.32199999999997, -0.293586366694534
1.32299999999997, -0.294552642671185
1.32399999999997, -0.295519469006059
1.32499999999996, -0.296486848136057
1.32599999999996, -0.297454782506396
1.32699999999996, -0.298423274570672
1.32799999999996, -0.299392326790907
1.32899999999996, -0.300361941637607
1.32999999999996, -0.301332121589816
1.33099999999996, -0.302302869135167
1.33199999999996, -0.303274186769944
1.33299999999996, -0.304246076999135
1.33399999999996, -0.305218542336485
1.33499999999996, -0.306191585304559
1.33599999999996, -0.307165208434792
1.33699999999996, -0.30813941426755
1.33799999999996, -0.30911420535219
1.33899999999996, -0.310089584247113
1.33999999999996, -0.311065553519826
1.34099999999996, -0.312042115747001
1.34199999999996, -0.313019273514532
1.34299999999996, -0.313997029417597
1.34399999999996, -0.314975386060717
1.34499999999996, -0.315954346057819
1.34599999999996, -0.316933912032293
1.34699999999996, -0.317914086617057
1.34799999999996, -0.318894872454619
1.34899999999996, -0.319876272197135
1.34999999999996, -0.320858288506479
1.35099999999996, -0.321840924054299
1.35199999999996, -0.322824181522086
1.35299999999996, -0.323808063601236
1.35399999999996, -0.324792572993116
1.35499999999996, -0.325777712409125
1.35599999999996, -0.326763484570768
1.35699999999996, -0.327749892209712
1.35799999999996, -0.32873693806786
1.35899999999996, -0.329724624897416
1.35999999999996, -0.330712955460951
1.36099999999996, -0.331701932531472
1.36199999999996, -0.332691558892492
1.36299999999996, -0.333681837338097
1.36399999999996, -0.334672770673017
1.36499999999996, -0.335664361712696
1.36599999999996, -0.33665661328336
1.36699999999996, -0.337649528222091
1.36799999999996, -0.338643109376901
1.36899999999996, -0.339637359606796
1.36999999999996, -0.340632281781859
1.37099999999996, -0.341627878783312
1.37199999999996, -0.342624153503602
1.37299999999996, -0.343621108846465
1.37399999999996, -0.344618747727008
1.37499999999996, -0.345617073071779
1.37599999999996, -0.346616087818847
1.37699999999996, -0.34761579491788
1.37799999999996, -0.348616197330215
1.37899999999996, -0.349617298028944
1.37999999999996, -0.350619099998985
1.38099999999996, -0.351621606237169
1.38199999999996, -0.352624819752314
1.38299999999996, -0.353628743565305
1.38399999999996, -0.354633380709178
1.38499999999996, -0.355638734229201
1.38599999999996, -0.356644807182951
1.38699999999996, -0.357651602640406
1.38799999999996, -0.358659123684017
1.38899999999996, -0.359667373408805
1.38999999999996, -0.360676354922432
1.39099999999996, -0.361686071345297
1.39199999999996, -0.362696525810617
1.39299999999996, -0.363707721464513
1.39399999999996, -0.364719661466102
1.39499999999996, -0.36573234898758
1.39599999999996, -0.366745787214311
1.39699999999996, -0.36775997934492
1.39799999999996, -0.368774928591382
1.39899999999996, -0.36979063817911
1.39999999999996, -0.370807111347047
1.40099999999996, -0.371824351347764
1.40199999999996, -0.372842361447545
1.40299999999996, -0.373861144926484
1.40399999999996, -0.374880705078584
1.40499999999996, -0.375901045211842
1.40599999999996, -0.376922168648356
1.40699999999996, -0.377944078724415
1.40799999999996, -0.378966778790597
1.40899999999996, -0.379990272211871
1.40999999999996, -0.381014562367692
1.41099999999996, -0.382039652652103
1.41199999999996, -0.383065546473836
1.41299999999996, -0.384092247256411
1.41399999999996, -0.385119758438243
1.41499999999996, -0.386148083472741
1.41599999999995, -0.387177225828413
1.41699999999995, -0.388207188988973
1.41799999999995, -0.389237976453443
1.41899999999995, -0.390269591736265
1.41999999999995, -0.391302038367401
1.42099999999995, -0.39233531989245
1.42199999999995, -0.393369439872751
1.42299999999995, -0.394404401885494
1.42399999999995, -0.395440209523834
1.42499999999995, -0.396476866397002
1.42599999999995, -0.397514376130414
1.42699999999995, -0.398552742365792
1.42799999999995, -0.399591968761274
1.42899999999995, -0.400632058991527
1.42999999999995, -0.401673016747874
1.43099999999995, -0.402714845738401
1.43199999999995, -0.403757549688082
1.43299999999995, -0.404801132338896
1.43399999999995, -0.40584559744995
1.43499999999995, -0.406890948797597
1.43599999999995, -0.407937190175565
1.43699999999995, -0.408984325395074
1.43799999999995, -0.410032358284967
1.43899999999995, -0.411081292691831
1.43999999999995, -0.412131132480128
1.44099999999995, -0.41318188153232
1.44199999999995, -0.414233543749
1.44299999999995, -0.415286123049024
1.44399999999995, -0.41633962336964
1.44499999999995, -0.417394048666619
1.44599999999995, -0.418449402914395
1.44699999999995, -0.419505690106192
1.44799999999995, -0.420562914254168
1.44899999999995, -0.421621079389547
1.44999999999995, -0.422680189562758
1.45099999999995, -0.42374024884358
1.45199999999995, -0.424801261321273
1.45299999999995, -0.42586323110473
1.45399999999995, -0.426926162322616
1.45499999999995, -0.427990059123514
1.45599999999995, -0.429054925676068
1.45699999999995, -0.430120766169132
1.45799999999995, -0.431187584811924
1.45899999999995, -0.432255385834167
1.45999999999995, -0.433324173486244
1.46099999999995, -0.434393952039354
1.46199999999995, -0.43546472578566
1.46299999999995, -0.436536499038449
1.46399999999995, -0.437609276132287
1.46499999999995, -0.438683061423175
1.46599999999995, -0.439757859288715
1.46699999999995, -0.440833674128262
1.46799999999995, -0.441910510363096
1.46899999999995, -0.442988372436576
1.46999999999995, -0.444067264814316
1.47099999999995, -0.445147191984343
1.47199999999995, -0.446228158457271
1.47299999999995, -0.447310168766469
1.47399999999995, -0.448393227468232
1.47499999999995, -0.449477339141955
1.47599999999995, -0.450562508390307
1.47699999999995, -0.451648739839412
1.47799999999995, -0.452736038139017
1.47899999999995, -0.453824407962683
1.47999999999995, -0.454913854007957
1.48099999999995, -0.456004380996562
1.48199999999995, -0.457095993674577
1.48299999999995, -0.458188696812625
1.48399999999995, -0.459282495206063
1.48499999999995, -0.460377393675167
1.48599999999995, -0.46147339706533
1.48699999999995, -0.46257051024725
1.48799999999995, -0.46366873811713
1.48899999999995, -0.464768085596873
1.48999999999995, -0.465868557634277
1.49099999999995, -0.466970159203246
1.49199999999995, -0.468072895303981
1.49299999999995, -0.469176770963195
1.49399999999995, -0.470281791234313
1.49499999999995, -0.471387961197682
1.49599999999995, -0.472495285960787
1.49699999999995, -0.473603770658456
1.49799999999995, -0.474713420453078
1.49899999999995, -0.475824240534823
1.49999999999995, -0.476936236121856
1.50099999999995, -0.47804941246056
1.50199999999995, -0.479163774825761
1.50299999999995, -0.480279328520951
1.50399999999995, -0.481396078878517
1.50499999999995, -0.48251403125997
1.50599999999994, -0.483633191056176
1.50699999999994, -0.484753563687595
1.50799999999994, -0.485875154604511
1.50899999999994, -0.486997969287277
1.50999999999994, -0.488122013246551
1.51099999999994, -0.489247292023547
1.51199999999994, -0.490373811190271
1.51299999999994, -0.49150157634978
1.51399999999994, -0.492630593136426
1.51499999999994, -0.493760867216112
1.51599999999994, -0.494892404286548
1.51699999999994, -0.496025210077512
1.51799999999994, -0.497159290351105
1.51899999999994, -0.498294650902023
1.51999999999994, -0.499431297557817
1.52099999999994, -0.500569236179167
1.52199999999994, -0.501708472660149
1.52299999999994, -0.502849012928514
1.52399999999994, -0.503990862945964
1.52499999999994, -0.505134028708435
1.52599999999994, -0.506278516246374
1.52699999999994, -0.507424331625031
1.52799999999994, -0.508571480944746
1.52899999999994, -0.509719970341241
1.52999999999994, -0.510869805985916
1.53099999999994, -0.512020994086144
1.53199999999994, -0.513173540885579
1.53299999999994, -0.514327452664452
1.53399999999994, -0.515482735739884
1.53499999999994, -0.516639396466195
1.53599999999994, -0.51779744123522
1.53699999999994, -0.518956876476621
1.53799999999994, -0.520117708658215
1.53899999999994, -0.521279944286292
1.53999999999994, -0.522443589905943
1.54099999999994, -0.523608652101395
1.54199999999994, -0.524775137496342
1.54299999999994, -0.525943052754282
1.54399999999994, -0.527112404578863
1.54499999999994, -0.52828319971422
1.54599999999994, -0.529455444945336
1.54699999999994, -0.53062914709838
1.54799999999994, -0.531804313041077
1.54899999999994, -0.532980949683058
1.54999999999994, -0.53415906397623
1.55099999999994, -0.535338662915142
1.55199999999994, -0.536519753537356
1.55299999999994, -0.537702342923825
1.55399999999994, -0.538886438199271
1.55499999999994, -0.540072046532571
1.55599999999994, -0.541259175137146
1.55699999999994, -0.542447831271351
1.55799999999994, -0.543638022238872
1.55899999999994, -0.544829755389133
1.55999999999994, -0.546023038117696
1.56099999999994, -0.547217877866671
1.56199999999994, -0.548414282125135
1.56299999999994, -0.549612258429549
1.56399999999994, -0.550811814364183
1.56499999999994, -0.552012957561543
1.56599999999994, -0.553215695702807
1.56699999999994, -0.554420036518262
1.56799999999994, -0.55562598778775
1.56899999999994, -0.556833557341111
1.56999999999994, -0.558042753058642
1.57099999999994, -0.559253582871555
1.57199999999994, -0.560466054762438
1.57299999999994, -0.561680176765724
1.57399999999994, -0.562895956968171
1.57499999999994, -0.564113403509335
1.57599999999994, -0.565332524582061
1.57699999999994, -0.566553328432967
1.57799999999994, -0.567775823362951
1.57899999999994, -0.569000017727683
1.57999999999994, -0.570225919938121
1.58099999999994, -0.571453538461018
1.58199999999994, -0.57268288181945
1.58299999999994, -0.573913958593335
1.58399999999994, -0.575146777419969
1.58499999999994, -0.576381346994563
1.58599999999994, -0.577617676070791
1.58699999999994, -0.578855773461336
1.58799999999994, -0.580095648038451
1.58899999999994, -0.581337308734525
1.58999999999994, -0.582580764542649
1.59099999999994, -0.583826024517197
1.59199999999994, -0.585073097774412
1.59299999999994, -0.586321993492994
1.59399999999994, -0.587572720914703
1.59499999999994, -0.588825289344961
1.59599999999994, -0.590079708153466
1.59699999999993, -0.591335986774817
1.59799999999993, -0.592594134709134
1.59899999999993, -0.593854161522703
1.59999999999993, -0.595116076848612
1.60099999999993, -0.596379890387405
1.60199999999993, -0.597645611907744
1.60299999999993, -0.598913251247071
1.60399999999993, -0.600182818312289
1.60499999999993, -0.601454323080442
1.60599999999993, -0.602727775599408
1.60699999999993, -0.604003185988602
1.60799999999993, -0.605280564439682
1.60899999999993, -0.606559921217271
1.60999999999993, -0.607841266659684
1.61099999999993, -0.60912461117966
1.61199999999993, -0.610409965265112
1.61299999999993, -0.611697339479885
1.61399999999993, -0.61298674446451
1.61499999999993, -0.614278190936988
1.61599999999993, -0.615571689693573
1.61699999999993, -0.61686725160956
1.61799999999993, -0.618164887640095
1.61899999999993, -0.619464608820987
1.61999999999993, -0.620766426269534
1.62099999999993, -0.622070351185355
1.62199999999993, -0.623376394851241
1.62299999999993, -0.624684568634008
1.62399999999993, -0.625994883985369
1.62499999999993, -0.627307352442809
1.62599999999993, -0.62862198563048
1.62699999999993, -0.629938795260101
1.62799999999993, -0.631257793131872
1.62899999999993, -0.632578991135401
1.62999999999993, -0.633902401250645
1.63099999999993, -0.635228035548856
1.63199999999993, -0.636555906193548
1.63299999999993, -0.637886025441472
1.63399999999993, -0.639218405643605
1.63499999999993, -0.640553059246151
1.63599999999993, -0.641889998791562
1.63699999999993, -0.643229236919561
1.63799999999993, -0.644570786368187
1.63899999999993, -0.645914659974855
1.63999999999993, -0.647260870677425
1.64099999999993, -0.64860943151529
1.64199999999993, -0.649960355630473
1.64299999999993, -0.651313656268747
1.64399999999993, -0.652669346780767
1.64499999999993, -0.654027440623208
1.64599999999993, -0.655387951359941
1.64699999999993, -0.656750892663199
1.64799999999993, -0.65811627831478
1.64899999999993, -0.659484122207251
1.64999999999993, -0.660854438345184
1.65099999999993, -0.662227240846398
1.65199999999993, -0.663602543943216
1.65299999999993, -0.664980361983758
1.65399999999993, -0.666360709433226
1.65499999999993, -0.667743600875229
1.65599999999993, -0.669129051013116
1.65699999999993, -0.670517074671332
1.65799999999993, -0.671907686796787
1.65899999999993, -0.673300902460256
1.65999999999993, -0.674696736857785
1.66099999999993, -0.676095205312131
1.66199999999993, -0.67749632327421
1.66299999999993, -0.678900106324579
1.66399999999993, -0.680306570174924
1.66499999999993, -0.681715730669589
1.66599999999993, -0.683127603787106
1.66699999999993, -0.684542205641762
1.66799999999993, -0.685959552485188
1.66899999999993, -0.687379660707965
1.66999999999993, -0.688802546841256
1.67099999999993, -0.690228227558463
1.67199999999993, -0.691656719676913
1.67299999999993, -0.693088040159561
1.67399999999993, -0.694522206116723
1.67499999999993, -0.695959234807832
1.67599999999993, -0.69739914364323
1.67699999999993, -0.698841950185967
1.67799999999993, -0.700287672153654
1.67899999999993, -0.701736327420321
1.67999999999993, -0.703187934018311
1.68099999999993, -0.704642510140213
1.68199999999993, -0.706100074140806
1.68299999999993, -0.707560644539048
1.68399999999993, -0.709024240020091
1.68499999999993, -0.710490879437321
1.68599999999993, -0.711960581814441
1.68699999999993, -0.713433366347576
1.68799999999992, -0.71490925240742
1.68899999999992, -0.716388259541406
1.68999999999992, -0.717870407475921
1.69099999999992, -0.71935571611855
1.69199999999992, -0.720844205560355
1.69299999999992, -0.722335896078189
1.69399999999992, -0.723830808137059
1.69499999999992, -0.725328962392506
1.69599999999992, -0.726830379693041
1.69699999999992, -0.728335081082611
1.69799999999992, -0.72984308780311
1.69899999999992, -0.731354421296923
1.69999999999992, -0.732869103209521
1.70099999999992, -0.73438715539209
1.70199999999992, -0.735908599904211
1.70299999999992, -0.737433459016574
1.70399999999992, -0.738961755213745
1.70499999999992, -0.740493511196974
1.70599999999992, -0.742028749887057
1.70699999999992, -0.743567494427231
1.70799999999992, -0.745109768186133
1.70899999999992, -0.746655594760799
1.70999999999992, -0.748204997979718
1.71099999999992, -0.749758001905933
1.71199999999992, -0.751314630840197
1.71299999999992, -0.752874909324189
1.71399999999992, -0.754438862143766
1.71499999999992, -0.756006514332299
1.71599999999992, -0.757577891174034
1.71699999999992, -0.759153018207541
1.71799999999992, -0.760731921229199
1.71899999999992, -0.762314626296757
1.71999999999992, -0.763901159732947
1.72099999999992, -0.765491548129168
1.72199999999992, -0.767085818349227
1.72299999999992, -0.768683997533154
1.72399999999992, -0.770286113101075
1.72499999999992, -0.771892192757164
1.72599999999992, -0.773502264493654
1.72699999999992, -0.77511635659493
1.72799999999992, -0.77673449764169
1.72899999999992, -0.778356716515177
1.72999999999992, -0.779983042401501
1.73099999999992, -0.781613504796023
1.73199999999992, -0.783248133507825
1.73299999999992, -0.784886958664269
1.73399999999992, -0.786530010715631
1.73499999999992, -0.788177320439817
1.73599999999992, -0.789828918947176
1.73699999999992, -0.7914848376854
1.73799999999992, -0.793145108444507
1.73899999999992, -0.794809763361926
1.73999999999992, -0.796478834927673
1.74099999999992, -0.798152355989627
1.74199999999992, -0.7998303597589
1.74299999999992, -0.801512879815319
1.74399999999992, -0.803199950113001
1.74499999999992, -0.804891604986043
1.74599999999992, -0.806587879154316
1.74699999999992, -0.808288807729374
1.74799999999992, -0.809994426220476
1.74899999999992, -0.811704770540722
1.74999999999992, -0.813419877013316
1.75099999999992, -0.815139782377944
1.75199999999992, -0.816864523797282
1.75299999999992, -0.818594138863627
1.75399999999992, -0.82032866560567
1.75499999999992, -0.82206814249539
1.75599999999992, -0.823812608455096
1.75699999999992, -0.825562102864609
1.75799999999992, -0.827316665568581
1.75899999999992, -0.829076336883973
1.75999999999992, -0.830841157607675
1.76099999999992, -0.832611169024288
1.76199999999992, -0.834386412914066
1.76299999999992, -0.836166931561011
1.76399999999992, -0.837952767761152
1.76499999999992, -0.839743964830977
1.76599999999992, -0.841540566616059
1.76699999999992, -0.843342617499846
1.76799999999992, -0.84515016241265
1.76899999999992, -0.846963246840812
1.76999999999992, -0.848781916836074
1.77099999999992, -0.850606219025141
1.77199999999992, -0.852436200619453
1.77299999999992, -0.854271909425164
1.77399999999992, -0.856113393853339
1.77499999999992, -0.857960702930364
1.77599999999992, -0.859813886308599
1.77699999999992, -0.861672994277241
1.77799999999992, -0.863538077773452
1.77899999999991, -0.865409188393703
1.77999999999991, -0.867286378405398
1.78099999999991, -0.869169700758738
1.78199999999991, -0.871059209098854
1.78299999999991, -0.872954957778218
1.78399999999991, -0.874857001869329
1.78499999999991, -0.876765397177688
1.78599999999991, -0.878680200255071
1.78699999999991, -0.880601468413096
1.78799999999991, -0.882529259737121
1.78899999999991, -0.884463633100445
1.78999999999991, -0.886404648178841
1.79099999999991, -0.888352365465443
1.79199999999991, -0.890306846285961
1.79299999999991, -0.892268152814273
1.79399999999991, -0.894236348088368
1.79499999999991, -0.896211496026689
1.79599999999991, -0.898193661444843
1.79699999999991, -0.900182910072737
1.79799999999991, -0.902179308572103
1.79899999999991, -0.90418292455447
1.79999999999991, -0.906193826599559
1.80099999999991, -0.908212084274134
1.80199999999991, -0.91023776815132
1.80299999999991, -0.912270949830392
1.80399999999991, -0.914311701957066
1.80499999999991, -0.916360098244286
1.80599999999991, -0.918416213493541
1.80699999999991, -0.92048012361672
1.80799999999991, -0.922551905658522
1.80899999999991, -0.92463163781943
1.80999999999991, -0.926719399479288
1.81099999999991, -0.928815271221476
1.81199999999991, -0.930919334857717
1.81299999999991, -0.933031673453525
1.81399999999991, -0.93515237135433
1.81499999999991, -0.937281514212281
1.81599999999991, -0.939419189013767
1.81699999999991, -0.941565484107665
1.81799999999991, -0.943720489234348
1.81899999999991, -0.945884295555479
1.81999999999991, -0.948056995684601
1.82099999999991, -0.950238683718569
1.82199999999991, -0.95242945526984
1.82299999999991, -0.954629407499656
1.82399999999991, -0.956838639152138
1.82499999999991, -0.959057250589336
1.82599999999991, -0.961285343827264
1.82699999999991, -0.963523022572942
1.82799999999991, -0.965770392262497
1.82899999999991, -0.968027560100342
1.82999999999991, -0.970294635099486
1.83099999999991, -0.972571728123003
1.83199999999991, -0.974858951926701
1.83299999999991, -0.97715642120305
1.83399999999991, -0.979464252626383
1.83499999999991, -0.981782564899446
1.83599999999991, -0.984111478801323
1.83699999999991, -0.986451117236803
1.83799999999991, -0.988801605287225
1.83899999999991, -0.991163070262867
1.83999999999991, -0.993535641756929
1.84099999999991, -0.995919451701179
1.84199999999991, -0.998314634423301
1.84299999999991, -1.00072132670604
1.84399999999991, -1.0031396678482
1.84499999999991, -1.0055697997275
1.84599999999991, -1.00801186686555
1.84699999999991, -1.01046601649475
1.84799999999991, -1.01293239862742
1.84899999999991, -1.01541116612716
1.84999999999991, -1.01790247478251
1.85099999999991, -1.02040648338301
1.85199999999991, -1.02292335379779
1.85299999999991, -1.02545325105675
1.85399999999991, -1.02799634343446
1.85499999999991, -1.03055280253689
1.85599999999991, -1.03312280339106
1.85699999999991, -1.03570652453774
1.85799999999991, -1.03830414812736
1.85899999999991, -1.04091586001921
1.85999999999991, -1.04354184988411
1.86099999999991, -1.04618231131068
1.86199999999991, -1.04883744191538
1.86299999999991, -1.05150744345639
1.86399999999991, -1.0541925219517
1.86499999999991, -1.05689288780136
1.86599999999991, -1.05960875591421
1.86699999999991, -1.06234034583927
1.86799999999991, -1.06508788190197
1.86899999999991, -1.06785159334544
1.8699999999999, -1.07063171447714
1.8709999999999, -1.07342848482096
1.8719999999999, -1.0762421492752
1.8729999999999, -1.07907295827652
1.8739999999999, -1.08192116797035
1.8749999999999, -1.08478704038779
1.8759999999999, -1.08767084362964
1.8769999999999, -1.0905728520576
1.8779999999999, -1.09349334649313
1.8789999999999, -1.09643261442438
1.8799999999999, -1.09939095022145
1.8809999999999, -1.10236865536055
1.8819999999999, -1.10536603865731
1.8829999999999, -1.10838341650994
1.8839999999999, -1.1114211131525
1.8849999999999, -1.11447946091899
1.8859999999999, -1.11755880051865
1.8869999999999, -1.12065948132319
1.8879999999999, -1.12378186166653
1.8889999999999, -1.12692630915766
1.8899999999999, -1.1300932010074
1.8909999999999, -1.13328292436973
1.8919999999999, -1.13649587669858
1.8929999999999, -1.1397324661208
1.8939999999999, -1.14299311182639
1.8949999999999, -1.14627824447672
1.8959999999999, -1.14958830663194
1.8969999999999, -1.15292375319863
1.8979999999999, -1.15628505189881
1.8989999999999, -1.1596726837616
1.8999999999999, -1.16308714363881
1.9009999999999, -1.16652894074592
1.9019999999999, -1.16999859923
1.9029999999999, -1.17349665876613
1.9039999999999, -1.17702367518404
1.9049999999999, -1.18058022112703
1.9059999999999, -1.18416688674489
1.9069999999999, -1.1877842804232
1.9079999999999, -1.19143302955131
1.9089999999999, -1.19511378133129
1.9099999999999, -1.19882720363083
1.9109999999999, -1.2025739858827
1.9119999999999, -1.20635484003409
1.9129999999999, -1.21017050154908
1.9139999999999, -1.21402173046787
1.9149999999999, -1.21790931252671
1.9159999999999, -1.22183406034286
1.9169999999999, -1.22579681466897
1.9179999999999, -1.22979844572201
1.9189999999999, -1.23383985459216
1.9199999999999, -1.23792197473738
1.9209999999999, -1.24204577357016
1.9219999999999, -1.24621225414333
1.9229999999999, -1.25042245694249
1.9239999999999, -1.25467746179324
1.9249999999999, -1.25897838989222
1.9259999999999, -1.26332640597188
1.9269999999999, -1.26772272060945
1.9279999999999, -1.27216859269218
1.9289999999999, -1.27666533205147
1.9299999999999, -1.28121430228027
1.9309999999999, -1.28581692374913
1.9319999999999, -1.29047467683812
1.9329999999999, -1.29518910540356
1.9339999999999, -1.29996182050026
1.9349999999999, -1.3047945043824
1.9359999999999, -1.30968891480861
1.9369999999999, -1.31464688967944
1.9379999999999, -1.31967035203864
1.9389999999999, -1.3247613154733
1.9399999999999, -1.32992188995166
1.9409999999999, -1.33515428814207
1.9419999999999, -1.34046083226175
1.9429999999999, -1.34584396150966
1.9439999999999, -1.35130624014467
1.9449999999999, -1.35685036627762
1.9459999999999, -1.36247918145466
1.9469999999999, -1.36819568111934
1.9479999999999, -1.37400302605216
1.9489999999999, -1.37990455489993
1.9499999999999, -1.38590379792223
1.9509999999999, -1.39200449210037
1.9519999999999, -1.39821059777484
1.9529999999999, -1.40452631700128
1.9539999999999, -1.41095611384353
1.9549999999999, -1.41750473685513
1.9559999999999, -1.42417724404005
1.9569999999999, -1.43097903062938
1.9579999999999, -1.43791586006555
1.9589999999999, -1.444993898651
1.95999999999989, -1.45221975439587
1.96099999999989, -1.45960052069319
1.96199999999989, -1.46714382556271
1.96299999999989, -1.47485788734105
1.96399999999989, -1.4827515778624
1.96499999999989, -1.49083449437691
1.96599999999989, -1.49911704170424
1.96699999999989, -1.50761052642862
1.96799999999989, -1.51632726532591
1.96899999999989, -1.52528071069448
1.96999999999989, -1.53448559586683
1.97099999999989, -1.54395810494763
1.97199999999989, -1.55371607180519
1.97299999999989, -1.56377921460799
1.97399999999989, -1.57416941383954
1.97499999999989, -1.58491104387754
1.97599999999989, -1.59603137107031
1.97699999999989, -1.60756103505146
1.97799999999989, -1.6195346351814
1.97899999999989, -1.63199145104856
1.97999999999989, -1.64497633573071
1.98099999999989, -1.658540834252
1.98199999999989, -1.67274459929091
1.98299999999989, -1.68765720469966
1.98399999999989, -1.7033604995962
1.98499999999989, -1.71995170957855
1.98599999999989, -1.73754759029148
1.98699999999989, -1.7562900952483
1.98799999999989, -1.77635427596241
1.98899999999989, -1.79795956546577
1.98999999999989, -1.82138635699056
1.99099999999989, -1.84700118702475
1.99199999999989, -1.87529653811056
1.99299999999989, -1.90695685945128
1.99399999999989, -1.94297484788621
1.99499999999989, -1.98487261213921
1.99599999999989, -2.03516768541456
1.99699999999989, -2.09850761736586
1.99799999999989, -2.18512422842998
1.99899999999989, -2.32675377908048
1.99999999999989, -5.25305674654259
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\MuSigma\TestSuite\bin\Release\erfc.txt ===
-20, 2
-19.999, 2
-19.998, 2
-19.997, 2
-19.996, 2
-19.995, 2
-19.994, 2
-19.993, 2
-19.992, 2
-19.991, 2
-19.99, 2
-19.989, 2
-19.988, 2
-19.987, 2
-19.986, 2
-19.985, 2
-19.984, 2
-19.983, 2
-19.982, 2
-19.981, 2
-19.98, 2
-19.979, 2
-19.978, 2
-19.977, 2
-19.976, 2
-19.975, 2
-19.974, 2
-19.973, 2
-19.972, 2
-19.971, 2
-19.97, 2
-19.969, 2
-19.968, 2
-19.967, 2
-19.966, 2
-19.965, 2
-19.964, 2
-19.963, 2
-19.962, 2
-19.961, 2
-19.96, 2
-19.959, 2
-19.9579999999999, 2
-19.9569999999999, 2
-19.9559999999999, 2
-19.9549999999999, 2
-19.9539999999999, 2
-19.9529999999999, 2
-19.9519999999999, 2
-19.9509999999999, 2
-19.9499999999999, 2
-19.9489999999999, 2
-19.9479999999999, 2
-19.9469999999999, 2
-19.9459999999999, 2
-19.9449999999999, 2
-19.9439999999999, 2
-19.9429999999999, 2
-19.9419999999999, 2
-19.9409999999999, 2
-19.9399999999999, 2
-19.9389999999999, 2
-19.9379999999999, 2
-19.9369999999999, 2
-19.9359999999999, 2
-19.9349999999999, 2
-19.9339999999999, 2
-19.9329999999999, 2
-19.9319999999999, 2
-19.9309999999999, 2
-19.9299999999999, 2
-19.9289999999999, 2
-19.9279999999999, 2
-19.9269999999999, 2
-19.9259999999999, 2
-19.9249999999999, 2
-19.9239999999999, 2
-19.9229999999999, 2
-19.9219999999999, 2
-19.9209999999999, 2
-19.9199999999999, 2
-19.9189999999999, 2
-19.9179999999999, 2
-19.9169999999999, 2
-19.9159999999999, 2
-19.9149999999999, 2
-19.9139999999999, 2
-19.9129999999999, 2
-19.9119999999999, 2
-19.9109999999999, 2
-19.9099999999999, 2
-19.9089999999999, 2
-19.9079999999999, 2
-19.9069999999999, 2
-19.9059999999999, 2
-19.9049999999999, 2
-19.9039999999999, 2
-19.9029999999999, 2
-19.9019999999999, 2
-19.9009999999999, 2
-19.8999999999999, 2
-19.8989999999999, 2
-19.8979999999999, 2
-19.8969999999999, 2
-19.8959999999999, 2
-19.8949999999999, 2
-19.8939999999999, 2
-19.8929999999999, 2
-19.8919999999999, 2
-19.8909999999999, 2
-19.8899999999999, 2
-19.8889999999999, 2
-19.8879999999999, 2
-19.8869999999999, 2
-19.8859999999999, 2
-19.8849999999999, 2
-19.8839999999999, 2
-19.8829999999999, 2
-19.8819999999999, 2
-19.8809999999999, 2
-19.8799999999999, 2
-19.8789999999999, 2
-19.8779999999999, 2
-19.8769999999999, 2
-19.8759999999998, 2
-19.8749999999998, 2
-19.8739999999998, 2
-19.8729999999998, 2
-19.8719999999998, 2
-19.8709999999998, 2
-19.8699999999998, 2
-19.8689999999998, 2
-19.8679999999998, 2
-19.8669999999998, 2
-19.8659999999998, 2
-19.8649999999998, 2
-19.8639999999998, 2
-19.8629999999998, 2
-19.8619999999998, 2
-19.8609999999998, 2
-19.8599999999998, 2
-19.8589999999998, 2
-19.8579999999998, 2
-19.8569999999998, 2
-19.8559999999998, 2
-19.8549999999998, 2
-19.8539999999998, 2
-19.8529999999998, 2
-19.8519999999998, 2
-19.8509999999998, 2
-19.8499999999998, 2
-19.8489999999998, 2
-19.8479999999998, 2
-19.8469999999998, 2
-19.8459999999998, 2
-19.8449999999998, 2
-19.8439999999998, 2
-19.8429999999998, 2
-19.8419999999998, 2
-19.8409999999998, 2
-19.8399999999998, 2
-19.8389999999998, 2
-19.8379999999998, 2
-19.8369999999998, 2
-19.8359999999998, 2
-19.8349999999998, 2
-19.8339999999998, 2
-19.8329999999998, 2
-19.8319999999998, 2
-19.8309999999998, 2
-19.8299999999998, 2
-19.8289999999998, 2
-19.8279999999998, 2
-19.8269999999998, 2
-19.8259999999998, 2
-19.8249999999998, 2
-19.8239999999998, 2
-19.8229999999998, 2
-19.8219999999998, 2
-19.8209999999998, 2
-19.8199999999998, 2
-19.8189999999998, 2
-19.8179999999998, 2
-19.8169999999998, 2
-19.8159999999998, 2
-19.8149999999998, 2
-19.8139999999998, 2
-19.8129999999998, 2
-19.8119999999998, 2
-19.8109999999998, 2
-19.8099999999998, 2
-19.8089999999998, 2
-19.8079999999998, 2
-19.8069999999998, 2
-19.8059999999998, 2
-19.8049999999998, 2
-19.8039999999998, 2
-19.8029999999998, 2
-19.8019999999998, 2
-19.8009999999998, 2
-19.7999999999998, 2
-19.7989999999998, 2
-19.7979999999998, 2
-19.7969999999998, 2
-19.7959999999998, 2
-19.7949999999997, 2
-19.7939999999997, 2
-19.7929999999997, 2
-19.7919999999997, 2
-19.7909999999997, 2
-19.7899999999997, 2
-19.7889999999997, 2
-19.7879999999997, 2
-19.7869999999997, 2
-19.7859999999997, 2
-19.7849999999997, 2
-19.7839999999997, 2
-19.7829999999997, 2
-19.7819999999997, 2
-19.7809999999997, 2
-19.7799999999997, 2
-19.7789999999997, 2
-19.7779999999997, 2
-19.7769999999997, 2
-19.7759999999997, 2
-19.7749999999997, 2
-19.7739999999997, 2
-19.7729999999997, 2
-19.7719999999997, 2
-19.7709999999997, 2
-19.7699999999997, 2
-19.7689999999997, 2
-19.7679999999997, 2
-19.7669999999997, 2
-19.7659999999997, 2
-19.7649999999997, 2
-19.7639999999997, 2
-19.7629999999997, 2
-19.7619999999997, 2
-19.7609999999997, 2
-19.7599999999997, 2
-19.7589999999997, 2
-19.7579999999997, 2
-19.7569999999997, 2
-19.7559999999997, 2
-19.7549999999997, 2
-19.7539999999997, 2
-19.7529999999997, 2
-19.7519999999997, 2
-19.7509999999997, 2
-19.7499999999997, 2
-19.7489999999997, 2
-19.7479999999997, 2
-19.7469999999997, 2
-19.7459999999997, 2
-19.7449999999997, 2
-19.7439999999997, 2
-19.7429999999997, 2
-19.7419999999997, 2
-19.7409999999997, 2
-19.7399999999997, 2
-19.7389999999997, 2
-19.7379999999997, 2
-19.7369999999997, 2
-19.7359999999997, 2
-19.7349999999997, 2
-19.7339999999997, 2
-19.7329999999997, 2
-19.7319999999997, 2
-19.7309999999997, 2
-19.7299999999997, 2
-19.7289999999997, 2
-19.7279999999997, 2
-19.7269999999997, 2
-19.7259999999997, 2
-19.7249999999997, 2
-19.7239999999997, 2
-19.7229999999997, 2
-19.7219999999997, 2
-19.7209999999997, 2
-19.7199999999997, 2
-19.7189999999997, 2
-19.7179999999997, 2
-19.7169999999997, 2
-19.7159999999997, 2
-19.7149999999997, 2
-19.7139999999997, 2
-19.7129999999996, 2
-19.7119999999996, 2
-19.7109999999996, 2
-19.7099999999996, 2
-19.7089999999996, 2
-19.7079999999996, 2
-19.7069999999996, 2
-19.7059999999996, 2
-19.7049999999996, 2
-19.7039999999996, 2
-19.7029999999996, 2
-19.7019999999996, 2
-19.7009999999996, 2
-19.6999999999996, 2
-19.6989999999996, 2
-19.6979999999996, 2
-19.6969999999996, 2
-19.6959999999996, 2
-19.6949999999996, 2
-19.6939999999996, 2
-19.6929999999996, 2
-19.6919999999996, 2
-19.6909999999996, 2
-19.6899999999996, 2
-19.6889999999996, 2
-19.6879999999996, 2
-19.6869999999996, 2
-19.6859999999996, 2
-19.6849999999996, 2
-19.6839999999996, 2
-19.6829999999996, 2
-19.6819999999996, 2
-19.6809999999996, 2
-19.6799999999996, 2
-19.6789999999996, 2
-19.6779999999996, 2
-19.6769999999996, 2
-19.6759999999996, 2
-19.6749999999996, 2
-19.6739999999996, 2
-19.6729999999996, 2
-19.6719999999996, 2
-19.6709999999996, 2
-19.6699999999996, 2
-19.6689999999996, 2
-19.6679999999996, 2
-19.6669999999996, 2
-19.6659999999996, 2
-19.6649999999996, 2
-19.6639999999996, 2
-19.6629999999996, 2
-19.6619999999996, 2
-19.6609999999996, 2
-19.6599999999996, 2
-19.6589999999996, 2
-19.6579999999996, 2
-19.6569999999996, 2
-19.6559999999996, 2
-19.6549999999996, 2
-19.6539999999996, 2
-19.6529999999996, 2
-19.6519999999996, 2
-19.6509999999996, 2
-19.6499999999996, 2
-19.6489999999996, 2
-19.6479999999996, 2
-19.6469999999996, 2
-19.6459999999996, 2
-19.6449999999996, 2
-19.6439999999996, 2
-19.6429999999996, 2
-19.6419999999996, 2
-19.6409999999996, 2
-19.6399999999996, 2
-19.6389999999996, 2
-19.6379999999996, 2
-19.6369999999996, 2
-19.6359999999996, 2
-19.6349999999996, 2
-19.6339999999996, 2
-19.6329999999996, 2
-19.6319999999996, 2
-19.6309999999995, 2
-19.6299999999995, 2
-19.6289999999995, 2
-19.6279999999995, 2
-19.6269999999995, 2
-19.6259999999995, 2
-19.6249999999995, 2
-19.6239999999995, 2
-19.6229999999995, 2
-19.6219999999995, 2
-19.6209999999995, 2
-19.6199999999995, 2
-19.6189999999995, 2
-19.6179999999995, 2
-19.6169999999995, 2
-19.6159999999995, 2
-19.6149999999995, 2
-19.6139999999995, 2
-19.6129999999995, 2
-19.6119999999995, 2
-19.6109999999995, 2
-19.6099999999995, 2
-19.6089999999995, 2
-19.6079999999995, 2
-19.6069999999995, 2
-19.6059999999995, 2
-19.6049999999995, 2
-19.6039999999995, 2
-19.6029999999995, 2
-19.6019999999995, 2
-19.6009999999995, 2
-19.5999999999995, 2
-19.5989999999995, 2
-19.5979999999995, 2
-19.5969999999995, 2
-19.5959999999995, 2
-19.5949999999995, 2
-19.5939999999995, 2
-19.5929999999995, 2
-19.5919999999995, 2
-19.5909999999995, 2
-19.5899999999995, 2
-19.5889999999995, 2
-19.5879999999995, 2
-19.5869999999995, 2
-19.5859999999995, 2
-19.5849999999995, 2
-19.5839999999995, 2
-19.5829999999995, 2
-19.5819999999995, 2
-19.5809999999995, 2
-19.5799999999995, 2
-19.5789999999995, 2
-19.5779999999995, 2
-19.5769999999995, 2
-19.5759999999995, 2
-19.5749999999995, 2
-19.5739999999995, 2
-19.5729999999995, 2
-19.5719999999995, 2
-19.5709999999995, 2
-19.5699999999995, 2
-19.5689999999995, 2
-19.5679999999995, 2
-19.5669999999995, 2
-19.5659999999995, 2
-19.5649999999995, 2
-19.5639999999995, 2
-19.5629999999995, 2
-19.5619999999995, 2
-19.5609999999995, 2
-19.5599999999995, 2
-19.5589999999995, 2
-19.5579999999995, 2
-19.5569999999995, 2
-19.5559999999995, 2
-19.5549999999995, 2
-19.5539999999995, 2
-19.5529999999995, 2
-19.5519999999995, 2
-19.5509999999995, 2
-19.5499999999995, 2
-19.5489999999994, 2
-19.5479999999994, 2
-19.5469999999994, 2
-19.5459999999994, 2
-19.5449999999994, 2
-19.5439999999994, 2
-19.5429999999994, 2
-19.5419999999994, 2
-19.5409999999994, 2
-19.5399999999994, 2
-19.5389999999994, 2
-19.5379999999994, 2
-19.5369999999994, 2
-19.5359999999994, 2
-19.5349999999994, 2
-19.5339999999994, 2
-19.5329999999994, 2
-19.5319999999994, 2
-19.5309999999994, 2
-19.5299999999994, 2
-19.5289999999994, 2
-19.5279999999994, 2
-19.5269999999994, 2
-19.5259999999994, 2
-19.5249999999994, 2
-19.5239999999994, 2
-19.5229999999994, 2
-19.5219999999994, 2
-19.5209999999994, 2
-19.5199999999994, 2
-19.5189999999994, 2
-19.5179999999994, 2
-19.5169999999994, 2
-19.5159999999994, 2
-19.5149999999994, 2
-19.5139999999994, 2
-19.5129999999994, 2
-19.5119999999994, 2
-19.5109999999994, 2
-19.5099999999994, 2
-19.5089999999994, 2
-19.5079999999994, 2
-19.5069999999994, 2
-19.5059999999994, 2
-19.5049999999994, 2
-19.5039999999994, 2
-19.5029999999994, 2
-19.5019999999994, 2
-19.5009999999994, 2
-19.4999999999994, 2
-19.4989999999994, 2
-19.4979999999994, 2
-19.4969999999994, 2
-19.4959999999994, 2
-19.4949999999994, 2
-19.4939999999994, 2
-19.4929999999994, 2
-19.4919999999994, 2
-19.4909999999994, 2
-19.4899999999994, 2
-19.4889999999994, 2
-19.4879999999994, 2
-19.4869999999994, 2
-19.4859999999994, 2
-19.4849999999994, 2
-19.4839999999994, 2
-19.4829999999994, 2
-19.4819999999994, 2
-19.4809999999994, 2
-19.4799999999994, 2
-19.4789999999994, 2
-19.4779999999994, 2
-19.4769999999994, 2
-19.4759999999994, 2
-19.4749999999994, 2
-19.4739999999994, 2
-19.4729999999994, 2
-19.4719999999994, 2
-19.4709999999994, 2
-19.4699999999994, 2
-19.4689999999994, 2
-19.4679999999994, 2
-19.4669999999993, 2
-19.4659999999993, 2
-19.4649999999993, 2
-19.4639999999993, 2
-19.4629999999993, 2
-19.4619999999993, 2
-19.4609999999993, 2
-19.4599999999993, 2
-19.4589999999993, 2
-19.4579999999993, 2
-19.4569999999993, 2
-19.4559999999993, 2
-19.4549999999993, 2
-19.4539999999993, 2
-19.4529999999993, 2
-19.4519999999993, 2
-19.4509999999993, 2
-19.4499999999993, 2
-19.4489999999993, 2
-19.4479999999993, 2
-19.4469999999993, 2
-19.4459999999993, 2
-19.4449999999993, 2
-19.4439999999993, 2
-19.4429999999993, 2
-19.4419999999993, 2
-19.4409999999993, 2
-19.4399999999993, 2
-19.4389999999993, 2
-19.4379999999993, 2
-19.4369999999993, 2
-19.4359999999993, 2
-19.4349999999993, 2
-19.4339999999993, 2
-19.4329999999993, 2
-19.4319999999993, 2
-19.4309999999993, 2
-19.4299999999993, 2
-19.4289999999993, 2
-19.4279999999993, 2
-19.4269999999993, 2
-19.4259999999993, 2
-19.4249999999993, 2
-19.4239999999993, 2
-19.4229999999993, 2
-19.4219999999993, 2
-19.4209999999993, 2
-19.4199999999993, 2
-19.4189999999993, 2
-19.4179999999993, 2
-19.4169999999993, 2
-19.4159999999993, 2
-19.4149999999993, 2
-19.4139999999993, 2
-19.4129999999993, 2
-19.4119999999993, 2
-19.4109999999993, 2
-19.4099999999993, 2
-19.4089999999993, 2
-19.4079999999993, 2
-19.4069999999993, 2
-19.4059999999993, 2
-19.4049999999993, 2
-19.4039999999993, 2
-19.4029999999993, 2
-19.4019999999993, 2
-19.4009999999993, 2
-19.3999999999993, 2
-19.3989999999993, 2
-19.3979999999993, 2
-19.3969999999993, 2
-19.3959999999993, 2
-19.3949999999993, 2
-19.3939999999993, 2
-19.3929999999993, 2
-19.3919999999993, 2
-19.3909999999993, 2
-19.3899999999993, 2
-19.3889999999993, 2
-19.3879999999993, 2
-19.3869999999993, 2
-19.3859999999993, 2
-19.3849999999992, 2
-19.3839999999992, 2
-19.3829999999992, 2
-19.3819999999992, 2
-19.3809999999992, 2
-19.3799999999992, 2
-19.3789999999992, 2
-19.3779999999992, 2
-19.3769999999992, 2
-19.3759999999992, 2
-19.3749999999992, 2
-19.3739999999992, 2
-19.3729999999992, 2
-19.3719999999992, 2
-19.3709999999992, 2
-19.3699999999992, 2
-19.3689999999992, 2
-19.3679999999992, 2
-19.3669999999992, 2
-19.3659999999992, 2
-19.3649999999992, 2
-19.3639999999992, 2
-19.3629999999992, 2
-19.3619999999992, 2
-19.3609999999992, 2
-19.3599999999992, 2
-19.3589999999992, 2
-19.3579999999992, 2
-19.3569999999992, 2
-19.3559999999992, 2
-19.3549999999992, 2
-19.3539999999992, 2
-19.3529999999992, 2
-19.3519999999992, 2
-19.3509999999992, 2
-19.3499999999992, 2
-19.3489999999992, 2
-19.3479999999992, 2
-19.3469999999992, 2
-19.3459999999992, 2
-19.3449999999992, 2
-19.3439999999992, 2
-19.3429999999992, 2
-19.3419999999992, 2
-19.3409999999992, 2
-19.3399999999992, 2
-19.3389999999992, 2
-19.3379999999992, 2
-19.3369999999992, 2
-19.3359999999992, 2
-19.3349999999992, 2
-19.3339999999992, 2
-19.3329999999992, 2
-19.3319999999992, 2
-19.3309999999992, 2
-19.3299999999992, 2
-19.3289999999992, 2
-19.3279999999992, 2
-19.3269999999992, 2
-19.3259999999992, 2
-19.3249999999992, 2
-19.3239999999992, 2
-19.3229999999992, 2
-19.3219999999992, 2
-19.3209999999992, 2
-19.3199999999992, 2
-19.3189999999992, 2
-19.3179999999992, 2
-19.3169999999992, 2
-19.3159999999992, 2
-19.3149999999992, 2
-19.3139999999992, 2
-19.3129999999992, 2
-19.3119999999992, 2
-19.3109999999992, 2
-19.3099999999992, 2
-19.3089999999992, 2
-19.3079999999992, 2
-19.3069999999992, 2
-19.3059999999992, 2
-19.3049999999992, 2
-19.3039999999991, 2
-19.3029999999991, 2
-19.3019999999991, 2
-19.3009999999991, 2
-19.2999999999991, 2
-19.2989999999991, 2
-19.2979999999991, 2
-19.2969999999991, 2
-19.2959999999991, 2
-19.2949999999991, 2
-19.2939999999991, 2
-19.2929999999991, 2
-19.2919999999991, 2
-19.2909999999991, 2
-19.2899999999991, 2
-19.2889999999991, 2
-19.2879999999991, 2
-19.2869999999991, 2
-19.2859999999991, 2
-19.2849999999991, 2
-19.2839999999991, 2
-19.2829999999991, 2
-19.2819999999991, 2
-19.2809999999991, 2
-19.2799999999991, 2
-19.2789999999991, 2
-19.2779999999991, 2
-19.2769999999991, 2
-19.2759999999991, 2
-19.2749999999991, 2
-19.2739999999991, 2
-19.2729999999991, 2
-19.2719999999991, 2
-19.2709999999991, 2
-19.2699999999991, 2
-19.2689999999991, 2
-19.2679999999991, 2
-19.2669999999991, 2
-19.2659999999991, 2
-19.2649999999991, 2
-19.2639999999991, 2
-19.2629999999991, 2
-19.2619999999991, 2
-19.2609999999991, 2
-19.2599999999991, 2
-19.2589999999991, 2
-19.2579999999991, 2
-19.2569999999991, 2
-19.2559999999991, 2
-19.2549999999991, 2
-19.2539999999991, 2
-19.2529999999991, 2
-19.2519999999991, 2
-19.2509999999991, 2
-19.2499999999991, 2
-19.2489999999991, 2
-19.2479999999991, 2
-19.2469999999991, 2
-19.2459999999991, 2
-19.2449999999991, 2
-19.2439999999991, 2
-19.2429999999991, 2
-19.2419999999991, 2
-19.2409999999991, 2
-19.2399999999991, 2
-19.2389999999991, 2
-19.2379999999991, 2
-19.2369999999991, 2
-19.2359999999991, 2
-19.2349999999991, 2
-19.2339999999991, 2
-19.2329999999991, 2
-19.2319999999991, 2
-19.2309999999991, 2
-19.2299999999991, 2
-19.2289999999991, 2
-19.2279999999991, 2
-19.2269999999991, 2
-19.2259999999991, 2
-19.2249999999991, 2
-19.2239999999991, 2
-19.2229999999991, 2
-19.221999999999, 2
-19.220999999999, 2
-19.219999999999, 2
-19.218999999999, 2
-19.217999999999, 2
-19.216999999999, 2
-19.215999999999, 2
-19.214999999999, 2
-19.213999999999, 2
-19.212999999999, 2
-19.211999999999, 2
-19.210999999999, 2
-19.209999999999, 2
-19.208999999999, 2
-19.207999999999, 2
-19.206999999999, 2
-19.205999999999, 2
-19.204999999999, 2
-19.203999999999, 2
-19.202999999999, 2
-19.201999999999, 2
-19.200999999999, 2
-19.199999999999, 2
-19.198999999999, 2
-19.197999999999, 2
-19.196999999999, 2
-19.195999999999, 2
-19.194999999999, 2
-19.193999999999, 2
-19.192999999999, 2
-19.191999999999, 2
-19.190999999999, 2
-19.189999999999, 2
-19.188999999999, 2
-19.187999999999, 2
-19.186999999999, 2
-19.185999999999, 2
-19.184999999999, 2
-19.183999999999, 2
-19.182999999999, 2
-19.181999999999, 2
-19.180999999999, 2
-19.179999999999, 2
-19.178999999999, 2
-19.177999999999, 2
-19.176999999999, 2
-19.175999999999, 2
-19.174999999999, 2
-19.173999999999, 2
-19.172999999999, 2
-19.171999999999, 2
-19.170999999999, 2
-19.169999999999, 2
-19.168999999999, 2
-19.167999999999, 2
-19.166999999999, 2
-19.165999999999, 2
-19.164999999999, 2
-19.163999999999, 2
-19.162999999999, 2
-19.161999999999, 2
-19.160999999999, 2
-19.159999999999, 2
-19.158999999999, 2
-19.157999999999, 2
-19.156999999999, 2
-19.155999999999, 2
-19.154999999999, 2
-19.153999999999, 2
-19.152999999999, 2
-19.151999999999, 2
-19.150999999999, 2
-19.149999999999, 2
-19.148999999999, 2
-19.147999999999, 2
-19.146999999999, 2
-19.145999999999, 2
-19.144999999999, 2
-19.143999999999, 2
-19.142999999999, 2
-19.141999999999, 2
-19.140999999999, 2
-19.1399999999989, 2
-19.1389999999989, 2
-19.1379999999989, 2
-19.1369999999989, 2
-19.1359999999989, 2
-19.1349999999989, 2
-19.1339999999989, 2
-19.1329999999989, 2
-19.1319999999989, 2
-19.1309999999989, 2
-19.1299999999989, 2
-19.1289999999989, 2
-19.1279999999989, 2
-19.1269999999989, 2
-19.1259999999989, 2
-19.1249999999989, 2
-19.1239999999989, 2
-19.1229999999989, 2
-19.1219999999989, 2
-19.1209999999989, 2
-19.1199999999989, 2
-19.1189999999989, 2
-19.1179999999989, 2
-19.1169999999989, 2
-19.1159999999989, 2
-19.1149999999989, 2
-19.1139999999989, 2
-19.1129999999989, 2
-19.1119999999989, 2
-19.1109999999989, 2
-19.1099999999989, 2
-19.1089999999989, 2
-19.1079999999989, 2
-19.1069999999989, 2
-19.1059999999989, 2
-19.1049999999989, 2
-19.1039999999989, 2
-19.1029999999989, 2
-19.1019999999989, 2
-19.1009999999989, 2
-19.0999999999989, 2
-19.0989999999989, 2
-19.0979999999989, 2
-19.0969999999989, 2
-19.0959999999989, 2
-19.0949999999989, 2
-19.0939999999989, 2
-19.0929999999989, 2
-19.0919999999989, 2
-19.0909999999989, 2
-19.0899999999989, 2
-19.0889999999989, 2
-19.0879999999989, 2
-19.0869999999989, 2
-19.0859999999989, 2
-19.0849999999989, 2
-19.0839999999989, 2
-19.0829999999989, 2
-19.0819999999989, 2
-19.0809999999989, 2
-19.0799999999989, 2
-19.0789999999989, 2
-19.0779999999989, 2
-19.0769999999989, 2
-19.0759999999989, 2
-19.0749999999989, 2
-19.0739999999989, 2
-19.0729999999989, 2
-19.0719999999989, 2
-19.0709999999989, 2
-19.0699999999989, 2
-19.0689999999989, 2
-19.0679999999989, 2
-19.0669999999989, 2
-19.0659999999989, 2
-19.0649999999989, 2
-19.0639999999989, 2
-19.0629999999989, 2
-19.0619999999989, 2
-19.0609999999989, 2
-19.0599999999989, 2
-19.0589999999989, 2
-19.0579999999988, 2
-19.0569999999988, 2
-19.0559999999988, 2
-19.0549999999988, 2
-19.0539999999988, 2
-19.0529999999988, 2
-19.0519999999988, 2
-19.0509999999988, 2
-19.0499999999988, 2
-19.0489999999988, 2
-19.0479999999988, 2
-19.0469999999988, 2
-19.0459999999988, 2
-19.0449999999988, 2
-19.0439999999988, 2
-19.0429999999988, 2
-19.0419999999988, 2
-19.0409999999988, 2
-19.0399999999988, 2
-19.0389999999988, 2
-19.0379999999988, 2
-19.0369999999988, 2
-19.0359999999988, 2
-19.0349999999988, 2
-19.0339999999988, 2
-19.0329999999988, 2
-19.0319999999988, 2
-19.0309999999988, 2
-19.0299999999988, 2
-19.0289999999988, 2
-19.0279999999988, 2
-19.0269999999988, 2
-19.0259999999988, 2
-19.0249999999988, 2
-19.0239999999988, 2
-19.0229999999988, 2
-19.0219999999988, 2
-19.0209999999988, 2
-19.0199999999988, 2
-19.0189999999988, 2
-19.0179999999988, 2
-19.0169999999988, 2
-19.0159999999988, 2
-19.0149999999988, 2
-19.0139999999988, 2
-19.0129999999988, 2
-19.0119999999988, 2
-19.0109999999988, 2
-19.0099999999988, 2
-19.0089999999988, 2
-19.0079999999988, 2
-19.0069999999988, 2
-19.0059999999988, 2
-19.0049999999988, 2
-19.0039999999988, 2
-19.0029999999988, 2
-19.0019999999988, 2
-19.0009999999988, 2
-18.9999999999988, 2
-18.9989999999988, 2
-18.9979999999988, 2
-18.9969999999988, 2
-18.9959999999988, 2
-18.9949999999988, 2
-18.9939999999988, 2
-18.9929999999988, 2
-18.9919999999988, 2
-18.9909999999988, 2
-18.9899999999988, 2
-18.9889999999988, 2
-18.9879999999988, 2
-18.9869999999988, 2
-18.9859999999988, 2
-18.9849999999988, 2
-18.9839999999988, 2
-18.9829999999988, 2
-18.9819999999988, 2
-18.9809999999988, 2
-18.9799999999988, 2
-18.9789999999988, 2
-18.9779999999988, 2
-18.9769999999988, 2
-18.9759999999987, 2
-18.9749999999987, 2
-18.9739999999987, 2
-18.9729999999987, 2
-18.9719999999987, 2
-18.9709999999987, 2
-18.9699999999987, 2
-18.9689999999987, 2
-18.9679999999987, 2
-18.9669999999987, 2
-18.9659999999987, 2
-18.9649999999987, 2
-18.9639999999987, 2
-18.9629999999987, 2
-18.9619999999987, 2
-18.9609999999987, 2
-18.9599999999987, 2
-18.9589999999987, 2
-18.9579999999987, 2
-18.9569999999987, 2
-18.9559999999987, 2
-18.9549999999987, 2
-18.9539999999987, 2
-18.9529999999987, 2
-18.9519999999987, 2
-18.9509999999987, 2
-18.9499999999987, 2
-18.9489999999987, 2
-18.9479999999987, 2
-18.9469999999987, 2
-18.9459999999987, 2
-18.9449999999987, 2
-18.9439999999987, 2
-18.9429999999987, 2
-18.9419999999987, 2
-18.9409999999987, 2
-18.9399999999987, 2
-18.9389999999987, 2
-18.9379999999987, 2
-18.9369999999987, 2
-18.9359999999987, 2
-18.9349999999987, 2
-18.9339999999987, 2
-18.9329999999987, 2
-18.9319999999987, 2
-18.9309999999987, 2
-18.9299999999987, 2
-18.9289999999987, 2
-18.9279999999987, 2
-18.9269999999987, 2
-18.9259999999987, 2
-18.9249999999987, 2
-18.9239999999987, 2
-18.9229999999987, 2
-18.9219999999987, 2
-18.9209999999987, 2
-18.9199999999987, 2
-18.9189999999987, 2
-18.9179999999987, 2
-18.9169999999987, 2
-18.9159999999987, 2
-18.9149999999987, 2
-18.9139999999987, 2
-18.9129999999987, 2
-18.9119999999987, 2
-18.9109999999987, 2
-18.9099999999987, 2
-18.9089999999987, 2
-18.9079999999987, 2
-18.9069999999987, 2
-18.9059999999987, 2
-18.9049999999987, 2
-18.9039999999987, 2
-18.9029999999987, 2
-18.9019999999987, 2
-18.9009999999987, 2
-18.8999999999987, 2
-18.8989999999987, 2
-18.8979999999987, 2
-18.8969999999987, 2
-18.8959999999987, 2
-18.8949999999987, 2
-18.8939999999986, 2
-18.8929999999986, 2
-18.8919999999986, 2
-18.8909999999986, 2
-18.8899999999986, 2
-18.8889999999986, 2
-18.8879999999986, 2
-18.8869999999986, 2
-18.8859999999986, 2
-18.8849999999986, 2
-18.8839999999986, 2
-18.8829999999986, 2
-18.8819999999986, 2
-18.8809999999986, 2
-18.8799999999986, 2
-18.8789999999986, 2
-18.8779999999986, 2
-18.8769999999986, 2
-18.8759999999986, 2
-18.8749999999986, 2
-18.8739999999986, 2
-18.8729999999986, 2
-18.8719999999986, 2
-18.8709999999986, 2
-18.8699999999986, 2
-18.8689999999986, 2
-18.8679999999986, 2
-18.8669999999986, 2
-18.8659999999986, 2
-18.8649999999986, 2
-18.8639999999986, 2
-18.8629999999986, 2
-18.8619999999986, 2
-18.8609999999986, 2
-18.8599999999986, 2
-18.8589999999986, 2
-18.8579999999986, 2
-18.8569999999986, 2
-18.8559999999986, 2
-18.8549999999986, 2
-18.8539999999986, 2
-18.8529999999986, 2
-18.8519999999986, 2
-18.8509999999986, 2
-18.8499999999986, 2
-18.8489999999986, 2
-18.8479999999986, 2
-18.8469999999986, 2
-18.8459999999986, 2
-18.8449999999986, 2
-18.8439999999986, 2
-18.8429999999986, 2
-18.8419999999986, 2
-18.8409999999986, 2
-18.8399999999986, 2
-18.8389999999986, 2
-18.8379999999986, 2
-18.8369999999986, 2
-18.8359999999986, 2
-18.8349999999986, 2
-18.8339999999986, 2
-18.8329999999986, 2
-18.8319999999986, 2
-18.8309999999986, 2
-18.8299999999986, 2
-18.8289999999986, 2
-18.8279999999986, 2
-18.8269999999986, 2
-18.8259999999986, 2
-18.8249999999986, 2
-18.8239999999986, 2
-18.8229999999986, 2
-18.8219999999986, 2
-18.8209999999986, 2
-18.8199999999986, 2
-18.8189999999986, 2
-18.8179999999986, 2
-18.8169999999986, 2
-18.8159999999986, 2
-18.8149999999986, 2
-18.8139999999986, 2
-18.8129999999985, 2
-18.8119999999985, 2
-18.8109999999985, 2
-18.8099999999985, 2
-18.8089999999985, 2
-18.8079999999985, 2
-18.8069999999985, 2
-18.8059999999985, 2
-18.8049999999985, 2
-18.8039999999985, 2
-18.8029999999985, 2
-18.8019999999985, 2
-18.8009999999985, 2
-18.7999999999985, 2
-18.7989999999985, 2
-18.7979999999985, 2
-18.7969999999985, 2
-18.7959999999985, 2
-18.7949999999985, 2
-18.7939999999985, 2
-18.7929999999985, 2
-18.7919999999985, 2
-18.7909999999985, 2
-18.7899999999985, 2
-18.7889999999985, 2
-18.7879999999985, 2
-18.7869999999985, 2
-18.7859999999985, 2
-18.7849999999985, 2
-18.7839999999985, 2
-18.7829999999985, 2
-18.7819999999985, 2
-18.7809999999985, 2
-18.7799999999985, 2
-18.7789999999985, 2
-18.7779999999985, 2
-18.7769999999985, 2
-18.7759999999985, 2
-18.7749999999985, 2
-18.7739999999985, 2
-18.7729999999985, 2
-18.7719999999985, 2
-18.7709999999985, 2
-18.7699999999985, 2
-18.7689999999985, 2
-18.7679999999985, 2
-18.7669999999985, 2
-18.7659999999985, 2
-18.7649999999985, 2
-18.7639999999985, 2
-18.7629999999985, 2
-18.7619999999985, 2
-18.7609999999985, 2
-18.7599999999985, 2
-18.7589999999985, 2
-18.7579999999985, 2
-18.7569999999985, 2
-18.7559999999985, 2
-18.7549999999985, 2
-18.7539999999985, 2
-18.7529999999985, 2
-18.7519999999985, 2
-18.7509999999985, 2
-18.7499999999985, 2
-18.7489999999985, 2
-18.7479999999985, 2
-18.7469999999985, 2
-18.7459999999985, 2
-18.7449999999985, 2
-18.7439999999985, 2
-18.7429999999985, 2
-18.7419999999985, 2
-18.7409999999985, 2
-18.7399999999985, 2
-18.7389999999985, 2
-18.7379999999985, 2
-18.7369999999985, 2
-18.7359999999985, 2
-18.7349999999985, 2
-18.7339999999985, 2
-18.7329999999985, 2
-18.7319999999985, 2
-18.7309999999984, 2
-18.7299999999984, 2
-18.7289999999984, 2
-18.7279999999984, 2
-18.7269999999984, 2
-18.7259999999984, 2
-18.7249999999984, 2
-18.7239999999984, 2
-18.7229999999984, 2
-18.7219999999984, 2
-18.7209999999984, 2
-18.7199999999984, 2
-18.7189999999984, 2
-18.7179999999984, 2
-18.7169999999984, 2
-18.7159999999984, 2
-18.7149999999984, 2
-18.7139999999984, 2
-18.7129999999984, 2
-18.7119999999984, 2
-18.7109999999984, 2
-18.7099999999984, 2
-18.7089999999984, 2
-18.7079999999984, 2
-18.7069999999984, 2
-18.7059999999984, 2
-18.7049999999984, 2
-18.7039999999984, 2
-18.7029999999984, 2
-18.7019999999984, 2
-18.7009999999984, 2
-18.6999999999984, 2
-18.6989999999984, 2
-18.6979999999984, 2
-18.6969999999984, 2
-18.6959999999984, 2
-18.6949999999984, 2
-18.6939999999984, 2
-18.6929999999984, 2
-18.6919999999984, 2
-18.6909999999984, 2
-18.6899999999984, 2
-18.6889999999984, 2
-18.6879999999984, 2
-18.6869999999984, 2
-18.6859999999984, 2
-18.6849999999984, 2
-18.6839999999984, 2
-18.6829999999984, 2
-18.6819999999984, 2
-18.6809999999984, 2
-18.6799999999984, 2
-18.6789999999984, 2
-18.6779999999984, 2
-18.6769999999984, 2
-18.6759999999984, 2
-18.6749999999984, 2
-18.6739999999984, 2
-18.6729999999984, 2
-18.6719999999984, 2
-18.6709999999984, 2
-18.6699999999984, 2
-18.6689999999984, 2
-18.6679999999984, 2
-18.6669999999984, 2
-18.6659999999984, 2
-18.6649999999984, 2
-18.6639999999984, 2
-18.6629999999984, 2
-18.6619999999984, 2
-18.6609999999984, 2
-18.6599999999984, 2
-18.6589999999984, 2
-18.6579999999984, 2
-18.6569999999984, 2
-18.6559999999984, 2
-18.6549999999984, 2
-18.6539999999984, 2
-18.6529999999984, 2
-18.6519999999984, 2
-18.6509999999984, 2
-18.6499999999984, 2
-18.6489999999983, 2
-18.6479999999983, 2
-18.6469999999983, 2
-18.6459999999983, 2
-18.6449999999983, 2
-18.6439999999983, 2
-18.6429999999983, 2
-18.6419999999983, 2
-18.6409999999983, 2
-18.6399999999983, 2
-18.6389999999983, 2
-18.6379999999983, 2
-18.6369999999983, 2
-18.6359999999983, 2
-18.6349999999983, 2
-18.6339999999983, 2
-18.6329999999983, 2
-18.6319999999983, 2
-18.6309999999983, 2
-18.6299999999983, 2
-18.6289999999983, 2
-18.6279999999983, 2
-18.6269999999983, 2
-18.6259999999983, 2
-18.6249999999983, 2
-18.6239999999983, 2
-18.6229999999983, 2
-18.6219999999983, 2
-18.6209999999983, 2
-18.6199999999983, 2
-18.6189999999983, 2
-18.6179999999983, 2
-18.6169999999983, 2
-18.6159999999983, 2
-18.6149999999983, 2
-18.6139999999983, 2
-18.6129999999983, 2
-18.6119999999983, 2
-18.6109999999983, 2
-18.6099999999983, 2
-18.6089999999983, 2
-18.6079999999983, 2
-18.6069999999983, 2
-18.6059999999983, 2
-18.6049999999983, 2
-18.6039999999983, 2
-18.6029999999983, 2
-18.6019999999983, 2
-18.6009999999983, 2
-18.5999999999983, 2
-18.5989999999983, 2
-18.5979999999983, 2
-18.5969999999983, 2
-18.5959999999983, 2
-18.5949999999983, 2
-18.5939999999983, 2
-18.5929999999983, 2
-18.5919999999983, 2
-18.5909999999983, 2
-18.5899999999983, 2
-18.5889999999983, 2
-18.5879999999983, 2
-18.5869999999983, 2
-18.5859999999983, 2
-18.5849999999983, 2
-18.5839999999983, 2
-18.5829999999983, 2
-18.5819999999983, 2
-18.5809999999983, 2
-18.5799999999983, 2
-18.5789999999983, 2
-18.5779999999983, 2
-18.5769999999983, 2
-18.5759999999983, 2
-18.5749999999983, 2
-18.5739999999983, 2
-18.5729999999983, 2
-18.5719999999983, 2
-18.5709999999983, 2
-18.5699999999983, 2
-18.5689999999983, 2
-18.5679999999983, 2
-18.5669999999982, 2
-18.5659999999982, 2
-18.5649999999982, 2
-18.5639999999982, 2
-18.5629999999982, 2
-18.5619999999982, 2
-18.5609999999982, 2
-18.5599999999982, 2
-18.5589999999982, 2
-18.5579999999982, 2
-18.5569999999982, 2
-18.5559999999982, 2
-18.5549999999982, 2
-18.5539999999982, 2
-18.5529999999982, 2
-18.5519999999982, 2
-18.5509999999982, 2
-18.5499999999982, 2
-18.5489999999982, 2
-18.5479999999982, 2
-18.5469999999982, 2
-18.5459999999982, 2
-18.5449999999982, 2
-18.5439999999982, 2
-18.5429999999982, 2
-18.5419999999982, 2
-18.5409999999982, 2
-18.5399999999982, 2
-18.5389999999982, 2
-18.5379999999982, 2
-18.5369999999982, 2
-18.5359999999982, 2
-18.5349999999982, 2
-18.5339999999982, 2
-18.5329999999982, 2
-18.5319999999982, 2
-18.5309999999982, 2
-18.5299999999982, 2
-18.5289999999982, 2
-18.5279999999982, 2
-18.5269999999982, 2
-18.5259999999982, 2
-18.5249999999982, 2
-18.5239999999982, 2
-18.5229999999982, 2
-18.5219999999982, 2
-18.5209999999982, 2
-18.5199999999982, 2
-18.5189999999982, 2
-18.5179999999982, 2
-18.5169999999982, 2
-18.5159999999982, 2
-18.5149999999982, 2
-18.5139999999982, 2
-18.5129999999982, 2
-18.5119999999982, 2
-18.5109999999982, 2
-18.5099999999982, 2
-18.5089999999982, 2
-18.5079999999982, 2
-18.5069999999982, 2
-18.5059999999982, 2
-18.5049999999982, 2
-18.5039999999982, 2
-18.5029999999982, 2
-18.5019999999982, 2
-18.5009999999982, 2
-18.4999999999982, 2
-18.4989999999982, 2
-18.4979999999982, 2
-18.4969999999982, 2
-18.4959999999982, 2
-18.4949999999982, 2
-18.4939999999982, 2
-18.4929999999982, 2
-18.4919999999982, 2
-18.4909999999982, 2
-18.4899999999982, 2
-18.4889999999982, 2
-18.4879999999982, 2
-18.4869999999982, 2
-18.4859999999982, 2
-18.4849999999981, 2
-18.4839999999981, 2
-18.4829999999981, 2
-18.4819999999981, 2
-18.4809999999981, 2
-18.4799999999981, 2
-18.4789999999981, 2
-18.4779999999981, 2
-18.4769999999981, 2
-18.4759999999981, 2
-18.4749999999981, 2
-18.4739999999981, 2
-18.4729999999981, 2
-18.4719999999981, 2
-18.4709999999981, 2
-18.4699999999981, 2
-18.4689999999981, 2
-18.4679999999981, 2
-18.4669999999981, 2
-18.4659999999981, 2
-18.4649999999981, 2
-18.4639999999981, 2
-18.4629999999981, 2
-18.4619999999981, 2
-18.4609999999981, 2
-18.4599999999981, 2
-18.4589999999981, 2
-18.4579999999981, 2
-18.4569999999981, 2
-18.4559999999981, 2
-18.4549999999981, 2
-18.4539999999981, 2
-18.4529999999981, 2
-18.4519999999981, 2
-18.4509999999981, 2
-18.4499999999981, 2
-18.4489999999981, 2
-18.4479999999981, 2
-18.4469999999981, 2
-18.4459999999981, 2
-18.4449999999981, 2
-18.4439999999981, 2
-18.4429999999981, 2
-18.4419999999981, 2
-18.4409999999981, 2
-18.4399999999981, 2
-18.4389999999981, 2
-18.4379999999981, 2
-18.4369999999981, 2
-18.4359999999981, 2
-18.4349999999981, 2
-18.4339999999981, 2
-18.4329999999981, 2
-18.4319999999981, 2
-18.4309999999981, 2
-18.4299999999981, 2
-18.4289999999981, 2
-18.4279999999981, 2
-18.4269999999981, 2
-18.4259999999981, 2
-18.4249999999981, 2
-18.4239999999981, 2
-18.4229999999981, 2
-18.4219999999981, 2
-18.4209999999981, 2
-18.4199999999981, 2
-18.4189999999981, 2
-18.4179999999981, 2
-18.4169999999981, 2
-18.4159999999981, 2
-18.4149999999981, 2
-18.4139999999981, 2
-18.4129999999981, 2
-18.4119999999981, 2
-18.4109999999981, 2
-18.4099999999981, 2
-18.4089999999981, 2
-18.4079999999981, 2
-18.4069999999981, 2
-18.4059999999981, 2
-18.4049999999981, 2
-18.403999999998, 2
-18.402999999998, 2
-18.401999999998, 2
-18.400999999998, 2
-18.399999999998, 2
-18.398999999998, 2
-18.397999999998, 2
-18.396999999998, 2
-18.395999999998, 2
-18.394999999998, 2
-18.393999999998, 2
-18.392999999998, 2
-18.391999999998, 2
-18.390999999998, 2
-18.389999999998, 2
-18.388999999998, 2
-18.387999999998, 2
-18.386999999998, 2
-18.385999999998, 2
-18.384999999998, 2
-18.383999999998, 2
-18.382999999998, 2
-18.381999999998, 2
-18.380999999998, 2
-18.379999999998, 2
-18.378999999998, 2
-18.377999999998, 2
-18.376999999998, 2
-18.375999999998, 2
-18.374999999998, 2
-18.373999999998, 2
-18.372999999998, 2
-18.371999999998, 2
-18.370999999998, 2
-18.369999999998, 2
-18.368999999998, 2
-18.367999999998, 2
-18.366999999998, 2
-18.365999999998, 2
-18.364999999998, 2
-18.363999999998, 2
-18.362999999998, 2
-18.361999999998, 2
-18.360999999998, 2
-18.359999999998, 2
-18.358999999998, 2
-18.357999999998, 2
-18.356999999998, 2
-18.355999999998, 2
-18.354999999998, 2
-18.353999999998, 2
-18.352999999998, 2
-18.351999999998, 2
-18.350999999998, 2
-18.349999999998, 2
-18.348999999998, 2
-18.347999999998, 2
-18.346999999998, 2
-18.345999999998, 2
-18.344999999998, 2
-18.343999999998, 2
-18.342999999998, 2
-18.341999999998, 2
-18.340999999998, 2
-18.339999999998, 2
-18.338999999998, 2
-18.337999999998, 2
-18.336999999998, 2
-18.335999999998, 2
-18.334999999998, 2
-18.333999999998, 2
-18.332999999998, 2
-18.331999999998, 2
-18.330999999998, 2
-18.329999999998, 2
-18.328999999998, 2
-18.327999999998, 2
-18.326999999998, 2
-18.325999999998, 2
-18.324999999998, 2
-18.323999999998, 2
-18.322999999998, 2
-18.3219999999979, 2
-18.3209999999979, 2
-18.3199999999979, 2
-18.3189999999979, 2
-18.3179999999979, 2
-18.3169999999979, 2
-18.3159999999979, 2
-18.3149999999979, 2
-18.3139999999979, 2
-18.3129999999979, 2
-18.3119999999979, 2
-18.3109999999979, 2
-18.3099999999979, 2
-18.3089999999979, 2
-18.3079999999979, 2
-18.3069999999979, 2
-18.3059999999979, 2
-18.3049999999979, 2
-18.3039999999979, 2
-18.3029999999979, 2
-18.3019999999979, 2
-18.3009999999979, 2
-18.2999999999979, 2
-18.2989999999979, 2
-18.2979999999979, 2
-18.2969999999979, 2
-18.2959999999979, 2
-18.2949999999979, 2
-18.2939999999979, 2
-18.2929999999979, 2
-18.2919999999979, 2
-18.2909999999979, 2
-18.2899999999979, 2
-18.2889999999979, 2
-18.2879999999979, 2
-18.2869999999979, 2
-18.2859999999979, 2
-18.2849999999979, 2
-18.2839999999979, 2
-18.2829999999979, 2
-18.2819999999979, 2
-18.2809999999979, 2
-18.2799999999979, 2
-18.2789999999979, 2
-18.2779999999979, 2
-18.2769999999979, 2
-18.2759999999979, 2
-18.2749999999979, 2
-18.2739999999979, 2
-18.2729999999979, 2
-18.2719999999979, 2
-18.2709999999979, 2
-18.2699999999979, 2
-18.2689999999979, 2
-18.2679999999979, 2
-18.2669999999979, 2
-18.2659999999979, 2
-18.2649999999979, 2
-18.2639999999979, 2
-18.2629999999979, 2
-18.2619999999979, 2
-18.2609999999979, 2
-18.2599999999979, 2
-18.2589999999979, 2
-18.2579999999979, 2
-18.2569999999979, 2
-18.2559999999979, 2
-18.2549999999979, 2
-18.2539999999979, 2
-18.2529999999979, 2
-18.2519999999979, 2
-18.2509999999979, 2
-18.2499999999979, 2
-18.2489999999979, 2
-18.2479999999979, 2
-18.2469999999979, 2
-18.2459999999979, 2
-18.2449999999979, 2
-18.2439999999979, 2
-18.2429999999979, 2
-18.2419999999979, 2
-18.2409999999979, 2
-18.2399999999978, 2
-18.2389999999978, 2
-18.2379999999978, 2
-18.2369999999978, 2
-18.2359999999978, 2
-18.2349999999978, 2
-18.2339999999978, 2
-18.2329999999978, 2
-18.2319999999978, 2
-18.2309999999978, 2
-18.2299999999978, 2
-18.2289999999978, 2
-18.2279999999978, 2
-18.2269999999978, 2
-18.2259999999978, 2
-18.2249999999978, 2
-18.2239999999978, 2
-18.2229999999978, 2
-18.2219999999978, 2
-18.2209999999978, 2
-18.2199999999978, 2
-18.2189999999978, 2
-18.2179999999978, 2
-18.2169999999978, 2
-18.2159999999978, 2
-18.2149999999978, 2
-18.2139999999978, 2
-18.2129999999978, 2
-18.2119999999978, 2
-18.2109999999978, 2
-18.2099999999978, 2
-18.2089999999978, 2
-18.2079999999978, 2
-18.2069999999978, 2
-18.2059999999978, 2
-18.2049999999978, 2
-18.2039999999978, 2
-18.2029999999978, 2
-18.2019999999978, 2
-18.2009999999978, 2
-18.1999999999978, 2
-18.1989999999978, 2
-18.1979999999978, 2
-18.1969999999978, 2
-18.1959999999978, 2
-18.1949999999978, 2
-18.1939999999978, 2
-18.1929999999978, 2
-18.1919999999978, 2
-18.1909999999978, 2
-18.1899999999978, 2
-18.1889999999978, 2
-18.1879999999978, 2
-18.1869999999978, 2
-18.1859999999978, 2
-18.1849999999978, 2
-18.1839999999978, 2
-18.1829999999978, 2
-18.1819999999978, 2
-18.1809999999978, 2
-18.1799999999978, 2
-18.1789999999978, 2
-18.1779999999978, 2
-18.1769999999978, 2
-18.1759999999978, 2
-18.1749999999978, 2
-18.1739999999978, 2
-18.1729999999978, 2
-18.1719999999978, 2
-18.1709999999978, 2
-18.1699999999978, 2
-18.1689999999978, 2
-18.1679999999978, 2
-18.1669999999978, 2
-18.1659999999978, 2
-18.1649999999978, 2
-18.1639999999978, 2
-18.1629999999978, 2
-18.1619999999978, 2
-18.1609999999978, 2
-18.1599999999978, 2
-18.1589999999978, 2
-18.1579999999977, 2
-18.1569999999977, 2
-18.1559999999977, 2
-18.1549999999977, 2
-18.1539999999977, 2
-18.1529999999977, 2
-18.1519999999977, 2
-18.1509999999977, 2
-18.1499999999977, 2
-18.1489999999977, 2
-18.1479999999977, 2
-18.1469999999977, 2
-18.1459999999977, 2
-18.1449999999977, 2
-18.1439999999977, 2
-18.1429999999977, 2
-18.1419999999977, 2
-18.1409999999977, 2
-18.1399999999977, 2
-18.1389999999977, 2
-18.1379999999977, 2
-18.1369999999977, 2
-18.1359999999977, 2
-18.1349999999977, 2
-18.1339999999977, 2
-18.1329999999977, 2
-18.1319999999977, 2
-18.1309999999977, 2
-18.1299999999977, 2
-18.1289999999977, 2
-18.1279999999977, 2
-18.1269999999977, 2
-18.1259999999977, 2
-18.1249999999977, 2
-18.1239999999977, 2
-18.1229999999977, 2
-18.1219999999977, 2
-18.1209999999977, 2
-18.1199999999977, 2
-18.1189999999977, 2
-18.1179999999977, 2
-18.1169999999977, 2
-18.1159999999977, 2
-18.1149999999977, 2
-18.1139999999977, 2
-18.1129999999977, 2
-18.1119999999977, 2
-18.1109999999977, 2
-18.1099999999977, 2
-18.1089999999977, 2
-18.1079999999977, 2
-18.1069999999977, 2
-18.1059999999977, 2
-18.1049999999977, 2
-18.1039999999977, 2
-18.1029999999977, 2
-18.1019999999977, 2
-18.1009999999977, 2
-18.0999999999977, 2
-18.0989999999977, 2
-18.0979999999977, 2
-18.0969999999977, 2
-18.0959999999977, 2
-18.0949999999977, 2
-18.0939999999977, 2
-18.0929999999977, 2
-18.0919999999977, 2
-18.0909999999977, 2
-18.0899999999977, 2
-18.0889999999977, 2
-18.0879999999977, 2
-18.0869999999977, 2
-18.0859999999977, 2
-18.0849999999977, 2
-18.0839999999977, 2
-18.0829999999977, 2
-18.0819999999977, 2
-18.0809999999977, 2
-18.0799999999977, 2
-18.0789999999977, 2
-18.0779999999977, 2
-18.0769999999977, 2
-18.0759999999976, 2
-18.0749999999976, 2
-18.0739999999976, 2
-18.0729999999976, 2
-18.0719999999976, 2
-18.0709999999976, 2
-18.0699999999976, 2
-18.0689999999976, 2
-18.0679999999976, 2
-18.0669999999976, 2
-18.0659999999976, 2
-18.0649999999976, 2
-18.0639999999976, 2
-18.0629999999976, 2
-18.0619999999976, 2
-18.0609999999976, 2
-18.0599999999976, 2
-18.0589999999976, 2
-18.0579999999976, 2
-18.0569999999976, 2
-18.0559999999976, 2
-18.0549999999976, 2
-18.0539999999976, 2
-18.0529999999976, 2
-18.0519999999976, 2
-18.0509999999976, 2
-18.0499999999976, 2
-18.0489999999976, 2
-18.0479999999976, 2
-18.0469999999976, 2
-18.0459999999976, 2
-18.0449999999976, 2
-18.0439999999976, 2
-18.0429999999976, 2
-18.0419999999976, 2
-18.0409999999976, 2
-18.0399999999976, 2
-18.0389999999976, 2
-18.0379999999976, 2
-18.0369999999976, 2
-18.0359999999976, 2
-18.0349999999976, 2
-18.0339999999976, 2
-18.0329999999976, 2
-18.0319999999976, 2
-18.0309999999976, 2
-18.0299999999976, 2
-18.0289999999976, 2
-18.0279999999976, 2
-18.0269999999976, 2
-18.0259999999976, 2
-18.0249999999976, 2
-18.0239999999976, 2
-18.0229999999976, 2
-18.0219999999976, 2
-18.0209999999976, 2
-18.0199999999976, 2
-18.0189999999976, 2
-18.0179999999976, 2
-18.0169999999976, 2
-18.0159999999976, 2
-18.0149999999976, 2
-18.0139999999976, 2
-18.0129999999976, 2
-18.0119999999976, 2
-18.0109999999976, 2
-18.0099999999976, 2
-18.0089999999976, 2
-18.0079999999976, 2
-18.0069999999976, 2
-18.0059999999976, 2
-18.0049999999976, 2
-18.0039999999976, 2
-18.0029999999976, 2
-18.0019999999976, 2
-18.0009999999976, 2
-17.9999999999976, 2
-17.9989999999976, 2
-17.9979999999976, 2
-17.9969999999976, 2
-17.9959999999976, 2
-17.9949999999976, 2
-17.9939999999975, 2
-17.9929999999975, 2
-17.9919999999975, 2
-17.9909999999975, 2
-17.9899999999975, 2
-17.9889999999975, 2
-17.9879999999975, 2
-17.9869999999975, 2
-17.9859999999975, 2
-17.9849999999975, 2
-17.9839999999975, 2
-17.9829999999975, 2
-17.9819999999975, 2
-17.9809999999975, 2
-17.9799999999975, 2
-17.9789999999975, 2
-17.9779999999975, 2
-17.9769999999975, 2
-17.9759999999975, 2
-17.9749999999975, 2
-17.9739999999975, 2
-17.9729999999975, 2
-17.9719999999975, 2
-17.9709999999975, 2
-17.9699999999975, 2
-17.9689999999975, 2
-17.9679999999975, 2
-17.9669999999975, 2
-17.9659999999975, 2
-17.9649999999975, 2
-17.9639999999975, 2
-17.9629999999975, 2
-17.9619999999975, 2
-17.9609999999975, 2
-17.9599999999975, 2
-17.9589999999975, 2
-17.9579999999975, 2
-17.9569999999975, 2
-17.9559999999975, 2
-17.9549999999975, 2
-17.9539999999975, 2
-17.9529999999975, 2
-17.9519999999975, 2
-17.9509999999975, 2
-17.9499999999975, 2
-17.9489999999975, 2
-17.9479999999975, 2
-17.9469999999975, 2
-17.9459999999975, 2
-17.9449999999975, 2
-17.9439999999975, 2
-17.9429999999975, 2
-17.9419999999975, 2
-17.9409999999975, 2
-17.9399999999975, 2
-17.9389999999975, 2
-17.9379999999975, 2
-17.9369999999975, 2
-17.9359999999975, 2
-17.9349999999975, 2
-17.9339999999975, 2
-17.9329999999975, 2
-17.9319999999975, 2
-17.9309999999975, 2
-17.9299999999975, 2
-17.9289999999975, 2
-17.9279999999975, 2
-17.9269999999975, 2
-17.9259999999975, 2
-17.9249999999975, 2
-17.9239999999975, 2
-17.9229999999975, 2
-17.9219999999975, 2
-17.9209999999975, 2
-17.9199999999975, 2
-17.9189999999975, 2
-17.9179999999975, 2
-17.9169999999975, 2
-17.9159999999975, 2
-17.9149999999975, 2
-17.9139999999975, 2
-17.9129999999974, 2
-17.9119999999974, 2
-17.9109999999974, 2
-17.9099999999974, 2
-17.9089999999974, 2
-17.9079999999974, 2
-17.9069999999974, 2
-17.9059999999974, 2
-17.9049999999974, 2
-17.9039999999974, 2
-17.9029999999974, 2
-17.9019999999974, 2
-17.9009999999974, 2
-17.8999999999974, 2
-17.8989999999974, 2
-17.8979999999974, 2
-17.8969999999974, 2
-17.8959999999974, 2
-17.8949999999974, 2
-17.8939999999974, 2
-17.8929999999974, 2
-17.8919999999974, 2
-17.8909999999974, 2
-17.8899999999974, 2
-17.8889999999974, 2
-17.8879999999974, 2
-17.8869999999974, 2
-17.8859999999974, 2
-17.8849999999974, 2
-17.8839999999974, 2
-17.8829999999974, 2
-17.8819999999974, 2
-17.8809999999974, 2
-17.8799999999974, 2
-17.8789999999974, 2
-17.8779999999974, 2
-17.8769999999974, 2
-17.8759999999974, 2
-17.8749999999974, 2
-17.8739999999974, 2
-17.8729999999974, 2
-17.8719999999974, 2
-17.8709999999974, 2
-17.8699999999974, 2
-17.8689999999974, 2
-17.8679999999974, 2
-17.8669999999974, 2
-17.8659999999974, 2
-17.8649999999974, 2
-17.8639999999974, 2
-17.8629999999974, 2
-17.8619999999974, 2
-17.8609999999974, 2
-17.8599999999974, 2
-17.8589999999974, 2
-17.8579999999974, 2
-17.8569999999974, 2
-17.8559999999974, 2
-17.8549999999974, 2
-17.8539999999974, 2
-17.8529999999974, 2
-17.8519999999974, 2
-17.8509999999974, 2
-17.8499999999974, 2
-17.8489999999974, 2
-17.8479999999974, 2
-17.8469999999974, 2
-17.8459999999974, 2
-17.8449999999974, 2
-17.8439999999974, 2
-17.8429999999974, 2
-17.8419999999974, 2
-17.8409999999974, 2
-17.8399999999974, 2
-17.8389999999974, 2
-17.8379999999974, 2
-17.8369999999974, 2
-17.8359999999974, 2
-17.8349999999974, 2
-17.8339999999974, 2
-17.8329999999974, 2
-17.8319999999974, 2
-17.8309999999973, 2
-17.8299999999973, 2
-17.8289999999973, 2
-17.8279999999973, 2
-17.8269999999973, 2
-17.8259999999973, 2
-17.8249999999973, 2
-17.8239999999973, 2
-17.8229999999973, 2
-17.8219999999973, 2
-17.8209999999973, 2
-17.8199999999973, 2
-17.8189999999973, 2
-17.8179999999973, 2
-17.8169999999973, 2
-17.8159999999973, 2
-17.8149999999973, 2
-17.8139999999973, 2
-17.8129999999973, 2
-17.8119999999973, 2
-17.8109999999973, 2
-17.8099999999973, 2
-17.8089999999973, 2
-17.8079999999973, 2
-17.8069999999973, 2
-17.8059999999973, 2
-17.8049999999973, 2
-17.8039999999973, 2
-17.8029999999973, 2
-17.8019999999973, 2
-17.8009999999973, 2
-17.7999999999973, 2
-17.7989999999973, 2
-17.7979999999973, 2
-17.7969999999973, 2
-17.7959999999973, 2
-17.7949999999973, 2
-17.7939999999973, 2
-17.7929999999973, 2
-17.7919999999973, 2
-17.7909999999973, 2
-17.7899999999973, 2
-17.7889999999973, 2
-17.7879999999973, 2
-17.7869999999973, 2
-17.7859999999973, 2
-17.7849999999973, 2
-17.7839999999973, 2
-17.7829999999973, 2
-17.7819999999973, 2
-17.7809999999973, 2
-17.7799999999973, 2
-17.7789999999973, 2
-17.7779999999973, 2
-17.7769999999973, 2
-17.7759999999973, 2
-17.7749999999973, 2
-17.7739999999973, 2
-17.7729999999973, 2
-17.7719999999973, 2
-17.7709999999973, 2
-17.7699999999973, 2
-17.7689999999973, 2
-17.7679999999973, 2
-17.7669999999973, 2
-17.7659999999973, 2
-17.7649999999973, 2
-17.7639999999973, 2
-17.7629999999973, 2
-17.7619999999973, 2
-17.7609999999973, 2
-17.7599999999973, 2
-17.7589999999973, 2
-17.7579999999973, 2
-17.7569999999973, 2
-17.7559999999973, 2
-17.7549999999973, 2
-17.7539999999973, 2
-17.7529999999973, 2
-17.7519999999973, 2
-17.7509999999973, 2
-17.7499999999973, 2
-17.7489999999972, 2
-17.7479999999972, 2
-17.7469999999972, 2
-17.7459999999972, 2
-17.7449999999972, 2
-17.7439999999972, 2
-17.7429999999972, 2
-17.7419999999972, 2
-17.7409999999972, 2
-17.7399999999972, 2
-17.7389999999972, 2
-17.7379999999972, 2
-17.7369999999972, 2
-17.7359999999972, 2
-17.7349999999972, 2
-17.7339999999972, 2
-17.7329999999972, 2
-17.7319999999972, 2
-17.7309999999972, 2
-17.7299999999972, 2
-17.7289999999972, 2
-17.7279999999972, 2
-17.7269999999972, 2
-17.7259999999972, 2
-17.7249999999972, 2
-17.7239999999972, 2
-17.7229999999972, 2
-17.7219999999972, 2
-17.7209999999972, 2
-17.7199999999972, 2
-17.7189999999972, 2
-17.7179999999972, 2
-17.7169999999972, 2
-17.7159999999972, 2
-17.7149999999972, 2
-17.7139999999972, 2
-17.7129999999972, 2
-17.7119999999972, 2
-17.7109999999972, 2
-17.7099999999972, 2
-17.7089999999972, 2
-17.7079999999972, 2
-17.7069999999972, 2
-17.7059999999972, 2
-17.7049999999972, 2
-17.7039999999972, 2
-17.7029999999972, 2
-17.7019999999972, 2
-17.7009999999972, 2
-17.6999999999972, 2
-17.6989999999972, 2
-17.6979999999972, 2
-17.6969999999972, 2
-17.6959999999972, 2
-17.6949999999972, 2
-17.6939999999972, 2
-17.6929999999972, 2
-17.6919999999972, 2
-17.6909999999972, 2
-17.6899999999972, 2
-17.6889999999972, 2
-17.6879999999972, 2
-17.6869999999972, 2
-17.6859999999972, 2
-17.6849999999972, 2
-17.6839999999972, 2
-17.6829999999972, 2
-17.6819999999972, 2
-17.6809999999972, 2
-17.6799999999972, 2
-17.6789999999972, 2
-17.6779999999972, 2
-17.6769999999972, 2
-17.6759999999972, 2
-17.6749999999972, 2
-17.6739999999972, 2
-17.6729999999972, 2
-17.6719999999972, 2
-17.6709999999972, 2
-17.6699999999972, 2
-17.6689999999972, 2
-17.6679999999972, 2
-17.6669999999971, 2
-17.6659999999971, 2
-17.6649999999971, 2
-17.6639999999971, 2
-17.6629999999971, 2
-17.6619999999971, 2
-17.6609999999971, 2
-17.6599999999971, 2
-17.6589999999971, 2
-17.6579999999971, 2
-17.6569999999971, 2
-17.6559999999971, 2
-17.6549999999971, 2
-17.6539999999971, 2
-17.6529999999971, 2
-17.6519999999971, 2
-17.6509999999971, 2
-17.6499999999971, 2
-17.6489999999971, 2
-17.6479999999971, 2
-17.6469999999971, 2
-17.6459999999971, 2
-17.6449999999971, 2
-17.6439999999971, 2
-17.6429999999971, 2
-17.6419999999971, 2
-17.6409999999971, 2
-17.6399999999971, 2
-17.6389999999971, 2
-17.6379999999971, 2
-17.6369999999971, 2
-17.6359999999971, 2
-17.6349999999971, 2
-17.6339999999971, 2
-17.6329999999971, 2
-17.6319999999971, 2
-17.6309999999971, 2
-17.6299999999971, 2
-17.6289999999971, 2
-17.6279999999971, 2
-17.6269999999971, 2
-17.6259999999971, 2
-17.6249999999971, 2
-17.6239999999971, 2
-17.6229999999971, 2
-17.6219999999971, 2
-17.6209999999971, 2
-17.6199999999971, 2
-17.6189999999971, 2
-17.6179999999971, 2
-17.6169999999971, 2
-17.6159999999971, 2
-17.6149999999971, 2
-17.6139999999971, 2
-17.6129999999971, 2
-17.6119999999971, 2
-17.6109999999971, 2
-17.6099999999971, 2
-17.6089999999971, 2
-17.6079999999971, 2
-17.6069999999971, 2
-17.6059999999971, 2
-17.6049999999971, 2
-17.6039999999971, 2
-17.6029999999971, 2
-17.6019999999971, 2
-17.6009999999971, 2
-17.5999999999971, 2
-17.5989999999971, 2
-17.5979999999971, 2
-17.5969999999971, 2
-17.5959999999971, 2
-17.5949999999971, 2
-17.5939999999971, 2
-17.5929999999971, 2
-17.5919999999971, 2
-17.5909999999971, 2
-17.5899999999971, 2
-17.5889999999971, 2
-17.5879999999971, 2
-17.5869999999971, 2
-17.5859999999971, 2
-17.584999999997, 2
-17.583999999997, 2
-17.582999999997, 2
-17.581999999997, 2
-17.580999999997, 2
-17.579999999997, 2
-17.578999999997, 2
-17.577999999997, 2
-17.576999999997, 2
-17.575999999997, 2
-17.574999999997, 2
-17.573999999997, 2
-17.572999999997, 2
-17.571999999997, 2
-17.570999999997, 2
-17.569999999997, 2
-17.568999999997, 2
-17.567999999997, 2
-17.566999999997, 2
-17.565999999997, 2
-17.564999999997, 2
-17.563999999997, 2
-17.562999999997, 2
-17.561999999997, 2
-17.560999999997, 2
-17.559999999997, 2
-17.558999999997, 2
-17.557999999997, 2
-17.556999999997, 2
-17.555999999997, 2
-17.554999999997, 2
-17.553999999997, 2
-17.552999999997, 2
-17.551999999997, 2
-17.550999999997, 2
-17.549999999997, 2
-17.548999999997, 2
-17.547999999997, 2
-17.546999999997, 2
-17.545999999997, 2
-17.544999999997, 2
-17.543999999997, 2
-17.542999999997, 2
-17.541999999997, 2
-17.540999999997, 2
-17.539999999997, 2
-17.538999999997, 2
-17.537999999997, 2
-17.536999999997, 2
-17.535999999997, 2
-17.534999999997, 2
-17.533999999997, 2
-17.532999999997, 2
-17.531999999997, 2
-17.530999999997, 2
-17.529999999997, 2
-17.528999999997, 2
-17.527999999997, 2
-17.526999999997, 2
-17.525999999997, 2
-17.524999999997, 2
-17.523999999997, 2
-17.522999999997, 2
-17.521999999997, 2
-17.520999999997, 2
-17.519999999997, 2
-17.518999999997, 2
-17.517999999997, 2
-17.516999999997, 2
-17.515999999997, 2
-17.514999999997, 2
-17.513999999997, 2
-17.512999999997, 2
-17.511999999997, 2
-17.510999999997, 2
-17.509999999997, 2
-17.508999999997, 2
-17.507999999997, 2
-17.506999999997, 2
-17.505999999997, 2
-17.504999999997, 2
-17.503999999997, 2
-17.5029999999969, 2
-17.5019999999969, 2
-17.5009999999969, 2
-17.4999999999969, 2
-17.4989999999969, 2
-17.4979999999969, 2
-17.4969999999969, 2
-17.4959999999969, 2
-17.4949999999969, 2
-17.4939999999969, 2
-17.4929999999969, 2
-17.4919999999969, 2
-17.4909999999969, 2
-17.4899999999969, 2
-17.4889999999969, 2
-17.4879999999969, 2
-17.4869999999969, 2
-17.4859999999969, 2
-17.4849999999969, 2
-17.4839999999969, 2
-17.4829999999969, 2
-17.4819999999969, 2
-17.4809999999969, 2
-17.4799999999969, 2
-17.4789999999969, 2
-17.4779999999969, 2
-17.4769999999969, 2
-17.4759999999969, 2
-17.4749999999969, 2
-17.4739999999969, 2
-17.4729999999969, 2
-17.4719999999969, 2
-17.4709999999969, 2
-17.4699999999969, 2
-17.4689999999969, 2
-17.4679999999969, 2
-17.4669999999969, 2
-17.4659999999969, 2
-17.4649999999969, 2
-17.4639999999969, 2
-17.4629999999969, 2
-17.4619999999969, 2
-17.4609999999969, 2
-17.4599999999969, 2
-17.4589999999969, 2
-17.4579999999969, 2
-17.4569999999969, 2
-17.4559999999969, 2
-17.4549999999969, 2
-17.4539999999969, 2
-17.4529999999969, 2
-17.4519999999969, 2
-17.4509999999969, 2
-17.4499999999969, 2
-17.4489999999969, 2
-17.4479999999969, 2
-17.4469999999969, 2
-17.4459999999969, 2
-17.4449999999969, 2
-17.4439999999969, 2
-17.4429999999969, 2
-17.4419999999969, 2
-17.4409999999969, 2
-17.4399999999969, 2
-17.4389999999969, 2
-17.4379999999969, 2
-17.4369999999969, 2
-17.4359999999969, 2
-17.4349999999969, 2
-17.4339999999969, 2
-17.4329999999969, 2
-17.4319999999969, 2
-17.4309999999969, 2
-17.4299999999969, 2
-17.4289999999969, 2
-17.4279999999969, 2
-17.4269999999969, 2
-17.4259999999969, 2
-17.4249999999969, 2
-17.4239999999969, 2
-17.4229999999969, 2
-17.4219999999968, 2
-17.4209999999968, 2
-17.4199999999968, 2
-17.4189999999968, 2
-17.4179999999968, 2
-17.4169999999968, 2
-17.4159999999968, 2
-17.4149999999968, 2
-17.4139999999968, 2
-17.4129999999968, 2
-17.4119999999968, 2
-17.4109999999968, 2
-17.4099999999968, 2
-17.4089999999968, 2
-17.4079999999968, 2
-17.4069999999968, 2
-17.4059999999968, 2
-17.4049999999968, 2
-17.4039999999968, 2
-17.4029999999968, 2
-17.4019999999968, 2
-17.4009999999968, 2
-17.3999999999968, 2
-17.3989999999968, 2
-17.3979999999968, 2
-17.3969999999968, 2
-17.3959999999968, 2
-17.3949999999968, 2
-17.3939999999968, 2
-17.3929999999968, 2
-17.3919999999968, 2
-17.3909999999968, 2
-17.3899999999968, 2
-17.3889999999968, 2
-17.3879999999968, 2
-17.3869999999968, 2
-17.3859999999968, 2
-17.3849999999968, 2
-17.3839999999968, 2
-17.3829999999968, 2
-17.3819999999968, 2
-17.3809999999968, 2
-17.3799999999968, 2
-17.3789999999968, 2
-17.3779999999968, 2
-17.3769999999968, 2
-17.3759999999968, 2
-17.3749999999968, 2
-17.3739999999968, 2
-17.3729999999968, 2
-17.3719999999968, 2
-17.3709999999968, 2
-17.3699999999968, 2
-17.3689999999968, 2
-17.3679999999968, 2
-17.3669999999968, 2
-17.3659999999968, 2
-17.3649999999968, 2
-17.3639999999968, 2
-17.3629999999968, 2
-17.3619999999968, 2
-17.3609999999968, 2
-17.3599999999968, 2
-17.3589999999968, 2
-17.3579999999968, 2
-17.3569999999968, 2
-17.3559999999968, 2
-17.3549999999968, 2
-17.3539999999968, 2
-17.3529999999968, 2
-17.3519999999968, 2
-17.3509999999968, 2
-17.3499999999968, 2
-17.3489999999968, 2
-17.3479999999968, 2
-17.3469999999968, 2
-17.3459999999968, 2
-17.3449999999968, 2
-17.3439999999968, 2
-17.3429999999968, 2
-17.3419999999968, 2
-17.3409999999968, 2
-17.3399999999967, 2
-17.3389999999967, 2
-17.3379999999967, 2
-17.3369999999967, 2
-17.3359999999967, 2
-17.3349999999967, 2
-17.3339999999967, 2
-17.3329999999967, 2
-17.3319999999967, 2
-17.3309999999967, 2
-17.3299999999967, 2
-17.3289999999967, 2
-17.3279999999967, 2
-17.3269999999967, 2
-17.3259999999967, 2
-17.3249999999967, 2
-17.3239999999967, 2
-17.3229999999967, 2
-17.3219999999967, 2
-17.3209999999967, 2
-17.3199999999967, 2
-17.3189999999967, 2
-17.3179999999967, 2
-17.3169999999967, 2
-17.3159999999967, 2
-17.3149999999967, 2
-17.3139999999967, 2
-17.3129999999967, 2
-17.3119999999967, 2
-17.3109999999967, 2
-17.3099999999967, 2
-17.3089999999967, 2
-17.3079999999967, 2
-17.3069999999967, 2
-17.3059999999967, 2
-17.3049999999967, 2
-17.3039999999967, 2
-17.3029999999967, 2
-17.3019999999967, 2
-17.3009999999967, 2
-17.2999999999967, 2
-17.2989999999967, 2
-17.2979999999967, 2
-17.2969999999967, 2
-17.2959999999967, 2
-17.2949999999967, 2
-17.2939999999967, 2
-17.2929999999967, 2
-17.2919999999967, 2
-17.2909999999967, 2
-17.2899999999967, 2
-17.2889999999967, 2
-17.2879999999967, 2
-17.2869999999967, 2
-17.2859999999967, 2
-17.2849999999967, 2
-17.2839999999967, 2
-17.2829999999967, 2
-17.2819999999967, 2
-17.2809999999967, 2
-17.2799999999967, 2
-17.2789999999967, 2
-17.2779999999967, 2
-17.2769999999967, 2
-17.2759999999967, 2
-17.2749999999967, 2
-17.2739999999967, 2
-17.2729999999967, 2
-17.2719999999967, 2
-17.2709999999967, 2
-17.2699999999967, 2
-17.2689999999967, 2
-17.2679999999967, 2
-17.2669999999967, 2
-17.2659999999967, 2
-17.2649999999967, 2
-17.2639999999967, 2
-17.2629999999967, 2
-17.2619999999967, 2
-17.2609999999967, 2
-17.2599999999967, 2
-17.2589999999967, 2
-17.2579999999966, 2
-17.2569999999966, 2
-17.2559999999966, 2
-17.2549999999966, 2
-17.2539999999966, 2
-17.2529999999966, 2
-17.2519999999966, 2
-17.2509999999966, 2
-17.2499999999966, 2
-17.2489999999966, 2
-17.2479999999966, 2
-17.2469999999966, 2
-17.2459999999966, 2
-17.2449999999966, 2
-17.2439999999966, 2
-17.2429999999966, 2
-17.2419999999966, 2
-17.2409999999966, 2
-17.2399999999966, 2
-17.2389999999966, 2
-17.2379999999966, 2
-17.2369999999966, 2
-17.2359999999966, 2
-17.2349999999966, 2
-17.2339999999966, 2
-17.2329999999966, 2
-17.2319999999966, 2
-17.2309999999966, 2
-17.2299999999966, 2
-17.2289999999966, 2
-17.2279999999966, 2
-17.2269999999966, 2
-17.2259999999966, 2
-17.2249999999966, 2
-17.2239999999966, 2
-17.2229999999966, 2
-17.2219999999966, 2
-17.2209999999966, 2
-17.2199999999966, 2
-17.2189999999966, 2
-17.2179999999966, 2
-17.2169999999966, 2
-17.2159999999966, 2
-17.2149999999966, 2
-17.2139999999966, 2
-17.2129999999966, 2
-17.2119999999966, 2
-17.2109999999966, 2
-17.2099999999966, 2
-17.2089999999966, 2
-17.2079999999966, 2
-17.2069999999966, 2
-17.2059999999966, 2
-17.2049999999966, 2
-17.2039999999966, 2
-17.2029999999966, 2
-17.2019999999966, 2
-17.2009999999966, 2
-17.1999999999966, 2
-17.1989999999966, 2
-17.1979999999966, 2
-17.1969999999966, 2
-17.1959999999966, 2
-17.1949999999966, 2
-17.1939999999966, 2
-17.1929999999966, 2
-17.1919999999966, 2
-17.1909999999966, 2
-17.1899999999966, 2
-17.1889999999966, 2
-17.1879999999966, 2
-17.1869999999966, 2
-17.1859999999966, 2
-17.1849999999966, 2
-17.1839999999966, 2
-17.1829999999966, 2
-17.1819999999966, 2
-17.1809999999966, 2
-17.1799999999966, 2
-17.1789999999966, 2
-17.1779999999966, 2
-17.1769999999966, 2
-17.1759999999965, 2
-17.1749999999965, 2
-17.1739999999965, 2
-17.1729999999965, 2
-17.1719999999965, 2
-17.1709999999965, 2
-17.1699999999965, 2
-17.1689999999965, 2
-17.1679999999965, 2
-17.1669999999965, 2
-17.1659999999965, 2
-17.1649999999965, 2
-17.1639999999965, 2
-17.1629999999965, 2
-17.1619999999965, 2
-17.1609999999965, 2
-17.1599999999965, 2
-17.1589999999965, 2
-17.1579999999965, 2
-17.1569999999965, 2
-17.1559999999965, 2
-17.1549999999965, 2
-17.1539999999965, 2
-17.1529999999965, 2
-17.1519999999965, 2
-17.1509999999965, 2
-17.1499999999965, 2
-17.1489999999965, 2
-17.1479999999965, 2
-17.1469999999965, 2
-17.1459999999965, 2
-17.1449999999965, 2
-17.1439999999965, 2
-17.1429999999965, 2
-17.1419999999965, 2
-17.1409999999965, 2
-17.1399999999965, 2
-17.1389999999965, 2
-17.1379999999965, 2
-17.1369999999965, 2
-17.1359999999965, 2
-17.1349999999965, 2
-17.1339999999965, 2
-17.1329999999965, 2
-17.1319999999965, 2
-17.1309999999965, 2
-17.1299999999965, 2
-17.1289999999965, 2
-17.1279999999965, 2
-17.1269999999965, 2
-17.1259999999965, 2
-17.1249999999965, 2
-17.1239999999965, 2
-17.1229999999965, 2
-17.1219999999965, 2
-17.1209999999965, 2
-17.1199999999965, 2
-17.1189999999965, 2
-17.1179999999965, 2
-17.1169999999965, 2
-17.1159999999965, 2
-17.1149999999965, 2
-17.1139999999965, 2
-17.1129999999965, 2
-17.1119999999965, 2
-17.1109999999965, 2
-17.1099999999965, 2
-17.1089999999965, 2
-17.1079999999965, 2
-17.1069999999965, 2
-17.1059999999965, 2
-17.1049999999965, 2
-17.1039999999965, 2
-17.1029999999965, 2
-17.1019999999965, 2
-17.1009999999965, 2
-17.0999999999965, 2
-17.0989999999965, 2
-17.0979999999965, 2
-17.0969999999965, 2
-17.0959999999965, 2
-17.0949999999965, 2
-17.0939999999964, 2
-17.0929999999964, 2
-17.0919999999964, 2
-17.0909999999964, 2
-17.0899999999964, 2
-17.0889999999964, 2
-17.0879999999964, 2
-17.0869999999964, 2
-17.0859999999964, 2
-17.0849999999964, 2
-17.0839999999964, 2
-17.0829999999964, 2
-17.0819999999964, 2
-17.0809999999964, 2
-17.0799999999964, 2
-17.0789999999964, 2
-17.0779999999964, 2
-17.0769999999964, 2
-17.0759999999964, 2
-17.0749999999964, 2
-17.0739999999964, 2
-17.0729999999964, 2
-17.0719999999964, 2
-17.0709999999964, 2
-17.0699999999964, 2
-17.0689999999964, 2
-17.0679999999964, 2
-17.0669999999964, 2
-17.0659999999964, 2
-17.0649999999964, 2
-17.0639999999964, 2
-17.0629999999964, 2
-17.0619999999964, 2
-17.0609999999964, 2
-17.0599999999964, 2
-17.0589999999964, 2
-17.0579999999964, 2
-17.0569999999964, 2
-17.0559999999964, 2
-17.0549999999964, 2
-17.0539999999964, 2
-17.0529999999964, 2
-17.0519999999964, 2
-17.0509999999964, 2
-17.0499999999964, 2
-17.0489999999964, 2
-17.0479999999964, 2
-17.0469999999964, 2
-17.0459999999964, 2
-17.0449999999964, 2
-17.0439999999964, 2
-17.0429999999964, 2
-17.0419999999964, 2
-17.0409999999964, 2
-17.0399999999964, 2
-17.0389999999964, 2
-17.0379999999964, 2
-17.0369999999964, 2
-17.0359999999964, 2
-17.0349999999964, 2
-17.0339999999964, 2
-17.0329999999964, 2
-17.0319999999964, 2
-17.0309999999964, 2
-17.0299999999964, 2
-17.0289999999964, 2
-17.0279999999964, 2
-17.0269999999964, 2
-17.0259999999964, 2
-17.0249999999964, 2
-17.0239999999964, 2
-17.0229999999964, 2
-17.0219999999964, 2
-17.0209999999964, 2
-17.0199999999964, 2
-17.0189999999964, 2
-17.0179999999964, 2
-17.0169999999964, 2
-17.0159999999964, 2
-17.0149999999964, 2
-17.0139999999964, 2
-17.0129999999963, 2
-17.0119999999963, 2
-17.0109999999963, 2
-17.0099999999963, 2
-17.0089999999963, 2
-17.0079999999963, 2
-17.0069999999963, 2
-17.0059999999963, 2
-17.0049999999963, 2
-17.0039999999963, 2
-17.0029999999963, 2
-17.0019999999963, 2
-17.0009999999963, 2
-16.9999999999963, 2
-16.9989999999963, 2
-16.9979999999963, 2
-16.9969999999963, 2
-16.9959999999963, 2
-16.9949999999963, 2
-16.9939999999963, 2
-16.9929999999963, 2
-16.9919999999963, 2
-16.9909999999963, 2
-16.9899999999963, 2
-16.9889999999963, 2
-16.9879999999963, 2
-16.9869999999963, 2
-16.9859999999963, 2
-16.9849999999963, 2
-16.9839999999963, 2
-16.9829999999963, 2
-16.9819999999963, 2
-16.9809999999963, 2
-16.9799999999963, 2
-16.9789999999963, 2
-16.9779999999963, 2
-16.9769999999963, 2
-16.9759999999963, 2
-16.9749999999963, 2
-16.9739999999963, 2
-16.9729999999963, 2
-16.9719999999963, 2
-16.9709999999963, 2
-16.9699999999963, 2
-16.9689999999963, 2
-16.9679999999963, 2
-16.9669999999963, 2
-16.9659999999963, 2
-16.9649999999963, 2
-16.9639999999963, 2
-16.9629999999963, 2
-16.9619999999963, 2
-16.9609999999963, 2
-16.9599999999963, 2
-16.9589999999963, 2
-16.9579999999963, 2
-16.9569999999963, 2
-16.9559999999963, 2
-16.9549999999963, 2
-16.9539999999963, 2
-16.9529999999963, 2
-16.9519999999963, 2
-16.9509999999963, 2
-16.9499999999963, 2
-16.9489999999963, 2
-16.9479999999963, 2
-16.9469999999963, 2
-16.9459999999963, 2
-16.9449999999963, 2
-16.9439999999963, 2
-16.9429999999963, 2
-16.9419999999963, 2
-16.9409999999963, 2
-16.9399999999963, 2
-16.9389999999963, 2
-16.9379999999963, 2
-16.9369999999963, 2
-16.9359999999963, 2
-16.9349999999963, 2
-16.9339999999963, 2
-16.9329999999963, 2
-16.9319999999963, 2
-16.9309999999962, 2
-16.9299999999962, 2
-16.9289999999962, 2
-16.9279999999962, 2
-16.9269999999962, 2
-16.9259999999962, 2
-16.9249999999962, 2
-16.9239999999962, 2
-16.9229999999962, 2
-16.9219999999962, 2
-16.9209999999962, 2
-16.9199999999962, 2
-16.9189999999962, 2
-16.9179999999962, 2
-16.9169999999962, 2
-16.9159999999962, 2
-16.9149999999962, 2
-16.9139999999962, 2
-16.9129999999962, 2
-16.9119999999962, 2
-16.9109999999962, 2
-16.9099999999962, 2
-16.9089999999962, 2
-16.9079999999962, 2
-16.9069999999962, 2
-16.9059999999962, 2
-16.9049999999962, 2
-16.9039999999962, 2
-16.9029999999962, 2
-16.9019999999962, 2
-16.9009999999962, 2
-16.8999999999962, 2
-16.8989999999962, 2
-16.8979999999962, 2
-16.8969999999962, 2
-16.8959999999962, 2
-16.8949999999962, 2
-16.8939999999962, 2
-16.8929999999962, 2
-16.8919999999962, 2
-16.8909999999962, 2
-16.8899999999962, 2
-16.8889999999962, 2
-16.8879999999962, 2
-16.8869999999962, 2
-16.8859999999962, 2
-16.8849999999962, 2
-16.8839999999962, 2
-16.8829999999962, 2
-16.8819999999962, 2
-16.8809999999962, 2
-16.8799999999962, 2
-16.8789999999962, 2
-16.8779999999962, 2
-16.8769999999962, 2
-16.8759999999962, 2
-16.8749999999962, 2
-16.8739999999962, 2
-16.8729999999962, 2
-16.8719999999962, 2
-16.8709999999962, 2
-16.8699999999962, 2
-16.8689999999962, 2
-16.8679999999962, 2
-16.8669999999962, 2
-16.8659999999962, 2
-16.8649999999962, 2
-16.8639999999962, 2
-16.8629999999962, 2
-16.8619999999962, 2
-16.8609999999962, 2
-16.8599999999962, 2
-16.8589999999962, 2
-16.8579999999962, 2
-16.8569999999962, 2
-16.8559999999962, 2
-16.8549999999962, 2
-16.8539999999962, 2
-16.8529999999962, 2
-16.8519999999962, 2
-16.8509999999962, 2
-16.8499999999962, 2
-16.8489999999961, 2
-16.8479999999961, 2
-16.8469999999961, 2
-16.8459999999961, 2
-16.8449999999961, 2
-16.8439999999961, 2
-16.8429999999961, 2
-16.8419999999961, 2
-16.8409999999961, 2
-16.8399999999961, 2
-16.8389999999961, 2
-16.8379999999961, 2
-16.8369999999961, 2
-16.8359999999961, 2
-16.8349999999961, 2
-16.8339999999961, 2
-16.8329999999961, 2
-16.8319999999961, 2
-16.8309999999961, 2
-16.8299999999961, 2
-16.8289999999961, 2
-16.8279999999961, 2
-16.8269999999961, 2
-16.8259999999961, 2
-16.8249999999961, 2
-16.8239999999961, 2
-16.8229999999961, 2
-16.8219999999961, 2
-16.8209999999961, 2
-16.8199999999961, 2
-16.8189999999961, 2
-16.8179999999961, 2
-16.8169999999961, 2
-16.8159999999961, 2
-16.8149999999961, 2
-16.8139999999961, 2
-16.8129999999961, 2
-16.8119999999961, 2
-16.8109999999961, 2
-16.8099999999961, 2
-16.8089999999961, 2
-16.8079999999961, 2
-16.8069999999961, 2
-16.8059999999961, 2
-16.8049999999961, 2
-16.8039999999961, 2
-16.8029999999961, 2
-16.8019999999961, 2
-16.8009999999961, 2
-16.7999999999961, 2
-16.7989999999961, 2
-16.7979999999961, 2
-16.7969999999961, 2
-16.7959999999961, 2
-16.7949999999961, 2
-16.7939999999961, 2
-16.7929999999961, 2
-16.7919999999961, 2
-16.7909999999961, 2
-16.7899999999961, 2
-16.7889999999961, 2
-16.7879999999961, 2
-16.7869999999961, 2
-16.7859999999961, 2
-16.7849999999961, 2
-16.7839999999961, 2
-16.7829999999961, 2
-16.7819999999961, 2
-16.7809999999961, 2
-16.7799999999961, 2
-16.7789999999961, 2
-16.7779999999961, 2
-16.7769999999961, 2
-16.7759999999961, 2
-16.7749999999961, 2
-16.7739999999961, 2
-16.7729999999961, 2
-16.7719999999961, 2
-16.7709999999961, 2
-16.7699999999961, 2
-16.7689999999961, 2
-16.7679999999961, 2
-16.766999999996, 2
-16.765999999996, 2
-16.764999999996, 2
-16.763999999996, 2
-16.762999999996, 2
-16.761999999996, 2
-16.760999999996, 2
-16.759999999996, 2
-16.758999999996, 2
-16.757999999996, 2
-16.756999999996, 2
-16.755999999996, 2
-16.754999999996, 2
-16.753999999996, 2
-16.752999999996, 2
-16.751999999996, 2
-16.750999999996, 2
-16.749999999996, 2
-16.748999999996, 2
-16.747999999996, 2
-16.746999999996, 2
-16.745999999996, 2
-16.744999999996, 2
-16.743999999996, 2
-16.742999999996, 2
-16.741999999996, 2
-16.740999999996, 2
-16.739999999996, 2
-16.738999999996, 2
-16.737999999996, 2
-16.736999999996, 2
-16.735999999996, 2
-16.734999999996, 2
-16.733999999996, 2
-16.732999999996, 2
-16.731999999996, 2
-16.730999999996, 2
-16.729999999996, 2
-16.728999999996, 2
-16.727999999996, 2
-16.726999999996, 2
-16.725999999996, 2
-16.724999999996, 2
-16.723999999996, 2
-16.722999999996, 2
-16.721999999996, 2
-16.720999999996, 2
-16.719999999996, 2
-16.718999999996, 2
-16.717999999996, 2
-16.716999999996, 2
-16.715999999996, 2
-16.714999999996, 2
-16.713999999996, 2
-16.712999999996, 2
-16.711999999996, 2
-16.710999999996, 2
-16.709999999996, 2
-16.708999999996, 2
-16.707999999996, 2
-16.706999999996, 2
-16.705999999996, 2
-16.704999999996, 2
-16.703999999996, 2
-16.702999999996, 2
-16.701999999996, 2
-16.700999999996, 2
-16.699999999996, 2
-16.698999999996, 2
-16.697999999996, 2
-16.696999999996, 2
-16.695999999996, 2
-16.694999999996, 2
-16.693999999996, 2
-16.692999999996, 2
-16.691999999996, 2
-16.690999999996, 2
-16.689999999996, 2
-16.688999999996, 2
-16.687999999996, 2
-16.686999999996, 2
-16.685999999996, 2
-16.6849999999959, 2
-16.6839999999959, 2
-16.6829999999959, 2
-16.6819999999959, 2
-16.6809999999959, 2
-16.6799999999959, 2
-16.6789999999959, 2
-16.6779999999959, 2
-16.6769999999959, 2
-16.6759999999959, 2
-16.6749999999959, 2
-16.6739999999959, 2
-16.6729999999959, 2
-16.6719999999959, 2
-16.6709999999959, 2
-16.6699999999959, 2
-16.6689999999959, 2
-16.6679999999959, 2
-16.6669999999959, 2
-16.6659999999959, 2
-16.6649999999959, 2
-16.6639999999959, 2
-16.6629999999959, 2
-16.6619999999959, 2
-16.6609999999959, 2
-16.6599999999959, 2
-16.6589999999959, 2
-16.6579999999959, 2
-16.6569999999959, 2
-16.6559999999959, 2
-16.6549999999959, 2
-16.6539999999959, 2
-16.6529999999959, 2
-16.6519999999959, 2
-16.6509999999959, 2
-16.6499999999959, 2
-16.6489999999959, 2
-16.6479999999959, 2
-16.6469999999959, 2
-16.6459999999959, 2
-16.6449999999959, 2
-16.6439999999959, 2
-16.6429999999959, 2
-16.6419999999959, 2
-16.6409999999959, 2
-16.6399999999959, 2
-16.6389999999959, 2
-16.6379999999959, 2
-16.6369999999959, 2
-16.6359999999959, 2
-16.6349999999959, 2
-16.6339999999959, 2
-16.6329999999959, 2
-16.6319999999959, 2
-16.6309999999959, 2
-16.6299999999959, 2
-16.6289999999959, 2
-16.6279999999959, 2
-16.6269999999959, 2
-16.6259999999959, 2
-16.6249999999959, 2
-16.6239999999959, 2
-16.6229999999959, 2
-16.6219999999959, 2
-16.6209999999959, 2
-16.6199999999959, 2
-16.6189999999959, 2
-16.6179999999959, 2
-16.6169999999959, 2
-16.6159999999959, 2
-16.6149999999959, 2
-16.6139999999959, 2
-16.6129999999959, 2
-16.6119999999959, 2
-16.6109999999959, 2
-16.6099999999959, 2
-16.6089999999959, 2
-16.6079999999959, 2
-16.6069999999959, 2
-16.6059999999959, 2
-16.6049999999959, 2
-16.6039999999959, 2
-16.6029999999958, 2
-16.6019999999958, 2
-16.6009999999958, 2
-16.5999999999958, 2
-16.5989999999958, 2
-16.5979999999958, 2
-16.5969999999958, 2
-16.5959999999958, 2
-16.5949999999958, 2
-16.5939999999958, 2
-16.5929999999958, 2
-16.5919999999958, 2
-16.5909999999958, 2
-16.5899999999958, 2
-16.5889999999958, 2
-16.5879999999958, 2
-16.5869999999958, 2
-16.5859999999958, 2
-16.5849999999958, 2
-16.5839999999958, 2
-16.5829999999958, 2
-16.5819999999958, 2
-16.5809999999958, 2
-16.5799999999958, 2
-16.5789999999958, 2
-16.5779999999958, 2
-16.5769999999958, 2
-16.5759999999958, 2
-16.5749999999958, 2
-16.5739999999958, 2
-16.5729999999958, 2
-16.5719999999958, 2
-16.5709999999958, 2
-16.5699999999958, 2
-16.5689999999958, 2
-16.5679999999958, 2
-16.5669999999958, 2
-16.5659999999958, 2
-16.5649999999958, 2
-16.5639999999958, 2
-16.5629999999958, 2
-16.5619999999958, 2
-16.5609999999958, 2
-16.5599999999958, 2
-16.5589999999958, 2
-16.5579999999958, 2
-16.5569999999958, 2
-16.5559999999958, 2
-16.5549999999958, 2
-16.5539999999958, 2
-16.5529999999958, 2
-16.5519999999958, 2
-16.5509999999958, 2
-16.5499999999958, 2
-16.5489999999958, 2
-16.5479999999958, 2
-16.5469999999958, 2
-16.5459999999958, 2
-16.5449999999958, 2
-16.5439999999958, 2
-16.5429999999958, 2
-16.5419999999958, 2
-16.5409999999958, 2
-16.5399999999958, 2
-16.5389999999958, 2
-16.5379999999958, 2
-16.5369999999958, 2
-16.5359999999958, 2
-16.5349999999958, 2
-16.5339999999958, 2
-16.5329999999958, 2
-16.5319999999958, 2
-16.5309999999958, 2
-16.5299999999958, 2
-16.5289999999958, 2
-16.5279999999958, 2
-16.5269999999958, 2
-16.5259999999958, 2
-16.5249999999958, 2
-16.5239999999958, 2
-16.5229999999958, 2
-16.5219999999957, 2
-16.5209999999957, 2
-16.5199999999957, 2
-16.5189999999957, 2
-16.5179999999957, 2
-16.5169999999957, 2
-16.5159999999957, 2
-16.5149999999957, 2
-16.5139999999957, 2
-16.5129999999957, 2
-16.5119999999957, 2
-16.5109999999957, 2
-16.5099999999957, 2
-16.5089999999957, 2
-16.5079999999957, 2
-16.5069999999957, 2
-16.5059999999957, 2
-16.5049999999957, 2
-16.5039999999957, 2
-16.5029999999957, 2
-16.5019999999957, 2
-16.5009999999957, 2
-16.4999999999957, 2
-16.4989999999957, 2
-16.4979999999957, 2
-16.4969999999957, 2
-16.4959999999957, 2
-16.4949999999957, 2
-16.4939999999957, 2
-16.4929999999957, 2
-16.4919999999957, 2
-16.4909999999957, 2
-16.4899999999957, 2
-16.4889999999957, 2
-16.4879999999957, 2
-16.4869999999957, 2
-16.4859999999957, 2
-16.4849999999957, 2
-16.4839999999957, 2
-16.4829999999957, 2
-16.4819999999957, 2
-16.4809999999957, 2
-16.4799999999957, 2
-16.4789999999957, 2
-16.4779999999957, 2
-16.4769999999957, 2
-16.4759999999957, 2
-16.4749999999957, 2
-16.4739999999957, 2
-16.4729999999957, 2
-16.4719999999957, 2
-16.4709999999957, 2
-16.4699999999957, 2
-16.4689999999957, 2
-16.4679999999957, 2
-16.4669999999957, 2
-16.4659999999957, 2
-16.4649999999957, 2
-16.4639999999957, 2
-16.4629999999957, 2
-16.4619999999957, 2
-16.4609999999957, 2
-16.4599999999957, 2
-16.4589999999957, 2
-16.4579999999957, 2
-16.4569999999957, 2
-16.4559999999957, 2
-16.4549999999957, 2
-16.4539999999957, 2
-16.4529999999957, 2
-16.4519999999957, 2
-16.4509999999957, 2
-16.4499999999957, 2
-16.4489999999957, 2
-16.4479999999957, 2
-16.4469999999957, 2
-16.4459999999957, 2
-16.4449999999957, 2
-16.4439999999957, 2
-16.4429999999957, 2
-16.4419999999957, 2
-16.4409999999957, 2
-16.4399999999956, 2
-16.4389999999956, 2
-16.4379999999956, 2
-16.4369999999956, 2
-16.4359999999956, 2
-16.4349999999956, 2
-16.4339999999956, 2
-16.4329999999956, 2
-16.4319999999956, 2
-16.4309999999956, 2
-16.4299999999956, 2
-16.4289999999956, 2
-16.4279999999956, 2
-16.4269999999956, 2
-16.4259999999956, 2
-16.4249999999956, 2
-16.4239999999956, 2
-16.4229999999956, 2
-16.4219999999956, 2
-16.4209999999956, 2
-16.4199999999956, 2
-16.4189999999956, 2
-16.4179999999956, 2
-16.4169999999956, 2
-16.4159999999956, 2
-16.4149999999956, 2
-16.4139999999956, 2
-16.4129999999956, 2
-16.4119999999956, 2
-16.4109999999956, 2
-16.4099999999956, 2
-16.4089999999956, 2
-16.4079999999956, 2
-16.4069999999956, 2
-16.4059999999956, 2
-16.4049999999956, 2
-16.4039999999956, 2
-16.4029999999956, 2
-16.4019999999956, 2
-16.4009999999956, 2
-16.3999999999956, 2
-16.3989999999956, 2
-16.3979999999956, 2
-16.3969999999956, 2
-16.3959999999956, 2
-16.3949999999956, 2
-16.3939999999956, 2
-16.3929999999956, 2
-16.3919999999956, 2
-16.3909999999956, 2
-16.3899999999956, 2
-16.3889999999956, 2
-16.3879999999956, 2
-16.3869999999956, 2
-16.3859999999956, 2
-16.3849999999956, 2
-16.3839999999956, 2
-16.3829999999956, 2
-16.3819999999956, 2
-16.3809999999956, 2
-16.3799999999956, 2
-16.3789999999956, 2
-16.3779999999956, 2
-16.3769999999956, 2
-16.3759999999956, 2
-16.3749999999956, 2
-16.3739999999956, 2
-16.3729999999956, 2
-16.3719999999956, 2
-16.3709999999956, 2
-16.3699999999956, 2
-16.3689999999956, 2
-16.3679999999956, 2
-16.3669999999956, 2
-16.3659999999956, 2
-16.3649999999956, 2
-16.3639999999956, 2
-16.3629999999956, 2
-16.3619999999956, 2
-16.3609999999956, 2
-16.3599999999956, 2
-16.3589999999956, 2
-16.3579999999955, 2
-16.3569999999955, 2
-16.3559999999955, 2
-16.3549999999955, 2
-16.3539999999955, 2
-16.3529999999955, 2
-16.3519999999955, 2
-16.3509999999955, 2
-16.3499999999955, 2
-16.3489999999955, 2
-16.3479999999955, 2
-16.3469999999955, 2
-16.3459999999955, 2
-16.3449999999955, 2
-16.3439999999955, 2
-16.3429999999955, 2
-16.3419999999955, 2
-16.3409999999955, 2
-16.3399999999955, 2
-16.3389999999955, 2
-16.3379999999955, 2
-16.3369999999955, 2
-16.3359999999955, 2
-16.3349999999955, 2
-16.3339999999955, 2
-16.3329999999955, 2
-16.3319999999955, 2
-16.3309999999955, 2
-16.3299999999955, 2
-16.3289999999955, 2
-16.3279999999955, 2
-16.3269999999955, 2
-16.3259999999955, 2
-16.3249999999955, 2
-16.3239999999955, 2
-16.3229999999955, 2
-16.3219999999955, 2
-16.3209999999955, 2
-16.3199999999955, 2
-16.3189999999955, 2
-16.3179999999955, 2
-16.3169999999955, 2
-16.3159999999955, 2
-16.3149999999955, 2
-16.3139999999955, 2
-16.3129999999955, 2
-16.3119999999955, 2
-16.3109999999955, 2
-16.3099999999955, 2
-16.3089999999955, 2
-16.3079999999955, 2
-16.3069999999955, 2
-16.3059999999955, 2
-16.3049999999955, 2
-16.3039999999955, 2
-16.3029999999955, 2
-16.3019999999955, 2
-16.3009999999955, 2
-16.2999999999955, 2
-16.2989999999955, 2
-16.2979999999955, 2
-16.2969999999955, 2
-16.2959999999955, 2
-16.2949999999955, 2
-16.2939999999955, 2
-16.2929999999955, 2
-16.2919999999955, 2
-16.2909999999955, 2
-16.2899999999955, 2
-16.2889999999955, 2
-16.2879999999955, 2
-16.2869999999955, 2
-16.2859999999955, 2
-16.2849999999955, 2
-16.2839999999955, 2
-16.2829999999955, 2
-16.2819999999955, 2
-16.2809999999955, 2
-16.2799999999955, 2
-16.2789999999955, 2
-16.2779999999955, 2
-16.2769999999955, 2
-16.2759999999954, 2
-16.2749999999954, 2
-16.2739999999954, 2
-16.2729999999954, 2
-16.2719999999954, 2
-16.2709999999954, 2
-16.2699999999954, 2
-16.2689999999954, 2
-16.2679999999954, 2
-16.2669999999954, 2
-16.2659999999954, 2
-16.2649999999954, 2
-16.2639999999954, 2
-16.2629999999954, 2
-16.2619999999954, 2
-16.2609999999954, 2
-16.2599999999954, 2
-16.2589999999954, 2
-16.2579999999954, 2
-16.2569999999954, 2
-16.2559999999954, 2
-16.2549999999954, 2
-16.2539999999954, 2
-16.2529999999954, 2
-16.2519999999954, 2
-16.2509999999954, 2
-16.2499999999954, 2
-16.2489999999954, 2
-16.2479999999954, 2
-16.2469999999954, 2
-16.2459999999954, 2
-16.2449999999954, 2
-16.2439999999954, 2
-16.2429999999954, 2
-16.2419999999954, 2
-16.2409999999954, 2
-16.2399999999954, 2
-16.2389999999954, 2
-16.2379999999954, 2
-16.2369999999954, 2
-16.2359999999954, 2
-16.2349999999954, 2
-16.2339999999954, 2
-16.2329999999954, 2
-16.2319999999954, 2
-16.2309999999954, 2
-16.2299999999954, 2
-16.2289999999954, 2
-16.2279999999954, 2
-16.2269999999954, 2
-16.2259999999954, 2
-16.2249999999954, 2
-16.2239999999954, 2
-16.2229999999954, 2
-16.2219999999954, 2
-16.2209999999954, 2
-16.2199999999954, 2
-16.2189999999954, 2
-16.2179999999954, 2
-16.2169999999954, 2
-16.2159999999954, 2
-16.2149999999954, 2
-16.2139999999954, 2
-16.2129999999954, 2
-16.2119999999954, 2
-16.2109999999954, 2
-16.2099999999954, 2
-16.2089999999954, 2
-16.2079999999954, 2
-16.2069999999954, 2
-16.2059999999954, 2
-16.2049999999954, 2
-16.2039999999954, 2
-16.2029999999954, 2
-16.2019999999954, 2
-16.2009999999954, 2
-16.1999999999954, 2
-16.1989999999954, 2
-16.1979999999954, 2
-16.1969999999954, 2
-16.1959999999954, 2
-16.1949999999954, 2
-16.1939999999953, 2
-16.1929999999953, 2
-16.1919999999953, 2
-16.1909999999953, 2
-16.1899999999953, 2
-16.1889999999953, 2
-16.1879999999953, 2
-16.1869999999953, 2
-16.1859999999953, 2
-16.1849999999953, 2
-16.1839999999953, 2
-16.1829999999953, 2
-16.1819999999953, 2
-16.1809999999953, 2
-16.1799999999953, 2
-16.1789999999953, 2
-16.1779999999953, 2
-16.1769999999953, 2
-16.1759999999953, 2
-16.1749999999953, 2
-16.1739999999953, 2
-16.1729999999953, 2
-16.1719999999953, 2
-16.1709999999953, 2
-16.1699999999953, 2
-16.1689999999953, 2
-16.1679999999953, 2
-16.1669999999953, 2
-16.1659999999953, 2
-16.1649999999953, 2
-16.1639999999953, 2
-16.1629999999953, 2
-16.1619999999953, 2
-16.1609999999953, 2
-16.1599999999953, 2
-16.1589999999953, 2
-16.1579999999953, 2
-16.1569999999953, 2
-16.1559999999953, 2
-16.1549999999953, 2
-16.1539999999953, 2
-16.1529999999953, 2
-16.1519999999953, 2
-16.1509999999953, 2
-16.1499999999953, 2
-16.1489999999953, 2
-16.1479999999953, 2
-16.1469999999953, 2
-16.1459999999953, 2
-16.1449999999953, 2
-16.1439999999953, 2
-16.1429999999953, 2
-16.1419999999953, 2
-16.1409999999953, 2
-16.1399999999953, 2
-16.1389999999953, 2
-16.1379999999953, 2
-16.1369999999953, 2
-16.1359999999953, 2
-16.1349999999953, 2
-16.1339999999953, 2
-16.1329999999953, 2
-16.1319999999953, 2
-16.1309999999953, 2
-16.1299999999953, 2
-16.1289999999953, 2
-16.1279999999953, 2
-16.1269999999953, 2
-16.1259999999953, 2
-16.1249999999953, 2
-16.1239999999953, 2
-16.1229999999953, 2
-16.1219999999953, 2
-16.1209999999953, 2
-16.1199999999953, 2
-16.1189999999953, 2
-16.1179999999953, 2
-16.1169999999953, 2
-16.1159999999953, 2
-16.1149999999953, 2
-16.1139999999953, 2
-16.1129999999953, 2
-16.1119999999952, 2
-16.1109999999952, 2
-16.1099999999952, 2
-16.1089999999952, 2
-16.1079999999952, 2
-16.1069999999952, 2
-16.1059999999952, 2
-16.1049999999952, 2
-16.1039999999952, 2
-16.1029999999952, 2
-16.1019999999952, 2
-16.1009999999952, 2
-16.0999999999952, 2
-16.0989999999952, 2
-16.0979999999952, 2
-16.0969999999952, 2
-16.0959999999952, 2
-16.0949999999952, 2
-16.0939999999952, 2
-16.0929999999952, 2
-16.0919999999952, 2
-16.0909999999952, 2
-16.0899999999952, 2
-16.0889999999952, 2
-16.0879999999952, 2
-16.0869999999952, 2
-16.0859999999952, 2
-16.0849999999952, 2
-16.0839999999952, 2
-16.0829999999952, 2
-16.0819999999952, 2
-16.0809999999952, 2
-16.0799999999952, 2
-16.0789999999952, 2
-16.0779999999952, 2
-16.0769999999952, 2
-16.0759999999952, 2
-16.0749999999952, 2
-16.0739999999952, 2
-16.0729999999952, 2
-16.0719999999952, 2
-16.0709999999952, 2
-16.0699999999952, 2
-16.0689999999952, 2
-16.0679999999952, 2
-16.0669999999952, 2
-16.0659999999952, 2
-16.0649999999952, 2
-16.0639999999952, 2
-16.0629999999952, 2
-16.0619999999952, 2
-16.0609999999952, 2
-16.0599999999952, 2
-16.0589999999952, 2
-16.0579999999952, 2
-16.0569999999952, 2
-16.0559999999952, 2
-16.0549999999952, 2
-16.0539999999952, 2
-16.0529999999952, 2
-16.0519999999952, 2
-16.0509999999952, 2
-16.0499999999952, 2
-16.0489999999952, 2
-16.0479999999952, 2
-16.0469999999952, 2
-16.0459999999952, 2
-16.0449999999952, 2
-16.0439999999952, 2
-16.0429999999952, 2
-16.0419999999952, 2
-16.0409999999952, 2
-16.0399999999952, 2
-16.0389999999952, 2
-16.0379999999952, 2
-16.0369999999952, 2
-16.0359999999952, 2
-16.0349999999952, 2
-16.0339999999952, 2
-16.0329999999952, 2
-16.0319999999952, 2
-16.0309999999951, 2
-16.0299999999951, 2
-16.0289999999951, 2
-16.0279999999951, 2
-16.0269999999951, 2
-16.0259999999951, 2
-16.0249999999951, 2
-16.0239999999951, 2
-16.0229999999951, 2
-16.0219999999951, 2
-16.0209999999951, 2
-16.0199999999951, 2
-16.0189999999951, 2
-16.0179999999951, 2
-16.0169999999951, 2
-16.0159999999951, 2
-16.0149999999951, 2
-16.0139999999951, 2
-16.0129999999951, 2
-16.0119999999951, 2
-16.0109999999951, 2
-16.0099999999951, 2
-16.0089999999951, 2
-16.0079999999951, 2
-16.0069999999951, 2
-16.0059999999951, 2
-16.0049999999951, 2
-16.0039999999951, 2
-16.0029999999951, 2
-16.0019999999951, 2
-16.0009999999951, 2
-15.9999999999951, 2
-15.9989999999951, 2
-15.9979999999951, 2
-15.9969999999951, 2
-15.9959999999951, 2
-15.9949999999951, 2
-15.9939999999951, 2
-15.9929999999951, 2
-15.9919999999951, 2
-15.9909999999951, 2
-15.9899999999951, 2
-15.9889999999951, 2
-15.9879999999951, 2
-15.9869999999951, 2
-15.9859999999951, 2
-15.9849999999951, 2
-15.9839999999951, 2
-15.9829999999951, 2
-15.9819999999951, 2
-15.9809999999951, 2
-15.9799999999951, 2
-15.9789999999951, 2
-15.9779999999951, 2
-15.9769999999951, 2
-15.9759999999951, 2
-15.9749999999951, 2
-15.9739999999951, 2
-15.9729999999951, 2
-15.9719999999951, 2
-15.9709999999951, 2
-15.9699999999951, 2
-15.9689999999951, 2
-15.9679999999951, 2
-15.9669999999951, 2
-15.9659999999951, 2
-15.9649999999951, 2
-15.9639999999951, 2
-15.9629999999951, 2
-15.9619999999951, 2
-15.9609999999951, 2
-15.9599999999951, 2
-15.9589999999951, 2
-15.9579999999951, 2
-15.9569999999951, 2
-15.9559999999951, 2
-15.9549999999951, 2
-15.9539999999951, 2
-15.9529999999951, 2
-15.9519999999951, 2
-15.9509999999951, 2
-15.9499999999951, 2
-15.9489999999951, 2
-15.9479999999951, 2
-15.9469999999951, 2
-15.9459999999951, 2
-15.9449999999951, 2
-15.9439999999951, 2
-15.9429999999951, 2
-15.9419999999951, 2
-15.9409999999951, 2
-15.9399999999951, 2
-15.9389999999951, 2
-15.9379999999951, 2
-15.9369999999951, 2
-15.9359999999951, 2
-15.9349999999951, 2
-15.9339999999952, 2
-15.9329999999952, 2
-15.9319999999952, 2
-15.9309999999952, 2
-15.9299999999952, 2
-15.9289999999952, 2
-15.9279999999952, 2
-15.9269999999952, 2
-15.9259999999952, 2
-15.9249999999952, 2
-15.9239999999952, 2
-15.9229999999952, 2
-15.9219999999952, 2
-15.9209999999952, 2
-15.9199999999952, 2
-15.9189999999952, 2
-15.9179999999952, 2
-15.9169999999952, 2
-15.9159999999952, 2
-15.9149999999952, 2
-15.9139999999952, 2
-15.9129999999952, 2
-15.9119999999952, 2
-15.9109999999952, 2
-15.9099999999952, 2
-15.9089999999952, 2
-15.9079999999952, 2
-15.9069999999952, 2
-15.9059999999952, 2
-15.9049999999952, 2
-15.9039999999952, 2
-15.9029999999952, 2
-15.9019999999952, 2
-15.9009999999952, 2
-15.8999999999952, 2
-15.8989999999952, 2
-15.8979999999952, 2
-15.8969999999952, 2
-15.8959999999952, 2
-15.8949999999952, 2
-15.8939999999952, 2
-15.8929999999952, 2
-15.8919999999952, 2
-15.8909999999952, 2
-15.8899999999952, 2
-15.8889999999952, 2
-15.8879999999952, 2
-15.8869999999952, 2
-15.8859999999952, 2
-15.8849999999952, 2
-15.8839999999952, 2
-15.8829999999952, 2
-15.8819999999952, 2
-15.8809999999952, 2
-15.8799999999952, 2
-15.8789999999952, 2
-15.8779999999952, 2
-15.8769999999952, 2
-15.8759999999952, 2
-15.8749999999952, 2
-15.8739999999952, 2
-15.8729999999952, 2
-15.8719999999952, 2
-15.8709999999952, 2
-15.8699999999952, 2
-15.8689999999952, 2
-15.8679999999952, 2
-15.8669999999952, 2
-15.8659999999952, 2
-15.8649999999952, 2
-15.8639999999952, 2
-15.8629999999952, 2
-15.8619999999952, 2
-15.8609999999952, 2
-15.8599999999952, 2
-15.8589999999952, 2
-15.8579999999952, 2
-15.8569999999952, 2
-15.8559999999952, 2
-15.8549999999952, 2
-15.8539999999952, 2
-15.8529999999952, 2
-15.8519999999952, 2
-15.8509999999952, 2
-15.8499999999952, 2
-15.8489999999952, 2
-15.8479999999952, 2
-15.8469999999952, 2
-15.8459999999952, 2
-15.8449999999952, 2
-15.8439999999952, 2
-15.8429999999952, 2
-15.8419999999952, 2
-15.8409999999952, 2
-15.8399999999952, 2
-15.8389999999952, 2
-15.8379999999952, 2
-15.8369999999952, 2
-15.8359999999952, 2
-15.8349999999952, 2
-15.8339999999952, 2
-15.8329999999952, 2
-15.8319999999952, 2
-15.8309999999952, 2
-15.8299999999952, 2
-15.8289999999952, 2
-15.8279999999952, 2
-15.8269999999952, 2
-15.8259999999952, 2
-15.8249999999952, 2
-15.8239999999952, 2
-15.8229999999952, 2
-15.8219999999952, 2
-15.8209999999952, 2
-15.8199999999952, 2
-15.8189999999952, 2
-15.8179999999952, 2
-15.8169999999952, 2
-15.8159999999952, 2
-15.8149999999952, 2
-15.8139999999952, 2
-15.8129999999952, 2
-15.8119999999952, 2
-15.8109999999952, 2
-15.8099999999952, 2
-15.8089999999952, 2
-15.8079999999952, 2
-15.8069999999952, 2
-15.8059999999952, 2
-15.8049999999952, 2
-15.8039999999952, 2
-15.8029999999952, 2
-15.8019999999952, 2
-15.8009999999952, 2
-15.7999999999952, 2
-15.7989999999952, 2
-15.7979999999952, 2
-15.7969999999952, 2
-15.7959999999952, 2
-15.7949999999952, 2
-15.7939999999952, 2
-15.7929999999952, 2
-15.7919999999952, 2
-15.7909999999952, 2
-15.7899999999952, 2
-15.7889999999952, 2
-15.7879999999952, 2
-15.7869999999952, 2
-15.7859999999952, 2
-15.7849999999952, 2
-15.7839999999952, 2
-15.7829999999952, 2
-15.7819999999952, 2
-15.7809999999952, 2
-15.7799999999952, 2
-15.7789999999952, 2
-15.7779999999952, 2
-15.7769999999952, 2
-15.7759999999952, 2
-15.7749999999952, 2
-15.7739999999952, 2
-15.7729999999952, 2
-15.7719999999952, 2
-15.7709999999952, 2
-15.7699999999952, 2
-15.7689999999952, 2
-15.7679999999952, 2
-15.7669999999952, 2
-15.7659999999952, 2
-15.7649999999952, 2
-15.7639999999952, 2
-15.7629999999952, 2
-15.7619999999952, 2
-15.7609999999952, 2
-15.7599999999952, 2
-15.7589999999952, 2
-15.7579999999952, 2
-15.7569999999952, 2
-15.7559999999952, 2
-15.7549999999952, 2
-15.7539999999953, 2
-15.7529999999953, 2
-15.7519999999953, 2
-15.7509999999953, 2
-15.7499999999953, 2
-15.7489999999953, 2
-15.7479999999953, 2
-15.7469999999953, 2
-15.7459999999953, 2
-15.7449999999953, 2
-15.7439999999953, 2
-15.7429999999953, 2
-15.7419999999953, 2
-15.7409999999953, 2
-15.7399999999953, 2
-15.7389999999953, 2
-15.7379999999953, 2
-15.7369999999953, 2
-15.7359999999953, 2
-15.7349999999953, 2
-15.7339999999953, 2
-15.7329999999953, 2
-15.7319999999953, 2
-15.7309999999953, 2
-15.7299999999953, 2
-15.7289999999953, 2
-15.7279999999953, 2
-15.7269999999953, 2
-15.7259999999953, 2
-15.7249999999953, 2
-15.7239999999953, 2
-15.7229999999953, 2
-15.7219999999953, 2
-15.7209999999953, 2
-15.7199999999953, 2
-15.7189999999953, 2
-15.7179999999953, 2
-15.7169999999953, 2
-15.7159999999953, 2
-15.7149999999953, 2
-15.7139999999953, 2
-15.7129999999953, 2
-15.7119999999953, 2
-15.7109999999953, 2
-15.7099999999953, 2
-15.7089999999953, 2
-15.7079999999953, 2
-15.7069999999953, 2
-15.7059999999953, 2
-15.7049999999953, 2
-15.7039999999953, 2
-15.7029999999953, 2
-15.7019999999953, 2
-15.7009999999953, 2
-15.6999999999953, 2
-15.6989999999953, 2
-15.6979999999953, 2
-15.6969999999953, 2
-15.6959999999953, 2
-15.6949999999953, 2
-15.6939999999953, 2
-15.6929999999953, 2
-15.6919999999953, 2
-15.6909999999953, 2
-15.6899999999953, 2
-15.6889999999953, 2
-15.6879999999953, 2
-15.6869999999953, 2
-15.6859999999953, 2
-15.6849999999953, 2
-15.6839999999953, 2
-15.6829999999953, 2
-15.6819999999953, 2
-15.6809999999953, 2
-15.6799999999953, 2
-15.6789999999953, 2
-15.6779999999953, 2
-15.6769999999953, 2
-15.6759999999953, 2
-15.6749999999953, 2
-15.6739999999953, 2
-15.6729999999953, 2
-15.6719999999953, 2
-15.6709999999953, 2
-15.6699999999953, 2
-15.6689999999953, 2
-15.6679999999953, 2
-15.6669999999953, 2
-15.6659999999953, 2
-15.6649999999953, 2
-15.6639999999953, 2
-15.6629999999953, 2
-15.6619999999953, 2
-15.6609999999953, 2
-15.6599999999953, 2
-15.6589999999953, 2
-15.6579999999953, 2
-15.6569999999953, 2
-15.6559999999953, 2
-15.6549999999953, 2
-15.6539999999953, 2
-15.6529999999953, 2
-15.6519999999953, 2
-15.6509999999953, 2
-15.6499999999953, 2
-15.6489999999953, 2
-15.6479999999953, 2
-15.6469999999953, 2
-15.6459999999953, 2
-15.6449999999953, 2
-15.6439999999953, 2
-15.6429999999953, 2
-15.6419999999953, 2
-15.6409999999953, 2
-15.6399999999953, 2
-15.6389999999953, 2
-15.6379999999953, 2
-15.6369999999953, 2
-15.6359999999953, 2
-15.6349999999953, 2
-15.6339999999953, 2
-15.6329999999953, 2
-15.6319999999953, 2
-15.6309999999953, 2
-15.6299999999953, 2
-15.6289999999953, 2
-15.6279999999953, 2
-15.6269999999953, 2
-15.6259999999953, 2
-15.6249999999953, 2
-15.6239999999953, 2
-15.6229999999953, 2
-15.6219999999953, 2
-15.6209999999953, 2
-15.6199999999953, 2
-15.6189999999953, 2
-15.6179999999953, 2
-15.6169999999953, 2
-15.6159999999953, 2
-15.6149999999953, 2
-15.6139999999953, 2
-15.6129999999953, 2
-15.6119999999953, 2
-15.6109999999953, 2
-15.6099999999953, 2
-15.6089999999953, 2
-15.6079999999953, 2
-15.6069999999953, 2
-15.6059999999953, 2
-15.6049999999953, 2
-15.6039999999953, 2
-15.6029999999953, 2
-15.6019999999953, 2
-15.6009999999953, 2
-15.5999999999953, 2
-15.5989999999953, 2
-15.5979999999953, 2
-15.5969999999953, 2
-15.5959999999953, 2
-15.5949999999953, 2
-15.5939999999953, 2
-15.5929999999953, 2
-15.5919999999953, 2
-15.5909999999953, 2
-15.5899999999953, 2
-15.5889999999953, 2
-15.5879999999953, 2
-15.5869999999953, 2
-15.5859999999953, 2
-15.5849999999953, 2
-15.5839999999953, 2
-15.5829999999953, 2
-15.5819999999953, 2
-15.5809999999953, 2
-15.5799999999953, 2
-15.5789999999953, 2
-15.5779999999953, 2
-15.5769999999953, 2
-15.5759999999953, 2
-15.5749999999953, 2
-15.5739999999953, 2
-15.5729999999954, 2
-15.5719999999954, 2
-15.5709999999954, 2
-15.5699999999954, 2
-15.5689999999954, 2
-15.5679999999954, 2
-15.5669999999954, 2
-15.5659999999954, 2
-15.5649999999954, 2
-15.5639999999954, 2
-15.5629999999954, 2
-15.5619999999954, 2
-15.5609999999954, 2
-15.5599999999954, 2
-15.5589999999954, 2
-15.5579999999954, 2
-15.5569999999954, 2
-15.5559999999954, 2
-15.5549999999954, 2
-15.5539999999954, 2
-15.5529999999954, 2
-15.5519999999954, 2
-15.5509999999954, 2
-15.5499999999954, 2
-15.5489999999954, 2
-15.5479999999954, 2
-15.5469999999954, 2
-15.5459999999954, 2
-15.5449999999954, 2
-15.5439999999954, 2
-15.5429999999954, 2
-15.5419999999954, 2
-15.5409999999954, 2
-15.5399999999954, 2
-15.5389999999954, 2
-15.5379999999954, 2
-15.5369999999954, 2
-15.5359999999954, 2
-15.5349999999954, 2
-15.5339999999954, 2
-15.5329999999954, 2
-15.5319999999954, 2
-15.5309999999954, 2
-15.5299999999954, 2
-15.5289999999954, 2
-15.5279999999954, 2
-15.5269999999954, 2
-15.5259999999954, 2
-15.5249999999954, 2
-15.5239999999954, 2
-15.5229999999954, 2
-15.5219999999954, 2
-15.5209999999954, 2
-15.5199999999954, 2
-15.5189999999954, 2
-15.5179999999954, 2
-15.5169999999954, 2
-15.5159999999954, 2
-15.5149999999954, 2
-15.5139999999954, 2
-15.5129999999954, 2
-15.5119999999954, 2
-15.5109999999954, 2
-15.5099999999954, 2
-15.5089999999954, 2
-15.5079999999954, 2
-15.5069999999954, 2
-15.5059999999954, 2
-15.5049999999954, 2
-15.5039999999954, 2
-15.5029999999954, 2
-15.5019999999954, 2
-15.5009999999954, 2
-15.4999999999954, 2
-15.4989999999954, 2
-15.4979999999954, 2
-15.4969999999954, 2
-15.4959999999954, 2
-15.4949999999954, 2
-15.4939999999954, 2
-15.4929999999954, 2
-15.4919999999954, 2
-15.4909999999954, 2
-15.4899999999954, 2
-15.4889999999954, 2
-15.4879999999954, 2
-15.4869999999954, 2
-15.4859999999954, 2
-15.4849999999954, 2
-15.4839999999954, 2
-15.4829999999954, 2
-15.4819999999954, 2
-15.4809999999954, 2
-15.4799999999954, 2
-15.4789999999954, 2
-15.4779999999954, 2
-15.4769999999954, 2
-15.4759999999954, 2
-15.4749999999954, 2
-15.4739999999954, 2
-15.4729999999954, 2
-15.4719999999954, 2
-15.4709999999954, 2
-15.4699999999954, 2
-15.4689999999954, 2
-15.4679999999954, 2
-15.4669999999954, 2
-15.4659999999954, 2
-15.4649999999954, 2
-15.4639999999954, 2
-15.4629999999954, 2
-15.4619999999954, 2
-15.4609999999954, 2
-15.4599999999954, 2
-15.4589999999954, 2
-15.4579999999954, 2
-15.4569999999954, 2
-15.4559999999954, 2
-15.4549999999954, 2
-15.4539999999954, 2
-15.4529999999954, 2
-15.4519999999954, 2
-15.4509999999954, 2
-15.4499999999954, 2
-15.4489999999954, 2
-15.4479999999954, 2
-15.4469999999954, 2
-15.4459999999954, 2
-15.4449999999954, 2
-15.4439999999954, 2
-15.4429999999954, 2
-15.4419999999954, 2
-15.4409999999954, 2
-15.4399999999954, 2
-15.4389999999954, 2
-15.4379999999954, 2
-15.4369999999954, 2
-15.4359999999954, 2
-15.4349999999954, 2
-15.4339999999954, 2
-15.4329999999954, 2
-15.4319999999954, 2
-15.4309999999954, 2
-15.4299999999954, 2
-15.4289999999954, 2
-15.4279999999954, 2
-15.4269999999954, 2
-15.4259999999954, 2
-15.4249999999954, 2
-15.4239999999954, 2
-15.4229999999954, 2
-15.4219999999954, 2
-15.4209999999954, 2
-15.4199999999954, 2
-15.4189999999954, 2
-15.4179999999954, 2
-15.4169999999954, 2
-15.4159999999954, 2
-15.4149999999954, 2
-15.4139999999954, 2
-15.4129999999954, 2
-15.4119999999954, 2
-15.4109999999954, 2
-15.4099999999954, 2
-15.4089999999954, 2
-15.4079999999954, 2
-15.4069999999954, 2
-15.4059999999954, 2
-15.4049999999954, 2
-15.4039999999954, 2
-15.4029999999954, 2
-15.4019999999954, 2
-15.4009999999954, 2
-15.3999999999954, 2
-15.3989999999954, 2
-15.3979999999954, 2
-15.3969999999954, 2
-15.3959999999954, 2
-15.3949999999954, 2
-15.3939999999954, 2
-15.3929999999955, 2
-15.3919999999955, 2
-15.3909999999955, 2
-15.3899999999955, 2
-15.3889999999955, 2
-15.3879999999955, 2
-15.3869999999955, 2
-15.3859999999955, 2
-15.3849999999955, 2
-15.3839999999955, 2
-15.3829999999955, 2
-15.3819999999955, 2
-15.3809999999955, 2
-15.3799999999955, 2
-15.3789999999955, 2
-15.3779999999955, 2
-15.3769999999955, 2
-15.3759999999955, 2
-15.3749999999955, 2
-15.3739999999955, 2
-15.3729999999955, 2
-15.3719999999955, 2
-15.3709999999955, 2
-15.3699999999955, 2
-15.3689999999955, 2
-15.3679999999955, 2
-15.3669999999955, 2
-15.3659999999955, 2
-15.3649999999955, 2
-15.3639999999955, 2
-15.3629999999955, 2
-15.3619999999955, 2
-15.3609999999955, 2
-15.3599999999955, 2
-15.3589999999955, 2
-15.3579999999955, 2
-15.3569999999955, 2
-15.3559999999955, 2
-15.3549999999955, 2
-15.3539999999955, 2
-15.3529999999955, 2
-15.3519999999955, 2
-15.3509999999955, 2
-15.3499999999955, 2
-15.3489999999955, 2
-15.3479999999955, 2
-15.3469999999955, 2
-15.3459999999955, 2
-15.3449999999955, 2
-15.3439999999955, 2
-15.3429999999955, 2
-15.3419999999955, 2
-15.3409999999955, 2
-15.3399999999955, 2
-15.3389999999955, 2
-15.3379999999955, 2
-15.3369999999955, 2
-15.3359999999955, 2
-15.3349999999955, 2
-15.3339999999955, 2
-15.3329999999955, 2
-15.3319999999955, 2
-15.3309999999955, 2
-15.3299999999955, 2
-15.3289999999955, 2
-15.3279999999955, 2
-15.3269999999955, 2
-15.3259999999955, 2
-15.3249999999955, 2
-15.3239999999955, 2
-15.3229999999955, 2
-15.3219999999955, 2
-15.3209999999955, 2
-15.3199999999955, 2
-15.3189999999955, 2
-15.3179999999955, 2
-15.3169999999955, 2
-15.3159999999955, 2
-15.3149999999955, 2
-15.3139999999955, 2
-15.3129999999955, 2
-15.3119999999955, 2
-15.3109999999955, 2
-15.3099999999955, 2
-15.3089999999955, 2
-15.3079999999955, 2
-15.3069999999955, 2
-15.3059999999955, 2
-15.3049999999955, 2
-15.3039999999955, 2
-15.3029999999955, 2
-15.3019999999955, 2
-15.3009999999955, 2
-15.2999999999955, 2
-15.2989999999955, 2
-15.2979999999955, 2
-15.2969999999955, 2
-15.2959999999955, 2
-15.2949999999955, 2
-15.2939999999955, 2
-15.2929999999955, 2
-15.2919999999955, 2
-15.2909999999955, 2
-15.2899999999955, 2
-15.2889999999955, 2
-15.2879999999955, 2
-15.2869999999955, 2
-15.2859999999955, 2
-15.2849999999955, 2
-15.2839999999955, 2
-15.2829999999955, 2
-15.2819999999955, 2
-15.2809999999955, 2
-15.2799999999955, 2
-15.2789999999955, 2
-15.2779999999955, 2
-15.2769999999955, 2
-15.2759999999955, 2
-15.2749999999955, 2
-15.2739999999955, 2
-15.2729999999955, 2
-15.2719999999955, 2
-15.2709999999955, 2
-15.2699999999955, 2
-15.2689999999955, 2
-15.2679999999955, 2
-15.2669999999955, 2
-15.2659999999955, 2
-15.2649999999955, 2
-15.2639999999955, 2
-15.2629999999955, 2
-15.2619999999955, 2
-15.2609999999955, 2
-15.2599999999955, 2
-15.2589999999955, 2
-15.2579999999955, 2
-15.2569999999955, 2
-15.2559999999955, 2
-15.2549999999955, 2
-15.2539999999955, 2
-15.2529999999955, 2
-15.2519999999955, 2
-15.2509999999955, 2
-15.2499999999955, 2
-15.2489999999955, 2
-15.2479999999955, 2
-15.2469999999955, 2
-15.2459999999955, 2
-15.2449999999955, 2
-15.2439999999955, 2
-15.2429999999955, 2
-15.2419999999955, 2
-15.2409999999955, 2
-15.2399999999955, 2
-15.2389999999955, 2
-15.2379999999955, 2
-15.2369999999955, 2
-15.2359999999955, 2
-15.2349999999955, 2
-15.2339999999955, 2
-15.2329999999955, 2
-15.2319999999955, 2
-15.2309999999955, 2
-15.2299999999955, 2
-15.2289999999955, 2
-15.2279999999955, 2
-15.2269999999955, 2
-15.2259999999955, 2
-15.2249999999955, 2
-15.2239999999955, 2
-15.2229999999955, 2
-15.2219999999955, 2
-15.2209999999955, 2
-15.2199999999955, 2
-15.2189999999955, 2
-15.2179999999955, 2
-15.2169999999955, 2
-15.2159999999955, 2
-15.2149999999955, 2
-15.2139999999955, 2
-15.2129999999955, 2
-15.2119999999956, 2
-15.2109999999956, 2
-15.2099999999956, 2
-15.2089999999956, 2
-15.2079999999956, 2
-15.2069999999956, 2
-15.2059999999956, 2
-15.2049999999956, 2
-15.2039999999956, 2
-15.2029999999956, 2
-15.2019999999956, 2
-15.2009999999956, 2
-15.1999999999956, 2
-15.1989999999956, 2
-15.1979999999956, 2
-15.1969999999956, 2
-15.1959999999956, 2
-15.1949999999956, 2
-15.1939999999956, 2
-15.1929999999956, 2
-15.1919999999956, 2
-15.1909999999956, 2
-15.1899999999956, 2
-15.1889999999956, 2
-15.1879999999956, 2
-15.1869999999956, 2
-15.1859999999956, 2
-15.1849999999956, 2
-15.1839999999956, 2
-15.1829999999956, 2
-15.1819999999956, 2
-15.1809999999956, 2
-15.1799999999956, 2
-15.1789999999956, 2
-15.1779999999956, 2
-15.1769999999956, 2
-15.1759999999956, 2
-15.1749999999956, 2
-15.1739999999956, 2
-15.1729999999956, 2
-15.1719999999956, 2
-15.1709999999956, 2
-15.1699999999956, 2
-15.1689999999956, 2
-15.1679999999956, 2
-15.1669999999956, 2
-15.1659999999956, 2
-15.1649999999956, 2
-15.1639999999956, 2
-15.1629999999956, 2
-15.1619999999956, 2
-15.1609999999956, 2
-15.1599999999956, 2
-15.1589999999956, 2
-15.1579999999956, 2
-15.1569999999956, 2
-15.1559999999956, 2
-15.1549999999956, 2
-15.1539999999956, 2
-15.1529999999956, 2
-15.1519999999956, 2
-15.1509999999956, 2
-15.1499999999956, 2
-15.1489999999956, 2
-15.1479999999956, 2
-15.1469999999956, 2
-15.1459999999956, 2
-15.1449999999956, 2
-15.1439999999956, 2
-15.1429999999956, 2
-15.1419999999956, 2
-15.1409999999956, 2
-15.1399999999956, 2
-15.1389999999956, 2
-15.1379999999956, 2
-15.1369999999956, 2
-15.1359999999956, 2
-15.1349999999956, 2
-15.1339999999956, 2
-15.1329999999956, 2
-15.1319999999956, 2
-15.1309999999956, 2
-15.1299999999956, 2
-15.1289999999956, 2
-15.1279999999956, 2
-15.1269999999956, 2
-15.1259999999956, 2
-15.1249999999956, 2
-15.1239999999956, 2
-15.1229999999956, 2
-15.1219999999956, 2
-15.1209999999956, 2
-15.1199999999956, 2
-15.1189999999956, 2
-15.1179999999956, 2
-15.1169999999956, 2
-15.1159999999956, 2
-15.1149999999956, 2
-15.1139999999956, 2
-15.1129999999956, 2
-15.1119999999956, 2
-15.1109999999956, 2
-15.1099999999956, 2
-15.1089999999956, 2
-15.1079999999956, 2
-15.1069999999956, 2
-15.1059999999956, 2
-15.1049999999956, 2
-15.1039999999956, 2
-15.1029999999956, 2
-15.1019999999956, 2
-15.1009999999956, 2
-15.0999999999956, 2
-15.0989999999956, 2
-15.0979999999956, 2
-15.0969999999956, 2
-15.0959999999956, 2
-15.0949999999956, 2
-15.0939999999956, 2
-15.0929999999956, 2
-15.0919999999956, 2
-15.0909999999956, 2
-15.0899999999956, 2
-15.0889999999956, 2
-15.0879999999956, 2
-15.0869999999956, 2
-15.0859999999956, 2
-15.0849999999956, 2
-15.0839999999956, 2
-15.0829999999956, 2
-15.0819999999956, 2
-15.0809999999956, 2
-15.0799999999956, 2
-15.0789999999956, 2
-15.0779999999956, 2
-15.0769999999956, 2
-15.0759999999956, 2
-15.0749999999956, 2
-15.0739999999956, 2
-15.0729999999956, 2
-15.0719999999956, 2
-15.0709999999956, 2
-15.0699999999956, 2
-15.0689999999956, 2
-15.0679999999956, 2
-15.0669999999956, 2
-15.0659999999956, 2
-15.0649999999956, 2
-15.0639999999956, 2
-15.0629999999956, 2
-15.0619999999956, 2
-15.0609999999956, 2
-15.0599999999956, 2
-15.0589999999956, 2
-15.0579999999956, 2
-15.0569999999956, 2
-15.0559999999956, 2
-15.0549999999956, 2
-15.0539999999956, 2
-15.0529999999956, 2
-15.0519999999956, 2
-15.0509999999956, 2
-15.0499999999956, 2
-15.0489999999956, 2
-15.0479999999956, 2
-15.0469999999956, 2
-15.0459999999956, 2
-15.0449999999956, 2
-15.0439999999956, 2
-15.0429999999956, 2
-15.0419999999956, 2
-15.0409999999956, 2
-15.0399999999956, 2
-15.0389999999956, 2
-15.0379999999956, 2
-15.0369999999956, 2
-15.0359999999956, 2
-15.0349999999956, 2
-15.0339999999956, 2
-15.0329999999956, 2
-15.0319999999957, 2
-15.0309999999957, 2
-15.0299999999957, 2
-15.0289999999957, 2
-15.0279999999957, 2
-15.0269999999957, 2
-15.0259999999957, 2
-15.0249999999957, 2
-15.0239999999957, 2
-15.0229999999957, 2
-15.0219999999957, 2
-15.0209999999957, 2
-15.0199999999957, 2
-15.0189999999957, 2
-15.0179999999957, 2
-15.0169999999957, 2
-15.0159999999957, 2
-15.0149999999957, 2
-15.0139999999957, 2
-15.0129999999957, 2
-15.0119999999957, 2
-15.0109999999957, 2
-15.0099999999957, 2
-15.0089999999957, 2
-15.0079999999957, 2
-15.0069999999957, 2
-15.0059999999957, 2
-15.0049999999957, 2
-15.0039999999957, 2
-15.0029999999957, 2
-15.0019999999957, 2
-15.0009999999957, 2
-14.9999999999957, 2
-14.9989999999957, 2
-14.9979999999957, 2
-14.9969999999957, 2
-14.9959999999957, 2
-14.9949999999957, 2
-14.9939999999957, 2
-14.9929999999957, 2
-14.9919999999957, 2
-14.9909999999957, 2
-14.9899999999957, 2
-14.9889999999957, 2
-14.9879999999957, 2
-14.9869999999957, 2
-14.9859999999957, 2
-14.9849999999957, 2
-14.9839999999957, 2
-14.9829999999957, 2
-14.9819999999957, 2
-14.9809999999957, 2
-14.9799999999957, 2
-14.9789999999957, 2
-14.9779999999957, 2
-14.9769999999957, 2
-14.9759999999957, 2
-14.9749999999957, 2
-14.9739999999957, 2
-14.9729999999957, 2
-14.9719999999957, 2
-14.9709999999957, 2
-14.9699999999957, 2
-14.9689999999957, 2
-14.9679999999957, 2
-14.9669999999957, 2
-14.9659999999957, 2
-14.9649999999957, 2
-14.9639999999957, 2
-14.9629999999957, 2
-14.9619999999957, 2
-14.9609999999957, 2
-14.9599999999957, 2
-14.9589999999957, 2
-14.9579999999957, 2
-14.9569999999957, 2
-14.9559999999957, 2
-14.9549999999957, 2
-14.9539999999957, 2
-14.9529999999957, 2
-14.9519999999957, 2
-14.9509999999957, 2
-14.9499999999957, 2
-14.9489999999957, 2
-14.9479999999957, 2
-14.9469999999957, 2
-14.9459999999957, 2
-14.9449999999957, 2
-14.9439999999957, 2
-14.9429999999957, 2
-14.9419999999957, 2
-14.9409999999957, 2
-14.9399999999957, 2
-14.9389999999957, 2
-14.9379999999957, 2
-14.9369999999957, 2
-14.9359999999957, 2
-14.9349999999957, 2
-14.9339999999957, 2
-14.9329999999957, 2
-14.9319999999957, 2
-14.9309999999957, 2
-14.9299999999957, 2
-14.9289999999957, 2
-14.9279999999957, 2
-14.9269999999957, 2
-14.9259999999957, 2
-14.9249999999957, 2
-14.9239999999957, 2
-14.9229999999957, 2
-14.9219999999957, 2
-14.9209999999957, 2
-14.9199999999957, 2
-14.9189999999957, 2
-14.9179999999957, 2
-14.9169999999957, 2
-14.9159999999957, 2
-14.9149999999957, 2
-14.9139999999957, 2
-14.9129999999957, 2
-14.9119999999957, 2
-14.9109999999957, 2
-14.9099999999957, 2
-14.9089999999957, 2
-14.9079999999957, 2
-14.9069999999957, 2
-14.9059999999957, 2
-14.9049999999957, 2
-14.9039999999957, 2
-14.9029999999957, 2
-14.9019999999957, 2
-14.9009999999957, 2
-14.8999999999957, 2
-14.8989999999957, 2
-14.8979999999957, 2
-14.8969999999957, 2
-14.8959999999957, 2
-14.8949999999957, 2
-14.8939999999957, 2
-14.8929999999957, 2
-14.8919999999957, 2
-14.8909999999957, 2
-14.8899999999957, 2
-14.8889999999957, 2
-14.8879999999957, 2
-14.8869999999957, 2
-14.8859999999957, 2
-14.8849999999957, 2
-14.8839999999957, 2
-14.8829999999957, 2
-14.8819999999957, 2
-14.8809999999957, 2
-14.8799999999957, 2
-14.8789999999957, 2
-14.8779999999957, 2
-14.8769999999957, 2
-14.8759999999957, 2
-14.8749999999957, 2
-14.8739999999957, 2
-14.8729999999957, 2
-14.8719999999957, 2
-14.8709999999957, 2
-14.8699999999957, 2
-14.8689999999957, 2
-14.8679999999957, 2
-14.8669999999957, 2
-14.8659999999957, 2
-14.8649999999957, 2
-14.8639999999957, 2
-14.8629999999957, 2
-14.8619999999957, 2
-14.8609999999957, 2
-14.8599999999957, 2
-14.8589999999957, 2
-14.8579999999957, 2
-14.8569999999957, 2
-14.8559999999957, 2
-14.8549999999957, 2
-14.8539999999957, 2
-14.8529999999957, 2
-14.8519999999957, 2
-14.8509999999958, 2
-14.8499999999958, 2
-14.8489999999958, 2
-14.8479999999958, 2
-14.8469999999958, 2
-14.8459999999958, 2
-14.8449999999958, 2
-14.8439999999958, 2
-14.8429999999958, 2
-14.8419999999958, 2
-14.8409999999958, 2
-14.8399999999958, 2
-14.8389999999958, 2
-14.8379999999958, 2
-14.8369999999958, 2
-14.8359999999958, 2
-14.8349999999958, 2
-14.8339999999958, 2
-14.8329999999958, 2
-14.8319999999958, 2
-14.8309999999958, 2
-14.8299999999958, 2
-14.8289999999958, 2
-14.8279999999958, 2
-14.8269999999958, 2
-14.8259999999958, 2
-14.8249999999958, 2
-14.8239999999958, 2
-14.8229999999958, 2
-14.8219999999958, 2
-14.8209999999958, 2
-14.8199999999958, 2
-14.8189999999958, 2
-14.8179999999958, 2
-14.8169999999958, 2
-14.8159999999958, 2
-14.8149999999958, 2
-14.8139999999958, 2
-14.8129999999958, 2
-14.8119999999958, 2
-14.8109999999958, 2
-14.8099999999958, 2
-14.8089999999958, 2
-14.8079999999958, 2
-14.8069999999958, 2
-14.8059999999958, 2
-14.8049999999958, 2
-14.8039999999958, 2
-14.8029999999958, 2
-14.8019999999958, 2
-14.8009999999958, 2
-14.7999999999958, 2
-14.7989999999958, 2
-14.7979999999958, 2
-14.7969999999958, 2
-14.7959999999958, 2
-14.7949999999958, 2
-14.7939999999958, 2
-14.7929999999958, 2
-14.7919999999958, 2
-14.7909999999958, 2
-14.7899999999958, 2
-14.7889999999958, 2
-14.7879999999958, 2
-14.7869999999958, 2
-14.7859999999958, 2
-14.7849999999958, 2
-14.7839999999958, 2
-14.7829999999958, 2
-14.7819999999958, 2
-14.7809999999958, 2
-14.7799999999958, 2
-14.7789999999958, 2
-14.7779999999958, 2
-14.7769999999958, 2
-14.7759999999958, 2
-14.7749999999958, 2
-14.7739999999958, 2
-14.7729999999958, 2
-14.7719999999958, 2
-14.7709999999958, 2
-14.7699999999958, 2
-14.7689999999958, 2
-14.7679999999958, 2
-14.7669999999958, 2
-14.7659999999958, 2
-14.7649999999958, 2
-14.7639999999958, 2
-14.7629999999958, 2
-14.7619999999958, 2
-14.7609999999958, 2
-14.7599999999958, 2
-14.7589999999958, 2
-14.7579999999958, 2
-14.7569999999958, 2
-14.7559999999958, 2
-14.7549999999958, 2
-14.7539999999958, 2
-14.7529999999958, 2
-14.7519999999958, 2
-14.7509999999958, 2
-14.7499999999958, 2
-14.7489999999958, 2
-14.7479999999958, 2
-14.7469999999958, 2
-14.7459999999958, 2
-14.7449999999958, 2
-14.7439999999958, 2
-14.7429999999958, 2
-14.7419999999958, 2
-14.7409999999958, 2
-14.7399999999958, 2
-14.7389999999958, 2
-14.7379999999958, 2
-14.7369999999958, 2
-14.7359999999958, 2
-14.7349999999958, 2
-14.7339999999958, 2
-14.7329999999958, 2
-14.7319999999958, 2
-14.7309999999958, 2
-14.7299999999958, 2
-14.7289999999958, 2
-14.7279999999958, 2
-14.7269999999958, 2
-14.7259999999958, 2
-14.7249999999958, 2
-14.7239999999958, 2
-14.7229999999958, 2
-14.7219999999958, 2
-14.7209999999958, 2
-14.7199999999958, 2
-14.7189999999958, 2
-14.7179999999958, 2
-14.7169999999958, 2
-14.7159999999958, 2
-14.7149999999958, 2
-14.7139999999958, 2
-14.7129999999958, 2
-14.7119999999958, 2
-14.7109999999958, 2
-14.7099999999958, 2
-14.7089999999958, 2
-14.7079999999958, 2
-14.7069999999958, 2
-14.7059999999958, 2
-14.7049999999958, 2
-14.7039999999958, 2
-14.7029999999958, 2
-14.7019999999958, 2
-14.7009999999958, 2
-14.6999999999958, 2
-14.6989999999958, 2
-14.6979999999958, 2
-14.6969999999958, 2
-14.6959999999958, 2
-14.6949999999958, 2
-14.6939999999958, 2
-14.6929999999958, 2
-14.6919999999958, 2
-14.6909999999958, 2
-14.6899999999958, 2
-14.6889999999958, 2
-14.6879999999958, 2
-14.6869999999958, 2
-14.6859999999958, 2
-14.6849999999958, 2
-14.6839999999958, 2
-14.6829999999958, 2
-14.6819999999958, 2
-14.6809999999958, 2
-14.6799999999958, 2
-14.6789999999958, 2
-14.6779999999958, 2
-14.6769999999958, 2
-14.6759999999958, 2
-14.6749999999958, 2
-14.6739999999958, 2
-14.6729999999958, 2
-14.6719999999958, 2
-14.6709999999959, 2
-14.6699999999959, 2
-14.6689999999959, 2
-14.6679999999959, 2
-14.6669999999959, 2
-14.6659999999959, 2
-14.6649999999959, 2
-14.6639999999959, 2
-14.6629999999959, 2
-14.6619999999959, 2
-14.6609999999959, 2
-14.6599999999959, 2
-14.6589999999959, 2
-14.6579999999959, 2
-14.6569999999959, 2
-14.6559999999959, 2
-14.6549999999959, 2
-14.6539999999959, 2
-14.6529999999959, 2
-14.6519999999959, 2
-14.6509999999959, 2
-14.6499999999959, 2
-14.6489999999959, 2
-14.6479999999959, 2
-14.6469999999959, 2
-14.6459999999959, 2
-14.6449999999959, 2
-14.6439999999959, 2
-14.6429999999959, 2
-14.6419999999959, 2
-14.6409999999959, 2
-14.6399999999959, 2
-14.6389999999959, 2
-14.6379999999959, 2
-14.6369999999959, 2
-14.6359999999959, 2
-14.6349999999959, 2
-14.6339999999959, 2
-14.6329999999959, 2
-14.6319999999959, 2
-14.6309999999959, 2
-14.6299999999959, 2
-14.6289999999959, 2
-14.6279999999959, 2
-14.6269999999959, 2
-14.6259999999959, 2
-14.6249999999959, 2
-14.6239999999959, 2
-14.6229999999959, 2
-14.6219999999959, 2
-14.6209999999959, 2
-14.6199999999959, 2
-14.6189999999959, 2
-14.6179999999959, 2
-14.6169999999959, 2
-14.6159999999959, 2
-14.6149999999959, 2
-14.6139999999959, 2
-14.6129999999959, 2
-14.6119999999959, 2
-14.6109999999959, 2
-14.6099999999959, 2
-14.6089999999959, 2
-14.6079999999959, 2
-14.6069999999959, 2
-14.6059999999959, 2
-14.6049999999959, 2
-14.6039999999959, 2
-14.6029999999959, 2
-14.6019999999959, 2
-14.6009999999959, 2
-14.5999999999959, 2
-14.5989999999959, 2
-14.5979999999959, 2
-14.5969999999959, 2
-14.5959999999959, 2
-14.5949999999959, 2
-14.5939999999959, 2
-14.5929999999959, 2
-14.5919999999959, 2
-14.5909999999959, 2
-14.5899999999959, 2
-14.5889999999959, 2
-14.5879999999959, 2
-14.5869999999959, 2
-14.5859999999959, 2
-14.5849999999959, 2
-14.5839999999959, 2
-14.5829999999959, 2
-14.5819999999959, 2
-14.5809999999959, 2
-14.5799999999959, 2
-14.5789999999959, 2
-14.5779999999959, 2
-14.5769999999959, 2
-14.5759999999959, 2
-14.5749999999959, 2
-14.5739999999959, 2
-14.5729999999959, 2
-14.5719999999959, 2
-14.5709999999959, 2
-14.5699999999959, 2
-14.5689999999959, 2
-14.5679999999959, 2
-14.5669999999959, 2
-14.5659999999959, 2
-14.5649999999959, 2
-14.5639999999959, 2
-14.5629999999959, 2
-14.5619999999959, 2
-14.5609999999959, 2
-14.5599999999959, 2
-14.5589999999959, 2
-14.5579999999959, 2
-14.5569999999959, 2
-14.5559999999959, 2
-14.5549999999959, 2
-14.5539999999959, 2
-14.5529999999959, 2
-14.5519999999959, 2
-14.5509999999959, 2
-14.5499999999959, 2
-14.5489999999959, 2
-14.5479999999959, 2
-14.5469999999959, 2
-14.5459999999959, 2
-14.5449999999959, 2
-14.5439999999959, 2
-14.5429999999959, 2
-14.5419999999959, 2
-14.5409999999959, 2
-14.5399999999959, 2
-14.5389999999959, 2
-14.5379999999959, 2
-14.5369999999959, 2
-14.5359999999959, 2
-14.5349999999959, 2
-14.5339999999959, 2
-14.5329999999959, 2
-14.5319999999959, 2
-14.5309999999959, 2
-14.5299999999959, 2
-14.5289999999959, 2
-14.5279999999959, 2
-14.5269999999959, 2
-14.5259999999959, 2
-14.5249999999959, 2
-14.5239999999959, 2
-14.5229999999959, 2
-14.5219999999959, 2
-14.5209999999959, 2
-14.5199999999959, 2
-14.5189999999959, 2
-14.5179999999959, 2
-14.5169999999959, 2
-14.5159999999959, 2
-14.5149999999959, 2
-14.5139999999959, 2
-14.5129999999959, 2
-14.5119999999959, 2
-14.5109999999959, 2
-14.5099999999959, 2
-14.5089999999959, 2
-14.5079999999959, 2
-14.5069999999959, 2
-14.5059999999959, 2
-14.5049999999959, 2
-14.5039999999959, 2
-14.5029999999959, 2
-14.5019999999959, 2
-14.5009999999959, 2
-14.4999999999959, 2
-14.4989999999959, 2
-14.4979999999959, 2
-14.4969999999959, 2
-14.4959999999959, 2
-14.4949999999959, 2
-14.4939999999959, 2
-14.4929999999959, 2
-14.4919999999959, 2
-14.490999999996, 2
-14.489999999996, 2
-14.488999999996, 2
-14.487999999996, 2
-14.486999999996, 2
-14.485999999996, 2
-14.484999999996, 2
-14.483999999996, 2
-14.482999999996, 2
-14.481999999996, 2
-14.480999999996, 2
-14.479999999996, 2
-14.478999999996, 2
-14.477999999996, 2
-14.476999999996, 2
-14.475999999996, 2
-14.474999999996, 2
-14.473999999996, 2
-14.472999999996, 2
-14.471999999996, 2
-14.470999999996, 2
-14.469999999996, 2
-14.468999999996, 2
-14.467999999996, 2
-14.466999999996, 2
-14.465999999996, 2
-14.464999999996, 2
-14.463999999996, 2
-14.462999999996, 2
-14.461999999996, 2
-14.460999999996, 2
-14.459999999996, 2
-14.458999999996, 2
-14.457999999996, 2
-14.456999999996, 2
-14.455999999996, 2
-14.454999999996, 2
-14.453999999996, 2
-14.452999999996, 2
-14.451999999996, 2
-14.450999999996, 2
-14.449999999996, 2
-14.448999999996, 2
-14.447999999996, 2
-14.446999999996, 2
-14.445999999996, 2
-14.444999999996, 2
-14.443999999996, 2
-14.442999999996, 2
-14.441999999996, 2
-14.440999999996, 2
-14.439999999996, 2
-14.438999999996, 2
-14.437999999996, 2
-14.436999999996, 2
-14.435999999996, 2
-14.434999999996, 2
-14.433999999996, 2
-14.432999999996, 2
-14.431999999996, 2
-14.430999999996, 2
-14.429999999996, 2
-14.428999999996, 2
-14.427999999996, 2
-14.426999999996, 2
-14.425999999996, 2
-14.424999999996, 2
-14.423999999996, 2
-14.422999999996, 2
-14.421999999996, 2
-14.420999999996, 2
-14.419999999996, 2
-14.418999999996, 2
-14.417999999996, 2
-14.416999999996, 2
-14.415999999996, 2
-14.414999999996, 2
-14.413999999996, 2
-14.412999999996, 2
-14.411999999996, 2
-14.410999999996, 2
-14.409999999996, 2
-14.408999999996, 2
-14.407999999996, 2
-14.406999999996, 2
-14.405999999996, 2
-14.404999999996, 2
-14.403999999996, 2
-14.402999999996, 2
-14.401999999996, 2
-14.400999999996, 2
-14.399999999996, 2
-14.398999999996, 2
-14.397999999996, 2
-14.396999999996, 2
-14.395999999996, 2
-14.394999999996, 2
-14.393999999996, 2
-14.392999999996, 2
-14.391999999996, 2
-14.390999999996, 2
-14.389999999996, 2
-14.388999999996, 2
-14.387999999996, 2
-14.386999999996, 2
-14.385999999996, 2
-14.384999999996, 2
-14.383999999996, 2
-14.382999999996, 2
-14.381999999996, 2
-14.380999999996, 2
-14.379999999996, 2
-14.378999999996, 2
-14.377999999996, 2
-14.376999999996, 2
-14.375999999996, 2
-14.374999999996, 2
-14.373999999996, 2
-14.372999999996, 2
-14.371999999996, 2
-14.370999999996, 2
-14.369999999996, 2
-14.368999999996, 2
-14.367999999996, 2
-14.366999999996, 2
-14.365999999996, 2
-14.364999999996, 2
-14.363999999996, 2
-14.362999999996, 2
-14.361999999996, 2
-14.360999999996, 2
-14.359999999996, 2
-14.358999999996, 2
-14.357999999996, 2
-14.356999999996, 2
-14.355999999996, 2
-14.354999999996, 2
-14.353999999996, 2
-14.352999999996, 2
-14.351999999996, 2
-14.350999999996, 2
-14.349999999996, 2
-14.348999999996, 2
-14.347999999996, 2
-14.346999999996, 2
-14.345999999996, 2
-14.344999999996, 2
-14.343999999996, 2
-14.342999999996, 2
-14.341999999996, 2
-14.340999999996, 2
-14.339999999996, 2
-14.338999999996, 2
-14.337999999996, 2
-14.336999999996, 2
-14.335999999996, 2
-14.334999999996, 2
-14.333999999996, 2
-14.332999999996, 2
-14.331999999996, 2
-14.330999999996, 2
-14.329999999996, 2
-14.328999999996, 2
-14.327999999996, 2
-14.326999999996, 2
-14.325999999996, 2
-14.324999999996, 2
-14.323999999996, 2
-14.322999999996, 2
-14.321999999996, 2
-14.320999999996, 2
-14.319999999996, 2
-14.318999999996, 2
-14.317999999996, 2
-14.316999999996, 2
-14.315999999996, 2
-14.314999999996, 2
-14.313999999996, 2
-14.312999999996, 2
-14.311999999996, 2
-14.310999999996, 2
-14.3099999999961, 2
-14.3089999999961, 2
-14.3079999999961, 2
-14.3069999999961, 2
-14.3059999999961, 2
-14.3049999999961, 2
-14.3039999999961, 2
-14.3029999999961, 2
-14.3019999999961, 2
-14.3009999999961, 2
-14.2999999999961, 2
-14.2989999999961, 2
-14.2979999999961, 2
-14.2969999999961, 2
-14.2959999999961, 2
-14.2949999999961, 2
-14.2939999999961, 2
-14.2929999999961, 2
-14.2919999999961, 2
-14.2909999999961, 2
-14.2899999999961, 2
-14.2889999999961, 2
-14.2879999999961, 2
-14.2869999999961, 2
-14.2859999999961, 2
-14.2849999999961, 2
-14.2839999999961, 2
-14.2829999999961, 2
-14.2819999999961, 2
-14.2809999999961, 2
-14.2799999999961, 2
-14.2789999999961, 2
-14.2779999999961, 2
-14.2769999999961, 2
-14.2759999999961, 2
-14.2749999999961, 2
-14.2739999999961, 2
-14.2729999999961, 2
-14.2719999999961, 2
-14.2709999999961, 2
-14.2699999999961, 2
-14.2689999999961, 2
-14.2679999999961, 2
-14.2669999999961, 2
-14.2659999999961, 2
-14.2649999999961, 2
-14.2639999999961, 2
-14.2629999999961, 2
-14.2619999999961, 2
-14.2609999999961, 2
-14.2599999999961, 2
-14.2589999999961, 2
-14.2579999999961, 2
-14.2569999999961, 2
-14.2559999999961, 2
-14.2549999999961, 2
-14.2539999999961, 2
-14.2529999999961, 2
-14.2519999999961, 2
-14.2509999999961, 2
-14.2499999999961, 2
-14.2489999999961, 2
-14.2479999999961, 2
-14.2469999999961, 2
-14.2459999999961, 2
-14.2449999999961, 2
-14.2439999999961, 2
-14.2429999999961, 2
-14.2419999999961, 2
-14.2409999999961, 2
-14.2399999999961, 2
-14.2389999999961, 2
-14.2379999999961, 2
-14.2369999999961, 2
-14.2359999999961, 2
-14.2349999999961, 2
-14.2339999999961, 2
-14.2329999999961, 2
-14.2319999999961, 2
-14.2309999999961, 2
-14.2299999999961, 2
-14.2289999999961, 2
-14.2279999999961, 2
-14.2269999999961, 2
-14.2259999999961, 2
-14.2249999999961, 2
-14.2239999999961, 2
-14.2229999999961, 2
-14.2219999999961, 2
-14.2209999999961, 2
-14.2199999999961, 2
-14.2189999999961, 2
-14.2179999999961, 2
-14.2169999999961, 2
-14.2159999999961, 2
-14.2149999999961, 2
-14.2139999999961, 2
-14.2129999999961, 2
-14.2119999999961, 2
-14.2109999999961, 2
-14.2099999999961, 2
-14.2089999999961, 2
-14.2079999999961, 2
-14.2069999999961, 2
-14.2059999999961, 2
-14.2049999999961, 2
-14.2039999999961, 2
-14.2029999999961, 2
-14.2019999999961, 2
-14.2009999999961, 2
-14.1999999999961, 2
-14.1989999999961, 2
-14.1979999999961, 2
-14.1969999999961, 2
-14.1959999999961, 2
-14.1949999999961, 2
-14.1939999999961, 2
-14.1929999999961, 2
-14.1919999999961, 2
-14.1909999999961, 2
-14.1899999999961, 2
-14.1889999999961, 2
-14.1879999999961, 2
-14.1869999999961, 2
-14.1859999999961, 2
-14.1849999999961, 2
-14.1839999999961, 2
-14.1829999999961, 2
-14.1819999999961, 2
-14.1809999999961, 2
-14.1799999999961, 2
-14.1789999999961, 2
-14.1779999999961, 2
-14.1769999999961, 2
-14.1759999999961, 2
-14.1749999999961, 2
-14.1739999999961, 2
-14.1729999999961, 2
-14.1719999999961, 2
-14.1709999999961, 2
-14.1699999999961, 2
-14.1689999999961, 2
-14.1679999999961, 2
-14.1669999999961, 2
-14.1659999999961, 2
-14.1649999999961, 2
-14.1639999999961, 2
-14.1629999999961, 2
-14.1619999999961, 2
-14.1609999999961, 2
-14.1599999999961, 2
-14.1589999999961, 2
-14.1579999999961, 2
-14.1569999999961, 2
-14.1559999999961, 2
-14.1549999999961, 2
-14.1539999999961, 2
-14.1529999999961, 2
-14.1519999999961, 2
-14.1509999999961, 2
-14.1499999999961, 2
-14.1489999999961, 2
-14.1479999999961, 2
-14.1469999999961, 2
-14.1459999999961, 2
-14.1449999999961, 2
-14.1439999999961, 2
-14.1429999999961, 2
-14.1419999999961, 2
-14.1409999999961, 2
-14.1399999999961, 2
-14.1389999999961, 2
-14.1379999999961, 2
-14.1369999999961, 2
-14.1359999999961, 2
-14.1349999999961, 2
-14.1339999999961, 2
-14.1329999999961, 2
-14.1319999999961, 2
-14.1309999999961, 2
-14.1299999999962, 2
-14.1289999999962, 2
-14.1279999999962, 2
-14.1269999999962, 2
-14.1259999999962, 2
-14.1249999999962, 2
-14.1239999999962, 2
-14.1229999999962, 2
-14.1219999999962, 2
-14.1209999999962, 2
-14.1199999999962, 2
-14.1189999999962, 2
-14.1179999999962, 2
-14.1169999999962, 2
-14.1159999999962, 2
-14.1149999999962, 2
-14.1139999999962, 2
-14.1129999999962, 2
-14.1119999999962, 2
-14.1109999999962, 2
-14.1099999999962, 2
-14.1089999999962, 2
-14.1079999999962, 2
-14.1069999999962, 2
-14.1059999999962, 2
-14.1049999999962, 2
-14.1039999999962, 2
-14.1029999999962, 2
-14.1019999999962, 2
-14.1009999999962, 2
-14.0999999999962, 2
-14.0989999999962, 2
-14.0979999999962, 2
-14.0969999999962, 2
-14.0959999999962, 2
-14.0949999999962, 2
-14.0939999999962, 2
-14.0929999999962, 2
-14.0919999999962, 2
-14.0909999999962, 2
-14.0899999999962, 2
-14.0889999999962, 2
-14.0879999999962, 2
-14.0869999999962, 2
-14.0859999999962, 2
-14.0849999999962, 2
-14.0839999999962, 2
-14.0829999999962, 2
-14.0819999999962, 2
-14.0809999999962, 2
-14.0799999999962, 2
-14.0789999999962, 2
-14.0779999999962, 2
-14.0769999999962, 2
-14.0759999999962, 2
-14.0749999999962, 2
-14.0739999999962, 2
-14.0729999999962, 2
-14.0719999999962, 2
-14.0709999999962, 2
-14.0699999999962, 2
-14.0689999999962, 2
-14.0679999999962, 2
-14.0669999999962, 2
-14.0659999999962, 2
-14.0649999999962, 2
-14.0639999999962, 2
-14.0629999999962, 2
-14.0619999999962, 2
-14.0609999999962, 2
-14.0599999999962, 2
-14.0589999999962, 2
-14.0579999999962, 2
-14.0569999999962, 2
-14.0559999999962, 2
-14.0549999999962, 2
-14.0539999999962, 2
-14.0529999999962, 2
-14.0519999999962, 2
-14.0509999999962, 2
-14.0499999999962, 2
-14.0489999999962, 2
-14.0479999999962, 2
-14.0469999999962, 2
-14.0459999999962, 2
-14.0449999999962, 2
-14.0439999999962, 2
-14.0429999999962, 2
-14.0419999999962, 2
-14.0409999999962, 2
-14.0399999999962, 2
-14.0389999999962, 2
-14.0379999999962, 2
-14.0369999999962, 2
-14.0359999999962, 2
-14.0349999999962, 2
-14.0339999999962, 2
-14.0329999999962, 2
-14.0319999999962, 2
-14.0309999999962, 2
-14.0299999999962, 2
-14.0289999999962, 2
-14.0279999999962, 2
-14.0269999999962, 2
-14.0259999999962, 2
-14.0249999999962, 2
-14.0239999999962, 2
-14.0229999999962, 2
-14.0219999999962, 2
-14.0209999999962, 2
-14.0199999999962, 2
-14.0189999999962, 2
-14.0179999999962, 2
-14.0169999999962, 2
-14.0159999999962, 2
-14.0149999999962, 2
-14.0139999999962, 2
-14.0129999999962, 2
-14.0119999999962, 2
-14.0109999999962, 2
-14.0099999999962, 2
-14.0089999999962, 2
-14.0079999999962, 2
-14.0069999999962, 2
-14.0059999999962, 2
-14.0049999999962, 2
-14.0039999999962, 2
-14.0029999999962, 2
-14.0019999999962, 2
-14.0009999999962, 2
-13.9999999999962, 2
-13.9989999999962, 2
-13.9979999999962, 2
-13.9969999999962, 2
-13.9959999999962, 2
-13.9949999999962, 2
-13.9939999999962, 2
-13.9929999999962, 2
-13.9919999999962, 2
-13.9909999999962, 2
-13.9899999999962, 2
-13.9889999999962, 2
-13.9879999999962, 2
-13.9869999999962, 2
-13.9859999999962, 2
-13.9849999999962, 2
-13.9839999999962, 2
-13.9829999999962, 2
-13.9819999999962, 2
-13.9809999999962, 2
-13.9799999999962, 2
-13.9789999999962, 2
-13.9779999999962, 2
-13.9769999999962, 2
-13.9759999999962, 2
-13.9749999999962, 2
-13.9739999999962, 2
-13.9729999999962, 2
-13.9719999999962, 2
-13.9709999999962, 2
-13.9699999999962, 2
-13.9689999999962, 2
-13.9679999999962, 2
-13.9669999999962, 2
-13.9659999999962, 2
-13.9649999999962, 2
-13.9639999999962, 2
-13.9629999999962, 2
-13.9619999999962, 2
-13.9609999999962, 2
-13.9599999999962, 2
-13.9589999999962, 2
-13.9579999999962, 2
-13.9569999999962, 2
-13.9559999999962, 2
-13.9549999999962, 2
-13.9539999999962, 2
-13.9529999999962, 2
-13.9519999999962, 2
-13.9509999999962, 2
-13.9499999999962, 2
-13.9489999999963, 2
-13.9479999999963, 2
-13.9469999999963, 2
-13.9459999999963, 2
-13.9449999999963, 2
-13.9439999999963, 2
-13.9429999999963, 2
-13.9419999999963, 2
-13.9409999999963, 2
-13.9399999999963, 2
-13.9389999999963, 2
-13.9379999999963, 2
-13.9369999999963, 2
-13.9359999999963, 2
-13.9349999999963, 2
-13.9339999999963, 2
-13.9329999999963, 2
-13.9319999999963, 2
-13.9309999999963, 2
-13.9299999999963, 2
-13.9289999999963, 2
-13.9279999999963, 2
-13.9269999999963, 2
-13.9259999999963, 2
-13.9249999999963, 2
-13.9239999999963, 2
-13.9229999999963, 2
-13.9219999999963, 2
-13.9209999999963, 2
-13.9199999999963, 2
-13.9189999999963, 2
-13.9179999999963, 2
-13.9169999999963, 2
-13.9159999999963, 2
-13.9149999999963, 2
-13.9139999999963, 2
-13.9129999999963, 2
-13.9119999999963, 2
-13.9109999999963, 2
-13.9099999999963, 2
-13.9089999999963, 2
-13.9079999999963, 2
-13.9069999999963, 2
-13.9059999999963, 2
-13.9049999999963, 2
-13.9039999999963, 2
-13.9029999999963, 2
-13.9019999999963, 2
-13.9009999999963, 2
-13.8999999999963, 2
-13.8989999999963, 2
-13.8979999999963, 2
-13.8969999999963, 2
-13.8959999999963, 2
-13.8949999999963, 2
-13.8939999999963, 2
-13.8929999999963, 2
-13.8919999999963, 2
-13.8909999999963, 2
-13.8899999999963, 2
-13.8889999999963, 2
-13.8879999999963, 2
-13.8869999999963, 2
-13.8859999999963, 2
-13.8849999999963, 2
-13.8839999999963, 2
-13.8829999999963, 2
-13.8819999999963, 2
-13.8809999999963, 2
-13.8799999999963, 2
-13.8789999999963, 2
-13.8779999999963, 2
-13.8769999999963, 2
-13.8759999999963, 2
-13.8749999999963, 2
-13.8739999999963, 2
-13.8729999999963, 2
-13.8719999999963, 2
-13.8709999999963, 2
-13.8699999999963, 2
-13.8689999999963, 2
-13.8679999999963, 2
-13.8669999999963, 2
-13.8659999999963, 2
-13.8649999999963, 2
-13.8639999999963, 2
-13.8629999999963, 2
-13.8619999999963, 2
-13.8609999999963, 2
-13.8599999999963, 2
-13.8589999999963, 2
-13.8579999999963, 2
-13.8569999999963, 2
-13.8559999999963, 2
-13.8549999999963, 2
-13.8539999999963, 2
-13.8529999999963, 2
-13.8519999999963, 2
-13.8509999999963, 2
-13.8499999999963, 2
-13.8489999999963, 2
-13.8479999999963, 2
-13.8469999999963, 2
-13.8459999999963, 2
-13.8449999999963, 2
-13.8439999999963, 2
-13.8429999999963, 2
-13.8419999999963, 2
-13.8409999999963, 2
-13.8399999999963, 2
-13.8389999999963, 2
-13.8379999999963, 2
-13.8369999999963, 2
-13.8359999999963, 2
-13.8349999999963, 2
-13.8339999999963, 2
-13.8329999999963, 2
-13.8319999999963, 2
-13.8309999999963, 2
-13.8299999999963, 2
-13.8289999999963, 2
-13.8279999999963, 2
-13.8269999999963, 2
-13.8259999999963, 2
-13.8249999999963, 2
-13.8239999999963, 2
-13.8229999999963, 2
-13.8219999999963, 2
-13.8209999999963, 2
-13.8199999999963, 2
-13.8189999999963, 2
-13.8179999999963, 2
-13.8169999999963, 2
-13.8159999999963, 2
-13.8149999999963, 2
-13.8139999999963, 2
-13.8129999999963, 2
-13.8119999999963, 2
-13.8109999999963, 2
-13.8099999999963, 2
-13.8089999999963, 2
-13.8079999999963, 2
-13.8069999999963, 2
-13.8059999999963, 2
-13.8049999999963, 2
-13.8039999999963, 2
-13.8029999999963, 2
-13.8019999999963, 2
-13.8009999999963, 2
-13.7999999999963, 2
-13.7989999999963, 2
-13.7979999999963, 2
-13.7969999999963, 2
-13.7959999999963, 2
-13.7949999999963, 2
-13.7939999999963, 2
-13.7929999999963, 2
-13.7919999999963, 2
-13.7909999999963, 2
-13.7899999999963, 2
-13.7889999999963, 2
-13.7879999999963, 2
-13.7869999999963, 2
-13.7859999999963, 2
-13.7849999999963, 2
-13.7839999999963, 2
-13.7829999999963, 2
-13.7819999999963, 2
-13.7809999999963, 2
-13.7799999999963, 2
-13.7789999999963, 2
-13.7779999999963, 2
-13.7769999999963, 2
-13.7759999999963, 2
-13.7749999999963, 2
-13.7739999999963, 2
-13.7729999999963, 2
-13.7719999999963, 2
-13.7709999999963, 2
-13.7699999999963, 2
-13.7689999999964, 2
-13.7679999999964, 2
-13.7669999999964, 2
-13.7659999999964, 2
-13.7649999999964, 2
-13.7639999999964, 2
-13.7629999999964, 2
-13.7619999999964, 2
-13.7609999999964, 2
-13.7599999999964, 2
-13.7589999999964, 2
-13.7579999999964, 2
-13.7569999999964, 2
-13.7559999999964, 2
-13.7549999999964, 2
-13.7539999999964, 2
-13.7529999999964, 2
-13.7519999999964, 2
-13.7509999999964, 2
-13.7499999999964, 2
-13.7489999999964, 2
-13.7479999999964, 2
-13.7469999999964, 2
-13.7459999999964, 2
-13.7449999999964, 2
-13.7439999999964, 2
-13.7429999999964, 2
-13.7419999999964, 2
-13.7409999999964, 2
-13.7399999999964, 2
-13.7389999999964, 2
-13.7379999999964, 2
-13.7369999999964, 2
-13.7359999999964, 2
-13.7349999999964, 2
-13.7339999999964, 2
-13.7329999999964, 2
-13.7319999999964, 2
-13.7309999999964, 2
-13.7299999999964, 2
-13.7289999999964, 2
-13.7279999999964, 2
-13.7269999999964, 2
-13.7259999999964, 2
-13.7249999999964, 2
-13.7239999999964, 2
-13.7229999999964, 2
-13.7219999999964, 2
-13.7209999999964, 2
-13.7199999999964, 2
-13.7189999999964, 2
-13.7179999999964, 2
-13.7169999999964, 2
-13.7159999999964, 2
-13.7149999999964, 2
-13.7139999999964, 2
-13.7129999999964, 2
-13.7119999999964, 2
-13.7109999999964, 2
-13.7099999999964, 2
-13.7089999999964, 2
-13.7079999999964, 2
-13.7069999999964, 2
-13.7059999999964, 2
-13.7049999999964, 2
-13.7039999999964, 2
-13.7029999999964, 2
-13.7019999999964, 2
-13.7009999999964, 2
-13.6999999999964, 2
-13.6989999999964, 2
-13.6979999999964, 2
-13.6969999999964, 2
-13.6959999999964, 2
-13.6949999999964, 2
-13.6939999999964, 2
-13.6929999999964, 2
-13.6919999999964, 2
-13.6909999999964, 2
-13.6899999999964, 2
-13.6889999999964, 2
-13.6879999999964, 2
-13.6869999999964, 2
-13.6859999999964, 2
-13.6849999999964, 2
-13.6839999999964, 2
-13.6829999999964, 2
-13.6819999999964, 2
-13.6809999999964, 2
-13.6799999999964, 2
-13.6789999999964, 2
-13.6779999999964, 2
-13.6769999999964, 2
-13.6759999999964, 2
-13.6749999999964, 2
-13.6739999999964, 2
-13.6729999999964, 2
-13.6719999999964, 2
-13.6709999999964, 2
-13.6699999999964, 2
-13.6689999999964, 2
-13.6679999999964, 2
-13.6669999999964, 2
-13.6659999999964, 2
-13.6649999999964, 2
-13.6639999999964, 2
-13.6629999999964, 2
-13.6619999999964, 2
-13.6609999999964, 2
-13.6599999999964, 2
-13.6589999999964, 2
-13.6579999999964, 2
-13.6569999999964, 2
-13.6559999999964, 2
-13.6549999999964, 2
-13.6539999999964, 2
-13.6529999999964, 2
-13.6519999999964, 2
-13.6509999999964, 2
-13.6499999999964, 2
-13.6489999999964, 2
-13.6479999999964, 2
-13.6469999999964, 2
-13.6459999999964, 2
-13.6449999999964, 2
-13.6439999999964, 2
-13.6429999999964, 2
-13.6419999999964, 2
-13.6409999999964, 2
-13.6399999999964, 2
-13.6389999999964, 2
-13.6379999999964, 2
-13.6369999999964, 2
-13.6359999999964, 2
-13.6349999999964, 2
-13.6339999999964, 2
-13.6329999999964, 2
-13.6319999999964, 2
-13.6309999999964, 2
-13.6299999999964, 2
-13.6289999999964, 2
-13.6279999999964, 2
-13.6269999999964, 2
-13.6259999999964, 2
-13.6249999999964, 2
-13.6239999999964, 2
-13.6229999999964, 2
-13.6219999999964, 2
-13.6209999999964, 2
-13.6199999999964, 2
-13.6189999999964, 2
-13.6179999999964, 2
-13.6169999999964, 2
-13.6159999999964, 2
-13.6149999999964, 2
-13.6139999999964, 2
-13.6129999999964, 2
-13.6119999999964, 2
-13.6109999999964, 2
-13.6099999999964, 2
-13.6089999999964, 2
-13.6079999999964, 2
-13.6069999999964, 2
-13.6059999999964, 2
-13.6049999999964, 2
-13.6039999999964, 2
-13.6029999999964, 2
-13.6019999999964, 2
-13.6009999999964, 2
-13.5999999999964, 2
-13.5989999999964, 2
-13.5979999999964, 2
-13.5969999999964, 2
-13.5959999999964, 2
-13.5949999999964, 2
-13.5939999999964, 2
-13.5929999999964, 2
-13.5919999999964, 2
-13.5909999999964, 2
-13.5899999999964, 2
-13.5889999999964, 2
-13.5879999999965, 2
-13.5869999999965, 2
-13.5859999999965, 2
-13.5849999999965, 2
-13.5839999999965, 2
-13.5829999999965, 2
-13.5819999999965, 2
-13.5809999999965, 2
-13.5799999999965, 2
-13.5789999999965, 2
-13.5779999999965, 2
-13.5769999999965, 2
-13.5759999999965, 2
-13.5749999999965, 2
-13.5739999999965, 2
-13.5729999999965, 2
-13.5719999999965, 2
-13.5709999999965, 2
-13.5699999999965, 2
-13.5689999999965, 2
-13.5679999999965, 2
-13.5669999999965, 2
-13.5659999999965, 2
-13.5649999999965, 2
-13.5639999999965, 2
-13.5629999999965, 2
-13.5619999999965, 2
-13.5609999999965, 2
-13.5599999999965, 2
-13.5589999999965, 2
-13.5579999999965, 2
-13.5569999999965, 2
-13.5559999999965, 2
-13.5549999999965, 2
-13.5539999999965, 2
-13.5529999999965, 2
-13.5519999999965, 2
-13.5509999999965, 2
-13.5499999999965, 2
-13.5489999999965, 2
-13.5479999999965, 2
-13.5469999999965, 2
-13.5459999999965, 2
-13.5449999999965, 2
-13.5439999999965, 2
-13.5429999999965, 2
-13.5419999999965, 2
-13.5409999999965, 2
-13.5399999999965, 2
-13.5389999999965, 2
-13.5379999999965, 2
-13.5369999999965, 2
-13.5359999999965, 2
-13.5349999999965, 2
-13.5339999999965, 2
-13.5329999999965, 2
-13.5319999999965, 2
-13.5309999999965, 2
-13.5299999999965, 2
-13.5289999999965, 2
-13.5279999999965, 2
-13.5269999999965, 2
-13.5259999999965, 2
-13.5249999999965, 2
-13.5239999999965, 2
-13.5229999999965, 2
-13.5219999999965, 2
-13.5209999999965, 2
-13.5199999999965, 2
-13.5189999999965, 2
-13.5179999999965, 2
-13.5169999999965, 2
-13.5159999999965, 2
-13.5149999999965, 2
-13.5139999999965, 2
-13.5129999999965, 2
-13.5119999999965, 2
-13.5109999999965, 2
-13.5099999999965, 2
-13.5089999999965, 2
-13.5079999999965, 2
-13.5069999999965, 2
-13.5059999999965, 2
-13.5049999999965, 2
-13.5039999999965, 2
-13.5029999999965, 2
-13.5019999999965, 2
-13.5009999999965, 2
-13.4999999999965, 2
-13.4989999999965, 2
-13.4979999999965, 2
-13.4969999999965, 2
-13.4959999999965, 2
-13.4949999999965, 2
-13.4939999999965, 2
-13.4929999999965, 2
-13.4919999999965, 2
-13.4909999999965, 2
-13.4899999999965, 2
-13.4889999999965, 2
-13.4879999999965, 2
-13.4869999999965, 2
-13.4859999999965, 2
-13.4849999999965, 2
-13.4839999999965, 2
-13.4829999999965, 2
-13.4819999999965, 2
-13.4809999999965, 2
-13.4799999999965, 2
-13.4789999999965, 2
-13.4779999999965, 2
-13.4769999999965, 2
-13.4759999999965, 2
-13.4749999999965, 2
-13.4739999999965, 2
-13.4729999999965, 2
-13.4719999999965, 2
-13.4709999999965, 2
-13.4699999999965, 2
-13.4689999999965, 2
-13.4679999999965, 2
-13.4669999999965, 2
-13.4659999999965, 2
-13.4649999999965, 2
-13.4639999999965, 2
-13.4629999999965, 2
-13.4619999999965, 2
-13.4609999999965, 2
-13.4599999999965, 2
-13.4589999999965, 2
-13.4579999999965, 2
-13.4569999999965, 2
-13.4559999999965, 2
-13.4549999999965, 2
-13.4539999999965, 2
-13.4529999999965, 2
-13.4519999999965, 2
-13.4509999999965, 2
-13.4499999999965, 2
-13.4489999999965, 2
-13.4479999999965, 2
-13.4469999999965, 2
-13.4459999999965, 2
-13.4449999999965, 2
-13.4439999999965, 2
-13.4429999999965, 2
-13.4419999999965, 2
-13.4409999999965, 2
-13.4399999999965, 2
-13.4389999999965, 2
-13.4379999999965, 2
-13.4369999999965, 2
-13.4359999999965, 2
-13.4349999999965, 2
-13.4339999999965, 2
-13.4329999999965, 2
-13.4319999999965, 2
-13.4309999999965, 2
-13.4299999999965, 2
-13.4289999999965, 2
-13.4279999999965, 2
-13.4269999999965, 2
-13.4259999999965, 2
-13.4249999999965, 2
-13.4239999999965, 2
-13.4229999999965, 2
-13.4219999999965, 2
-13.4209999999965, 2
-13.4199999999965, 2
-13.4189999999965, 2
-13.4179999999965, 2
-13.4169999999965, 2
-13.4159999999965, 2
-13.4149999999965, 2
-13.4139999999965, 2
-13.4129999999965, 2
-13.4119999999965, 2
-13.4109999999965, 2
-13.4099999999965, 2
-13.4089999999965, 2
-13.4079999999966, 2
-13.4069999999966, 2
-13.4059999999966, 2
-13.4049999999966, 2
-13.4039999999966, 2
-13.4029999999966, 2
-13.4019999999966, 2
-13.4009999999966, 2
-13.3999999999966, 2
-13.3989999999966, 2
-13.3979999999966, 2
-13.3969999999966, 2
-13.3959999999966, 2
-13.3949999999966, 2
-13.3939999999966, 2
-13.3929999999966, 2
-13.3919999999966, 2
-13.3909999999966, 2
-13.3899999999966, 2
-13.3889999999966, 2
-13.3879999999966, 2
-13.3869999999966, 2
-13.3859999999966, 2
-13.3849999999966, 2
-13.3839999999966, 2
-13.3829999999966, 2
-13.3819999999966, 2
-13.3809999999966, 2
-13.3799999999966, 2
-13.3789999999966, 2
-13.3779999999966, 2
-13.3769999999966, 2
-13.3759999999966, 2
-13.3749999999966, 2
-13.3739999999966, 2
-13.3729999999966, 2
-13.3719999999966, 2
-13.3709999999966, 2
-13.3699999999966, 2
-13.3689999999966, 2
-13.3679999999966, 2
-13.3669999999966, 2
-13.3659999999966, 2
-13.3649999999966, 2
-13.3639999999966, 2
-13.3629999999966, 2
-13.3619999999966, 2
-13.3609999999966, 2
-13.3599999999966, 2
-13.3589999999966, 2
-13.3579999999966, 2
-13.3569999999966, 2
-13.3559999999966, 2
-13.3549999999966, 2
-13.3539999999966, 2
-13.3529999999966, 2
-13.3519999999966, 2
-13.3509999999966, 2
-13.3499999999966, 2
-13.3489999999966, 2
-13.3479999999966, 2
-13.3469999999966, 2
-13.3459999999966, 2
-13.3449999999966, 2
-13.3439999999966, 2
-13.3429999999966, 2
-13.3419999999966, 2
-13.3409999999966, 2
-13.3399999999966, 2
-13.3389999999966, 2
-13.3379999999966, 2
-13.3369999999966, 2
-13.3359999999966, 2
-13.3349999999966, 2
-13.3339999999966, 2
-13.3329999999966, 2
-13.3319999999966, 2
-13.3309999999966, 2
-13.3299999999966, 2
-13.3289999999966, 2
-13.3279999999966, 2
-13.3269999999966, 2
-13.3259999999966, 2
-13.3249999999966, 2
-13.3239999999966, 2
-13.3229999999966, 2
-13.3219999999966, 2
-13.3209999999966, 2
-13.3199999999966, 2
-13.3189999999966, 2
-13.3179999999966, 2
-13.3169999999966, 2
-13.3159999999966, 2
-13.3149999999966, 2
-13.3139999999966, 2
-13.3129999999966, 2
-13.3119999999966, 2
-13.3109999999966, 2
-13.3099999999966, 2
-13.3089999999966, 2
-13.3079999999966, 2
-13.3069999999966, 2
-13.3059999999966, 2
-13.3049999999966, 2
-13.3039999999966, 2
-13.3029999999966, 2
-13.3019999999966, 2
-13.3009999999966, 2
-13.2999999999966, 2
-13.2989999999966, 2
-13.2979999999966, 2
-13.2969999999966, 2
-13.2959999999966, 2
-13.2949999999966, 2
-13.2939999999966, 2
-13.2929999999966, 2
-13.2919999999966, 2
-13.2909999999966, 2
-13.2899999999966, 2
-13.2889999999966, 2
-13.2879999999966, 2
-13.2869999999966, 2
-13.2859999999966, 2
-13.2849999999966, 2
-13.2839999999966, 2
-13.2829999999966, 2
-13.2819999999966, 2
-13.2809999999966, 2
-13.2799999999966, 2
-13.2789999999966, 2
-13.2779999999966, 2
-13.2769999999966, 2
-13.2759999999966, 2
-13.2749999999966, 2
-13.2739999999966, 2
-13.2729999999966, 2
-13.2719999999966, 2
-13.2709999999966, 2
-13.2699999999966, 2
-13.2689999999966, 2
-13.2679999999966, 2
-13.2669999999966, 2
-13.2659999999966, 2
-13.2649999999966, 2
-13.2639999999966, 2
-13.2629999999966, 2
-13.2619999999966, 2
-13.2609999999966, 2
-13.2599999999966, 2
-13.2589999999966, 2
-13.2579999999966, 2
-13.2569999999966, 2
-13.2559999999966, 2
-13.2549999999966, 2
-13.2539999999966, 2
-13.2529999999966, 2
-13.2519999999966, 2
-13.2509999999966, 2
-13.2499999999966, 2
-13.2489999999966, 2
-13.2479999999966, 2
-13.2469999999966, 2
-13.2459999999966, 2
-13.2449999999966, 2
-13.2439999999966, 2
-13.2429999999966, 2
-13.2419999999966, 2
-13.2409999999966, 2
-13.2399999999966, 2
-13.2389999999966, 2
-13.2379999999966, 2
-13.2369999999966, 2
-13.2359999999966, 2
-13.2349999999966, 2
-13.2339999999966, 2
-13.2329999999966, 2
-13.2319999999966, 2
-13.2309999999966, 2
-13.2299999999966, 2
-13.2289999999966, 2
-13.2279999999967, 2
-13.2269999999967, 2
-13.2259999999967, 2
-13.2249999999967, 2
-13.2239999999967, 2
-13.2229999999967, 2
-13.2219999999967, 2
-13.2209999999967, 2
-13.2199999999967, 2
-13.2189999999967, 2
-13.2179999999967, 2
-13.2169999999967, 2
-13.2159999999967, 2
-13.2149999999967, 2
-13.2139999999967, 2
-13.2129999999967, 2
-13.2119999999967, 2
-13.2109999999967, 2
-13.2099999999967, 2
-13.2089999999967, 2
-13.2079999999967, 2
-13.2069999999967, 2
-13.2059999999967, 2
-13.2049999999967, 2
-13.2039999999967, 2
-13.2029999999967, 2
-13.2019999999967, 2
-13.2009999999967, 2
-13.1999999999967, 2
-13.1989999999967, 2
-13.1979999999967, 2
-13.1969999999967, 2
-13.1959999999967, 2
-13.1949999999967, 2
-13.1939999999967, 2
-13.1929999999967, 2
-13.1919999999967, 2
-13.1909999999967, 2
-13.1899999999967, 2
-13.1889999999967, 2
-13.1879999999967, 2
-13.1869999999967, 2
-13.1859999999967, 2
-13.1849999999967, 2
-13.1839999999967, 2
-13.1829999999967, 2
-13.1819999999967, 2
-13.1809999999967, 2
-13.1799999999967, 2
-13.1789999999967, 2
-13.1779999999967, 2
-13.1769999999967, 2
-13.1759999999967, 2
-13.1749999999967, 2
-13.1739999999967, 2
-13.1729999999967, 2
-13.1719999999967, 2
-13.1709999999967, 2
-13.1699999999967, 2
-13.1689999999967, 2
-13.1679999999967, 2
-13.1669999999967, 2
-13.1659999999967, 2
-13.1649999999967, 2
-13.1639999999967, 2
-13.1629999999967, 2
-13.1619999999967, 2
-13.1609999999967, 2
-13.1599999999967, 2
-13.1589999999967, 2
-13.1579999999967, 2
-13.1569999999967, 2
-13.1559999999967, 2
-13.1549999999967, 2
-13.1539999999967, 2
-13.1529999999967, 2
-13.1519999999967, 2
-13.1509999999967, 2
-13.1499999999967, 2
-13.1489999999967, 2
-13.1479999999967, 2
-13.1469999999967, 2
-13.1459999999967, 2
-13.1449999999967, 2
-13.1439999999967, 2
-13.1429999999967, 2
-13.1419999999967, 2
-13.1409999999967, 2
-13.1399999999967, 2
-13.1389999999967, 2
-13.1379999999967, 2
-13.1369999999967, 2
-13.1359999999967, 2
-13.1349999999967, 2
-13.1339999999967, 2
-13.1329999999967, 2
-13.1319999999967, 2
-13.1309999999967, 2
-13.1299999999967, 2
-13.1289999999967, 2
-13.1279999999967, 2
-13.1269999999967, 2
-13.1259999999967, 2
-13.1249999999967, 2
-13.1239999999967, 2
-13.1229999999967, 2
-13.1219999999967, 2
-13.1209999999967, 2
-13.1199999999967, 2
-13.1189999999967, 2
-13.1179999999967, 2
-13.1169999999967, 2
-13.1159999999967, 2
-13.1149999999967, 2
-13.1139999999967, 2
-13.1129999999967, 2
-13.1119999999967, 2
-13.1109999999967, 2
-13.1099999999967, 2
-13.1089999999967, 2
-13.1079999999967, 2
-13.1069999999967, 2
-13.1059999999967, 2
-13.1049999999967, 2
-13.1039999999967, 2
-13.1029999999967, 2
-13.1019999999967, 2
-13.1009999999967, 2
-13.0999999999967, 2
-13.0989999999967, 2
-13.0979999999967, 2
-13.0969999999967, 2
-13.0959999999967, 2
-13.0949999999967, 2
-13.0939999999967, 2
-13.0929999999967, 2
-13.0919999999967, 2
-13.0909999999967, 2
-13.0899999999967, 2
-13.0889999999967, 2
-13.0879999999967, 2
-13.0869999999967, 2
-13.0859999999967, 2
-13.0849999999967, 2
-13.0839999999967, 2
-13.0829999999967, 2
-13.0819999999967, 2
-13.0809999999967, 2
-13.0799999999967, 2
-13.0789999999967, 2
-13.0779999999967, 2
-13.0769999999967, 2
-13.0759999999967, 2
-13.0749999999967, 2
-13.0739999999967, 2
-13.0729999999967, 2
-13.0719999999967, 2
-13.0709999999967, 2
-13.0699999999967, 2
-13.0689999999967, 2
-13.0679999999967, 2
-13.0669999999967, 2
-13.0659999999967, 2
-13.0649999999967, 2
-13.0639999999967, 2
-13.0629999999967, 2
-13.0619999999967, 2
-13.0609999999967, 2
-13.0599999999967, 2
-13.0589999999967, 2
-13.0579999999967, 2
-13.0569999999967, 2
-13.0559999999967, 2
-13.0549999999967, 2
-13.0539999999967, 2
-13.0529999999967, 2
-13.0519999999967, 2
-13.0509999999967, 2
-13.0499999999967, 2
-13.0489999999967, 2
-13.0479999999967, 2
-13.0469999999968, 2
-13.0459999999968, 2
-13.0449999999968, 2
-13.0439999999968, 2
-13.0429999999968, 2
-13.0419999999968, 2
-13.0409999999968, 2
-13.0399999999968, 2
-13.0389999999968, 2
-13.0379999999968, 2
-13.0369999999968, 2
-13.0359999999968, 2
-13.0349999999968, 2
-13.0339999999968, 2
-13.0329999999968, 2
-13.0319999999968, 2
-13.0309999999968, 2
-13.0299999999968, 2
-13.0289999999968, 2
-13.0279999999968, 2
-13.0269999999968, 2
-13.0259999999968, 2
-13.0249999999968, 2
-13.0239999999968, 2
-13.0229999999968, 2
-13.0219999999968, 2
-13.0209999999968, 2
-13.0199999999968, 2
-13.0189999999968, 2
-13.0179999999968, 2
-13.0169999999968, 2
-13.0159999999968, 2
-13.0149999999968, 2
-13.0139999999968, 2
-13.0129999999968, 2
-13.0119999999968, 2
-13.0109999999968, 2
-13.0099999999968, 2
-13.0089999999968, 2
-13.0079999999968, 2
-13.0069999999968, 2
-13.0059999999968, 2
-13.0049999999968, 2
-13.0039999999968, 2
-13.0029999999968, 2
-13.0019999999968, 2
-13.0009999999968, 2
-12.9999999999968, 2
-12.9989999999968, 2
-12.9979999999968, 2
-12.9969999999968, 2
-12.9959999999968, 2
-12.9949999999968, 2
-12.9939999999968, 2
-12.9929999999968, 2
-12.9919999999968, 2
-12.9909999999968, 2
-12.9899999999968, 2
-12.9889999999968, 2
-12.9879999999968, 2
-12.9869999999968, 2
-12.9859999999968, 2
-12.9849999999968, 2
-12.9839999999968, 2
-12.9829999999968, 2
-12.9819999999968, 2
-12.9809999999968, 2
-12.9799999999968, 2
-12.9789999999968, 2
-12.9779999999968, 2
-12.9769999999968, 2
-12.9759999999968, 2
-12.9749999999968, 2
-12.9739999999968, 2
-12.9729999999968, 2
-12.9719999999968, 2
-12.9709999999968, 2
-12.9699999999968, 2
-12.9689999999968, 2
-12.9679999999968, 2
-12.9669999999968, 2
-12.9659999999968, 2
-12.9649999999968, 2
-12.9639999999968, 2
-12.9629999999968, 2
-12.9619999999968, 2
-12.9609999999968, 2
-12.9599999999968, 2
-12.9589999999968, 2
-12.9579999999968, 2
-12.9569999999968, 2
-12.9559999999968, 2
-12.9549999999968, 2
-12.9539999999968, 2
-12.9529999999968, 2
-12.9519999999968, 2
-12.9509999999968, 2
-12.9499999999968, 2
-12.9489999999968, 2
-12.9479999999968, 2
-12.9469999999968, 2
-12.9459999999968, 2
-12.9449999999968, 2
-12.9439999999968, 2
-12.9429999999968, 2
-12.9419999999968, 2
-12.9409999999968, 2
-12.9399999999968, 2
-12.9389999999968, 2
-12.9379999999968, 2
-12.9369999999968, 2
-12.9359999999968, 2
-12.9349999999968, 2
-12.9339999999968, 2
-12.9329999999968, 2
-12.9319999999968, 2
-12.9309999999968, 2
-12.9299999999968, 2
-12.9289999999968, 2
-12.9279999999968, 2
-12.9269999999968, 2
-12.9259999999968, 2
-12.9249999999968, 2
-12.9239999999968, 2
-12.9229999999968, 2
-12.9219999999968, 2
-12.9209999999968, 2
-12.9199999999968, 2
-12.9189999999968, 2
-12.9179999999968, 2
-12.9169999999968, 2
-12.9159999999968, 2
-12.9149999999968, 2
-12.9139999999968, 2
-12.9129999999968, 2
-12.9119999999968, 2
-12.9109999999968, 2
-12.9099999999968, 2
-12.9089999999968, 2
-12.9079999999968, 2
-12.9069999999968, 2
-12.9059999999968, 2
-12.9049999999968, 2
-12.9039999999968, 2
-12.9029999999968, 2
-12.9019999999968, 2
-12.9009999999968, 2
-12.8999999999968, 2
-12.8989999999968, 2
-12.8979999999968, 2
-12.8969999999968, 2
-12.8959999999968, 2
-12.8949999999968, 2
-12.8939999999968, 2
-12.8929999999968, 2
-12.8919999999968, 2
-12.8909999999968, 2
-12.8899999999968, 2
-12.8889999999968, 2
-12.8879999999968, 2
-12.8869999999968, 2
-12.8859999999968, 2
-12.8849999999968, 2
-12.8839999999968, 2
-12.8829999999968, 2
-12.8819999999968, 2
-12.8809999999968, 2
-12.8799999999968, 2
-12.8789999999968, 2
-12.8779999999968, 2
-12.8769999999968, 2
-12.8759999999968, 2
-12.8749999999968, 2
-12.8739999999968, 2
-12.8729999999968, 2
-12.8719999999968, 2
-12.8709999999968, 2
-12.8699999999968, 2
-12.8689999999968, 2
-12.8679999999968, 2
-12.8669999999969, 2
-12.8659999999969, 2
-12.8649999999969, 2
-12.8639999999969, 2
-12.8629999999969, 2
-12.8619999999969, 2
-12.8609999999969, 2
-12.8599999999969, 2
-12.8589999999969, 2
-12.8579999999969, 2
-12.8569999999969, 2
-12.8559999999969, 2
-12.8549999999969, 2
-12.8539999999969, 2
-12.8529999999969, 2
-12.8519999999969, 2
-12.8509999999969, 2
-12.8499999999969, 2
-12.8489999999969, 2
-12.8479999999969, 2
-12.8469999999969, 2
-12.8459999999969, 2
-12.8449999999969, 2
-12.8439999999969, 2
-12.8429999999969, 2
-12.8419999999969, 2
-12.8409999999969, 2
-12.8399999999969, 2
-12.8389999999969, 2
-12.8379999999969, 2
-12.8369999999969, 2
-12.8359999999969, 2
-12.8349999999969, 2
-12.8339999999969, 2
-12.8329999999969, 2
-12.8319999999969, 2
-12.8309999999969, 2
-12.8299999999969, 2
-12.8289999999969, 2
-12.8279999999969, 2
-12.8269999999969, 2
-12.8259999999969, 2
-12.8249999999969, 2
-12.8239999999969, 2
-12.8229999999969, 2
-12.8219999999969, 2
-12.8209999999969, 2
-12.8199999999969, 2
-12.8189999999969, 2
-12.8179999999969, 2
-12.8169999999969, 2
-12.8159999999969, 2
-12.8149999999969, 2
-12.8139999999969, 2
-12.8129999999969, 2
-12.8119999999969, 2
-12.8109999999969, 2
-12.8099999999969, 2
-12.8089999999969, 2
-12.8079999999969, 2
-12.8069999999969, 2
-12.8059999999969, 2
-12.8049999999969, 2
-12.8039999999969, 2
-12.8029999999969, 2
-12.8019999999969, 2
-12.8009999999969, 2
-12.7999999999969, 2
-12.7989999999969, 2
-12.7979999999969, 2
-12.7969999999969, 2
-12.7959999999969, 2
-12.7949999999969, 2
-12.7939999999969, 2
-12.7929999999969, 2
-12.7919999999969, 2
-12.7909999999969, 2
-12.7899999999969, 2
-12.7889999999969, 2
-12.7879999999969, 2
-12.7869999999969, 2
-12.7859999999969, 2
-12.7849999999969, 2
-12.7839999999969, 2
-12.7829999999969, 2
-12.7819999999969, 2
-12.7809999999969, 2
-12.7799999999969, 2
-12.7789999999969, 2
-12.7779999999969, 2
-12.7769999999969, 2
-12.7759999999969, 2
-12.7749999999969, 2
-12.7739999999969, 2
-12.7729999999969, 2
-12.7719999999969, 2
-12.7709999999969, 2
-12.7699999999969, 2
-12.7689999999969, 2
-12.7679999999969, 2
-12.7669999999969, 2
-12.7659999999969, 2
-12.7649999999969, 2
-12.7639999999969, 2
-12.7629999999969, 2
-12.7619999999969, 2
-12.7609999999969, 2
-12.7599999999969, 2
-12.7589999999969, 2
-12.7579999999969, 2
-12.7569999999969, 2
-12.7559999999969, 2
-12.7549999999969, 2
-12.7539999999969, 2
-12.7529999999969, 2
-12.7519999999969, 2
-12.7509999999969, 2
-12.7499999999969, 2
-12.7489999999969, 2
-12.7479999999969, 2
-12.7469999999969, 2
-12.7459999999969, 2
-12.7449999999969, 2
-12.7439999999969, 2
-12.7429999999969, 2
-12.7419999999969, 2
-12.7409999999969, 2
-12.7399999999969, 2
-12.7389999999969, 2
-12.7379999999969, 2
-12.7369999999969, 2
-12.7359999999969, 2
-12.7349999999969, 2
-12.7339999999969, 2
-12.7329999999969, 2
-12.7319999999969, 2
-12.7309999999969, 2
-12.7299999999969, 2
-12.7289999999969, 2
-12.7279999999969, 2
-12.7269999999969, 2
-12.7259999999969, 2
-12.7249999999969, 2
-12.7239999999969, 2
-12.7229999999969, 2
-12.7219999999969, 2
-12.7209999999969, 2
-12.7199999999969, 2
-12.7189999999969, 2
-12.7179999999969, 2
-12.7169999999969, 2
-12.7159999999969, 2
-12.7149999999969, 2
-12.7139999999969, 2
-12.7129999999969, 2
-12.7119999999969, 2
-12.7109999999969, 2
-12.7099999999969, 2
-12.7089999999969, 2
-12.7079999999969, 2
-12.7069999999969, 2
-12.7059999999969, 2
-12.7049999999969, 2
-12.7039999999969, 2
-12.7029999999969, 2
-12.7019999999969, 2
-12.7009999999969, 2
-12.6999999999969, 2
-12.6989999999969, 2
-12.6979999999969, 2
-12.6969999999969, 2
-12.6959999999969, 2
-12.6949999999969, 2
-12.6939999999969, 2
-12.6929999999969, 2
-12.6919999999969, 2
-12.6909999999969, 2
-12.6899999999969, 2
-12.6889999999969, 2
-12.6879999999969, 2
-12.6869999999969, 2
-12.685999999997, 2
-12.684999999997, 2
-12.683999999997, 2
-12.682999999997, 2
-12.681999999997, 2
-12.680999999997, 2
-12.679999999997, 2
-12.678999999997, 2
-12.677999999997, 2
-12.676999999997, 2
-12.675999999997, 2
-12.674999999997, 2
-12.673999999997, 2
-12.672999999997, 2
-12.671999999997, 2
-12.670999999997, 2
-12.669999999997, 2
-12.668999999997, 2
-12.667999999997, 2
-12.666999999997, 2
-12.665999999997, 2
-12.664999999997, 2
-12.663999999997, 2
-12.662999999997, 2
-12.661999999997, 2
-12.660999999997, 2
-12.659999999997, 2
-12.658999999997, 2
-12.657999999997, 2
-12.656999999997, 2
-12.655999999997, 2
-12.654999999997, 2
-12.653999999997, 2
-12.652999999997, 2
-12.651999999997, 2
-12.650999999997, 2
-12.649999999997, 2
-12.648999999997, 2
-12.647999999997, 2
-12.646999999997, 2
-12.645999999997, 2
-12.644999999997, 2
-12.643999999997, 2
-12.642999999997, 2
-12.641999999997, 2
-12.640999999997, 2
-12.639999999997, 2
-12.638999999997, 2
-12.637999999997, 2
-12.636999999997, 2
-12.635999999997, 2
-12.634999999997, 2
-12.633999999997, 2
-12.632999999997, 2
-12.631999999997, 2
-12.630999999997, 2
-12.629999999997, 2
-12.628999999997, 2
-12.627999999997, 2
-12.626999999997, 2
-12.625999999997, 2
-12.624999999997, 2
-12.623999999997, 2
-12.622999999997, 2
-12.621999999997, 2
-12.620999999997, 2
-12.619999999997, 2
-12.618999999997, 2
-12.617999999997, 2
-12.616999999997, 2
-12.615999999997, 2
-12.614999999997, 2
-12.613999999997, 2
-12.612999999997, 2
-12.611999999997, 2
-12.610999999997, 2
-12.609999999997, 2
-12.608999999997, 2
-12.607999999997, 2
-12.606999999997, 2
-12.605999999997, 2
-12.604999999997, 2
-12.603999999997, 2
-12.602999999997, 2
-12.601999999997, 2
-12.600999999997, 2
-12.599999999997, 2
-12.598999999997, 2
-12.597999999997, 2
-12.596999999997, 2
-12.595999999997, 2
-12.594999999997, 2
-12.593999999997, 2
-12.592999999997, 2
-12.591999999997, 2
-12.590999999997, 2
-12.589999999997, 2
-12.588999999997, 2
-12.587999999997, 2
-12.586999999997, 2
-12.585999999997, 2
-12.584999999997, 2
-12.583999999997, 2
-12.582999999997, 2
-12.581999999997, 2
-12.580999999997, 2
-12.579999999997, 2
-12.578999999997, 2
-12.577999999997, 2
-12.576999999997, 2
-12.575999999997, 2
-12.574999999997, 2
-12.573999999997, 2
-12.572999999997, 2
-12.571999999997, 2
-12.570999999997, 2
-12.569999999997, 2
-12.568999999997, 2
-12.567999999997, 2
-12.566999999997, 2
-12.565999999997, 2
-12.564999999997, 2
-12.563999999997, 2
-12.562999999997, 2
-12.561999999997, 2
-12.560999999997, 2
-12.559999999997, 2
-12.558999999997, 2
-12.557999999997, 2
-12.556999999997, 2
-12.555999999997, 2
-12.554999999997, 2
-12.553999999997, 2
-12.552999999997, 2
-12.551999999997, 2
-12.550999999997, 2
-12.549999999997, 2
-12.548999999997, 2
-12.547999999997, 2
-12.546999999997, 2
-12.545999999997, 2
-12.544999999997, 2
-12.543999999997, 2
-12.542999999997, 2
-12.541999999997, 2
-12.540999999997, 2
-12.539999999997, 2
-12.538999999997, 2
-12.537999999997, 2
-12.536999999997, 2
-12.535999999997, 2
-12.534999999997, 2
-12.533999999997, 2
-12.532999999997, 2
-12.531999999997, 2
-12.530999999997, 2
-12.529999999997, 2
-12.528999999997, 2
-12.527999999997, 2
-12.526999999997, 2
-12.525999999997, 2
-12.524999999997, 2
-12.523999999997, 2
-12.522999999997, 2
-12.521999999997, 2
-12.520999999997, 2
-12.519999999997, 2
-12.518999999997, 2
-12.517999999997, 2
-12.516999999997, 2
-12.515999999997, 2
-12.514999999997, 2
-12.513999999997, 2
-12.512999999997, 2
-12.511999999997, 2
-12.510999999997, 2
-12.509999999997, 2
-12.508999999997, 2
-12.507999999997, 2
-12.506999999997, 2
-12.5059999999971, 2
-12.5049999999971, 2
-12.5039999999971, 2
-12.5029999999971, 2
-12.5019999999971, 2
-12.5009999999971, 2
-12.4999999999971, 2
-12.4989999999971, 2
-12.4979999999971, 2
-12.4969999999971, 2
-12.4959999999971, 2
-12.4949999999971, 2
-12.4939999999971, 2
-12.4929999999971, 2
-12.4919999999971, 2
-12.4909999999971, 2
-12.4899999999971, 2
-12.4889999999971, 2
-12.4879999999971, 2
-12.4869999999971, 2
-12.4859999999971, 2
-12.4849999999971, 2
-12.4839999999971, 2
-12.4829999999971, 2
-12.4819999999971, 2
-12.4809999999971, 2
-12.4799999999971, 2
-12.4789999999971, 2
-12.4779999999971, 2
-12.4769999999971, 2
-12.4759999999971, 2
-12.4749999999971, 2
-12.4739999999971, 2
-12.4729999999971, 2
-12.4719999999971, 2
-12.4709999999971, 2
-12.4699999999971, 2
-12.4689999999971, 2
-12.4679999999971, 2
-12.4669999999971, 2
-12.4659999999971, 2
-12.4649999999971, 2
-12.4639999999971, 2
-12.4629999999971, 2
-12.4619999999971, 2
-12.4609999999971, 2
-12.4599999999971, 2
-12.4589999999971, 2
-12.4579999999971, 2
-12.4569999999971, 2
-12.4559999999971, 2
-12.4549999999971, 2
-12.4539999999971, 2
-12.4529999999971, 2
-12.4519999999971, 2
-12.4509999999971, 2
-12.4499999999971, 2
-12.4489999999971, 2
-12.4479999999971, 2
-12.4469999999971, 2
-12.4459999999971, 2
-12.4449999999971, 2
-12.4439999999971, 2
-12.4429999999971, 2
-12.4419999999971, 2
-12.4409999999971, 2
-12.4399999999971, 2
-12.4389999999971, 2
-12.4379999999971, 2
-12.4369999999971, 2
-12.4359999999971, 2
-12.4349999999971, 2
-12.4339999999971, 2
-12.4329999999971, 2
-12.4319999999971, 2
-12.4309999999971, 2
-12.4299999999971, 2
-12.4289999999971, 2
-12.4279999999971, 2
-12.4269999999971, 2
-12.4259999999971, 2
-12.4249999999971, 2
-12.4239999999971, 2
-12.4229999999971, 2
-12.4219999999971, 2
-12.4209999999971, 2
-12.4199999999971, 2
-12.4189999999971, 2
-12.4179999999971, 2
-12.4169999999971, 2
-12.4159999999971, 2
-12.4149999999971, 2
-12.4139999999971, 2
-12.4129999999971, 2
-12.4119999999971, 2
-12.4109999999971, 2
-12.4099999999971, 2
-12.4089999999971, 2
-12.4079999999971, 2
-12.4069999999971, 2
-12.4059999999971, 2
-12.4049999999971, 2
-12.4039999999971, 2
-12.4029999999971, 2
-12.4019999999971, 2
-12.4009999999971, 2
-12.3999999999971, 2
-12.3989999999971, 2
-12.3979999999971, 2
-12.3969999999971, 2
-12.3959999999971, 2
-12.3949999999971, 2
-12.3939999999971, 2
-12.3929999999971, 2
-12.3919999999971, 2
-12.3909999999971, 2
-12.3899999999971, 2
-12.3889999999971, 2
-12.3879999999971, 2
-12.3869999999971, 2
-12.3859999999971, 2
-12.3849999999971, 2
-12.3839999999971, 2
-12.3829999999971, 2
-12.3819999999971, 2
-12.3809999999971, 2
-12.3799999999971, 2
-12.3789999999971, 2
-12.3779999999971, 2
-12.3769999999971, 2
-12.3759999999971, 2
-12.3749999999971, 2
-12.3739999999971, 2
-12.3729999999971, 2
-12.3719999999971, 2
-12.3709999999971, 2
-12.3699999999971, 2
-12.3689999999971, 2
-12.3679999999971, 2
-12.3669999999971, 2
-12.3659999999971, 2
-12.3649999999971, 2
-12.3639999999971, 2
-12.3629999999971, 2
-12.3619999999971, 2
-12.3609999999971, 2
-12.3599999999971, 2
-12.3589999999971, 2
-12.3579999999971, 2
-12.3569999999971, 2
-12.3559999999971, 2
-12.3549999999971, 2
-12.3539999999971, 2
-12.3529999999971, 2
-12.3519999999971, 2